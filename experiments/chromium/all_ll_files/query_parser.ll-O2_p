; ModuleID = '../../components/query_parser/query_parser.cc'
source_filename = "../../components/query_parser/query_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.query_parser::QueryNodeWord" = type { %"class.query_parser::QueryNode", %"class.std::__1::basic_string", i8, i32 }
%"class.query_parser::QueryNode" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.query_parser::QueryNodeList" = type { %"class.query_parser::QueryNode", %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.query_parser::QueryNode"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::unique_ptr"* }
%"class.query_parser::QueryNodePhrase" = type { %"class.query_parser::QueryNodeList" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"*, %"class.std::__1::__compressed_pair.1" }
%"struct.query_parser::QueryWord" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.query_parser::QueryWord"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::basic_string"* }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.query_parser::QueryNodeList"**, %"class.query_parser::QueryNodeList"**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.query_parser::QueryNodeList"** }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN12query_parser9QueryNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__16vectorIN12query_parser9QueryWordENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16__sortIRPFiRKNS_4pairImmEES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_ = comdat any

$_ZNSt3__17__sort5IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFiRKNS_4pairImmEES4_EPS2_EEbT0_S9_T_ = comdat any

@_ZTVN12query_parser13QueryNodeWordE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.query_parser::QueryNodeWord"*)* @_ZN12query_parser13QueryNodeWordD2Ev to i8*), i8* bitcast (void (%"class.query_parser::QueryNodeWord"*)* @_ZN12query_parser13QueryNodeWordD0Ev to i8*), i8* bitcast (i32 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*)* @_ZNK12query_parser13QueryNodeWord19AppendToSQLiteQueryEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeWord"*)* @_ZNK12query_parser13QueryNodeWord6IsWordEv to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)* @_ZNK12query_parser13QueryNodeWord7MatchesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)* @_ZNK12query_parser13QueryNodeWord10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEEPNS2_INS1_4pairImmEENS4_ISA_EEEE to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::vector"*)* @_ZNK12query_parser13QueryNodeWord10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::vector.13"*)* @_ZNK12query_parser13QueryNodeWord11AppendWordsEPNSt3__16vectorINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS6_IS8_EEEE to i8*)] }, align 8
@_ZTVN12query_parser13QueryNodeListE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.query_parser::QueryNodeList"*)* @_ZN12query_parser13QueryNodeListD2Ev to i8*), i8* bitcast (void (%"class.query_parser::QueryNodeList"*)* @_ZN12query_parser13QueryNodeListD0Ev to i8*), i8* bitcast (i32 (%"class.query_parser::QueryNodeList"*, %"class.std::__1::basic_string"*)* @_ZNK12query_parser13QueryNodeList19AppendToSQLiteQueryEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeList"*)* @_ZNK12query_parser13QueryNodeList6IsWordEv to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeList"*, %"class.std::__1::basic_string"*, i1)* @_ZNK12query_parser13QueryNodeList7MatchesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeList"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)* @_ZNK12query_parser13QueryNodeList10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEEPNS2_INS1_4pairImmEENS4_ISA_EEEE to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeList"*, %"class.std::__1::vector"*)* @_ZNK12query_parser13QueryNodeList10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.query_parser::QueryNodeList"*, %"class.std::__1::vector.13"*)* @_ZNK12query_parser13QueryNodeList11AppendWordsEPNSt3__16vectorINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS6_IS8_EEEE to i8*)] }, align 8
@_ZTVN12query_parser15QueryNodePhraseE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.query_parser::QueryNodeList"*)* @_ZN12query_parser13QueryNodeListD2Ev to i8*), i8* bitcast (void (%"class.query_parser::QueryNodePhrase"*)* @_ZN12query_parser15QueryNodePhraseD0Ev to i8*), i8* bitcast (i32 (%"class.query_parser::QueryNodePhrase"*, %"class.std::__1::basic_string"*)* @_ZNK12query_parser15QueryNodePhrase19AppendToSQLiteQueryEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeList"*)* @_ZNK12query_parser13QueryNodeList6IsWordEv to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodeList"*, %"class.std::__1::basic_string"*, i1)* @_ZNK12query_parser13QueryNodeList7MatchesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodePhrase"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)* @_ZNK12query_parser15QueryNodePhrase10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEEPNS2_INS1_4pairImmEENS4_ISA_EEEE to i8*), i8* bitcast (i1 (%"class.query_parser::QueryNodePhrase"*, %"class.std::__1::vector"*)* @_ZNK12query_parser15QueryNodePhrase10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.query_parser::QueryNodeList"*, %"class.std::__1::vector.13"*)* @_ZNK12query_parser13QueryNodeList11AppendWordsEPNSt3__16vectorINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS6_IS8_EEEE to i8*)] }, align 8

@_ZN12query_parser13QueryNodeWordC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmE = hidden unnamed_addr alias void (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i32), void (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i32)* @_ZN12query_parser13QueryNodeWordC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmE
@_ZN12query_parser13QueryNodeWordD1Ev = hidden unnamed_addr alias void (%"class.query_parser::QueryNodeWord"*), void (%"class.query_parser::QueryNodeWord"*)* @_ZN12query_parser13QueryNodeWordD2Ev
@_ZN12query_parser13QueryNodeListC1Ev = hidden unnamed_addr alias void (%"class.query_parser::QueryNodeList"*), void (%"class.query_parser::QueryNodeList"*)* @_ZN12query_parser13QueryNodeListC2Ev
@_ZN12query_parser13QueryNodeListD1Ev = hidden unnamed_addr alias void (%"class.query_parser::QueryNodeList"*), void (%"class.query_parser::QueryNodeList"*)* @_ZN12query_parser13QueryNodeListD2Ev
@_ZN12query_parser15QueryNodePhraseC1Ev = hidden unnamed_addr alias void (%"class.query_parser::QueryNodePhrase"*), void (%"class.query_parser::QueryNodePhrase"*)* @_ZN12query_parser15QueryNodePhraseC2Ev
@_ZN12query_parser15QueryNodePhraseD2Ev = hidden unnamed_addr alias void (%"class.query_parser::QueryNodePhrase"*), bitcast (void (%"class.query_parser::QueryNodeList"*)* @_ZN12query_parser13QueryNodeListD2Ev to void (%"class.query_parser::QueryNodePhrase"*)*)
@_ZN12query_parser15QueryNodePhraseD1Ev = hidden unnamed_addr alias void (%"class.query_parser::QueryNodePhrase"*), bitcast (void (%"class.query_parser::QueryNodeList"*)* @_ZN12query_parser13QueryNodeListD2Ev to void (%"class.query_parser::QueryNodePhrase"*)*)

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeWordC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmE(%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeWordE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #11
  br label %188

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #12
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #12
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #13
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 2
  store i8 0, i8* %189, align 8
  %190 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 3
  store i32 %2, i32* %190, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeWordD2Ev(%"class.query_parser::QueryNodeWord"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeWordE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeWordD0Ev(%"class.query_parser::QueryNodeWord"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeWordE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.query_parser::QueryNodeWord"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12query_parser13QueryNodeWord19AppendToSQLiteQueryEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i16* %9, i16* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %29

27:                                               ; preds = %2
  %28 = zext i8 %18 to i64
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i64 [ %24, %20 ], [ 10, %27 ]
  %31 = phi i64 [ %26, %20 ], [ %28, %27 ]
  %32 = sub i64 %30, %31
  %33 = icmp ult i64 %32, %15
  br i1 %33, label %198, label %34

34:                                               ; preds = %29
  %35 = icmp eq i64 %15, 0
  br i1 %35, label %201, label %36

36:                                               ; preds = %34
  br i1 %19, label %37, label %40

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  br label %42

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi i16* [ %39, %37 ], [ %41, %40 ]
  %44 = getelementptr inbounds i16, i16* %43, i64 %31
  %45 = icmp ult i64 %15, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %42
  %47 = add i64 %15, %31
  %48 = getelementptr i16, i16* %43, i64 %47
  %49 = getelementptr i16, i16* %14, i64 %15
  %50 = icmp ult i16* %44, %49
  %51 = icmp ult i16* %14, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %15, -16
  %55 = sub i64 %15, %54
  %56 = getelementptr i16, i16* %14, i64 %54
  %57 = getelementptr i16, i16* %44, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %14, i64 %66
  %69 = getelementptr i16, i16* %44, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !13
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !13
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !16, !noalias !13
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !16, !noalias !13
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %14, i64 %78
  %80 = getelementptr i16, i16* %44, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !13
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !13
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !16, !noalias !13
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !16, !noalias !13
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %14, i64 %89
  %91 = getelementptr i16, i16* %44, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !13
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !13
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !16, !noalias !13
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !16, !noalias !13
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %14, i64 %100
  %102 = getelementptr i16, i16* %44, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !13
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !13
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !16, !noalias !13
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !16, !noalias !13
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !18

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %14, i64 %118
  %121 = getelementptr i16, i16* %44, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !13
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !13
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !16, !noalias !13
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !16, !noalias !13
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !19

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %15, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %42
  %136 = phi i64 [ %15, %46 ], [ %15, %42 ], [ %55, %133 ]
  %137 = phi i16* [ %14, %46 ], [ %14, %42 ], [ %56, %133 ]
  %138 = phi i16* [ %44, %46 ], [ %44, %42 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !20

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !21

188:                                              ; preds = %153, %158, %133
  %189 = add i64 %31, %15
  %190 = load i8, i8* %17, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %194

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %189, i64* %193, align 8
  br label %196

194:                                              ; preds = %188
  %195 = trunc i64 %189 to i8
  store i8 %195, i8* %17, align 1
  br label %196

196:                                              ; preds = %194, %192
  %197 = getelementptr inbounds i16, i16* %43, i64 %189
  store i16 0, i16* %197, align 2
  br label %201

198:                                              ; preds = %29
  %199 = add i64 %31, %15
  %200 = sub i64 %199, %30
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %1, i64 %30, i64 %200, i64 %31, i64 %31, i64 0, i64 %15, i16* %14) #11
  br label %201

201:                                              ; preds = %34, %196, %198
  %202 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 2
  %203 = load i8, i8* %202, align 8, !range !22
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %255

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %222, label %209

209:                                              ; preds = %205
  %210 = load i8, i8* %5, align 1
  %211 = icmp slt i8 %210, 0
  %212 = load i16*, i16** %8, align 8
  %213 = select i1 %211, i16* %212, i16* %12
  %214 = load i16, i16* %213, align 2
  %215 = add i16 %214, 21504
  %216 = icmp ult i16 %215, 11172
  %217 = select i1 %216, i64 2, i64 3
  %218 = load i64, i64* %10, align 8
  %219 = zext i8 %210 to i64
  %220 = select i1 %211, i64 %218, i64 %219
  %221 = icmp ult i64 %220, %217
  br i1 %221, label %255, label %222

222:                                              ; preds = %209, %205
  %223 = load i8, i8* %17, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %222
  %226 = zext i8 %223 to i64
  br label %234

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %229 = load i64, i64* %228, align 8
  %230 = and i64 %229, 9223372036854775807
  %231 = add nsw i64 %230, -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %233 = load i64, i64* %232, align 8
  br label %234

234:                                              ; preds = %227, %225
  %235 = phi i64 [ 10, %225 ], [ %231, %227 ]
  %236 = phi i64 [ %226, %225 ], [ %233, %227 ]
  %237 = icmp eq i64 %236, %235
  br i1 %237, label %238, label %241

238:                                              ; preds = %234
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %235, i64 1, i64 %235, i64 %235, i64 0, i64 0) #11
  %239 = load i8, i8* %17, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %246, label %242

241:                                              ; preds = %234
  br i1 %224, label %246, label %242

242:                                              ; preds = %241, %238
  %243 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %244 = trunc i64 %236 to i8
  %245 = add i8 %244, 1
  store i8 %245, i8* %17, align 1
  br label %251

246:                                              ; preds = %241, %238
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i16*, i16** %247, align 8
  %249 = add i64 %236, 1
  %250 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %249, i64* %250, align 8
  br label %251

251:                                              ; preds = %242, %246
  %252 = phi i16* [ %243, %242 ], [ %248, %246 ]
  %253 = getelementptr inbounds i16, i16* %252, i64 %236
  store i16 42, i16* %253, align 2
  %254 = getelementptr inbounds i16, i16* %253, i64 1
  store i16 0, i16* %254, align 2
  br label %255

255:                                              ; preds = %209, %201, %251
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN12query_parser11QueryParser31IsWordLongEnoughForPrefixSearchERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %12 = select i1 %8, i16* %10, i16* %11
  %13 = load i16, i16* %12, align 2
  %14 = add i16 %13, 21504
  %15 = icmp ult i16 %14, 11172
  %16 = select i1 %15, i64 2, i64 3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %7 to i64
  %20 = select i1 %8, i64 %18, i64 %19
  %21 = icmp uge i64 %20, %16
  br label %22

22:                                               ; preds = %2, %4
  %23 = phi i1 [ %21, %4 ], [ true, %2 ]
  ret i1 %23
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeWord6IsWordEv(%"class.query_parser::QueryNodeWord"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeWord7MatchesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.query_parser::QueryNodeWord"* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  br i1 %2, label %5, label %12

5:                                                ; preds = %3
  %6 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %8 to i64
  br label %34

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  br i1 %15, label %73, label %19

19:                                               ; preds = %12
  %20 = icmp slt i8 %18, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %24 = select i1 %20, i16* %22, i16* %23
  %25 = load i16, i16* %24, align 2
  %26 = add i16 %25, 21504
  %27 = icmp ult i16 %26, 11172
  %28 = select i1 %27, i64 2, i64 3
  %29 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %18 to i64
  %32 = select i1 %20, i64 %30, i64 %31
  %33 = icmp ult i64 %32, %28
  br i1 %33, label %34, label %73

34:                                               ; preds = %5, %19
  %35 = phi i64 [ %11, %5 ], [ %31, %19 ]
  %36 = phi i64 [ %10, %5 ], [ %30, %19 ]
  %37 = phi i8 [ %8, %5 ], [ %18, %19 ]
  %38 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = icmp slt i8 %37, 0
  %48 = select i1 %47, i64 %36, i64 %35
  %49 = icmp eq i64 %46, %48
  br i1 %49, label %50, label %137

50:                                               ; preds = %34
  %51 = icmp eq i64 %46, 0
  br i1 %51, label %137, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %38 to i16*
  %56 = select i1 %47, i16* %54, i16* %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %60 = select i1 %42, i16* %58, i16* %59
  br label %61

61:                                               ; preds = %68, %52
  %62 = phi i64 [ %69, %68 ], [ %46, %52 ]
  %63 = phi i16* [ %71, %68 ], [ %56, %52 ]
  %64 = phi i16* [ %70, %68 ], [ %60, %52 ]
  %65 = load i16, i16* %64, align 2
  %66 = load i16, i16* %63, align 2
  %67 = icmp eq i16 %66, %65
  br i1 %67, label %68, label %137

68:                                               ; preds = %61
  %69 = add i64 %62, -1
  %70 = getelementptr inbounds i16, i16* %64, i64 1
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = icmp eq i64 %69, 0
  br i1 %72, label %137, label %61

73:                                               ; preds = %12, %19
  %74 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = icmp slt i8 %18, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  br label %88

86:                                               ; preds = %73
  %87 = zext i8 %18 to i64
  br label %88

88:                                               ; preds = %83, %86
  %89 = phi i64 [ %85, %83 ], [ %87, %86 ]
  %90 = icmp ult i64 %81, %89
  br i1 %90, label %137, label %91

91:                                               ; preds = %88
  br i1 %82, label %92, label %103

92:                                               ; preds = %91
  %93 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %98 = select i1 %77, i16* %96, i16* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i16*, i16** %99, align 8
  %101 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  br label %111

103:                                              ; preds = %91
  %104 = zext i8 %18 to i64
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i16*, i16** %105, align 8
  %107 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %108 = select i1 %77, i16* %106, i16* %107
  %109 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %110 = zext i8 %18 to i64
  br label %111

111:                                              ; preds = %103, %92
  %112 = phi i16* [ %98, %92 ], [ %108, %103 ]
  %113 = phi i64 [ %94, %92 ], [ %104, %103 ]
  %114 = phi i16* [ %100, %92 ], [ %109, %103 ]
  %115 = phi i64 [ %102, %92 ], [ %110, %103 ]
  %116 = icmp ult i64 %115, %113
  %117 = select i1 %116, i64 %115, i64 %113
  %118 = icmp ult i64 %81, %113
  %119 = select i1 %118, i64 %81, i64 %113
  %120 = icmp ugt i64 %117, %119
  %121 = select i1 %120, i64 %119, i64 %117
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %135, label %123

123:                                              ; preds = %111, %130
  %124 = phi i64 [ %131, %130 ], [ %121, %111 ]
  %125 = phi i16* [ %133, %130 ], [ %112, %111 ]
  %126 = phi i16* [ %132, %130 ], [ %114, %111 ]
  %127 = load i16, i16* %126, align 2
  %128 = load i16, i16* %125, align 2
  %129 = icmp eq i16 %128, %127
  br i1 %129, label %130, label %137

130:                                              ; preds = %123
  %131 = add i64 %124, -1
  %132 = getelementptr inbounds i16, i16* %126, i64 1
  %133 = getelementptr inbounds i16, i16* %125, i64 1
  %134 = icmp eq i64 %131, 0
  br i1 %134, label %135, label %123

135:                                              ; preds = %130, %111
  %136 = icmp eq i64 %117, %119
  ret i1 %136

137:                                              ; preds = %123, %68, %61, %50, %34, %88
  %138 = phi i1 [ false, %88 ], [ false, %34 ], [ true, %50 ], [ true, %68 ], [ false, %61 ], [ false, %123 ]
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeWord10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEEPNS2_INS1_4pairImmEENS4_ISA_EEEE(%"class.query_parser::QueryNodeWord"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.6"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.query_parser::QueryWord"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.query_parser::QueryNodeWord"* %0 to i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)***
  %13 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::pair"** %17 to i64*
  %20 = bitcast %"class.std::__1::vector.6"* %2 to i64*
  %21 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %22 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  br label %27

23:                                               ; preds = %115, %3
  %24 = phi i8 [ 0, %3 ], [ %116, %115 ]
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  ret i1 %26

27:                                               ; preds = %10, %115
  %28 = phi i64 [ %8, %10 ], [ %119, %115 ]
  %29 = phi i64 [ 0, %10 ], [ %117, %115 ]
  %30 = phi i8 [ 0, %10 ], [ %116, %115 ]
  %31 = inttoptr i64 %28 to %"struct.query_parser::QueryWord"*
  %32 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %31, i64 %29, i32 0
  %33 = load i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)**, i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)*** %12, align 8
  %34 = getelementptr inbounds i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)** %33, i64 4
  %35 = load i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.query_parser::QueryNodeWord"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %32, i1 zeroext false) #11
  br i1 %36, label %37, label %115

37:                                               ; preds = %27
  %38 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %11, align 8
  %39 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %38, i64 %29, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i8, i8* %15, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = load i64, i64* %16, align 8
  br label %47

45:                                               ; preds = %37
  %46 = zext i8 %41 to i64
  br label %47

47:                                               ; preds = %43, %45
  %48 = phi i64 [ %44, %43 ], [ %46, %45 ]
  %49 = shl i64 %48, 32
  %50 = ashr exact i64 %49, 32
  %51 = add i64 %50, %40
  %52 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %53 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %54 = icmp ult %"struct.std::__1::pair"* %52, %53
  %55 = ptrtoint %"struct.std::__1::pair"* %53 to i64
  br i1 %54, label %56, label %61

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 0, i32 0
  store i64 %40, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 0, i32 1
  store i64 %51, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 1
  %60 = ptrtoint %"struct.std::__1::pair"* %59 to i64
  store i64 %60, i64* %19, align 8
  br label %115

61:                                               ; preds = %47
  %62 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  %63 = load i64, i64* %20, align 8
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 4
  %66 = add nsw i64 %65, 1
  %67 = icmp ugt i64 %66, 1152921504606846975
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::vector.6"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #12
  unreachable

70:                                               ; preds = %61
  %71 = sub i64 %55, %63
  %72 = ashr exact i64 %71, 4
  %73 = icmp ult i64 %72, 576460752303423487
  br i1 %73, label %74, label %82

74:                                               ; preds = %70
  %75 = ashr exact i64 %71, 3
  %76 = icmp ult i64 %75, %66
  %77 = select i1 %76, i64 %66, i64 %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = icmp ugt i64 %77, 1152921504606846975
  br i1 %80, label %81, label %82

81:                                               ; preds = %79
  tail call void @abort() #12
  unreachable

82:                                               ; preds = %79, %70
  %83 = phi i64 [ %77, %79 ], [ 1152921504606846975, %70 ]
  %84 = shl i64 %83, 4
  %85 = tail call i8* @_Znwm(i64 %84) #13
  %86 = bitcast i8* %85 to %"struct.std::__1::pair"*
  br label %87

87:                                               ; preds = %82, %74
  %88 = phi i64 [ %83, %82 ], [ 0, %74 ]
  %89 = phi %"struct.std::__1::pair"* [ %86, %82 ], [ null, %74 ]
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 %65
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 %88
  %92 = ptrtoint %"struct.std::__1::pair"* %91 to i64
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0
  store i64 %40, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 %65, i32 1
  store i64 %51, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 1
  %96 = ptrtoint %"struct.std::__1::pair"* %95 to i64
  %97 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  %98 = load i64, i64* %19, align 8
  %99 = ptrtoint %"struct.std::__1::pair"* %97 to i64
  %100 = sub i64 %98, %99
  %101 = ashr exact i64 %100, 4
  %102 = sub nsw i64 0, %101
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 %102
  %104 = ptrtoint %"struct.std::__1::pair"* %103 to i64
  %105 = icmp sgt i64 %100, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %87
  %107 = bitcast %"struct.std::__1::pair"* %103 to i8*
  %108 = bitcast %"struct.std::__1::pair"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 %100, i1 false) #11
  %109 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  br label %110

110:                                              ; preds = %106, %87
  %111 = phi %"struct.std::__1::pair"* [ %97, %87 ], [ %109, %106 ]
  store i64 %104, i64* %20, align 8
  store i64 %96, i64* %19, align 8
  store i64 %92, i64* %21, align 8
  %112 = icmp eq %"struct.std::__1::pair"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %110
  %114 = bitcast %"struct.std::__1::pair"* %111 to i8*
  tail call void @_ZdlPv(i8* %114) #13
  br label %115

115:                                              ; preds = %113, %110, %56, %27
  %116 = phi i8 [ %30, %27 ], [ 1, %56 ], [ 1, %110 ], [ 1, %113 ]
  %117 = add nuw i64 %29, 1
  %118 = load i64, i64* %5, align 8
  %119 = load i64, i64* %7, align 8
  %120 = sub i64 %118, %119
  %121 = ashr exact i64 %120, 5
  %122 = icmp ult i64 %117, %121
  br i1 %122, label %27, label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeWord10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEE(%"class.query_parser::QueryNodeWord"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.query_parser::QueryWord"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.query_parser::QueryNodeWord"* %0 to i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)***
  br label %17

11:                                               ; preds = %17
  %12 = load i64, i64* %4, align 8
  %13 = load i64, i64* %6, align 8
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 5
  %16 = icmp ult i64 %26, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %9, %11
  %18 = phi i64 [ %7, %9 ], [ %13, %11 ]
  %19 = phi i64 [ 0, %9 ], [ %26, %11 ]
  %20 = inttoptr i64 %18 to %"struct.query_parser::QueryWord"*
  %21 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %20, i64 %19, i32 0
  %22 = load i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)**, i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)*** %10, align 8
  %23 = getelementptr inbounds i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)** %22, i64 4
  %24 = load i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNodeWord"*, %"class.std::__1::basic_string"*, i1)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.query_parser::QueryNodeWord"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %21, i1 zeroext false) #11
  %26 = add nuw i64 %19, 1
  br i1 %25, label %27, label %11

27:                                               ; preds = %17, %11, %2
  %28 = phi i1 [ false, %2 ], [ false, %11 ], [ true, %17 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12query_parser13QueryNodeWord11AppendWordsEPNSt3__16vectorINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS6_IS8_EEEE(%"class.query_parser::QueryNodeWord"*, %"class.std::__1::vector.13"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %5, %7
  br i1 %8, label %196, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #11
  br label %192

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %"class.query_parser::QueryNodeWord", %"class.query_parser::QueryNodeWord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 11
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %25 = trunc i64 %21 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  store i8 %25, i8* %27, align 1
  br label %45

28:                                               ; preds = %17
  %29 = icmp ugt i64 %21, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #12
  unreachable

32:                                               ; preds = %28
  %33 = add nuw nsw i64 %21, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #12
  unreachable

37:                                               ; preds = %32
  %38 = shl i64 %34, 1
  %39 = tail call i8* @_Znwm(i64 %38) #13
  %40 = bitcast i8* %39 to i16*
  %41 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %39, i8** %41, align 8
  %42 = or i64 %34, -9223372036854775808
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %44, align 8
  br label %45

45:                                               ; preds = %37, %23
  %46 = phi i16* [ %24, %23 ], [ %40, %37 ]
  %47 = add nuw nsw i64 %21, 1
  %48 = add i64 %21, 1
  %49 = icmp ult i64 %48, 16
  br i1 %49, label %139, label %50

50:                                               ; preds = %45
  %51 = add i64 %21, 1
  %52 = getelementptr i16, i16* %46, i64 %51
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = icmp ult i16* %46, %53
  %55 = icmp ult i16* %19, %52
  %56 = and i1 %54, %55
  br i1 %56, label %139, label %57

57:                                               ; preds = %50
  %58 = and i64 %48, -16
  %59 = sub i64 %47, %58
  %60 = getelementptr i16, i16* %19, i64 %58
  %61 = getelementptr i16, i16* %46, i64 %58
  %62 = add i64 %58, -16
  %63 = lshr exact i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 48
  br i1 %66, label %118, label %67

67:                                               ; preds = %57
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i16, i16* %19, i64 %70
  %73 = getelementptr i16, i16* %46, i64 %70
  %74 = bitcast i16* %72 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !23
  %76 = getelementptr i16, i16* %72, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !23
  %79 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %79, align 2, !alias.scope !26, !noalias !23
  %80 = getelementptr i16, i16* %73, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %81, align 2, !alias.scope !26, !noalias !23
  %82 = or i64 %70, 16
  %83 = getelementptr i16, i16* %19, i64 %82
  %84 = getelementptr i16, i16* %46, i64 %82
  %85 = bitcast i16* %83 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !23
  %87 = getelementptr i16, i16* %83, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !23
  %90 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %90, align 2, !alias.scope !26, !noalias !23
  %91 = getelementptr i16, i16* %84, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %92, align 2, !alias.scope !26, !noalias !23
  %93 = or i64 %70, 32
  %94 = getelementptr i16, i16* %19, i64 %93
  %95 = getelementptr i16, i16* %46, i64 %93
  %96 = bitcast i16* %94 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !23
  %98 = getelementptr i16, i16* %94, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !23
  %101 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !26, !noalias !23
  %102 = getelementptr i16, i16* %95, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !26, !noalias !23
  %104 = or i64 %70, 48
  %105 = getelementptr i16, i16* %19, i64 %104
  %106 = getelementptr i16, i16* %46, i64 %104
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !23
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !23
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !26, !noalias !23
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !26, !noalias !23
  %115 = add i64 %70, 64
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !28

118:                                              ; preds = %69, %57
  %119 = phi i64 [ 0, %57 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i16, i16* %19, i64 %122
  %125 = getelementptr i16, i16* %46, i64 %122
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !23
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !23
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !26, !noalias !23
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !26, !noalias !23
  %134 = add i64 %122, 16
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !29

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %48, %58
  br i1 %138, label %192, label %139

139:                                              ; preds = %137, %50, %45
  %140 = phi i64 [ %47, %50 ], [ %47, %45 ], [ %59, %137 ]
  %141 = phi i16* [ %19, %50 ], [ %19, %45 ], [ %60, %137 ]
  %142 = phi i16* [ %46, %50 ], [ %46, %45 ], [ %61, %137 ]
  %143 = add i64 %140, -1
  %144 = and i64 %140, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %139, %146
  %147 = phi i64 [ %152, %146 ], [ %140, %139 ]
  %148 = phi i16* [ %154, %146 ], [ %141, %139 ]
  %149 = phi i16* [ %153, %146 ], [ %142, %139 ]
  %150 = phi i64 [ %155, %146 ], [ %144, %139 ]
  %151 = load i16, i16* %148, align 2
  store i16 %151, i16* %149, align 2
  %152 = add i64 %147, -1
  %153 = getelementptr inbounds i16, i16* %149, i64 1
  %154 = getelementptr inbounds i16, i16* %148, i64 1
  %155 = add i64 %150, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !30

157:                                              ; preds = %146, %139
  %158 = phi i64 [ %140, %139 ], [ %152, %146 ]
  %159 = phi i16* [ %141, %139 ], [ %154, %146 ]
  %160 = phi i16* [ %142, %139 ], [ %153, %146 ]
  %161 = icmp ult i64 %143, 7
  br i1 %161, label %192, label %162

162:                                              ; preds = %157, %162
  %163 = phi i64 [ %188, %162 ], [ %158, %157 ]
  %164 = phi i16* [ %190, %162 ], [ %159, %157 ]
  %165 = phi i16* [ %189, %162 ], [ %160, %157 ]
  %166 = load i16, i16* %164, align 2
  store i16 %166, i16* %165, align 2
  %167 = getelementptr inbounds i16, i16* %165, i64 1
  %168 = getelementptr inbounds i16, i16* %164, i64 1
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %165, i64 2
  %171 = getelementptr inbounds i16, i16* %164, i64 2
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %165, i64 3
  %174 = getelementptr inbounds i16, i16* %164, i64 3
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %165, i64 4
  %177 = getelementptr inbounds i16, i16* %164, i64 4
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %165, i64 5
  %180 = getelementptr inbounds i16, i16* %164, i64 5
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %165, i64 6
  %183 = getelementptr inbounds i16, i16* %164, i64 6
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %165, i64 7
  %186 = getelementptr inbounds i16, i16* %164, i64 7
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = add i64 %163, -8
  %189 = getelementptr inbounds i16, i16* %165, i64 8
  %190 = getelementptr inbounds i16, i16* %164, i64 8
  %191 = icmp eq i64 %188, 0
  br i1 %191, label %192, label %162, !llvm.loop !31

192:                                              ; preds = %157, %162, %137, %14
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 1
  %194 = ptrtoint %"class.std::__1::basic_string"* %193 to i64
  %195 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  store i64 %194, i64* %195, align 8
  br label %197

196:                                              ; preds = %2
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.13"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %3) #11
  br label %197

197:                                              ; preds = %192, %196
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeListC2Ev(%"class.query_parser::QueryNodeList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeListD2Ev(%"class.query_parser::QueryNodeList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %15, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %15, align 8
  %17 = icmp eq %"class.query_parser::QueryNode"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.query_parser::QueryNode"* %16 to void (%"class.query_parser::QueryNode"*)***
  %20 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %20, i64 1
  %22 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %21, align 8
  tail call void %22(%"class.query_parser::QueryNode"* nonnull %16) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.20"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeListD0Ev(%"class.query_parser::QueryNodeList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %15, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %15, align 8
  %17 = icmp eq %"class.query_parser::QueryNode"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.query_parser::QueryNode"* %16 to void (%"class.query_parser::QueryNode"*)***
  %20 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %20, i64 1
  %22 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %21, align 8
  tail call void %22(%"class.query_parser::QueryNode"* nonnull %16) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.20"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.query_parser::QueryNodeList"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeList8AddChildENSt3__110unique_ptrINS_9QueryNodeENS1_14default_deleteIS3_EEEE(%"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.query_parser::QueryNode"* %1, %"class.query_parser::QueryNode"** %4, align 8
  %5 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.query_parser::QueryNode"* %1 to i64
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12query_parser9QueryNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.20"* %17, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %4, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %4, align 8
  %20 = icmp eq %"class.query_parser::QueryNode"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.query_parser::QueryNode"* %19 to void (%"class.query_parser::QueryNode"*)***
  %23 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %23, i64 1
  %25 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %24, align 8
  call void %25(%"class.query_parser::QueryNode"* nonnull %19) #11
  br label %26

26:                                               ; preds = %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser13QueryNodeList19RemoveEmptySubnodesEv(%"class.query_parser::QueryNodeList"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.20", align 16
  %3 = bitcast %"class.std::__1::vector.20"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %2, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.20"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::unique_ptr"** %4 to i64*
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %16 = inttoptr i64 %9 to %"class.std::__1::unique_ptr"*
  br label %27

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %6, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr"** %4 to i64*
  br label %64

20:                                               ; preds = %111
  %21 = inttoptr i64 %114 to %"class.std::__1::unique_ptr"*
  %22 = bitcast %"class.std::__1::vector.20"* %2 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 16
  %24 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %25 = load i64, i64* %24, align 16
  %26 = inttoptr i64 %113 to %"class.std::__1::unique_ptr"*
  br label %27

27:                                               ; preds = %13, %20
  %28 = phi %"class.std::__1::unique_ptr"* [ %16, %13 ], [ %26, %20 ]
  %29 = phi %"class.std::__1::unique_ptr"* [ %16, %13 ], [ %21, %20 ]
  %30 = phi i64* [ %15, %13 ], [ %24, %20 ]
  %31 = phi i64* [ %14, %13 ], [ %19, %20 ]
  %32 = phi i64 [ 0, %13 ], [ %25, %20 ]
  %33 = phi i64 [ %9, %13 ], [ %113, %20 ]
  %34 = phi i64 [ %9, %13 ], [ %114, %20 ]
  %35 = phi <2 x i64> [ zeroinitializer, %13 ], [ %23, %20 ]
  %36 = bitcast %"class.std::__1::vector.20"* %2 to i64*
  store i64 %34, i64* %36, align 16
  %37 = bitcast %"class.std::__1::vector.20"* %6 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %37, align 8
  store i64 %33, i64* %31, align 8
  %38 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %32, i64* %39, align 8
  store i64 %40, i64* %30, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr"* %29, null
  br i1 %41, label %63, label %42

42:                                               ; preds = %27
  %43 = bitcast %"class.std::__1::unique_ptr"* %29 to i8*
  %44 = icmp eq %"class.std::__1::unique_ptr"* %28, %29
  br i1 %44, label %61, label %45

45:                                               ; preds = %42, %56
  %46 = phi %"class.std::__1::unique_ptr"* [ %47, %56 ], [ %28, %42 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 -1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %48, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %48, align 8
  %50 = icmp eq %"class.query_parser::QueryNode"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.query_parser::QueryNode"* %49 to void (%"class.query_parser::QueryNode"*)***
  %53 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %53, i64 1
  %55 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %54, align 8
  call void %55(%"class.query_parser::QueryNode"* nonnull %49) #11
  br label %56

56:                                               ; preds = %51, %45
  %57 = icmp eq %"class.std::__1::unique_ptr"* %47, %29
  br i1 %57, label %58, label %45

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.20"* %2 to i8**
  %60 = load i8*, i8** %59, align 16
  br label %61

61:                                               ; preds = %58, %42
  %62 = phi i8* [ %60, %58 ], [ %43, %42 ]
  store %"class.std::__1::unique_ptr"* %29, %"class.std::__1::unique_ptr"** %4, align 8
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %27, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret void

64:                                               ; preds = %17, %111
  %65 = phi i64 [ %11, %17 ], [ %114, %111 ]
  %66 = phi i64 [ 0, %17 ], [ %112, %111 ]
  %67 = inttoptr i64 %65 to %"class.std::__1::unique_ptr"*
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 %66, i32 0, i32 0, i32 0
  %69 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %68, align 8
  %70 = bitcast %"class.query_parser::QueryNode"* %69 to i1 (%"class.query_parser::QueryNode"*)***
  %71 = load i1 (%"class.query_parser::QueryNode"*)**, i1 (%"class.query_parser::QueryNode"*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%"class.query_parser::QueryNode"*)*, i1 (%"class.query_parser::QueryNode"*)** %71, i64 3
  %73 = load i1 (%"class.query_parser::QueryNode"*)*, i1 (%"class.query_parser::QueryNode"*)** %72, align 8
  %74 = call zeroext i1 %73(%"class.query_parser::QueryNode"* %69) #11
  %75 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 %66
  br i1 %74, label %77, label %89

77:                                               ; preds = %64
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %79 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 16
  %80 = icmp ult %"class.std::__1::unique_ptr"* %78, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %76, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %76 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr"* %78 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr"* %86 to i64
  store i64 %87, i64* %19, align 8
  br label %111

88:                                               ; preds = %77
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12query_parser9QueryNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.20"* nonnull %2, %"class.std::__1::unique_ptr"* dereferenceable(8) %76) #11
  br label %111

89:                                               ; preds = %64
  %90 = bitcast %"class.std::__1::unique_ptr"* %76 to %"class.query_parser::QueryNodeList"**
  %91 = load %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %90, align 8
  call void @_ZN12query_parser13QueryNodeList19RemoveEmptySubnodesEv(%"class.query_parser::QueryNodeList"* %91)
  %92 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %91, i64 0, i32 1, i32 0, i32 0
  %93 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %92, align 8
  %94 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %91, i64 0, i32 1, i32 0, i32 1
  %95 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %94, align 8
  %96 = icmp eq %"class.std::__1::unique_ptr"* %93, %95
  br i1 %96, label %111, label %97

97:                                               ; preds = %89
  %98 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 %66
  %100 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %101 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 16
  %102 = icmp ult %"class.std::__1::unique_ptr"* %100, %101
  br i1 %102, label %103, label %110

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %106 = load i64, i64* %105, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %104, align 8
  %107 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 1
  %109 = ptrtoint %"class.std::__1::unique_ptr"* %108 to i64
  store i64 %109, i64* %19, align 8
  br label %111

110:                                              ; preds = %97
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12query_parser9QueryNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.20"* nonnull %2, %"class.std::__1::unique_ptr"* dereferenceable(8) %99) #11
  br label %111

111:                                              ; preds = %110, %103, %88, %81, %89
  %112 = add nuw i64 %66, 1
  %113 = load i64, i64* %8, align 8
  %114 = load i64, i64* %10, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %112, %116
  br i1 %117, label %64, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12query_parser13QueryNodeList19AppendToSQLiteQueryEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.query_parser::QueryNodeList"* nocapture readonly, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %4, %6
  br i1 %7, label %62, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %60, %8
  %16 = phi %"class.std::__1::unique_ptr"* [ %4, %8 ], [ %61, %60 ]
  %17 = phi i32 [ 0, %8 ], [ %56, %60 ]
  %18 = phi %"class.std::__1::unique_ptr"* [ %4, %8 ], [ %57, %60 ]
  %19 = icmp eq %"class.std::__1::unique_ptr"* %18, %16
  br i1 %19, label %48, label %20

20:                                               ; preds = %15
  %21 = load i8, i8* %10, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = zext i8 %21 to i64
  br label %30

25:                                               ; preds = %20
  %26 = load i64, i64* %11, align 8
  %27 = and i64 %26, 9223372036854775807
  %28 = add nsw i64 %27, -1
  %29 = load i64, i64* %12, align 8
  br label %30

30:                                               ; preds = %25, %23
  %31 = phi i64 [ 10, %23 ], [ %28, %25 ]
  %32 = phi i64 [ %24, %23 ], [ %29, %25 ]
  %33 = icmp eq i64 %32, %31
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %31, i64 1, i64 %31, i64 %31, i64 0, i64 0) #11
  %35 = load i8, i8* %10, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %41, label %38

37:                                               ; preds = %30
  br i1 %22, label %41, label %38

38:                                               ; preds = %37, %34
  %39 = trunc i64 %32 to i8
  %40 = add i8 %39, 1
  store i8 %40, i8* %10, align 1
  br label %44

41:                                               ; preds = %37, %34
  %42 = load i16*, i16** %14, align 8
  %43 = add i64 %32, 1
  store i64 %43, i64* %12, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi i16* [ %13, %38 ], [ %42, %41 ]
  %46 = getelementptr inbounds i16, i16* %45, i64 %32
  store i16 32, i16* %46, align 2
  %47 = getelementptr inbounds i16, i16* %46, i64 1
  store i16 0, i16* %47, align 2
  br label %48

48:                                               ; preds = %44, %15
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %49, align 8
  %51 = bitcast %"class.query_parser::QueryNode"* %50 to i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)***
  %52 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)**, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %52, i64 2
  %54 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %53, align 8
  %55 = tail call i32 %54(%"class.query_parser::QueryNode"* %50, %"class.std::__1::basic_string"* %1) #11
  %56 = add nsw i32 %55, %17
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 1
  %58 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr"* %57, %58
  br i1 %59, label %62, label %60

60:                                               ; preds = %48
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %15

62:                                               ; preds = %48, %2
  %63 = phi i32 [ 0, %2 ], [ %56, %48 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12query_parser13QueryNodeList22AppendChildrenToStringEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.query_parser::QueryNodeList"* nocapture readonly, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %17

15:                                               ; preds = %50, %2
  %16 = phi i32 [ 0, %2 ], [ %58, %50 ]
  ret i32 %16

17:                                               ; preds = %62, %8
  %18 = phi %"class.std::__1::unique_ptr"* [ %4, %8 ], [ %63, %62 ]
  %19 = phi i32 [ 0, %8 ], [ %58, %62 ]
  %20 = phi %"class.std::__1::unique_ptr"* [ %4, %8 ], [ %59, %62 ]
  %21 = icmp eq %"class.std::__1::unique_ptr"* %20, %18
  br i1 %21, label %50, label %22

22:                                               ; preds = %17
  %23 = load i8, i8* %10, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = zext i8 %23 to i64
  br label %32

27:                                               ; preds = %22
  %28 = load i64, i64* %11, align 8
  %29 = and i64 %28, 9223372036854775807
  %30 = add nsw i64 %29, -1
  %31 = load i64, i64* %12, align 8
  br label %32

32:                                               ; preds = %27, %25
  %33 = phi i64 [ 10, %25 ], [ %30, %27 ]
  %34 = phi i64 [ %26, %25 ], [ %31, %27 ]
  %35 = icmp eq i64 %34, %33
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %33, i64 1, i64 %33, i64 %33, i64 0, i64 0) #11
  %37 = load i8, i8* %10, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %43, label %40

39:                                               ; preds = %32
  br i1 %24, label %43, label %40

40:                                               ; preds = %39, %36
  %41 = trunc i64 %34 to i8
  %42 = add i8 %41, 1
  store i8 %42, i8* %10, align 1
  br label %46

43:                                               ; preds = %39, %36
  %44 = load i16*, i16** %14, align 8
  %45 = add i64 %34, 1
  store i64 %45, i64* %12, align 8
  br label %46

46:                                               ; preds = %40, %43
  %47 = phi i16* [ %13, %40 ], [ %44, %43 ]
  %48 = getelementptr inbounds i16, i16* %47, i64 %34
  store i16 32, i16* %48, align 2
  %49 = getelementptr inbounds i16, i16* %48, i64 1
  store i16 0, i16* %49, align 2
  br label %50

50:                                               ; preds = %17, %46
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %51, align 8
  %53 = bitcast %"class.query_parser::QueryNode"* %52 to i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)***
  %54 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)**, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %54, i64 2
  %56 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %55, align 8
  %57 = tail call i32 %56(%"class.query_parser::QueryNode"* %52, %"class.std::__1::basic_string"* %1) #11
  %58 = add nsw i32 %57, %19
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %61 = icmp eq %"class.std::__1::unique_ptr"* %59, %60
  br i1 %61, label %15, label %62

62:                                               ; preds = %50
  %63 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeList6IsWordEv(%"class.query_parser::QueryNodeList"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeList7MatchesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.query_parser::QueryNodeList"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), i1 zeroext) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeList10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEEPNS2_INS1_4pairImmEENS4_ISA_EEEE(%"class.query_parser::QueryNodeList"* nocapture readnone, %"class.std::__1::vector"* nocapture readnone dereferenceable(24), %"class.std::__1::vector.6"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser13QueryNodeList10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEE(%"class.query_parser::QueryNodeList"* nocapture readnone, %"class.std::__1::vector"* nocapture readnone dereferenceable(24)) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12query_parser13QueryNodeList11AppendWordsEPNSt3__16vectorINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS6_IS8_EEEE(%"class.query_parser::QueryNodeList"* nocapture readonly, %"class.std::__1::vector.13"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.20"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %2, %11
  %12 = phi i64 [ %23, %11 ], [ %8, %2 ]
  %13 = phi i64 [ %21, %11 ], [ 0, %2 ]
  %14 = inttoptr i64 %12 to %"class.std::__1::unique_ptr"*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %13, i32 0, i32 0, i32 0
  %16 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %15, align 8
  %17 = bitcast %"class.query_parser::QueryNode"* %16 to void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)***
  %18 = load void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)**, void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)*, void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)** %18, i64 7
  %20 = load void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)*, void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)** %19, align 8
  tail call void %20(%"class.query_parser::QueryNode"* %16, %"class.std::__1::vector.13"* %1) #11
  %21 = add nuw i64 %13, 1
  %22 = load i64, i64* %5, align 8
  %23 = load i64, i64* %7, align 8
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp ult i64 %21, %25
  br i1 %26, label %11, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser15QueryNodePhraseC2Ev(%"class.query_parser::QueryNodePhrase"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser15QueryNodePhraseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser15QueryNodePhraseD0Ev(%"class.query_parser::QueryNodePhrase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %15, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %15, align 8
  %17 = icmp eq %"class.query_parser::QueryNode"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.query_parser::QueryNode"* %16 to void (%"class.query_parser::QueryNode"*)***
  %20 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %20, i64 1
  %22 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %21, align 8
  tail call void %22(%"class.query_parser::QueryNode"* nonnull %16) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.20"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.query_parser::QueryNodePhrase"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12query_parser15QueryNodePhrase19AppendToSQLiteQueryEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.query_parser::QueryNodePhrase"* nocapture readonly, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  br label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 9223372036854775807
  %13 = add nsw i64 %12, -1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %9, %7
  %17 = phi i64 [ 10, %7 ], [ %13, %9 ]
  %18 = phi i64 [ %8, %7 ], [ %15, %9 ]
  %19 = icmp eq i64 %18, %17
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %17, i64 1, i64 %17, i64 %17, i64 0, i64 0) #11
  %21 = load i8, i8* %4, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %28, label %24

23:                                               ; preds = %16
  br i1 %6, label %28, label %24

24:                                               ; preds = %23, %20
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %26 = trunc i64 %18 to i8
  %27 = add i8 %26, 1
  store i8 %27, i8* %4, align 1
  br label %33

28:                                               ; preds = %23, %20
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = add i64 %18, 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %32, align 8
  br label %33

33:                                               ; preds = %24, %28
  %34 = phi i16* [ %25, %24 ], [ %30, %28 ]
  %35 = getelementptr inbounds i16, i16* %34, i64 %18
  store i16 34, i16* %35, align 2
  %36 = getelementptr inbounds i16, i16* %35, i64 1
  store i16 0, i16* %36, align 2
  %37 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr"* %38, %40
  br i1 %41, label %94, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %92, %42
  %48 = phi %"class.std::__1::unique_ptr"* [ %38, %42 ], [ %93, %92 ]
  %49 = phi i32 [ 0, %42 ], [ %88, %92 ]
  %50 = phi %"class.std::__1::unique_ptr"* [ %38, %42 ], [ %89, %92 ]
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %48
  br i1 %51, label %80, label %52

52:                                               ; preds = %47
  %53 = load i8, i8* %4, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = zext i8 %53 to i64
  br label %62

57:                                               ; preds = %52
  %58 = load i64, i64* %43, align 8
  %59 = and i64 %58, 9223372036854775807
  %60 = add nsw i64 %59, -1
  %61 = load i64, i64* %44, align 8
  br label %62

62:                                               ; preds = %57, %55
  %63 = phi i64 [ 10, %55 ], [ %60, %57 ]
  %64 = phi i64 [ %56, %55 ], [ %61, %57 ]
  %65 = icmp eq i64 %64, %63
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %63, i64 1, i64 %63, i64 %63, i64 0, i64 0) #11
  %67 = load i8, i8* %4, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %73, label %70

69:                                               ; preds = %62
  br i1 %54, label %73, label %70

70:                                               ; preds = %69, %66
  %71 = trunc i64 %64 to i8
  %72 = add i8 %71, 1
  store i8 %72, i8* %4, align 1
  br label %76

73:                                               ; preds = %69, %66
  %74 = load i16*, i16** %46, align 8
  %75 = add i64 %64, 1
  store i64 %75, i64* %44, align 8
  br label %76

76:                                               ; preds = %73, %70
  %77 = phi i16* [ %45, %70 ], [ %74, %73 ]
  %78 = getelementptr inbounds i16, i16* %77, i64 %64
  store i16 32, i16* %78, align 2
  %79 = getelementptr inbounds i16, i16* %78, i64 1
  store i16 0, i16* %79, align 2
  br label %80

80:                                               ; preds = %76, %47
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %81, align 8
  %83 = bitcast %"class.query_parser::QueryNode"* %82 to i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)***
  %84 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)**, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*** %83, align 8
  %85 = getelementptr inbounds i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %84, i64 2
  %86 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %85, align 8
  %87 = tail call i32 %86(%"class.query_parser::QueryNode"* %82, %"class.std::__1::basic_string"* %1) #11
  %88 = add nsw i32 %87, %49
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 1
  %90 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 8
  %91 = icmp eq %"class.std::__1::unique_ptr"* %89, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %80
  %93 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  br label %47

94:                                               ; preds = %80, %33
  %95 = phi i32 [ 0, %33 ], [ %88, %80 ]
  %96 = load i8, i8* %4, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = zext i8 %96 to i64
  br label %107

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 9223372036854775807
  %104 = add nsw i64 %103, -1
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  br label %107

107:                                              ; preds = %100, %98
  %108 = phi i64 [ 10, %98 ], [ %104, %100 ]
  %109 = phi i64 [ %99, %98 ], [ %106, %100 ]
  %110 = icmp eq i64 %109, %108
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %108, i64 1, i64 %108, i64 %108, i64 0, i64 0) #11
  %112 = load i8, i8* %4, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %119, label %115

114:                                              ; preds = %107
  br i1 %97, label %119, label %115

115:                                              ; preds = %114, %111
  %116 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %117 = trunc i64 %109 to i8
  %118 = add i8 %117, 1
  store i8 %118, i8* %4, align 1
  br label %124

119:                                              ; preds = %114, %111
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i16*, i16** %120, align 8
  %122 = add i64 %109, 1
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %122, i64* %123, align 8
  br label %124

124:                                              ; preds = %115, %119
  %125 = phi i16* [ %116, %115 ], [ %121, %119 ]
  %126 = getelementptr inbounds i16, i16* %125, i64 %109
  store i16 34, i16* %126, align 2
  %127 = getelementptr inbounds i16, i16* %126, i64 1
  store i16 0, i16* %127, align 2
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser15QueryNodePhrase10MatchesAllERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEEPPKS3_SB_(%"class.query_parser::QueryNodePhrase"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"struct.query_parser::QueryWord"** nocapture, %"struct.query_parser::QueryWord"** nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.query_parser::QueryWord"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 5
  %12 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.20"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %11, %19
  br i1 %20, label %71, label %21

21:                                               ; preds = %4
  %22 = add nsw i64 %11, 1
  %23 = sub nsw i64 %22, %19
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %71, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %27 = icmp eq i64 %15, %17
  br i1 %27, label %59, label %28

28:                                               ; preds = %25, %55
  %29 = phi i64 [ %53, %55 ], [ 0, %25 ]
  %30 = phi i64 [ %57, %55 ], [ %17, %25 ]
  br label %37

31:                                               ; preds = %37
  %32 = load i64, i64* %14, align 8
  %33 = load i64, i64* %16, align 8
  %34 = sub i64 %32, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %51, %35
  br i1 %36, label %37, label %59

37:                                               ; preds = %28, %31
  %38 = phi i64 [ %33, %31 ], [ %30, %28 ]
  %39 = phi i64 [ %51, %31 ], [ 0, %28 ]
  %40 = inttoptr i64 %38 to %"class.std::__1::unique_ptr"*
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 %39, i32 0, i32 0, i32 0
  %42 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %41, align 8
  %43 = add i64 %39, %29
  %44 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %26, align 8
  %45 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %44, i64 %43, i32 0
  %46 = bitcast %"class.query_parser::QueryNode"* %42 to i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)***
  %47 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)**, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)** %47, i64 4
  %49 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.query_parser::QueryNode"* %42, %"class.std::__1::basic_string"* dereferenceable(24) %45, i1 zeroext true) #11
  %51 = add nuw i64 %39, 1
  br i1 %50, label %31, label %52

52:                                               ; preds = %37
  %53 = add nuw i64 %29, 1
  %54 = icmp eq i64 %53, %23
  br i1 %54, label %71, label %55

55:                                               ; preds = %52
  %56 = load i64, i64* %14, align 8
  %57 = load i64, i64* %16, align 8
  %58 = icmp eq i64 %56, %57
  br i1 %58, label %59, label %28

59:                                               ; preds = %55, %31, %25
  %60 = phi i64 [ 0, %25 ], [ %29, %31 ], [ %53, %55 ]
  %61 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %26, align 8
  %62 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %61, i64 %60
  store %"struct.query_parser::QueryWord"* %62, %"struct.query_parser::QueryWord"** %2, align 8
  %63 = load i64, i64* %14, align 8
  %64 = load i64, i64* %16, align 8
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = add i64 %60, -1
  %68 = add i64 %67, %66
  %69 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %26, align 8
  %70 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %69, i64 %68
  store %"struct.query_parser::QueryWord"* %70, %"struct.query_parser::QueryWord"** %3, align 8
  br label %71

71:                                               ; preds = %52, %21, %4, %59
  %72 = phi i1 [ true, %59 ], [ false, %4 ], [ false, %21 ], [ false, %52 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser15QueryNodePhrase10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEEPNS2_INS1_4pairImmEENS4_ISA_EEEE(%"class.query_parser::QueryNodePhrase"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.6"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.query_parser::QueryWord"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.20"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %10, %18
  br i1 %19, label %154, label %20

20:                                               ; preds = %3
  %21 = add nsw i64 %10, 1
  %22 = sub nsw i64 %21, %18
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %154, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %26 = icmp eq i64 %14, %16
  br i1 %26, label %58, label %27

27:                                               ; preds = %24, %54
  %28 = phi i64 [ %52, %54 ], [ 0, %24 ]
  %29 = phi i64 [ %56, %54 ], [ %16, %24 ]
  br label %36

30:                                               ; preds = %36
  %31 = load i64, i64* %13, align 8
  %32 = load i64, i64* %15, align 8
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %50, %34
  br i1 %35, label %36, label %58

36:                                               ; preds = %27, %30
  %37 = phi i64 [ %32, %30 ], [ %29, %27 ]
  %38 = phi i64 [ %50, %30 ], [ 0, %27 ]
  %39 = inttoptr i64 %37 to %"class.std::__1::unique_ptr"*
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 %38, i32 0, i32 0, i32 0
  %41 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %40, align 8
  %42 = add i64 %38, %28
  %43 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %25, align 8
  %44 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %43, i64 %42, i32 0
  %45 = bitcast %"class.query_parser::QueryNode"* %41 to i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)***
  %46 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)**, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)** %46, i64 4
  %48 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.query_parser::QueryNode"* %41, %"class.std::__1::basic_string"* dereferenceable(24) %44, i1 zeroext true) #11
  %50 = add nuw i64 %38, 1
  br i1 %49, label %30, label %51

51:                                               ; preds = %36
  %52 = add nuw i64 %28, 1
  %53 = icmp eq i64 %52, %22
  br i1 %53, label %154, label %54

54:                                               ; preds = %51
  %55 = load i64, i64* %13, align 8
  %56 = load i64, i64* %15, align 8
  %57 = icmp eq i64 %55, %56
  br i1 %57, label %58, label %27

58:                                               ; preds = %54, %30, %24
  %59 = phi i64 [ %14, %24 ], [ %32, %30 ], [ %55, %54 ]
  %60 = phi i64 [ %14, %24 ], [ %31, %30 ], [ %55, %54 ]
  %61 = phi i64 [ 0, %24 ], [ %28, %30 ], [ %52, %54 ]
  %62 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %25, align 8
  %63 = sub i64 %60, %59
  %64 = ashr exact i64 %63, 3
  %65 = add i64 %61, -1
  %66 = add i64 %65, %64
  %67 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %62, i64 %61, i32 1
  %68 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %62, i64 %66, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %62, i64 %66, i32 0
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %62, i64 %66, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  br label %80

78:                                               ; preds = %58
  %79 = zext i8 %73 to i64
  br label %80

80:                                               ; preds = %75, %78
  %81 = phi i64 [ %77, %75 ], [ %79, %78 ]
  %82 = add i64 %81, %69
  %83 = load i64, i64* %67, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %86, align 8
  %88 = icmp ult %"struct.std::__1::pair"* %85, %87
  %89 = ptrtoint %"struct.std::__1::pair"* %87 to i64
  br i1 %88, label %90, label %96

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 0
  store i64 %83, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 1
  store i64 %82, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 1
  %94 = ptrtoint %"struct.std::__1::pair"* %93 to i64
  %95 = bitcast %"struct.std::__1::pair"** %84 to i64*
  store i64 %94, i64* %95, align 8
  br label %154

96:                                               ; preds = %80
  %97 = ptrtoint %"struct.std::__1::pair"* %85 to i64
  %98 = bitcast %"struct.std::__1::pair"** %84 to i64*
  %99 = bitcast %"class.std::__1::vector.6"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %97, %100
  %102 = ashr exact i64 %101, 4
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 1152921504606846975
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = bitcast %"class.std::__1::vector.6"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #12
  unreachable

107:                                              ; preds = %96
  %108 = bitcast %"struct.std::__1::pair"** %86 to i64*
  %109 = sub i64 %89, %100
  %110 = ashr exact i64 %109, 4
  %111 = icmp ult i64 %110, 576460752303423487
  br i1 %111, label %112, label %120

112:                                              ; preds = %107
  %113 = ashr exact i64 %109, 3
  %114 = icmp ult i64 %113, %103
  %115 = select i1 %114, i64 %103, i64 %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = icmp ugt i64 %115, 1152921504606846975
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  tail call void @abort() #12
  unreachable

120:                                              ; preds = %117, %107
  %121 = phi i64 [ %115, %117 ], [ 1152921504606846975, %107 ]
  %122 = shl i64 %121, 4
  %123 = tail call i8* @_Znwm(i64 %122) #13
  %124 = bitcast i8* %123 to %"struct.std::__1::pair"*
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i64 [ %121, %120 ], [ 0, %112 ]
  %127 = phi %"struct.std::__1::pair"* [ %124, %120 ], [ null, %112 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %102
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %126
  %130 = ptrtoint %"struct.std::__1::pair"* %129 to i64
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 0, i32 0
  store i64 %83, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %102, i32 1
  store i64 %82, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 1
  %134 = ptrtoint %"struct.std::__1::pair"* %133 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %136 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %135, align 8
  %137 = load i64, i64* %98, align 8
  %138 = ptrtoint %"struct.std::__1::pair"* %136 to i64
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 4
  %141 = sub nsw i64 0, %140
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 %141
  %143 = ptrtoint %"struct.std::__1::pair"* %142 to i64
  %144 = icmp sgt i64 %139, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %125
  %146 = bitcast %"struct.std::__1::pair"* %142 to i8*
  %147 = bitcast %"struct.std::__1::pair"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 %139, i1 false) #11
  %148 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %135, align 8
  br label %149

149:                                              ; preds = %145, %125
  %150 = phi %"struct.std::__1::pair"* [ %136, %125 ], [ %148, %145 ]
  store i64 %143, i64* %99, align 8
  store i64 %134, i64* %98, align 8
  store i64 %130, i64* %108, align 8
  %151 = icmp eq %"struct.std::__1::pair"* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %149
  %153 = bitcast %"struct.std::__1::pair"* %150 to i8*
  tail call void @_ZdlPv(i8* %153) #13
  br label %154

154:                                              ; preds = %51, %20, %3, %152, %149, %90
  %155 = phi i1 [ true, %90 ], [ true, %149 ], [ true, %152 ], [ false, %3 ], [ false, %20 ], [ false, %51 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12query_parser15QueryNodePhrase10HasMatchInERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEE(%"class.query_parser::QueryNodePhrase"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.query_parser::QueryWord"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.query_parser::QueryNodePhrase", %"class.query_parser::QueryNodePhrase"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.20"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp ult i64 %9, %17
  br i1 %18, label %57, label %19

19:                                               ; preds = %2
  %20 = add nsw i64 %9, 1
  %21 = sub nsw i64 %20, %17
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %57, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %25 = icmp eq i64 %13, %15
  br i1 %25, label %57, label %26

26:                                               ; preds = %23, %53
  %27 = phi i64 [ %51, %53 ], [ 0, %23 ]
  %28 = phi i64 [ %55, %53 ], [ %15, %23 ]
  br label %35

29:                                               ; preds = %35
  %30 = load i64, i64* %12, align 8
  %31 = load i64, i64* %14, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %49, %33
  br i1 %34, label %35, label %57

35:                                               ; preds = %26, %29
  %36 = phi i64 [ %31, %29 ], [ %28, %26 ]
  %37 = phi i64 [ %49, %29 ], [ 0, %26 ]
  %38 = inttoptr i64 %36 to %"class.std::__1::unique_ptr"*
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 %37, i32 0, i32 0, i32 0
  %40 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %39, align 8
  %41 = add i64 %37, %27
  %42 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %24, align 8
  %43 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %42, i64 %41, i32 0
  %44 = bitcast %"class.query_parser::QueryNode"* %40 to i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)***
  %45 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)**, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)** %45, i64 4
  %47 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*, i1)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.query_parser::QueryNode"* %40, %"class.std::__1::basic_string"* dereferenceable(24) %43, i1 zeroext true) #11
  %49 = add nuw i64 %37, 1
  br i1 %48, label %29, label %50

50:                                               ; preds = %35
  %51 = add nuw i64 %27, 1
  %52 = icmp eq i64 %51, %21
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = load i64, i64* %12, align 8
  %55 = load i64, i64* %14, align 8
  %56 = icmp eq i64 %54, %55
  br i1 %56, label %57, label %26

57:                                               ; preds = %50, %53, %29, %23, %2, %19
  %58 = phi i1 [ false, %2 ], [ false, %19 ], [ true, %23 ], [ true, %29 ], [ false, %50 ], [ true, %53 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12query_parser11QueryParser10ParseQueryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPS7_(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.query_parser::QueryNodeList", align 8
  %5 = bitcast %"class.query_parser::QueryNodeList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1
  %10 = bitcast %"class.std::__1::vector.20"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = call zeroext i1 @_ZN12query_parser11QueryParser14ParseQueryImplERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS_13QueryNodeListE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, %"class.query_parser::QueryNodeList"* nonnull %4)
  br i1 %11, label %12, label %70

12:                                               ; preds = %3
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr"* %13, %14
  br i1 %15, label %70, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %68, %16
  %24 = phi %"class.std::__1::unique_ptr"* [ %13, %16 ], [ %69, %68 ]
  %25 = phi i32 [ 0, %16 ], [ %64, %68 ]
  %26 = phi %"class.std::__1::unique_ptr"* [ %13, %16 ], [ %65, %68 ]
  %27 = icmp eq %"class.std::__1::unique_ptr"* %26, %24
  br i1 %27, label %56, label %28

28:                                               ; preds = %23
  %29 = load i8, i8* %18, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = zext i8 %29 to i64
  br label %38

33:                                               ; preds = %28
  %34 = load i64, i64* %19, align 8
  %35 = and i64 %34, 9223372036854775807
  %36 = add nsw i64 %35, -1
  %37 = load i64, i64* %20, align 8
  br label %38

38:                                               ; preds = %33, %31
  %39 = phi i64 [ 10, %31 ], [ %36, %33 ]
  %40 = phi i64 [ %32, %31 ], [ %37, %33 ]
  %41 = icmp eq i64 %40, %39
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %39, i64 1, i64 %39, i64 %39, i64 0, i64 0) #11
  %43 = load i8, i8* %18, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %49, label %46

45:                                               ; preds = %38
  br i1 %30, label %49, label %46

46:                                               ; preds = %45, %42
  %47 = trunc i64 %40 to i8
  %48 = add i8 %47, 1
  store i8 %48, i8* %18, align 1
  br label %52

49:                                               ; preds = %45, %42
  %50 = load i16*, i16** %22, align 8
  %51 = add i64 %40, 1
  store i64 %51, i64* %20, align 8
  br label %52

52:                                               ; preds = %49, %46
  %53 = phi i16* [ %21, %46 ], [ %50, %49 ]
  %54 = getelementptr inbounds i16, i16* %53, i64 %40
  store i16 32, i16* %54, align 2
  %55 = getelementptr inbounds i16, i16* %54, i64 1
  store i16 0, i16* %55, align 2
  br label %56

56:                                               ; preds = %52, %23
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %57, align 8
  %59 = bitcast %"class.query_parser::QueryNode"* %58 to i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)***
  %60 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)**, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %60, i64 2
  %62 = load i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)*, i32 (%"class.query_parser::QueryNode"*, %"class.std::__1::basic_string"*)** %61, align 8
  %63 = call i32 %62(%"class.query_parser::QueryNode"* %58, %"class.std::__1::basic_string"* %2) #11
  %64 = add nsw i32 %63, %25
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %66 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr"* %65, %66
  br i1 %67, label %70, label %68

68:                                               ; preds = %56
  %69 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  br label %23

70:                                               ; preds = %56, %12, %3
  %71 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %64, %56 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %9, i64 0, i32 0, i32 0
  %73 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %72, align 8
  %74 = icmp eq %"class.std::__1::unique_ptr"* %73, null
  br i1 %74, label %97, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.std::__1::unique_ptr"* %73 to i8*
  %77 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr"* %77, %73
  br i1 %78, label %95, label %79

79:                                               ; preds = %75, %90
  %80 = phi %"class.std::__1::unique_ptr"* [ %81, %90 ], [ %77, %75 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 -1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %82, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %82, align 8
  %84 = icmp eq %"class.query_parser::QueryNode"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.query_parser::QueryNode"* %83 to void (%"class.query_parser::QueryNode"*)***
  %87 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %87, i64 1
  %89 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %88, align 8
  call void %89(%"class.query_parser::QueryNode"* nonnull %83) #11
  br label %90

90:                                               ; preds = %85, %79
  %91 = icmp eq %"class.std::__1::unique_ptr"* %81, %73
  br i1 %91, label %92, label %79

92:                                               ; preds = %90
  %93 = bitcast %"class.std::__1::vector.20"* %9 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %92, %75
  %96 = phi i8* [ %94, %92 ], [ %76, %75 ]
  store %"class.std::__1::unique_ptr"* %73, %"class.std::__1::unique_ptr"** %8, align 8
  call void @_ZdlPv(i8* %96) #13
  br label %97

97:                                               ; preds = %70, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12query_parser11QueryParser14ParseQueryImplERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS_13QueryNodeListE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.query_parser::QueryNodeList"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.base::i18n::BreakIterator", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::vector.30", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.base::i18n::BreakIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 72, i1 false)
  %11 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %20 = select i1 %16, i16* %18, i16* %19
  store i16* %20, i16** %12, align 8
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %15 to i64
  %25 = select i1 %16, i64 %23, i64 %24
  store i64 %25, i64* %21, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %26 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %6) #11
  br i1 %26, label %27, label %396

27:                                               ; preds = %3
  %28 = ptrtoint %"class.query_parser::QueryNodeList"* %2 to i64
  %29 = bitcast %"class.std::__1::vector.30"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.query_parser::QueryNodeList"*** %31 to i64*
  %34 = bitcast %"class.std::__1::vector.30"* %8 to i64*
  %35 = bitcast %"class.query_parser::QueryNodeList"*** %32 to i64*
  %36 = call i8* @_Znwm(i64 8) #13
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  %38 = ptrtoint i8* %37 to i64
  %39 = bitcast i8* %36 to i64*
  store i64 %28, i64* %39, align 8
  %40 = ptrtoint i8* %36 to i64
  store i64 %40, i64* %34, align 8
  store i64 %38, i64* %33, align 8
  store i64 %38, i64* %35, align 8
  %41 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %6) #11
  br i1 %41, label %42, label %388

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %6, i64 0, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  %47 = bitcast %"class.query_parser::QueryNodeList"*** %31 to i64*
  %48 = bitcast %"class.std::__1::vector.30"* %8 to i64*
  %49 = bitcast %"class.query_parser::QueryNodeList"*** %32 to i64*
  %50 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %56 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %42, %385
  %59 = phi i8 [ 0, %42 ], [ %386, %385 ]
  %60 = call zeroext i1 @_ZNK4base4i18n13BreakIterator6IsWordEv(%"class.base::i18n::BreakIterator"* nonnull %6) #11
  br i1 %60, label %61, label %290

61:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.base::i18n::BreakIterator"* nonnull %6) #11
  %62 = call i8* @_Znwm(i64 40) #13
  %63 = bitcast i8* %62 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeWordE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 8
  %65 = load i8, i8* %52, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %50, i64 24, i1 false) #11
  %68 = getelementptr inbounds i8, i8* %62, i64 32
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds i8, i8* %62, i64 36
  %70 = bitcast i8* %69 to i32*
  store i32 %1, i32* %70, align 4
  %71 = ptrtoint i8* %62 to i64
  br label %258

72:                                               ; preds = %61
  %73 = load i16*, i16** %53, align 8
  %74 = bitcast i16* %73 to i8*
  %75 = load i64, i64* %54, align 8
  %76 = icmp ult i64 %75, 11
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = trunc i64 %75 to i8
  %79 = getelementptr inbounds i8, i8* %62, i64 31
  store i8 %78, i8* %79, align 1
  br label %98

80:                                               ; preds = %72
  %81 = icmp ugt i64 %75, 9223372036854775791
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = bitcast i8* %64 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %83) #12
  unreachable

84:                                               ; preds = %80
  %85 = add nuw nsw i64 %75, 8
  %86 = and i64 %85, -8
  %87 = icmp slt i64 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %84
  call void @abort() #12
  unreachable

89:                                               ; preds = %84
  %90 = shl i64 %86, 1
  %91 = call i8* @_Znwm(i64 %90) #13
  %92 = bitcast i8* %64 to i8**
  store i8* %91, i8** %92, align 8
  %93 = or i64 %86, -9223372036854775808
  %94 = getelementptr inbounds i8, i8* %62, i64 24
  %95 = bitcast i8* %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %62, i64 16
  %97 = bitcast i8* %96 to i64*
  store i64 %75, i64* %97, align 8
  br label %98

98:                                               ; preds = %89, %77
  %99 = phi i8* [ %64, %77 ], [ %91, %89 ]
  %100 = bitcast i8* %99 to i16*
  %101 = add nuw nsw i64 %75, 1
  %102 = add i64 %75, 1
  %103 = icmp ult i64 %102, 16
  br i1 %103, label %196, label %104

104:                                              ; preds = %98
  %105 = getelementptr i8, i8* %99, i64 2
  %106 = shl i64 %75, 1
  %107 = getelementptr i8, i8* %105, i64 %106
  %108 = getelementptr i16, i16* %73, i64 1
  %109 = getelementptr i16, i16* %108, i64 %75
  %110 = bitcast i16* %109 to i8*
  %111 = icmp ult i8* %99, %110
  %112 = icmp ugt i8* %107, %74
  %113 = and i1 %111, %112
  br i1 %113, label %196, label %114

114:                                              ; preds = %104
  %115 = and i64 %102, -16
  %116 = sub i64 %101, %115
  %117 = getelementptr i16, i16* %73, i64 %115
  %118 = getelementptr i16, i16* %100, i64 %115
  %119 = add i64 %115, -16
  %120 = lshr exact i64 %119, 4
  %121 = add nuw nsw i64 %120, 1
  %122 = and i64 %121, 3
  %123 = icmp ult i64 %119, 48
  br i1 %123, label %175, label %124

124:                                              ; preds = %114
  %125 = sub nsw i64 %121, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %172, %126 ]
  %128 = phi i64 [ %125, %124 ], [ %173, %126 ]
  %129 = getelementptr i16, i16* %73, i64 %127
  %130 = getelementptr i16, i16* %100, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !32
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !32
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !35, !noalias !32
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !35, !noalias !32
  %139 = or i64 %127, 16
  %140 = getelementptr i16, i16* %73, i64 %139
  %141 = getelementptr i16, i16* %100, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !32
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !32
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !35, !noalias !32
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !35, !noalias !32
  %150 = or i64 %127, 32
  %151 = getelementptr i16, i16* %73, i64 %150
  %152 = getelementptr i16, i16* %100, i64 %150
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !32
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !32
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !35, !noalias !32
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !35, !noalias !32
  %161 = or i64 %127, 48
  %162 = getelementptr i16, i16* %73, i64 %161
  %163 = getelementptr i16, i16* %100, i64 %161
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !32
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !32
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !35, !noalias !32
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !35, !noalias !32
  %172 = add i64 %127, 64
  %173 = add i64 %128, -4
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %126, !llvm.loop !37

175:                                              ; preds = %126, %114
  %176 = phi i64 [ 0, %114 ], [ %172, %126 ]
  %177 = icmp eq i64 %122, 0
  br i1 %177, label %194, label %178

178:                                              ; preds = %175, %178
  %179 = phi i64 [ %191, %178 ], [ %176, %175 ]
  %180 = phi i64 [ %192, %178 ], [ %122, %175 ]
  %181 = getelementptr i16, i16* %73, i64 %179
  %182 = getelementptr i16, i16* %100, i64 %179
  %183 = bitcast i16* %181 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !32
  %185 = getelementptr i16, i16* %181, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 2, !alias.scope !32
  %188 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %188, align 2, !alias.scope !35, !noalias !32
  %189 = getelementptr i16, i16* %182, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  store <8 x i16> %187, <8 x i16>* %190, align 2, !alias.scope !35, !noalias !32
  %191 = add i64 %179, 16
  %192 = add i64 %180, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %178, !llvm.loop !38

194:                                              ; preds = %178, %175
  %195 = icmp eq i64 %102, %115
  br i1 %195, label %249, label %196

196:                                              ; preds = %194, %104, %98
  %197 = phi i64 [ %101, %104 ], [ %101, %98 ], [ %116, %194 ]
  %198 = phi i16* [ %73, %104 ], [ %73, %98 ], [ %117, %194 ]
  %199 = phi i16* [ %100, %104 ], [ %100, %98 ], [ %118, %194 ]
  %200 = add i64 %197, -1
  %201 = and i64 %197, 7
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %214, label %203

203:                                              ; preds = %196, %203
  %204 = phi i64 [ %209, %203 ], [ %197, %196 ]
  %205 = phi i16* [ %211, %203 ], [ %198, %196 ]
  %206 = phi i16* [ %210, %203 ], [ %199, %196 ]
  %207 = phi i64 [ %212, %203 ], [ %201, %196 ]
  %208 = load i16, i16* %205, align 2
  store i16 %208, i16* %206, align 2
  %209 = add i64 %204, -1
  %210 = getelementptr inbounds i16, i16* %206, i64 1
  %211 = getelementptr inbounds i16, i16* %205, i64 1
  %212 = add i64 %207, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %203, !llvm.loop !39

214:                                              ; preds = %203, %196
  %215 = phi i64 [ %197, %196 ], [ %209, %203 ]
  %216 = phi i16* [ %198, %196 ], [ %211, %203 ]
  %217 = phi i16* [ %199, %196 ], [ %210, %203 ]
  %218 = icmp ult i64 %200, 7
  br i1 %218, label %249, label %219

219:                                              ; preds = %214, %219
  %220 = phi i64 [ %245, %219 ], [ %215, %214 ]
  %221 = phi i16* [ %247, %219 ], [ %216, %214 ]
  %222 = phi i16* [ %246, %219 ], [ %217, %214 ]
  %223 = load i16, i16* %221, align 2
  store i16 %223, i16* %222, align 2
  %224 = getelementptr inbounds i16, i16* %222, i64 1
  %225 = getelementptr inbounds i16, i16* %221, i64 1
  %226 = load i16, i16* %225, align 2
  store i16 %226, i16* %224, align 2
  %227 = getelementptr inbounds i16, i16* %222, i64 2
  %228 = getelementptr inbounds i16, i16* %221, i64 2
  %229 = load i16, i16* %228, align 2
  store i16 %229, i16* %227, align 2
  %230 = getelementptr inbounds i16, i16* %222, i64 3
  %231 = getelementptr inbounds i16, i16* %221, i64 3
  %232 = load i16, i16* %231, align 2
  store i16 %232, i16* %230, align 2
  %233 = getelementptr inbounds i16, i16* %222, i64 4
  %234 = getelementptr inbounds i16, i16* %221, i64 4
  %235 = load i16, i16* %234, align 2
  store i16 %235, i16* %233, align 2
  %236 = getelementptr inbounds i16, i16* %222, i64 5
  %237 = getelementptr inbounds i16, i16* %221, i64 5
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %236, align 2
  %239 = getelementptr inbounds i16, i16* %222, i64 6
  %240 = getelementptr inbounds i16, i16* %221, i64 6
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = getelementptr inbounds i16, i16* %222, i64 7
  %243 = getelementptr inbounds i16, i16* %221, i64 7
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = add i64 %220, -8
  %246 = getelementptr inbounds i16, i16* %222, i64 8
  %247 = getelementptr inbounds i16, i16* %221, i64 8
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %249, label %219, !llvm.loop !40

249:                                              ; preds = %214, %219, %194
  %250 = load i8, i8* %52, align 1
  %251 = getelementptr inbounds i8, i8* %62, i64 32
  store i8 0, i8* %251, align 8
  %252 = getelementptr inbounds i8, i8* %62, i64 36
  %253 = bitcast i8* %252 to i32*
  store i32 %1, i32* %253, align 4
  %254 = ptrtoint i8* %62 to i64
  %255 = icmp slt i8 %250, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %249
  %257 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %257) #13
  br label %258

258:                                              ; preds = %67, %249, %256
  %259 = phi i64 [ %71, %67 ], [ %254, %249 ], [ %254, %256 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  %260 = and i8 %59, 1
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds i8, i8* %62, i64 32
  store i8 1, i8* %263, align 8
  br label %264

264:                                              ; preds = %258, %262
  %265 = load %"class.query_parser::QueryNodeList"**, %"class.query_parser::QueryNodeList"*** %31, align 8
  %266 = getelementptr inbounds %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %265, i64 -1
  %267 = load %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %266, align 8
  %268 = inttoptr i64 %259 to %"class.query_parser::QueryNode"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  store %"class.query_parser::QueryNode"* %268, %"class.query_parser::QueryNode"** %57, align 8
  %269 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %267, i64 0, i32 1, i32 0, i32 1
  %270 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %269, align 8
  %271 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %267, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %272 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %271, align 8
  %273 = icmp ult %"class.std::__1::unique_ptr"* %270, %272
  br i1 %273, label %274, label %279

274:                                              ; preds = %264
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %57, align 8
  %275 = bitcast %"class.std::__1::unique_ptr"* %270 to i64*
  store i64 %259, i64* %275, align 8
  %276 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 1
  %277 = ptrtoint %"class.std::__1::unique_ptr"* %276 to i64
  %278 = bitcast %"class.std::__1::unique_ptr"** %269 to i64*
  store i64 %277, i64* %278, align 8
  br label %281

279:                                              ; preds = %264
  %280 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %267, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12query_parser9QueryNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.20"* %280, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #11
  br label %281

281:                                              ; preds = %279, %274
  %282 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %57, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %57, align 8
  %283 = icmp eq %"class.query_parser::QueryNode"* %282, null
  br i1 %283, label %289, label %284

284:                                              ; preds = %281
  %285 = bitcast %"class.query_parser::QueryNode"* %282 to void (%"class.query_parser::QueryNode"*)***
  %286 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %285, align 8
  %287 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %286, i64 1
  %288 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %287, align 8
  call void %288(%"class.query_parser::QueryNode"* nonnull %282) #11
  br label %289

289:                                              ; preds = %284, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  br label %385

290:                                              ; preds = %58
  %291 = load i64, i64* %43, align 8
  %292 = load i8, i8* %14, align 1
  %293 = icmp slt i8 %292, 0
  %294 = load i16*, i16** %17, align 8
  %295 = select i1 %293, i16* %294, i16* %19
  %296 = getelementptr inbounds i16, i16* %295, i64 %291
  %297 = load i16, i16* %296, align 2
  switch i16 %297, label %385 [
    i16 8221, label %298
    i16 8220, label %298
    i16 187, label %298
    i16 171, label %298
    i16 34, label %298
    i16 8222, label %298
  ]

298:                                              ; preds = %290, %290, %290, %290, %290, %290
  %299 = and i8 %59, 1
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %301, label %382

301:                                              ; preds = %298
  %302 = call i8* @_Znwm(i64 32) #13
  %303 = bitcast i8* %302 to i32 (...)***
  %304 = getelementptr inbounds i8, i8* %302, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %304, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser15QueryNodePhraseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8
  %305 = ptrtoint i8* %302 to i64
  %306 = load %"class.query_parser::QueryNodeList"**, %"class.query_parser::QueryNodeList"*** %31, align 8
  %307 = getelementptr inbounds %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %306, i64 -1
  %308 = load %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %307, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  store i8* %302, i8** %46, align 8
  %309 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %308, i64 0, i32 1, i32 0, i32 1
  %310 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %309, align 8
  %311 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %308, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %312 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %311, align 8
  %313 = icmp ult %"class.std::__1::unique_ptr"* %310, %312
  br i1 %313, label %314, label %319

314:                                              ; preds = %301
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %45, align 8
  %315 = bitcast %"class.std::__1::unique_ptr"* %310 to i64*
  store i64 %305, i64* %315, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %310, i64 1
  %317 = ptrtoint %"class.std::__1::unique_ptr"* %316 to i64
  %318 = bitcast %"class.std::__1::unique_ptr"** %309 to i64*
  store i64 %317, i64* %318, align 8
  br label %321

319:                                              ; preds = %301
  %320 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %308, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12query_parser9QueryNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.20"* %320, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #11
  br label %321

321:                                              ; preds = %319, %314
  %322 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %45, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %45, align 8
  %323 = icmp eq %"class.query_parser::QueryNode"* %322, null
  br i1 %323, label %329, label %324

324:                                              ; preds = %321
  %325 = bitcast %"class.query_parser::QueryNode"* %322 to void (%"class.query_parser::QueryNode"*)***
  %326 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %326, i64 1
  %328 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %327, align 8
  call void %328(%"class.query_parser::QueryNode"* nonnull %322) #11
  br label %329

329:                                              ; preds = %321, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %330 = load %"class.query_parser::QueryNodeList"**, %"class.query_parser::QueryNodeList"*** %31, align 8
  %331 = load %"class.query_parser::QueryNodeList"**, %"class.query_parser::QueryNodeList"*** %32, align 8
  %332 = icmp eq %"class.query_parser::QueryNodeList"** %330, %331
  %333 = ptrtoint %"class.query_parser::QueryNodeList"** %331 to i64
  br i1 %332, label %338, label %334

334:                                              ; preds = %329
  %335 = bitcast %"class.query_parser::QueryNodeList"** %330 to i64*
  store i64 %305, i64* %335, align 8
  %336 = getelementptr inbounds %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %330, i64 1
  %337 = ptrtoint %"class.query_parser::QueryNodeList"** %336 to i64
  store i64 %337, i64* %47, align 8
  br label %385

338:                                              ; preds = %329
  %339 = ptrtoint %"class.query_parser::QueryNodeList"** %330 to i64
  %340 = load i64, i64* %48, align 8
  %341 = sub i64 %339, %340
  %342 = ashr exact i64 %341, 3
  %343 = add nsw i64 %342, 1
  %344 = icmp ugt i64 %343, 2305843009213693951
  br i1 %344, label %345, label %347

345:                                              ; preds = %338
  %346 = bitcast %"class.std::__1::vector.30"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %346) #12
  unreachable

347:                                              ; preds = %338
  %348 = sub i64 %333, %340
  %349 = ashr exact i64 %348, 3
  %350 = icmp ult i64 %349, 1152921504606846975
  br i1 %350, label %351, label %359

351:                                              ; preds = %347
  %352 = ashr exact i64 %348, 2
  %353 = icmp ult i64 %352, %343
  %354 = select i1 %353, i64 %343, i64 %352
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %364, label %356

356:                                              ; preds = %351
  %357 = icmp ugt i64 %354, 2305843009213693951
  br i1 %357, label %358, label %359

358:                                              ; preds = %356
  call void @abort() #12
  unreachable

359:                                              ; preds = %356, %347
  %360 = phi i64 [ %354, %356 ], [ 2305843009213693951, %347 ]
  %361 = shl i64 %360, 3
  %362 = call i8* @_Znwm(i64 %361) #13
  %363 = bitcast i8* %362 to %"class.query_parser::QueryNodeList"**
  br label %364

364:                                              ; preds = %359, %351
  %365 = phi i64 [ %360, %359 ], [ 0, %351 ]
  %366 = phi i8* [ %362, %359 ], [ null, %351 ]
  %367 = phi %"class.query_parser::QueryNodeList"** [ %363, %359 ], [ null, %351 ]
  %368 = getelementptr inbounds %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %367, i64 %342
  %369 = getelementptr inbounds %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %367, i64 %365
  %370 = ptrtoint %"class.query_parser::QueryNodeList"** %369 to i64
  %371 = bitcast %"class.query_parser::QueryNodeList"** %368 to i64*
  store i64 %305, i64* %371, align 8
  %372 = getelementptr inbounds %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %368, i64 1
  %373 = ptrtoint %"class.query_parser::QueryNodeList"** %372 to i64
  %374 = ptrtoint %"class.query_parser::QueryNodeList"** %367 to i64
  %375 = icmp sgt i64 %341, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %364
  %377 = inttoptr i64 %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %366, i8* align 8 %377, i64 %341, i1 false) #11
  br label %378

378:                                              ; preds = %376, %364
  store i64 %374, i64* %48, align 8
  store i64 %373, i64* %47, align 8
  store i64 %370, i64* %49, align 8
  %379 = icmp eq i64 %340, 0
  br i1 %379, label %385, label %380

380:                                              ; preds = %378
  %381 = inttoptr i64 %340 to i8*
  call void @_ZdlPv(i8* %381) #13
  br label %385

382:                                              ; preds = %298
  %383 = load %"class.query_parser::QueryNodeList"**, %"class.query_parser::QueryNodeList"*** %31, align 8
  %384 = getelementptr inbounds %"class.query_parser::QueryNodeList"*, %"class.query_parser::QueryNodeList"** %383, i64 -1
  store %"class.query_parser::QueryNodeList"** %384, %"class.query_parser::QueryNodeList"*** %31, align 8
  br label %385

385:                                              ; preds = %334, %378, %380, %290, %382, %289
  %386 = phi i8 [ %59, %289 ], [ 0, %382 ], [ %59, %290 ], [ 1, %380 ], [ 1, %378 ], [ 1, %334 ]
  %387 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %6) #11
  br i1 %387, label %58, label %388

388:                                              ; preds = %385, %27
  call void @_ZN12query_parser13QueryNodeList19RemoveEmptySubnodesEv(%"class.query_parser::QueryNodeList"* %2)
  %389 = load %"class.query_parser::QueryNodeList"**, %"class.query_parser::QueryNodeList"*** %30, align 8
  %390 = icmp eq %"class.query_parser::QueryNodeList"** %389, null
  br i1 %390, label %395, label %391

391:                                              ; preds = %388
  %392 = ptrtoint %"class.query_parser::QueryNodeList"** %389 to i64
  %393 = bitcast %"class.query_parser::QueryNodeList"*** %31 to i64*
  store i64 %392, i64* %393, align 8
  %394 = bitcast %"class.query_parser::QueryNodeList"** %389 to i8*
  call void @_ZdlPv(i8* %394) #13
  br label %395

395:                                              ; preds = %388, %391
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  br label %396

396:                                              ; preds = %3, %395
  %397 = phi i1 [ true, %395 ], [ false, %3 ]
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #11
  ret i1 %397
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser11QueryParser15ParseQueryWordsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS1_6vectorIS7_NS5_IS7_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.std::__1::vector.13"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.query_parser::QueryNodeList", align 8
  %5 = bitcast %"class.query_parser::QueryNodeList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector.20"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = call zeroext i1 @_ZN12query_parser11QueryParser14ParseQueryImplERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS_13QueryNodeListE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, %"class.query_parser::QueryNodeList"* nonnull %4)
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %8, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  br label %39

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.20"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  %20 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  br i1 %19, label %39, label %21

21:                                               ; preds = %14, %21
  %22 = phi i64 [ %33, %21 ], [ %18, %14 ]
  %23 = phi i64 [ %31, %21 ], [ 0, %14 ]
  %24 = inttoptr i64 %22 to %"class.std::__1::unique_ptr"*
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %23, i32 0, i32 0, i32 0
  %26 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %25, align 8
  %27 = bitcast %"class.query_parser::QueryNode"* %26 to void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)***
  %28 = load void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)**, void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)*, void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)** %28, i64 7
  %30 = load void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)*, void (%"class.query_parser::QueryNode"*, %"class.std::__1::vector.13"*)** %29, align 8
  call void %30(%"class.query_parser::QueryNode"* %26, %"class.std::__1::vector.13"* %2) #11
  %31 = add nuw i64 %23, 1
  %32 = load i64, i64* %15, align 8
  %33 = load i64, i64* %17, align 8
  %34 = sub i64 %32, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %31, %35
  br i1 %36, label %21, label %37

37:                                               ; preds = %21
  %38 = inttoptr i64 %33 to %"class.std::__1::unique_ptr"*
  br label %39

39:                                               ; preds = %11, %37, %14
  %40 = phi %"class.std::__1::unique_ptr"* [ %13, %11 ], [ %38, %37 ], [ %20, %14 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr"* %40, null
  br i1 %41, label %64, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.std::__1::unique_ptr"* %40 to i8*
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %45 = icmp eq %"class.std::__1::unique_ptr"* %44, %40
  br i1 %45, label %62, label %46

46:                                               ; preds = %42, %57
  %47 = phi %"class.std::__1::unique_ptr"* [ %48, %57 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 -1
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %49, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %49, align 8
  %51 = icmp eq %"class.query_parser::QueryNode"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.query_parser::QueryNode"* %50 to void (%"class.query_parser::QueryNode"*)***
  %54 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %54, i64 1
  %56 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %55, align 8
  call void %56(%"class.query_parser::QueryNode"* nonnull %50) #11
  br label %57

57:                                               ; preds = %52, %46
  %58 = icmp eq %"class.std::__1::unique_ptr"* %48, %40
  br i1 %58, label %59, label %46

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.20"* %8 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %42
  %63 = phi i8* [ %61, %59 ], [ %43, %42 ]
  store %"class.std::__1::unique_ptr"* %40, %"class.std::__1::unique_ptr"** %7, align 8
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %39, %62
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser11QueryParser15ParseQueryNodesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS1_6vectorINS1_10unique_ptrINS_9QueryNodeENS1_14default_deleteISD_EEEENS5_ISG_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.std::__1::vector.20"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.query_parser::QueryNodeList", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.query_parser::QueryNodeList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1, i32 0, i32 1
  %9 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds %"class.query_parser::QueryNodeList", %"class.query_parser::QueryNodeList"* %4, i64 0, i32 1
  %11 = bitcast %"class.std::__1::vector.20"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %20 = select i1 %16, i16* %18, i16* %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %15 to i64
  %24 = select i1 %16, i64 %22, i64 %23
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %20, i64 %24) #11
  %25 = call zeroext i1 @_ZN12query_parser11QueryParser14ParseQueryImplERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS_13QueryNodeListE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 %1, %"class.query_parser::QueryNodeList"* nonnull %4)
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %3, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br i1 %25, label %37, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %10, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  br label %51

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::vector.20"* %10 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  %40 = bitcast %"class.std::__1::vector.20"* %2 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = bitcast %"class.std::__1::vector.20"* %2 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %42, align 8
  %43 = bitcast %"class.std::__1::vector.20"* %10 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = extractelement <2 x i64> %41, i32 0
  %50 = inttoptr i64 %49 to %"class.std::__1::unique_ptr"*
  br label %51

51:                                               ; preds = %34, %37
  %52 = phi %"class.std::__1::unique_ptr"* [ %36, %34 ], [ %50, %37 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12query_parser13QueryNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %53 = icmp eq %"class.std::__1::unique_ptr"* %52, null
  br i1 %53, label %76, label %54

54:                                               ; preds = %51
  %55 = bitcast %"class.std::__1::unique_ptr"* %52 to i8*
  %56 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr"* %56, %52
  br i1 %57, label %74, label %58

58:                                               ; preds = %54, %69
  %59 = phi %"class.std::__1::unique_ptr"* [ %60, %69 ], [ %56, %54 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %61, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %61, align 8
  %63 = icmp eq %"class.query_parser::QueryNode"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.query_parser::QueryNode"* %62 to void (%"class.query_parser::QueryNode"*)***
  %66 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %66, i64 1
  %68 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %67, align 8
  call void %68(%"class.query_parser::QueryNode"* nonnull %62) #11
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::unique_ptr"* %60, %52
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.20"* %10 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %54
  %75 = phi i8* [ %73, %71 ], [ %55, %54 ]
  store %"class.std::__1::unique_ptr"* %52, %"class.std::__1::unique_ptr"** %8, align 8
  call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %51, %74
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12query_parser11QueryParser14DoesQueryMatchERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorINS1_10unique_ptrINS_9QueryNodeENS1_14default_deleteISC_EEEENS5_ISF_EEEEPNSA_INS1_4pairImmEENS5_ISL_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.6"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.6", align 16
  %7 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %8, %10
  br i1 %11, label %128, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #11
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load i8, i8* %19, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = select i1 %22, i16* %24, i16* %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %26, i64 %30) #11
  call void @_ZN12query_parser11QueryParser17ExtractQueryWordsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_9QueryWordENS5_ISB_EEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::vector"* nonnull %4)
  %31 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %14, align 8
  %32 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %15, align 8
  %33 = icmp eq %"struct.query_parser::QueryWord"* %31, %32
  br i1 %33, label %94, label %34

34:                                               ; preds = %12
  %35 = bitcast %"class.std::__1::vector.6"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %6, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %6, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 0, i64 24, i1 false) #11
  %39 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr"* %39, %40
  br i1 %41, label %54, label %44

42:                                               ; preds = %44
  %43 = icmp eq %"class.std::__1::unique_ptr"* %53, %40
  br i1 %43, label %54, label %44

44:                                               ; preds = %34, %42
  %45 = phi %"class.std::__1::unique_ptr"* [ %53, %42 ], [ %39, %34 ]
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %46, align 8
  %48 = bitcast %"class.query_parser::QueryNode"* %47 to i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)***
  %49 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)**, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)** %49, i64 5
  %51 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*)** %50, align 8
  %52 = call zeroext i1 %51(%"class.query_parser::QueryNode"* %47, %"class.std::__1::vector"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.6"* nonnull %6) #11
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 1
  br i1 %52, label %42, label %85

54:                                               ; preds = %42, %34
  %55 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i64, i64* %17, align 8
  %60 = zext i8 %57 to i64
  %61 = select i1 %58, i64 %59, i64 %60
  %62 = load i8, i8* %19, align 1
  %63 = icmp slt i8 %62, 0
  %64 = load i64, i64* %27, align 8
  %65 = zext i8 %62 to i64
  %66 = select i1 %63, i64 %64, i64 %65
  %67 = icmp eq i64 %61, %66
  br i1 %67, label %73, label %68

68:                                               ; preds = %54
  %69 = bitcast %"class.std::__1::vector.6"* %2 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 1
  %72 = bitcast %"struct.std::__1::pair"** %71 to i64*
  store i64 %70, i64* %72, align 8
  br label %85

73:                                               ; preds = %54
  call void @_ZN12query_parser11QueryParser29SortAndCoalesceMatchPositionsEPNSt3__16vectorINS1_4pairImmEENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.6"* nonnull %6)
  %74 = bitcast %"class.std::__1::vector.6"* %6 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 16
  %76 = bitcast %"class.std::__1::vector.6"* %2 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  %78 = bitcast %"class.std::__1::vector.6"* %2 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %78, align 8
  %79 = bitcast %"class.std::__1::vector.6"* %6 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %79, align 16
  %80 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::pair"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"struct.std::__1::pair"** %38 to i64*
  %84 = load i64, i64* %83, align 16
  store i64 %84, i64* %81, align 8
  store i64 %82, i64* %83, align 16
  br label %85

85:                                               ; preds = %44, %68, %73
  %86 = phi i1 [ true, %73 ], [ true, %68 ], [ false, %44 ]
  %87 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %36, align 16
  %88 = icmp eq %"struct.std::__1::pair"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = ptrtoint %"struct.std::__1::pair"* %87 to i64
  %91 = bitcast %"struct.std::__1::pair"** %37 to i64*
  store i64 %90, i64* %91, align 8
  %92 = bitcast %"struct.std::__1::pair"* %87 to i8*
  call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %85, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  br label %94

94:                                               ; preds = %12, %93
  %95 = phi i1 [ %86, %93 ], [ false, %12 ]
  %96 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %94, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  %104 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %14, align 8
  %105 = icmp eq %"struct.query_parser::QueryWord"* %104, null
  br i1 %105, label %127, label %106

106:                                              ; preds = %103
  %107 = bitcast %"struct.query_parser::QueryWord"* %104 to i8*
  %108 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %15, align 8
  %109 = icmp eq %"struct.query_parser::QueryWord"* %108, %104
  br i1 %109, label %125, label %110

110:                                              ; preds = %106, %120
  %111 = phi %"struct.query_parser::QueryWord"* [ %112, %120 ], [ %108, %106 ]
  %112 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %111, i64 -1
  %113 = bitcast %"struct.query_parser::QueryWord"* %112 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %110
  %118 = bitcast %"struct.query_parser::QueryWord"* %112 to i8**
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #13
  br label %120

120:                                              ; preds = %117, %110
  %121 = icmp eq %"struct.query_parser::QueryWord"* %112, %104
  br i1 %121, label %122, label %110

122:                                              ; preds = %120
  %123 = bitcast %"class.std::__1::vector"* %4 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %122, %106
  %126 = phi i8* [ %124, %122 ], [ %107, %106 ]
  store %"struct.query_parser::QueryWord"* %104, %"struct.query_parser::QueryWord"** %15, align 8
  call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %103, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br label %128

128:                                              ; preds = %3, %127
  %129 = phi i1 [ %95, %127 ], [ false, %3 ]
  ret i1 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser11QueryParser17ExtractQueryWordsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_9QueryWordENS5_ISB_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::i18n::BreakIterator", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.query_parser::QueryWord", align 8
  %7 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 72, i1 false)
  %8 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %17 = select i1 %13, i16* %15, i16* %16
  store i16* %17, i16** %9, align 8
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %12 to i64
  %22 = select i1 %13, i64 %20, i64 %21
  store i64 %22, i64* %18, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  %23 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %3) #11
  br i1 %23, label %24, label %83

24:                                               ; preds = %2
  %25 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #11
  br i1 %25, label %26, label %83

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = bitcast %"struct.query_parser::QueryWord"* %6 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %6, i64 0, i32 1
  %35 = bitcast %"struct.query_parser::QueryWord"** %32 to i64*
  %36 = bitcast %"struct.query_parser::QueryWord"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = bitcast %"struct.query_parser::QueryWord"* %6 to i8**
  %39 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %3, i64 0, i32 4
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %41 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %42 = bitcast %"struct.query_parser::QueryWord"* %6 to i8*
  br label %43

43:                                               ; preds = %26, %81
  %44 = call zeroext i1 @_ZNK4base4i18n13BreakIterator6IsWordEv(%"class.base::i18n::BreakIterator"* nonnull %3) #11
  br i1 %44, label %45, label %81

45:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::i18n::BreakIterator"* nonnull %3) #11
  %46 = load i8, i8* %30, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %28, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 32, i1 false)
  %53 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %32, align 8
  %54 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %33, align 8
  %55 = icmp ult %"struct.query_parser::QueryWord"* %53, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %"struct.query_parser::QueryWord"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %31, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #11
  %58 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %53, i64 0, i32 1
  %59 = load i64, i64* %34, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %53, i64 1
  %61 = ptrtoint %"struct.query_parser::QueryWord"* %60 to i64
  store i64 %61, i64* %35, align 8
  br label %67

62:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN12query_parser9QueryWordENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %1, %"struct.query_parser::QueryWord"* nonnull dereferenceable(32) %6) #11
  %63 = load i8, i8* %37, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %56, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #11
  %68 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %32, align 8
  %69 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %68, i64 -1, i32 0
  %70 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  %71 = load i64, i64* %39, align 8
  %72 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %32, align 8
  %73 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %72, i64 -1, i32 1
  store i64 %71, i64* %73, align 8
  %74 = load i8, i8* %30, align 1
  br label %75

75:                                               ; preds = %67, %45
  %76 = phi i8 [ %74, %67 ], [ %46, %45 ]
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %81

81:                                               ; preds = %80, %43
  %82 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %3) #11
  br i1 %82, label %43, label %83

83:                                               ; preds = %81, %24, %2
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12query_parser11QueryParser29SortAndCoalesceMatchPositionsEPNSt3__16vectorINS1_4pairImmEENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.6"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, align 8
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = bitcast i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  store i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)* @_ZN12query_parser12_GLOBAL__N_120CompareMatchPositionERKNSt3__14pairImmEES5_, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  call void @_ZNSt3__16__sortIRPFiRKNS_4pairImmEES4_EPS2_EEvT0_S9_T_(%"struct.std::__1::pair"* %4, %"struct.std::__1::pair"* %6, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** nonnull dereferenceable(8) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %8 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %129, %1
  ret void

14:                                               ; preds = %1, %129
  %15 = phi i64 [ %130, %129 ], [ %9, %1 ]
  %16 = phi i64 [ %132, %129 ], [ %11, %1 ]
  %17 = phi i64 [ %131, %129 ], [ 0, %1 ]
  %18 = sub i64 -3, %17
  %19 = inttoptr i64 %16 to %"struct.std::__1::pair"*
  %20 = inttoptr i64 %15 to %"struct.std::__1::pair"*
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %17
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %23 = icmp eq %"struct.std::__1::pair"* %22, %20
  br i1 %23, label %129, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 %17, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1
  %30 = load i64, i64* %25, align 8
  %31 = load i64, i64* %26, align 8
  %32 = icmp uge i64 %30, %31
  %33 = load i64, i64* %27, align 8
  %34 = icmp ule i64 %30, %33
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %129

36:                                               ; preds = %24
  %37 = sub i64 0, %16
  br label %38

38:                                               ; preds = %36, %118
  %39 = phi i64 [ %124, %118 ], [ %33, %36 ]
  %40 = load i64, i64* %28, align 8
  %41 = icmp ult i64 %39, %40
  %42 = select i1 %41, i64* %28, i64* %27
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %27, align 8
  %44 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %45 = icmp eq %"struct.std::__1::pair"* %29, %44
  br i1 %45, label %57, label %46

46:                                               ; preds = %38
  %47 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 %18, i32 0
  %48 = bitcast i64* %47 to i8*
  %49 = getelementptr i8, i8* %48, i64 %37
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 4
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i8* %49, inttoptr (i64 48 to i8*)
  br i1 %54, label %98, label %55

55:                                               ; preds = %46
  %56 = sub nsw i64 %52, %53
  br label %59

57:                                               ; preds = %38
  store %"struct.std::__1::pair"* %22, %"struct.std::__1::pair"** %5, align 8
  %58 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  br label %129

59:                                               ; preds = %59, %55
  %60 = phi i64 [ 1, %55 ], [ %95, %59 ]
  %61 = phi %"struct.std::__1::pair"* [ %29, %55 ], [ %94, %59 ]
  %62 = phi i64 [ %56, %55 ], [ %96, %59 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %60
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %63, i64 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %63, i64 0, i32 1
  store i64 %68, i64* %69, align 8
  %70 = add nuw nsw i64 %60, 1
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %70
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 1, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 1, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 1
  store i64 %76, i64* %77, align 8
  %78 = add nuw nsw i64 %60, 2
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %78
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 2, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 2, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 0, i32 1
  store i64 %84, i64* %85, align 8
  %86 = add nuw nsw i64 %60, 3
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %86
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 3, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 0
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 3, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 1
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 4
  %95 = add nuw nsw i64 %60, 4
  %96 = add i64 %62, -4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %59

98:                                               ; preds = %59, %46
  %99 = phi i64 [ undef, %46 ], [ %95, %59 ]
  %100 = phi i64 [ 1, %46 ], [ %95, %59 ]
  %101 = phi %"struct.std::__1::pair"* [ %29, %46 ], [ %94, %59 ]
  %102 = icmp eq i64 %53, 0
  br i1 %102, label %118, label %103

103:                                              ; preds = %98, %103
  %104 = phi i64 [ %115, %103 ], [ %100, %98 ]
  %105 = phi %"struct.std::__1::pair"* [ %114, %103 ], [ %101, %98 ]
  %106 = phi i64 [ %116, %103 ], [ %53, %98 ]
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %104
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 1
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 1
  %115 = add nuw nsw i64 %104, 1
  %116 = add i64 %106, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %103, !llvm.loop !41

118:                                              ; preds = %103, %98
  %119 = phi i64 [ %99, %98 ], [ %115, %103 ]
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 %119
  store %"struct.std::__1::pair"* %120, %"struct.std::__1::pair"** %5, align 8
  %121 = load i64, i64* %25, align 8
  %122 = load i64, i64* %26, align 8
  %123 = icmp uge i64 %121, %122
  %124 = load i64, i64* %27, align 8
  %125 = icmp ule i64 %121, %124
  %126 = and i1 %123, %125
  br i1 %126, label %38, label %127

127:                                              ; preds = %118
  %128 = ptrtoint %"struct.std::__1::pair"* %120 to i64
  br label %129

129:                                              ; preds = %127, %24, %14, %57
  %130 = phi i64 [ %128, %127 ], [ %15, %24 ], [ %15, %14 ], [ %58, %57 ]
  %131 = add nuw i64 %17, 1
  %132 = load i64, i64* %10, align 8
  %133 = sub i64 %130, %132
  %134 = ashr exact i64 %133, 4
  %135 = icmp ult i64 %131, %134
  br i1 %135, label %14, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12query_parser11QueryParser14DoesQueryMatchERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEERKNS2_INS1_10unique_ptrINS_9QueryNodeENS1_14default_deleteISA_EEEENS4_ISD_EEEE(%"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %4, %6
  br i1 %7, label %26, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %11, align 8
  %13 = icmp eq %"struct.query_parser::QueryWord"* %10, %12
  br i1 %13, label %26, label %16

14:                                               ; preds = %16
  %15 = icmp eq %"class.std::__1::unique_ptr"* %25, %6
  br i1 %15, label %26, label %16

16:                                               ; preds = %8, %14
  %17 = phi %"class.std::__1::unique_ptr"* [ %25, %14 ], [ %4, %8 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %18, align 8
  %20 = bitcast %"class.query_parser::QueryNode"* %19 to i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*)***
  %21 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*)**, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*)** %21, i64 6
  %23 = load i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*)*, i1 (%"class.query_parser::QueryNode"*, %"class.std::__1::vector"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.query_parser::QueryNode"* %19, %"class.std::__1::vector"* dereferenceable(24) %0) #11
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 1
  br i1 %24, label %14, label %26

26:                                               ; preds = %16, %14, %8, %2
  %27 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %16 ], [ true, %14 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"* dereferenceable(16), i32) unnamed_addr #5

declare zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base4i18n13BreakIterator6IsWordEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #5

declare void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* sret, %"class.base::i18n::BreakIterator"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !42
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !42
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !45, !noalias !42
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !45, !noalias !42
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !42
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !42
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !45, !noalias !42
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !45, !noalias !42
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !42
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !42
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !45, !noalias !42
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !45, !noalias !42
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !42
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !42
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !45, !noalias !42
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !45, !noalias !42
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !47

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !42
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !42
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !45, !noalias !42
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !45, !noalias !42
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !48

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !49

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !50

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #12
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #12
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !51
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !51
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !54, !noalias !51
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !54, !noalias !51
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !51
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !51
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !54, !noalias !51
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !54, !noalias !51
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !51
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !51
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !54, !noalias !51
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !54, !noalias !51
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !51
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !51
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !54, !noalias !51
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !54, !noalias !51
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !56

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !51
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !51
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !54, !noalias !51
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !54, !noalias !51
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !57

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !58

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !59

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !60
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !60
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !63, !noalias !60
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !63, !noalias !60
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !60
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !60
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !63, !noalias !60
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !63, !noalias !60
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !60
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !60
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !63, !noalias !60
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !63, !noalias !60
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !60
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !60
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !63, !noalias !60
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !63, !noalias !60
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !65

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !60
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !60
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !63, !noalias !60
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !63, !noalias !60
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !66

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !67

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !68

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN12query_parser12_GLOBAL__N_120CompareMatchPositionERKNSt3__14pairImmEES5_(%"struct.std::__1::pair"* nocapture readonly dereferenceable(16), %"struct.std::__1::pair"* nocapture readonly dereferenceable(16)) #2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #12
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #12
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !69
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !69
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !72, !noalias !69
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !72, !noalias !69
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !69
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !69
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !72, !noalias !69
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !72, !noalias !69
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !69
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !69
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !72, !noalias !69
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !72, !noalias !69
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !69
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !69
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !72, !noalias !69
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !72, !noalias !69
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !74

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !69
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !69
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !72, !noalias !69
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !72, !noalias !69
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !75

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !76

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !77

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !78

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !79

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !80

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !82
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !82
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !85, !noalias !82
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !85, !noalias !82
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !82
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !82
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !85, !noalias !82
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !85, !noalias !82
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !82
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !82
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !85, !noalias !82
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !85, !noalias !82
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !82
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !82
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !85, !noalias !82
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !85, !noalias !82
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !87

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !82
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !82
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !85, !noalias !82
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !85, !noalias !82
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !88

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !89

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !90

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.13"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #12
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #12
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !91
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !91
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !94, !noalias !91
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !94, !noalias !91
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !91
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !91
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !94, !noalias !91
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !94, !noalias !91
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !91
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !91
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !94, !noalias !91
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !94, !noalias !91
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !91
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !91
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !94, !noalias !91
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !94, !noalias !91
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !96

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !91
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !91
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !94, !noalias !91
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !94, !noalias !91
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !97

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !98

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !99

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %221 = ptrtoint %"class.std::__1::basic_string"* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %222, align 8
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %225 = icmp eq %"class.std::__1::basic_string"* %224, %223
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = ptrtoint %"class.std::__1::basic_string"* %223 to i64
  br label %239

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::basic_string"* [ %231, %228 ], [ %34, %219 ]
  %230 = phi %"class.std::__1::basic_string"* [ %232, %228 ], [ %224, %219 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 -1
  %233 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  %234 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #11
  %235 = icmp eq %"class.std::__1::basic_string"* %232, %223
  br i1 %235, label %236, label %228

236:                                              ; preds = %228
  %237 = load i64, i64* %6, align 8
  %238 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %239

239:                                              ; preds = %226, %236
  %240 = phi %"class.std::__1::basic_string"* [ %223, %226 ], [ %238, %236 ]
  %241 = phi %"class.std::__1::basic_string"* [ %34, %226 ], [ %231, %236 ]
  %242 = phi i64 [ %227, %226 ], [ %237, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string"* %241 to i64
  store i64 %243, i64* %6, align 8
  store i64 %221, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %244 = inttoptr i64 %242 to %"class.std::__1::basic_string"*
  %245 = icmp eq %"class.std::__1::basic_string"* %240, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239, %256
  %247 = phi %"class.std::__1::basic_string"* [ %248, %256 ], [ %240, %239 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::basic_string"* %248 to i8**
  %255 = load i8*, i8** %254, align 8
  tail call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string"* %248, %244
  br i1 %257, label %258, label %246

258:                                              ; preds = %256, %239
  %259 = icmp eq i64 %242, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %261) #13
  br label %262

262:                                              ; preds = %258, %260
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN12query_parser9QueryNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.20"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.query_parser::QueryNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !100

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %142, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %142, align 8
  %144 = icmp eq %"class.query_parser::QueryNode"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.query_parser::QueryNode"* %143 to void (%"class.query_parser::QueryNode"*)***
  %147 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %147, i64 1
  %149 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %148, align 8
  tail call void %149(%"class.query_parser::QueryNode"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #12
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #12
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #13
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !101
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !101
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !104, !noalias !101
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !104, !noalias !101
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !101
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !101
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !104, !noalias !101
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !104, !noalias !101
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !101
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !101
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !104, !noalias !101
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !104, !noalias !101
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !101
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !101
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !104, !noalias !101
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !104, !noalias !101
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !106

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !101
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !101
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !104, !noalias !101
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !104, !noalias !101
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !107

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !108

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !109

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !110
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !110
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !113, !noalias !110
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !113, !noalias !110
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !110
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !110
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !113, !noalias !110
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !113, !noalias !110
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !110
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !110
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !113, !noalias !110
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !113, !noalias !110
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !110
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !110
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !113, !noalias !110
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !113, !noalias !110
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !115

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !110
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !110
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !113, !noalias !110
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !113, !noalias !110
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !116

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !117

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !118

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #13
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12query_parser9QueryWordENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.query_parser::QueryWord"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.query_parser::QueryWord"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.query_parser::QueryWord"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.query_parser::QueryWord"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.query_parser::QueryWord"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %36, i64 %35
  %39 = ptrtoint %"struct.query_parser::QueryWord"* %38 to i64
  %40 = bitcast %"struct.query_parser::QueryWord"* %37 to i8*
  %41 = bitcast %"struct.query_parser::QueryWord"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #11
  %42 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %1, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %37, i64 1
  %46 = ptrtoint %"struct.query_parser::QueryWord"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %48 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %47, align 8
  %49 = ptrtoint %"struct.query_parser::QueryWord"* %48 to i64
  %50 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %3, align 8
  %51 = icmp eq %"struct.query_parser::QueryWord"* %50, %48
  br i1 %51, label %93, label %52

52:                                               ; preds = %34
  %53 = getelementptr %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %50, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = ptrtoint i16** %53 to i64
  %55 = sub i64 %54, %49
  %56 = and i64 %55, 32
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %37, i64 -1
  %60 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %50, i64 -1
  %61 = bitcast %"struct.query_parser::QueryWord"* %59 to i8*
  %62 = bitcast %"struct.query_parser::QueryWord"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #11
  %63 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %37, i64 -1, i32 1
  %64 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %50, i64 -1, i32 1
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %58, %52
  %67 = phi %"struct.query_parser::QueryWord"* [ undef, %52 ], [ %59, %58 ]
  %68 = phi %"struct.query_parser::QueryWord"* [ %37, %52 ], [ %59, %58 ]
  %69 = phi %"struct.query_parser::QueryWord"* [ %50, %52 ], [ %60, %58 ]
  %70 = icmp ult i64 %55, 32
  br i1 %70, label %89, label %71

71:                                               ; preds = %66, %71
  %72 = phi %"struct.query_parser::QueryWord"* [ %81, %71 ], [ %68, %66 ]
  %73 = phi %"struct.query_parser::QueryWord"* [ %82, %71 ], [ %69, %66 ]
  %74 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %72, i64 -1
  %75 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %73, i64 -1
  %76 = bitcast %"struct.query_parser::QueryWord"* %74 to i8*
  %77 = bitcast %"struct.query_parser::QueryWord"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #11
  %78 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %72, i64 -1, i32 1
  %79 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %73, i64 -1, i32 1
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %72, i64 -2
  %82 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %73, i64 -2
  %83 = bitcast %"struct.query_parser::QueryWord"* %81 to i8*
  %84 = bitcast %"struct.query_parser::QueryWord"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11
  %85 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %72, i64 -2, i32 1
  %86 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %73, i64 -2, i32 1
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %85, align 8
  %88 = icmp eq %"struct.query_parser::QueryWord"* %82, %48
  br i1 %88, label %89, label %71

89:                                               ; preds = %71, %66
  %90 = phi %"struct.query_parser::QueryWord"* [ %67, %66 ], [ %81, %71 ]
  %91 = load i64, i64* %6, align 8
  %92 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %3, align 8
  br label %93

93:                                               ; preds = %34, %89
  %94 = phi %"struct.query_parser::QueryWord"* [ %92, %89 ], [ %48, %34 ]
  %95 = phi %"struct.query_parser::QueryWord"* [ %90, %89 ], [ %37, %34 ]
  %96 = phi i64 [ %91, %89 ], [ %49, %34 ]
  %97 = ptrtoint %"struct.query_parser::QueryWord"* %95 to i64
  store i64 %97, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %98 = inttoptr i64 %96 to %"struct.query_parser::QueryWord"*
  %99 = icmp eq %"struct.query_parser::QueryWord"* %94, %98
  br i1 %99, label %112, label %100

100:                                              ; preds = %93, %110
  %101 = phi %"struct.query_parser::QueryWord"* [ %102, %110 ], [ %94, %93 ]
  %102 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %101, i64 -1
  %103 = bitcast %"struct.query_parser::QueryWord"* %102 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = bitcast %"struct.query_parser::QueryWord"* %102 to i8**
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %107, %100
  %111 = icmp eq %"struct.query_parser::QueryWord"* %102, %98
  br i1 %111, label %112, label %100

112:                                              ; preds = %110, %93
  %113 = icmp eq i64 %96, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %96 to i8*
  tail call void @_ZdlPv(i8* %115) #13
  br label %116

116:                                              ; preds = %112, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFiRKNS_4pairImmEES4_EPS2_EEvT0_S9_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair", align 8
  br label %5

5:                                                ; preds = %275, %3
  %6 = phi %"struct.std::__1::pair"* [ %1, %3 ], [ %251, %275 ]
  %7 = phi %"struct.std::__1::pair"* [ %0, %3 ], [ %16, %275 ]
  %8 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1, i32 1
  %12 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  br label %13

13:                                               ; preds = %284, %5
  %14 = phi %"struct.std::__1::pair"* [ %7, %5 ], [ %285, %284 ]
  br label %15

15:                                               ; preds = %186, %13
  %16 = phi %"struct.std::__1::pair"* [ %14, %13 ], [ %175, %186 ]
  %17 = ptrtoint %"struct.std::__1::pair"* %16 to i64
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 4
  switch i64 %19, label %81 [
    i64 0, label %288
    i64 1, label %288
    i64 2, label %20
    i64 3, label %34
    i64 4, label %38
    i64 5, label %75
  ]

20:                                               ; preds = %15
  %21 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1
  %23 = tail call i32 %21(%"struct.std::__1::pair"* dereferenceable(16) %22, %"struct.std::__1::pair"* dereferenceable(16) %16) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %288, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0
  %28 = load i64, i64* %26, align 8
  %29 = load i64, i64* %27, align 8
  store i64 %29, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1, i32 1
  %32 = load i64, i64* %30, align 8
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  br label %288

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1
  %37 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %35, %"struct.std::__1::pair"* %36, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %288

38:                                               ; preds = %15
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 2
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1
  %42 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %39, %"struct.std::__1::pair"* %40, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2) #11
  %43 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %44 = tail call i32 %43(%"struct.std::__1::pair"* dereferenceable(16) %41, %"struct.std::__1::pair"* dereferenceable(16) %40) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %288, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %41, i64 0, i32 0
  %49 = load i64, i64* %47, align 8
  %50 = load i64, i64* %48, align 8
  store i64 %50, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 2, i32 1
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1, i32 1
  %53 = load i64, i64* %51, align 8
  %54 = load i64, i64* %52, align 8
  store i64 %54, i64* %51, align 8
  store i64 %53, i64* %52, align 8
  %55 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %56 = tail call i32 %55(%"struct.std::__1::pair"* dereferenceable(16) %40, %"struct.std::__1::pair"* dereferenceable(16) %39) #11
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %288, label %58

58:                                               ; preds = %46
  %59 = bitcast %"struct.std::__1::pair"* %40 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = bitcast %"struct.std::__1::pair"* %39 to <2 x i64>*
  %62 = load <2 x i64>, <2 x i64>* %61, align 8
  %63 = bitcast %"struct.std::__1::pair"* %39 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %63, align 8
  %64 = bitcast %"struct.std::__1::pair"* %40 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %64, align 8
  %65 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %66 = tail call i32 %65(%"struct.std::__1::pair"* dereferenceable(16) %39, %"struct.std::__1::pair"* dereferenceable(16) %16) #11
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %288, label %68

68:                                               ; preds = %58
  %69 = bitcast %"struct.std::__1::pair"* %39 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  %71 = bitcast %"struct.std::__1::pair"* %16 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8
  %73 = bitcast %"struct.std::__1::pair"* %16 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %73, align 8
  %74 = bitcast %"struct.std::__1::pair"* %39 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %74, align 8
  br label %288

75:                                               ; preds = %15
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 2
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 3
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 -1
  %80 = tail call i32 @_ZNSt3__17__sort5IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %76, %"struct.std::__1::pair"* %77, %"struct.std::__1::pair"* %78, %"struct.std::__1::pair"* %79, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %288

81:                                               ; preds = %15
  %82 = icmp slt i64 %18, 112
  br i1 %82, label %83, label %125

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 2
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %86 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %85, %"struct.std::__1::pair"* %84, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2) #11
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 3
  %88 = icmp eq %"struct.std::__1::pair"* %87, %6
  br i1 %88, label %288, label %89

89:                                               ; preds = %83
  %90 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  br label %93

93:                                               ; preds = %122, %89
  %94 = phi %"struct.std::__1::pair"* [ %87, %89 ], [ %123, %122 ]
  %95 = phi %"struct.std::__1::pair"* [ %84, %89 ], [ %94, %122 ]
  %96 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %97 = call i32 %96(%"struct.std::__1::pair"* dereferenceable(16) %94, %"struct.std::__1::pair"* dereferenceable(16) %95) #11
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %122, label %99

99:                                               ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #11
  %100 = bitcast %"struct.std::__1::pair"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %100, i64 16, i1 false) #11
  br label %101

101:                                              ; preds = %111, %99
  %102 = phi %"struct.std::__1::pair"* [ %94, %99 ], [ %103, %111 ]
  %103 = phi %"struct.std::__1::pair"* [ %95, %99 ], [ %113, %111 ]
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 1
  store i64 %108, i64* %109, align 8
  %110 = icmp eq %"struct.std::__1::pair"* %103, %16
  br i1 %110, label %116, label %111

111:                                              ; preds = %101
  %112 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 -1
  %114 = call i32 %112(%"struct.std::__1::pair"* nonnull dereferenceable(16) %4, %"struct.std::__1::pair"* dereferenceable(16) %113) #11
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %101

116:                                              ; preds = %111, %101
  %117 = phi %"struct.std::__1::pair"* [ %103, %111 ], [ %16, %101 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 1
  %120 = load i64, i64* %91, align 8
  store i64 %120, i64* %118, align 8
  %121 = load i64, i64* %92, align 8
  store i64 %121, i64* %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #11
  br label %122

122:                                              ; preds = %116, %93
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 1
  %124 = icmp eq %"struct.std::__1::pair"* %123, %6
  br i1 %124, label %288, label %93

125:                                              ; preds = %81
  %126 = icmp sgt i64 %18, 15984
  %127 = sdiv i64 %19, 2
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 %127
  br i1 %126, label %129, label %134

129:                                              ; preds = %125
  %130 = sdiv i64 %19, 4
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 %130
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 %130
  %133 = tail call i32 @_ZNSt3__17__sort5IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %131, %"struct.std::__1::pair"* %128, %"struct.std::__1::pair"* %132, %"struct.std::__1::pair"* %9, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %136

134:                                              ; preds = %125
  %135 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %128, %"struct.std::__1::pair"* %9, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %136

136:                                              ; preds = %134, %129
  %137 = phi i32 [ %133, %129 ], [ %135, %134 ]
  %138 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %139 = tail call i32 %138(%"struct.std::__1::pair"* dereferenceable(16) %16, %"struct.std::__1::pair"* dereferenceable(16) %128) #11
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %211

141:                                              ; preds = %136, %197
  %142 = phi %"struct.std::__1::pair"* [ %143, %197 ], [ %9, %136 ]
  %143 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 -1
  %144 = icmp eq %"struct.std::__1::pair"* %16, %143
  br i1 %144, label %145, label %197

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %147 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %148 = tail call i32 %147(%"struct.std::__1::pair"* dereferenceable(16) %16, %"struct.std::__1::pair"* dereferenceable(16) %9) #11
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %168

150:                                              ; preds = %145
  %151 = icmp eq %"struct.std::__1::pair"* %146, %9
  br i1 %151, label %288, label %152

152:                                              ; preds = %150, %165
  %153 = phi %"struct.std::__1::pair"* [ %166, %165 ], [ %146, %150 ]
  %154 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %155 = tail call i32 %154(%"struct.std::__1::pair"* dereferenceable(16) %16, %"struct.std::__1::pair"* dereferenceable(16) %153) #11
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %10, align 8
  store i64 %160, i64* %158, align 8
  store i64 %159, i64* %10, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = load i64, i64* %11, align 8
  store i64 %163, i64* %161, align 8
  store i64 %162, i64* %11, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 1
  br label %168

165:                                              ; preds = %152
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 1
  %167 = icmp eq %"struct.std::__1::pair"* %166, %9
  br i1 %167, label %288, label %152

168:                                              ; preds = %145, %157
  %169 = phi %"struct.std::__1::pair"* [ %146, %145 ], [ %164, %157 ]
  %170 = icmp eq %"struct.std::__1::pair"* %169, %9
  br i1 %170, label %288, label %171

171:                                              ; preds = %168, %188
  %172 = phi %"struct.std::__1::pair"* [ %179, %188 ], [ %169, %168 ]
  %173 = phi %"struct.std::__1::pair"* [ %183, %188 ], [ %9, %168 ]
  br label %174

174:                                              ; preds = %174, %171
  %175 = phi %"struct.std::__1::pair"* [ %172, %171 ], [ %179, %174 ]
  %176 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %177 = tail call i32 %176(%"struct.std::__1::pair"* dereferenceable(16) %16, %"struct.std::__1::pair"* dereferenceable(16) %175) #11
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 1
  br i1 %178, label %174, label %180

180:                                              ; preds = %174, %180
  %181 = phi %"struct.std::__1::pair"* [ %183, %180 ], [ %173, %174 ]
  %182 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 -1
  %184 = tail call i32 %182(%"struct.std::__1::pair"* dereferenceable(16) %16, %"struct.std::__1::pair"* dereferenceable(16) %183) #11
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %180

186:                                              ; preds = %180
  %187 = icmp ult %"struct.std::__1::pair"* %175, %183
  br i1 %187, label %188, label %15

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 0
  %190 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 0, i32 0
  %191 = load i64, i64* %189, align 8
  %192 = load i64, i64* %190, align 8
  store i64 %192, i64* %189, align 8
  store i64 %191, i64* %190, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 1
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 -1, i32 1
  %195 = load i64, i64* %193, align 8
  %196 = load i64, i64* %194, align 8
  store i64 %196, i64* %193, align 8
  store i64 %195, i64* %194, align 8
  br label %171

197:                                              ; preds = %141
  %198 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %199 = tail call i32 %198(%"struct.std::__1::pair"* dereferenceable(16) %143, %"struct.std::__1::pair"* dereferenceable(16) %128) #11
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %141, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 0, i32 0
  %204 = load i64, i64* %202, align 8
  %205 = load i64, i64* %203, align 8
  store i64 %205, i64* %202, align 8
  store i64 %204, i64* %203, align 8
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %142, i64 -1, i32 1
  %208 = load i64, i64* %206, align 8
  %209 = load i64, i64* %207, align 8
  store i64 %209, i64* %206, align 8
  store i64 %208, i64* %207, align 8
  %210 = add i32 %137, 1
  br label %211

211:                                              ; preds = %136, %201
  %212 = phi i32 [ %210, %201 ], [ %137, %136 ]
  %213 = phi %"struct.std::__1::pair"* [ %143, %201 ], [ %9, %136 ]
  %214 = ptrtoint %"struct.std::__1::pair"* %16 to i64
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %216 = icmp ult %"struct.std::__1::pair"* %215, %213
  br i1 %216, label %217, label %248

217:                                              ; preds = %211, %236
  %218 = phi %"struct.std::__1::pair"* [ %247, %236 ], [ %128, %211 ]
  %219 = phi i32 [ %245, %236 ], [ %212, %211 ]
  %220 = phi %"struct.std::__1::pair"* [ %227, %236 ], [ %215, %211 ]
  %221 = phi %"struct.std::__1::pair"* [ %231, %236 ], [ %213, %211 ]
  br label %222

222:                                              ; preds = %222, %217
  %223 = phi %"struct.std::__1::pair"* [ %220, %217 ], [ %227, %222 ]
  %224 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %225 = tail call i32 %224(%"struct.std::__1::pair"* dereferenceable(16) %223, %"struct.std::__1::pair"* dereferenceable(16) %218) #11
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %223, i64 1
  br i1 %226, label %228, label %222

228:                                              ; preds = %222, %228
  %229 = phi %"struct.std::__1::pair"* [ %231, %228 ], [ %221, %222 ]
  %230 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %231 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %229, i64 -1
  %232 = tail call i32 %230(%"struct.std::__1::pair"* dereferenceable(16) %231, %"struct.std::__1::pair"* dereferenceable(16) %218) #11
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %228, label %234

234:                                              ; preds = %228
  %235 = icmp ugt %"struct.std::__1::pair"* %223, %231
  br i1 %235, label %248, label %236

236:                                              ; preds = %234
  %237 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %223, i64 0, i32 0
  %238 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %231, i64 0, i32 0
  %239 = load i64, i64* %237, align 8
  %240 = load i64, i64* %238, align 8
  store i64 %240, i64* %237, align 8
  store i64 %239, i64* %238, align 8
  %241 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %223, i64 0, i32 1
  %242 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %229, i64 -1, i32 1
  %243 = load i64, i64* %241, align 8
  %244 = load i64, i64* %242, align 8
  store i64 %244, i64* %241, align 8
  store i64 %243, i64* %242, align 8
  %245 = add i32 %219, 1
  %246 = icmp eq %"struct.std::__1::pair"* %218, %223
  %247 = select i1 %246, %"struct.std::__1::pair"* %231, %"struct.std::__1::pair"* %218
  br label %217

248:                                              ; preds = %234, %211
  %249 = phi %"struct.std::__1::pair"* [ %128, %211 ], [ %218, %234 ]
  %250 = phi i32 [ %212, %211 ], [ %219, %234 ]
  %251 = phi %"struct.std::__1::pair"* [ %215, %211 ], [ %223, %234 ]
  %252 = icmp eq %"struct.std::__1::pair"* %251, %249
  br i1 %252, label %267, label %253

253:                                              ; preds = %248
  %254 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %255 = tail call i32 %254(%"struct.std::__1::pair"* dereferenceable(16) %249, %"struct.std::__1::pair"* dereferenceable(16) %251) #11
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %267, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 0, i32 0
  %259 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %249, i64 0, i32 0
  %260 = load i64, i64* %258, align 8
  %261 = load i64, i64* %259, align 8
  store i64 %261, i64* %258, align 8
  store i64 %260, i64* %259, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 0, i32 1
  %263 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %249, i64 0, i32 1
  %264 = load i64, i64* %262, align 8
  %265 = load i64, i64* %263, align 8
  store i64 %265, i64* %262, align 8
  store i64 %264, i64* %263, align 8
  %266 = add i32 %250, 1
  br label %267

267:                                              ; preds = %253, %248, %257
  %268 = phi i32 [ %266, %257 ], [ %250, %253 ], [ %250, %248 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %277

270:                                              ; preds = %267
  %271 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFiRKNS_4pairImmEES4_EPS2_EEbT0_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %251, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 1
  %273 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFiRKNS_4pairImmEES4_EPS2_EEbT0_S9_T_(%"struct.std::__1::pair"* %272, %"struct.std::__1::pair"* %6, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br i1 %273, label %274, label %276

274:                                              ; preds = %270
  br i1 %271, label %288, label %275

275:                                              ; preds = %274, %286
  br label %5

276:                                              ; preds = %270
  br i1 %271, label %284, label %277

277:                                              ; preds = %276, %267
  %278 = ptrtoint %"struct.std::__1::pair"* %251 to i64
  %279 = sub i64 %278, %214
  %280 = sub i64 %12, %278
  %281 = icmp slt i64 %279, %280
  br i1 %281, label %282, label %286

282:                                              ; preds = %277
  tail call void @_ZNSt3__16__sortIRPFiRKNS_4pairImmEES4_EPS2_EEvT0_S9_T_(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %251, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  %283 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 1
  br label %284

284:                                              ; preds = %282, %276
  %285 = phi %"struct.std::__1::pair"* [ %272, %276 ], [ %283, %282 ]
  br label %13

286:                                              ; preds = %277
  %287 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 1
  tail call void @_ZNSt3__16__sortIRPFiRKNS_4pairImmEES4_EPS2_EEvT0_S9_T_(%"struct.std::__1::pair"* %287, %"struct.std::__1::pair"* %6, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %275

288:                                              ; preds = %274, %168, %15, %15, %150, %165, %122, %83, %68, %58, %46, %38, %25, %20, %34, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %6 = tail call i32 %5(%"struct.std::__1::pair"* dereferenceable(16) %1, %"struct.std::__1::pair"* dereferenceable(16) %0) #11
  %7 = icmp eq i32 %6, 0
  %8 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %9 = tail call i32 %8(%"struct.std::__1::pair"* dereferenceable(16) %2, %"struct.std::__1::pair"* dereferenceable(16) %1) #11
  %10 = icmp ne i32 %9, 0
  br i1 %7, label %11, label %31

11:                                               ; preds = %4
  br i1 %10, label %12, label %59

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %15 = load i64, i64* %13, align 8
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %19 = load i64, i64* %17, align 8
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %21 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %22 = tail call i32 %21(%"struct.std::__1::pair"* dereferenceable(16) %1, %"struct.std::__1::pair"* dereferenceable(16) %0) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %59, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %13, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %13, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %17, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %17, align 8
  br label %59

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  br i1 %10, label %33, label %41

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %35 = load i64, i64* %32, align 8
  %36 = load i64, i64* %34, align 8
  store i64 %36, i64* %32, align 8
  store i64 %35, i64* %34, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %39 = load i64, i64* %37, align 8
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  br label %59

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %43 = load i64, i64* %32, align 8
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %32, align 8
  store i64 %43, i64* %42, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %47 = load i64, i64* %45, align 8
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %49 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %50 = tail call i32 %49(%"struct.std::__1::pair"* dereferenceable(16) %2, %"struct.std::__1::pair"* dereferenceable(16) %1) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %54 = load i64, i64* %42, align 8
  %55 = load i64, i64* %53, align 8
  store i64 %55, i64* %42, align 8
  store i64 %54, i64* %53, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %57 = load i64, i64* %46, align 8
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %46, align 8
  store i64 %57, i64* %56, align 8
  br label %59

59:                                               ; preds = %52, %41, %24, %12, %11, %33
  %60 = phi i32 [ 1, %33 ], [ 0, %11 ], [ 2, %24 ], [ 1, %12 ], [ 2, %52 ], [ 1, %41 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %5) #11
  %8 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %9 = tail call i32 %8(%"struct.std::__1::pair"* dereferenceable(16) %3, %"struct.std::__1::pair"* dereferenceable(16) %2) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %43, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %14 = load i64, i64* %12, align 8
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %18 = load i64, i64* %16, align 8
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %20 = add i32 %7, 1
  %21 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %22 = tail call i32 %21(%"struct.std::__1::pair"* dereferenceable(16) %2, %"struct.std::__1::pair"* dereferenceable(16) %1) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %12, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %12, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %16, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %16, align 8
  %31 = add i32 %7, 2
  %32 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %33 = tail call i32 %32(%"struct.std::__1::pair"* dereferenceable(16) %1, %"struct.std::__1::pair"* dereferenceable(16) %0) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %25, align 8
  store i64 %38, i64* %36, align 8
  store i64 %37, i64* %25, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %28, align 8
  store i64 %41, i64* %39, align 8
  store i64 %40, i64* %28, align 8
  %42 = add i32 %7, 3
  br label %43

43:                                               ; preds = %6, %11, %24, %35
  %44 = phi i32 [ %42, %35 ], [ %31, %24 ], [ %20, %11 ], [ %7, %6 ]
  %45 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %46 = tail call i32 %45(%"struct.std::__1::pair"* dereferenceable(16) %4, %"struct.std::__1::pair"* dereferenceable(16) %3) #11
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %91, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %51 = load i64, i64* %49, align 8
  %52 = load i64, i64* %50, align 8
  store i64 %52, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %55 = load i64, i64* %53, align 8
  %56 = load i64, i64* %54, align 8
  store i64 %56, i64* %53, align 8
  store i64 %55, i64* %54, align 8
  %57 = add i32 %44, 1
  %58 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %59 = tail call i32 %58(%"struct.std::__1::pair"* dereferenceable(16) %3, %"struct.std::__1::pair"* dereferenceable(16) %2) #11
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %91, label %61

61:                                               ; preds = %48
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %49, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %49, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %53, align 8
  store i64 %67, i64* %65, align 8
  store i64 %66, i64* %53, align 8
  %68 = add i32 %44, 2
  %69 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %70 = tail call i32 %69(%"struct.std::__1::pair"* dereferenceable(16) %2, %"struct.std::__1::pair"* dereferenceable(16) %1) #11
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %91, label %72

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = load i64, i64* %62, align 8
  store i64 %75, i64* %73, align 8
  store i64 %74, i64* %62, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = load i64, i64* %65, align 8
  store i64 %78, i64* %76, align 8
  store i64 %77, i64* %65, align 8
  %79 = add i32 %44, 3
  %80 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %81 = tail call i32 %80(%"struct.std::__1::pair"* dereferenceable(16) %1, %"struct.std::__1::pair"* dereferenceable(16) %0) #11
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = load i64, i64* %73, align 8
  store i64 %86, i64* %84, align 8
  store i64 %85, i64* %73, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = load i64, i64* %76, align 8
  store i64 %89, i64* %87, align 8
  store i64 %88, i64* %76, align 8
  %90 = add i32 %44, 4
  br label %91

91:                                               ; preds = %72, %61, %48, %43, %83
  %92 = phi i32 [ %90, %83 ], [ %79, %72 ], [ %68, %61 ], [ %57, %48 ], [ %44, %43 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFiRKNS_4pairImmEES4_EPS2_EEbT0_S9_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = ptrtoint %"struct.std::__1::pair"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 4
  switch i64 %8, label %70 [
    i64 0, label %119
    i64 1, label %119
    i64 2, label %9
    i64 3, label %23
    i64 4, label %27
    i64 5, label %64
  ]

9:                                                ; preds = %3
  %10 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %12 = tail call i32 %10(%"struct.std::__1::pair"* dereferenceable(16) %11, %"struct.std::__1::pair"* dereferenceable(16) %0) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %119, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0
  %17 = load i64, i64* %15, align 8
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %21 = load i64, i64* %19, align 8
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  br label %119

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %26 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %25, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %119

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %31 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %28, %"struct.std::__1::pair"* %29, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2) #11
  %32 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %33 = tail call i32 %32(%"struct.std::__1::pair"* dereferenceable(16) %30, %"struct.std::__1::pair"* dereferenceable(16) %29) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %119, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 0
  %38 = load i64, i64* %36, align 8
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2, i32 1
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %42 = load i64, i64* %40, align 8
  %43 = load i64, i64* %41, align 8
  store i64 %43, i64* %40, align 8
  store i64 %42, i64* %41, align 8
  %44 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %45 = tail call i32 %44(%"struct.std::__1::pair"* dereferenceable(16) %29, %"struct.std::__1::pair"* dereferenceable(16) %28) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %119, label %47

47:                                               ; preds = %35
  %48 = bitcast %"struct.std::__1::pair"* %29 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %50 = bitcast %"struct.std::__1::pair"* %28 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8
  %52 = bitcast %"struct.std::__1::pair"* %28 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %52, align 8
  %53 = bitcast %"struct.std::__1::pair"* %29 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %53, align 8
  %54 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %55 = tail call i32 %54(%"struct.std::__1::pair"* dereferenceable(16) %28, %"struct.std::__1::pair"* dereferenceable(16) %0) #11
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %119, label %57

57:                                               ; preds = %47
  %58 = bitcast %"struct.std::__1::pair"* %28 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast %"struct.std::__1::pair"* %0 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8
  %62 = bitcast %"struct.std::__1::pair"* %0 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %62, align 8
  %63 = bitcast %"struct.std::__1::pair"* %28 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %63, align 8
  br label %119

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %69 = tail call i32 @_ZNSt3__17__sort5IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_S9_S9_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %65, %"struct.std::__1::pair"* %66, %"struct.std::__1::pair"* %67, %"struct.std::__1::pair"* %68, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %119

70:                                               ; preds = %3
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %73 = tail call i32 @_ZNSt3__17__sort3IRPFiRKNS_4pairImmEES4_EPS2_EEjT0_S9_S9_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %72, %"struct.std::__1::pair"* %71, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %75 = icmp eq %"struct.std::__1::pair"* %74, %1
  br i1 %75, label %119, label %76

76:                                               ; preds = %70
  %77 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  br label %80

80:                                               ; preds = %76, %112
  %81 = phi %"struct.std::__1::pair"* [ %74, %76 ], [ %114, %112 ]
  %82 = phi i32 [ 0, %76 ], [ %113, %112 ]
  %83 = phi %"struct.std::__1::pair"* [ %71, %76 ], [ %81, %112 ]
  %84 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %85 = call i32 %84(%"struct.std::__1::pair"* dereferenceable(16) %81, %"struct.std::__1::pair"* dereferenceable(16) %83) #11
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %112, label %87

87:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #11
  %88 = bitcast %"struct.std::__1::pair"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %88, i64 16, i1 false)
  br label %89

89:                                               ; preds = %99, %87
  %90 = phi %"struct.std::__1::pair"* [ %81, %87 ], [ %91, %99 ]
  %91 = phi %"struct.std::__1::pair"* [ %83, %87 ], [ %101, %99 ]
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 1
  store i64 %96, i64* %97, align 8
  %98 = icmp eq %"struct.std::__1::pair"* %91, %0
  br i1 %98, label %104, label %99

99:                                               ; preds = %89
  %100 = load i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i32 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -1
  %102 = call i32 %100(%"struct.std::__1::pair"* nonnull dereferenceable(16) %4, %"struct.std::__1::pair"* dereferenceable(16) %101) #11
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %89

104:                                              ; preds = %99, %89
  %105 = phi %"struct.std::__1::pair"* [ %91, %99 ], [ %0, %89 ]
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 0
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 1
  %108 = load i64, i64* %78, align 8
  store i64 %108, i64* %106, align 8
  %109 = load i64, i64* %79, align 8
  store i64 %109, i64* %107, align 8
  %110 = add i32 %82, 1
  %111 = icmp eq i32 %110, 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #11
  br i1 %111, label %116, label %112

112:                                              ; preds = %104, %80
  %113 = phi i32 [ %110, %104 ], [ %82, %80 ]
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %81, i64 1
  %115 = icmp eq %"struct.std::__1::pair"* %114, %1
  br i1 %115, label %119, label %80

116:                                              ; preds = %104
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %81, i64 1
  %118 = icmp eq %"struct.std::__1::pair"* %117, %1
  br label %119

119:                                              ; preds = %112, %116, %70, %57, %47, %35, %27, %14, %9, %3, %3, %64, %23
  %120 = phi i1 [ true, %64 ], [ true, %23 ], [ true, %3 ], [ true, %3 ], [ true, %9 ], [ true, %14 ], [ true, %27 ], [ true, %35 ], [ true, %47 ], [ true, %57 ], [ true, %70 ], [ %118, %116 ], [ true, %112 ]
  ret i1 %120
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = distinct !{!41, !10}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !8}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !10}
!50 = distinct !{!50, !8}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !8}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !10}
!59 = distinct !{!59, !8}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !8}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !10}
!68 = distinct !{!68, !8}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !8}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !10}
!77 = distinct !{!77, !8}
!78 = distinct !{!78, !8}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !81, !8}
!81 = !{!"llvm.loop.unroll.runtime.disable"}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !8}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !10}
!90 = distinct !{!90, !8}
!91 = !{!92}
!92 = distinct !{!92, !93}
!93 = distinct !{!93, !"LVerDomain"}
!94 = !{!95}
!95 = distinct !{!95, !93}
!96 = distinct !{!96, !8}
!97 = distinct !{!97, !10}
!98 = distinct !{!98, !10}
!99 = distinct !{!99, !8}
!100 = distinct !{!100, !10}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !8}
!107 = distinct !{!107, !10}
!108 = distinct !{!108, !10}
!109 = distinct !{!109, !8}
!110 = !{!111}
!111 = distinct !{!111, !112}
!112 = distinct !{!112, !"LVerDomain"}
!113 = !{!114}
!114 = distinct !{!114, !112}
!115 = distinct !{!115, !8}
!116 = distinct !{!116, !10}
!117 = distinct !{!117, !10}
!118 = distinct !{!118, !8}
