; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/lsh_projection.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/lsh_projection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteLSHProjectionParams = type { i32 }

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/lsh_projection.cc\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"NumInputs(node) == 2 || NumInputs(node) == 3\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"NumDimensions(hash)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"SizeOfDimension(hash, 1) <= 32\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"NumDimensions(input) >= 1\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"NumDimensions(weight)\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"SizeOfDimension(weight, 0)\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"SizeOfDimension(input, 0)\00", align 1
@_ZZN6tflite3ops7builtin23Register_LSH_PROJECTIONEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14lsh_projection6ResizeEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14lsh_projection4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin14lsh_projection6ResizeEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteLSHProjectionParams**
  %5 = load %struct.TfLiteLSHProjectionParams*, %struct.TfLiteLSHProjectionParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %14 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %13, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %14(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %130

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %17 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %23 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %22, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %23(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %19, i32 1) #6
  br label %130

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %24, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %24 ]
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %36 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %42 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %41, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %42(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 77, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %38, i32 2) #6
  br label %130

43:                                               ; preds = %33
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, 33
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %49 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %48, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %49(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0)) #6
  br label %130

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %56 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %55, align 8
  %57 = sext i32 %52 to i64
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 %57
  br label %59

59:                                               ; preds = %50, %54
  %60 = phi %struct.TfLiteTensor* [ %58, %54 ], [ null, %50 ]
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %62 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %61, align 8
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %68 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %67, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %68(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)) #6
  br label %130

69:                                               ; preds = %59
  %70 = icmp eq i32 %9, 3
  br i1 %70, label %71, label %99

71:                                               ; preds = %69
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %77 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %76, align 8
  %78 = sext i32 %73 to i64
  %79 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %77, i64 %78
  br label %80

80:                                               ; preds = %71, %75
  %81 = phi %struct.TfLiteTensor* [ %79, %75 ], [ null, %71 ]
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 0, i32 2
  %83 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %82, align 8
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %90, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %89 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %88, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %89(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %85, i32 1) #6
  br label %130

90:                                               ; preds = %80
  %91 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %83, i64 0, i32 1, i64 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %62, i64 0, i32 1, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %99, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %98 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %97, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %98(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 88, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i32 %92, i32 %94) #6
  br label %130

99:                                               ; preds = %90, %69
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %105 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %104, align 8
  %106 = sext i32 %101 to i64
  %107 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %105, i64 %106
  br label %108

108:                                              ; preds = %99, %103
  %109 = phi %struct.TfLiteTensor* [ %107, %103 ], [ null, %99 ]
  %110 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #6
  %111 = getelementptr inbounds %struct.TfLiteLSHProjectionParams, %struct.TfLiteLSHProjectionParams* %5, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  switch i32 %112, label %130 [
    i32 1, label %113
    i32 2, label %117
  ]

113:                                              ; preds = %108
  %114 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %114, i64 0, i32 1, i64 0
  %116 = load i32, i32* %115, align 4
  br label %124

117:                                              ; preds = %108
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 0
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 1
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %120
  br label %124

124:                                              ; preds = %117, %113
  %125 = phi i32 [ %123, %117 ], [ %116, %113 ]
  %126 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %110, i64 0, i32 1, i64 0
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %128 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %127, align 8
  %129 = tail call i32 %128(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %109, %struct.TfLiteIntArray* %110) #6
  br label %130

130:                                              ; preds = %40, %47, %124, %108, %96, %87, %66, %21, %12
  %131 = phi i32 [ 1, %21 ], [ 1, %12 ], [ 1, %40 ], [ 1, %47 ], [ 1, %66 ], [ 1, %87 ], [ 1, %96 ], [ %129, %124 ], [ 1, %108 ]
  ret i32 %131
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin14lsh_projection14RunningSignBitEPK12TfLiteTensorS5_f(%struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* readonly, float) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = udiv i64 %5, %10
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %13 = bitcast %union.TfLitePtrUnion* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = shl i64 %11, 32
  %16 = ashr exact i64 %15, 32
  %17 = add nsw i64 %16, 4
  %18 = tail call i8* @_Znam(i64 %17) #7
  %19 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %22 = bitcast %union.TfLitePtrUnion* %21 to float**
  %23 = load float*, float** %22, align 8
  br label %24

24:                                               ; preds = %3, %20
  %25 = phi float* [ %23, %20 ], [ null, %3 ]
  %26 = load i32, i32* %8, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %24
  %29 = bitcast i8* %18 to float*
  %30 = getelementptr inbounds i8, i8* %18, i64 4
  %31 = icmp eq float* %25, null
  br label %37

32:                                               ; preds = %49
  %33 = fcmp ogt double %51, 0.000000e+00
  %34 = zext i1 %33 to i32
  br label %35

35:                                               ; preds = %32, %24
  %36 = phi i32 [ 0, %24 ], [ %34, %32 ]
  tail call void @_ZdaPv(i8* nonnull %18) #7
  ret i32 %36

37:                                               ; preds = %28, %49
  %38 = phi i64 [ 0, %28 ], [ %52, %49 ]
  %39 = phi double [ 0.000000e+00, %28 ], [ %51, %49 ]
  %40 = phi i8* [ %14, %28 ], [ %43, %49 ]
  store float %2, float* %29, align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %40, i64 %16, i1 false)
  %41 = tail call i64 @_ZN4util13Fingerprint64EPKcm(i8* nonnull %18, i64 %17) #6
  %42 = sitofp i64 %41 to double
  %43 = getelementptr inbounds i8, i8* %40, i64 %16
  br i1 %31, label %49, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds float, float* %25, i64 %38
  %46 = load float, float* %45, align 4
  %47 = fpext float %46 to double
  %48 = fmul double %42, %47
  br label %49

49:                                               ; preds = %37, %44
  %50 = phi double [ %48, %44 ], [ %42, %37 ]
  %51 = fadd double %39, %50
  %52 = add nuw nsw i64 %38, 1
  %53 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %53, i64 0, i32 1, i64 0
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = icmp slt i64 %52, %56
  br i1 %57, label %37, label %32
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @_ZN4util13Fingerprint64EPKcm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin14lsh_projection19SparseLshProjectionEPK12TfLiteTensorS5_S5_Pi(%struct.TfLiteTensor* readonly, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* readonly, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %32

12:                                               ; preds = %4
  %13 = icmp sgt i32 %10, 0
  %14 = icmp eq %struct.TfLiteTensor* %0, null
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %16 = bitcast %union.TfLitePtrUnion* %15 to float**
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 5
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %20 = bitcast %union.TfLitePtrUnion* %19 to i8**
  %21 = icmp eq %struct.TfLiteTensor* %2, null
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %23 = bitcast %union.TfLitePtrUnion* %22 to float**
  %24 = sext i32 %10 to i64
  %25 = zext i32 %8 to i64
  %26 = zext i32 %10 to i64
  br label %27

27:                                               ; preds = %33, %12
  %28 = phi i64 [ 0, %12 ], [ %39, %33 ]
  %29 = phi i32* [ %3, %12 ], [ %38, %33 ]
  br i1 %13, label %30, label %33

30:                                               ; preds = %27
  %31 = mul nsw i64 %28, %24
  br label %41

32:                                               ; preds = %33, %4
  ret void

33:                                               ; preds = %97, %27
  %34 = phi i32 [ 0, %27 ], [ %100, %97 ]
  %35 = trunc i64 %28 to i32
  %36 = shl i32 %35, %10
  %37 = add nsw i32 %34, %36
  %38 = getelementptr inbounds i32, i32* %29, i64 1
  store i32 %37, i32* %29, align 4
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %25
  br i1 %40, label %32, label %27

41:                                               ; preds = %97, %30
  %42 = phi i64 [ 0, %30 ], [ %101, %97 ]
  %43 = phi i32 [ 0, %30 ], [ %100, %97 ]
  br i1 %14, label %46, label %44

44:                                               ; preds = %41
  %45 = load float*, float** %16, align 8
  br label %46

46:                                               ; preds = %41, %44
  %47 = phi float* [ %45, %44 ], [ null, %41 ]
  %48 = add nsw i64 %42, %31
  %49 = getelementptr inbounds float, float* %47, i64 %48
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = load i64, i64* %17, align 8
  %53 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %53, i64 0, i32 1, i64 0
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = udiv i64 %52, %56
  %58 = load i8*, i8** %20, align 8
  %59 = shl i64 %57, 32
  %60 = ashr exact i64 %59, 32
  %61 = add nsw i64 %60, 4
  %62 = tail call i8* @_Znam(i64 %61) #7
  br i1 %21, label %65, label %63

63:                                               ; preds = %46
  %64 = load float*, float** %23, align 8
  br label %65

65:                                               ; preds = %63, %46
  %66 = phi float* [ %64, %63 ], [ null, %46 ]
  %67 = load i32, i32* %54, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %97

69:                                               ; preds = %65
  %70 = getelementptr inbounds i8, i8* %62, i64 4
  %71 = icmp eq float* %66, null
  %72 = bitcast i8* %62 to i32*
  br label %76

73:                                               ; preds = %88
  %74 = fcmp ogt double %90, 0.000000e+00
  %75 = zext i1 %74 to i32
  br label %97

76:                                               ; preds = %88, %69
  %77 = phi i64 [ 0, %69 ], [ %91, %88 ]
  %78 = phi double [ 0.000000e+00, %69 ], [ %90, %88 ]
  %79 = phi i8* [ %58, %69 ], [ %82, %88 ]
  store i32 %51, i32* %72, align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %79, i64 %60, i1 false) #6
  %80 = tail call i64 @_ZN4util13Fingerprint64EPKcm(i8* nonnull %62, i64 %61) #6
  %81 = sitofp i64 %80 to double
  %82 = getelementptr inbounds i8, i8* %79, i64 %60
  br i1 %71, label %88, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds float, float* %66, i64 %77
  %85 = load float, float* %84, align 4
  %86 = fpext float %85 to double
  %87 = fmul double %81, %86
  br label %88

88:                                               ; preds = %83, %76
  %89 = phi double [ %87, %83 ], [ %81, %76 ]
  %90 = fadd double %78, %89
  %91 = add nuw nsw i64 %77, 1
  %92 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 1, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = icmp slt i64 %91, %95
  br i1 %96, label %76, label %73

97:                                               ; preds = %65, %73
  %98 = phi i32 [ 0, %65 ], [ %75, %73 ]
  tail call void @_ZdaPv(i8* nonnull %62) #7
  %99 = shl i32 %43, 1
  %100 = or i32 %98, %99
  %101 = add nuw nsw i64 %42, 1
  %102 = icmp eq i64 %101, %26
  br i1 %102, label %33, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin14lsh_projection18DenseLshProjectionEPK12TfLiteTensorS5_S5_Pi(%struct.TfLiteTensor* readonly, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* readonly, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %32

12:                                               ; preds = %4
  %13 = icmp sgt i32 %10, 0
  %14 = icmp eq %struct.TfLiteTensor* %0, null
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %16 = bitcast %union.TfLitePtrUnion* %15 to float**
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 5
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %20 = bitcast %union.TfLitePtrUnion* %19 to i8**
  %21 = icmp eq %struct.TfLiteTensor* %2, null
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %23 = bitcast %union.TfLitePtrUnion* %22 to float**
  %24 = sext i32 %10 to i64
  %25 = zext i32 %8 to i64
  %26 = zext i32 %10 to i64
  br label %27

27:                                               ; preds = %33, %12
  %28 = phi i64 [ 0, %12 ], [ %35, %33 ]
  %29 = phi i32* [ %3, %12 ], [ %34, %33 ]
  br i1 %13, label %30, label %33

30:                                               ; preds = %27
  %31 = mul nsw i64 %28, %24
  br label %37

32:                                               ; preds = %33, %4
  ret void

33:                                               ; preds = %93, %27
  %34 = phi i32* [ %29, %27 ], [ %95, %93 ]
  %35 = add nuw nsw i64 %28, 1
  %36 = icmp eq i64 %35, %25
  br i1 %36, label %32, label %27

37:                                               ; preds = %93, %30
  %38 = phi i64 [ 0, %30 ], [ %96, %93 ]
  %39 = phi i32* [ %29, %30 ], [ %95, %93 ]
  br i1 %14, label %42, label %40

40:                                               ; preds = %37
  %41 = load float*, float** %16, align 8
  br label %42

42:                                               ; preds = %37, %40
  %43 = phi float* [ %41, %40 ], [ null, %37 ]
  %44 = add nsw i64 %38, %31
  %45 = getelementptr inbounds float, float* %43, i64 %44
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = load i64, i64* %17, align 8
  %49 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %49, i64 0, i32 1, i64 0
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = udiv i64 %48, %52
  %54 = load i8*, i8** %20, align 8
  %55 = shl i64 %53, 32
  %56 = ashr exact i64 %55, 32
  %57 = add nsw i64 %56, 4
  %58 = tail call i8* @_Znam(i64 %57) #7
  br i1 %21, label %61, label %59

59:                                               ; preds = %42
  %60 = load float*, float** %23, align 8
  br label %61

61:                                               ; preds = %59, %42
  %62 = phi float* [ %60, %59 ], [ null, %42 ]
  %63 = load i32, i32* %50, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %93

65:                                               ; preds = %61
  %66 = getelementptr inbounds i8, i8* %58, i64 4
  %67 = icmp eq float* %62, null
  %68 = bitcast i8* %58 to i32*
  br label %72

69:                                               ; preds = %84
  %70 = fcmp ogt double %86, 0.000000e+00
  %71 = zext i1 %70 to i32
  br label %93

72:                                               ; preds = %84, %65
  %73 = phi i64 [ 0, %65 ], [ %87, %84 ]
  %74 = phi double [ 0.000000e+00, %65 ], [ %86, %84 ]
  %75 = phi i8* [ %54, %65 ], [ %78, %84 ]
  store i32 %47, i32* %68, align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %75, i64 %56, i1 false) #6
  %76 = tail call i64 @_ZN4util13Fingerprint64EPKcm(i8* nonnull %58, i64 %57) #6
  %77 = sitofp i64 %76 to double
  %78 = getelementptr inbounds i8, i8* %75, i64 %56
  br i1 %67, label %84, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, float* %62, i64 %73
  %81 = load float, float* %80, align 4
  %82 = fpext float %81 to double
  %83 = fmul double %77, %82
  br label %84

84:                                               ; preds = %79, %72
  %85 = phi double [ %83, %79 ], [ %77, %72 ]
  %86 = fadd double %74, %85
  %87 = add nuw nsw i64 %73, 1
  %88 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %89 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %88, i64 0, i32 1, i64 0
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %87, %91
  br i1 %92, label %72, label %69

93:                                               ; preds = %61, %69
  %94 = phi i32 [ 0, %61 ], [ %71, %69 ]
  tail call void @_ZdaPv(i8* nonnull %58) #7
  %95 = getelementptr inbounds i32, i32* %39, i64 1
  store i32 %94, i32* %39, align 4
  %96 = add nuw nsw i64 %38, 1
  %97 = icmp eq i64 %96, %26
  br i1 %97, label %33, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin14lsh_projection4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteLSHProjectionParams**
  %5 = load %struct.TfLiteLSHProjectionParams*, %struct.TfLiteLSHProjectionParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %13 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 %14
  br label %16

16:                                               ; preds = %2, %11
  %17 = phi %struct.TfLiteTensor* [ %15, %11 ], [ null, %2 ]
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 0, i32 1, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %21 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %20, align 8
  %22 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %27 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %26, align 8
  %28 = sext i32 %23 to i64
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 %28
  br label %30

30:                                               ; preds = %16, %25
  %31 = phi %struct.TfLiteTensor* [ %29, %25 ], [ null, %16 ]
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %36, align 8
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 %38
  br label %40

40:                                               ; preds = %30, %35
  %41 = phi %struct.TfLiteTensor* [ %39, %35 ], [ null, %30 ]
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %51 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %50, align 8
  %52 = sext i32 %47 to i64
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 %52
  br label %54

54:                                               ; preds = %49, %45, %40
  %55 = phi %struct.TfLiteTensor* [ null, %40 ], [ %53, %49 ], [ null, %45 ]
  %56 = getelementptr inbounds %struct.TfLiteLSHProjectionParams, %struct.TfLiteLSHProjectionParams* %5, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %60 [
    i32 2, label %58
    i32 1, label %59
  ]

58:                                               ; preds = %54
  tail call void @_ZN6tflite3ops7builtin14lsh_projection18DenseLshProjectionEPK12TfLiteTensorS5_S5_Pi(%struct.TfLiteTensor* %31, %struct.TfLiteTensor* %41, %struct.TfLiteTensor* %55, i32* %19)
  br label %60

59:                                               ; preds = %54
  tail call void @_ZN6tflite3ops7builtin14lsh_projection19SparseLshProjectionEPK12TfLiteTensorS5_S5_Pi(%struct.TfLiteTensor* %31, %struct.TfLiteTensor* %41, %struct.TfLiteTensor* %55, i32* %19)
  br label %60

60:                                               ; preds = %58, %59, %54
  %61 = phi i32 [ 1, %54 ], [ 0, %59 ], [ 0, %58 ]
  ret i32 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin23Register_LSH_PROJECTIONEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_LSH_PROJECTIONEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
