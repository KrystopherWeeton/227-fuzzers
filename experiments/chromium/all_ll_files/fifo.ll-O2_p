; ModuleID = '../../third_party/ffmpeg/libavutil/fifo.c'
source_filename = "../../third_party/ffmpeg/libavutil/fifo.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.AVFifoBuffer* @av_fifo_alloc(i32) local_unnamed_addr #0 {
  %2 = zext i32 %0 to i64
  %3 = tail call noalias i8* @av_malloc(i64 %2) #5
  %4 = icmp eq i8* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = tail call noalias i8* @av_mallocz(i64 40) #5
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @av_free(i8* nonnull %3) #5
  br label %24

9:                                                ; preds = %5
  %10 = bitcast i8* %6 to %struct.AVFifoBuffer*
  %11 = bitcast i8* %6 to i8**
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 %2
  %13 = getelementptr inbounds i8, i8* %6, i64 24
  %14 = bitcast i8* %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = ptrtoint i8* %3 to i64
  %16 = getelementptr inbounds i8, i8* %6, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 32
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 36
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  br label %24

24:                                               ; preds = %1, %8, %9
  %25 = phi %struct.AVFifoBuffer* [ %10, %9 ], [ null, %8 ], [ null, %1 ]
  ret %struct.AVFifoBuffer* %25
}

declare noalias i8* @av_malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.AVFifoBuffer* @av_fifo_alloc_array(i64, i64) local_unnamed_addr #0 {
  %3 = tail call i8* @av_malloc_array(i64 %0, i64 %1) #5
  %4 = mul i64 %1, %0
  %5 = icmp eq i8* %3, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = tail call noalias i8* @av_mallocz(i64 40) #5
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @av_free(i8* nonnull %3) #5
  br label %25

10:                                               ; preds = %6
  %11 = bitcast i8* %7 to %struct.AVFifoBuffer*
  %12 = bitcast i8* %7 to i8**
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %3, i64 %4
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  %15 = bitcast i8* %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = ptrtoint i8* %3 to i64
  %17 = getelementptr inbounds i8, i8* %7, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %16, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %7, i64 32
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %7, i64 36
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  br label %25

25:                                               ; preds = %2, %9, %10
  %26 = phi %struct.AVFifoBuffer* [ %11, %10 ], [ null, %9 ], [ null, %2 ]
  ret %struct.AVFifoBuffer* %26
}

declare i8* @av_malloc_array(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_fifo_free(%struct.AVFifoBuffer*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.AVFifoBuffer* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.AVFifoBuffer* %0 to i8*
  tail call void @av_freep(i8* nonnull %4) #5
  tail call void @av_free(i8* nonnull %4) #5
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare void @av_freep(i8*) local_unnamed_addr #1

declare void @av_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_fifo_freep(%struct.AVFifoBuffer**) local_unnamed_addr #0 {
  %2 = icmp eq %struct.AVFifoBuffer** %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %0, align 8
  %5 = icmp eq %struct.AVFifoBuffer* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.AVFifoBuffer* %4 to i8*
  tail call void @av_freep(i8* nonnull %7) #5
  tail call void @av_free(i8* nonnull %7) #5
  br label %8

8:                                                ; preds = %3, %6
  store %struct.AVFifoBuffer* null, %struct.AVFifoBuffer** %0, align 8
  br label %9

9:                                                ; preds = %1, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av_fifo_reset(%struct.AVFifoBuffer* nocapture) local_unnamed_addr #2 {
  %2 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 2
  %7 = bitcast i8** %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 5
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_fifo_size(%struct.AVFifoBuffer* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = sub i32 %3, %5
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_fifo_space(%struct.AVFifoBuffer* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = trunc i64 %7 to i32
  %13 = sub i32 %11, %9
  %14 = add i32 %13, %12
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_fifo_realloc2(%struct.AVFifoBuffer* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 0
  %7 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = trunc i64 %9 to i32
  %11 = icmp ult i32 %10, %1
  br i1 %11, label %12, label %82

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = sub i32 %14, %16
  %18 = zext i32 %1 to i64
  %19 = tail call noalias i8* @av_malloc(i64 %18) #5
  %20 = icmp eq i8* %19, null
  br i1 %20, label %82, label %21

21:                                               ; preds = %12
  %22 = tail call noalias i8* @av_mallocz(i64 40) #5
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @av_free(i8* nonnull %19) #5
  br label %82

25:                                               ; preds = %21
  %26 = bitcast i8* %22 to i8**
  store i8* %19, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 %18
  %28 = getelementptr inbounds i8, i8* %22, i64 24
  %29 = bitcast i8* %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds i8, i8* %22, i64 8
  %32 = bitcast i8* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %22, i64 16
  %34 = bitcast i8* %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %22, i64 32
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %22, i64 36
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %4, align 8
  %42 = load i64, i64* %40, align 8
  br label %43

43:                                               ; preds = %66, %25
  %44 = phi i64 [ %42, %25 ], [ %68, %66 ]
  %45 = phi i64 [ %41, %25 ], [ %61, %66 ]
  %46 = phi i32 [ %17, %25 ], [ %71, %66 ]
  %47 = phi i8* [ %19, %25 ], [ %56, %66 ]
  %48 = sub i64 %45, %44
  %49 = sext i32 %46 to i64
  %50 = icmp sgt i64 %48, %49
  %51 = select i1 %50, i64 %49, i64 %48
  %52 = trunc i64 %51 to i32
  %53 = inttoptr i64 %44 to i8*
  %54 = shl i64 %51, 32
  %55 = ashr exact i64 %54, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %53, i64 %55, i1 false) #5
  %56 = getelementptr inbounds i8, i8* %47, i64 %55
  %57 = load i8*, i8** %39, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %55
  store i8* %58, i8** %39, align 8
  %59 = load i8*, i8** %3, align 8
  %60 = icmp ult i8* %58, %59
  %61 = ptrtoint i8* %59 to i64
  br i1 %60, label %66, label %62

62:                                               ; preds = %43
  %63 = load i64, i64* %7, align 8
  %64 = sub i64 %63, %61
  %65 = getelementptr inbounds i8, i8* %58, i64 %64
  store i8* %65, i8** %39, align 8
  br label %66

66:                                               ; preds = %62, %43
  %67 = phi i8* [ %58, %43 ], [ %65, %62 ]
  %68 = ptrtoint i8* %67 to i64
  %69 = load i32, i32* %15, align 8
  %70 = add i32 %69, %52
  store i32 %70, i32* %15, align 8
  %71 = sub nsw i32 %46, %52
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %43, label %73

73:                                               ; preds = %66
  %74 = bitcast i8* %33 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = sext i32 %17 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  store i8* %77, i8** %74, align 8
  %78 = load i32, i32* %38, align 4
  %79 = add i32 %78, %17
  store i32 %79, i32* %38, align 4
  %80 = load i8*, i8** %6, align 8
  tail call void @av_free(i8* %80) #5
  %81 = bitcast %struct.AVFifoBuffer* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %22, i64 40, i1 false)
  tail call void @av_free(i8* nonnull %22) #5
  br label %82

82:                                               ; preds = %12, %24, %2, %73
  %83 = phi i32 [ 0, %73 ], [ 0, %2 ], [ -12, %24 ], [ -12, %12 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_fifo_generic_read(%struct.AVFifoBuffer* nocapture, i8*, i32, void (i8*, i8*, i32)*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to i64*
  %7 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = icmp eq void (i8*, i8*, i32)* %3, null
  %10 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %11 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 4
  %12 = load i64, i64* %6, align 8
  %13 = load i64, i64* %8, align 8
  br label %14

14:                                               ; preds = %44, %4
  %15 = phi i64 [ %13, %4 ], [ %46, %44 ]
  %16 = phi i64 [ %12, %4 ], [ %39, %44 ]
  %17 = phi i32 [ %2, %4 ], [ %49, %44 ]
  %18 = phi i8* [ %1, %4 ], [ %34, %44 ]
  %19 = sub i64 %16, %15
  %20 = sext i32 %17 to i64
  %21 = icmp sgt i64 %19, %20
  %22 = select i1 %21, i64 %20, i64 %19
  %23 = trunc i64 %22 to i32
  %24 = inttoptr i64 %15 to i8*
  br i1 %9, label %28, label %25

25:                                               ; preds = %14
  tail call void %3(i8* %18, i8* %24, i32 %23) #5
  %26 = shl i64 %22, 32
  %27 = ashr exact i64 %26, 32
  br label %32

28:                                               ; preds = %14
  %29 = shl i64 %22, 32
  %30 = ashr exact i64 %29, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %24, i64 %30, i1 false)
  %31 = getelementptr inbounds i8, i8* %18, i64 %30
  br label %32

32:                                               ; preds = %28, %25
  %33 = phi i64 [ %30, %28 ], [ %27, %25 ]
  %34 = phi i8* [ %31, %28 ], [ %18, %25 ]
  %35 = load i8*, i8** %7, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %33
  store i8* %36, i8** %7, align 8
  %37 = load i8*, i8** %5, align 8
  %38 = icmp ult i8* %36, %37
  %39 = ptrtoint i8* %37 to i64
  br i1 %38, label %44, label %40

40:                                               ; preds = %32
  %41 = load i64, i64* %10, align 8
  %42 = sub i64 %41, %39
  %43 = getelementptr inbounds i8, i8* %36, i64 %42
  store i8* %43, i8** %7, align 8
  br label %44

44:                                               ; preds = %32, %40
  %45 = phi i8* [ %36, %32 ], [ %43, %40 ]
  %46 = ptrtoint i8* %45 to i64
  %47 = load i32, i32* %11, align 8
  %48 = add i32 %47, %23
  store i32 %48, i32* %11, align 8
  %49 = sub nsw i32 %17, %23
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %14, label %51

51:                                               ; preds = %44
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_fifo_grow(%struct.AVFifoBuffer* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = sub i32 %11, %13
  %15 = xor i32 %1, -1
  %16 = icmp ugt i32 %14, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %2
  %18 = add i32 %14, %1
  %19 = icmp ugt i32 %18, %9
  br i1 %19, label %20, label %25

20:                                               ; preds = %17
  %21 = shl i32 %9, 1
  %22 = icmp ugt i32 %18, %21
  %23 = select i1 %22, i32 %18, i32 %21
  %24 = tail call i32 @av_fifo_realloc2(%struct.AVFifoBuffer* %0, i32 %23)
  br label %25

25:                                               ; preds = %17, %2, %20
  %26 = phi i32 [ %24, %20 ], [ -22, %2 ], [ 0, %17 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_fifo_generic_write(%struct.AVFifoBuffer* nocapture, i8*, i32, i32 (i8*, i8*, i32)*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %10 = bitcast i8** %9 to i64*
  %11 = icmp eq i32 (i8*, i8*, i32)* %3, null
  %12 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 0
  %13 = load i64, i64* %10, align 8
  br label %14

14:                                               ; preds = %43, %4
  %15 = phi i64 [ %13, %4 ], [ %40, %43 ]
  %16 = phi i32 [ %2, %4 ], [ %46, %43 ]
  %17 = phi i8* [ %1, %4 ], [ %34, %43 ]
  %18 = phi i32 [ %6, %4 ], [ %45, %43 ]
  %19 = phi i8* [ %8, %4 ], [ %44, %43 ]
  %20 = ptrtoint i8* %19 to i64
  %21 = sub i64 %15, %20
  %22 = sext i32 %16 to i64
  %23 = icmp sgt i64 %21, %22
  %24 = select i1 %23, i64 %22, i64 %21
  %25 = trunc i64 %24 to i32
  br i1 %11, label %29, label %26

26:                                               ; preds = %14
  %27 = tail call i32 %3(i8* %17, i8* %19, i32 %25) #5
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %48, label %33

29:                                               ; preds = %14
  %30 = shl i64 %24, 32
  %31 = ashr exact i64 %30, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %17, i64 %31, i1 false)
  %32 = getelementptr inbounds i8, i8* %17, i64 %31
  br label %33

33:                                               ; preds = %26, %29
  %34 = phi i8* [ %17, %26 ], [ %32, %29 ]
  %35 = phi i32 [ %27, %26 ], [ %25, %29 ]
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %19, i64 %36
  %38 = load i8*, i8** %9, align 8
  %39 = icmp ult i8* %37, %38
  %40 = ptrtoint i8* %38 to i64
  br i1 %39, label %43, label %41

41:                                               ; preds = %33
  %42 = load i8*, i8** %12, align 8
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i8* [ %42, %41 ], [ %37, %33 ]
  %45 = add i32 %35, %18
  %46 = sub nsw i32 %16, %35
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %14, label %48

48:                                               ; preds = %26, %43
  %49 = phi i8* [ %44, %43 ], [ %19, %26 ]
  %50 = phi i32 [ %45, %43 ], [ %18, %26 ]
  %51 = phi i32 [ %46, %43 ], [ %16, %26 ]
  store i32 %50, i32* %5, align 4
  store i8* %49, i8** %7, align 8
  %52 = sub nsw i32 %2, %51
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_fifo_generic_peek_at(%struct.AVFifoBuffer* nocapture readonly, i8*, i32, i32, void (i8*, i8*, i32)*) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint i8* %7 to i64
  %13 = sub i64 %11, %12
  %14 = icmp sgt i64 %13, %8
  %15 = inttoptr i64 %11 to i8*
  br i1 %14, label %21, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %8, %11
  %20 = add i64 %19, %18
  br label %21

21:                                               ; preds = %5, %16
  %22 = phi i64 [ %20, %16 ], [ %8, %5 ]
  %23 = icmp sgt i32 %3, 0
  br i1 %23, label %24, label %64

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %7, i64 %22
  %26 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %27 = icmp eq void (i8*, i8*, i32)* %4, null
  br label %28

28:                                               ; preds = %60, %24
  %29 = phi i64 [ %11, %24 ], [ %63, %60 ]
  %30 = phi i8* [ %15, %24 ], [ %62, %60 ]
  %31 = phi i8* [ %25, %24 ], [ %61, %60 ]
  %32 = phi i8* [ %1, %24 ], [ %57, %60 ]
  %33 = phi i32 [ %3, %24 ], [ %58, %60 ]
  %34 = icmp ult i8* %31, %30
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = load i64, i64* %26, align 8
  %37 = ptrtoint i8* %30 to i64
  %38 = sub i64 %36, %37
  %39 = getelementptr inbounds i8, i8* %31, i64 %38
  br label %40

40:                                               ; preds = %28, %35
  %41 = phi i8* [ %39, %35 ], [ %31, %28 ]
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %29, %42
  %44 = sext i32 %33 to i64
  %45 = icmp sgt i64 %43, %44
  %46 = select i1 %45, i64 %44, i64 %43
  %47 = trunc i64 %46 to i32
  br i1 %27, label %51, label %48

48:                                               ; preds = %40
  tail call void %4(i8* %32, i8* %41, i32 %47) #5
  %49 = shl i64 %46, 32
  %50 = ashr exact i64 %49, 32
  br label %55

51:                                               ; preds = %40
  %52 = shl i64 %46, 32
  %53 = ashr exact i64 %52, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %41, i64 %53, i1 false)
  %54 = getelementptr inbounds i8, i8* %32, i64 %53
  br label %55

55:                                               ; preds = %51, %48
  %56 = phi i64 [ %53, %51 ], [ %50, %48 ]
  %57 = phi i8* [ %54, %51 ], [ %32, %48 ]
  %58 = sub nsw i32 %33, %47
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = getelementptr inbounds i8, i8* %41, i64 %56
  %62 = load i8*, i8** %9, align 8
  %63 = ptrtoint i8* %62 to i64
  br label %28

64:                                               ; preds = %55, %21
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_fifo_generic_peek(%struct.AVFifoBuffer* nocapture readonly, i8*, i32, void (i8*, i8*, i32)*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %8 = bitcast i8** %7 to i64*
  %9 = icmp eq void (i8*, i8*, i32)* %3, null
  %10 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %11 = load i64, i64* %8, align 8
  br label %12

12:                                               ; preds = %41, %4
  %13 = phi i64 [ %11, %4 ], [ %36, %41 ]
  %14 = phi i32 [ %2, %4 ], [ %43, %41 ]
  %15 = phi i8* [ %1, %4 ], [ %32, %41 ]
  %16 = phi i8* [ %6, %4 ], [ %42, %41 ]
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %13, %17
  %19 = sext i32 %14 to i64
  %20 = icmp sgt i64 %18, %19
  %21 = select i1 %20, i64 %19, i64 %18
  %22 = trunc i64 %21 to i32
  br i1 %9, label %26, label %23

23:                                               ; preds = %12
  tail call void %3(i8* %15, i8* %16, i32 %22) #5
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  br label %30

26:                                               ; preds = %12
  %27 = shl i64 %21, 32
  %28 = ashr exact i64 %27, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %16, i64 %28, i1 false)
  %29 = getelementptr inbounds i8, i8* %15, i64 %28
  br label %30

30:                                               ; preds = %26, %23
  %31 = phi i64 [ %28, %26 ], [ %25, %23 ]
  %32 = phi i8* [ %29, %26 ], [ %15, %23 ]
  %33 = getelementptr inbounds i8, i8* %16, i64 %31
  %34 = load i8*, i8** %7, align 8
  %35 = icmp ult i8* %33, %34
  %36 = ptrtoint i8* %34 to i64
  br i1 %35, label %41, label %37

37:                                               ; preds = %30
  %38 = load i64, i64* %10, align 8
  %39 = sub i64 %38, %36
  %40 = getelementptr inbounds i8, i8* %33, i64 %39
  br label %41

41:                                               ; preds = %30, %37
  %42 = phi i8* [ %40, %37 ], [ %33, %30 ]
  %43 = sub nsw i32 %14, %22
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %12, label %45

45:                                               ; preds = %41
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av_fifo_drain(%struct.AVFifoBuffer* nocapture, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds i8, i8* %4, i64 %5
  store i8* %6, i8** %3, align 8
  %7 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ult i8* %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.AVFifoBuffer* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint i8* %8 to i64
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  store i8* %15, i8** %3, align 8
  br label %16

16:                                               ; preds = %2, %10
  %17 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, %1
  store i32 %19, i32* %17, align 8
  ret void
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
