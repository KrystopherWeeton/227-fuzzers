; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/div.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/div.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteDivParams = type { i32 }
%"struct.tflite::ops::builtin::div::OpData" = type { i8, i32, i32, i32, i32 }
%"struct.tflite::ArithmeticParams" = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [5 x i32], [5 x i32] }
%class.anon = type { i32**, %"struct.tflite::NdArrayDesc"*, i32**, %"struct.tflite::NdArrayDesc"*, i32**, %"struct.tflite::NdArrayDesc"*, i32*, i32* }
%class.anon.1 = type { float**, %"struct.tflite::NdArrayDesc"*, float**, %"struct.tflite::NdArrayDesc"*, float**, %"struct.tflite::NdArrayDesc"*, float*, float* }
%class.anon.3 = type { %"struct.tflite::ArithmeticParams"*, i8**, %"struct.tflite::NdArrayDesc"*, i8**, %"struct.tflite::NdArrayDesc"*, i8**, %"struct.tflite::NdArrayDesc"* }
%class.anon.7 = type { i32**, %"struct.tflite::NdArrayDesc"*, i32**, %"struct.tflite::NdArrayDesc"*, i32**, %"struct.tflite::NdArrayDesc"*, i32*, i32* }
%class.anon.8 = type { float**, %"struct.tflite::NdArrayDesc"*, float**, %"struct.tflite::NdArrayDesc"*, float**, %"struct.tflite::NdArrayDesc"*, float*, float* }
%class.anon.9 = type { %"struct.tflite::ArithmeticParams"*, i8**, %"struct.tflite::NdArrayDesc"*, i8**, %"struct.tflite::NdArrayDesc"*, i8**, %"struct.tflite::NdArrayDesc"* }

$_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_ = comdat any

$_ZN6tflite13reference_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE = comdat any

$_ZN6tflite13reference_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_Ph = comdat any

$_ZZN6tflite13reference_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_PhENKUlPiE_clESB_ = comdat any

$_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_ = comdat any

$_ZN6tflite13reference_ops14DivElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph = comdat any

$_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_ = comdat any

$_ZN6tflite13optimized_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13optimized_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13optimized_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite13optimized_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_Ph = comdat any

$_ZZN6tflite13optimized_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_PhENKUlPiE_clESB_ = comdat any

$_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/div.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@_ZZN6tflite3ops7builtin16Register_DIV_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3div4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3div4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3div7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin24Register_DIV_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3div4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3div4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3div7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin21Register_DIV_NEON_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3div4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3div4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3div7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.12 = private unnamed_addr constant [66 x i8] c"Div only supports FLOAT32, INT32 and quantized UINT8 now, got %d.\00", align 1
@.str.16 = private unnamed_addr constant [58 x i8] c"Unsupported combination of input and output types in Div.\00", align 1
@__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params = private unnamed_addr constant { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [5 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766] }, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = private unnamed_addr constant [3 x i32] [i32 0, i32 -1, i32 0], align 4
@switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.39 = private unnamed_addr constant [3 x i32] [i32 2147483647, i32 1, i32 6], align 4
@switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.41 = private unnamed_addr constant [3 x float] [float 0x41E0000000000000, float 1.000000e+00, float 6.000000e+00], align 4
@switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44 = private unnamed_addr constant [3 x float] [float 0.000000e+00, float -1.000000e+00, float 0.000000e+00], align 4
@switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.45 = private unnamed_addr constant [3 x float] [float 0x47EFFFFFE0000000, float 1.000000e+00, float 6.000000e+00], align 4

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN6tflite3ops7builtin3div4InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 20) #11
  store i8 0, i8* %4, align 4
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin3div4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #11
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin3div7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %5 = bitcast i8** %4 to %struct.TfLiteDivParams**
  %6 = load %struct.TfLiteDivParams*, %struct.TfLiteDivParams** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %8 = bitcast i8** %7 to %"struct.tflite::ops::builtin::div::OpData"**
  %9 = load %"struct.tflite::ops::builtin::div::OpData"*, %"struct.tflite::ops::builtin::div::OpData"** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %17 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %16, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %17(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %13, i32 2) #12
  br label %114

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %26 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %25, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %26(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 75, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %22, i32 1) #12
  br label %114

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %33 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %32, align 8
  %34 = sext i32 %29 to i64
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 %34
  br label %36

36:                                               ; preds = %27, %31
  %37 = phi %struct.TfLiteTensor* [ %35, %31 ], [ null, %27 ]
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %36, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %36 ]
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %46, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %46 ]
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %69, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %65 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %64, align 8
  %66 = tail call i8* @TfLiteTypeGetName(i32 %59) #12
  %67 = load i32, i32* %60, align 8
  %68 = tail call i8* @TfLiteTypeGetName(i32 %67) #12
  tail call void (%struct.TfLiteContext*, i8*, ...) %65(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* %66, i8* %68) #12
  br label %114

69:                                               ; preds = %56
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 0
  store i32 %59, i32* %70, align 8
  %71 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47) #12
  %72 = xor i1 %71, true
  %73 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %9, i64 0, i32 0
  %74 = zext i1 %72 to i8
  store i8 %74, i8* %73, align 4
  %75 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #12
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  %76 = load i8, i8* %73, align 4, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %69
  %79 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47, %struct.TfLiteIntArray** nonnull %3) #12
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %112

81:                                               ; preds = %69
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 2
  %83 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %82, align 8
  %84 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %83) #12
  store %struct.TfLiteIntArray* %84, %struct.TfLiteIntArray** %3, align 8
  br label %85

85:                                               ; preds = %78, %81
  %86 = load i32, i32* %70, align 8
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %88, label %107

88:                                               ; preds = %85
  %89 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %6, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %9, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %9, i64 0, i32 2
  %93 = call i32 @_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPiS5_(%struct.TfLiteContext* %0, i32 %90, %struct.TfLiteTensor* %57, i32* %91, i32* %92) #12
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %112

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 3, i32 0
  %97 = load float, float* %96, align 8
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 3, i32 0
  %99 = load float, float* %98, align 8
  %100 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %101 = load float, float* %100, align 8
  %102 = fmul float %99, %101
  %103 = fdiv float %97, %102
  %104 = fpext float %103 to double
  %105 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %9, i64 0, i32 3
  %106 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %9, i64 0, i32 4
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %104, i32* %105, i32* %106) #12
  br label %107

107:                                              ; preds = %95, %85
  %108 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %109 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %110 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %111 = call i32 %109(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %57, %struct.TfLiteIntArray* %110) #12
  br label %112

112:                                              ; preds = %78, %88, %107
  %113 = phi i32 [ %111, %107 ], [ %93, %88 ], [ %79, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #12
  br label %114

114:                                              ; preds = %63, %112, %24, %15
  %115 = phi i32 [ 1, %15 ], [ 1, %24 ], [ 1, %63 ], [ %113, %112 ]
  ret i32 %115
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #5

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #5

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #5

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #5

declare i32 @_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPiS5_(%struct.TfLiteContext*, i32, %struct.TfLiteTensor*, i32*, i32*) local_unnamed_addr #5

declare void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double, i32*, i32*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_DIV_REFEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_DIV_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteDivParams**
  %5 = load %struct.TfLiteDivParams*, %struct.TfLiteDivParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::div::OpData"**
  %8 = load %"struct.tflite::ops::builtin::div::OpData"*, %"struct.tflite::ops::builtin::div::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %49 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %46
  ]

45:                                               ; preds = %41, %41
  tail call void @_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteDivParams* %5, %"struct.tflite::ops::builtin::div::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %52

46:                                               ; preds = %41
  %47 = tail call i32 @_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteDivParams* %5, %"struct.tflite::ops::builtin::div::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %53

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 %44) #12
  br label %53

52:                                               ; preds = %46, %45
  br label %53

53:                                               ; preds = %46, %52, %49
  %54 = phi i32 [ 0, %52 ], [ %47, %46 ], [ 1, %49 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_DIV_GENERIC_OPTEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_DIV_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteDivParams**
  %5 = load %struct.TfLiteDivParams*, %struct.TfLiteDivParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::div::OpData"**
  %8 = load %"struct.tflite::ops::builtin::div::OpData"*, %"struct.tflite::ops::builtin::div::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %49 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %46
  ]

45:                                               ; preds = %41, %41
  tail call void @_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteDivParams* %5, %"struct.tflite::ops::builtin::div::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %52

46:                                               ; preds = %41
  %47 = tail call i32 @_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteDivParams* %5, %"struct.tflite::ops::builtin::div::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %53

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 %44) #12
  br label %53

52:                                               ; preds = %46, %45
  br label %53

53:                                               ; preds = %46, %52, %49
  %54 = phi i32 [ 0, %52 ], [ %47, %46 ], [ 1, %49 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin21Register_DIV_NEON_OPTEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin21Register_DIV_NEON_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3div4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteDivParams**
  %5 = load %struct.TfLiteDivParams*, %struct.TfLiteDivParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::div::OpData"**
  %8 = load %"struct.tflite::ops::builtin::div::OpData"*, %"struct.tflite::ops::builtin::div::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %49 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %46
  ]

45:                                               ; preds = %41, %41
  tail call void @_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteDivParams* %5, %"struct.tflite::ops::builtin::div::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %52

46:                                               ; preds = %41
  %47 = tail call i32 @_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteDivParams* %5, %"struct.tflite::ops::builtin::div::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %53

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 %44) #12
  br label %53

52:                                               ; preds = %46, %45
  br label %53

53:                                               ; preds = %46, %52, %49
  %54 = phi i32 [ 0, %52 ], [ %47, %46 ], [ 1, %49 ]
  ret i32 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_DIVEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_DIV_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteDivParams*, %"struct.tflite::ops::builtin::div::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::ArithmeticParams", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %1436 [
    i32 2, label %24
    i32 1, label %669
  ]

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %175, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %30 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = sext i32 %32 to i64
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %32 to i64
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.39, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %28, %34
  %42 = phi i32 [ %37, %34 ], [ -2147483648, %28 ]
  %43 = phi i32 [ %40, %34 ], [ 2147483647, %28 ]
  %44 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %43, i32* %45, align 4
  %46 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #12
  %47 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %49, align 8, !alias.scope !3
  br label %77

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %52 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8, !noalias !3
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4, !noalias !3
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 0
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %54, i32* %56, align 8, !alias.scope !3
  %57 = icmp sgt i32 %54, 5
  br i1 %57, label %58, label %65

58:                                               ; preds = %50
  %59 = sext i32 %54 to i64
  %60 = shl nsw i64 %59, 2
  %61 = tail call i8* @_Znam(i64 %60) #11, !noalias !3
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %63 = bitcast i32** %62 to i8**
  store i8* %61, i8** %63, align 8, !alias.scope !3
  %64 = bitcast i8* %61 to i32*
  br label %70

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %67 = bitcast %union.anon* %66 to i32*
  %68 = sext i32 %54 to i64
  %69 = shl nsw i64 %68, 2
  br label %70

70:                                               ; preds = %65, %58
  %71 = phi i64 [ %60, %58 ], [ %69, %65 ]
  %72 = phi i32* [ %64, %58 ], [ %67, %65 ]
  %73 = bitcast i32* %72 to i8*
  %74 = bitcast i32* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 %71, i1 false) #12
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %76 = load i32*, i32** %75, align 8
  br label %77

77:                                               ; preds = %48, %70
  %78 = phi i32* [ %76, %70 ], [ null, %48 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #12
  %80 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !6
  br label %110

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !6
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !6
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !6
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #11, !noalias !6
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !6
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #12
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %109 = load i32*, i32** %108, align 8
  br label %110

110:                                              ; preds = %81, %103
  %111 = phi i32* [ %109, %103 ], [ null, %81 ]
  %112 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #12
  %113 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !9
  br label %143

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %117, align 8, !noalias !9
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 4, !noalias !9
  %121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %120, i32* %122, align 8, !alias.scope !9
  %123 = icmp sgt i32 %120, 5
  br i1 %123, label %124, label %131

124:                                              ; preds = %116
  %125 = sext i32 %120 to i64
  %126 = shl nsw i64 %125, 2
  %127 = tail call i8* @_Znam(i64 %126) #11, !noalias !9
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %129 = bitcast i32** %128 to i8**
  store i8* %127, i8** %129, align 8, !alias.scope !9
  %130 = bitcast i8* %127 to i32*
  br label %136

131:                                              ; preds = %116
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %133 = bitcast %union.anon* %132 to i32*
  %134 = sext i32 %120 to i64
  %135 = shl nsw i64 %134, 2
  br label %136

136:                                              ; preds = %131, %124
  %137 = phi i64 [ %126, %124 ], [ %135, %131 ]
  %138 = phi i32* [ %130, %124 ], [ %133, %131 ]
  %139 = bitcast i32* %138 to i8*
  %140 = bitcast i32* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 %137, i1 false) #12
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %142 = load i32*, i32** %141, align 8
  br label %143

143:                                              ; preds = %114, %136
  %144 = phi i32* [ %142, %136 ], [ null, %114 ]
  call void @_ZN6tflite13reference_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %111, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %144)
  %145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = icmp sgt i32 %146, 5
  br i1 %147, label %148, label %154

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = icmp eq i32* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = bitcast i32* %150 to i8*
  call void @_ZdaPv(i8* %153) #11
  br label %154

154:                                              ; preds = %143, %148, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #12
  %155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp sgt i32 %156, 5
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = bitcast i32* %160 to i8*
  call void @_ZdaPv(i8* %163) #11
  br label %164

164:                                              ; preds = %154, %158, %162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #12
  %165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = icmp sgt i32 %166, 5
  br i1 %167, label %168, label %174

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %170 = load i32*, i32** %169, align 8
  %171 = icmp eq i32* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %168
  %173 = bitcast i32* %170 to i8*
  call void @_ZdaPv(i8* %173) #11
  br label %174

174:                                              ; preds = %164, %168, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #12
  br label %1436

175:                                              ; preds = %24
  %176 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, -1
  %179 = icmp ult i32 %178, 3
  br i1 %179, label %180, label %187

180:                                              ; preds = %175
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %181
  %183 = load float, float* %182, align 4
  %184 = sext i32 %178 to i64
  %185 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.41, i64 0, i64 %184
  %186 = load float, float* %185, align 4
  br label %187

187:                                              ; preds = %175, %180
  %188 = phi float [ %183, %180 ], [ 0xC1E0000000000000, %175 ]
  %189 = phi float [ %186, %180 ], [ 0x41E0000000000000, %175 ]
  %190 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #12
  %191 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %191, label %192, label %194

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %193, align 8, !alias.scope !12
  br label %221

194:                                              ; preds = %187
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %196 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %195, align 8, !noalias !12
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 0
  %198 = load i32, i32* %197, align 4, !noalias !12
  %199 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 0
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %198, i32* %200, align 8, !alias.scope !12
  %201 = icmp sgt i32 %198, 5
  br i1 %201, label %202, label %209

202:                                              ; preds = %194
  %203 = sext i32 %198 to i64
  %204 = shl nsw i64 %203, 2
  %205 = tail call i8* @_Znam(i64 %204) #11, !noalias !12
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %207 = bitcast i32** %206 to i8**
  store i8* %205, i8** %207, align 8, !alias.scope !12
  %208 = bitcast i8* %205 to i32*
  br label %214

209:                                              ; preds = %194
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %211 = bitcast %union.anon* %210 to i32*
  %212 = sext i32 %198 to i64
  %213 = shl nsw i64 %212, 2
  br label %214

214:                                              ; preds = %209, %202
  %215 = phi i64 [ %204, %202 ], [ %213, %209 ]
  %216 = phi i32* [ %208, %202 ], [ %211, %209 ]
  %217 = bitcast i32* %216 to i8*
  %218 = bitcast i32* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %215, i1 false) #12
  %219 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %220 = load i32*, i32** %219, align 8
  br label %221

221:                                              ; preds = %192, %214
  %222 = phi i32 [ %198, %214 ], [ 0, %192 ]
  %223 = phi i32* [ %220, %214 ], [ null, %192 ]
  %224 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %224) #12
  %225 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !15
  br label %255

228:                                              ; preds = %221
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %230 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %229, align 8, !noalias !15
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4, !noalias !15
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 1, i64 0
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %232, i32* %234, align 8, !alias.scope !15
  %235 = icmp sgt i32 %232, 5
  br i1 %235, label %236, label %243

236:                                              ; preds = %228
  %237 = sext i32 %232 to i64
  %238 = shl nsw i64 %237, 2
  %239 = tail call i8* @_Znam(i64 %238) #11, !noalias !15
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %241 = bitcast i32** %240 to i8**
  store i8* %239, i8** %241, align 8, !alias.scope !15
  %242 = bitcast i8* %239 to i32*
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %245 = bitcast %union.anon* %244 to i32*
  %246 = sext i32 %232 to i64
  %247 = shl nsw i64 %246, 2
  br label %248

248:                                              ; preds = %243, %236
  %249 = phi i64 [ %238, %236 ], [ %247, %243 ]
  %250 = phi i32* [ %242, %236 ], [ %245, %243 ]
  %251 = bitcast i32* %250 to i8*
  %252 = bitcast i32* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %249, i1 false) #12
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %254 = load i32*, i32** %253, align 8
  br label %255

255:                                              ; preds = %226, %248
  %256 = phi i32 [ %232, %248 ], [ 0, %226 ]
  %257 = phi i32* [ %254, %248 ], [ null, %226 ]
  %258 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %258) #12
  %259 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %261, align 8, !alias.scope !18
  br label %289

262:                                              ; preds = %255
  %263 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %264 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %263, align 8, !noalias !18
  %265 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %264, i64 0, i32 0
  %266 = load i32, i32* %265, align 4, !noalias !18
  %267 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %264, i64 0, i32 1, i64 0
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %266, i32* %268, align 8, !alias.scope !18
  %269 = icmp sgt i32 %266, 5
  br i1 %269, label %270, label %277

270:                                              ; preds = %262
  %271 = sext i32 %266 to i64
  %272 = shl nsw i64 %271, 2
  %273 = tail call i8* @_Znam(i64 %272) #11, !noalias !18
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %275 = bitcast i32** %274 to i8**
  store i8* %273, i8** %275, align 8, !alias.scope !18
  %276 = bitcast i8* %273 to i32*
  br label %282

277:                                              ; preds = %262
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %279 = bitcast %union.anon* %278 to i32*
  %280 = sext i32 %266 to i64
  %281 = shl nsw i64 %280, 2
  br label %282

282:                                              ; preds = %277, %270
  %283 = phi i64 [ %272, %270 ], [ %281, %277 ]
  %284 = phi i32* [ %276, %270 ], [ %279, %277 ]
  %285 = bitcast i32* %284 to i8*
  %286 = bitcast i32* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %285, i8* align 4 %286, i64 %283, i1 false) #12
  %287 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %288 = load i32*, i32** %287, align 8
  br label %289

289:                                              ; preds = %260, %282
  %290 = phi i32 [ %266, %282 ], [ 0, %260 ]
  %291 = phi i32* [ %288, %282 ], [ null, %260 ]
  %292 = icmp sgt i32 %222, 5
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  br i1 %292, label %294, label %297

294:                                              ; preds = %289
  %295 = getelementptr inbounds %union.anon, %union.anon* %293, i64 0, i32 0
  %296 = load i32*, i32** %295, align 8
  br label %300

297:                                              ; preds = %289
  %298 = bitcast %union.anon* %293 to i32*
  %299 = icmp sgt i32 %222, 0
  br i1 %299, label %300, label %400

300:                                              ; preds = %297, %294
  %301 = phi i32* [ %296, %294 ], [ %298, %297 ]
  %302 = zext i32 %222 to i64
  %303 = icmp ult i32 %222, 8
  br i1 %303, label %389, label %304

304:                                              ; preds = %300
  %305 = and i64 %302, 4294967288
  %306 = add nsw i64 %305, -8
  %307 = lshr exact i64 %306, 3
  %308 = add nuw nsw i64 %307, 1
  %309 = and i64 %308, 3
  %310 = icmp ult i64 %306, 24
  br i1 %310, label %356, label %311

311:                                              ; preds = %304
  %312 = sub nsw i64 %308, %309
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %353, %313 ]
  %315 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %351, %313 ]
  %316 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %352, %313 ]
  %317 = phi i64 [ %312, %311 ], [ %354, %313 ]
  %318 = getelementptr inbounds i32, i32* %301, i64 %314
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = getelementptr inbounds i32, i32* %318, i64 4
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4
  %324 = mul nsw <4 x i32> %320, %315
  %325 = mul nsw <4 x i32> %323, %316
  %326 = or i64 %314, 8
  %327 = getelementptr inbounds i32, i32* %301, i64 %326
  %328 = bitcast i32* %327 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4
  %330 = getelementptr inbounds i32, i32* %327, i64 4
  %331 = bitcast i32* %330 to <4 x i32>*
  %332 = load <4 x i32>, <4 x i32>* %331, align 4
  %333 = mul nsw <4 x i32> %329, %324
  %334 = mul nsw <4 x i32> %332, %325
  %335 = or i64 %314, 16
  %336 = getelementptr inbounds i32, i32* %301, i64 %335
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4
  %339 = getelementptr inbounds i32, i32* %336, i64 4
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4
  %342 = mul nsw <4 x i32> %338, %333
  %343 = mul nsw <4 x i32> %341, %334
  %344 = or i64 %314, 24
  %345 = getelementptr inbounds i32, i32* %301, i64 %344
  %346 = bitcast i32* %345 to <4 x i32>*
  %347 = load <4 x i32>, <4 x i32>* %346, align 4
  %348 = getelementptr inbounds i32, i32* %345, i64 4
  %349 = bitcast i32* %348 to <4 x i32>*
  %350 = load <4 x i32>, <4 x i32>* %349, align 4
  %351 = mul nsw <4 x i32> %347, %342
  %352 = mul nsw <4 x i32> %350, %343
  %353 = add i64 %314, 32
  %354 = add i64 %317, -4
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %313, !llvm.loop !21

356:                                              ; preds = %313, %304
  %357 = phi <4 x i32> [ undef, %304 ], [ %351, %313 ]
  %358 = phi <4 x i32> [ undef, %304 ], [ %352, %313 ]
  %359 = phi i64 [ 0, %304 ], [ %353, %313 ]
  %360 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %304 ], [ %351, %313 ]
  %361 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %304 ], [ %352, %313 ]
  %362 = icmp eq i64 %309, 0
  br i1 %362, label %379, label %363

363:                                              ; preds = %356, %363
  %364 = phi i64 [ %376, %363 ], [ %359, %356 ]
  %365 = phi <4 x i32> [ %374, %363 ], [ %360, %356 ]
  %366 = phi <4 x i32> [ %375, %363 ], [ %361, %356 ]
  %367 = phi i64 [ %377, %363 ], [ %309, %356 ]
  %368 = getelementptr inbounds i32, i32* %301, i64 %364
  %369 = bitcast i32* %368 to <4 x i32>*
  %370 = load <4 x i32>, <4 x i32>* %369, align 4
  %371 = getelementptr inbounds i32, i32* %368, i64 4
  %372 = bitcast i32* %371 to <4 x i32>*
  %373 = load <4 x i32>, <4 x i32>* %372, align 4
  %374 = mul nsw <4 x i32> %370, %365
  %375 = mul nsw <4 x i32> %373, %366
  %376 = add i64 %364, 8
  %377 = add i64 %367, -1
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %363, !llvm.loop !23

379:                                              ; preds = %363, %356
  %380 = phi <4 x i32> [ %357, %356 ], [ %374, %363 ]
  %381 = phi <4 x i32> [ %358, %356 ], [ %375, %363 ]
  %382 = mul <4 x i32> %381, %380
  %383 = shufflevector <4 x i32> %382, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %384 = mul <4 x i32> %382, %383
  %385 = shufflevector <4 x i32> %384, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %386 = mul <4 x i32> %384, %385
  %387 = extractelement <4 x i32> %386, i32 0
  %388 = icmp eq i64 %305, %302
  br i1 %388, label %400, label %389

389:                                              ; preds = %379, %300
  %390 = phi i64 [ 0, %300 ], [ %305, %379 ]
  %391 = phi i32 [ 1, %300 ], [ %387, %379 ]
  br label %392

392:                                              ; preds = %389, %392
  %393 = phi i64 [ %398, %392 ], [ %390, %389 ]
  %394 = phi i32 [ %397, %392 ], [ %391, %389 ]
  %395 = getelementptr inbounds i32, i32* %301, i64 %393
  %396 = load i32, i32* %395, align 4
  %397 = mul nsw i32 %396, %394
  %398 = add nuw nsw i64 %393, 1
  %399 = icmp eq i64 %398, %302
  br i1 %399, label %400, label %392, !llvm.loop !25

400:                                              ; preds = %392, %379, %297
  %401 = phi i32 [ 1, %297 ], [ %387, %379 ], [ %397, %392 ]
  %402 = icmp sgt i32 %256, 5
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %402, label %404, label %407

404:                                              ; preds = %400
  %405 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %406 = load i32*, i32** %405, align 8
  br label %410

407:                                              ; preds = %400
  %408 = bitcast %union.anon* %403 to i32*
  %409 = icmp sgt i32 %256, 0
  br i1 %409, label %410, label %510

410:                                              ; preds = %407, %404
  %411 = phi i32* [ %406, %404 ], [ %408, %407 ]
  %412 = zext i32 %256 to i64
  %413 = icmp ult i32 %256, 8
  br i1 %413, label %499, label %414

414:                                              ; preds = %410
  %415 = and i64 %412, 4294967288
  %416 = add nsw i64 %415, -8
  %417 = lshr exact i64 %416, 3
  %418 = add nuw nsw i64 %417, 1
  %419 = and i64 %418, 3
  %420 = icmp ult i64 %416, 24
  br i1 %420, label %466, label %421

421:                                              ; preds = %414
  %422 = sub nsw i64 %418, %419
  br label %423

423:                                              ; preds = %423, %421
  %424 = phi i64 [ 0, %421 ], [ %463, %423 ]
  %425 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %421 ], [ %461, %423 ]
  %426 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %421 ], [ %462, %423 ]
  %427 = phi i64 [ %422, %421 ], [ %464, %423 ]
  %428 = getelementptr inbounds i32, i32* %411, i64 %424
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = mul nsw <4 x i32> %430, %425
  %435 = mul nsw <4 x i32> %433, %426
  %436 = or i64 %424, 8
  %437 = getelementptr inbounds i32, i32* %411, i64 %436
  %438 = bitcast i32* %437 to <4 x i32>*
  %439 = load <4 x i32>, <4 x i32>* %438, align 4
  %440 = getelementptr inbounds i32, i32* %437, i64 4
  %441 = bitcast i32* %440 to <4 x i32>*
  %442 = load <4 x i32>, <4 x i32>* %441, align 4
  %443 = mul nsw <4 x i32> %439, %434
  %444 = mul nsw <4 x i32> %442, %435
  %445 = or i64 %424, 16
  %446 = getelementptr inbounds i32, i32* %411, i64 %445
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = mul nsw <4 x i32> %448, %443
  %453 = mul nsw <4 x i32> %451, %444
  %454 = or i64 %424, 24
  %455 = getelementptr inbounds i32, i32* %411, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  %457 = load <4 x i32>, <4 x i32>* %456, align 4
  %458 = getelementptr inbounds i32, i32* %455, i64 4
  %459 = bitcast i32* %458 to <4 x i32>*
  %460 = load <4 x i32>, <4 x i32>* %459, align 4
  %461 = mul nsw <4 x i32> %457, %452
  %462 = mul nsw <4 x i32> %460, %453
  %463 = add i64 %424, 32
  %464 = add i64 %427, -4
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %423, !llvm.loop !27

466:                                              ; preds = %423, %414
  %467 = phi <4 x i32> [ undef, %414 ], [ %461, %423 ]
  %468 = phi <4 x i32> [ undef, %414 ], [ %462, %423 ]
  %469 = phi i64 [ 0, %414 ], [ %463, %423 ]
  %470 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %414 ], [ %461, %423 ]
  %471 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %414 ], [ %462, %423 ]
  %472 = icmp eq i64 %419, 0
  br i1 %472, label %489, label %473

473:                                              ; preds = %466, %473
  %474 = phi i64 [ %486, %473 ], [ %469, %466 ]
  %475 = phi <4 x i32> [ %484, %473 ], [ %470, %466 ]
  %476 = phi <4 x i32> [ %485, %473 ], [ %471, %466 ]
  %477 = phi i64 [ %487, %473 ], [ %419, %466 ]
  %478 = getelementptr inbounds i32, i32* %411, i64 %474
  %479 = bitcast i32* %478 to <4 x i32>*
  %480 = load <4 x i32>, <4 x i32>* %479, align 4
  %481 = getelementptr inbounds i32, i32* %478, i64 4
  %482 = bitcast i32* %481 to <4 x i32>*
  %483 = load <4 x i32>, <4 x i32>* %482, align 4
  %484 = mul nsw <4 x i32> %480, %475
  %485 = mul nsw <4 x i32> %483, %476
  %486 = add i64 %474, 8
  %487 = add i64 %477, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %473, !llvm.loop !28

489:                                              ; preds = %473, %466
  %490 = phi <4 x i32> [ %467, %466 ], [ %484, %473 ]
  %491 = phi <4 x i32> [ %468, %466 ], [ %485, %473 ]
  %492 = mul <4 x i32> %491, %490
  %493 = shufflevector <4 x i32> %492, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %494 = mul <4 x i32> %492, %493
  %495 = shufflevector <4 x i32> %494, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %496 = mul <4 x i32> %494, %495
  %497 = extractelement <4 x i32> %496, i32 0
  %498 = icmp eq i64 %415, %412
  br i1 %498, label %510, label %499

499:                                              ; preds = %489, %410
  %500 = phi i64 [ 0, %410 ], [ %415, %489 ]
  %501 = phi i32 [ 1, %410 ], [ %497, %489 ]
  br label %502

502:                                              ; preds = %499, %502
  %503 = phi i64 [ %508, %502 ], [ %500, %499 ]
  %504 = phi i32 [ %507, %502 ], [ %501, %499 ]
  %505 = getelementptr inbounds i32, i32* %411, i64 %503
  %506 = load i32, i32* %505, align 4
  %507 = mul nsw i32 %506, %504
  %508 = add nuw nsw i64 %503, 1
  %509 = icmp eq i64 %508, %412
  br i1 %509, label %510, label %502, !llvm.loop !29

510:                                              ; preds = %502, %489, %407
  %511 = phi i32 [ 1, %407 ], [ %497, %489 ], [ %507, %502 ]
  %512 = icmp sgt i32 %290, 5
  %513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %512, label %514, label %517

514:                                              ; preds = %510
  %515 = getelementptr inbounds %union.anon, %union.anon* %513, i64 0, i32 0
  %516 = load i32*, i32** %515, align 8
  br label %520

517:                                              ; preds = %510
  %518 = bitcast %union.anon* %513 to i32*
  %519 = icmp sgt i32 %290, 0
  br i1 %519, label %520, label %620

520:                                              ; preds = %517, %514
  %521 = phi i32* [ %516, %514 ], [ %518, %517 ]
  %522 = zext i32 %290 to i64
  %523 = icmp ult i32 %290, 8
  br i1 %523, label %609, label %524

524:                                              ; preds = %520
  %525 = and i64 %522, 4294967288
  %526 = add nsw i64 %525, -8
  %527 = lshr exact i64 %526, 3
  %528 = add nuw nsw i64 %527, 1
  %529 = and i64 %528, 3
  %530 = icmp ult i64 %526, 24
  br i1 %530, label %576, label %531

531:                                              ; preds = %524
  %532 = sub nsw i64 %528, %529
  br label %533

533:                                              ; preds = %533, %531
  %534 = phi i64 [ 0, %531 ], [ %573, %533 ]
  %535 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %531 ], [ %571, %533 ]
  %536 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %531 ], [ %572, %533 ]
  %537 = phi i64 [ %532, %531 ], [ %574, %533 ]
  %538 = getelementptr inbounds i32, i32* %521, i64 %534
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = getelementptr inbounds i32, i32* %538, i64 4
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4
  %544 = mul nsw <4 x i32> %540, %535
  %545 = mul nsw <4 x i32> %543, %536
  %546 = or i64 %534, 8
  %547 = getelementptr inbounds i32, i32* %521, i64 %546
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4
  %550 = getelementptr inbounds i32, i32* %547, i64 4
  %551 = bitcast i32* %550 to <4 x i32>*
  %552 = load <4 x i32>, <4 x i32>* %551, align 4
  %553 = mul nsw <4 x i32> %549, %544
  %554 = mul nsw <4 x i32> %552, %545
  %555 = or i64 %534, 16
  %556 = getelementptr inbounds i32, i32* %521, i64 %555
  %557 = bitcast i32* %556 to <4 x i32>*
  %558 = load <4 x i32>, <4 x i32>* %557, align 4
  %559 = getelementptr inbounds i32, i32* %556, i64 4
  %560 = bitcast i32* %559 to <4 x i32>*
  %561 = load <4 x i32>, <4 x i32>* %560, align 4
  %562 = mul nsw <4 x i32> %558, %553
  %563 = mul nsw <4 x i32> %561, %554
  %564 = or i64 %534, 24
  %565 = getelementptr inbounds i32, i32* %521, i64 %564
  %566 = bitcast i32* %565 to <4 x i32>*
  %567 = load <4 x i32>, <4 x i32>* %566, align 4
  %568 = getelementptr inbounds i32, i32* %565, i64 4
  %569 = bitcast i32* %568 to <4 x i32>*
  %570 = load <4 x i32>, <4 x i32>* %569, align 4
  %571 = mul nsw <4 x i32> %567, %562
  %572 = mul nsw <4 x i32> %570, %563
  %573 = add i64 %534, 32
  %574 = add i64 %537, -4
  %575 = icmp eq i64 %574, 0
  br i1 %575, label %576, label %533, !llvm.loop !30

576:                                              ; preds = %533, %524
  %577 = phi <4 x i32> [ undef, %524 ], [ %571, %533 ]
  %578 = phi <4 x i32> [ undef, %524 ], [ %572, %533 ]
  %579 = phi i64 [ 0, %524 ], [ %573, %533 ]
  %580 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %524 ], [ %571, %533 ]
  %581 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %524 ], [ %572, %533 ]
  %582 = icmp eq i64 %529, 0
  br i1 %582, label %599, label %583

583:                                              ; preds = %576, %583
  %584 = phi i64 [ %596, %583 ], [ %579, %576 ]
  %585 = phi <4 x i32> [ %594, %583 ], [ %580, %576 ]
  %586 = phi <4 x i32> [ %595, %583 ], [ %581, %576 ]
  %587 = phi i64 [ %597, %583 ], [ %529, %576 ]
  %588 = getelementptr inbounds i32, i32* %521, i64 %584
  %589 = bitcast i32* %588 to <4 x i32>*
  %590 = load <4 x i32>, <4 x i32>* %589, align 4
  %591 = getelementptr inbounds i32, i32* %588, i64 4
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4
  %594 = mul nsw <4 x i32> %590, %585
  %595 = mul nsw <4 x i32> %593, %586
  %596 = add i64 %584, 8
  %597 = add i64 %587, -1
  %598 = icmp eq i64 %597, 0
  br i1 %598, label %599, label %583, !llvm.loop !31

599:                                              ; preds = %583, %576
  %600 = phi <4 x i32> [ %577, %576 ], [ %594, %583 ]
  %601 = phi <4 x i32> [ %578, %576 ], [ %595, %583 ]
  %602 = mul <4 x i32> %601, %600
  %603 = shufflevector <4 x i32> %602, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %604 = mul <4 x i32> %602, %603
  %605 = shufflevector <4 x i32> %604, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %606 = mul <4 x i32> %604, %605
  %607 = extractelement <4 x i32> %606, i32 0
  %608 = icmp eq i64 %525, %522
  br i1 %608, label %620, label %609

609:                                              ; preds = %599, %520
  %610 = phi i64 [ 0, %520 ], [ %525, %599 ]
  %611 = phi i32 [ 1, %520 ], [ %607, %599 ]
  br label %612

612:                                              ; preds = %609, %612
  %613 = phi i64 [ %618, %612 ], [ %610, %609 ]
  %614 = phi i32 [ %617, %612 ], [ %611, %609 ]
  %615 = getelementptr inbounds i32, i32* %521, i64 %613
  %616 = load i32, i32* %615, align 4
  %617 = mul nsw i32 %616, %614
  %618 = add nuw nsw i64 %613, 1
  %619 = icmp eq i64 %618, %522
  br i1 %619, label %620, label %612, !llvm.loop !32

620:                                              ; preds = %612, %599, %517
  %621 = phi i32 [ 1, %517 ], [ %607, %599 ], [ %617, %612 ]
  %622 = icmp eq i32 %401, %511
  br i1 %622, label %624, label %623

623:                                              ; preds = %620
  tail call void @abort() #13
  unreachable

624:                                              ; preds = %620
  %625 = icmp eq i32 %401, %621
  br i1 %625, label %626, label %630

626:                                              ; preds = %624
  %627 = icmp sgt i32 %401, 0
  br i1 %627, label %628, label %647

628:                                              ; preds = %626
  %629 = zext i32 %401 to i64
  br label %631

630:                                              ; preds = %624
  tail call void @abort() #13
  unreachable

631:                                              ; preds = %631, %628
  %632 = phi i64 [ 0, %628 ], [ %645, %631 ]
  %633 = getelementptr inbounds i32, i32* %223, i64 %632
  %634 = load i32, i32* %633, align 4
  %635 = getelementptr inbounds i32, i32* %257, i64 %632
  %636 = load i32, i32* %635, align 4
  %637 = sdiv i32 %634, %636
  %638 = sitofp i32 %637 to float
  %639 = fcmp ogt float %188, %638
  %640 = select i1 %639, float %188, float %638
  %641 = fcmp ogt float %640, %189
  %642 = select i1 %641, float %189, float %640
  %643 = fptosi float %642 to i32
  %644 = getelementptr inbounds i32, i32* %291, i64 %632
  store i32 %643, i32* %644, align 4
  %645 = add nuw nsw i64 %632, 1
  %646 = icmp eq i64 %645, %629
  br i1 %646, label %647, label %631

647:                                              ; preds = %631, %626
  br i1 %512, label %648, label %654

648:                                              ; preds = %647
  %649 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %650 = load i32*, i32** %649, align 8
  %651 = icmp eq i32* %650, null
  br i1 %651, label %654, label %652

652:                                              ; preds = %648
  %653 = bitcast i32* %650 to i8*
  tail call void @_ZdaPv(i8* %653) #11
  br label %654

654:                                              ; preds = %647, %648, %652
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %258) #12
  br i1 %402, label %655, label %661

655:                                              ; preds = %654
  %656 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %657 = load i32*, i32** %656, align 8
  %658 = icmp eq i32* %657, null
  br i1 %658, label %661, label %659

659:                                              ; preds = %655
  %660 = bitcast i32* %657 to i8*
  tail call void @_ZdaPv(i8* %660) #11
  br label %661

661:                                              ; preds = %654, %655, %659
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #12
  br i1 %292, label %662, label %668

662:                                              ; preds = %661
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  %665 = icmp eq i32* %664, null
  br i1 %665, label %668, label %666

666:                                              ; preds = %662
  %667 = bitcast i32* %664 to i8*
  tail call void @_ZdaPv(i8* %667) #11
  br label %668

668:                                              ; preds = %661, %662, %666
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #12
  br label %1436

669:                                              ; preds = %7
  %670 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 0
  %671 = load i8, i8* %670, align 4, !range !2
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %823, label %673

673:                                              ; preds = %669
  %674 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %674) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %674, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %675 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  %677 = add i32 %676, -1
  %678 = icmp ult i32 %677, 3
  br i1 %678, label %679, label %686

679:                                              ; preds = %673
  %680 = sext i32 %677 to i64
  %681 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %680
  %682 = load float, float* %681, align 4
  %683 = sext i32 %677 to i64
  %684 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.45, i64 0, i64 %683
  %685 = load float, float* %684, align 4
  br label %686

686:                                              ; preds = %673, %679
  %687 = phi float [ %682, %679 ], [ 0xC7EFFFFFE0000000, %673 ]
  %688 = phi float [ %685, %679 ], [ 0x47EFFFFFE0000000, %673 ]
  %689 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 13
  store float %687, float* %689, align 4
  %690 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 14
  store float %688, float* %690, align 4
  %691 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %691) #12
  %692 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %692, label %693, label %695

693:                                              ; preds = %686
  %694 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %694, align 8, !alias.scope !33
  br label %723

695:                                              ; preds = %686
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %697 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %696, align 8, !noalias !33
  %698 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 0
  %699 = load i32, i32* %698, align 4, !noalias !33
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 1, i64 0
  %701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %699, i32* %701, align 8, !alias.scope !33
  %702 = icmp sgt i32 %699, 5
  br i1 %702, label %703, label %710

703:                                              ; preds = %695
  %704 = sext i32 %699 to i64
  %705 = shl nsw i64 %704, 2
  %706 = tail call i8* @_Znam(i64 %705) #11, !noalias !33
  %707 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %708 = bitcast i32** %707 to i8**
  store i8* %706, i8** %708, align 8, !alias.scope !33
  %709 = bitcast i8* %706 to i32*
  br label %715

710:                                              ; preds = %695
  %711 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %712 = bitcast %union.anon* %711 to i32*
  %713 = sext i32 %699 to i64
  %714 = shl nsw i64 %713, 2
  br label %715

715:                                              ; preds = %710, %703
  %716 = phi i64 [ %705, %703 ], [ %714, %710 ]
  %717 = phi i32* [ %709, %703 ], [ %712, %710 ]
  %718 = bitcast i32* %717 to i8*
  %719 = bitcast i32* %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %718, i8* align 4 %719, i64 %716, i1 false) #12
  %720 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %721 = bitcast %union.TfLitePtrUnion* %720 to float**
  %722 = load float*, float** %721, align 8
  br label %723

723:                                              ; preds = %693, %715
  %724 = phi float* [ %722, %715 ], [ null, %693 ]
  %725 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %725) #12
  %726 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %726, label %727, label %729

727:                                              ; preds = %723
  %728 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %728, align 8, !alias.scope !36
  br label %757

729:                                              ; preds = %723
  %730 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %731 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %730, align 8, !noalias !36
  %732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %731, i64 0, i32 0
  %733 = load i32, i32* %732, align 4, !noalias !36
  %734 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %731, i64 0, i32 1, i64 0
  %735 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %733, i32* %735, align 8, !alias.scope !36
  %736 = icmp sgt i32 %733, 5
  br i1 %736, label %737, label %744

737:                                              ; preds = %729
  %738 = sext i32 %733 to i64
  %739 = shl nsw i64 %738, 2
  %740 = tail call i8* @_Znam(i64 %739) #11, !noalias !36
  %741 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %742 = bitcast i32** %741 to i8**
  store i8* %740, i8** %742, align 8, !alias.scope !36
  %743 = bitcast i8* %740 to i32*
  br label %749

744:                                              ; preds = %729
  %745 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %746 = bitcast %union.anon* %745 to i32*
  %747 = sext i32 %733 to i64
  %748 = shl nsw i64 %747, 2
  br label %749

749:                                              ; preds = %744, %737
  %750 = phi i64 [ %739, %737 ], [ %748, %744 ]
  %751 = phi i32* [ %743, %737 ], [ %746, %744 ]
  %752 = bitcast i32* %751 to i8*
  %753 = bitcast i32* %734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %752, i8* align 4 %753, i64 %750, i1 false) #12
  %754 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %755 = bitcast %union.TfLitePtrUnion* %754 to float**
  %756 = load float*, float** %755, align 8
  br label %757

757:                                              ; preds = %727, %749
  %758 = phi float* [ %756, %749 ], [ null, %727 ]
  %759 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %759) #12
  %760 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %760, label %761, label %763

761:                                              ; preds = %757
  %762 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %762, align 8, !alias.scope !39
  br label %791

763:                                              ; preds = %757
  %764 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %765 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %764, align 8, !noalias !39
  %766 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %765, i64 0, i32 0
  %767 = load i32, i32* %766, align 4, !noalias !39
  %768 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %765, i64 0, i32 1, i64 0
  %769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %767, i32* %769, align 8, !alias.scope !39
  %770 = icmp sgt i32 %767, 5
  br i1 %770, label %771, label %778

771:                                              ; preds = %763
  %772 = sext i32 %767 to i64
  %773 = shl nsw i64 %772, 2
  %774 = tail call i8* @_Znam(i64 %773) #11, !noalias !39
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %776 = bitcast i32** %775 to i8**
  store i8* %774, i8** %776, align 8, !alias.scope !39
  %777 = bitcast i8* %774 to i32*
  br label %783

778:                                              ; preds = %763
  %779 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %780 = bitcast %union.anon* %779 to i32*
  %781 = sext i32 %767 to i64
  %782 = shl nsw i64 %781, 2
  br label %783

783:                                              ; preds = %778, %771
  %784 = phi i64 [ %773, %771 ], [ %782, %778 ]
  %785 = phi i32* [ %777, %771 ], [ %780, %778 ]
  %786 = bitcast i32* %785 to i8*
  %787 = bitcast i32* %768 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %786, i8* align 4 %787, i64 %784, i1 false) #12
  %788 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %789 = bitcast %union.TfLitePtrUnion* %788 to float**
  %790 = load float*, float** %789, align 8
  br label %791

791:                                              ; preds = %761, %783
  %792 = phi float* [ %790, %783 ], [ null, %761 ]
  call void @_ZN6tflite13reference_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, float* %724, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, float* %758, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, float* %792)
  %793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %794 = load i32, i32* %793, align 8
  %795 = icmp sgt i32 %794, 5
  br i1 %795, label %796, label %802

796:                                              ; preds = %791
  %797 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %798 = load i32*, i32** %797, align 8
  %799 = icmp eq i32* %798, null
  br i1 %799, label %802, label %800

800:                                              ; preds = %796
  %801 = bitcast i32* %798 to i8*
  call void @_ZdaPv(i8* %801) #11
  br label %802

802:                                              ; preds = %791, %796, %800
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %759) #12
  %803 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %804 = load i32, i32* %803, align 8
  %805 = icmp sgt i32 %804, 5
  br i1 %805, label %806, label %812

806:                                              ; preds = %802
  %807 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %808 = load i32*, i32** %807, align 8
  %809 = icmp eq i32* %808, null
  br i1 %809, label %812, label %810

810:                                              ; preds = %806
  %811 = bitcast i32* %808 to i8*
  call void @_ZdaPv(i8* %811) #11
  br label %812

812:                                              ; preds = %802, %806, %810
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #12
  %813 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %814 = load i32, i32* %813, align 8
  %815 = icmp sgt i32 %814, 5
  br i1 %815, label %816, label %822

816:                                              ; preds = %812
  %817 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %818 = load i32*, i32** %817, align 8
  %819 = icmp eq i32* %818, null
  br i1 %819, label %822, label %820

820:                                              ; preds = %816
  %821 = bitcast i32* %818 to i8*
  call void @_ZdaPv(i8* %821) #11
  br label %822

822:                                              ; preds = %812, %816, %820
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %691) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %674) #12
  br label %1436

823:                                              ; preds = %669
  %824 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  %826 = add i32 %825, -1
  %827 = icmp ult i32 %826, 3
  br i1 %827, label %828, label %835

828:                                              ; preds = %823
  %829 = sext i32 %826 to i64
  %830 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %829
  %831 = load float, float* %830, align 4
  %832 = sext i32 %826 to i64
  %833 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.45, i64 0, i64 %832
  %834 = load float, float* %833, align 4
  br label %835

835:                                              ; preds = %823, %828
  %836 = phi float [ %831, %828 ], [ 0xC7EFFFFFE0000000, %823 ]
  %837 = phi float [ %834, %828 ], [ 0x47EFFFFFE0000000, %823 ]
  %838 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %838) #12
  %839 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %839, label %840, label %842

840:                                              ; preds = %835
  %841 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %841, align 8, !alias.scope !42
  br label %871

842:                                              ; preds = %835
  %843 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %844 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %843, align 8, !noalias !42
  %845 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 0
  %846 = load i32, i32* %845, align 4, !noalias !42
  %847 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 1, i64 0
  %848 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %846, i32* %848, align 8, !alias.scope !42
  %849 = icmp sgt i32 %846, 5
  br i1 %849, label %850, label %857

850:                                              ; preds = %842
  %851 = sext i32 %846 to i64
  %852 = shl nsw i64 %851, 2
  %853 = tail call i8* @_Znam(i64 %852) #11, !noalias !42
  %854 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %855 = bitcast i32** %854 to i8**
  store i8* %853, i8** %855, align 8, !alias.scope !42
  %856 = bitcast i8* %853 to i32*
  br label %862

857:                                              ; preds = %842
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %859 = bitcast %union.anon* %858 to i32*
  %860 = sext i32 %846 to i64
  %861 = shl nsw i64 %860, 2
  br label %862

862:                                              ; preds = %857, %850
  %863 = phi i64 [ %852, %850 ], [ %861, %857 ]
  %864 = phi i32* [ %856, %850 ], [ %859, %857 ]
  %865 = bitcast i32* %864 to i8*
  %866 = bitcast i32* %847 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %865, i8* align 4 %866, i64 %863, i1 false) #12
  %867 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %868 = bitcast %union.TfLitePtrUnion* %867 to float**
  %869 = load float*, float** %868, align 8
  %870 = bitcast float* %869 to i8*
  br label %871

871:                                              ; preds = %840, %862
  %872 = phi i32 [ %846, %862 ], [ 0, %840 ]
  %873 = phi i8* [ %870, %862 ], [ null, %840 ]
  %874 = phi float* [ %869, %862 ], [ null, %840 ]
  %875 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %875) #12
  %876 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %876, label %877, label %879

877:                                              ; preds = %871
  %878 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %878, align 8, !alias.scope !45
  br label %908

879:                                              ; preds = %871
  %880 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %881 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %880, align 8, !noalias !45
  %882 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %881, i64 0, i32 0
  %883 = load i32, i32* %882, align 4, !noalias !45
  %884 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %881, i64 0, i32 1, i64 0
  %885 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %883, i32* %885, align 8, !alias.scope !45
  %886 = icmp sgt i32 %883, 5
  br i1 %886, label %887, label %894

887:                                              ; preds = %879
  %888 = sext i32 %883 to i64
  %889 = shl nsw i64 %888, 2
  %890 = tail call i8* @_Znam(i64 %889) #11, !noalias !45
  %891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %892 = bitcast i32** %891 to i8**
  store i8* %890, i8** %892, align 8, !alias.scope !45
  %893 = bitcast i8* %890 to i32*
  br label %899

894:                                              ; preds = %879
  %895 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %896 = bitcast %union.anon* %895 to i32*
  %897 = sext i32 %883 to i64
  %898 = shl nsw i64 %897, 2
  br label %899

899:                                              ; preds = %894, %887
  %900 = phi i64 [ %889, %887 ], [ %898, %894 ]
  %901 = phi i32* [ %893, %887 ], [ %896, %894 ]
  %902 = bitcast i32* %901 to i8*
  %903 = bitcast i32* %884 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %902, i8* align 4 %903, i64 %900, i1 false) #12
  %904 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %905 = bitcast %union.TfLitePtrUnion* %904 to float**
  %906 = load float*, float** %905, align 8
  %907 = bitcast float* %906 to i8*
  br label %908

908:                                              ; preds = %877, %899
  %909 = phi i32 [ %883, %899 ], [ 0, %877 ]
  %910 = phi i8* [ %907, %899 ], [ null, %877 ]
  %911 = phi float* [ %906, %899 ], [ null, %877 ]
  %912 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %912) #12
  %913 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %913, label %914, label %916

914:                                              ; preds = %908
  %915 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %915, align 8, !alias.scope !48
  br label %945

916:                                              ; preds = %908
  %917 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %918 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %917, align 8, !noalias !48
  %919 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %918, i64 0, i32 0
  %920 = load i32, i32* %919, align 4, !noalias !48
  %921 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %918, i64 0, i32 1, i64 0
  %922 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %920, i32* %922, align 8, !alias.scope !48
  %923 = icmp sgt i32 %920, 5
  br i1 %923, label %924, label %931

924:                                              ; preds = %916
  %925 = sext i32 %920 to i64
  %926 = shl nsw i64 %925, 2
  %927 = tail call i8* @_Znam(i64 %926) #11, !noalias !48
  %928 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %929 = bitcast i32** %928 to i8**
  store i8* %927, i8** %929, align 8, !alias.scope !48
  %930 = bitcast i8* %927 to i32*
  br label %936

931:                                              ; preds = %916
  %932 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %933 = bitcast %union.anon* %932 to i32*
  %934 = sext i32 %920 to i64
  %935 = shl nsw i64 %934, 2
  br label %936

936:                                              ; preds = %931, %924
  %937 = phi i64 [ %926, %924 ], [ %935, %931 ]
  %938 = phi i32* [ %930, %924 ], [ %933, %931 ]
  %939 = bitcast i32* %938 to i8*
  %940 = bitcast i32* %921 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %939, i8* align 4 %940, i64 %937, i1 false) #12
  %941 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %942 = bitcast %union.TfLitePtrUnion* %941 to float**
  %943 = load float*, float** %942, align 8
  %944 = bitcast float* %943 to i8*
  br label %945

945:                                              ; preds = %914, %936
  %946 = phi i32 [ %920, %936 ], [ 0, %914 ]
  %947 = phi i8* [ %944, %936 ], [ null, %914 ]
  %948 = phi float* [ %943, %936 ], [ null, %914 ]
  %949 = icmp sgt i32 %872, 5
  %950 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  br i1 %949, label %951, label %954

951:                                              ; preds = %945
  %952 = getelementptr inbounds %union.anon, %union.anon* %950, i64 0, i32 0
  %953 = load i32*, i32** %952, align 8
  br label %957

954:                                              ; preds = %945
  %955 = bitcast %union.anon* %950 to i32*
  %956 = icmp sgt i32 %872, 0
  br i1 %956, label %957, label %1057

957:                                              ; preds = %954, %951
  %958 = phi i32* [ %953, %951 ], [ %955, %954 ]
  %959 = zext i32 %872 to i64
  %960 = icmp ult i32 %872, 8
  br i1 %960, label %1046, label %961

961:                                              ; preds = %957
  %962 = and i64 %959, 4294967288
  %963 = add nsw i64 %962, -8
  %964 = lshr exact i64 %963, 3
  %965 = add nuw nsw i64 %964, 1
  %966 = and i64 %965, 3
  %967 = icmp ult i64 %963, 24
  br i1 %967, label %1013, label %968

968:                                              ; preds = %961
  %969 = sub nsw i64 %965, %966
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi i64 [ 0, %968 ], [ %1010, %970 ]
  %972 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %968 ], [ %1008, %970 ]
  %973 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %968 ], [ %1009, %970 ]
  %974 = phi i64 [ %969, %968 ], [ %1011, %970 ]
  %975 = getelementptr inbounds i32, i32* %958, i64 %971
  %976 = bitcast i32* %975 to <4 x i32>*
  %977 = load <4 x i32>, <4 x i32>* %976, align 4
  %978 = getelementptr inbounds i32, i32* %975, i64 4
  %979 = bitcast i32* %978 to <4 x i32>*
  %980 = load <4 x i32>, <4 x i32>* %979, align 4
  %981 = mul nsw <4 x i32> %977, %972
  %982 = mul nsw <4 x i32> %980, %973
  %983 = or i64 %971, 8
  %984 = getelementptr inbounds i32, i32* %958, i64 %983
  %985 = bitcast i32* %984 to <4 x i32>*
  %986 = load <4 x i32>, <4 x i32>* %985, align 4
  %987 = getelementptr inbounds i32, i32* %984, i64 4
  %988 = bitcast i32* %987 to <4 x i32>*
  %989 = load <4 x i32>, <4 x i32>* %988, align 4
  %990 = mul nsw <4 x i32> %986, %981
  %991 = mul nsw <4 x i32> %989, %982
  %992 = or i64 %971, 16
  %993 = getelementptr inbounds i32, i32* %958, i64 %992
  %994 = bitcast i32* %993 to <4 x i32>*
  %995 = load <4 x i32>, <4 x i32>* %994, align 4
  %996 = getelementptr inbounds i32, i32* %993, i64 4
  %997 = bitcast i32* %996 to <4 x i32>*
  %998 = load <4 x i32>, <4 x i32>* %997, align 4
  %999 = mul nsw <4 x i32> %995, %990
  %1000 = mul nsw <4 x i32> %998, %991
  %1001 = or i64 %971, 24
  %1002 = getelementptr inbounds i32, i32* %958, i64 %1001
  %1003 = bitcast i32* %1002 to <4 x i32>*
  %1004 = load <4 x i32>, <4 x i32>* %1003, align 4
  %1005 = getelementptr inbounds i32, i32* %1002, i64 4
  %1006 = bitcast i32* %1005 to <4 x i32>*
  %1007 = load <4 x i32>, <4 x i32>* %1006, align 4
  %1008 = mul nsw <4 x i32> %1004, %999
  %1009 = mul nsw <4 x i32> %1007, %1000
  %1010 = add i64 %971, 32
  %1011 = add i64 %974, -4
  %1012 = icmp eq i64 %1011, 0
  br i1 %1012, label %1013, label %970, !llvm.loop !51

1013:                                             ; preds = %970, %961
  %1014 = phi <4 x i32> [ undef, %961 ], [ %1008, %970 ]
  %1015 = phi <4 x i32> [ undef, %961 ], [ %1009, %970 ]
  %1016 = phi i64 [ 0, %961 ], [ %1010, %970 ]
  %1017 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %961 ], [ %1008, %970 ]
  %1018 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %961 ], [ %1009, %970 ]
  %1019 = icmp eq i64 %966, 0
  br i1 %1019, label %1036, label %1020

1020:                                             ; preds = %1013, %1020
  %1021 = phi i64 [ %1033, %1020 ], [ %1016, %1013 ]
  %1022 = phi <4 x i32> [ %1031, %1020 ], [ %1017, %1013 ]
  %1023 = phi <4 x i32> [ %1032, %1020 ], [ %1018, %1013 ]
  %1024 = phi i64 [ %1034, %1020 ], [ %966, %1013 ]
  %1025 = getelementptr inbounds i32, i32* %958, i64 %1021
  %1026 = bitcast i32* %1025 to <4 x i32>*
  %1027 = load <4 x i32>, <4 x i32>* %1026, align 4
  %1028 = getelementptr inbounds i32, i32* %1025, i64 4
  %1029 = bitcast i32* %1028 to <4 x i32>*
  %1030 = load <4 x i32>, <4 x i32>* %1029, align 4
  %1031 = mul nsw <4 x i32> %1027, %1022
  %1032 = mul nsw <4 x i32> %1030, %1023
  %1033 = add i64 %1021, 8
  %1034 = add i64 %1024, -1
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %1036, label %1020, !llvm.loop !52

1036:                                             ; preds = %1020, %1013
  %1037 = phi <4 x i32> [ %1014, %1013 ], [ %1031, %1020 ]
  %1038 = phi <4 x i32> [ %1015, %1013 ], [ %1032, %1020 ]
  %1039 = mul <4 x i32> %1038, %1037
  %1040 = shufflevector <4 x i32> %1039, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1041 = mul <4 x i32> %1039, %1040
  %1042 = shufflevector <4 x i32> %1041, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1043 = mul <4 x i32> %1041, %1042
  %1044 = extractelement <4 x i32> %1043, i32 0
  %1045 = icmp eq i64 %962, %959
  br i1 %1045, label %1057, label %1046

1046:                                             ; preds = %1036, %957
  %1047 = phi i64 [ 0, %957 ], [ %962, %1036 ]
  %1048 = phi i32 [ 1, %957 ], [ %1044, %1036 ]
  br label %1049

1049:                                             ; preds = %1046, %1049
  %1050 = phi i64 [ %1055, %1049 ], [ %1047, %1046 ]
  %1051 = phi i32 [ %1054, %1049 ], [ %1048, %1046 ]
  %1052 = getelementptr inbounds i32, i32* %958, i64 %1050
  %1053 = load i32, i32* %1052, align 4
  %1054 = mul nsw i32 %1053, %1051
  %1055 = add nuw nsw i64 %1050, 1
  %1056 = icmp eq i64 %1055, %959
  br i1 %1056, label %1057, label %1049, !llvm.loop !53

1057:                                             ; preds = %1049, %1036, %954
  %1058 = phi i32 [ 1, %954 ], [ %1044, %1036 ], [ %1054, %1049 ]
  %1059 = icmp sgt i32 %909, 5
  %1060 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  br i1 %1059, label %1061, label %1064

1061:                                             ; preds = %1057
  %1062 = getelementptr inbounds %union.anon, %union.anon* %1060, i64 0, i32 0
  %1063 = load i32*, i32** %1062, align 8
  br label %1067

1064:                                             ; preds = %1057
  %1065 = bitcast %union.anon* %1060 to i32*
  %1066 = icmp sgt i32 %909, 0
  br i1 %1066, label %1067, label %1167

1067:                                             ; preds = %1064, %1061
  %1068 = phi i32* [ %1063, %1061 ], [ %1065, %1064 ]
  %1069 = zext i32 %909 to i64
  %1070 = icmp ult i32 %909, 8
  br i1 %1070, label %1156, label %1071

1071:                                             ; preds = %1067
  %1072 = and i64 %1069, 4294967288
  %1073 = add nsw i64 %1072, -8
  %1074 = lshr exact i64 %1073, 3
  %1075 = add nuw nsw i64 %1074, 1
  %1076 = and i64 %1075, 3
  %1077 = icmp ult i64 %1073, 24
  br i1 %1077, label %1123, label %1078

1078:                                             ; preds = %1071
  %1079 = sub nsw i64 %1075, %1076
  br label %1080

1080:                                             ; preds = %1080, %1078
  %1081 = phi i64 [ 0, %1078 ], [ %1120, %1080 ]
  %1082 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1078 ], [ %1118, %1080 ]
  %1083 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1078 ], [ %1119, %1080 ]
  %1084 = phi i64 [ %1079, %1078 ], [ %1121, %1080 ]
  %1085 = getelementptr inbounds i32, i32* %1068, i64 %1081
  %1086 = bitcast i32* %1085 to <4 x i32>*
  %1087 = load <4 x i32>, <4 x i32>* %1086, align 4
  %1088 = getelementptr inbounds i32, i32* %1085, i64 4
  %1089 = bitcast i32* %1088 to <4 x i32>*
  %1090 = load <4 x i32>, <4 x i32>* %1089, align 4
  %1091 = mul nsw <4 x i32> %1087, %1082
  %1092 = mul nsw <4 x i32> %1090, %1083
  %1093 = or i64 %1081, 8
  %1094 = getelementptr inbounds i32, i32* %1068, i64 %1093
  %1095 = bitcast i32* %1094 to <4 x i32>*
  %1096 = load <4 x i32>, <4 x i32>* %1095, align 4
  %1097 = getelementptr inbounds i32, i32* %1094, i64 4
  %1098 = bitcast i32* %1097 to <4 x i32>*
  %1099 = load <4 x i32>, <4 x i32>* %1098, align 4
  %1100 = mul nsw <4 x i32> %1096, %1091
  %1101 = mul nsw <4 x i32> %1099, %1092
  %1102 = or i64 %1081, 16
  %1103 = getelementptr inbounds i32, i32* %1068, i64 %1102
  %1104 = bitcast i32* %1103 to <4 x i32>*
  %1105 = load <4 x i32>, <4 x i32>* %1104, align 4
  %1106 = getelementptr inbounds i32, i32* %1103, i64 4
  %1107 = bitcast i32* %1106 to <4 x i32>*
  %1108 = load <4 x i32>, <4 x i32>* %1107, align 4
  %1109 = mul nsw <4 x i32> %1105, %1100
  %1110 = mul nsw <4 x i32> %1108, %1101
  %1111 = or i64 %1081, 24
  %1112 = getelementptr inbounds i32, i32* %1068, i64 %1111
  %1113 = bitcast i32* %1112 to <4 x i32>*
  %1114 = load <4 x i32>, <4 x i32>* %1113, align 4
  %1115 = getelementptr inbounds i32, i32* %1112, i64 4
  %1116 = bitcast i32* %1115 to <4 x i32>*
  %1117 = load <4 x i32>, <4 x i32>* %1116, align 4
  %1118 = mul nsw <4 x i32> %1114, %1109
  %1119 = mul nsw <4 x i32> %1117, %1110
  %1120 = add i64 %1081, 32
  %1121 = add i64 %1084, -4
  %1122 = icmp eq i64 %1121, 0
  br i1 %1122, label %1123, label %1080, !llvm.loop !54

1123:                                             ; preds = %1080, %1071
  %1124 = phi <4 x i32> [ undef, %1071 ], [ %1118, %1080 ]
  %1125 = phi <4 x i32> [ undef, %1071 ], [ %1119, %1080 ]
  %1126 = phi i64 [ 0, %1071 ], [ %1120, %1080 ]
  %1127 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1071 ], [ %1118, %1080 ]
  %1128 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1071 ], [ %1119, %1080 ]
  %1129 = icmp eq i64 %1076, 0
  br i1 %1129, label %1146, label %1130

1130:                                             ; preds = %1123, %1130
  %1131 = phi i64 [ %1143, %1130 ], [ %1126, %1123 ]
  %1132 = phi <4 x i32> [ %1141, %1130 ], [ %1127, %1123 ]
  %1133 = phi <4 x i32> [ %1142, %1130 ], [ %1128, %1123 ]
  %1134 = phi i64 [ %1144, %1130 ], [ %1076, %1123 ]
  %1135 = getelementptr inbounds i32, i32* %1068, i64 %1131
  %1136 = bitcast i32* %1135 to <4 x i32>*
  %1137 = load <4 x i32>, <4 x i32>* %1136, align 4
  %1138 = getelementptr inbounds i32, i32* %1135, i64 4
  %1139 = bitcast i32* %1138 to <4 x i32>*
  %1140 = load <4 x i32>, <4 x i32>* %1139, align 4
  %1141 = mul nsw <4 x i32> %1137, %1132
  %1142 = mul nsw <4 x i32> %1140, %1133
  %1143 = add i64 %1131, 8
  %1144 = add i64 %1134, -1
  %1145 = icmp eq i64 %1144, 0
  br i1 %1145, label %1146, label %1130, !llvm.loop !55

1146:                                             ; preds = %1130, %1123
  %1147 = phi <4 x i32> [ %1124, %1123 ], [ %1141, %1130 ]
  %1148 = phi <4 x i32> [ %1125, %1123 ], [ %1142, %1130 ]
  %1149 = mul <4 x i32> %1148, %1147
  %1150 = shufflevector <4 x i32> %1149, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1151 = mul <4 x i32> %1149, %1150
  %1152 = shufflevector <4 x i32> %1151, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1153 = mul <4 x i32> %1151, %1152
  %1154 = extractelement <4 x i32> %1153, i32 0
  %1155 = icmp eq i64 %1072, %1069
  br i1 %1155, label %1167, label %1156

1156:                                             ; preds = %1146, %1067
  %1157 = phi i64 [ 0, %1067 ], [ %1072, %1146 ]
  %1158 = phi i32 [ 1, %1067 ], [ %1154, %1146 ]
  br label %1159

1159:                                             ; preds = %1156, %1159
  %1160 = phi i64 [ %1165, %1159 ], [ %1157, %1156 ]
  %1161 = phi i32 [ %1164, %1159 ], [ %1158, %1156 ]
  %1162 = getelementptr inbounds i32, i32* %1068, i64 %1160
  %1163 = load i32, i32* %1162, align 4
  %1164 = mul nsw i32 %1163, %1161
  %1165 = add nuw nsw i64 %1160, 1
  %1166 = icmp eq i64 %1165, %1069
  br i1 %1166, label %1167, label %1159, !llvm.loop !56

1167:                                             ; preds = %1159, %1146, %1064
  %1168 = phi i32 [ 1, %1064 ], [ %1154, %1146 ], [ %1164, %1159 ]
  %1169 = icmp sgt i32 %946, 5
  %1170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1169, label %1171, label %1174

1171:                                             ; preds = %1167
  %1172 = getelementptr inbounds %union.anon, %union.anon* %1170, i64 0, i32 0
  %1173 = load i32*, i32** %1172, align 8
  br label %1177

1174:                                             ; preds = %1167
  %1175 = bitcast %union.anon* %1170 to i32*
  %1176 = icmp sgt i32 %946, 0
  br i1 %1176, label %1177, label %1277

1177:                                             ; preds = %1174, %1171
  %1178 = phi i32* [ %1173, %1171 ], [ %1175, %1174 ]
  %1179 = zext i32 %946 to i64
  %1180 = icmp ult i32 %946, 8
  br i1 %1180, label %1266, label %1181

1181:                                             ; preds = %1177
  %1182 = and i64 %1179, 4294967288
  %1183 = add nsw i64 %1182, -8
  %1184 = lshr exact i64 %1183, 3
  %1185 = add nuw nsw i64 %1184, 1
  %1186 = and i64 %1185, 3
  %1187 = icmp ult i64 %1183, 24
  br i1 %1187, label %1233, label %1188

1188:                                             ; preds = %1181
  %1189 = sub nsw i64 %1185, %1186
  br label %1190

1190:                                             ; preds = %1190, %1188
  %1191 = phi i64 [ 0, %1188 ], [ %1230, %1190 ]
  %1192 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1188 ], [ %1228, %1190 ]
  %1193 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1188 ], [ %1229, %1190 ]
  %1194 = phi i64 [ %1189, %1188 ], [ %1231, %1190 ]
  %1195 = getelementptr inbounds i32, i32* %1178, i64 %1191
  %1196 = bitcast i32* %1195 to <4 x i32>*
  %1197 = load <4 x i32>, <4 x i32>* %1196, align 4
  %1198 = getelementptr inbounds i32, i32* %1195, i64 4
  %1199 = bitcast i32* %1198 to <4 x i32>*
  %1200 = load <4 x i32>, <4 x i32>* %1199, align 4
  %1201 = mul nsw <4 x i32> %1197, %1192
  %1202 = mul nsw <4 x i32> %1200, %1193
  %1203 = or i64 %1191, 8
  %1204 = getelementptr inbounds i32, i32* %1178, i64 %1203
  %1205 = bitcast i32* %1204 to <4 x i32>*
  %1206 = load <4 x i32>, <4 x i32>* %1205, align 4
  %1207 = getelementptr inbounds i32, i32* %1204, i64 4
  %1208 = bitcast i32* %1207 to <4 x i32>*
  %1209 = load <4 x i32>, <4 x i32>* %1208, align 4
  %1210 = mul nsw <4 x i32> %1206, %1201
  %1211 = mul nsw <4 x i32> %1209, %1202
  %1212 = or i64 %1191, 16
  %1213 = getelementptr inbounds i32, i32* %1178, i64 %1212
  %1214 = bitcast i32* %1213 to <4 x i32>*
  %1215 = load <4 x i32>, <4 x i32>* %1214, align 4
  %1216 = getelementptr inbounds i32, i32* %1213, i64 4
  %1217 = bitcast i32* %1216 to <4 x i32>*
  %1218 = load <4 x i32>, <4 x i32>* %1217, align 4
  %1219 = mul nsw <4 x i32> %1215, %1210
  %1220 = mul nsw <4 x i32> %1218, %1211
  %1221 = or i64 %1191, 24
  %1222 = getelementptr inbounds i32, i32* %1178, i64 %1221
  %1223 = bitcast i32* %1222 to <4 x i32>*
  %1224 = load <4 x i32>, <4 x i32>* %1223, align 4
  %1225 = getelementptr inbounds i32, i32* %1222, i64 4
  %1226 = bitcast i32* %1225 to <4 x i32>*
  %1227 = load <4 x i32>, <4 x i32>* %1226, align 4
  %1228 = mul nsw <4 x i32> %1224, %1219
  %1229 = mul nsw <4 x i32> %1227, %1220
  %1230 = add i64 %1191, 32
  %1231 = add i64 %1194, -4
  %1232 = icmp eq i64 %1231, 0
  br i1 %1232, label %1233, label %1190, !llvm.loop !57

1233:                                             ; preds = %1190, %1181
  %1234 = phi <4 x i32> [ undef, %1181 ], [ %1228, %1190 ]
  %1235 = phi <4 x i32> [ undef, %1181 ], [ %1229, %1190 ]
  %1236 = phi i64 [ 0, %1181 ], [ %1230, %1190 ]
  %1237 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1181 ], [ %1228, %1190 ]
  %1238 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1181 ], [ %1229, %1190 ]
  %1239 = icmp eq i64 %1186, 0
  br i1 %1239, label %1256, label %1240

1240:                                             ; preds = %1233, %1240
  %1241 = phi i64 [ %1253, %1240 ], [ %1236, %1233 ]
  %1242 = phi <4 x i32> [ %1251, %1240 ], [ %1237, %1233 ]
  %1243 = phi <4 x i32> [ %1252, %1240 ], [ %1238, %1233 ]
  %1244 = phi i64 [ %1254, %1240 ], [ %1186, %1233 ]
  %1245 = getelementptr inbounds i32, i32* %1178, i64 %1241
  %1246 = bitcast i32* %1245 to <4 x i32>*
  %1247 = load <4 x i32>, <4 x i32>* %1246, align 4
  %1248 = getelementptr inbounds i32, i32* %1245, i64 4
  %1249 = bitcast i32* %1248 to <4 x i32>*
  %1250 = load <4 x i32>, <4 x i32>* %1249, align 4
  %1251 = mul nsw <4 x i32> %1247, %1242
  %1252 = mul nsw <4 x i32> %1250, %1243
  %1253 = add i64 %1241, 8
  %1254 = add i64 %1244, -1
  %1255 = icmp eq i64 %1254, 0
  br i1 %1255, label %1256, label %1240, !llvm.loop !58

1256:                                             ; preds = %1240, %1233
  %1257 = phi <4 x i32> [ %1234, %1233 ], [ %1251, %1240 ]
  %1258 = phi <4 x i32> [ %1235, %1233 ], [ %1252, %1240 ]
  %1259 = mul <4 x i32> %1258, %1257
  %1260 = shufflevector <4 x i32> %1259, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1261 = mul <4 x i32> %1259, %1260
  %1262 = shufflevector <4 x i32> %1261, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1263 = mul <4 x i32> %1261, %1262
  %1264 = extractelement <4 x i32> %1263, i32 0
  %1265 = icmp eq i64 %1182, %1179
  br i1 %1265, label %1277, label %1266

1266:                                             ; preds = %1256, %1177
  %1267 = phi i64 [ 0, %1177 ], [ %1182, %1256 ]
  %1268 = phi i32 [ 1, %1177 ], [ %1264, %1256 ]
  br label %1269

1269:                                             ; preds = %1266, %1269
  %1270 = phi i64 [ %1275, %1269 ], [ %1267, %1266 ]
  %1271 = phi i32 [ %1274, %1269 ], [ %1268, %1266 ]
  %1272 = getelementptr inbounds i32, i32* %1178, i64 %1270
  %1273 = load i32, i32* %1272, align 4
  %1274 = mul nsw i32 %1273, %1271
  %1275 = add nuw nsw i64 %1270, 1
  %1276 = icmp eq i64 %1275, %1179
  br i1 %1276, label %1277, label %1269, !llvm.loop !59

1277:                                             ; preds = %1269, %1256, %1174
  %1278 = phi i32 [ 1, %1174 ], [ %1264, %1256 ], [ %1274, %1269 ]
  %1279 = icmp eq i32 %1058, %1168
  br i1 %1279, label %1281, label %1280

1280:                                             ; preds = %1277
  tail call void @abort() #13
  unreachable

1281:                                             ; preds = %1277
  %1282 = icmp eq i32 %1058, %1278
  br i1 %1282, label %1283, label %1388

1283:                                             ; preds = %1281
  %1284 = icmp sgt i32 %1058, 0
  br i1 %1284, label %1285, label %1414

1285:                                             ; preds = %1283
  %1286 = zext i32 %1058 to i64
  %1287 = icmp ult i32 %1058, 4
  br i1 %1287, label %1288, label %1309

1288:                                             ; preds = %1386, %1309, %1285
  %1289 = phi i64 [ 0, %1309 ], [ 0, %1285 ], [ %1324, %1386 ]
  %1290 = xor i64 %1289, -1
  %1291 = and i64 %1286, 1
  %1292 = icmp eq i64 %1291, 0
  br i1 %1292, label %1305, label %1293

1293:                                             ; preds = %1288
  %1294 = getelementptr inbounds float, float* %874, i64 %1289
  %1295 = load float, float* %1294, align 4
  %1296 = getelementptr inbounds float, float* %911, i64 %1289
  %1297 = load float, float* %1296, align 4
  %1298 = fdiv float %1295, %1297
  %1299 = fcmp olt float %1298, %836
  %1300 = select i1 %1299, float %836, float %1298
  %1301 = fcmp ogt float %1300, %837
  %1302 = select i1 %1301, float %837, float %1300
  %1303 = getelementptr inbounds float, float* %948, i64 %1289
  store float %1302, float* %1303, align 4
  %1304 = or i64 %1289, 1
  br label %1305

1305:                                             ; preds = %1288, %1293
  %1306 = phi i64 [ %1289, %1288 ], [ %1304, %1293 ]
  %1307 = sub nsw i64 0, %1286
  %1308 = icmp eq i64 %1290, %1307
  br i1 %1308, label %1414, label %1389

1309:                                             ; preds = %1285
  %1310 = getelementptr float, float* %948, i64 %1286
  %1311 = bitcast float* %1310 to i8*
  %1312 = getelementptr float, float* %874, i64 %1286
  %1313 = bitcast float* %1312 to i8*
  %1314 = getelementptr float, float* %911, i64 %1286
  %1315 = bitcast float* %1314 to i8*
  %1316 = icmp ult i8* %947, %1313
  %1317 = icmp ult i8* %873, %1311
  %1318 = and i1 %1316, %1317
  %1319 = icmp ult i8* %947, %1315
  %1320 = icmp ult i8* %910, %1311
  %1321 = and i1 %1319, %1320
  %1322 = or i1 %1318, %1321
  br i1 %1322, label %1288, label %1323

1323:                                             ; preds = %1309
  %1324 = and i64 %1286, 4294967292
  %1325 = insertelement <4 x float> undef, float %836, i32 0
  %1326 = shufflevector <4 x float> %1325, <4 x float> undef, <4 x i32> zeroinitializer
  %1327 = insertelement <4 x float> undef, float %837, i32 0
  %1328 = shufflevector <4 x float> %1327, <4 x float> undef, <4 x i32> zeroinitializer
  %1329 = add nsw i64 %1324, -4
  %1330 = lshr exact i64 %1329, 2
  %1331 = add nuw nsw i64 %1330, 1
  %1332 = and i64 %1331, 1
  %1333 = icmp eq i64 %1329, 0
  br i1 %1333, label %1369, label %1334

1334:                                             ; preds = %1323
  %1335 = sub nuw nsw i64 %1331, %1332
  br label %1336

1336:                                             ; preds = %1336, %1334
  %1337 = phi i64 [ 0, %1334 ], [ %1366, %1336 ]
  %1338 = phi i64 [ %1335, %1334 ], [ %1367, %1336 ]
  %1339 = getelementptr inbounds float, float* %874, i64 %1337
  %1340 = bitcast float* %1339 to <4 x float>*
  %1341 = load <4 x float>, <4 x float>* %1340, align 4, !alias.scope !60
  %1342 = getelementptr inbounds float, float* %911, i64 %1337
  %1343 = bitcast float* %1342 to <4 x float>*
  %1344 = load <4 x float>, <4 x float>* %1343, align 4, !alias.scope !63
  %1345 = fdiv <4 x float> %1341, %1344
  %1346 = fcmp olt <4 x float> %1345, %1326
  %1347 = select <4 x i1> %1346, <4 x float> %1326, <4 x float> %1345
  %1348 = fcmp ogt <4 x float> %1347, %1328
  %1349 = select <4 x i1> %1348, <4 x float> %1328, <4 x float> %1347
  %1350 = getelementptr inbounds float, float* %948, i64 %1337
  %1351 = bitcast float* %1350 to <4 x float>*
  store <4 x float> %1349, <4 x float>* %1351, align 4, !alias.scope !65, !noalias !67
  %1352 = or i64 %1337, 4
  %1353 = getelementptr inbounds float, float* %874, i64 %1352
  %1354 = bitcast float* %1353 to <4 x float>*
  %1355 = load <4 x float>, <4 x float>* %1354, align 4, !alias.scope !60
  %1356 = getelementptr inbounds float, float* %911, i64 %1352
  %1357 = bitcast float* %1356 to <4 x float>*
  %1358 = load <4 x float>, <4 x float>* %1357, align 4, !alias.scope !63
  %1359 = fdiv <4 x float> %1355, %1358
  %1360 = fcmp olt <4 x float> %1359, %1326
  %1361 = select <4 x i1> %1360, <4 x float> %1326, <4 x float> %1359
  %1362 = fcmp ogt <4 x float> %1361, %1328
  %1363 = select <4 x i1> %1362, <4 x float> %1328, <4 x float> %1361
  %1364 = getelementptr inbounds float, float* %948, i64 %1352
  %1365 = bitcast float* %1364 to <4 x float>*
  store <4 x float> %1363, <4 x float>* %1365, align 4, !alias.scope !65, !noalias !67
  %1366 = add i64 %1337, 8
  %1367 = add i64 %1338, -2
  %1368 = icmp eq i64 %1367, 0
  br i1 %1368, label %1369, label %1336, !llvm.loop !68

1369:                                             ; preds = %1336, %1323
  %1370 = phi i64 [ 0, %1323 ], [ %1366, %1336 ]
  %1371 = icmp eq i64 %1332, 0
  br i1 %1371, label %1386, label %1372

1372:                                             ; preds = %1369
  %1373 = getelementptr inbounds float, float* %874, i64 %1370
  %1374 = bitcast float* %1373 to <4 x float>*
  %1375 = load <4 x float>, <4 x float>* %1374, align 4, !alias.scope !60
  %1376 = getelementptr inbounds float, float* %911, i64 %1370
  %1377 = bitcast float* %1376 to <4 x float>*
  %1378 = load <4 x float>, <4 x float>* %1377, align 4, !alias.scope !63
  %1379 = fdiv <4 x float> %1375, %1378
  %1380 = fcmp olt <4 x float> %1379, %1326
  %1381 = select <4 x i1> %1380, <4 x float> %1326, <4 x float> %1379
  %1382 = fcmp ogt <4 x float> %1381, %1328
  %1383 = select <4 x i1> %1382, <4 x float> %1328, <4 x float> %1381
  %1384 = getelementptr inbounds float, float* %948, i64 %1370
  %1385 = bitcast float* %1384 to <4 x float>*
  store <4 x float> %1383, <4 x float>* %1385, align 4, !alias.scope !65, !noalias !67
  br label %1386

1386:                                             ; preds = %1369, %1372
  %1387 = icmp eq i64 %1324, %1286
  br i1 %1387, label %1414, label %1288

1388:                                             ; preds = %1281
  tail call void @abort() #13
  unreachable

1389:                                             ; preds = %1305, %1389
  %1390 = phi i64 [ %1412, %1389 ], [ %1306, %1305 ]
  %1391 = getelementptr inbounds float, float* %874, i64 %1390
  %1392 = load float, float* %1391, align 4
  %1393 = getelementptr inbounds float, float* %911, i64 %1390
  %1394 = load float, float* %1393, align 4
  %1395 = fdiv float %1392, %1394
  %1396 = fcmp olt float %1395, %836
  %1397 = select i1 %1396, float %836, float %1395
  %1398 = fcmp ogt float %1397, %837
  %1399 = select i1 %1398, float %837, float %1397
  %1400 = getelementptr inbounds float, float* %948, i64 %1390
  store float %1399, float* %1400, align 4
  %1401 = add nuw nsw i64 %1390, 1
  %1402 = getelementptr inbounds float, float* %874, i64 %1401
  %1403 = load float, float* %1402, align 4
  %1404 = getelementptr inbounds float, float* %911, i64 %1401
  %1405 = load float, float* %1404, align 4
  %1406 = fdiv float %1403, %1405
  %1407 = fcmp olt float %1406, %836
  %1408 = select i1 %1407, float %836, float %1406
  %1409 = fcmp ogt float %1408, %837
  %1410 = select i1 %1409, float %837, float %1408
  %1411 = getelementptr inbounds float, float* %948, i64 %1401
  store float %1410, float* %1411, align 4
  %1412 = add nuw nsw i64 %1390, 2
  %1413 = icmp eq i64 %1412, %1286
  br i1 %1413, label %1414, label %1389, !llvm.loop !69

1414:                                             ; preds = %1305, %1389, %1386, %1283
  br i1 %1169, label %1415, label %1421

1415:                                             ; preds = %1414
  %1416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1417 = load i32*, i32** %1416, align 8
  %1418 = icmp eq i32* %1417, null
  br i1 %1418, label %1421, label %1419

1419:                                             ; preds = %1415
  %1420 = bitcast i32* %1417 to i8*
  tail call void @_ZdaPv(i8* %1420) #11
  br label %1421

1421:                                             ; preds = %1414, %1415, %1419
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %912) #12
  br i1 %1059, label %1422, label %1428

1422:                                             ; preds = %1421
  %1423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1424 = load i32*, i32** %1423, align 8
  %1425 = icmp eq i32* %1424, null
  br i1 %1425, label %1428, label %1426

1426:                                             ; preds = %1422
  %1427 = bitcast i32* %1424 to i8*
  tail call void @_ZdaPv(i8* %1427) #11
  br label %1428

1428:                                             ; preds = %1421, %1422, %1426
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %875) #12
  br i1 %949, label %1429, label %1435

1429:                                             ; preds = %1428
  %1430 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1431 = load i32*, i32** %1430, align 8
  %1432 = icmp eq i32* %1431, null
  br i1 %1432, label %1435, label %1433

1433:                                             ; preds = %1429
  %1434 = bitcast i32* %1431 to i8*
  tail call void @_ZdaPv(i8* %1434) #11
  br label %1435

1435:                                             ; preds = %1428, %1429, %1433
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %838) #12
  br label %1436

1436:                                             ; preds = %7, %1435, %822, %174, %668
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteDivParams*, %"struct.tflite::ops::builtin::div::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %726

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %726

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %726

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %31, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %33, i32* %35, align 4
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sub nsw i32 0, %37
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 0, %41
  %43 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 3
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 4
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 5
  store i32 %51, i32* %52, align 4
  %53 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #12
  %54 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !70
  br label %82

57:                                               ; preds = %28
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %59 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %58, align 8, !noalias !70
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4, !noalias !70
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 0
  %63 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %61, i32* %63, align 8, !alias.scope !70
  %64 = icmp sgt i32 %61, 5
  br i1 %64, label %65, label %72

65:                                               ; preds = %57
  %66 = sext i32 %61 to i64
  %67 = shl nsw i64 %66, 2
  %68 = tail call i8* @_Znam(i64 %67) #11, !noalias !70
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  store i8* %68, i8** %70, align 8, !alias.scope !70
  %71 = bitcast i8* %68 to i32*
  br label %77

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %74 = bitcast %union.anon* %73 to i32*
  %75 = sext i32 %61 to i64
  %76 = shl nsw i64 %75, 2
  br label %77

77:                                               ; preds = %72, %65
  %78 = phi i64 [ %67, %65 ], [ %76, %72 ]
  %79 = phi i32* [ %71, %65 ], [ %74, %72 ]
  %80 = bitcast i32* %79 to i8*
  %81 = bitcast i32* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %78, i1 false) #12
  br label %82

82:                                               ; preds = %55, %77
  %83 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #12
  %84 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %86, align 8, !alias.scope !73
  br label %112

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %89 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %88, align 8, !noalias !73
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !noalias !73
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 0
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %91, i32* %93, align 8, !alias.scope !73
  %94 = icmp sgt i32 %91, 5
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = sext i32 %91 to i64
  %97 = shl nsw i64 %96, 2
  %98 = tail call i8* @_Znam(i64 %97) #11, !noalias !73
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %100 = bitcast i32** %99 to i8**
  store i8* %98, i8** %100, align 8, !alias.scope !73
  %101 = bitcast i8* %98 to i32*
  br label %107

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i32*
  %105 = sext i32 %91 to i64
  %106 = shl nsw i64 %105, 2
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi i64 [ %97, %95 ], [ %106, %102 ]
  %109 = phi i32* [ %101, %95 ], [ %104, %102 ]
  %110 = bitcast i32* %109 to i8*
  %111 = bitcast i32* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %108, i1 false) #12
  br label %112

112:                                              ; preds = %85, %107
  %113 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = icmp sgt i32 %115, 5
  br i1 %116, label %117, label %123

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = icmp eq i32* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = bitcast i32* %119 to i8*
  call void @_ZdaPv(i8* %122) #11
  br label %123

123:                                              ; preds = %112, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #12
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp sgt i32 %125, 5
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = icmp eq i32* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = bitcast i32* %129 to i8*
  call void @_ZdaPv(i8* %132) #11
  br label %133

133:                                              ; preds = %123, %127, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12
  br i1 %113, label %134, label %264

134:                                              ; preds = %133
  %135 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #12
  br i1 %54, label %136, label %138

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %137, align 8, !alias.scope !76
  br label %166

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %140 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %139, align 8, !noalias !76
  %141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 4, !noalias !76
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 1, i64 0
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %142, i32* %144, align 8, !alias.scope !76
  %145 = icmp sgt i32 %142, 5
  br i1 %145, label %146, label %153

146:                                              ; preds = %138
  %147 = sext i32 %142 to i64
  %148 = shl nsw i64 %147, 2
  %149 = call i8* @_Znam(i64 %148) #11, !noalias !76
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %151 = bitcast i32** %150 to i8**
  store i8* %149, i8** %151, align 8, !alias.scope !76
  %152 = bitcast i8* %149 to i32*
  br label %158

153:                                              ; preds = %138
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %155 = bitcast %union.anon* %154 to i32*
  %156 = sext i32 %142 to i64
  %157 = shl nsw i64 %156, 2
  br label %158

158:                                              ; preds = %153, %146
  %159 = phi i64 [ %148, %146 ], [ %157, %153 ]
  %160 = phi i32* [ %152, %146 ], [ %155, %153 ]
  %161 = bitcast i32* %160 to i8*
  %162 = bitcast i32* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 %159, i1 false) #12
  %163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %164 = bitcast %union.TfLitePtrUnion* %163 to i8**
  %165 = load i8*, i8** %164, align 8
  br label %166

166:                                              ; preds = %136, %158
  %167 = phi i8* [ %165, %158 ], [ null, %136 ]
  %168 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #12
  br i1 %84, label %169, label %171

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %170, align 8, !alias.scope !79
  br label %199

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %173 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %172, align 8, !noalias !79
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !79
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %175, i32* %177, align 8, !alias.scope !79
  %178 = icmp sgt i32 %175, 5
  br i1 %178, label %179, label %186

179:                                              ; preds = %171
  %180 = sext i32 %175 to i64
  %181 = shl nsw i64 %180, 2
  %182 = call i8* @_Znam(i64 %181) #11, !noalias !79
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %184 = bitcast i32** %183 to i8**
  store i8* %182, i8** %184, align 8, !alias.scope !79
  %185 = bitcast i8* %182 to i32*
  br label %191

186:                                              ; preds = %171
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = sext i32 %175 to i64
  %190 = shl nsw i64 %189, 2
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %186 ]
  %193 = phi i32* [ %185, %179 ], [ %188, %186 ]
  %194 = bitcast i32* %193 to i8*
  %195 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 %192, i1 false) #12
  %196 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %197 = bitcast %union.TfLitePtrUnion* %196 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %169, %191
  %200 = phi i8* [ %198, %191 ], [ null, %169 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #12
  %202 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !82
  br label %233

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !82
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !82
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !82
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = call i8* @_Znam(i64 %215) #11, !noalias !82
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !82
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #12
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to i8**
  %232 = load i8*, i8** %231, align 8
  br label %233

233:                                              ; preds = %203, %225
  %234 = phi i8* [ %232, %225 ], [ null, %203 ]
  call void @_ZN6tflite13reference_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %167, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %200, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %234)
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = icmp sgt i32 %236, 5
  br i1 %237, label %238, label %244

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %240 = load i32*, i32** %239, align 8
  %241 = icmp eq i32* %240, null
  br i1 %241, label %244, label %242

242:                                              ; preds = %238
  %243 = bitcast i32* %240 to i8*
  call void @_ZdaPv(i8* %243) #11
  br label %244

244:                                              ; preds = %233, %238, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #12
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = icmp sgt i32 %246, 5
  br i1 %247, label %248, label %254

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = icmp eq i32* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %248
  %253 = bitcast i32* %250 to i8*
  call void @_ZdaPv(i8* %253) #11
  br label %254

254:                                              ; preds = %244, %248, %252
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #12
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp sgt i32 %256, 5
  br i1 %257, label %258, label %724

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = icmp eq i32* %260, null
  br i1 %261, label %724, label %262

262:                                              ; preds = %258
  %263 = bitcast i32* %260 to i8*
  call void @_ZdaPv(i8* %263) #11
  br label %724

264:                                              ; preds = %133
  %265 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %265) #12
  br i1 %54, label %266, label %268

266:                                              ; preds = %264
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %267, align 8, !alias.scope !85
  br label %296

268:                                              ; preds = %264
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %270 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %269, align 8, !noalias !85
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 0
  %272 = load i32, i32* %271, align 4, !noalias !85
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %272, i32* %274, align 8, !alias.scope !85
  %275 = icmp sgt i32 %272, 5
  br i1 %275, label %276, label %283

276:                                              ; preds = %268
  %277 = sext i32 %272 to i64
  %278 = shl nsw i64 %277, 2
  %279 = call i8* @_Znam(i64 %278) #11, !noalias !85
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %281 = bitcast i32** %280 to i8**
  store i8* %279, i8** %281, align 8, !alias.scope !85
  %282 = bitcast i8* %279 to i32*
  br label %288

283:                                              ; preds = %268
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %285 = bitcast %union.anon* %284 to i32*
  %286 = sext i32 %272 to i64
  %287 = shl nsw i64 %286, 2
  br label %288

288:                                              ; preds = %283, %276
  %289 = phi i64 [ %278, %276 ], [ %287, %283 ]
  %290 = phi i32* [ %282, %276 ], [ %285, %283 ]
  %291 = bitcast i32* %290 to i8*
  %292 = bitcast i32* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 4 %292, i64 %289, i1 false) #12
  %293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %294 = bitcast %union.TfLitePtrUnion* %293 to i8**
  %295 = load i8*, i8** %294, align 8
  br label %296

296:                                              ; preds = %266, %288
  %297 = phi i32 [ %272, %288 ], [ 0, %266 ]
  %298 = phi i8* [ %295, %288 ], [ null, %266 ]
  %299 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #12
  br i1 %84, label %300, label %302

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %301, align 8, !alias.scope !88
  br label %330

302:                                              ; preds = %296
  %303 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %304 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %303, align 8, !noalias !88
  %305 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 0
  %306 = load i32, i32* %305, align 4, !noalias !88
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 1, i64 0
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %306, i32* %308, align 8, !alias.scope !88
  %309 = icmp sgt i32 %306, 5
  br i1 %309, label %310, label %317

310:                                              ; preds = %302
  %311 = sext i32 %306 to i64
  %312 = shl nsw i64 %311, 2
  %313 = call i8* @_Znam(i64 %312) #11, !noalias !88
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %315 = bitcast i32** %314 to i8**
  store i8* %313, i8** %315, align 8, !alias.scope !88
  %316 = bitcast i8* %313 to i32*
  br label %322

317:                                              ; preds = %302
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %319 = bitcast %union.anon* %318 to i32*
  %320 = sext i32 %306 to i64
  %321 = shl nsw i64 %320, 2
  br label %322

322:                                              ; preds = %317, %310
  %323 = phi i64 [ %312, %310 ], [ %321, %317 ]
  %324 = phi i32* [ %316, %310 ], [ %319, %317 ]
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %323, i1 false) #12
  %327 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %328 = bitcast %union.TfLitePtrUnion* %327 to i8**
  %329 = load i8*, i8** %328, align 8
  br label %330

330:                                              ; preds = %300, %322
  %331 = phi i32 [ %306, %322 ], [ 0, %300 ]
  %332 = phi i8* [ %329, %322 ], [ null, %300 ]
  %333 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %333) #12
  %334 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %334, label %335, label %337

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %336, align 8, !alias.scope !91
  br label %365

337:                                              ; preds = %330
  %338 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %339 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %338, align 8, !noalias !91
  %340 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %339, i64 0, i32 0
  %341 = load i32, i32* %340, align 4, !noalias !91
  %342 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %339, i64 0, i32 1, i64 0
  %343 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %341, i32* %343, align 8, !alias.scope !91
  %344 = icmp sgt i32 %341, 5
  br i1 %344, label %345, label %352

345:                                              ; preds = %337
  %346 = sext i32 %341 to i64
  %347 = shl nsw i64 %346, 2
  %348 = call i8* @_Znam(i64 %347) #11, !noalias !91
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %350 = bitcast i32** %349 to i8**
  store i8* %348, i8** %350, align 8, !alias.scope !91
  %351 = bitcast i8* %348 to i32*
  br label %357

352:                                              ; preds = %337
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %354 = bitcast %union.anon* %353 to i32*
  %355 = sext i32 %341 to i64
  %356 = shl nsw i64 %355, 2
  br label %357

357:                                              ; preds = %352, %345
  %358 = phi i64 [ %347, %345 ], [ %356, %352 ]
  %359 = phi i32* [ %351, %345 ], [ %354, %352 ]
  %360 = bitcast i32* %359 to i8*
  %361 = bitcast i32* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %360, i8* align 4 %361, i64 %358, i1 false) #12
  %362 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %363 = bitcast %union.TfLitePtrUnion* %362 to i8**
  %364 = load i8*, i8** %363, align 8
  br label %365

365:                                              ; preds = %335, %357
  %366 = phi i32 [ %341, %357 ], [ 0, %335 ]
  %367 = phi i8* [ %364, %357 ], [ null, %335 ]
  %368 = icmp sgt i32 %297, 5
  %369 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %368, label %370, label %373

370:                                              ; preds = %365
  %371 = getelementptr inbounds %union.anon, %union.anon* %369, i64 0, i32 0
  %372 = load i32*, i32** %371, align 8
  br label %376

373:                                              ; preds = %365
  %374 = bitcast %union.anon* %369 to i32*
  %375 = icmp sgt i32 %297, 0
  br i1 %375, label %376, label %476

376:                                              ; preds = %373, %370
  %377 = phi i32* [ %372, %370 ], [ %374, %373 ]
  %378 = zext i32 %297 to i64
  %379 = icmp ult i32 %297, 8
  br i1 %379, label %465, label %380

380:                                              ; preds = %376
  %381 = and i64 %378, 4294967288
  %382 = add nsw i64 %381, -8
  %383 = lshr exact i64 %382, 3
  %384 = add nuw nsw i64 %383, 1
  %385 = and i64 %384, 3
  %386 = icmp ult i64 %382, 24
  br i1 %386, label %432, label %387

387:                                              ; preds = %380
  %388 = sub nsw i64 %384, %385
  br label %389

389:                                              ; preds = %389, %387
  %390 = phi i64 [ 0, %387 ], [ %429, %389 ]
  %391 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %427, %389 ]
  %392 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %428, %389 ]
  %393 = phi i64 [ %388, %387 ], [ %430, %389 ]
  %394 = getelementptr inbounds i32, i32* %377, i64 %390
  %395 = bitcast i32* %394 to <4 x i32>*
  %396 = load <4 x i32>, <4 x i32>* %395, align 4
  %397 = getelementptr inbounds i32, i32* %394, i64 4
  %398 = bitcast i32* %397 to <4 x i32>*
  %399 = load <4 x i32>, <4 x i32>* %398, align 4
  %400 = mul nsw <4 x i32> %396, %391
  %401 = mul nsw <4 x i32> %399, %392
  %402 = or i64 %390, 8
  %403 = getelementptr inbounds i32, i32* %377, i64 %402
  %404 = bitcast i32* %403 to <4 x i32>*
  %405 = load <4 x i32>, <4 x i32>* %404, align 4
  %406 = getelementptr inbounds i32, i32* %403, i64 4
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4
  %409 = mul nsw <4 x i32> %405, %400
  %410 = mul nsw <4 x i32> %408, %401
  %411 = or i64 %390, 16
  %412 = getelementptr inbounds i32, i32* %377, i64 %411
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4
  %415 = getelementptr inbounds i32, i32* %412, i64 4
  %416 = bitcast i32* %415 to <4 x i32>*
  %417 = load <4 x i32>, <4 x i32>* %416, align 4
  %418 = mul nsw <4 x i32> %414, %409
  %419 = mul nsw <4 x i32> %417, %410
  %420 = or i64 %390, 24
  %421 = getelementptr inbounds i32, i32* %377, i64 %420
  %422 = bitcast i32* %421 to <4 x i32>*
  %423 = load <4 x i32>, <4 x i32>* %422, align 4
  %424 = getelementptr inbounds i32, i32* %421, i64 4
  %425 = bitcast i32* %424 to <4 x i32>*
  %426 = load <4 x i32>, <4 x i32>* %425, align 4
  %427 = mul nsw <4 x i32> %423, %418
  %428 = mul nsw <4 x i32> %426, %419
  %429 = add i64 %390, 32
  %430 = add i64 %393, -4
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %389, !llvm.loop !94

432:                                              ; preds = %389, %380
  %433 = phi <4 x i32> [ undef, %380 ], [ %427, %389 ]
  %434 = phi <4 x i32> [ undef, %380 ], [ %428, %389 ]
  %435 = phi i64 [ 0, %380 ], [ %429, %389 ]
  %436 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %380 ], [ %427, %389 ]
  %437 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %380 ], [ %428, %389 ]
  %438 = icmp eq i64 %385, 0
  br i1 %438, label %455, label %439

439:                                              ; preds = %432, %439
  %440 = phi i64 [ %452, %439 ], [ %435, %432 ]
  %441 = phi <4 x i32> [ %450, %439 ], [ %436, %432 ]
  %442 = phi <4 x i32> [ %451, %439 ], [ %437, %432 ]
  %443 = phi i64 [ %453, %439 ], [ %385, %432 ]
  %444 = getelementptr inbounds i32, i32* %377, i64 %440
  %445 = bitcast i32* %444 to <4 x i32>*
  %446 = load <4 x i32>, <4 x i32>* %445, align 4
  %447 = getelementptr inbounds i32, i32* %444, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4
  %450 = mul nsw <4 x i32> %446, %441
  %451 = mul nsw <4 x i32> %449, %442
  %452 = add i64 %440, 8
  %453 = add i64 %443, -1
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %455, label %439, !llvm.loop !95

455:                                              ; preds = %439, %432
  %456 = phi <4 x i32> [ %433, %432 ], [ %450, %439 ]
  %457 = phi <4 x i32> [ %434, %432 ], [ %451, %439 ]
  %458 = mul <4 x i32> %457, %456
  %459 = shufflevector <4 x i32> %458, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %460 = mul <4 x i32> %458, %459
  %461 = shufflevector <4 x i32> %460, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %462 = mul <4 x i32> %460, %461
  %463 = extractelement <4 x i32> %462, i32 0
  %464 = icmp eq i64 %381, %378
  br i1 %464, label %476, label %465

465:                                              ; preds = %455, %376
  %466 = phi i64 [ 0, %376 ], [ %381, %455 ]
  %467 = phi i32 [ 1, %376 ], [ %463, %455 ]
  br label %468

468:                                              ; preds = %465, %468
  %469 = phi i64 [ %474, %468 ], [ %466, %465 ]
  %470 = phi i32 [ %473, %468 ], [ %467, %465 ]
  %471 = getelementptr inbounds i32, i32* %377, i64 %469
  %472 = load i32, i32* %471, align 4
  %473 = mul nsw i32 %472, %470
  %474 = add nuw nsw i64 %469, 1
  %475 = icmp eq i64 %474, %378
  br i1 %475, label %476, label %468, !llvm.loop !96

476:                                              ; preds = %468, %455, %373
  %477 = phi i32 [ 1, %373 ], [ %463, %455 ], [ %473, %468 ]
  %478 = icmp sgt i32 %331, 5
  %479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %478, label %480, label %483

480:                                              ; preds = %476
  %481 = getelementptr inbounds %union.anon, %union.anon* %479, i64 0, i32 0
  %482 = load i32*, i32** %481, align 8
  br label %486

483:                                              ; preds = %476
  %484 = bitcast %union.anon* %479 to i32*
  %485 = icmp sgt i32 %331, 0
  br i1 %485, label %486, label %586

486:                                              ; preds = %483, %480
  %487 = phi i32* [ %482, %480 ], [ %484, %483 ]
  %488 = zext i32 %331 to i64
  %489 = icmp ult i32 %331, 8
  br i1 %489, label %575, label %490

490:                                              ; preds = %486
  %491 = and i64 %488, 4294967288
  %492 = add nsw i64 %491, -8
  %493 = lshr exact i64 %492, 3
  %494 = add nuw nsw i64 %493, 1
  %495 = and i64 %494, 3
  %496 = icmp ult i64 %492, 24
  br i1 %496, label %542, label %497

497:                                              ; preds = %490
  %498 = sub nsw i64 %494, %495
  br label %499

499:                                              ; preds = %499, %497
  %500 = phi i64 [ 0, %497 ], [ %539, %499 ]
  %501 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %537, %499 ]
  %502 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %538, %499 ]
  %503 = phi i64 [ %498, %497 ], [ %540, %499 ]
  %504 = getelementptr inbounds i32, i32* %487, i64 %500
  %505 = bitcast i32* %504 to <4 x i32>*
  %506 = load <4 x i32>, <4 x i32>* %505, align 4
  %507 = getelementptr inbounds i32, i32* %504, i64 4
  %508 = bitcast i32* %507 to <4 x i32>*
  %509 = load <4 x i32>, <4 x i32>* %508, align 4
  %510 = mul nsw <4 x i32> %506, %501
  %511 = mul nsw <4 x i32> %509, %502
  %512 = or i64 %500, 8
  %513 = getelementptr inbounds i32, i32* %487, i64 %512
  %514 = bitcast i32* %513 to <4 x i32>*
  %515 = load <4 x i32>, <4 x i32>* %514, align 4
  %516 = getelementptr inbounds i32, i32* %513, i64 4
  %517 = bitcast i32* %516 to <4 x i32>*
  %518 = load <4 x i32>, <4 x i32>* %517, align 4
  %519 = mul nsw <4 x i32> %515, %510
  %520 = mul nsw <4 x i32> %518, %511
  %521 = or i64 %500, 16
  %522 = getelementptr inbounds i32, i32* %487, i64 %521
  %523 = bitcast i32* %522 to <4 x i32>*
  %524 = load <4 x i32>, <4 x i32>* %523, align 4
  %525 = getelementptr inbounds i32, i32* %522, i64 4
  %526 = bitcast i32* %525 to <4 x i32>*
  %527 = load <4 x i32>, <4 x i32>* %526, align 4
  %528 = mul nsw <4 x i32> %524, %519
  %529 = mul nsw <4 x i32> %527, %520
  %530 = or i64 %500, 24
  %531 = getelementptr inbounds i32, i32* %487, i64 %530
  %532 = bitcast i32* %531 to <4 x i32>*
  %533 = load <4 x i32>, <4 x i32>* %532, align 4
  %534 = getelementptr inbounds i32, i32* %531, i64 4
  %535 = bitcast i32* %534 to <4 x i32>*
  %536 = load <4 x i32>, <4 x i32>* %535, align 4
  %537 = mul nsw <4 x i32> %533, %528
  %538 = mul nsw <4 x i32> %536, %529
  %539 = add i64 %500, 32
  %540 = add i64 %503, -4
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %542, label %499, !llvm.loop !97

542:                                              ; preds = %499, %490
  %543 = phi <4 x i32> [ undef, %490 ], [ %537, %499 ]
  %544 = phi <4 x i32> [ undef, %490 ], [ %538, %499 ]
  %545 = phi i64 [ 0, %490 ], [ %539, %499 ]
  %546 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %490 ], [ %537, %499 ]
  %547 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %490 ], [ %538, %499 ]
  %548 = icmp eq i64 %495, 0
  br i1 %548, label %565, label %549

549:                                              ; preds = %542, %549
  %550 = phi i64 [ %562, %549 ], [ %545, %542 ]
  %551 = phi <4 x i32> [ %560, %549 ], [ %546, %542 ]
  %552 = phi <4 x i32> [ %561, %549 ], [ %547, %542 ]
  %553 = phi i64 [ %563, %549 ], [ %495, %542 ]
  %554 = getelementptr inbounds i32, i32* %487, i64 %550
  %555 = bitcast i32* %554 to <4 x i32>*
  %556 = load <4 x i32>, <4 x i32>* %555, align 4
  %557 = getelementptr inbounds i32, i32* %554, i64 4
  %558 = bitcast i32* %557 to <4 x i32>*
  %559 = load <4 x i32>, <4 x i32>* %558, align 4
  %560 = mul nsw <4 x i32> %556, %551
  %561 = mul nsw <4 x i32> %559, %552
  %562 = add i64 %550, 8
  %563 = add i64 %553, -1
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %565, label %549, !llvm.loop !98

565:                                              ; preds = %549, %542
  %566 = phi <4 x i32> [ %543, %542 ], [ %560, %549 ]
  %567 = phi <4 x i32> [ %544, %542 ], [ %561, %549 ]
  %568 = mul <4 x i32> %567, %566
  %569 = shufflevector <4 x i32> %568, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %570 = mul <4 x i32> %568, %569
  %571 = shufflevector <4 x i32> %570, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %572 = mul <4 x i32> %570, %571
  %573 = extractelement <4 x i32> %572, i32 0
  %574 = icmp eq i64 %491, %488
  br i1 %574, label %586, label %575

575:                                              ; preds = %565, %486
  %576 = phi i64 [ 0, %486 ], [ %491, %565 ]
  %577 = phi i32 [ 1, %486 ], [ %573, %565 ]
  br label %578

578:                                              ; preds = %575, %578
  %579 = phi i64 [ %584, %578 ], [ %576, %575 ]
  %580 = phi i32 [ %583, %578 ], [ %577, %575 ]
  %581 = getelementptr inbounds i32, i32* %487, i64 %579
  %582 = load i32, i32* %581, align 4
  %583 = mul nsw i32 %582, %580
  %584 = add nuw nsw i64 %579, 1
  %585 = icmp eq i64 %584, %488
  br i1 %585, label %586, label %578, !llvm.loop !99

586:                                              ; preds = %578, %565, %483
  %587 = phi i32 [ 1, %483 ], [ %573, %565 ], [ %583, %578 ]
  %588 = icmp sgt i32 %366, 5
  %589 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %588, label %590, label %593

590:                                              ; preds = %586
  %591 = getelementptr inbounds %union.anon, %union.anon* %589, i64 0, i32 0
  %592 = load i32*, i32** %591, align 8
  br label %596

593:                                              ; preds = %586
  %594 = bitcast %union.anon* %589 to i32*
  %595 = icmp sgt i32 %366, 0
  br i1 %595, label %596, label %696

596:                                              ; preds = %593, %590
  %597 = phi i32* [ %592, %590 ], [ %594, %593 ]
  %598 = zext i32 %366 to i64
  %599 = icmp ult i32 %366, 8
  br i1 %599, label %685, label %600

600:                                              ; preds = %596
  %601 = and i64 %598, 4294967288
  %602 = add nsw i64 %601, -8
  %603 = lshr exact i64 %602, 3
  %604 = add nuw nsw i64 %603, 1
  %605 = and i64 %604, 3
  %606 = icmp ult i64 %602, 24
  br i1 %606, label %652, label %607

607:                                              ; preds = %600
  %608 = sub nsw i64 %604, %605
  br label %609

609:                                              ; preds = %609, %607
  %610 = phi i64 [ 0, %607 ], [ %649, %609 ]
  %611 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %607 ], [ %647, %609 ]
  %612 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %607 ], [ %648, %609 ]
  %613 = phi i64 [ %608, %607 ], [ %650, %609 ]
  %614 = getelementptr inbounds i32, i32* %597, i64 %610
  %615 = bitcast i32* %614 to <4 x i32>*
  %616 = load <4 x i32>, <4 x i32>* %615, align 4
  %617 = getelementptr inbounds i32, i32* %614, i64 4
  %618 = bitcast i32* %617 to <4 x i32>*
  %619 = load <4 x i32>, <4 x i32>* %618, align 4
  %620 = mul nsw <4 x i32> %616, %611
  %621 = mul nsw <4 x i32> %619, %612
  %622 = or i64 %610, 8
  %623 = getelementptr inbounds i32, i32* %597, i64 %622
  %624 = bitcast i32* %623 to <4 x i32>*
  %625 = load <4 x i32>, <4 x i32>* %624, align 4
  %626 = getelementptr inbounds i32, i32* %623, i64 4
  %627 = bitcast i32* %626 to <4 x i32>*
  %628 = load <4 x i32>, <4 x i32>* %627, align 4
  %629 = mul nsw <4 x i32> %625, %620
  %630 = mul nsw <4 x i32> %628, %621
  %631 = or i64 %610, 16
  %632 = getelementptr inbounds i32, i32* %597, i64 %631
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4
  %635 = getelementptr inbounds i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4
  %638 = mul nsw <4 x i32> %634, %629
  %639 = mul nsw <4 x i32> %637, %630
  %640 = or i64 %610, 24
  %641 = getelementptr inbounds i32, i32* %597, i64 %640
  %642 = bitcast i32* %641 to <4 x i32>*
  %643 = load <4 x i32>, <4 x i32>* %642, align 4
  %644 = getelementptr inbounds i32, i32* %641, i64 4
  %645 = bitcast i32* %644 to <4 x i32>*
  %646 = load <4 x i32>, <4 x i32>* %645, align 4
  %647 = mul nsw <4 x i32> %643, %638
  %648 = mul nsw <4 x i32> %646, %639
  %649 = add i64 %610, 32
  %650 = add i64 %613, -4
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %609, !llvm.loop !100

652:                                              ; preds = %609, %600
  %653 = phi <4 x i32> [ undef, %600 ], [ %647, %609 ]
  %654 = phi <4 x i32> [ undef, %600 ], [ %648, %609 ]
  %655 = phi i64 [ 0, %600 ], [ %649, %609 ]
  %656 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %600 ], [ %647, %609 ]
  %657 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %600 ], [ %648, %609 ]
  %658 = icmp eq i64 %605, 0
  br i1 %658, label %675, label %659

659:                                              ; preds = %652, %659
  %660 = phi i64 [ %672, %659 ], [ %655, %652 ]
  %661 = phi <4 x i32> [ %670, %659 ], [ %656, %652 ]
  %662 = phi <4 x i32> [ %671, %659 ], [ %657, %652 ]
  %663 = phi i64 [ %673, %659 ], [ %605, %652 ]
  %664 = getelementptr inbounds i32, i32* %597, i64 %660
  %665 = bitcast i32* %664 to <4 x i32>*
  %666 = load <4 x i32>, <4 x i32>* %665, align 4
  %667 = getelementptr inbounds i32, i32* %664, i64 4
  %668 = bitcast i32* %667 to <4 x i32>*
  %669 = load <4 x i32>, <4 x i32>* %668, align 4
  %670 = mul nsw <4 x i32> %666, %661
  %671 = mul nsw <4 x i32> %669, %662
  %672 = add i64 %660, 8
  %673 = add i64 %663, -1
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %675, label %659, !llvm.loop !101

675:                                              ; preds = %659, %652
  %676 = phi <4 x i32> [ %653, %652 ], [ %670, %659 ]
  %677 = phi <4 x i32> [ %654, %652 ], [ %671, %659 ]
  %678 = mul <4 x i32> %677, %676
  %679 = shufflevector <4 x i32> %678, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %680 = mul <4 x i32> %678, %679
  %681 = shufflevector <4 x i32> %680, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %682 = mul <4 x i32> %680, %681
  %683 = extractelement <4 x i32> %682, i32 0
  %684 = icmp eq i64 %601, %598
  br i1 %684, label %696, label %685

685:                                              ; preds = %675, %596
  %686 = phi i64 [ 0, %596 ], [ %601, %675 ]
  %687 = phi i32 [ 1, %596 ], [ %683, %675 ]
  br label %688

688:                                              ; preds = %685, %688
  %689 = phi i64 [ %694, %688 ], [ %686, %685 ]
  %690 = phi i32 [ %693, %688 ], [ %687, %685 ]
  %691 = getelementptr inbounds i32, i32* %597, i64 %689
  %692 = load i32, i32* %691, align 4
  %693 = mul nsw i32 %692, %690
  %694 = add nuw nsw i64 %689, 1
  %695 = icmp eq i64 %694, %598
  br i1 %695, label %696, label %688, !llvm.loop !102

696:                                              ; preds = %688, %675, %593
  %697 = phi i32 [ 1, %593 ], [ %683, %675 ], [ %693, %688 ]
  %698 = icmp eq i32 %477, %587
  br i1 %698, label %700, label %699

699:                                              ; preds = %696
  call void @abort() #13
  unreachable

700:                                              ; preds = %696
  %701 = icmp eq i32 %477, %697
  br i1 %701, label %703, label %702

702:                                              ; preds = %700
  call void @abort() #13
  unreachable

703:                                              ; preds = %700
  call void @_ZN6tflite13reference_ops14DivElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %477, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, i8* %298, i8* %332, i8* %367) #12
  br i1 %588, label %704, label %710

704:                                              ; preds = %703
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  %709 = bitcast i32* %706 to i8*
  call void @_ZdaPv(i8* %709) #11
  br label %710

710:                                              ; preds = %703, %704, %708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %333) #12
  br i1 %478, label %711, label %717

711:                                              ; preds = %710
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %713 = load i32*, i32** %712, align 8
  %714 = icmp eq i32* %713, null
  br i1 %714, label %717, label %715

715:                                              ; preds = %711
  %716 = bitcast i32* %713 to i8*
  call void @_ZdaPv(i8* %716) #11
  br label %717

717:                                              ; preds = %710, %711, %715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #12
  br i1 %368, label %718, label %724

718:                                              ; preds = %717
  %719 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = icmp eq i32* %720, null
  br i1 %721, label %724, label %722

722:                                              ; preds = %718
  %723 = bitcast i32* %720 to i8*
  call void @_ZdaPv(i8* %723) #11
  br label %724

724:                                              ; preds = %722, %718, %717, %262, %258, %254
  %725 = phi i8* [ %135, %254 ], [ %135, %258 ], [ %135, %262 ], [ %265, %717 ], [ %265, %718 ], [ %265, %722 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #12
  br label %729

726:                                              ; preds = %24, %20, %7
  %727 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %728 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %727, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %728(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.16, i64 0, i64 0)) #12
  br label %729

729:                                              ; preds = %724, %726
  %730 = phi i32 [ 0, %724 ], [ 1, %726 ]
  ret i32 %730
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #3 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"struct.tflite::NdArrayDesc", align 4
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %class.anon, align 8
  store i32* %2, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  store i32* %6, i32** %11, align 8
  %19 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #12
  %20 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %12, align 4
  %23 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %13, align 4
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %26 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -86, i64 40, i1 false)
  %27 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 -86, i64 40, i1 false)
  %28 = bitcast %"struct.tflite::NdArrayDesc"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %14, %"struct.tflite::NdArrayDesc"* nonnull %15)
  %29 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %30, align 8, !alias.scope !103
  %31 = load i32, i32* %25, align 8, !noalias !103
  %32 = icmp sgt i32 %31, 5
  br i1 %32, label %33, label %34

33:                                               ; preds = %7
  call void @abort() #13, !noalias !103
  unreachable

34:                                               ; preds = %7
  store i32 5, i32* %30, align 8, !alias.scope !103
  %35 = sub i32 5, %31
  %36 = icmp sgt i32 %35, 0
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %38 = bitcast %union.anon* %37 to [5 x i32]*
  br i1 %36, label %39, label %118

39:                                               ; preds = %34
  %40 = zext i32 %35 to i64
  %41 = icmp ult i32 %35, 8
  br i1 %41, label %111, label %42

42:                                               ; preds = %39
  %43 = and i64 %40, 4294967288
  %44 = add nsw i64 %43, -8
  %45 = lshr exact i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 7
  %48 = icmp ult i64 %44, 56
  br i1 %48, label %96, label %49

49:                                               ; preds = %42
  %50 = sub nsw i64 %46, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %93, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %94, %51 ]
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %52
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !103
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !103
  %58 = or i64 %52, 8
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !103
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !103
  %63 = or i64 %52, 16
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !103
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !103
  %68 = or i64 %52, 24
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !103
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !103
  %73 = or i64 %52, 32
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !103
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !103
  %78 = or i64 %52, 40
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !103
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !103
  %83 = or i64 %52, 48
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !103
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !103
  %88 = or i64 %52, 56
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !103
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %92, align 8, !alias.scope !103
  %93 = add i64 %52, 64
  %94 = add i64 %53, -8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %51, !llvm.loop !106

96:                                               ; preds = %51, %42
  %97 = phi i64 [ 0, %42 ], [ %93, %51 ]
  %98 = icmp eq i64 %47, 0
  br i1 %98, label %109, label %99

99:                                               ; preds = %96, %99
  %100 = phi i64 [ %106, %99 ], [ %97, %96 ]
  %101 = phi i64 [ %107, %99 ], [ %47, %96 ]
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %103, align 8, !alias.scope !103
  %104 = getelementptr inbounds i32, i32* %102, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %105, align 8, !alias.scope !103
  %106 = add i64 %100, 8
  %107 = add i64 %101, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %99, !llvm.loop !107

109:                                              ; preds = %99, %96
  %110 = icmp eq i64 %43, %40
  br i1 %110, label %118, label %111

111:                                              ; preds = %109, %39
  %112 = phi i64 [ 0, %39 ], [ %43, %109 ]
  br label %113

113:                                              ; preds = %111, %113
  %114 = phi i64 [ %116, %113 ], [ %112, %111 ]
  %115 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %114
  store i32 1, i32* %115, align 4, !alias.scope !103
  %116 = add nuw nsw i64 %114, 1
  %117 = icmp eq i64 %116, %40
  br i1 %117, label %118, label %113, !llvm.loop !108

118:                                              ; preds = %113, %109, %34
  %119 = getelementptr inbounds %union.anon, %union.anon* %37, i64 0, i32 0
  %120 = bitcast %union.anon* %37 to i32*
  %121 = sext i32 %35 to i64
  %122 = getelementptr inbounds i32, i32* %120, i64 %121
  %123 = bitcast i32* %122 to i8*
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %125 = bitcast %union.anon* %124 to i8*
  %126 = sext i32 %31 to i64
  %127 = shl nsw i64 %126, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %125, i64 %127, i1 false) #12
  %128 = load i32, i32* %30, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %119, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 4
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 8
  %133 = bitcast i8* %132 to i32*
  %134 = select i1 %129, i32* %131, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 4
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 4
  store i32 1, i32* %137, align 4
  %138 = load i32, i32* %134, align 4
  %139 = getelementptr inbounds i32, i32* %130, i64 3
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 4
  %141 = bitcast i8* %140 to i32*
  %142 = select i1 %129, i32* %139, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 3
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 3
  store i32 %138, i32* %145, align 4
  %146 = load i32, i32* %142, align 4
  %147 = mul nsw i32 %146, %138
  %148 = getelementptr inbounds i32, i32* %130, i64 2
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1
  %150 = bitcast [16 x i8]* %149 to i32*
  %151 = select i1 %129, i32* %148, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 2
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 2
  store i32 %147, i32* %154, align 4
  %155 = load i32, i32* %151, align 4
  %156 = mul nsw i32 %155, %147
  %157 = getelementptr inbounds i32, i32* %130, i64 1
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 1
  %159 = select i1 %129, i32* %157, i32* %158
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 1
  store i32 %156, i32* %162, align 4
  %163 = load i32, i32* %159, align 4
  %164 = mul nsw i32 %163, %156
  %165 = select i1 %129, i32* %130, i32* %120
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 0
  store i32 %166, i32* %167, align 4
  %168 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 0
  store i32 %164, i32* %168, align 4
  %169 = xor i1 %129, true
  %170 = icmp eq i32* %130, null
  %171 = or i1 %170, %169
  br i1 %171, label %174, label %172

172:                                              ; preds = %118
  %173 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %173) #11
  br label %174

174:                                              ; preds = %118, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #12
  %175 = bitcast %class.anon* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %175) #12
  %176 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 0
  store i32** %11, i32*** %176, align 8
  %177 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %16, %"struct.tflite::NdArrayDesc"** %177, align 8
  %178 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 2
  store i32** %9, i32*** %178, align 8
  %179 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 3
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %179, align 8
  %180 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 4
  store i32** %10, i32*** %180, align 8
  %181 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 5
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %181, align 8
  %182 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 6
  store i32* %12, i32** %182, align 8
  %183 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 7
  store i32* %13, i32** %183, align 8
  %184 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %184) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %184, i8 0, i64 20, i1 false) #12
  %185 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %16, %class.anon* nonnull dereferenceable(64) %18, i32* nonnull %185) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %184) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %175) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #3 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"struct.tflite::NdArrayDesc", align 4
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %class.anon.1, align 8
  store float* %2, float** %9, align 8
  store float* %4, float** %10, align 8
  store float* %6, float** %11, align 8
  %19 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #12
  %20 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 13
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %12 to i32*
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 14
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %13 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %30 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 -86, i64 40, i1 false)
  %31 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -86, i64 40, i1 false)
  %32 = bitcast %"struct.tflite::NdArrayDesc"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %14, %"struct.tflite::NdArrayDesc"* nonnull %15)
  %33 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %34, align 8, !alias.scope !109
  %35 = load i32, i32* %29, align 8, !noalias !109
  %36 = icmp sgt i32 %35, 5
  br i1 %36, label %37, label %38

37:                                               ; preds = %7
  call void @abort() #13, !noalias !109
  unreachable

38:                                               ; preds = %7
  store i32 5, i32* %34, align 8, !alias.scope !109
  %39 = sub i32 5, %35
  %40 = icmp sgt i32 %39, 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %42 = bitcast %union.anon* %41 to [5 x i32]*
  br i1 %40, label %43, label %122

43:                                               ; preds = %38
  %44 = zext i32 %39 to i64
  %45 = icmp ult i32 %39, 8
  br i1 %45, label %115, label %46

46:                                               ; preds = %43
  %47 = and i64 %44, 4294967288
  %48 = add nsw i64 %47, -8
  %49 = lshr exact i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 7
  %52 = icmp ult i64 %48, 56
  br i1 %52, label %100, label %53

53:                                               ; preds = %46
  %54 = sub nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %97, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %98, %55 ]
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %56
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !109
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !109
  %62 = or i64 %56, 8
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !109
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !109
  %67 = or i64 %56, 16
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !109
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !109
  %72 = or i64 %56, 24
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !109
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !109
  %77 = or i64 %56, 32
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !109
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !109
  %82 = or i64 %56, 40
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !109
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !109
  %87 = or i64 %56, 48
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %87
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !109
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !109
  %92 = or i64 %56, 56
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %92
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %94, align 8, !alias.scope !109
  %95 = getelementptr inbounds i32, i32* %93, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %96, align 8, !alias.scope !109
  %97 = add i64 %56, 64
  %98 = add i64 %57, -8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %55, !llvm.loop !112

100:                                              ; preds = %55, %46
  %101 = phi i64 [ 0, %46 ], [ %97, %55 ]
  %102 = icmp eq i64 %51, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %110, %103 ], [ %101, %100 ]
  %105 = phi i64 [ %111, %103 ], [ %51, %100 ]
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %107, align 8, !alias.scope !109
  %108 = getelementptr inbounds i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %109, align 8, !alias.scope !109
  %110 = add i64 %104, 8
  %111 = add i64 %105, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %103, !llvm.loop !113

113:                                              ; preds = %103, %100
  %114 = icmp eq i64 %47, %44
  br i1 %114, label %122, label %115

115:                                              ; preds = %113, %43
  %116 = phi i64 [ 0, %43 ], [ %47, %113 ]
  br label %117

117:                                              ; preds = %115, %117
  %118 = phi i64 [ %120, %117 ], [ %116, %115 ]
  %119 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %118
  store i32 1, i32* %119, align 4, !alias.scope !109
  %120 = add nuw nsw i64 %118, 1
  %121 = icmp eq i64 %120, %44
  br i1 %121, label %122, label %117, !llvm.loop !114

122:                                              ; preds = %117, %113, %38
  %123 = getelementptr inbounds %union.anon, %union.anon* %41, i64 0, i32 0
  %124 = bitcast %union.anon* %41 to i32*
  %125 = sext i32 %39 to i64
  %126 = getelementptr inbounds i32, i32* %124, i64 %125
  %127 = bitcast i32* %126 to i8*
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %129 = bitcast %union.anon* %128 to i8*
  %130 = sext i32 %35 to i64
  %131 = shl nsw i64 %130, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %129, i64 %131, i1 false) #12
  %132 = load i32, i32* %34, align 8
  %133 = icmp sgt i32 %132, 5
  %134 = load i32*, i32** %123, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 4
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 8
  %137 = bitcast i8* %136 to i32*
  %138 = select i1 %133, i32* %135, i32* %137
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 4
  store i32 %139, i32* %140, align 4
  %141 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 4
  store i32 1, i32* %141, align 4
  %142 = load i32, i32* %138, align 4
  %143 = getelementptr inbounds i32, i32* %134, i64 3
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 4
  %145 = bitcast i8* %144 to i32*
  %146 = select i1 %133, i32* %143, i32* %145
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 3
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 3
  store i32 %142, i32* %149, align 4
  %150 = load i32, i32* %146, align 4
  %151 = mul nsw i32 %150, %142
  %152 = getelementptr inbounds i32, i32* %134, i64 2
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1
  %154 = bitcast [16 x i8]* %153 to i32*
  %155 = select i1 %133, i32* %152, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 2
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 2
  store i32 %151, i32* %158, align 4
  %159 = load i32, i32* %155, align 4
  %160 = mul nsw i32 %159, %151
  %161 = getelementptr inbounds i32, i32* %134, i64 1
  %162 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 1
  %163 = select i1 %133, i32* %161, i32* %162
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 1
  store i32 %164, i32* %165, align 4
  %166 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 1
  store i32 %160, i32* %166, align 4
  %167 = load i32, i32* %163, align 4
  %168 = mul nsw i32 %167, %160
  %169 = select i1 %133, i32* %134, i32* %124
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 0
  store i32 %170, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 0
  store i32 %168, i32* %172, align 4
  %173 = xor i1 %133, true
  %174 = icmp eq i32* %134, null
  %175 = or i1 %174, %173
  br i1 %175, label %178, label %176

176:                                              ; preds = %122
  %177 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %177) #11
  br label %178

178:                                              ; preds = %122, %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #12
  %179 = bitcast %class.anon.1* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %179) #12
  %180 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 0
  store float** %11, float*** %180, align 8
  %181 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %16, %"struct.tflite::NdArrayDesc"** %181, align 8
  %182 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 2
  store float** %9, float*** %182, align 8
  %183 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 3
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %183, align 8
  %184 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 4
  store float** %10, float*** %184, align 8
  %185 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 5
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %185, align 8
  %186 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 6
  store float* %12, float** %186, align 8
  %187 = getelementptr inbounds %class.anon.1, %class.anon.1* %18, i64 0, i32 7
  store float* %13, float** %187, align 8
  %188 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %188) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %188, i8 0, i64 20, i1 false) #12
  %189 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %16, %class.anon.1* nonnull dereferenceable(64) %18, i32* nonnull %189) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %188) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %179) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !115
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !115
  %11 = icmp sgt i32 %10, 5
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #13, !noalias !115
  unreachable

13:                                               ; preds = %4
  store i32 5, i32* %8, align 8, !alias.scope !115
  %14 = sub i32 5, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !115
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !115
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !115
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !115
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !115
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !115
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !115
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !115
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !115
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !115
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !115
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !115
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !115
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !115
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !115
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !115
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !118

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !115
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !115
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !119

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !115
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !120

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i8*
  %105 = sext i32 %10 to i64
  %106 = shl nsw i64 %105, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %104, i64 %106, i1 false) #12
  %107 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 32, i1 false)
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %108, align 8, !alias.scope !121
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %110 = load i32, i32* %109, align 8, !noalias !121
  %111 = icmp sgt i32 %110, 5
  br i1 %111, label %112, label %113

112:                                              ; preds = %97
  tail call void @abort() #13, !noalias !121
  unreachable

113:                                              ; preds = %97
  store i32 5, i32* %108, align 8, !alias.scope !121
  %114 = sub i32 5, %110
  %115 = icmp sgt i32 %114, 0
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to [5 x i32]*
  br i1 %115, label %118, label %197

118:                                              ; preds = %113
  %119 = zext i32 %114 to i64
  %120 = icmp ult i32 %114, 8
  br i1 %120, label %190, label %121

121:                                              ; preds = %118
  %122 = and i64 %119, 4294967288
  %123 = add nsw i64 %122, -8
  %124 = lshr exact i64 %123, 3
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 7
  %127 = icmp ult i64 %123, 56
  br i1 %127, label %175, label %128

128:                                              ; preds = %121
  %129 = sub nsw i64 %125, %126
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i64 [ 0, %128 ], [ %172, %130 ]
  %132 = phi i64 [ %129, %128 ], [ %173, %130 ]
  %133 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %131
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %134, align 8, !alias.scope !121
  %135 = getelementptr inbounds i32, i32* %133, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %136, align 8, !alias.scope !121
  %137 = or i64 %131, 8
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %137
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !121
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !121
  %142 = or i64 %131, 16
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !121
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !121
  %147 = or i64 %131, 24
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !121
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !121
  %152 = or i64 %131, 32
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !121
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !121
  %157 = or i64 %131, 40
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !121
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !121
  %162 = or i64 %131, 48
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !121
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !121
  %167 = or i64 %131, 56
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !121
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !121
  %172 = add i64 %131, 64
  %173 = add i64 %132, -8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %130, !llvm.loop !124

175:                                              ; preds = %130, %121
  %176 = phi i64 [ 0, %121 ], [ %172, %130 ]
  %177 = icmp eq i64 %126, 0
  br i1 %177, label %188, label %178

178:                                              ; preds = %175, %178
  %179 = phi i64 [ %185, %178 ], [ %176, %175 ]
  %180 = phi i64 [ %186, %178 ], [ %126, %175 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !121
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !121
  %185 = add i64 %179, 8
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %178, !llvm.loop !125

188:                                              ; preds = %178, %175
  %189 = icmp eq i64 %122, %119
  br i1 %189, label %197, label %190

190:                                              ; preds = %188, %118
  %191 = phi i64 [ 0, %118 ], [ %122, %188 ]
  br label %192

192:                                              ; preds = %190, %192
  %193 = phi i64 [ %195, %192 ], [ %191, %190 ]
  %194 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %193
  store i32 1, i32* %194, align 4, !alias.scope !121
  %195 = add nuw nsw i64 %193, 1
  %196 = icmp eq i64 %195, %119
  br i1 %196, label %197, label %192, !llvm.loop !126

197:                                              ; preds = %192, %188, %113
  %198 = getelementptr inbounds %union.anon, %union.anon* %116, i64 0, i32 0
  %199 = bitcast %union.anon* %116 to i32*
  %200 = sext i32 %114 to i64
  %201 = getelementptr inbounds i32, i32* %199, i64 %200
  %202 = bitcast i32* %201 to i8*
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %204 = bitcast %union.anon* %203 to i8*
  %205 = sext i32 %110 to i64
  %206 = shl nsw i64 %205, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* align 4 %204, i64 %206, i1 false) #12
  %207 = bitcast %union.anon* %16 to [5 x i32]*
  %208 = load i32, i32* %8, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %98, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 4
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 8
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 4
  store i32 %215, i32* %216, align 4
  %217 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 4
  store i32 1, i32* %217, align 4
  %218 = load i32, i32* %214, align 4
  %219 = getelementptr inbounds i32, i32* %210, i64 3
  %220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %221 = bitcast i8* %220 to i32*
  %222 = select i1 %209, i32* %219, i32* %221
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %223, i32* %224, align 4
  %225 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 %218, i32* %225, align 4
  %226 = load i32, i32* %222, align 4
  %227 = mul nsw i32 %226, %218
  %228 = getelementptr inbounds i32, i32* %210, i64 2
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %230 = bitcast [16 x i8]* %229 to i32*
  %231 = select i1 %209, i32* %228, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %232, i32* %233, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %227, i32* %234, align 4
  %235 = load i32, i32* %231, align 4
  %236 = mul nsw i32 %235, %227
  %237 = getelementptr inbounds i32, i32* %210, i64 1
  %238 = getelementptr inbounds [5 x i32], [5 x i32]* %207, i64 0, i64 1
  %239 = select i1 %209, i32* %237, i32* %238
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %240, i32* %241, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %236, i32* %242, align 4
  %243 = load i32, i32* %239, align 4
  %244 = mul nsw i32 %243, %236
  %245 = select i1 %209, i32* %210, i32* %99
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %246, i32* %247, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %244, i32* %248, align 4
  %249 = load i32, i32* %108, align 8
  %250 = icmp sgt i32 %249, 5
  %251 = load i32*, i32** %198, align 8
  %252 = getelementptr inbounds i32, i32* %251, i64 4
  %253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 8
  %254 = bitcast i8* %253 to i32*
  %255 = select i1 %250, i32* %252, i32* %254
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 4
  store i32 %256, i32* %257, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 4
  store i32 1, i32* %258, align 4
  %259 = load i32, i32* %255, align 4
  %260 = getelementptr inbounds i32, i32* %251, i64 3
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %262 = bitcast i8* %261 to i32*
  %263 = select i1 %250, i32* %260, i32* %262
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %264, i32* %265, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 %259, i32* %266, align 4
  %267 = load i32, i32* %263, align 4
  %268 = mul nsw i32 %267, %259
  %269 = getelementptr inbounds i32, i32* %251, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %250, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %268, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %268
  %278 = getelementptr inbounds i32, i32* %251, i64 1
  %279 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 1
  %280 = select i1 %250, i32* %278, i32* %279
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %281, i32* %282, align 4
  %283 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %277, i32* %283, align 4
  %284 = load i32, i32* %280, align 4
  %285 = mul nsw i32 %284, %277
  %286 = select i1 %250, i32* %251, i32* %199
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %287, i32* %288, align 4
  %289 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %285, i32* %289, align 4
  %290 = bitcast %union.anon* %16 to i32*
  %291 = select i1 %209, i32* %210, i32* %290
  %292 = load i32, i32* %291, align 4
  %293 = bitcast %union.anon* %116 to i32*
  %294 = select i1 %250, i32* %251, i32* %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %292, %295
  br i1 %296, label %311, label %307

297:                                              ; preds = %361
  %298 = bitcast i32* %251 to i8*
  tail call void @_ZdaPv(i8* %298) #11
  br label %299

299:                                              ; preds = %361, %297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #12
  br i1 %209, label %300, label %306

300:                                              ; preds = %299
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %302 = load i32*, i32** %301, align 8
  %303 = icmp eq i32* %302, null
  br i1 %303, label %306, label %304

304:                                              ; preds = %300
  %305 = bitcast i32* %302 to i8*
  tail call void @_ZdaPv(i8* %305) #11
  br label %306

306:                                              ; preds = %299, %300, %304
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret void

307:                                              ; preds = %197
  %308 = icmp eq i32 %292, 1
  br i1 %308, label %309, label %310

309:                                              ; preds = %307
  store i32 0, i32* %248, align 4
  store i32 %295, i32* %247, align 4
  br label %311

310:                                              ; preds = %307
  store i32 0, i32* %289, align 4
  store i32 %292, i32* %288, align 4
  br label %311

311:                                              ; preds = %197, %309, %310
  %312 = load i32, i32* %239, align 4
  %313 = load i32, i32* %280, align 4
  %314 = icmp eq i32 %312, %313
  br i1 %314, label %319, label %315

315:                                              ; preds = %311
  %316 = icmp eq i32 %312, 1
  br i1 %316, label %318, label %317

317:                                              ; preds = %315
  store i32 0, i32* %283, align 4
  store i32 %312, i32* %282, align 4
  br label %319

318:                                              ; preds = %315
  store i32 0, i32* %242, align 4
  store i32 %313, i32* %241, align 4
  br label %319

319:                                              ; preds = %318, %317, %311
  %320 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %321 = bitcast [16 x i8]* %320 to i32*
  %322 = select i1 %209, i32* %228, i32* %321
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %325 = bitcast [16 x i8]* %324 to i32*
  %326 = select i1 %250, i32* %269, i32* %325
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %323, %327
  br i1 %328, label %333, label %329

329:                                              ; preds = %319
  %330 = icmp eq i32 %323, 1
  br i1 %330, label %332, label %331

331:                                              ; preds = %329
  store i32 0, i32* %275, align 4
  store i32 %323, i32* %274, align 4
  br label %333

332:                                              ; preds = %329
  store i32 0, i32* %234, align 4
  store i32 %327, i32* %233, align 4
  br label %333

333:                                              ; preds = %332, %331, %319
  %334 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %335 = bitcast i8* %334 to i32*
  %336 = select i1 %209, i32* %219, i32* %335
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %339 = bitcast i8* %338 to i32*
  %340 = select i1 %250, i32* %260, i32* %339
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %337, %341
  br i1 %342, label %347, label %343

343:                                              ; preds = %333
  %344 = icmp eq i32 %337, 1
  br i1 %344, label %346, label %345

345:                                              ; preds = %343
  store i32 0, i32* %266, align 4
  store i32 %337, i32* %265, align 4
  br label %347

346:                                              ; preds = %343
  store i32 0, i32* %225, align 4
  store i32 %341, i32* %224, align 4
  br label %347

347:                                              ; preds = %346, %345, %333
  %348 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 8
  %349 = bitcast i8* %348 to i32*
  %350 = select i1 %209, i32* %211, i32* %349
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 8
  %353 = bitcast i8* %352 to i32*
  %354 = select i1 %250, i32* %252, i32* %353
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %351, %355
  br i1 %356, label %361, label %357

357:                                              ; preds = %347
  %358 = icmp eq i32 %351, 1
  br i1 %358, label %360, label %359

359:                                              ; preds = %357
  store i32 0, i32* %258, align 4
  store i32 %351, i32* %257, align 4
  br label %361

360:                                              ; preds = %357
  store i32 0, i32* %217, align 4
  store i32 %355, i32* %216, align 4
  br label %361

361:                                              ; preds = %360, %359, %347
  %362 = xor i1 %250, true
  %363 = icmp eq i32* %251, null
  %364 = or i1 %363, %362
  br i1 %364, label %299, label %297
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon* dereferenceable(64), i32*) local_unnamed_addr #3 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %164

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 7
  %22 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 1
  br label %24

24:                                               ; preds = %7, %159
  %25 = phi i32 [ 0, %7 ], [ %161, %159 ]
  store i32 0, i32* %8, align 4
  %26 = load i32, i32* %9, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %159

28:                                               ; preds = %24, %152
  %29 = phi i32 [ %154, %152 ], [ 0, %24 ]
  store i32 0, i32* %10, align 4
  %30 = load i32, i32* %11, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %152

32:                                               ; preds = %28, %145
  %33 = phi i32 [ %147, %145 ], [ 0, %28 ]
  store i32 0, i32* %12, align 4
  %34 = load i32, i32* %13, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %145

36:                                               ; preds = %32, %138
  %37 = phi i32 [ %140, %138 ], [ 0, %32 ]
  store i32 0, i32* %14, align 4
  %38 = load i32, i32* %15, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %138

40:                                               ; preds = %36, %40
  %41 = phi i32 [ %134, %40 ], [ 0, %36 ]
  %42 = phi i32 [ %137, %40 ], [ %37, %36 ]
  %43 = load i32**, i32*** %16, align 8
  %44 = load i32*, i32** %43, align 8
  %45 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %17, align 8
  %46 = load i32, i32* %2, align 4
  %47 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i32 %48, %46
  %50 = load i32, i32* %8, align 4
  %51 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = mul nsw i32 %52, %50
  %54 = add nsw i32 %53, %49
  %55 = load i32, i32* %10, align 4
  %56 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = mul nsw i32 %57, %55
  %59 = add nsw i32 %54, %58
  %60 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 3
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %61, %42
  %63 = add nsw i32 %59, %62
  %64 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 4
  %65 = load i32, i32* %64, align 4
  %66 = mul nsw i32 %65, %41
  %67 = add nsw i32 %63, %66
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %44, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = load i32**, i32*** %18, align 8
  %72 = load i32*, i32** %71, align 8
  %73 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %19, align 8
  %74 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 0
  %75 = load i32, i32* %74, align 4
  %76 = mul nsw i32 %75, %46
  %77 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %50
  %80 = add nsw i32 %79, %76
  %81 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 2
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %82, %55
  %84 = add nsw i32 %80, %83
  %85 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 3
  %86 = load i32, i32* %85, align 4
  %87 = mul nsw i32 %86, %42
  %88 = add nsw i32 %84, %87
  %89 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 4
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %41
  %92 = add nsw i32 %88, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %72, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = sdiv i32 %70, %95
  %97 = sitofp i32 %96 to float
  %98 = load i32*, i32** %20, align 8
  %99 = load i32, i32* %98, align 4
  %100 = sitofp i32 %99 to float
  %101 = load i32*, i32** %21, align 8
  %102 = load i32, i32* %101, align 4
  %103 = sitofp i32 %102 to float
  %104 = fcmp olt float %97, %100
  %105 = select i1 %104, float %100, float %97
  %106 = fcmp ogt float %105, %103
  %107 = select i1 %106, float %103, float %105
  %108 = fptosi float %107 to i32
  %109 = load i32**, i32*** %22, align 8
  %110 = load i32*, i32** %109, align 8
  %111 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %23, align 8
  %112 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 0
  %113 = load i32, i32* %112, align 4
  %114 = mul nsw i32 %113, %46
  %115 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 1
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %50
  %118 = add nsw i32 %117, %114
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 2
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %120, %55
  %122 = add nsw i32 %118, %121
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 3
  %124 = load i32, i32* %123, align 4
  %125 = mul nsw i32 %124, %42
  %126 = add nsw i32 %122, %125
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 4
  %128 = load i32, i32* %127, align 4
  %129 = mul nsw i32 %128, %41
  %130 = add nsw i32 %126, %129
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %110, i64 %131
  store i32 %108, i32* %132, align 4
  %133 = load i32, i32* %14, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %14, align 4
  %135 = load i32, i32* %15, align 4
  %136 = icmp slt i32 %134, %135
  %137 = load i32, i32* %12, align 4
  br i1 %136, label %40, label %138

138:                                              ; preds = %40, %36
  %139 = phi i32 [ %37, %36 ], [ %137, %40 ]
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %12, align 4
  %141 = load i32, i32* %13, align 4
  %142 = icmp slt i32 %140, %141
  br i1 %142, label %36, label %143

143:                                              ; preds = %138
  %144 = load i32, i32* %10, align 4
  br label %145

145:                                              ; preds = %143, %32
  %146 = phi i32 [ %144, %143 ], [ %33, %32 ]
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %10, align 4
  %148 = load i32, i32* %11, align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %32, label %150

150:                                              ; preds = %145
  %151 = load i32, i32* %8, align 4
  br label %152

152:                                              ; preds = %150, %28
  %153 = phi i32 [ %151, %150 ], [ %29, %28 ]
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %8, align 4
  %155 = load i32, i32* %9, align 4
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %28, label %157

157:                                              ; preds = %152
  %158 = load i32, i32* %2, align 4
  br label %159

159:                                              ; preds = %157, %24
  %160 = phi i32 [ %158, %157 ], [ %25, %24 ]
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %2, align 4
  %162 = load i32, i32* %4, align 4
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %24, label %164

164:                                              ; preds = %159, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.1* dereferenceable(64), i32*) local_unnamed_addr #3 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %160

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 7
  %22 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 1
  br label %24

24:                                               ; preds = %7, %155
  %25 = phi i32 [ 0, %7 ], [ %157, %155 ]
  store i32 0, i32* %8, align 4
  %26 = load i32, i32* %9, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %155

28:                                               ; preds = %24, %148
  %29 = phi i32 [ %150, %148 ], [ 0, %24 ]
  store i32 0, i32* %10, align 4
  %30 = load i32, i32* %11, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %148

32:                                               ; preds = %28, %141
  %33 = phi i32 [ %143, %141 ], [ 0, %28 ]
  store i32 0, i32* %12, align 4
  %34 = load i32, i32* %13, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %141

36:                                               ; preds = %32, %134
  %37 = phi i32 [ %136, %134 ], [ 0, %32 ]
  store i32 0, i32* %14, align 4
  %38 = load i32, i32* %15, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %134

40:                                               ; preds = %36, %40
  %41 = phi i32 [ %130, %40 ], [ 0, %36 ]
  %42 = phi i32 [ %133, %40 ], [ %37, %36 ]
  %43 = load float**, float*** %16, align 8
  %44 = load float*, float** %43, align 8
  %45 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %17, align 8
  %46 = load i32, i32* %2, align 4
  %47 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i32 %48, %46
  %50 = load i32, i32* %8, align 4
  %51 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = mul nsw i32 %52, %50
  %54 = add nsw i32 %53, %49
  %55 = load i32, i32* %10, align 4
  %56 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = mul nsw i32 %57, %55
  %59 = add nsw i32 %54, %58
  %60 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 3
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %61, %42
  %63 = add nsw i32 %59, %62
  %64 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 4
  %65 = load i32, i32* %64, align 4
  %66 = mul nsw i32 %65, %41
  %67 = add nsw i32 %63, %66
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds float, float* %44, i64 %68
  %70 = load float, float* %69, align 4
  %71 = load float**, float*** %18, align 8
  %72 = load float*, float** %71, align 8
  %73 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %19, align 8
  %74 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 0
  %75 = load i32, i32* %74, align 4
  %76 = mul nsw i32 %75, %46
  %77 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %50
  %80 = add nsw i32 %79, %76
  %81 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 2
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %82, %55
  %84 = add nsw i32 %80, %83
  %85 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 3
  %86 = load i32, i32* %85, align 4
  %87 = mul nsw i32 %86, %42
  %88 = add nsw i32 %84, %87
  %89 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 4
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %41
  %92 = add nsw i32 %88, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds float, float* %72, i64 %93
  %95 = load float, float* %94, align 4
  %96 = fdiv float %70, %95
  %97 = load float*, float** %20, align 8
  %98 = load float, float* %97, align 4
  %99 = load float*, float** %21, align 8
  %100 = load float, float* %99, align 4
  %101 = fcmp olt float %96, %98
  %102 = select i1 %101, float %98, float %96
  %103 = fcmp ogt float %102, %100
  %104 = select i1 %103, float %100, float %102
  %105 = load float**, float*** %22, align 8
  %106 = load float*, float** %105, align 8
  %107 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %23, align 8
  %108 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 0
  %109 = load i32, i32* %108, align 4
  %110 = mul nsw i32 %109, %46
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 1
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %50
  %114 = add nsw i32 %113, %110
  %115 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 2
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %55
  %118 = add nsw i32 %114, %117
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 3
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %120, %42
  %122 = add nsw i32 %118, %121
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 4
  %124 = load i32, i32* %123, align 4
  %125 = mul nsw i32 %124, %41
  %126 = add nsw i32 %122, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, float* %106, i64 %127
  store float %104, float* %128, align 4
  %129 = load i32, i32* %14, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %14, align 4
  %131 = load i32, i32* %15, align 4
  %132 = icmp slt i32 %130, %131
  %133 = load i32, i32* %12, align 4
  br i1 %132, label %40, label %134

134:                                              ; preds = %40, %36
  %135 = phi i32 [ %37, %36 ], [ %133, %40 ]
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %12, align 4
  %137 = load i32, i32* %13, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %36, label %139

139:                                              ; preds = %134
  %140 = load i32, i32* %10, align 4
  br label %141

141:                                              ; preds = %139, %32
  %142 = phi i32 [ %140, %139 ], [ %33, %32 ]
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %10, align 4
  %144 = load i32, i32* %11, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %32, label %146

146:                                              ; preds = %141
  %147 = load i32, i32* %8, align 4
  br label %148

148:                                              ; preds = %146, %28
  %149 = phi i32 [ %147, %146 ], [ %29, %28 ]
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %8, align 4
  %151 = load i32, i32* %9, align 4
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %28, label %153

153:                                              ; preds = %148
  %154 = load i32, i32* %2, align 4
  br label %155

155:                                              ; preds = %153, %24
  %156 = phi i32 [ %154, %153 ], [ %25, %24 ]
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %2, align 4
  %158 = load i32, i32* %4, align 4
  %159 = icmp slt i32 %157, %158
  br i1 %159, label %24, label %160

160:                                              ; preds = %155, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::ArithmeticParams"*) local_unnamed_addr #7 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  %12 = select i1 %11, i32 %10, i32 %8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 0
  store i8 4, i8* %13, align 4
  %14 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %12, i32* %15, align 8
  %16 = icmp sgt i32 %12, 5
  br i1 %16, label %17, label %23

17:                                               ; preds = %3
  %18 = sext i32 %12 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call i8* @_Znam(i64 %19) #11
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %22 = bitcast i32** %21 to i8**
  store i8* %20, i8** %22, align 8
  br label %25

23:                                               ; preds = %3
  %24 = icmp sgt i32 %12, 0
  br i1 %24, label %25, label %73

25:                                               ; preds = %23, %17
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to [5 x i32]*
  %28 = getelementptr inbounds %union.anon, %union.anon* %26, i64 0, i32 0
  %29 = zext i32 %12 to i64
  %30 = add nsw i64 %29, -1
  %31 = and i64 %29, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %60, label %33

33:                                               ; preds = %25
  %34 = sub nsw i64 %29, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %58, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %36
  %39 = load i32*, i32** %28, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %36
  %41 = select i1 %16, i32* %40, i32* %38
  store i32 1, i32* %41, align 4
  %42 = or i64 %36, 1
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %42
  %44 = load i32*, i32** %28, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 %42
  %46 = select i1 %16, i32* %45, i32* %43
  store i32 1, i32* %46, align 4
  %47 = or i64 %36, 2
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %47
  %49 = load i32*, i32** %28, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %47
  %51 = select i1 %16, i32* %50, i32* %48
  store i32 1, i32* %51, align 4
  %52 = or i64 %36, 3
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %52
  %54 = load i32*, i32** %28, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %52
  %56 = select i1 %16, i32* %55, i32* %53
  store i32 1, i32* %56, align 4
  %57 = add nuw nsw i64 %36, 4
  %58 = add i64 %37, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %35

60:                                               ; preds = %35, %25
  %61 = phi i64 [ 0, %25 ], [ %57, %35 ]
  %62 = icmp eq i64 %31, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %70, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %71, %63 ], [ %31, %60 ]
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %64
  %67 = load i32*, i32** %28, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %64
  %69 = select i1 %16, i32* %68, i32* %66
  store i32 1, i32* %69, align 4
  %70 = add nuw nsw i64 %64, 1
  %71 = add i64 %65, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %63, !llvm.loop !127

73:                                               ; preds = %60, %63, %23
  %74 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 32, i1 false)
  %75 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %75, align 8, !alias.scope !128
  %76 = load i32, i32* %7, align 8, !noalias !128
  %77 = icmp slt i32 %12, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  tail call void @abort() #13, !noalias !128
  unreachable

79:                                               ; preds = %73
  store i32 %12, i32* %75, align 8, !alias.scope !128
  br i1 %16, label %80, label %86

80:                                               ; preds = %79
  %81 = sext i32 %12 to i64
  %82 = shl nuw nsw i64 %81, 2
  %83 = tail call i8* @_Znam(i64 %82) #11, !noalias !128
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8, !alias.scope !128
  br label %86

86:                                               ; preds = %80, %79
  %87 = sub i32 %12, %76
  %88 = icmp sgt i32 %87, 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %88, label %90, label %139

90:                                               ; preds = %86
  %91 = bitcast %union.anon* %89 to [5 x i32]*
  %92 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %93 = zext i32 %87 to i64
  %94 = add nsw i64 %93, -1
  %95 = and i64 %93, 3
  %96 = icmp ult i64 %94, 3
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  %98 = sub nsw i64 %93, %95
  br label %114

99:                                               ; preds = %114, %90
  %100 = phi i64 [ 0, %90 ], [ %136, %114 ]
  %101 = icmp eq i64 %95, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %109, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %110, %102 ], [ %95, %99 ]
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %103
  %106 = load i32*, i32** %92, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %103
  %108 = select i1 %16, i32* %107, i32* %105
  store i32 1, i32* %108, align 4
  %109 = add nuw nsw i64 %103, 1
  %110 = add i64 %104, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %102, !llvm.loop !131

112:                                              ; preds = %102, %99
  %113 = load i32, i32* %7, align 8, !noalias !128
  br label %139

114:                                              ; preds = %114, %97
  %115 = phi i64 [ 0, %97 ], [ %136, %114 ]
  %116 = phi i64 [ %98, %97 ], [ %137, %114 ]
  %117 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %115
  %118 = load i32*, i32** %92, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 %115
  %120 = select i1 %16, i32* %119, i32* %117
  store i32 1, i32* %120, align 4
  %121 = or i64 %115, 1
  %122 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %121
  %123 = load i32*, i32** %92, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %121
  %125 = select i1 %16, i32* %124, i32* %122
  store i32 1, i32* %125, align 4
  %126 = or i64 %115, 2
  %127 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %126
  %128 = load i32*, i32** %92, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %126
  %130 = select i1 %16, i32* %129, i32* %127
  store i32 1, i32* %130, align 4
  %131 = or i64 %115, 3
  %132 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %131
  %133 = load i32*, i32** %92, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 %131
  %135 = select i1 %16, i32* %134, i32* %132
  store i32 1, i32* %135, align 4
  %136 = add nuw nsw i64 %115, 4
  %137 = add i64 %116, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %99, label %114

139:                                              ; preds = %86, %112
  %140 = phi i32 [ %113, %112 ], [ %76, %86 ]
  %141 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %142 = load i32*, i32** %141, align 8, !alias.scope !128
  %143 = bitcast %union.anon* %89 to i32*
  %144 = select i1 %16, i32* %142, i32* %143
  %145 = sext i32 %87 to i64
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  %147 = bitcast i32* %146 to i8*
  %148 = icmp sgt i32 %140, 5
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %150 = getelementptr inbounds %union.anon, %union.anon* %149, i64 0, i32 0
  %151 = load i32*, i32** %150, align 8, !noalias !128
  %152 = bitcast %union.anon* %149 to i32*
  %153 = select i1 %148, i32* %151, i32* %152
  %154 = bitcast i32* %153 to i8*
  %155 = sext i32 %140 to i64
  %156 = shl nsw i64 %155, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %154, i64 %156, i1 false) #12
  %157 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 32, i1 false)
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !132
  %159 = load i32, i32* %9, align 8, !noalias !132
  %160 = icmp slt i32 %12, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %139
  tail call void @abort() #13, !noalias !132
  unreachable

162:                                              ; preds = %139
  store i32 %12, i32* %158, align 8, !alias.scope !132
  br i1 %16, label %163, label %169

163:                                              ; preds = %162
  %164 = sext i32 %12 to i64
  %165 = shl nuw nsw i64 %164, 2
  %166 = tail call i8* @_Znam(i64 %165) #11, !noalias !132
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %168 = bitcast i32** %167 to i8**
  store i8* %166, i8** %168, align 8, !alias.scope !132
  br label %169

169:                                              ; preds = %163, %162
  %170 = sub i32 %12, %159
  %171 = icmp sgt i32 %170, 0
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %171, label %173, label %222

173:                                              ; preds = %169
  %174 = bitcast %union.anon* %172 to [5 x i32]*
  %175 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %176 = zext i32 %170 to i64
  %177 = add nsw i64 %176, -1
  %178 = and i64 %176, 3
  %179 = icmp ult i64 %177, 3
  br i1 %179, label %182, label %180

180:                                              ; preds = %173
  %181 = sub nsw i64 %176, %178
  br label %197

182:                                              ; preds = %197, %173
  %183 = phi i64 [ 0, %173 ], [ %219, %197 ]
  %184 = icmp eq i64 %178, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %178, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %186
  %189 = load i32*, i32** %175, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 %186
  %191 = select i1 %16, i32* %190, i32* %188
  store i32 1, i32* %191, align 4
  %192 = add nuw nsw i64 %186, 1
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !135

195:                                              ; preds = %185, %182
  %196 = load i32, i32* %9, align 8, !noalias !132
  br label %222

197:                                              ; preds = %197, %180
  %198 = phi i64 [ 0, %180 ], [ %219, %197 ]
  %199 = phi i64 [ %181, %180 ], [ %220, %197 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %198
  %201 = load i32*, i32** %175, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 %198
  %203 = select i1 %16, i32* %202, i32* %200
  store i32 1, i32* %203, align 4
  %204 = or i64 %198, 1
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %204
  %206 = load i32*, i32** %175, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  %208 = select i1 %16, i32* %207, i32* %205
  store i32 1, i32* %208, align 4
  %209 = or i64 %198, 2
  %210 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %209
  %211 = load i32*, i32** %175, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 %209
  %213 = select i1 %16, i32* %212, i32* %210
  store i32 1, i32* %213, align 4
  %214 = or i64 %198, 3
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %214
  %216 = load i32*, i32** %175, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %214
  %218 = select i1 %16, i32* %217, i32* %215
  store i32 1, i32* %218, align 4
  %219 = add nuw nsw i64 %198, 4
  %220 = add i64 %199, -4
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %182, label %197

222:                                              ; preds = %169, %195
  %223 = phi i32 [ %196, %195 ], [ %159, %169 ]
  %224 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %225 = load i32*, i32** %224, align 8, !alias.scope !132
  %226 = bitcast %union.anon* %172 to i32*
  %227 = select i1 %16, i32* %225, i32* %226
  %228 = sext i32 %170 to i64
  %229 = getelementptr inbounds i32, i32* %227, i64 %228
  %230 = bitcast i32* %229 to i8*
  %231 = icmp sgt i32 %223, 5
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %233 = getelementptr inbounds %union.anon, %union.anon* %232, i64 0, i32 0
  %234 = load i32*, i32** %233, align 8, !noalias !132
  %235 = bitcast %union.anon* %232 to i32*
  %236 = select i1 %231, i32* %234, i32* %235
  %237 = bitcast i32* %236 to i8*
  %238 = sext i32 %223 to i64
  %239 = shl nsw i64 %238, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* align 4 %237, i64 %239, i1 false) #12
  %240 = load i32, i32* %75, align 8
  %241 = load i32, i32* %158, align 8
  %242 = icmp eq i32 %240, %241
  br i1 %242, label %243, label %256

243:                                              ; preds = %222
  %244 = icmp sgt i32 %240, 5
  %245 = load i32*, i32** %141, align 8
  %246 = select i1 %244, i32* %245, i32* %143
  %247 = bitcast i32* %246 to i8*
  %248 = load i32*, i32** %224, align 8
  %249 = select i1 %244, i32* %248, i32* %226
  %250 = bitcast i32* %249 to i8*
  %251 = sext i32 %240 to i64
  %252 = shl nsw i64 %251, 2
  %253 = call i32 @bcmp(i8* %247, i8* %250, i64 %252) #12
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %243
  store i8 1, i8* %13, align 4
  br label %556

256:                                              ; preds = %222, %243
  %257 = add nsw i32 %12, -1
  %258 = icmp sgt i32 %12, 0
  br i1 %258, label %259, label %298

259:                                              ; preds = %256
  %260 = icmp sgt i32 %240, 5
  %261 = load i32*, i32** %141, align 8
  %262 = bitcast %union.anon* %89 to [5 x i32]*
  %263 = icmp sgt i32 %241, 5
  %264 = load i32*, i32** %224, align 8
  %265 = bitcast %union.anon* %172 to [5 x i32]*
  %266 = sext i32 %12 to i64
  br label %267

267:                                              ; preds = %259, %296
  %268 = phi i64 [ %266, %259 ], [ %269, %296 ]
  %269 = add nsw i64 %268, -1
  %270 = getelementptr inbounds i32, i32* %261, i64 %269
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %269
  %272 = select i1 %260, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %264, i64 %269
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %269
  %276 = select i1 %263, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %273, %277
  br i1 %278, label %296, label %279

279:                                              ; preds = %267
  %280 = shl i64 %269, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds i32, i32* %261, i64 %281
  %283 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %281
  %284 = select i1 %260, i32* %282, i32* %283
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 1
  br i1 %286, label %287, label %288

287:                                              ; preds = %279
  store i8 2, i8* %13, align 4
  br label %298

288:                                              ; preds = %279
  %289 = getelementptr inbounds i32, i32* %264, i64 %281
  %290 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %281
  %291 = select i1 %263, i32* %289, i32* %290
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 1
  br i1 %293, label %294, label %295

294:                                              ; preds = %288
  store i8 3, i8* %13, align 4
  br label %298

295:                                              ; preds = %288
  store i8 4, i8* %13, align 4
  br label %556

296:                                              ; preds = %267
  %297 = icmp sgt i64 %269, 0
  br i1 %297, label %267, label %298

298:                                              ; preds = %296, %256, %294, %287
  %299 = load i8, i8* %13, align 4
  %300 = and i8 %299, -2
  %301 = icmp eq i8 %300, 2
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  store i8 1, i8* %13, align 4
  br label %556

303:                                              ; preds = %298
  %304 = icmp eq i8 %299, 3
  %305 = select i1 %304, %"class.tflite::RuntimeShape"* %6, %"class.tflite::RuntimeShape"* %5
  %306 = select i1 %304, %"class.tflite::RuntimeShape"* %5, %"class.tflite::RuntimeShape"* %6
  %307 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 0
  %308 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 1
  %309 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 2
  %310 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 3
  %311 = bitcast i32* %307 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %311, align 4
  %312 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 4
  store i32 1, i32* %312, align 4
  br i1 %258, label %313, label %363

313:                                              ; preds = %303
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %316 = bitcast %union.anon* %315 to [5 x i32]*
  %317 = getelementptr inbounds %union.anon, %union.anon* %315, i64 0, i32 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %320 = bitcast %union.anon* %319 to [5 x i32]*
  %321 = getelementptr inbounds %union.anon, %union.anon* %319, i64 0, i32 0
  %322 = sext i32 %12 to i64
  %323 = load i32, i32* %314, align 8
  %324 = icmp sgt i32 %323, 5
  br label %325

325:                                              ; preds = %313, %355
  %326 = phi i32 [ 1, %313 ], [ %358, %355 ]
  %327 = phi i64 [ %322, %313 ], [ %329, %355 ]
  %328 = phi i32 [ %257, %313 ], [ %359, %355 ]
  %329 = add nsw i64 %327, -1
  br i1 %324, label %330, label %333

330:                                              ; preds = %325
  %331 = load i32*, i32** %317, align 8
  %332 = getelementptr inbounds i32, i32* %331, i64 %329
  br label %335

333:                                              ; preds = %325
  %334 = getelementptr inbounds [5 x i32], [5 x i32]* %316, i64 0, i64 %329
  br label %335

335:                                              ; preds = %330, %333
  %336 = phi i32* [ %332, %330 ], [ %334, %333 ]
  %337 = load i32, i32* %336, align 4
  %338 = load i32, i32* %318, align 8
  %339 = icmp sgt i32 %338, 5
  br i1 %339, label %340, label %343

340:                                              ; preds = %335
  %341 = load i32*, i32** %321, align 8
  %342 = getelementptr inbounds i32, i32* %341, i64 %329
  br label %345

343:                                              ; preds = %335
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %345

345:                                              ; preds = %340, %343
  %346 = phi i32* [ %342, %340 ], [ %344, %343 ]
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %337, %347
  br i1 %348, label %349, label %361

349:                                              ; preds = %345
  br i1 %339, label %350, label %353

350:                                              ; preds = %349
  %351 = load i32*, i32** %321, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %329
  br label %355

353:                                              ; preds = %349
  %354 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %355

355:                                              ; preds = %350, %353
  %356 = phi i32* [ %352, %350 ], [ %354, %353 ]
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %326, %357
  store i32 %358, i32* %312, align 4
  %359 = add nsw i32 %328, -1
  %360 = icmp sgt i64 %329, 0
  br i1 %360, label %325, label %363

361:                                              ; preds = %345
  %362 = trunc i64 %329 to i32
  br label %363

363:                                              ; preds = %355, %361, %303
  %364 = phi i32 [ %257, %303 ], [ %362, %361 ], [ %359, %355 ]
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %556

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %369 = bitcast %union.anon* %368 to [5 x i32]*
  %370 = getelementptr inbounds %union.anon, %union.anon* %368, i64 0, i32 0
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %372 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %373 = bitcast %union.anon* %372 to [5 x i32]*
  %374 = getelementptr inbounds %union.anon, %union.anon* %372, i64 0, i32 0
  %375 = sext i32 %364 to i64
  %376 = load i32, i32* %367, align 8
  %377 = icmp sgt i32 %376, 5
  br label %378

378:                                              ; preds = %366, %399
  %379 = phi i32 [ 1, %366 ], [ %402, %399 ]
  %380 = phi i64 [ %375, %366 ], [ %403, %399 ]
  %381 = phi i32 [ %364, %366 ], [ %404, %399 ]
  br i1 %377, label %382, label %385

382:                                              ; preds = %378
  %383 = load i32*, i32** %370, align 8
  %384 = getelementptr inbounds i32, i32* %383, i64 %380
  br label %387

385:                                              ; preds = %378
  %386 = getelementptr inbounds [5 x i32], [5 x i32]* %369, i64 0, i64 %380
  br label %387

387:                                              ; preds = %382, %385
  %388 = phi i32* [ %384, %382 ], [ %386, %385 ]
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 1
  br i1 %390, label %391, label %406

391:                                              ; preds = %387
  %392 = load i32, i32* %371, align 8
  %393 = icmp sgt i32 %392, 5
  br i1 %393, label %394, label %397

394:                                              ; preds = %391
  %395 = load i32*, i32** %374, align 8
  %396 = getelementptr inbounds i32, i32* %395, i64 %380
  br label %399

397:                                              ; preds = %391
  %398 = getelementptr inbounds [5 x i32], [5 x i32]* %373, i64 0, i64 %380
  br label %399

399:                                              ; preds = %394, %397
  %400 = phi i32* [ %396, %394 ], [ %398, %397 ]
  %401 = load i32, i32* %400, align 4
  %402 = mul nsw i32 %379, %401
  store i32 %402, i32* %310, align 4
  %403 = add nsw i64 %380, -1
  %404 = add nsw i32 %381, -1
  %405 = icmp sgt i64 %380, 0
  br i1 %405, label %378, label %408

406:                                              ; preds = %387
  %407 = trunc i64 %380 to i32
  br label %408

408:                                              ; preds = %399, %406
  %409 = phi i32 [ %407, %406 ], [ %404, %399 ]
  %410 = icmp sgt i32 %409, -1
  br i1 %410, label %411, label %556

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %413 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %414 = bitcast %union.anon* %413 to [5 x i32]*
  %415 = getelementptr inbounds %union.anon, %union.anon* %413, i64 0, i32 0
  %416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %418 = bitcast %union.anon* %417 to [5 x i32]*
  %419 = getelementptr inbounds %union.anon, %union.anon* %417, i64 0, i32 0
  %420 = sext i32 %409 to i64
  %421 = load i32, i32* %412, align 8
  %422 = icmp sgt i32 %421, 5
  br label %423

423:                                              ; preds = %411, %452
  %424 = phi i32 [ 1, %411 ], [ %455, %452 ]
  %425 = phi i64 [ %420, %411 ], [ %456, %452 ]
  %426 = phi i32 [ %409, %411 ], [ %457, %452 ]
  br i1 %422, label %427, label %430

427:                                              ; preds = %423
  %428 = load i32*, i32** %415, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 %425
  br label %432

430:                                              ; preds = %423
  %431 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %432

432:                                              ; preds = %427, %430
  %433 = phi i32* [ %429, %427 ], [ %431, %430 ]
  %434 = load i32, i32* %433, align 4
  %435 = load i32, i32* %416, align 8
  %436 = icmp sgt i32 %435, 5
  br i1 %436, label %437, label %440

437:                                              ; preds = %432
  %438 = load i32*, i32** %419, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %425
  br label %442

440:                                              ; preds = %432
  %441 = getelementptr inbounds [5 x i32], [5 x i32]* %418, i64 0, i64 %425
  br label %442

442:                                              ; preds = %437, %440
  %443 = phi i32* [ %439, %437 ], [ %441, %440 ]
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %434, %444
  br i1 %445, label %446, label %459

446:                                              ; preds = %442
  br i1 %422, label %447, label %450

447:                                              ; preds = %446
  %448 = load i32*, i32** %415, align 8
  %449 = getelementptr inbounds i32, i32* %448, i64 %425
  br label %452

450:                                              ; preds = %446
  %451 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %452

452:                                              ; preds = %447, %450
  %453 = phi i32* [ %449, %447 ], [ %451, %450 ]
  %454 = load i32, i32* %453, align 4
  %455 = mul nsw i32 %424, %454
  store i32 %455, i32* %309, align 4
  %456 = add nsw i64 %425, -1
  %457 = add nsw i32 %426, -1
  %458 = icmp sgt i64 %425, 0
  br i1 %458, label %423, label %461

459:                                              ; preds = %442
  %460 = trunc i64 %425 to i32
  br label %461

461:                                              ; preds = %452, %459
  %462 = phi i32 [ %460, %459 ], [ %457, %452 ]
  %463 = icmp sgt i32 %462, -1
  br i1 %463, label %464, label %556

464:                                              ; preds = %461
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %467 = bitcast %union.anon* %466 to [5 x i32]*
  %468 = getelementptr inbounds %union.anon, %union.anon* %466, i64 0, i32 0
  %469 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %470 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %471 = bitcast %union.anon* %470 to [5 x i32]*
  %472 = getelementptr inbounds %union.anon, %union.anon* %470, i64 0, i32 0
  %473 = sext i32 %462 to i64
  %474 = load i32, i32* %465, align 8
  %475 = icmp sgt i32 %474, 5
  br label %476

476:                                              ; preds = %464, %497
  %477 = phi i32 [ 1, %464 ], [ %500, %497 ]
  %478 = phi i64 [ %473, %464 ], [ %501, %497 ]
  %479 = phi i32 [ %462, %464 ], [ %502, %497 ]
  br i1 %475, label %480, label %483

480:                                              ; preds = %476
  %481 = load i32*, i32** %468, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 %478
  br label %485

483:                                              ; preds = %476
  %484 = getelementptr inbounds [5 x i32], [5 x i32]* %467, i64 0, i64 %478
  br label %485

485:                                              ; preds = %480, %483
  %486 = phi i32* [ %482, %480 ], [ %484, %483 ]
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %489, label %504

489:                                              ; preds = %485
  %490 = load i32, i32* %469, align 8
  %491 = icmp sgt i32 %490, 5
  br i1 %491, label %492, label %495

492:                                              ; preds = %489
  %493 = load i32*, i32** %472, align 8
  %494 = getelementptr inbounds i32, i32* %493, i64 %478
  br label %497

495:                                              ; preds = %489
  %496 = getelementptr inbounds [5 x i32], [5 x i32]* %471, i64 0, i64 %478
  br label %497

497:                                              ; preds = %492, %495
  %498 = phi i32* [ %494, %492 ], [ %496, %495 ]
  %499 = load i32, i32* %498, align 4
  %500 = mul nsw i32 %477, %499
  store i32 %500, i32* %308, align 4
  %501 = add nsw i64 %478, -1
  %502 = add nsw i32 %479, -1
  %503 = icmp sgt i64 %478, 0
  br i1 %503, label %476, label %506

504:                                              ; preds = %485
  %505 = trunc i64 %478 to i32
  br label %506

506:                                              ; preds = %497, %504
  %507 = phi i32 [ %505, %504 ], [ %502, %497 ]
  %508 = icmp sgt i32 %507, -1
  br i1 %508, label %509, label %556

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %511 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %512 = bitcast %union.anon* %511 to [5 x i32]*
  %513 = getelementptr inbounds %union.anon, %union.anon* %511, i64 0, i32 0
  %514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %516 = bitcast %union.anon* %515 to [5 x i32]*
  %517 = getelementptr inbounds %union.anon, %union.anon* %515, i64 0, i32 0
  %518 = sext i32 %507 to i64
  %519 = load i32, i32* %510, align 8
  %520 = icmp sgt i32 %519, 5
  br label %521

521:                                              ; preds = %509, %549
  %522 = phi i32 [ 1, %509 ], [ %552, %549 ]
  %523 = phi i64 [ %518, %509 ], [ %553, %549 ]
  br i1 %520, label %524, label %527

524:                                              ; preds = %521
  %525 = load i32*, i32** %513, align 8
  %526 = getelementptr inbounds i32, i32* %525, i64 %523
  br label %529

527:                                              ; preds = %521
  %528 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %523
  br label %529

529:                                              ; preds = %524, %527
  %530 = phi i32* [ %526, %524 ], [ %528, %527 ]
  %531 = load i32, i32* %530, align 4
  %532 = load i32, i32* %514, align 8
  %533 = icmp sgt i32 %532, 5
  br i1 %533, label %534, label %537

534:                                              ; preds = %529
  %535 = load i32*, i32** %517, align 8
  %536 = getelementptr inbounds i32, i32* %535, i64 %523
  br label %539

537:                                              ; preds = %529
  %538 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %539

539:                                              ; preds = %534, %537
  %540 = phi i32* [ %536, %534 ], [ %538, %537 ]
  %541 = load i32, i32* %540, align 4
  %542 = icmp eq i32 %531, %541
  br i1 %542, label %543, label %555

543:                                              ; preds = %539
  br i1 %533, label %544, label %547

544:                                              ; preds = %543
  %545 = load i32*, i32** %517, align 8
  %546 = getelementptr inbounds i32, i32* %545, i64 %523
  br label %549

547:                                              ; preds = %543
  %548 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %549

549:                                              ; preds = %544, %547
  %550 = phi i32* [ %546, %544 ], [ %548, %547 ]
  %551 = load i32, i32* %550, align 4
  %552 = mul nsw i32 %522, %551
  store i32 %552, i32* %307, align 4
  %553 = add nsw i64 %523, -1
  %554 = icmp sgt i64 %523, 0
  br i1 %554, label %521, label %556

555:                                              ; preds = %539
  store i8 4, i8* %13, align 4
  br label %556

556:                                              ; preds = %549, %363, %408, %461, %506, %555, %295, %302, %255
  %557 = phi i1 [ false, %255 ], [ false, %302 ], [ true, %295 ], [ true, %555 ], [ true, %506 ], [ true, %461 ], [ true, %408 ], [ true, %363 ], [ true, %549 ]
  %558 = icmp sgt i32 %241, 5
  br i1 %558, label %559, label %565

559:                                              ; preds = %556
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %565, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #11
  br label %565

565:                                              ; preds = %556, %559, %563
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #12
  %566 = icmp sgt i32 %240, 5
  br i1 %566, label %567, label %573

567:                                              ; preds = %565
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %569 = load i32*, i32** %568, align 8
  %570 = icmp eq i32* %569, null
  br i1 %570, label %573, label %571

571:                                              ; preds = %567
  %572 = bitcast i32* %569 to i8*
  tail call void @_ZdaPv(i8* %572) #11
  br label %573

573:                                              ; preds = %565, %567, %571
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #12
  br i1 %16, label %574, label %580

574:                                              ; preds = %573
  %575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %576 = load i32*, i32** %575, align 8
  %577 = icmp eq i32* %576, null
  br i1 %577, label %580, label %578

578:                                              ; preds = %574
  %579 = bitcast i32* %576 to i8*
  tail call void @_ZdaPv(i8* %579) #11
  br label %580

580:                                              ; preds = %573, %574, %578
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #12
  ret i1 %557
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_Ph(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %"struct.tflite::NdArrayDesc", align 4
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %class.anon.3, align 8
  store i8* %2, i8** %9, align 8
  store i8* %4, i8** %10, align 8
  store i8* %6, i8** %11, align 8
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %18 = bitcast %"struct.tflite::NdArrayDesc"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 40, i1 false)
  %19 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 40, i1 false)
  %20 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %12, %"struct.tflite::NdArrayDesc"* nonnull %13)
  %21 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %22, align 8, !alias.scope !136
  %23 = load i32, i32* %17, align 8, !noalias !136
  %24 = icmp sgt i32 %23, 5
  br i1 %24, label %25, label %26

25:                                               ; preds = %7
  call void @abort() #13, !noalias !136
  unreachable

26:                                               ; preds = %7
  store i32 5, i32* %22, align 8, !alias.scope !136
  %27 = sub i32 5, %23
  %28 = icmp sgt i32 %27, 0
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to [5 x i32]*
  br i1 %28, label %31, label %110

31:                                               ; preds = %26
  %32 = zext i32 %27 to i64
  %33 = icmp ult i32 %27, 8
  br i1 %33, label %103, label %34

34:                                               ; preds = %31
  %35 = and i64 %32, 4294967288
  %36 = add nsw i64 %35, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 7
  %40 = icmp ult i64 %36, 56
  br i1 %40, label %88, label %41

41:                                               ; preds = %34
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %85, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %86, %43 ]
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %44
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !136
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !136
  %50 = or i64 %44, 8
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !136
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !136
  %55 = or i64 %44, 16
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !136
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !136
  %60 = or i64 %44, 24
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !136
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !136
  %65 = or i64 %44, 32
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !136
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !136
  %70 = or i64 %44, 40
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !136
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !136
  %75 = or i64 %44, 48
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !136
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !136
  %80 = or i64 %44, 56
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !136
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !136
  %85 = add i64 %44, 64
  %86 = add i64 %45, -8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %43, !llvm.loop !139

88:                                               ; preds = %43, %34
  %89 = phi i64 [ 0, %34 ], [ %85, %43 ]
  %90 = icmp eq i64 %39, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %88, %91
  %92 = phi i64 [ %98, %91 ], [ %89, %88 ]
  %93 = phi i64 [ %99, %91 ], [ %39, %88 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %92
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %95, align 8, !alias.scope !136
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %97, align 8, !alias.scope !136
  %98 = add i64 %92, 8
  %99 = add i64 %93, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %91, !llvm.loop !140

101:                                              ; preds = %91, %88
  %102 = icmp eq i64 %35, %32
  br i1 %102, label %110, label %103

103:                                              ; preds = %101, %31
  %104 = phi i64 [ 0, %31 ], [ %35, %101 ]
  br label %105

105:                                              ; preds = %103, %105
  %106 = phi i64 [ %108, %105 ], [ %104, %103 ]
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %106
  store i32 1, i32* %107, align 4, !alias.scope !136
  %108 = add nuw nsw i64 %106, 1
  %109 = icmp eq i64 %108, %32
  br i1 %109, label %110, label %105, !llvm.loop !141

110:                                              ; preds = %105, %101, %26
  %111 = getelementptr inbounds %union.anon, %union.anon* %29, i64 0, i32 0
  %112 = bitcast %union.anon* %29 to i32*
  %113 = sext i32 %27 to i64
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  %115 = bitcast i32* %114 to i8*
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to i8*
  %118 = sext i32 %23 to i64
  %119 = shl nsw i64 %118, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %117, i64 %119, i1 false) #12
  %120 = load i32, i32* %22, align 8
  %121 = icmp sgt i32 %120, 5
  %122 = load i32*, i32** %111, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 4
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 8
  %125 = bitcast i8* %124 to i32*
  %126 = select i1 %121, i32* %123, i32* %125
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 4
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 4
  store i32 1, i32* %129, align 4
  %130 = load i32, i32* %126, align 4
  %131 = getelementptr inbounds i32, i32* %122, i64 3
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 4
  %133 = bitcast i8* %132 to i32*
  %134 = select i1 %121, i32* %131, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 3
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 3
  store i32 %130, i32* %137, align 4
  %138 = load i32, i32* %134, align 4
  %139 = mul nsw i32 %138, %130
  %140 = getelementptr inbounds i32, i32* %122, i64 2
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1
  %142 = bitcast [16 x i8]* %141 to i32*
  %143 = select i1 %121, i32* %140, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 2
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 2
  store i32 %139, i32* %146, align 4
  %147 = load i32, i32* %143, align 4
  %148 = mul nsw i32 %147, %139
  %149 = getelementptr inbounds i32, i32* %122, i64 1
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 1
  %151 = select i1 %121, i32* %149, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 1
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 1
  store i32 %148, i32* %154, align 4
  %155 = load i32, i32* %151, align 4
  %156 = mul nsw i32 %155, %148
  %157 = select i1 %121, i32* %122, i32* %112
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 0
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 0
  store i32 %156, i32* %160, align 4
  %161 = xor i1 %121, true
  %162 = icmp eq i32* %122, null
  %163 = or i1 %162, %161
  br i1 %163, label %167, label %164

164:                                              ; preds = %110
  %165 = bitcast i32* %122 to i8*
  call void @_ZdaPv(i8* %165) #11
  %166 = load i32, i32* %159, align 4
  br label %167

167:                                              ; preds = %110, %164
  %168 = phi i32 [ %158, %110 ], [ %166, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #12
  %169 = bitcast %class.anon.3* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %169) #12
  %170 = getelementptr inbounds %class.anon.3, %class.anon.3* %16, i64 0, i32 0
  store %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"** %170, align 8
  %171 = getelementptr inbounds %class.anon.3, %class.anon.3* %16, i64 0, i32 1
  store i8** %9, i8*** %171, align 8
  %172 = getelementptr inbounds %class.anon.3, %class.anon.3* %16, i64 0, i32 2
  store %"struct.tflite::NdArrayDesc"* %12, %"struct.tflite::NdArrayDesc"** %172, align 8
  %173 = getelementptr inbounds %class.anon.3, %class.anon.3* %16, i64 0, i32 3
  store i8** %10, i8*** %173, align 8
  %174 = getelementptr inbounds %class.anon.3, %class.anon.3* %16, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %174, align 8
  %175 = getelementptr inbounds %class.anon.3, %class.anon.3* %16, i64 0, i32 5
  store i8** %11, i8*** %175, align 8
  %176 = getelementptr inbounds %class.anon.3, %class.anon.3* %16, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %176, align 8
  %177 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %177) #12
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  %179 = icmp sgt i32 %168, 0
  %180 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %180, i8 0, i64 20, i1 false)
  br i1 %179, label %181, label %247

181:                                              ; preds = %167
  %182 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 1
  %183 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 2
  %184 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 3
  %185 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 4
  %186 = load i32, i32* %153, align 4
  br label %187

187:                                              ; preds = %240, %181
  %188 = phi i32 [ %168, %181 ], [ %241, %240 ]
  %189 = phi i32 [ %186, %181 ], [ %242, %240 ]
  %190 = phi i32 [ %186, %181 ], [ %243, %240 ]
  %191 = phi i32 [ 0, %181 ], [ %245, %240 ]
  store i32 0, i32* %182, align 4
  %192 = icmp sgt i32 %190, 0
  br i1 %192, label %193, label %240

193:                                              ; preds = %187, %232
  %194 = phi i32 [ %233, %232 ], [ %189, %187 ]
  %195 = phi i32 [ %235, %232 ], [ 0, %187 ]
  store i32 0, i32* %183, align 8
  %196 = load i32, i32* %145, align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %232

198:                                              ; preds = %193, %224
  %199 = phi i32 [ %225, %224 ], [ %196, %193 ]
  %200 = phi i32 [ %227, %224 ], [ 0, %193 ]
  store i32 0, i32* %184, align 4
  %201 = load i32, i32* %136, align 4
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %224

203:                                              ; preds = %198, %216
  %204 = phi i32 [ %217, %216 ], [ %201, %198 ]
  %205 = phi i32 [ %219, %216 ], [ 0, %198 ]
  store i32 0, i32* %185, align 16
  %206 = load i32, i32* %128, align 4
  %207 = icmp sgt i32 %206, 0
  br i1 %207, label %208, label %216

208:                                              ; preds = %203, %208
  call void @_ZZN6tflite13reference_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_PhENKUlPiE_clESB_(%class.anon.3* nonnull %16, i32* nonnull %178) #12
  %209 = load i32, i32* %185, align 16
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %185, align 16
  %211 = load i32, i32* %128, align 4
  %212 = icmp slt i32 %210, %211
  br i1 %212, label %208, label %213

213:                                              ; preds = %208
  %214 = load i32, i32* %184, align 4
  %215 = load i32, i32* %136, align 4
  br label %216

216:                                              ; preds = %213, %203
  %217 = phi i32 [ %215, %213 ], [ %204, %203 ]
  %218 = phi i32 [ %214, %213 ], [ %205, %203 ]
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %184, align 4
  %220 = icmp slt i32 %219, %217
  br i1 %220, label %203, label %221

221:                                              ; preds = %216
  %222 = load i32, i32* %183, align 8
  %223 = load i32, i32* %145, align 4
  br label %224

224:                                              ; preds = %221, %198
  %225 = phi i32 [ %223, %221 ], [ %199, %198 ]
  %226 = phi i32 [ %222, %221 ], [ %200, %198 ]
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %183, align 8
  %228 = icmp slt i32 %227, %225
  br i1 %228, label %198, label %229

229:                                              ; preds = %224
  %230 = load i32, i32* %182, align 4
  %231 = load i32, i32* %153, align 4
  br label %232

232:                                              ; preds = %229, %193
  %233 = phi i32 [ %231, %229 ], [ %194, %193 ]
  %234 = phi i32 [ %230, %229 ], [ %195, %193 ]
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %182, align 4
  %236 = icmp slt i32 %235, %233
  br i1 %236, label %193, label %237

237:                                              ; preds = %232
  %238 = load i32, i32* %178, align 16
  %239 = load i32, i32* %159, align 4
  br label %240

240:                                              ; preds = %237, %187
  %241 = phi i32 [ %239, %237 ], [ %188, %187 ]
  %242 = phi i32 [ %233, %237 ], [ %189, %187 ]
  %243 = phi i32 [ %233, %237 ], [ %190, %187 ]
  %244 = phi i32 [ %238, %237 ], [ %191, %187 ]
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %178, align 16
  %246 = icmp slt i32 %245, %241
  br i1 %246, label %187, label %247

247:                                              ; preds = %240, %167
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %177) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %169) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN6tflite13reference_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_PhENKUlPiE_clESB_(%class.anon.3*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %class.anon.3, %class.anon.3* %0, i64 0, i32 0
  %4 = load %"struct.tflite::ArithmeticParams"*, %"struct.tflite::ArithmeticParams"** %3, align 8
  %5 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.anon.3, %class.anon.3* %0, i64 0, i32 1
  %8 = load i8**, i8*** %7, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %class.anon.3, %class.anon.3* %0, i64 0, i32 2
  %11 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %10, align 8
  %12 = load i32, i32* %1, align 4
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = mul nsw i32 %14, %12
  %16 = getelementptr inbounds i32, i32* %1, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = mul nsw i32 %19, %17
  %21 = add nsw i32 %20, %15
  %22 = getelementptr inbounds i32, i32* %1, i64 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 2
  %25 = load i32, i32* %24, align 4
  %26 = mul nsw i32 %25, %23
  %27 = add nsw i32 %21, %26
  %28 = getelementptr inbounds i32, i32* %1, i64 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 3
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %31, %29
  %33 = add nsw i32 %27, %32
  %34 = getelementptr inbounds i32, i32* %1, i64 4
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 4
  %37 = load i32, i32* %36, align 4
  %38 = mul nsw i32 %37, %35
  %39 = add nsw i32 %33, %38
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %9, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = add nsw i32 %6, %43
  %45 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %4, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.anon.3, %class.anon.3* %0, i64 0, i32 3
  %48 = load i8**, i8*** %47, align 8
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %class.anon.3, %class.anon.3* %0, i64 0, i32 4
  %51 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %50, align 8
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 0
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %12
  %55 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 1
  %56 = load i32, i32* %55, align 4
  %57 = mul nsw i32 %56, %17
  %58 = add nsw i32 %57, %54
  %59 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 2
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %60, %23
  %62 = add nsw i32 %58, %61
  %63 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 3
  %64 = load i32, i32* %63, align 4
  %65 = mul nsw i32 %64, %29
  %66 = add nsw i32 %62, %65
  %67 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 4
  %68 = load i32, i32* %67, align 4
  %69 = mul nsw i32 %68, %35
  %70 = add nsw i32 %66, %69
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %49, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = add nsw i32 %46, %74
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %2
  %78 = tail call i32 @llvm.ctlz.i32(i32 %75, i1 false) #12, !range !142
  %79 = shl i32 %75, %78
  %80 = xor i32 %79, -2147483648
  %81 = tail call i32 @_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_(i32 %80) #12
  br label %89

82:                                               ; preds = %2
  %83 = sub nsw i32 0, %75
  %84 = tail call i32 @llvm.ctlz.i32(i32 %83, i1 false) #12, !range !142
  %85 = shl i32 %83, %84
  %86 = xor i32 %85, -2147483648
  %87 = tail call i32 @_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_(i32 %86) #12
  %88 = sub nsw i32 0, %87
  br label %89

89:                                               ; preds = %82, %77
  %90 = phi i32 [ %78, %77 ], [ %84, %82 ]
  %91 = phi i32 [ %81, %77 ], [ %88, %82 ]
  %92 = icmp sgt i32 %44, -1
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 false) #12, !range !142
  %95 = add nsw i32 %94, -1
  br label %102

96:                                               ; preds = %89
  %97 = icmp eq i32 %44, -2147483648
  br i1 %97, label %102, label %98

98:                                               ; preds = %96
  %99 = shl i32 %44, 1
  %100 = xor i32 %99, -1
  %101 = tail call i32 @llvm.ctlz.i32(i32 %100, i1 true) #12, !range !142
  br label %102

102:                                              ; preds = %93, %96, %98
  %103 = phi i32 [ %95, %93 ], [ %101, %98 ], [ 0, %96 ]
  %104 = shl i32 %44, %103
  %105 = icmp eq i32 %104, %91
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = sext i32 %104 to i64
  %108 = sext i32 %91 to i64
  %109 = mul nsw i64 %107, %108
  br label %114

110:                                              ; preds = %102
  %111 = icmp eq i32 %91, -2147483648
  %112 = sext i32 %91 to i64
  %113 = mul nsw i64 %112, %112
  br i1 %111, label %121, label %114

114:                                              ; preds = %110, %106
  %115 = phi i64 [ %109, %106 ], [ %113, %110 ]
  %116 = icmp sgt i64 %115, -1
  %117 = select i1 %116, i64 1073741824, i64 -1073741823
  %118 = add nsw i64 %117, %115
  %119 = sdiv i64 %118, 2147483648
  %120 = trunc i64 %119 to i32
  br label %121

121:                                              ; preds = %110, %114
  %122 = phi i32 [ %120, %114 ], [ 2147483647, %110 ]
  %123 = load %"struct.tflite::ArithmeticParams"*, %"struct.tflite::ArithmeticParams"** %3, align 8
  %124 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 5
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 4
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %122, %129
  br i1 %130, label %135, label %131

131:                                              ; preds = %121
  %132 = sext i32 %122 to i64
  %133 = sext i32 %129 to i64
  %134 = mul nsw i64 %133, %132
  br label %139

135:                                              ; preds = %121
  %136 = icmp eq i32 %122, -2147483648
  %137 = sext i32 %122 to i64
  %138 = mul nsw i64 %137, %137
  br i1 %136, label %146, label %139

139:                                              ; preds = %135, %131
  %140 = phi i64 [ %134, %131 ], [ %138, %135 ]
  %141 = icmp sgt i64 %140, -1
  %142 = select i1 %141, i64 1073741824, i64 -1073741823
  %143 = add nsw i64 %142, %140
  %144 = sdiv i64 %143, 2147483648
  %145 = trunc i64 %144 to i32
  br label %146

146:                                              ; preds = %135, %139
  %147 = phi i32 [ %145, %139 ], [ 2147483647, %135 ]
  %148 = sub nsw i32 31, %90
  %149 = add nsw i32 %148, %103
  %150 = sub i32 %149, %125
  %151 = zext i32 %150 to i64
  %152 = shl nsw i64 -1, %151
  %153 = trunc i64 %152 to i32
  %154 = xor i32 %153, -1
  %155 = and i32 %147, %154
  %156 = ashr i32 %154, 1
  %157 = lshr i32 %147, 31
  %158 = add nsw i32 %157, %156
  %159 = ashr i32 %147, %150
  %160 = icmp sgt i32 %155, %158
  %161 = zext i1 %160 to i32
  %162 = add i32 %159, %127
  %163 = add i32 %162, %161
  %164 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 12
  %165 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 11
  %166 = load i32, i32* %165, align 4
  %167 = icmp slt i32 %166, %163
  %168 = select i1 %167, i32 %163, i32 %166
  %169 = load i32, i32* %164, align 4
  %170 = icmp slt i32 %168, %169
  %171 = select i1 %170, i32 %168, i32 %169
  %172 = trunc i32 %171 to i8
  %173 = getelementptr inbounds %class.anon.3, %class.anon.3* %0, i64 0, i32 5
  %174 = load i8**, i8*** %173, align 8
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds %class.anon.3, %class.anon.3* %0, i64 0, i32 6
  %177 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %176, align 8
  %178 = load i32, i32* %1, align 4
  %179 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 0
  %180 = load i32, i32* %179, align 4
  %181 = mul nsw i32 %180, %178
  %182 = load i32, i32* %16, align 4
  %183 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 1
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, %182
  %186 = add nsw i32 %185, %181
  %187 = load i32, i32* %22, align 4
  %188 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 2
  %189 = load i32, i32* %188, align 4
  %190 = mul nsw i32 %189, %187
  %191 = add nsw i32 %186, %190
  %192 = load i32, i32* %28, align 4
  %193 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = mul nsw i32 %194, %192
  %196 = add nsw i32 %191, %195
  %197 = load i32, i32* %34, align 4
  %198 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 4
  %199 = load i32, i32* %198, align 4
  %200 = mul nsw i32 %199, %197
  %201 = add nsw i32 %196, %200
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i8, i8* %175, i64 %202
  store i8 %172, i8* %203, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_(i32) local_unnamed_addr #3 comdat {
  %2 = sext i32 %0 to i64
  %3 = add nsw i64 %2, 2147483647
  %4 = icmp sgt i64 %3, -1
  %5 = select i1 %4, i64 1, i64 -1
  %6 = add nsw i64 %5, %3
  %7 = sdiv i64 %6, 2
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %8, -1010580540
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  br i1 %9, label %15, label %12

12:                                               ; preds = %1
  %13 = mul nsw i64 %11, -1010580540
  %14 = icmp slt i64 %10, 4294967296
  br i1 %14, label %15, label %17

15:                                               ; preds = %1, %12
  %16 = phi i64 [ %13, %12 ], [ 1021273027826691600, %1 ]
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i64 [ %16, %15 ], [ %13, %12 ]
  %19 = phi i64 [ 1073741824, %15 ], [ -1073741823, %12 ]
  %20 = add nsw i64 %19, %18
  %21 = sdiv i64 %20, 2147483648
  %22 = trunc i64 %21 to i32
  %23 = add nsw i32 %22, 1515870810
  %24 = mul nsw i64 %11, %11
  %25 = icmp eq i32 %23, %8
  %26 = sext i32 %23 to i64
  %27 = mul nsw i64 %11, %26
  %28 = select i1 %25, i64 %24, i64 %27
  %29 = icmp sgt i64 %28, -1
  %30 = select i1 %29, i64 1073741824, i64 -1073741823
  %31 = add nsw i64 %30, %28
  %32 = sdiv i64 %31, 2147483648
  %33 = trunc i64 %32 to i32
  %34 = sub i32 536870912, %33
  %35 = icmp eq i32 %23, %34
  %36 = sext i32 %23 to i64
  %37 = sext i32 %34 to i64
  %38 = select i1 %35, i64 %36, i64 %37
  %39 = mul nsw i64 %38, %36
  %40 = icmp sgt i64 %39, -1
  %41 = select i1 %40, i64 1073741824, i64 -1073741823
  %42 = add nsw i64 %41, %39
  %43 = sdiv i64 %42, 2147483648
  %44 = trunc i64 %43 to i32
  %45 = icmp slt i32 %44, 536870912
  %46 = icmp sgt i32 %44, -536870912
  %47 = shl i64 %43, 32
  %48 = ashr exact i64 %47, 30
  %49 = icmp slt i64 %48, 2147483647
  %50 = select i1 %49, i64 %48, i64 2147483647
  %51 = icmp sgt i64 %50, -2147483648
  %52 = select i1 %51, i64 %50, i64 -2147483648
  %53 = trunc i64 %52 to i32
  %54 = select i1 %45, i32 %53, i32 2147483647
  %55 = select i1 %46, i32 %54, i32 -2147483648
  %56 = add nsw i32 %55, %23
  %57 = icmp eq i32 %56, %8
  %58 = sext i32 %56 to i64
  %59 = mul nsw i64 %11, %58
  %60 = select i1 %57, i64 %24, i64 %59
  %61 = icmp sgt i64 %60, -1
  %62 = select i1 %61, i64 1073741824, i64 -1073741823
  %63 = add nsw i64 %62, %60
  %64 = sdiv i64 %63, 2147483648
  %65 = trunc i64 %64 to i32
  %66 = sub i32 536870912, %65
  %67 = icmp eq i32 %56, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %17
  %69 = sext i32 %56 to i64
  %70 = sext i32 %66 to i64
  %71 = mul nsw i64 %70, %69
  br label %76

72:                                               ; preds = %17
  %73 = icmp eq i32 %56, -2147483648
  %74 = sext i32 %56 to i64
  %75 = mul nsw i64 %74, %74
  br i1 %73, label %83, label %76

76:                                               ; preds = %72, %68
  %77 = phi i64 [ %71, %68 ], [ %75, %72 ]
  %78 = icmp sgt i64 %77, -1
  %79 = select i1 %78, i64 1073741824, i64 -1073741823
  %80 = add nsw i64 %79, %77
  %81 = sdiv i64 %80, 2147483648
  %82 = trunc i64 %81 to i32
  br label %83

83:                                               ; preds = %76, %72
  %84 = phi i32 [ %82, %76 ], [ 2147483647, %72 ]
  %85 = icmp slt i32 %84, 536870912
  %86 = icmp sgt i32 %84, -536870912
  %87 = sext i32 %84 to i64
  %88 = shl nsw i64 %87, 2
  %89 = icmp slt i64 %88, 2147483647
  %90 = select i1 %89, i64 %88, i64 2147483647
  %91 = icmp sgt i64 %90, -2147483648
  %92 = select i1 %91, i64 %90, i64 -2147483648
  %93 = trunc i64 %92 to i32
  %94 = select i1 %85, i32 %93, i32 2147483647
  %95 = select i1 %86, i32 %94, i32 -2147483648
  %96 = add nsw i32 %95, %56
  %97 = icmp eq i32 %96, %8
  %98 = sext i32 %96 to i64
  %99 = mul nsw i64 %11, %98
  %100 = select i1 %97, i64 %24, i64 %99
  %101 = icmp sgt i64 %100, -1
  %102 = select i1 %101, i64 1073741824, i64 -1073741823
  %103 = add nsw i64 %102, %100
  %104 = sdiv i64 %103, 2147483648
  %105 = trunc i64 %104 to i32
  %106 = sub i32 536870912, %105
  %107 = icmp eq i32 %96, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %83
  %109 = sext i32 %96 to i64
  %110 = sext i32 %106 to i64
  %111 = mul nsw i64 %110, %109
  br label %116

112:                                              ; preds = %83
  %113 = icmp eq i32 %96, -2147483648
  %114 = sext i32 %96 to i64
  %115 = mul nsw i64 %114, %114
  br i1 %113, label %123, label %116

116:                                              ; preds = %112, %108
  %117 = phi i64 [ %111, %108 ], [ %115, %112 ]
  %118 = icmp sgt i64 %117, -1
  %119 = select i1 %118, i64 1073741824, i64 -1073741823
  %120 = add nsw i64 %119, %117
  %121 = sdiv i64 %120, 2147483648
  %122 = trunc i64 %121 to i32
  br label %123

123:                                              ; preds = %116, %112
  %124 = phi i32 [ %122, %116 ], [ 2147483647, %112 ]
  %125 = icmp slt i32 %124, 536870912
  %126 = icmp sgt i32 %124, -536870912
  %127 = sext i32 %124 to i64
  %128 = shl nsw i64 %127, 2
  %129 = icmp slt i64 %128, 2147483647
  %130 = select i1 %129, i64 %128, i64 2147483647
  %131 = icmp sgt i64 %130, -2147483648
  %132 = select i1 %131, i64 %130, i64 -2147483648
  %133 = trunc i64 %132 to i32
  %134 = select i1 %125, i32 %133, i32 2147483647
  %135 = select i1 %126, i32 %134, i32 -2147483648
  %136 = add nsw i32 %135, %96
  %137 = icmp slt i32 %136, 1073741824
  %138 = icmp sgt i32 %136, -1073741824
  %139 = sext i32 %136 to i64
  %140 = shl nsw i64 %139, 1
  %141 = icmp slt i64 %140, 2147483647
  %142 = select i1 %141, i64 %140, i64 2147483647
  %143 = icmp sgt i64 %142, -2147483648
  %144 = select i1 %143, i64 %142, i64 -2147483648
  %145 = trunc i64 %144 to i32
  %146 = select i1 %137, i32 %145, i32 2147483647
  %147 = select i1 %138, i32 %146, i32 -2147483648
  ret i32 %147
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14DivElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32, %"struct.tflite::ArithmeticParams"* dereferenceable(80), i8*, i8*, i8*) local_unnamed_addr #7 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 3
  %9 = icmp sgt i32 %0, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 12
  %14 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 11
  %15 = zext i32 %0 to i64
  br label %17

16:                                               ; preds = %95, %5
  ret void

17:                                               ; preds = %95, %10
  %18 = phi i64 [ 0, %10 ], [ %121, %95 ]
  %19 = load i32, i32* %6, align 4
  %20 = getelementptr inbounds i8, i8* %2, i64 %18
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = add nsw i32 %19, %22
  %24 = load i32, i32* %7, align 4
  %25 = getelementptr inbounds i8, i8* %3, i64 %18
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %24, %27
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %17
  %31 = tail call i32 @llvm.ctlz.i32(i32 %28, i1 false) #12, !range !142
  %32 = shl i32 %28, %31
  %33 = xor i32 %32, -2147483648
  %34 = tail call i32 @_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_(i32 %33) #12
  br label %42

35:                                               ; preds = %17
  %36 = sub nsw i32 0, %28
  %37 = tail call i32 @llvm.ctlz.i32(i32 %36, i1 false) #12, !range !142
  %38 = shl i32 %36, %37
  %39 = xor i32 %38, -2147483648
  %40 = tail call i32 @_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_(i32 %39) #12
  %41 = sub nsw i32 0, %40
  br label %42

42:                                               ; preds = %35, %30
  %43 = phi i32 [ %31, %30 ], [ %37, %35 ]
  %44 = phi i32 [ %34, %30 ], [ %41, %35 ]
  %45 = icmp sgt i32 %23, -1
  br i1 %45, label %46, label %49

46:                                               ; preds = %42
  %47 = tail call i32 @llvm.ctlz.i32(i32 %23, i1 false) #12, !range !142
  %48 = add nsw i32 %47, -1
  br label %55

49:                                               ; preds = %42
  %50 = icmp eq i32 %23, -2147483648
  br i1 %50, label %55, label %51

51:                                               ; preds = %49
  %52 = shl i32 %23, 1
  %53 = xor i32 %52, -1
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #12, !range !142
  br label %55

55:                                               ; preds = %46, %49, %51
  %56 = phi i32 [ %48, %46 ], [ %54, %51 ], [ 0, %49 ]
  %57 = shl i32 %23, %56
  %58 = icmp eq i32 %57, %44
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = sext i32 %57 to i64
  %61 = sext i32 %44 to i64
  %62 = mul nsw i64 %60, %61
  br label %67

63:                                               ; preds = %55
  %64 = icmp eq i32 %44, -2147483648
  %65 = sext i32 %44 to i64
  %66 = mul nsw i64 %65, %65
  br i1 %64, label %74, label %67

67:                                               ; preds = %63, %59
  %68 = phi i64 [ %62, %59 ], [ %66, %63 ]
  %69 = icmp sgt i64 %68, -1
  %70 = select i1 %69, i64 1073741824, i64 -1073741823
  %71 = add nsw i64 %70, %68
  %72 = sdiv i64 %71, 2147483648
  %73 = trunc i64 %72 to i32
  br label %74

74:                                               ; preds = %63, %67
  %75 = phi i32 [ %73, %67 ], [ 2147483647, %63 ]
  %76 = load i32, i32* %11, align 4
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %12, align 4
  %79 = icmp eq i32 %75, %78
  br i1 %79, label %84, label %80

80:                                               ; preds = %74
  %81 = sext i32 %75 to i64
  %82 = sext i32 %78 to i64
  %83 = mul nsw i64 %82, %81
  br label %88

84:                                               ; preds = %74
  %85 = icmp eq i32 %75, -2147483648
  %86 = sext i32 %75 to i64
  %87 = mul nsw i64 %86, %86
  br i1 %85, label %95, label %88

88:                                               ; preds = %84, %80
  %89 = phi i64 [ %83, %80 ], [ %87, %84 ]
  %90 = icmp sgt i64 %89, -1
  %91 = select i1 %90, i64 1073741824, i64 -1073741823
  %92 = add nsw i64 %91, %89
  %93 = sdiv i64 %92, 2147483648
  %94 = trunc i64 %93 to i32
  br label %95

95:                                               ; preds = %84, %88
  %96 = phi i32 [ %94, %88 ], [ 2147483647, %84 ]
  %97 = sub nsw i32 31, %43
  %98 = add nsw i32 %97, %56
  %99 = sub i32 %98, %76
  %100 = zext i32 %99 to i64
  %101 = shl nsw i64 -1, %100
  %102 = trunc i64 %101 to i32
  %103 = xor i32 %102, -1
  %104 = and i32 %96, %103
  %105 = ashr i32 %103, 1
  %106 = lshr i32 %96, 31
  %107 = add nsw i32 %106, %105
  %108 = ashr i32 %96, %99
  %109 = icmp sgt i32 %104, %107
  %110 = zext i1 %109 to i32
  %111 = add i32 %108, %77
  %112 = add i32 %111, %110
  %113 = load i32, i32* %14, align 4
  %114 = icmp slt i32 %113, %112
  %115 = select i1 %114, i32 %112, i32 %113
  %116 = load i32, i32* %13, align 4
  %117 = icmp slt i32 %115, %116
  %118 = select i1 %117, i32 %115, i32 %116
  %119 = trunc i32 %118 to i8
  %120 = getelementptr inbounds i8, i8* %4, i64 %18
  store i8 %119, i8* %120, align 1
  %121 = add nuw nsw i64 %18, 1
  %122 = icmp eq i64 %121, %15
  br i1 %122, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteDivParams*, %"struct.tflite::ops::builtin::div::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::ArithmeticParams", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %1436 [
    i32 2, label %24
    i32 1, label %669
  ]

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %175, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %30 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = sext i32 %32 to i64
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %32 to i64
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.39, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %28, %34
  %42 = phi i32 [ %37, %34 ], [ -2147483648, %28 ]
  %43 = phi i32 [ %40, %34 ], [ 2147483647, %28 ]
  %44 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %43, i32* %45, align 4
  %46 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #12
  %47 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %49, align 8, !alias.scope !143
  br label %77

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %52 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8, !noalias !143
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4, !noalias !143
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 0
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %54, i32* %56, align 8, !alias.scope !143
  %57 = icmp sgt i32 %54, 5
  br i1 %57, label %58, label %65

58:                                               ; preds = %50
  %59 = sext i32 %54 to i64
  %60 = shl nsw i64 %59, 2
  %61 = tail call i8* @_Znam(i64 %60) #11, !noalias !143
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %63 = bitcast i32** %62 to i8**
  store i8* %61, i8** %63, align 8, !alias.scope !143
  %64 = bitcast i8* %61 to i32*
  br label %70

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %67 = bitcast %union.anon* %66 to i32*
  %68 = sext i32 %54 to i64
  %69 = shl nsw i64 %68, 2
  br label %70

70:                                               ; preds = %65, %58
  %71 = phi i64 [ %60, %58 ], [ %69, %65 ]
  %72 = phi i32* [ %64, %58 ], [ %67, %65 ]
  %73 = bitcast i32* %72 to i8*
  %74 = bitcast i32* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 %71, i1 false) #12
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %76 = load i32*, i32** %75, align 8
  br label %77

77:                                               ; preds = %48, %70
  %78 = phi i32* [ %76, %70 ], [ null, %48 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #12
  %80 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !146
  br label %110

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !146
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !146
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !146
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #11, !noalias !146
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !146
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #12
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %109 = load i32*, i32** %108, align 8
  br label %110

110:                                              ; preds = %81, %103
  %111 = phi i32* [ %109, %103 ], [ null, %81 ]
  %112 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #12
  %113 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !149
  br label %143

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %117, align 8, !noalias !149
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 4, !noalias !149
  %121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %120, i32* %122, align 8, !alias.scope !149
  %123 = icmp sgt i32 %120, 5
  br i1 %123, label %124, label %131

124:                                              ; preds = %116
  %125 = sext i32 %120 to i64
  %126 = shl nsw i64 %125, 2
  %127 = tail call i8* @_Znam(i64 %126) #11, !noalias !149
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %129 = bitcast i32** %128 to i8**
  store i8* %127, i8** %129, align 8, !alias.scope !149
  %130 = bitcast i8* %127 to i32*
  br label %136

131:                                              ; preds = %116
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %133 = bitcast %union.anon* %132 to i32*
  %134 = sext i32 %120 to i64
  %135 = shl nsw i64 %134, 2
  br label %136

136:                                              ; preds = %131, %124
  %137 = phi i64 [ %126, %124 ], [ %135, %131 ]
  %138 = phi i32* [ %130, %124 ], [ %133, %131 ]
  %139 = bitcast i32* %138 to i8*
  %140 = bitcast i32* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 %137, i1 false) #12
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %142 = load i32*, i32** %141, align 8
  br label %143

143:                                              ; preds = %114, %136
  %144 = phi i32* [ %142, %136 ], [ null, %114 ]
  call void @_ZN6tflite13optimized_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %111, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %144)
  %145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = icmp sgt i32 %146, 5
  br i1 %147, label %148, label %154

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = icmp eq i32* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = bitcast i32* %150 to i8*
  call void @_ZdaPv(i8* %153) #11
  br label %154

154:                                              ; preds = %143, %148, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #12
  %155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp sgt i32 %156, 5
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = bitcast i32* %160 to i8*
  call void @_ZdaPv(i8* %163) #11
  br label %164

164:                                              ; preds = %154, %158, %162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #12
  %165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = icmp sgt i32 %166, 5
  br i1 %167, label %168, label %174

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %170 = load i32*, i32** %169, align 8
  %171 = icmp eq i32* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %168
  %173 = bitcast i32* %170 to i8*
  call void @_ZdaPv(i8* %173) #11
  br label %174

174:                                              ; preds = %164, %168, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #12
  br label %1436

175:                                              ; preds = %24
  %176 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, -1
  %179 = icmp ult i32 %178, 3
  br i1 %179, label %180, label %187

180:                                              ; preds = %175
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %181
  %183 = load float, float* %182, align 4
  %184 = sext i32 %178 to i64
  %185 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.41, i64 0, i64 %184
  %186 = load float, float* %185, align 4
  br label %187

187:                                              ; preds = %175, %180
  %188 = phi float [ %183, %180 ], [ 0xC1E0000000000000, %175 ]
  %189 = phi float [ %186, %180 ], [ 0x41E0000000000000, %175 ]
  %190 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #12
  %191 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %191, label %192, label %194

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %193, align 8, !alias.scope !152
  br label %221

194:                                              ; preds = %187
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %196 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %195, align 8, !noalias !152
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 0
  %198 = load i32, i32* %197, align 4, !noalias !152
  %199 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 0
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %198, i32* %200, align 8, !alias.scope !152
  %201 = icmp sgt i32 %198, 5
  br i1 %201, label %202, label %209

202:                                              ; preds = %194
  %203 = sext i32 %198 to i64
  %204 = shl nsw i64 %203, 2
  %205 = tail call i8* @_Znam(i64 %204) #11, !noalias !152
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %207 = bitcast i32** %206 to i8**
  store i8* %205, i8** %207, align 8, !alias.scope !152
  %208 = bitcast i8* %205 to i32*
  br label %214

209:                                              ; preds = %194
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %211 = bitcast %union.anon* %210 to i32*
  %212 = sext i32 %198 to i64
  %213 = shl nsw i64 %212, 2
  br label %214

214:                                              ; preds = %209, %202
  %215 = phi i64 [ %204, %202 ], [ %213, %209 ]
  %216 = phi i32* [ %208, %202 ], [ %211, %209 ]
  %217 = bitcast i32* %216 to i8*
  %218 = bitcast i32* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %215, i1 false) #12
  %219 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %220 = load i32*, i32** %219, align 8
  br label %221

221:                                              ; preds = %192, %214
  %222 = phi i32 [ %198, %214 ], [ 0, %192 ]
  %223 = phi i32* [ %220, %214 ], [ null, %192 ]
  %224 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %224) #12
  %225 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !155
  br label %255

228:                                              ; preds = %221
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %230 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %229, align 8, !noalias !155
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4, !noalias !155
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 1, i64 0
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %232, i32* %234, align 8, !alias.scope !155
  %235 = icmp sgt i32 %232, 5
  br i1 %235, label %236, label %243

236:                                              ; preds = %228
  %237 = sext i32 %232 to i64
  %238 = shl nsw i64 %237, 2
  %239 = tail call i8* @_Znam(i64 %238) #11, !noalias !155
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %241 = bitcast i32** %240 to i8**
  store i8* %239, i8** %241, align 8, !alias.scope !155
  %242 = bitcast i8* %239 to i32*
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %245 = bitcast %union.anon* %244 to i32*
  %246 = sext i32 %232 to i64
  %247 = shl nsw i64 %246, 2
  br label %248

248:                                              ; preds = %243, %236
  %249 = phi i64 [ %238, %236 ], [ %247, %243 ]
  %250 = phi i32* [ %242, %236 ], [ %245, %243 ]
  %251 = bitcast i32* %250 to i8*
  %252 = bitcast i32* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %249, i1 false) #12
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %254 = load i32*, i32** %253, align 8
  br label %255

255:                                              ; preds = %226, %248
  %256 = phi i32 [ %232, %248 ], [ 0, %226 ]
  %257 = phi i32* [ %254, %248 ], [ null, %226 ]
  %258 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %258) #12
  %259 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %261, align 8, !alias.scope !158
  br label %289

262:                                              ; preds = %255
  %263 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %264 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %263, align 8, !noalias !158
  %265 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %264, i64 0, i32 0
  %266 = load i32, i32* %265, align 4, !noalias !158
  %267 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %264, i64 0, i32 1, i64 0
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %266, i32* %268, align 8, !alias.scope !158
  %269 = icmp sgt i32 %266, 5
  br i1 %269, label %270, label %277

270:                                              ; preds = %262
  %271 = sext i32 %266 to i64
  %272 = shl nsw i64 %271, 2
  %273 = tail call i8* @_Znam(i64 %272) #11, !noalias !158
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %275 = bitcast i32** %274 to i8**
  store i8* %273, i8** %275, align 8, !alias.scope !158
  %276 = bitcast i8* %273 to i32*
  br label %282

277:                                              ; preds = %262
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %279 = bitcast %union.anon* %278 to i32*
  %280 = sext i32 %266 to i64
  %281 = shl nsw i64 %280, 2
  br label %282

282:                                              ; preds = %277, %270
  %283 = phi i64 [ %272, %270 ], [ %281, %277 ]
  %284 = phi i32* [ %276, %270 ], [ %279, %277 ]
  %285 = bitcast i32* %284 to i8*
  %286 = bitcast i32* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %285, i8* align 4 %286, i64 %283, i1 false) #12
  %287 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %288 = load i32*, i32** %287, align 8
  br label %289

289:                                              ; preds = %260, %282
  %290 = phi i32 [ %266, %282 ], [ 0, %260 ]
  %291 = phi i32* [ %288, %282 ], [ null, %260 ]
  %292 = icmp sgt i32 %222, 5
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  br i1 %292, label %294, label %297

294:                                              ; preds = %289
  %295 = getelementptr inbounds %union.anon, %union.anon* %293, i64 0, i32 0
  %296 = load i32*, i32** %295, align 8
  br label %300

297:                                              ; preds = %289
  %298 = bitcast %union.anon* %293 to i32*
  %299 = icmp sgt i32 %222, 0
  br i1 %299, label %300, label %400

300:                                              ; preds = %297, %294
  %301 = phi i32* [ %296, %294 ], [ %298, %297 ]
  %302 = zext i32 %222 to i64
  %303 = icmp ult i32 %222, 8
  br i1 %303, label %389, label %304

304:                                              ; preds = %300
  %305 = and i64 %302, 4294967288
  %306 = add nsw i64 %305, -8
  %307 = lshr exact i64 %306, 3
  %308 = add nuw nsw i64 %307, 1
  %309 = and i64 %308, 3
  %310 = icmp ult i64 %306, 24
  br i1 %310, label %356, label %311

311:                                              ; preds = %304
  %312 = sub nsw i64 %308, %309
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %353, %313 ]
  %315 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %351, %313 ]
  %316 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %352, %313 ]
  %317 = phi i64 [ %312, %311 ], [ %354, %313 ]
  %318 = getelementptr inbounds i32, i32* %301, i64 %314
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = getelementptr inbounds i32, i32* %318, i64 4
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4
  %324 = mul nsw <4 x i32> %320, %315
  %325 = mul nsw <4 x i32> %323, %316
  %326 = or i64 %314, 8
  %327 = getelementptr inbounds i32, i32* %301, i64 %326
  %328 = bitcast i32* %327 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4
  %330 = getelementptr inbounds i32, i32* %327, i64 4
  %331 = bitcast i32* %330 to <4 x i32>*
  %332 = load <4 x i32>, <4 x i32>* %331, align 4
  %333 = mul nsw <4 x i32> %329, %324
  %334 = mul nsw <4 x i32> %332, %325
  %335 = or i64 %314, 16
  %336 = getelementptr inbounds i32, i32* %301, i64 %335
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4
  %339 = getelementptr inbounds i32, i32* %336, i64 4
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4
  %342 = mul nsw <4 x i32> %338, %333
  %343 = mul nsw <4 x i32> %341, %334
  %344 = or i64 %314, 24
  %345 = getelementptr inbounds i32, i32* %301, i64 %344
  %346 = bitcast i32* %345 to <4 x i32>*
  %347 = load <4 x i32>, <4 x i32>* %346, align 4
  %348 = getelementptr inbounds i32, i32* %345, i64 4
  %349 = bitcast i32* %348 to <4 x i32>*
  %350 = load <4 x i32>, <4 x i32>* %349, align 4
  %351 = mul nsw <4 x i32> %347, %342
  %352 = mul nsw <4 x i32> %350, %343
  %353 = add i64 %314, 32
  %354 = add i64 %317, -4
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %313, !llvm.loop !161

356:                                              ; preds = %313, %304
  %357 = phi <4 x i32> [ undef, %304 ], [ %351, %313 ]
  %358 = phi <4 x i32> [ undef, %304 ], [ %352, %313 ]
  %359 = phi i64 [ 0, %304 ], [ %353, %313 ]
  %360 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %304 ], [ %351, %313 ]
  %361 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %304 ], [ %352, %313 ]
  %362 = icmp eq i64 %309, 0
  br i1 %362, label %379, label %363

363:                                              ; preds = %356, %363
  %364 = phi i64 [ %376, %363 ], [ %359, %356 ]
  %365 = phi <4 x i32> [ %374, %363 ], [ %360, %356 ]
  %366 = phi <4 x i32> [ %375, %363 ], [ %361, %356 ]
  %367 = phi i64 [ %377, %363 ], [ %309, %356 ]
  %368 = getelementptr inbounds i32, i32* %301, i64 %364
  %369 = bitcast i32* %368 to <4 x i32>*
  %370 = load <4 x i32>, <4 x i32>* %369, align 4
  %371 = getelementptr inbounds i32, i32* %368, i64 4
  %372 = bitcast i32* %371 to <4 x i32>*
  %373 = load <4 x i32>, <4 x i32>* %372, align 4
  %374 = mul nsw <4 x i32> %370, %365
  %375 = mul nsw <4 x i32> %373, %366
  %376 = add i64 %364, 8
  %377 = add i64 %367, -1
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %363, !llvm.loop !162

379:                                              ; preds = %363, %356
  %380 = phi <4 x i32> [ %357, %356 ], [ %374, %363 ]
  %381 = phi <4 x i32> [ %358, %356 ], [ %375, %363 ]
  %382 = mul <4 x i32> %381, %380
  %383 = shufflevector <4 x i32> %382, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %384 = mul <4 x i32> %382, %383
  %385 = shufflevector <4 x i32> %384, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %386 = mul <4 x i32> %384, %385
  %387 = extractelement <4 x i32> %386, i32 0
  %388 = icmp eq i64 %305, %302
  br i1 %388, label %400, label %389

389:                                              ; preds = %379, %300
  %390 = phi i64 [ 0, %300 ], [ %305, %379 ]
  %391 = phi i32 [ 1, %300 ], [ %387, %379 ]
  br label %392

392:                                              ; preds = %389, %392
  %393 = phi i64 [ %398, %392 ], [ %390, %389 ]
  %394 = phi i32 [ %397, %392 ], [ %391, %389 ]
  %395 = getelementptr inbounds i32, i32* %301, i64 %393
  %396 = load i32, i32* %395, align 4
  %397 = mul nsw i32 %396, %394
  %398 = add nuw nsw i64 %393, 1
  %399 = icmp eq i64 %398, %302
  br i1 %399, label %400, label %392, !llvm.loop !163

400:                                              ; preds = %392, %379, %297
  %401 = phi i32 [ 1, %297 ], [ %387, %379 ], [ %397, %392 ]
  %402 = icmp sgt i32 %256, 5
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %402, label %404, label %407

404:                                              ; preds = %400
  %405 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %406 = load i32*, i32** %405, align 8
  br label %410

407:                                              ; preds = %400
  %408 = bitcast %union.anon* %403 to i32*
  %409 = icmp sgt i32 %256, 0
  br i1 %409, label %410, label %510

410:                                              ; preds = %407, %404
  %411 = phi i32* [ %406, %404 ], [ %408, %407 ]
  %412 = zext i32 %256 to i64
  %413 = icmp ult i32 %256, 8
  br i1 %413, label %499, label %414

414:                                              ; preds = %410
  %415 = and i64 %412, 4294967288
  %416 = add nsw i64 %415, -8
  %417 = lshr exact i64 %416, 3
  %418 = add nuw nsw i64 %417, 1
  %419 = and i64 %418, 3
  %420 = icmp ult i64 %416, 24
  br i1 %420, label %466, label %421

421:                                              ; preds = %414
  %422 = sub nsw i64 %418, %419
  br label %423

423:                                              ; preds = %423, %421
  %424 = phi i64 [ 0, %421 ], [ %463, %423 ]
  %425 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %421 ], [ %461, %423 ]
  %426 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %421 ], [ %462, %423 ]
  %427 = phi i64 [ %422, %421 ], [ %464, %423 ]
  %428 = getelementptr inbounds i32, i32* %411, i64 %424
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = mul nsw <4 x i32> %430, %425
  %435 = mul nsw <4 x i32> %433, %426
  %436 = or i64 %424, 8
  %437 = getelementptr inbounds i32, i32* %411, i64 %436
  %438 = bitcast i32* %437 to <4 x i32>*
  %439 = load <4 x i32>, <4 x i32>* %438, align 4
  %440 = getelementptr inbounds i32, i32* %437, i64 4
  %441 = bitcast i32* %440 to <4 x i32>*
  %442 = load <4 x i32>, <4 x i32>* %441, align 4
  %443 = mul nsw <4 x i32> %439, %434
  %444 = mul nsw <4 x i32> %442, %435
  %445 = or i64 %424, 16
  %446 = getelementptr inbounds i32, i32* %411, i64 %445
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = mul nsw <4 x i32> %448, %443
  %453 = mul nsw <4 x i32> %451, %444
  %454 = or i64 %424, 24
  %455 = getelementptr inbounds i32, i32* %411, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  %457 = load <4 x i32>, <4 x i32>* %456, align 4
  %458 = getelementptr inbounds i32, i32* %455, i64 4
  %459 = bitcast i32* %458 to <4 x i32>*
  %460 = load <4 x i32>, <4 x i32>* %459, align 4
  %461 = mul nsw <4 x i32> %457, %452
  %462 = mul nsw <4 x i32> %460, %453
  %463 = add i64 %424, 32
  %464 = add i64 %427, -4
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %423, !llvm.loop !164

466:                                              ; preds = %423, %414
  %467 = phi <4 x i32> [ undef, %414 ], [ %461, %423 ]
  %468 = phi <4 x i32> [ undef, %414 ], [ %462, %423 ]
  %469 = phi i64 [ 0, %414 ], [ %463, %423 ]
  %470 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %414 ], [ %461, %423 ]
  %471 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %414 ], [ %462, %423 ]
  %472 = icmp eq i64 %419, 0
  br i1 %472, label %489, label %473

473:                                              ; preds = %466, %473
  %474 = phi i64 [ %486, %473 ], [ %469, %466 ]
  %475 = phi <4 x i32> [ %484, %473 ], [ %470, %466 ]
  %476 = phi <4 x i32> [ %485, %473 ], [ %471, %466 ]
  %477 = phi i64 [ %487, %473 ], [ %419, %466 ]
  %478 = getelementptr inbounds i32, i32* %411, i64 %474
  %479 = bitcast i32* %478 to <4 x i32>*
  %480 = load <4 x i32>, <4 x i32>* %479, align 4
  %481 = getelementptr inbounds i32, i32* %478, i64 4
  %482 = bitcast i32* %481 to <4 x i32>*
  %483 = load <4 x i32>, <4 x i32>* %482, align 4
  %484 = mul nsw <4 x i32> %480, %475
  %485 = mul nsw <4 x i32> %483, %476
  %486 = add i64 %474, 8
  %487 = add i64 %477, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %473, !llvm.loop !165

489:                                              ; preds = %473, %466
  %490 = phi <4 x i32> [ %467, %466 ], [ %484, %473 ]
  %491 = phi <4 x i32> [ %468, %466 ], [ %485, %473 ]
  %492 = mul <4 x i32> %491, %490
  %493 = shufflevector <4 x i32> %492, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %494 = mul <4 x i32> %492, %493
  %495 = shufflevector <4 x i32> %494, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %496 = mul <4 x i32> %494, %495
  %497 = extractelement <4 x i32> %496, i32 0
  %498 = icmp eq i64 %415, %412
  br i1 %498, label %510, label %499

499:                                              ; preds = %489, %410
  %500 = phi i64 [ 0, %410 ], [ %415, %489 ]
  %501 = phi i32 [ 1, %410 ], [ %497, %489 ]
  br label %502

502:                                              ; preds = %499, %502
  %503 = phi i64 [ %508, %502 ], [ %500, %499 ]
  %504 = phi i32 [ %507, %502 ], [ %501, %499 ]
  %505 = getelementptr inbounds i32, i32* %411, i64 %503
  %506 = load i32, i32* %505, align 4
  %507 = mul nsw i32 %506, %504
  %508 = add nuw nsw i64 %503, 1
  %509 = icmp eq i64 %508, %412
  br i1 %509, label %510, label %502, !llvm.loop !166

510:                                              ; preds = %502, %489, %407
  %511 = phi i32 [ 1, %407 ], [ %497, %489 ], [ %507, %502 ]
  %512 = icmp sgt i32 %290, 5
  %513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %512, label %514, label %517

514:                                              ; preds = %510
  %515 = getelementptr inbounds %union.anon, %union.anon* %513, i64 0, i32 0
  %516 = load i32*, i32** %515, align 8
  br label %520

517:                                              ; preds = %510
  %518 = bitcast %union.anon* %513 to i32*
  %519 = icmp sgt i32 %290, 0
  br i1 %519, label %520, label %620

520:                                              ; preds = %517, %514
  %521 = phi i32* [ %516, %514 ], [ %518, %517 ]
  %522 = zext i32 %290 to i64
  %523 = icmp ult i32 %290, 8
  br i1 %523, label %609, label %524

524:                                              ; preds = %520
  %525 = and i64 %522, 4294967288
  %526 = add nsw i64 %525, -8
  %527 = lshr exact i64 %526, 3
  %528 = add nuw nsw i64 %527, 1
  %529 = and i64 %528, 3
  %530 = icmp ult i64 %526, 24
  br i1 %530, label %576, label %531

531:                                              ; preds = %524
  %532 = sub nsw i64 %528, %529
  br label %533

533:                                              ; preds = %533, %531
  %534 = phi i64 [ 0, %531 ], [ %573, %533 ]
  %535 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %531 ], [ %571, %533 ]
  %536 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %531 ], [ %572, %533 ]
  %537 = phi i64 [ %532, %531 ], [ %574, %533 ]
  %538 = getelementptr inbounds i32, i32* %521, i64 %534
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = getelementptr inbounds i32, i32* %538, i64 4
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4
  %544 = mul nsw <4 x i32> %540, %535
  %545 = mul nsw <4 x i32> %543, %536
  %546 = or i64 %534, 8
  %547 = getelementptr inbounds i32, i32* %521, i64 %546
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4
  %550 = getelementptr inbounds i32, i32* %547, i64 4
  %551 = bitcast i32* %550 to <4 x i32>*
  %552 = load <4 x i32>, <4 x i32>* %551, align 4
  %553 = mul nsw <4 x i32> %549, %544
  %554 = mul nsw <4 x i32> %552, %545
  %555 = or i64 %534, 16
  %556 = getelementptr inbounds i32, i32* %521, i64 %555
  %557 = bitcast i32* %556 to <4 x i32>*
  %558 = load <4 x i32>, <4 x i32>* %557, align 4
  %559 = getelementptr inbounds i32, i32* %556, i64 4
  %560 = bitcast i32* %559 to <4 x i32>*
  %561 = load <4 x i32>, <4 x i32>* %560, align 4
  %562 = mul nsw <4 x i32> %558, %553
  %563 = mul nsw <4 x i32> %561, %554
  %564 = or i64 %534, 24
  %565 = getelementptr inbounds i32, i32* %521, i64 %564
  %566 = bitcast i32* %565 to <4 x i32>*
  %567 = load <4 x i32>, <4 x i32>* %566, align 4
  %568 = getelementptr inbounds i32, i32* %565, i64 4
  %569 = bitcast i32* %568 to <4 x i32>*
  %570 = load <4 x i32>, <4 x i32>* %569, align 4
  %571 = mul nsw <4 x i32> %567, %562
  %572 = mul nsw <4 x i32> %570, %563
  %573 = add i64 %534, 32
  %574 = add i64 %537, -4
  %575 = icmp eq i64 %574, 0
  br i1 %575, label %576, label %533, !llvm.loop !167

576:                                              ; preds = %533, %524
  %577 = phi <4 x i32> [ undef, %524 ], [ %571, %533 ]
  %578 = phi <4 x i32> [ undef, %524 ], [ %572, %533 ]
  %579 = phi i64 [ 0, %524 ], [ %573, %533 ]
  %580 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %524 ], [ %571, %533 ]
  %581 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %524 ], [ %572, %533 ]
  %582 = icmp eq i64 %529, 0
  br i1 %582, label %599, label %583

583:                                              ; preds = %576, %583
  %584 = phi i64 [ %596, %583 ], [ %579, %576 ]
  %585 = phi <4 x i32> [ %594, %583 ], [ %580, %576 ]
  %586 = phi <4 x i32> [ %595, %583 ], [ %581, %576 ]
  %587 = phi i64 [ %597, %583 ], [ %529, %576 ]
  %588 = getelementptr inbounds i32, i32* %521, i64 %584
  %589 = bitcast i32* %588 to <4 x i32>*
  %590 = load <4 x i32>, <4 x i32>* %589, align 4
  %591 = getelementptr inbounds i32, i32* %588, i64 4
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4
  %594 = mul nsw <4 x i32> %590, %585
  %595 = mul nsw <4 x i32> %593, %586
  %596 = add i64 %584, 8
  %597 = add i64 %587, -1
  %598 = icmp eq i64 %597, 0
  br i1 %598, label %599, label %583, !llvm.loop !168

599:                                              ; preds = %583, %576
  %600 = phi <4 x i32> [ %577, %576 ], [ %594, %583 ]
  %601 = phi <4 x i32> [ %578, %576 ], [ %595, %583 ]
  %602 = mul <4 x i32> %601, %600
  %603 = shufflevector <4 x i32> %602, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %604 = mul <4 x i32> %602, %603
  %605 = shufflevector <4 x i32> %604, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %606 = mul <4 x i32> %604, %605
  %607 = extractelement <4 x i32> %606, i32 0
  %608 = icmp eq i64 %525, %522
  br i1 %608, label %620, label %609

609:                                              ; preds = %599, %520
  %610 = phi i64 [ 0, %520 ], [ %525, %599 ]
  %611 = phi i32 [ 1, %520 ], [ %607, %599 ]
  br label %612

612:                                              ; preds = %609, %612
  %613 = phi i64 [ %618, %612 ], [ %610, %609 ]
  %614 = phi i32 [ %617, %612 ], [ %611, %609 ]
  %615 = getelementptr inbounds i32, i32* %521, i64 %613
  %616 = load i32, i32* %615, align 4
  %617 = mul nsw i32 %616, %614
  %618 = add nuw nsw i64 %613, 1
  %619 = icmp eq i64 %618, %522
  br i1 %619, label %620, label %612, !llvm.loop !169

620:                                              ; preds = %612, %599, %517
  %621 = phi i32 [ 1, %517 ], [ %607, %599 ], [ %617, %612 ]
  %622 = icmp eq i32 %401, %511
  br i1 %622, label %624, label %623

623:                                              ; preds = %620
  tail call void @abort() #13
  unreachable

624:                                              ; preds = %620
  %625 = icmp eq i32 %401, %621
  br i1 %625, label %626, label %630

626:                                              ; preds = %624
  %627 = icmp sgt i32 %401, 0
  br i1 %627, label %628, label %647

628:                                              ; preds = %626
  %629 = zext i32 %401 to i64
  br label %631

630:                                              ; preds = %624
  tail call void @abort() #13
  unreachable

631:                                              ; preds = %631, %628
  %632 = phi i64 [ 0, %628 ], [ %645, %631 ]
  %633 = getelementptr inbounds i32, i32* %223, i64 %632
  %634 = load i32, i32* %633, align 4
  %635 = getelementptr inbounds i32, i32* %257, i64 %632
  %636 = load i32, i32* %635, align 4
  %637 = sdiv i32 %634, %636
  %638 = sitofp i32 %637 to float
  %639 = fcmp ogt float %188, %638
  %640 = select i1 %639, float %188, float %638
  %641 = fcmp ogt float %640, %189
  %642 = select i1 %641, float %189, float %640
  %643 = fptosi float %642 to i32
  %644 = getelementptr inbounds i32, i32* %291, i64 %632
  store i32 %643, i32* %644, align 4
  %645 = add nuw nsw i64 %632, 1
  %646 = icmp eq i64 %645, %629
  br i1 %646, label %647, label %631

647:                                              ; preds = %631, %626
  br i1 %512, label %648, label %654

648:                                              ; preds = %647
  %649 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %650 = load i32*, i32** %649, align 8
  %651 = icmp eq i32* %650, null
  br i1 %651, label %654, label %652

652:                                              ; preds = %648
  %653 = bitcast i32* %650 to i8*
  tail call void @_ZdaPv(i8* %653) #11
  br label %654

654:                                              ; preds = %647, %648, %652
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %258) #12
  br i1 %402, label %655, label %661

655:                                              ; preds = %654
  %656 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %657 = load i32*, i32** %656, align 8
  %658 = icmp eq i32* %657, null
  br i1 %658, label %661, label %659

659:                                              ; preds = %655
  %660 = bitcast i32* %657 to i8*
  tail call void @_ZdaPv(i8* %660) #11
  br label %661

661:                                              ; preds = %654, %655, %659
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #12
  br i1 %292, label %662, label %668

662:                                              ; preds = %661
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  %665 = icmp eq i32* %664, null
  br i1 %665, label %668, label %666

666:                                              ; preds = %662
  %667 = bitcast i32* %664 to i8*
  tail call void @_ZdaPv(i8* %667) #11
  br label %668

668:                                              ; preds = %661, %662, %666
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #12
  br label %1436

669:                                              ; preds = %7
  %670 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 0
  %671 = load i8, i8* %670, align 4, !range !2
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %823, label %673

673:                                              ; preds = %669
  %674 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %674) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %674, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %675 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  %677 = add i32 %676, -1
  %678 = icmp ult i32 %677, 3
  br i1 %678, label %679, label %686

679:                                              ; preds = %673
  %680 = sext i32 %677 to i64
  %681 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %680
  %682 = load float, float* %681, align 4
  %683 = sext i32 %677 to i64
  %684 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.45, i64 0, i64 %683
  %685 = load float, float* %684, align 4
  br label %686

686:                                              ; preds = %673, %679
  %687 = phi float [ %682, %679 ], [ 0xC7EFFFFFE0000000, %673 ]
  %688 = phi float [ %685, %679 ], [ 0x47EFFFFFE0000000, %673 ]
  %689 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 13
  store float %687, float* %689, align 4
  %690 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 14
  store float %688, float* %690, align 4
  %691 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %691) #12
  %692 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %692, label %693, label %695

693:                                              ; preds = %686
  %694 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %694, align 8, !alias.scope !170
  br label %723

695:                                              ; preds = %686
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %697 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %696, align 8, !noalias !170
  %698 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 0
  %699 = load i32, i32* %698, align 4, !noalias !170
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 1, i64 0
  %701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %699, i32* %701, align 8, !alias.scope !170
  %702 = icmp sgt i32 %699, 5
  br i1 %702, label %703, label %710

703:                                              ; preds = %695
  %704 = sext i32 %699 to i64
  %705 = shl nsw i64 %704, 2
  %706 = tail call i8* @_Znam(i64 %705) #11, !noalias !170
  %707 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %708 = bitcast i32** %707 to i8**
  store i8* %706, i8** %708, align 8, !alias.scope !170
  %709 = bitcast i8* %706 to i32*
  br label %715

710:                                              ; preds = %695
  %711 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %712 = bitcast %union.anon* %711 to i32*
  %713 = sext i32 %699 to i64
  %714 = shl nsw i64 %713, 2
  br label %715

715:                                              ; preds = %710, %703
  %716 = phi i64 [ %705, %703 ], [ %714, %710 ]
  %717 = phi i32* [ %709, %703 ], [ %712, %710 ]
  %718 = bitcast i32* %717 to i8*
  %719 = bitcast i32* %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %718, i8* align 4 %719, i64 %716, i1 false) #12
  %720 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %721 = bitcast %union.TfLitePtrUnion* %720 to float**
  %722 = load float*, float** %721, align 8
  br label %723

723:                                              ; preds = %693, %715
  %724 = phi float* [ %722, %715 ], [ null, %693 ]
  %725 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %725) #12
  %726 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %726, label %727, label %729

727:                                              ; preds = %723
  %728 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %728, align 8, !alias.scope !173
  br label %757

729:                                              ; preds = %723
  %730 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %731 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %730, align 8, !noalias !173
  %732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %731, i64 0, i32 0
  %733 = load i32, i32* %732, align 4, !noalias !173
  %734 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %731, i64 0, i32 1, i64 0
  %735 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %733, i32* %735, align 8, !alias.scope !173
  %736 = icmp sgt i32 %733, 5
  br i1 %736, label %737, label %744

737:                                              ; preds = %729
  %738 = sext i32 %733 to i64
  %739 = shl nsw i64 %738, 2
  %740 = tail call i8* @_Znam(i64 %739) #11, !noalias !173
  %741 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %742 = bitcast i32** %741 to i8**
  store i8* %740, i8** %742, align 8, !alias.scope !173
  %743 = bitcast i8* %740 to i32*
  br label %749

744:                                              ; preds = %729
  %745 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %746 = bitcast %union.anon* %745 to i32*
  %747 = sext i32 %733 to i64
  %748 = shl nsw i64 %747, 2
  br label %749

749:                                              ; preds = %744, %737
  %750 = phi i64 [ %739, %737 ], [ %748, %744 ]
  %751 = phi i32* [ %743, %737 ], [ %746, %744 ]
  %752 = bitcast i32* %751 to i8*
  %753 = bitcast i32* %734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %752, i8* align 4 %753, i64 %750, i1 false) #12
  %754 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %755 = bitcast %union.TfLitePtrUnion* %754 to float**
  %756 = load float*, float** %755, align 8
  br label %757

757:                                              ; preds = %727, %749
  %758 = phi float* [ %756, %749 ], [ null, %727 ]
  %759 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %759) #12
  %760 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %760, label %761, label %763

761:                                              ; preds = %757
  %762 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %762, align 8, !alias.scope !176
  br label %791

763:                                              ; preds = %757
  %764 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %765 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %764, align 8, !noalias !176
  %766 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %765, i64 0, i32 0
  %767 = load i32, i32* %766, align 4, !noalias !176
  %768 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %765, i64 0, i32 1, i64 0
  %769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %767, i32* %769, align 8, !alias.scope !176
  %770 = icmp sgt i32 %767, 5
  br i1 %770, label %771, label %778

771:                                              ; preds = %763
  %772 = sext i32 %767 to i64
  %773 = shl nsw i64 %772, 2
  %774 = tail call i8* @_Znam(i64 %773) #11, !noalias !176
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %776 = bitcast i32** %775 to i8**
  store i8* %774, i8** %776, align 8, !alias.scope !176
  %777 = bitcast i8* %774 to i32*
  br label %783

778:                                              ; preds = %763
  %779 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %780 = bitcast %union.anon* %779 to i32*
  %781 = sext i32 %767 to i64
  %782 = shl nsw i64 %781, 2
  br label %783

783:                                              ; preds = %778, %771
  %784 = phi i64 [ %773, %771 ], [ %782, %778 ]
  %785 = phi i32* [ %777, %771 ], [ %780, %778 ]
  %786 = bitcast i32* %785 to i8*
  %787 = bitcast i32* %768 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %786, i8* align 4 %787, i64 %784, i1 false) #12
  %788 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %789 = bitcast %union.TfLitePtrUnion* %788 to float**
  %790 = load float*, float** %789, align 8
  br label %791

791:                                              ; preds = %761, %783
  %792 = phi float* [ %790, %783 ], [ null, %761 ]
  call void @_ZN6tflite13optimized_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, float* %724, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, float* %758, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, float* %792)
  %793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %794 = load i32, i32* %793, align 8
  %795 = icmp sgt i32 %794, 5
  br i1 %795, label %796, label %802

796:                                              ; preds = %791
  %797 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %798 = load i32*, i32** %797, align 8
  %799 = icmp eq i32* %798, null
  br i1 %799, label %802, label %800

800:                                              ; preds = %796
  %801 = bitcast i32* %798 to i8*
  call void @_ZdaPv(i8* %801) #11
  br label %802

802:                                              ; preds = %791, %796, %800
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %759) #12
  %803 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %804 = load i32, i32* %803, align 8
  %805 = icmp sgt i32 %804, 5
  br i1 %805, label %806, label %812

806:                                              ; preds = %802
  %807 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %808 = load i32*, i32** %807, align 8
  %809 = icmp eq i32* %808, null
  br i1 %809, label %812, label %810

810:                                              ; preds = %806
  %811 = bitcast i32* %808 to i8*
  call void @_ZdaPv(i8* %811) #11
  br label %812

812:                                              ; preds = %802, %806, %810
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #12
  %813 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %814 = load i32, i32* %813, align 8
  %815 = icmp sgt i32 %814, 5
  br i1 %815, label %816, label %822

816:                                              ; preds = %812
  %817 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %818 = load i32*, i32** %817, align 8
  %819 = icmp eq i32* %818, null
  br i1 %819, label %822, label %820

820:                                              ; preds = %816
  %821 = bitcast i32* %818 to i8*
  call void @_ZdaPv(i8* %821) #11
  br label %822

822:                                              ; preds = %812, %816, %820
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %691) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %674) #12
  br label %1436

823:                                              ; preds = %669
  %824 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  %826 = add i32 %825, -1
  %827 = icmp ult i32 %826, 3
  br i1 %827, label %828, label %835

828:                                              ; preds = %823
  %829 = sext i32 %826 to i64
  %830 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %829
  %831 = load float, float* %830, align 4
  %832 = sext i32 %826 to i64
  %833 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.45, i64 0, i64 %832
  %834 = load float, float* %833, align 4
  br label %835

835:                                              ; preds = %823, %828
  %836 = phi float [ %831, %828 ], [ 0xC7EFFFFFE0000000, %823 ]
  %837 = phi float [ %834, %828 ], [ 0x47EFFFFFE0000000, %823 ]
  %838 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %838) #12
  %839 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %839, label %840, label %842

840:                                              ; preds = %835
  %841 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %841, align 8, !alias.scope !179
  br label %871

842:                                              ; preds = %835
  %843 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %844 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %843, align 8, !noalias !179
  %845 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 0
  %846 = load i32, i32* %845, align 4, !noalias !179
  %847 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 1, i64 0
  %848 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %846, i32* %848, align 8, !alias.scope !179
  %849 = icmp sgt i32 %846, 5
  br i1 %849, label %850, label %857

850:                                              ; preds = %842
  %851 = sext i32 %846 to i64
  %852 = shl nsw i64 %851, 2
  %853 = tail call i8* @_Znam(i64 %852) #11, !noalias !179
  %854 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %855 = bitcast i32** %854 to i8**
  store i8* %853, i8** %855, align 8, !alias.scope !179
  %856 = bitcast i8* %853 to i32*
  br label %862

857:                                              ; preds = %842
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %859 = bitcast %union.anon* %858 to i32*
  %860 = sext i32 %846 to i64
  %861 = shl nsw i64 %860, 2
  br label %862

862:                                              ; preds = %857, %850
  %863 = phi i64 [ %852, %850 ], [ %861, %857 ]
  %864 = phi i32* [ %856, %850 ], [ %859, %857 ]
  %865 = bitcast i32* %864 to i8*
  %866 = bitcast i32* %847 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %865, i8* align 4 %866, i64 %863, i1 false) #12
  %867 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %868 = bitcast %union.TfLitePtrUnion* %867 to float**
  %869 = load float*, float** %868, align 8
  %870 = bitcast float* %869 to i8*
  br label %871

871:                                              ; preds = %840, %862
  %872 = phi i32 [ %846, %862 ], [ 0, %840 ]
  %873 = phi i8* [ %870, %862 ], [ null, %840 ]
  %874 = phi float* [ %869, %862 ], [ null, %840 ]
  %875 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %875) #12
  %876 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %876, label %877, label %879

877:                                              ; preds = %871
  %878 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %878, align 8, !alias.scope !182
  br label %908

879:                                              ; preds = %871
  %880 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %881 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %880, align 8, !noalias !182
  %882 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %881, i64 0, i32 0
  %883 = load i32, i32* %882, align 4, !noalias !182
  %884 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %881, i64 0, i32 1, i64 0
  %885 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %883, i32* %885, align 8, !alias.scope !182
  %886 = icmp sgt i32 %883, 5
  br i1 %886, label %887, label %894

887:                                              ; preds = %879
  %888 = sext i32 %883 to i64
  %889 = shl nsw i64 %888, 2
  %890 = tail call i8* @_Znam(i64 %889) #11, !noalias !182
  %891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %892 = bitcast i32** %891 to i8**
  store i8* %890, i8** %892, align 8, !alias.scope !182
  %893 = bitcast i8* %890 to i32*
  br label %899

894:                                              ; preds = %879
  %895 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %896 = bitcast %union.anon* %895 to i32*
  %897 = sext i32 %883 to i64
  %898 = shl nsw i64 %897, 2
  br label %899

899:                                              ; preds = %894, %887
  %900 = phi i64 [ %889, %887 ], [ %898, %894 ]
  %901 = phi i32* [ %893, %887 ], [ %896, %894 ]
  %902 = bitcast i32* %901 to i8*
  %903 = bitcast i32* %884 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %902, i8* align 4 %903, i64 %900, i1 false) #12
  %904 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %905 = bitcast %union.TfLitePtrUnion* %904 to float**
  %906 = load float*, float** %905, align 8
  %907 = bitcast float* %906 to i8*
  br label %908

908:                                              ; preds = %877, %899
  %909 = phi i32 [ %883, %899 ], [ 0, %877 ]
  %910 = phi i8* [ %907, %899 ], [ null, %877 ]
  %911 = phi float* [ %906, %899 ], [ null, %877 ]
  %912 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %912) #12
  %913 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %913, label %914, label %916

914:                                              ; preds = %908
  %915 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %915, align 8, !alias.scope !185
  br label %945

916:                                              ; preds = %908
  %917 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %918 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %917, align 8, !noalias !185
  %919 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %918, i64 0, i32 0
  %920 = load i32, i32* %919, align 4, !noalias !185
  %921 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %918, i64 0, i32 1, i64 0
  %922 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %920, i32* %922, align 8, !alias.scope !185
  %923 = icmp sgt i32 %920, 5
  br i1 %923, label %924, label %931

924:                                              ; preds = %916
  %925 = sext i32 %920 to i64
  %926 = shl nsw i64 %925, 2
  %927 = tail call i8* @_Znam(i64 %926) #11, !noalias !185
  %928 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %929 = bitcast i32** %928 to i8**
  store i8* %927, i8** %929, align 8, !alias.scope !185
  %930 = bitcast i8* %927 to i32*
  br label %936

931:                                              ; preds = %916
  %932 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %933 = bitcast %union.anon* %932 to i32*
  %934 = sext i32 %920 to i64
  %935 = shl nsw i64 %934, 2
  br label %936

936:                                              ; preds = %931, %924
  %937 = phi i64 [ %926, %924 ], [ %935, %931 ]
  %938 = phi i32* [ %930, %924 ], [ %933, %931 ]
  %939 = bitcast i32* %938 to i8*
  %940 = bitcast i32* %921 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %939, i8* align 4 %940, i64 %937, i1 false) #12
  %941 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %942 = bitcast %union.TfLitePtrUnion* %941 to float**
  %943 = load float*, float** %942, align 8
  %944 = bitcast float* %943 to i8*
  br label %945

945:                                              ; preds = %914, %936
  %946 = phi i32 [ %920, %936 ], [ 0, %914 ]
  %947 = phi i8* [ %944, %936 ], [ null, %914 ]
  %948 = phi float* [ %943, %936 ], [ null, %914 ]
  %949 = icmp sgt i32 %872, 5
  %950 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  br i1 %949, label %951, label %954

951:                                              ; preds = %945
  %952 = getelementptr inbounds %union.anon, %union.anon* %950, i64 0, i32 0
  %953 = load i32*, i32** %952, align 8
  br label %957

954:                                              ; preds = %945
  %955 = bitcast %union.anon* %950 to i32*
  %956 = icmp sgt i32 %872, 0
  br i1 %956, label %957, label %1057

957:                                              ; preds = %954, %951
  %958 = phi i32* [ %953, %951 ], [ %955, %954 ]
  %959 = zext i32 %872 to i64
  %960 = icmp ult i32 %872, 8
  br i1 %960, label %1046, label %961

961:                                              ; preds = %957
  %962 = and i64 %959, 4294967288
  %963 = add nsw i64 %962, -8
  %964 = lshr exact i64 %963, 3
  %965 = add nuw nsw i64 %964, 1
  %966 = and i64 %965, 3
  %967 = icmp ult i64 %963, 24
  br i1 %967, label %1013, label %968

968:                                              ; preds = %961
  %969 = sub nsw i64 %965, %966
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi i64 [ 0, %968 ], [ %1010, %970 ]
  %972 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %968 ], [ %1008, %970 ]
  %973 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %968 ], [ %1009, %970 ]
  %974 = phi i64 [ %969, %968 ], [ %1011, %970 ]
  %975 = getelementptr inbounds i32, i32* %958, i64 %971
  %976 = bitcast i32* %975 to <4 x i32>*
  %977 = load <4 x i32>, <4 x i32>* %976, align 4
  %978 = getelementptr inbounds i32, i32* %975, i64 4
  %979 = bitcast i32* %978 to <4 x i32>*
  %980 = load <4 x i32>, <4 x i32>* %979, align 4
  %981 = mul nsw <4 x i32> %977, %972
  %982 = mul nsw <4 x i32> %980, %973
  %983 = or i64 %971, 8
  %984 = getelementptr inbounds i32, i32* %958, i64 %983
  %985 = bitcast i32* %984 to <4 x i32>*
  %986 = load <4 x i32>, <4 x i32>* %985, align 4
  %987 = getelementptr inbounds i32, i32* %984, i64 4
  %988 = bitcast i32* %987 to <4 x i32>*
  %989 = load <4 x i32>, <4 x i32>* %988, align 4
  %990 = mul nsw <4 x i32> %986, %981
  %991 = mul nsw <4 x i32> %989, %982
  %992 = or i64 %971, 16
  %993 = getelementptr inbounds i32, i32* %958, i64 %992
  %994 = bitcast i32* %993 to <4 x i32>*
  %995 = load <4 x i32>, <4 x i32>* %994, align 4
  %996 = getelementptr inbounds i32, i32* %993, i64 4
  %997 = bitcast i32* %996 to <4 x i32>*
  %998 = load <4 x i32>, <4 x i32>* %997, align 4
  %999 = mul nsw <4 x i32> %995, %990
  %1000 = mul nsw <4 x i32> %998, %991
  %1001 = or i64 %971, 24
  %1002 = getelementptr inbounds i32, i32* %958, i64 %1001
  %1003 = bitcast i32* %1002 to <4 x i32>*
  %1004 = load <4 x i32>, <4 x i32>* %1003, align 4
  %1005 = getelementptr inbounds i32, i32* %1002, i64 4
  %1006 = bitcast i32* %1005 to <4 x i32>*
  %1007 = load <4 x i32>, <4 x i32>* %1006, align 4
  %1008 = mul nsw <4 x i32> %1004, %999
  %1009 = mul nsw <4 x i32> %1007, %1000
  %1010 = add i64 %971, 32
  %1011 = add i64 %974, -4
  %1012 = icmp eq i64 %1011, 0
  br i1 %1012, label %1013, label %970, !llvm.loop !188

1013:                                             ; preds = %970, %961
  %1014 = phi <4 x i32> [ undef, %961 ], [ %1008, %970 ]
  %1015 = phi <4 x i32> [ undef, %961 ], [ %1009, %970 ]
  %1016 = phi i64 [ 0, %961 ], [ %1010, %970 ]
  %1017 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %961 ], [ %1008, %970 ]
  %1018 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %961 ], [ %1009, %970 ]
  %1019 = icmp eq i64 %966, 0
  br i1 %1019, label %1036, label %1020

1020:                                             ; preds = %1013, %1020
  %1021 = phi i64 [ %1033, %1020 ], [ %1016, %1013 ]
  %1022 = phi <4 x i32> [ %1031, %1020 ], [ %1017, %1013 ]
  %1023 = phi <4 x i32> [ %1032, %1020 ], [ %1018, %1013 ]
  %1024 = phi i64 [ %1034, %1020 ], [ %966, %1013 ]
  %1025 = getelementptr inbounds i32, i32* %958, i64 %1021
  %1026 = bitcast i32* %1025 to <4 x i32>*
  %1027 = load <4 x i32>, <4 x i32>* %1026, align 4
  %1028 = getelementptr inbounds i32, i32* %1025, i64 4
  %1029 = bitcast i32* %1028 to <4 x i32>*
  %1030 = load <4 x i32>, <4 x i32>* %1029, align 4
  %1031 = mul nsw <4 x i32> %1027, %1022
  %1032 = mul nsw <4 x i32> %1030, %1023
  %1033 = add i64 %1021, 8
  %1034 = add i64 %1024, -1
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %1036, label %1020, !llvm.loop !189

1036:                                             ; preds = %1020, %1013
  %1037 = phi <4 x i32> [ %1014, %1013 ], [ %1031, %1020 ]
  %1038 = phi <4 x i32> [ %1015, %1013 ], [ %1032, %1020 ]
  %1039 = mul <4 x i32> %1038, %1037
  %1040 = shufflevector <4 x i32> %1039, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1041 = mul <4 x i32> %1039, %1040
  %1042 = shufflevector <4 x i32> %1041, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1043 = mul <4 x i32> %1041, %1042
  %1044 = extractelement <4 x i32> %1043, i32 0
  %1045 = icmp eq i64 %962, %959
  br i1 %1045, label %1057, label %1046

1046:                                             ; preds = %1036, %957
  %1047 = phi i64 [ 0, %957 ], [ %962, %1036 ]
  %1048 = phi i32 [ 1, %957 ], [ %1044, %1036 ]
  br label %1049

1049:                                             ; preds = %1046, %1049
  %1050 = phi i64 [ %1055, %1049 ], [ %1047, %1046 ]
  %1051 = phi i32 [ %1054, %1049 ], [ %1048, %1046 ]
  %1052 = getelementptr inbounds i32, i32* %958, i64 %1050
  %1053 = load i32, i32* %1052, align 4
  %1054 = mul nsw i32 %1053, %1051
  %1055 = add nuw nsw i64 %1050, 1
  %1056 = icmp eq i64 %1055, %959
  br i1 %1056, label %1057, label %1049, !llvm.loop !190

1057:                                             ; preds = %1049, %1036, %954
  %1058 = phi i32 [ 1, %954 ], [ %1044, %1036 ], [ %1054, %1049 ]
  %1059 = icmp sgt i32 %909, 5
  %1060 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  br i1 %1059, label %1061, label %1064

1061:                                             ; preds = %1057
  %1062 = getelementptr inbounds %union.anon, %union.anon* %1060, i64 0, i32 0
  %1063 = load i32*, i32** %1062, align 8
  br label %1067

1064:                                             ; preds = %1057
  %1065 = bitcast %union.anon* %1060 to i32*
  %1066 = icmp sgt i32 %909, 0
  br i1 %1066, label %1067, label %1167

1067:                                             ; preds = %1064, %1061
  %1068 = phi i32* [ %1063, %1061 ], [ %1065, %1064 ]
  %1069 = zext i32 %909 to i64
  %1070 = icmp ult i32 %909, 8
  br i1 %1070, label %1156, label %1071

1071:                                             ; preds = %1067
  %1072 = and i64 %1069, 4294967288
  %1073 = add nsw i64 %1072, -8
  %1074 = lshr exact i64 %1073, 3
  %1075 = add nuw nsw i64 %1074, 1
  %1076 = and i64 %1075, 3
  %1077 = icmp ult i64 %1073, 24
  br i1 %1077, label %1123, label %1078

1078:                                             ; preds = %1071
  %1079 = sub nsw i64 %1075, %1076
  br label %1080

1080:                                             ; preds = %1080, %1078
  %1081 = phi i64 [ 0, %1078 ], [ %1120, %1080 ]
  %1082 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1078 ], [ %1118, %1080 ]
  %1083 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1078 ], [ %1119, %1080 ]
  %1084 = phi i64 [ %1079, %1078 ], [ %1121, %1080 ]
  %1085 = getelementptr inbounds i32, i32* %1068, i64 %1081
  %1086 = bitcast i32* %1085 to <4 x i32>*
  %1087 = load <4 x i32>, <4 x i32>* %1086, align 4
  %1088 = getelementptr inbounds i32, i32* %1085, i64 4
  %1089 = bitcast i32* %1088 to <4 x i32>*
  %1090 = load <4 x i32>, <4 x i32>* %1089, align 4
  %1091 = mul nsw <4 x i32> %1087, %1082
  %1092 = mul nsw <4 x i32> %1090, %1083
  %1093 = or i64 %1081, 8
  %1094 = getelementptr inbounds i32, i32* %1068, i64 %1093
  %1095 = bitcast i32* %1094 to <4 x i32>*
  %1096 = load <4 x i32>, <4 x i32>* %1095, align 4
  %1097 = getelementptr inbounds i32, i32* %1094, i64 4
  %1098 = bitcast i32* %1097 to <4 x i32>*
  %1099 = load <4 x i32>, <4 x i32>* %1098, align 4
  %1100 = mul nsw <4 x i32> %1096, %1091
  %1101 = mul nsw <4 x i32> %1099, %1092
  %1102 = or i64 %1081, 16
  %1103 = getelementptr inbounds i32, i32* %1068, i64 %1102
  %1104 = bitcast i32* %1103 to <4 x i32>*
  %1105 = load <4 x i32>, <4 x i32>* %1104, align 4
  %1106 = getelementptr inbounds i32, i32* %1103, i64 4
  %1107 = bitcast i32* %1106 to <4 x i32>*
  %1108 = load <4 x i32>, <4 x i32>* %1107, align 4
  %1109 = mul nsw <4 x i32> %1105, %1100
  %1110 = mul nsw <4 x i32> %1108, %1101
  %1111 = or i64 %1081, 24
  %1112 = getelementptr inbounds i32, i32* %1068, i64 %1111
  %1113 = bitcast i32* %1112 to <4 x i32>*
  %1114 = load <4 x i32>, <4 x i32>* %1113, align 4
  %1115 = getelementptr inbounds i32, i32* %1112, i64 4
  %1116 = bitcast i32* %1115 to <4 x i32>*
  %1117 = load <4 x i32>, <4 x i32>* %1116, align 4
  %1118 = mul nsw <4 x i32> %1114, %1109
  %1119 = mul nsw <4 x i32> %1117, %1110
  %1120 = add i64 %1081, 32
  %1121 = add i64 %1084, -4
  %1122 = icmp eq i64 %1121, 0
  br i1 %1122, label %1123, label %1080, !llvm.loop !191

1123:                                             ; preds = %1080, %1071
  %1124 = phi <4 x i32> [ undef, %1071 ], [ %1118, %1080 ]
  %1125 = phi <4 x i32> [ undef, %1071 ], [ %1119, %1080 ]
  %1126 = phi i64 [ 0, %1071 ], [ %1120, %1080 ]
  %1127 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1071 ], [ %1118, %1080 ]
  %1128 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1071 ], [ %1119, %1080 ]
  %1129 = icmp eq i64 %1076, 0
  br i1 %1129, label %1146, label %1130

1130:                                             ; preds = %1123, %1130
  %1131 = phi i64 [ %1143, %1130 ], [ %1126, %1123 ]
  %1132 = phi <4 x i32> [ %1141, %1130 ], [ %1127, %1123 ]
  %1133 = phi <4 x i32> [ %1142, %1130 ], [ %1128, %1123 ]
  %1134 = phi i64 [ %1144, %1130 ], [ %1076, %1123 ]
  %1135 = getelementptr inbounds i32, i32* %1068, i64 %1131
  %1136 = bitcast i32* %1135 to <4 x i32>*
  %1137 = load <4 x i32>, <4 x i32>* %1136, align 4
  %1138 = getelementptr inbounds i32, i32* %1135, i64 4
  %1139 = bitcast i32* %1138 to <4 x i32>*
  %1140 = load <4 x i32>, <4 x i32>* %1139, align 4
  %1141 = mul nsw <4 x i32> %1137, %1132
  %1142 = mul nsw <4 x i32> %1140, %1133
  %1143 = add i64 %1131, 8
  %1144 = add i64 %1134, -1
  %1145 = icmp eq i64 %1144, 0
  br i1 %1145, label %1146, label %1130, !llvm.loop !192

1146:                                             ; preds = %1130, %1123
  %1147 = phi <4 x i32> [ %1124, %1123 ], [ %1141, %1130 ]
  %1148 = phi <4 x i32> [ %1125, %1123 ], [ %1142, %1130 ]
  %1149 = mul <4 x i32> %1148, %1147
  %1150 = shufflevector <4 x i32> %1149, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1151 = mul <4 x i32> %1149, %1150
  %1152 = shufflevector <4 x i32> %1151, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1153 = mul <4 x i32> %1151, %1152
  %1154 = extractelement <4 x i32> %1153, i32 0
  %1155 = icmp eq i64 %1072, %1069
  br i1 %1155, label %1167, label %1156

1156:                                             ; preds = %1146, %1067
  %1157 = phi i64 [ 0, %1067 ], [ %1072, %1146 ]
  %1158 = phi i32 [ 1, %1067 ], [ %1154, %1146 ]
  br label %1159

1159:                                             ; preds = %1156, %1159
  %1160 = phi i64 [ %1165, %1159 ], [ %1157, %1156 ]
  %1161 = phi i32 [ %1164, %1159 ], [ %1158, %1156 ]
  %1162 = getelementptr inbounds i32, i32* %1068, i64 %1160
  %1163 = load i32, i32* %1162, align 4
  %1164 = mul nsw i32 %1163, %1161
  %1165 = add nuw nsw i64 %1160, 1
  %1166 = icmp eq i64 %1165, %1069
  br i1 %1166, label %1167, label %1159, !llvm.loop !193

1167:                                             ; preds = %1159, %1146, %1064
  %1168 = phi i32 [ 1, %1064 ], [ %1154, %1146 ], [ %1164, %1159 ]
  %1169 = icmp sgt i32 %946, 5
  %1170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1169, label %1171, label %1174

1171:                                             ; preds = %1167
  %1172 = getelementptr inbounds %union.anon, %union.anon* %1170, i64 0, i32 0
  %1173 = load i32*, i32** %1172, align 8
  br label %1177

1174:                                             ; preds = %1167
  %1175 = bitcast %union.anon* %1170 to i32*
  %1176 = icmp sgt i32 %946, 0
  br i1 %1176, label %1177, label %1277

1177:                                             ; preds = %1174, %1171
  %1178 = phi i32* [ %1173, %1171 ], [ %1175, %1174 ]
  %1179 = zext i32 %946 to i64
  %1180 = icmp ult i32 %946, 8
  br i1 %1180, label %1266, label %1181

1181:                                             ; preds = %1177
  %1182 = and i64 %1179, 4294967288
  %1183 = add nsw i64 %1182, -8
  %1184 = lshr exact i64 %1183, 3
  %1185 = add nuw nsw i64 %1184, 1
  %1186 = and i64 %1185, 3
  %1187 = icmp ult i64 %1183, 24
  br i1 %1187, label %1233, label %1188

1188:                                             ; preds = %1181
  %1189 = sub nsw i64 %1185, %1186
  br label %1190

1190:                                             ; preds = %1190, %1188
  %1191 = phi i64 [ 0, %1188 ], [ %1230, %1190 ]
  %1192 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1188 ], [ %1228, %1190 ]
  %1193 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1188 ], [ %1229, %1190 ]
  %1194 = phi i64 [ %1189, %1188 ], [ %1231, %1190 ]
  %1195 = getelementptr inbounds i32, i32* %1178, i64 %1191
  %1196 = bitcast i32* %1195 to <4 x i32>*
  %1197 = load <4 x i32>, <4 x i32>* %1196, align 4
  %1198 = getelementptr inbounds i32, i32* %1195, i64 4
  %1199 = bitcast i32* %1198 to <4 x i32>*
  %1200 = load <4 x i32>, <4 x i32>* %1199, align 4
  %1201 = mul nsw <4 x i32> %1197, %1192
  %1202 = mul nsw <4 x i32> %1200, %1193
  %1203 = or i64 %1191, 8
  %1204 = getelementptr inbounds i32, i32* %1178, i64 %1203
  %1205 = bitcast i32* %1204 to <4 x i32>*
  %1206 = load <4 x i32>, <4 x i32>* %1205, align 4
  %1207 = getelementptr inbounds i32, i32* %1204, i64 4
  %1208 = bitcast i32* %1207 to <4 x i32>*
  %1209 = load <4 x i32>, <4 x i32>* %1208, align 4
  %1210 = mul nsw <4 x i32> %1206, %1201
  %1211 = mul nsw <4 x i32> %1209, %1202
  %1212 = or i64 %1191, 16
  %1213 = getelementptr inbounds i32, i32* %1178, i64 %1212
  %1214 = bitcast i32* %1213 to <4 x i32>*
  %1215 = load <4 x i32>, <4 x i32>* %1214, align 4
  %1216 = getelementptr inbounds i32, i32* %1213, i64 4
  %1217 = bitcast i32* %1216 to <4 x i32>*
  %1218 = load <4 x i32>, <4 x i32>* %1217, align 4
  %1219 = mul nsw <4 x i32> %1215, %1210
  %1220 = mul nsw <4 x i32> %1218, %1211
  %1221 = or i64 %1191, 24
  %1222 = getelementptr inbounds i32, i32* %1178, i64 %1221
  %1223 = bitcast i32* %1222 to <4 x i32>*
  %1224 = load <4 x i32>, <4 x i32>* %1223, align 4
  %1225 = getelementptr inbounds i32, i32* %1222, i64 4
  %1226 = bitcast i32* %1225 to <4 x i32>*
  %1227 = load <4 x i32>, <4 x i32>* %1226, align 4
  %1228 = mul nsw <4 x i32> %1224, %1219
  %1229 = mul nsw <4 x i32> %1227, %1220
  %1230 = add i64 %1191, 32
  %1231 = add i64 %1194, -4
  %1232 = icmp eq i64 %1231, 0
  br i1 %1232, label %1233, label %1190, !llvm.loop !194

1233:                                             ; preds = %1190, %1181
  %1234 = phi <4 x i32> [ undef, %1181 ], [ %1228, %1190 ]
  %1235 = phi <4 x i32> [ undef, %1181 ], [ %1229, %1190 ]
  %1236 = phi i64 [ 0, %1181 ], [ %1230, %1190 ]
  %1237 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1181 ], [ %1228, %1190 ]
  %1238 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1181 ], [ %1229, %1190 ]
  %1239 = icmp eq i64 %1186, 0
  br i1 %1239, label %1256, label %1240

1240:                                             ; preds = %1233, %1240
  %1241 = phi i64 [ %1253, %1240 ], [ %1236, %1233 ]
  %1242 = phi <4 x i32> [ %1251, %1240 ], [ %1237, %1233 ]
  %1243 = phi <4 x i32> [ %1252, %1240 ], [ %1238, %1233 ]
  %1244 = phi i64 [ %1254, %1240 ], [ %1186, %1233 ]
  %1245 = getelementptr inbounds i32, i32* %1178, i64 %1241
  %1246 = bitcast i32* %1245 to <4 x i32>*
  %1247 = load <4 x i32>, <4 x i32>* %1246, align 4
  %1248 = getelementptr inbounds i32, i32* %1245, i64 4
  %1249 = bitcast i32* %1248 to <4 x i32>*
  %1250 = load <4 x i32>, <4 x i32>* %1249, align 4
  %1251 = mul nsw <4 x i32> %1247, %1242
  %1252 = mul nsw <4 x i32> %1250, %1243
  %1253 = add i64 %1241, 8
  %1254 = add i64 %1244, -1
  %1255 = icmp eq i64 %1254, 0
  br i1 %1255, label %1256, label %1240, !llvm.loop !195

1256:                                             ; preds = %1240, %1233
  %1257 = phi <4 x i32> [ %1234, %1233 ], [ %1251, %1240 ]
  %1258 = phi <4 x i32> [ %1235, %1233 ], [ %1252, %1240 ]
  %1259 = mul <4 x i32> %1258, %1257
  %1260 = shufflevector <4 x i32> %1259, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1261 = mul <4 x i32> %1259, %1260
  %1262 = shufflevector <4 x i32> %1261, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1263 = mul <4 x i32> %1261, %1262
  %1264 = extractelement <4 x i32> %1263, i32 0
  %1265 = icmp eq i64 %1182, %1179
  br i1 %1265, label %1277, label %1266

1266:                                             ; preds = %1256, %1177
  %1267 = phi i64 [ 0, %1177 ], [ %1182, %1256 ]
  %1268 = phi i32 [ 1, %1177 ], [ %1264, %1256 ]
  br label %1269

1269:                                             ; preds = %1266, %1269
  %1270 = phi i64 [ %1275, %1269 ], [ %1267, %1266 ]
  %1271 = phi i32 [ %1274, %1269 ], [ %1268, %1266 ]
  %1272 = getelementptr inbounds i32, i32* %1178, i64 %1270
  %1273 = load i32, i32* %1272, align 4
  %1274 = mul nsw i32 %1273, %1271
  %1275 = add nuw nsw i64 %1270, 1
  %1276 = icmp eq i64 %1275, %1179
  br i1 %1276, label %1277, label %1269, !llvm.loop !196

1277:                                             ; preds = %1269, %1256, %1174
  %1278 = phi i32 [ 1, %1174 ], [ %1264, %1256 ], [ %1274, %1269 ]
  %1279 = icmp eq i32 %1058, %1168
  br i1 %1279, label %1281, label %1280

1280:                                             ; preds = %1277
  tail call void @abort() #13
  unreachable

1281:                                             ; preds = %1277
  %1282 = icmp eq i32 %1058, %1278
  br i1 %1282, label %1283, label %1388

1283:                                             ; preds = %1281
  %1284 = icmp sgt i32 %1058, 0
  br i1 %1284, label %1285, label %1414

1285:                                             ; preds = %1283
  %1286 = zext i32 %1058 to i64
  %1287 = icmp ult i32 %1058, 4
  br i1 %1287, label %1288, label %1309

1288:                                             ; preds = %1386, %1309, %1285
  %1289 = phi i64 [ 0, %1309 ], [ 0, %1285 ], [ %1324, %1386 ]
  %1290 = xor i64 %1289, -1
  %1291 = and i64 %1286, 1
  %1292 = icmp eq i64 %1291, 0
  br i1 %1292, label %1305, label %1293

1293:                                             ; preds = %1288
  %1294 = getelementptr inbounds float, float* %874, i64 %1289
  %1295 = load float, float* %1294, align 4
  %1296 = getelementptr inbounds float, float* %911, i64 %1289
  %1297 = load float, float* %1296, align 4
  %1298 = fdiv float %1295, %1297
  %1299 = fcmp olt float %1298, %836
  %1300 = select i1 %1299, float %836, float %1298
  %1301 = fcmp ogt float %1300, %837
  %1302 = select i1 %1301, float %837, float %1300
  %1303 = getelementptr inbounds float, float* %948, i64 %1289
  store float %1302, float* %1303, align 4
  %1304 = or i64 %1289, 1
  br label %1305

1305:                                             ; preds = %1288, %1293
  %1306 = phi i64 [ %1289, %1288 ], [ %1304, %1293 ]
  %1307 = sub nsw i64 0, %1286
  %1308 = icmp eq i64 %1290, %1307
  br i1 %1308, label %1414, label %1389

1309:                                             ; preds = %1285
  %1310 = getelementptr float, float* %948, i64 %1286
  %1311 = bitcast float* %1310 to i8*
  %1312 = getelementptr float, float* %874, i64 %1286
  %1313 = bitcast float* %1312 to i8*
  %1314 = getelementptr float, float* %911, i64 %1286
  %1315 = bitcast float* %1314 to i8*
  %1316 = icmp ult i8* %947, %1313
  %1317 = icmp ult i8* %873, %1311
  %1318 = and i1 %1316, %1317
  %1319 = icmp ult i8* %947, %1315
  %1320 = icmp ult i8* %910, %1311
  %1321 = and i1 %1319, %1320
  %1322 = or i1 %1318, %1321
  br i1 %1322, label %1288, label %1323

1323:                                             ; preds = %1309
  %1324 = and i64 %1286, 4294967292
  %1325 = insertelement <4 x float> undef, float %836, i32 0
  %1326 = shufflevector <4 x float> %1325, <4 x float> undef, <4 x i32> zeroinitializer
  %1327 = insertelement <4 x float> undef, float %837, i32 0
  %1328 = shufflevector <4 x float> %1327, <4 x float> undef, <4 x i32> zeroinitializer
  %1329 = add nsw i64 %1324, -4
  %1330 = lshr exact i64 %1329, 2
  %1331 = add nuw nsw i64 %1330, 1
  %1332 = and i64 %1331, 1
  %1333 = icmp eq i64 %1329, 0
  br i1 %1333, label %1369, label %1334

1334:                                             ; preds = %1323
  %1335 = sub nuw nsw i64 %1331, %1332
  br label %1336

1336:                                             ; preds = %1336, %1334
  %1337 = phi i64 [ 0, %1334 ], [ %1366, %1336 ]
  %1338 = phi i64 [ %1335, %1334 ], [ %1367, %1336 ]
  %1339 = getelementptr inbounds float, float* %874, i64 %1337
  %1340 = bitcast float* %1339 to <4 x float>*
  %1341 = load <4 x float>, <4 x float>* %1340, align 4, !alias.scope !197
  %1342 = getelementptr inbounds float, float* %911, i64 %1337
  %1343 = bitcast float* %1342 to <4 x float>*
  %1344 = load <4 x float>, <4 x float>* %1343, align 4, !alias.scope !200
  %1345 = fdiv <4 x float> %1341, %1344
  %1346 = fcmp olt <4 x float> %1345, %1326
  %1347 = select <4 x i1> %1346, <4 x float> %1326, <4 x float> %1345
  %1348 = fcmp ogt <4 x float> %1347, %1328
  %1349 = select <4 x i1> %1348, <4 x float> %1328, <4 x float> %1347
  %1350 = getelementptr inbounds float, float* %948, i64 %1337
  %1351 = bitcast float* %1350 to <4 x float>*
  store <4 x float> %1349, <4 x float>* %1351, align 4, !alias.scope !202, !noalias !204
  %1352 = or i64 %1337, 4
  %1353 = getelementptr inbounds float, float* %874, i64 %1352
  %1354 = bitcast float* %1353 to <4 x float>*
  %1355 = load <4 x float>, <4 x float>* %1354, align 4, !alias.scope !197
  %1356 = getelementptr inbounds float, float* %911, i64 %1352
  %1357 = bitcast float* %1356 to <4 x float>*
  %1358 = load <4 x float>, <4 x float>* %1357, align 4, !alias.scope !200
  %1359 = fdiv <4 x float> %1355, %1358
  %1360 = fcmp olt <4 x float> %1359, %1326
  %1361 = select <4 x i1> %1360, <4 x float> %1326, <4 x float> %1359
  %1362 = fcmp ogt <4 x float> %1361, %1328
  %1363 = select <4 x i1> %1362, <4 x float> %1328, <4 x float> %1361
  %1364 = getelementptr inbounds float, float* %948, i64 %1352
  %1365 = bitcast float* %1364 to <4 x float>*
  store <4 x float> %1363, <4 x float>* %1365, align 4, !alias.scope !202, !noalias !204
  %1366 = add i64 %1337, 8
  %1367 = add i64 %1338, -2
  %1368 = icmp eq i64 %1367, 0
  br i1 %1368, label %1369, label %1336, !llvm.loop !205

1369:                                             ; preds = %1336, %1323
  %1370 = phi i64 [ 0, %1323 ], [ %1366, %1336 ]
  %1371 = icmp eq i64 %1332, 0
  br i1 %1371, label %1386, label %1372

1372:                                             ; preds = %1369
  %1373 = getelementptr inbounds float, float* %874, i64 %1370
  %1374 = bitcast float* %1373 to <4 x float>*
  %1375 = load <4 x float>, <4 x float>* %1374, align 4, !alias.scope !197
  %1376 = getelementptr inbounds float, float* %911, i64 %1370
  %1377 = bitcast float* %1376 to <4 x float>*
  %1378 = load <4 x float>, <4 x float>* %1377, align 4, !alias.scope !200
  %1379 = fdiv <4 x float> %1375, %1378
  %1380 = fcmp olt <4 x float> %1379, %1326
  %1381 = select <4 x i1> %1380, <4 x float> %1326, <4 x float> %1379
  %1382 = fcmp ogt <4 x float> %1381, %1328
  %1383 = select <4 x i1> %1382, <4 x float> %1328, <4 x float> %1381
  %1384 = getelementptr inbounds float, float* %948, i64 %1370
  %1385 = bitcast float* %1384 to <4 x float>*
  store <4 x float> %1383, <4 x float>* %1385, align 4, !alias.scope !202, !noalias !204
  br label %1386

1386:                                             ; preds = %1369, %1372
  %1387 = icmp eq i64 %1324, %1286
  br i1 %1387, label %1414, label %1288

1388:                                             ; preds = %1281
  tail call void @abort() #13
  unreachable

1389:                                             ; preds = %1305, %1389
  %1390 = phi i64 [ %1412, %1389 ], [ %1306, %1305 ]
  %1391 = getelementptr inbounds float, float* %874, i64 %1390
  %1392 = load float, float* %1391, align 4
  %1393 = getelementptr inbounds float, float* %911, i64 %1390
  %1394 = load float, float* %1393, align 4
  %1395 = fdiv float %1392, %1394
  %1396 = fcmp olt float %1395, %836
  %1397 = select i1 %1396, float %836, float %1395
  %1398 = fcmp ogt float %1397, %837
  %1399 = select i1 %1398, float %837, float %1397
  %1400 = getelementptr inbounds float, float* %948, i64 %1390
  store float %1399, float* %1400, align 4
  %1401 = add nuw nsw i64 %1390, 1
  %1402 = getelementptr inbounds float, float* %874, i64 %1401
  %1403 = load float, float* %1402, align 4
  %1404 = getelementptr inbounds float, float* %911, i64 %1401
  %1405 = load float, float* %1404, align 4
  %1406 = fdiv float %1403, %1405
  %1407 = fcmp olt float %1406, %836
  %1408 = select i1 %1407, float %836, float %1406
  %1409 = fcmp ogt float %1408, %837
  %1410 = select i1 %1409, float %837, float %1408
  %1411 = getelementptr inbounds float, float* %948, i64 %1401
  store float %1410, float* %1411, align 4
  %1412 = add nuw nsw i64 %1390, 2
  %1413 = icmp eq i64 %1412, %1286
  br i1 %1413, label %1414, label %1389, !llvm.loop !206

1414:                                             ; preds = %1305, %1389, %1386, %1283
  br i1 %1169, label %1415, label %1421

1415:                                             ; preds = %1414
  %1416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1417 = load i32*, i32** %1416, align 8
  %1418 = icmp eq i32* %1417, null
  br i1 %1418, label %1421, label %1419

1419:                                             ; preds = %1415
  %1420 = bitcast i32* %1417 to i8*
  tail call void @_ZdaPv(i8* %1420) #11
  br label %1421

1421:                                             ; preds = %1414, %1415, %1419
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %912) #12
  br i1 %1059, label %1422, label %1428

1422:                                             ; preds = %1421
  %1423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1424 = load i32*, i32** %1423, align 8
  %1425 = icmp eq i32* %1424, null
  br i1 %1425, label %1428, label %1426

1426:                                             ; preds = %1422
  %1427 = bitcast i32* %1424 to i8*
  tail call void @_ZdaPv(i8* %1427) #11
  br label %1428

1428:                                             ; preds = %1421, %1422, %1426
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %875) #12
  br i1 %949, label %1429, label %1435

1429:                                             ; preds = %1428
  %1430 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1431 = load i32*, i32** %1430, align 8
  %1432 = icmp eq i32* %1431, null
  br i1 %1432, label %1435, label %1433

1433:                                             ; preds = %1429
  %1434 = bitcast i32* %1431 to i8*
  tail call void @_ZdaPv(i8* %1434) #11
  br label %1435

1435:                                             ; preds = %1428, %1429, %1433
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %838) #12
  br label %1436

1436:                                             ; preds = %7, %1435, %822, %174, %668
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteDivParams*, %"struct.tflite::ops::builtin::div::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %726

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %726

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %726

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %31, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %33, i32* %35, align 4
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sub nsw i32 0, %37
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 0, %41
  %43 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 3
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 4
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 5
  store i32 %51, i32* %52, align 4
  %53 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #12
  %54 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !207
  br label %82

57:                                               ; preds = %28
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %59 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %58, align 8, !noalias !207
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4, !noalias !207
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 0
  %63 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %61, i32* %63, align 8, !alias.scope !207
  %64 = icmp sgt i32 %61, 5
  br i1 %64, label %65, label %72

65:                                               ; preds = %57
  %66 = sext i32 %61 to i64
  %67 = shl nsw i64 %66, 2
  %68 = tail call i8* @_Znam(i64 %67) #11, !noalias !207
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  store i8* %68, i8** %70, align 8, !alias.scope !207
  %71 = bitcast i8* %68 to i32*
  br label %77

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %74 = bitcast %union.anon* %73 to i32*
  %75 = sext i32 %61 to i64
  %76 = shl nsw i64 %75, 2
  br label %77

77:                                               ; preds = %72, %65
  %78 = phi i64 [ %67, %65 ], [ %76, %72 ]
  %79 = phi i32* [ %71, %65 ], [ %74, %72 ]
  %80 = bitcast i32* %79 to i8*
  %81 = bitcast i32* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %78, i1 false) #12
  br label %82

82:                                               ; preds = %55, %77
  %83 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #12
  %84 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %86, align 8, !alias.scope !210
  br label %112

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %89 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %88, align 8, !noalias !210
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !noalias !210
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 0
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %91, i32* %93, align 8, !alias.scope !210
  %94 = icmp sgt i32 %91, 5
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = sext i32 %91 to i64
  %97 = shl nsw i64 %96, 2
  %98 = tail call i8* @_Znam(i64 %97) #11, !noalias !210
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %100 = bitcast i32** %99 to i8**
  store i8* %98, i8** %100, align 8, !alias.scope !210
  %101 = bitcast i8* %98 to i32*
  br label %107

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i32*
  %105 = sext i32 %91 to i64
  %106 = shl nsw i64 %105, 2
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi i64 [ %97, %95 ], [ %106, %102 ]
  %109 = phi i32* [ %101, %95 ], [ %104, %102 ]
  %110 = bitcast i32* %109 to i8*
  %111 = bitcast i32* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %108, i1 false) #12
  br label %112

112:                                              ; preds = %85, %107
  %113 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = icmp sgt i32 %115, 5
  br i1 %116, label %117, label %123

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = icmp eq i32* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = bitcast i32* %119 to i8*
  call void @_ZdaPv(i8* %122) #11
  br label %123

123:                                              ; preds = %112, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #12
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp sgt i32 %125, 5
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = icmp eq i32* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = bitcast i32* %129 to i8*
  call void @_ZdaPv(i8* %132) #11
  br label %133

133:                                              ; preds = %123, %127, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12
  br i1 %113, label %134, label %264

134:                                              ; preds = %133
  %135 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #12
  br i1 %54, label %136, label %138

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %137, align 8, !alias.scope !213
  br label %166

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %140 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %139, align 8, !noalias !213
  %141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 4, !noalias !213
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 1, i64 0
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %142, i32* %144, align 8, !alias.scope !213
  %145 = icmp sgt i32 %142, 5
  br i1 %145, label %146, label %153

146:                                              ; preds = %138
  %147 = sext i32 %142 to i64
  %148 = shl nsw i64 %147, 2
  %149 = call i8* @_Znam(i64 %148) #11, !noalias !213
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %151 = bitcast i32** %150 to i8**
  store i8* %149, i8** %151, align 8, !alias.scope !213
  %152 = bitcast i8* %149 to i32*
  br label %158

153:                                              ; preds = %138
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %155 = bitcast %union.anon* %154 to i32*
  %156 = sext i32 %142 to i64
  %157 = shl nsw i64 %156, 2
  br label %158

158:                                              ; preds = %153, %146
  %159 = phi i64 [ %148, %146 ], [ %157, %153 ]
  %160 = phi i32* [ %152, %146 ], [ %155, %153 ]
  %161 = bitcast i32* %160 to i8*
  %162 = bitcast i32* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 %159, i1 false) #12
  %163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %164 = bitcast %union.TfLitePtrUnion* %163 to i8**
  %165 = load i8*, i8** %164, align 8
  br label %166

166:                                              ; preds = %136, %158
  %167 = phi i8* [ %165, %158 ], [ null, %136 ]
  %168 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #12
  br i1 %84, label %169, label %171

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %170, align 8, !alias.scope !216
  br label %199

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %173 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %172, align 8, !noalias !216
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !216
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %175, i32* %177, align 8, !alias.scope !216
  %178 = icmp sgt i32 %175, 5
  br i1 %178, label %179, label %186

179:                                              ; preds = %171
  %180 = sext i32 %175 to i64
  %181 = shl nsw i64 %180, 2
  %182 = call i8* @_Znam(i64 %181) #11, !noalias !216
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %184 = bitcast i32** %183 to i8**
  store i8* %182, i8** %184, align 8, !alias.scope !216
  %185 = bitcast i8* %182 to i32*
  br label %191

186:                                              ; preds = %171
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = sext i32 %175 to i64
  %190 = shl nsw i64 %189, 2
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %186 ]
  %193 = phi i32* [ %185, %179 ], [ %188, %186 ]
  %194 = bitcast i32* %193 to i8*
  %195 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 %192, i1 false) #12
  %196 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %197 = bitcast %union.TfLitePtrUnion* %196 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %169, %191
  %200 = phi i8* [ %198, %191 ], [ null, %169 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #12
  %202 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !219
  br label %233

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !219
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !219
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !219
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = call i8* @_Znam(i64 %215) #11, !noalias !219
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !219
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #12
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to i8**
  %232 = load i8*, i8** %231, align 8
  br label %233

233:                                              ; preds = %203, %225
  %234 = phi i8* [ %232, %225 ], [ null, %203 ]
  call void @_ZN6tflite13optimized_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %167, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %200, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %234)
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = icmp sgt i32 %236, 5
  br i1 %237, label %238, label %244

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %240 = load i32*, i32** %239, align 8
  %241 = icmp eq i32* %240, null
  br i1 %241, label %244, label %242

242:                                              ; preds = %238
  %243 = bitcast i32* %240 to i8*
  call void @_ZdaPv(i8* %243) #11
  br label %244

244:                                              ; preds = %233, %238, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #12
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = icmp sgt i32 %246, 5
  br i1 %247, label %248, label %254

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = icmp eq i32* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %248
  %253 = bitcast i32* %250 to i8*
  call void @_ZdaPv(i8* %253) #11
  br label %254

254:                                              ; preds = %244, %248, %252
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #12
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp sgt i32 %256, 5
  br i1 %257, label %258, label %724

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = icmp eq i32* %260, null
  br i1 %261, label %724, label %262

262:                                              ; preds = %258
  %263 = bitcast i32* %260 to i8*
  call void @_ZdaPv(i8* %263) #11
  br label %724

264:                                              ; preds = %133
  %265 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %265) #12
  br i1 %54, label %266, label %268

266:                                              ; preds = %264
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %267, align 8, !alias.scope !222
  br label %296

268:                                              ; preds = %264
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %270 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %269, align 8, !noalias !222
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 0
  %272 = load i32, i32* %271, align 4, !noalias !222
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %272, i32* %274, align 8, !alias.scope !222
  %275 = icmp sgt i32 %272, 5
  br i1 %275, label %276, label %283

276:                                              ; preds = %268
  %277 = sext i32 %272 to i64
  %278 = shl nsw i64 %277, 2
  %279 = call i8* @_Znam(i64 %278) #11, !noalias !222
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %281 = bitcast i32** %280 to i8**
  store i8* %279, i8** %281, align 8, !alias.scope !222
  %282 = bitcast i8* %279 to i32*
  br label %288

283:                                              ; preds = %268
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %285 = bitcast %union.anon* %284 to i32*
  %286 = sext i32 %272 to i64
  %287 = shl nsw i64 %286, 2
  br label %288

288:                                              ; preds = %283, %276
  %289 = phi i64 [ %278, %276 ], [ %287, %283 ]
  %290 = phi i32* [ %282, %276 ], [ %285, %283 ]
  %291 = bitcast i32* %290 to i8*
  %292 = bitcast i32* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 4 %292, i64 %289, i1 false) #12
  %293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %294 = bitcast %union.TfLitePtrUnion* %293 to i8**
  %295 = load i8*, i8** %294, align 8
  br label %296

296:                                              ; preds = %266, %288
  %297 = phi i32 [ %272, %288 ], [ 0, %266 ]
  %298 = phi i8* [ %295, %288 ], [ null, %266 ]
  %299 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #12
  br i1 %84, label %300, label %302

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %301, align 8, !alias.scope !225
  br label %330

302:                                              ; preds = %296
  %303 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %304 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %303, align 8, !noalias !225
  %305 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 0
  %306 = load i32, i32* %305, align 4, !noalias !225
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 1, i64 0
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %306, i32* %308, align 8, !alias.scope !225
  %309 = icmp sgt i32 %306, 5
  br i1 %309, label %310, label %317

310:                                              ; preds = %302
  %311 = sext i32 %306 to i64
  %312 = shl nsw i64 %311, 2
  %313 = call i8* @_Znam(i64 %312) #11, !noalias !225
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %315 = bitcast i32** %314 to i8**
  store i8* %313, i8** %315, align 8, !alias.scope !225
  %316 = bitcast i8* %313 to i32*
  br label %322

317:                                              ; preds = %302
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %319 = bitcast %union.anon* %318 to i32*
  %320 = sext i32 %306 to i64
  %321 = shl nsw i64 %320, 2
  br label %322

322:                                              ; preds = %317, %310
  %323 = phi i64 [ %312, %310 ], [ %321, %317 ]
  %324 = phi i32* [ %316, %310 ], [ %319, %317 ]
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %323, i1 false) #12
  %327 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %328 = bitcast %union.TfLitePtrUnion* %327 to i8**
  %329 = load i8*, i8** %328, align 8
  br label %330

330:                                              ; preds = %300, %322
  %331 = phi i32 [ %306, %322 ], [ 0, %300 ]
  %332 = phi i8* [ %329, %322 ], [ null, %300 ]
  %333 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %333) #12
  %334 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %334, label %335, label %337

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %336, align 8, !alias.scope !228
  br label %365

337:                                              ; preds = %330
  %338 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %339 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %338, align 8, !noalias !228
  %340 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %339, i64 0, i32 0
  %341 = load i32, i32* %340, align 4, !noalias !228
  %342 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %339, i64 0, i32 1, i64 0
  %343 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %341, i32* %343, align 8, !alias.scope !228
  %344 = icmp sgt i32 %341, 5
  br i1 %344, label %345, label %352

345:                                              ; preds = %337
  %346 = sext i32 %341 to i64
  %347 = shl nsw i64 %346, 2
  %348 = call i8* @_Znam(i64 %347) #11, !noalias !228
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %350 = bitcast i32** %349 to i8**
  store i8* %348, i8** %350, align 8, !alias.scope !228
  %351 = bitcast i8* %348 to i32*
  br label %357

352:                                              ; preds = %337
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %354 = bitcast %union.anon* %353 to i32*
  %355 = sext i32 %341 to i64
  %356 = shl nsw i64 %355, 2
  br label %357

357:                                              ; preds = %352, %345
  %358 = phi i64 [ %347, %345 ], [ %356, %352 ]
  %359 = phi i32* [ %351, %345 ], [ %354, %352 ]
  %360 = bitcast i32* %359 to i8*
  %361 = bitcast i32* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %360, i8* align 4 %361, i64 %358, i1 false) #12
  %362 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %363 = bitcast %union.TfLitePtrUnion* %362 to i8**
  %364 = load i8*, i8** %363, align 8
  br label %365

365:                                              ; preds = %335, %357
  %366 = phi i32 [ %341, %357 ], [ 0, %335 ]
  %367 = phi i8* [ %364, %357 ], [ null, %335 ]
  %368 = icmp sgt i32 %297, 5
  %369 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %368, label %370, label %373

370:                                              ; preds = %365
  %371 = getelementptr inbounds %union.anon, %union.anon* %369, i64 0, i32 0
  %372 = load i32*, i32** %371, align 8
  br label %376

373:                                              ; preds = %365
  %374 = bitcast %union.anon* %369 to i32*
  %375 = icmp sgt i32 %297, 0
  br i1 %375, label %376, label %476

376:                                              ; preds = %373, %370
  %377 = phi i32* [ %372, %370 ], [ %374, %373 ]
  %378 = zext i32 %297 to i64
  %379 = icmp ult i32 %297, 8
  br i1 %379, label %465, label %380

380:                                              ; preds = %376
  %381 = and i64 %378, 4294967288
  %382 = add nsw i64 %381, -8
  %383 = lshr exact i64 %382, 3
  %384 = add nuw nsw i64 %383, 1
  %385 = and i64 %384, 3
  %386 = icmp ult i64 %382, 24
  br i1 %386, label %432, label %387

387:                                              ; preds = %380
  %388 = sub nsw i64 %384, %385
  br label %389

389:                                              ; preds = %389, %387
  %390 = phi i64 [ 0, %387 ], [ %429, %389 ]
  %391 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %427, %389 ]
  %392 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %428, %389 ]
  %393 = phi i64 [ %388, %387 ], [ %430, %389 ]
  %394 = getelementptr inbounds i32, i32* %377, i64 %390
  %395 = bitcast i32* %394 to <4 x i32>*
  %396 = load <4 x i32>, <4 x i32>* %395, align 4
  %397 = getelementptr inbounds i32, i32* %394, i64 4
  %398 = bitcast i32* %397 to <4 x i32>*
  %399 = load <4 x i32>, <4 x i32>* %398, align 4
  %400 = mul nsw <4 x i32> %396, %391
  %401 = mul nsw <4 x i32> %399, %392
  %402 = or i64 %390, 8
  %403 = getelementptr inbounds i32, i32* %377, i64 %402
  %404 = bitcast i32* %403 to <4 x i32>*
  %405 = load <4 x i32>, <4 x i32>* %404, align 4
  %406 = getelementptr inbounds i32, i32* %403, i64 4
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4
  %409 = mul nsw <4 x i32> %405, %400
  %410 = mul nsw <4 x i32> %408, %401
  %411 = or i64 %390, 16
  %412 = getelementptr inbounds i32, i32* %377, i64 %411
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4
  %415 = getelementptr inbounds i32, i32* %412, i64 4
  %416 = bitcast i32* %415 to <4 x i32>*
  %417 = load <4 x i32>, <4 x i32>* %416, align 4
  %418 = mul nsw <4 x i32> %414, %409
  %419 = mul nsw <4 x i32> %417, %410
  %420 = or i64 %390, 24
  %421 = getelementptr inbounds i32, i32* %377, i64 %420
  %422 = bitcast i32* %421 to <4 x i32>*
  %423 = load <4 x i32>, <4 x i32>* %422, align 4
  %424 = getelementptr inbounds i32, i32* %421, i64 4
  %425 = bitcast i32* %424 to <4 x i32>*
  %426 = load <4 x i32>, <4 x i32>* %425, align 4
  %427 = mul nsw <4 x i32> %423, %418
  %428 = mul nsw <4 x i32> %426, %419
  %429 = add i64 %390, 32
  %430 = add i64 %393, -4
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %389, !llvm.loop !231

432:                                              ; preds = %389, %380
  %433 = phi <4 x i32> [ undef, %380 ], [ %427, %389 ]
  %434 = phi <4 x i32> [ undef, %380 ], [ %428, %389 ]
  %435 = phi i64 [ 0, %380 ], [ %429, %389 ]
  %436 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %380 ], [ %427, %389 ]
  %437 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %380 ], [ %428, %389 ]
  %438 = icmp eq i64 %385, 0
  br i1 %438, label %455, label %439

439:                                              ; preds = %432, %439
  %440 = phi i64 [ %452, %439 ], [ %435, %432 ]
  %441 = phi <4 x i32> [ %450, %439 ], [ %436, %432 ]
  %442 = phi <4 x i32> [ %451, %439 ], [ %437, %432 ]
  %443 = phi i64 [ %453, %439 ], [ %385, %432 ]
  %444 = getelementptr inbounds i32, i32* %377, i64 %440
  %445 = bitcast i32* %444 to <4 x i32>*
  %446 = load <4 x i32>, <4 x i32>* %445, align 4
  %447 = getelementptr inbounds i32, i32* %444, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4
  %450 = mul nsw <4 x i32> %446, %441
  %451 = mul nsw <4 x i32> %449, %442
  %452 = add i64 %440, 8
  %453 = add i64 %443, -1
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %455, label %439, !llvm.loop !232

455:                                              ; preds = %439, %432
  %456 = phi <4 x i32> [ %433, %432 ], [ %450, %439 ]
  %457 = phi <4 x i32> [ %434, %432 ], [ %451, %439 ]
  %458 = mul <4 x i32> %457, %456
  %459 = shufflevector <4 x i32> %458, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %460 = mul <4 x i32> %458, %459
  %461 = shufflevector <4 x i32> %460, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %462 = mul <4 x i32> %460, %461
  %463 = extractelement <4 x i32> %462, i32 0
  %464 = icmp eq i64 %381, %378
  br i1 %464, label %476, label %465

465:                                              ; preds = %455, %376
  %466 = phi i64 [ 0, %376 ], [ %381, %455 ]
  %467 = phi i32 [ 1, %376 ], [ %463, %455 ]
  br label %468

468:                                              ; preds = %465, %468
  %469 = phi i64 [ %474, %468 ], [ %466, %465 ]
  %470 = phi i32 [ %473, %468 ], [ %467, %465 ]
  %471 = getelementptr inbounds i32, i32* %377, i64 %469
  %472 = load i32, i32* %471, align 4
  %473 = mul nsw i32 %472, %470
  %474 = add nuw nsw i64 %469, 1
  %475 = icmp eq i64 %474, %378
  br i1 %475, label %476, label %468, !llvm.loop !233

476:                                              ; preds = %468, %455, %373
  %477 = phi i32 [ 1, %373 ], [ %463, %455 ], [ %473, %468 ]
  %478 = icmp sgt i32 %331, 5
  %479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %478, label %480, label %483

480:                                              ; preds = %476
  %481 = getelementptr inbounds %union.anon, %union.anon* %479, i64 0, i32 0
  %482 = load i32*, i32** %481, align 8
  br label %486

483:                                              ; preds = %476
  %484 = bitcast %union.anon* %479 to i32*
  %485 = icmp sgt i32 %331, 0
  br i1 %485, label %486, label %586

486:                                              ; preds = %483, %480
  %487 = phi i32* [ %482, %480 ], [ %484, %483 ]
  %488 = zext i32 %331 to i64
  %489 = icmp ult i32 %331, 8
  br i1 %489, label %575, label %490

490:                                              ; preds = %486
  %491 = and i64 %488, 4294967288
  %492 = add nsw i64 %491, -8
  %493 = lshr exact i64 %492, 3
  %494 = add nuw nsw i64 %493, 1
  %495 = and i64 %494, 3
  %496 = icmp ult i64 %492, 24
  br i1 %496, label %542, label %497

497:                                              ; preds = %490
  %498 = sub nsw i64 %494, %495
  br label %499

499:                                              ; preds = %499, %497
  %500 = phi i64 [ 0, %497 ], [ %539, %499 ]
  %501 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %537, %499 ]
  %502 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %538, %499 ]
  %503 = phi i64 [ %498, %497 ], [ %540, %499 ]
  %504 = getelementptr inbounds i32, i32* %487, i64 %500
  %505 = bitcast i32* %504 to <4 x i32>*
  %506 = load <4 x i32>, <4 x i32>* %505, align 4
  %507 = getelementptr inbounds i32, i32* %504, i64 4
  %508 = bitcast i32* %507 to <4 x i32>*
  %509 = load <4 x i32>, <4 x i32>* %508, align 4
  %510 = mul nsw <4 x i32> %506, %501
  %511 = mul nsw <4 x i32> %509, %502
  %512 = or i64 %500, 8
  %513 = getelementptr inbounds i32, i32* %487, i64 %512
  %514 = bitcast i32* %513 to <4 x i32>*
  %515 = load <4 x i32>, <4 x i32>* %514, align 4
  %516 = getelementptr inbounds i32, i32* %513, i64 4
  %517 = bitcast i32* %516 to <4 x i32>*
  %518 = load <4 x i32>, <4 x i32>* %517, align 4
  %519 = mul nsw <4 x i32> %515, %510
  %520 = mul nsw <4 x i32> %518, %511
  %521 = or i64 %500, 16
  %522 = getelementptr inbounds i32, i32* %487, i64 %521
  %523 = bitcast i32* %522 to <4 x i32>*
  %524 = load <4 x i32>, <4 x i32>* %523, align 4
  %525 = getelementptr inbounds i32, i32* %522, i64 4
  %526 = bitcast i32* %525 to <4 x i32>*
  %527 = load <4 x i32>, <4 x i32>* %526, align 4
  %528 = mul nsw <4 x i32> %524, %519
  %529 = mul nsw <4 x i32> %527, %520
  %530 = or i64 %500, 24
  %531 = getelementptr inbounds i32, i32* %487, i64 %530
  %532 = bitcast i32* %531 to <4 x i32>*
  %533 = load <4 x i32>, <4 x i32>* %532, align 4
  %534 = getelementptr inbounds i32, i32* %531, i64 4
  %535 = bitcast i32* %534 to <4 x i32>*
  %536 = load <4 x i32>, <4 x i32>* %535, align 4
  %537 = mul nsw <4 x i32> %533, %528
  %538 = mul nsw <4 x i32> %536, %529
  %539 = add i64 %500, 32
  %540 = add i64 %503, -4
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %542, label %499, !llvm.loop !234

542:                                              ; preds = %499, %490
  %543 = phi <4 x i32> [ undef, %490 ], [ %537, %499 ]
  %544 = phi <4 x i32> [ undef, %490 ], [ %538, %499 ]
  %545 = phi i64 [ 0, %490 ], [ %539, %499 ]
  %546 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %490 ], [ %537, %499 ]
  %547 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %490 ], [ %538, %499 ]
  %548 = icmp eq i64 %495, 0
  br i1 %548, label %565, label %549

549:                                              ; preds = %542, %549
  %550 = phi i64 [ %562, %549 ], [ %545, %542 ]
  %551 = phi <4 x i32> [ %560, %549 ], [ %546, %542 ]
  %552 = phi <4 x i32> [ %561, %549 ], [ %547, %542 ]
  %553 = phi i64 [ %563, %549 ], [ %495, %542 ]
  %554 = getelementptr inbounds i32, i32* %487, i64 %550
  %555 = bitcast i32* %554 to <4 x i32>*
  %556 = load <4 x i32>, <4 x i32>* %555, align 4
  %557 = getelementptr inbounds i32, i32* %554, i64 4
  %558 = bitcast i32* %557 to <4 x i32>*
  %559 = load <4 x i32>, <4 x i32>* %558, align 4
  %560 = mul nsw <4 x i32> %556, %551
  %561 = mul nsw <4 x i32> %559, %552
  %562 = add i64 %550, 8
  %563 = add i64 %553, -1
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %565, label %549, !llvm.loop !235

565:                                              ; preds = %549, %542
  %566 = phi <4 x i32> [ %543, %542 ], [ %560, %549 ]
  %567 = phi <4 x i32> [ %544, %542 ], [ %561, %549 ]
  %568 = mul <4 x i32> %567, %566
  %569 = shufflevector <4 x i32> %568, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %570 = mul <4 x i32> %568, %569
  %571 = shufflevector <4 x i32> %570, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %572 = mul <4 x i32> %570, %571
  %573 = extractelement <4 x i32> %572, i32 0
  %574 = icmp eq i64 %491, %488
  br i1 %574, label %586, label %575

575:                                              ; preds = %565, %486
  %576 = phi i64 [ 0, %486 ], [ %491, %565 ]
  %577 = phi i32 [ 1, %486 ], [ %573, %565 ]
  br label %578

578:                                              ; preds = %575, %578
  %579 = phi i64 [ %584, %578 ], [ %576, %575 ]
  %580 = phi i32 [ %583, %578 ], [ %577, %575 ]
  %581 = getelementptr inbounds i32, i32* %487, i64 %579
  %582 = load i32, i32* %581, align 4
  %583 = mul nsw i32 %582, %580
  %584 = add nuw nsw i64 %579, 1
  %585 = icmp eq i64 %584, %488
  br i1 %585, label %586, label %578, !llvm.loop !236

586:                                              ; preds = %578, %565, %483
  %587 = phi i32 [ 1, %483 ], [ %573, %565 ], [ %583, %578 ]
  %588 = icmp sgt i32 %366, 5
  %589 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %588, label %590, label %593

590:                                              ; preds = %586
  %591 = getelementptr inbounds %union.anon, %union.anon* %589, i64 0, i32 0
  %592 = load i32*, i32** %591, align 8
  br label %596

593:                                              ; preds = %586
  %594 = bitcast %union.anon* %589 to i32*
  %595 = icmp sgt i32 %366, 0
  br i1 %595, label %596, label %696

596:                                              ; preds = %593, %590
  %597 = phi i32* [ %592, %590 ], [ %594, %593 ]
  %598 = zext i32 %366 to i64
  %599 = icmp ult i32 %366, 8
  br i1 %599, label %685, label %600

600:                                              ; preds = %596
  %601 = and i64 %598, 4294967288
  %602 = add nsw i64 %601, -8
  %603 = lshr exact i64 %602, 3
  %604 = add nuw nsw i64 %603, 1
  %605 = and i64 %604, 3
  %606 = icmp ult i64 %602, 24
  br i1 %606, label %652, label %607

607:                                              ; preds = %600
  %608 = sub nsw i64 %604, %605
  br label %609

609:                                              ; preds = %609, %607
  %610 = phi i64 [ 0, %607 ], [ %649, %609 ]
  %611 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %607 ], [ %647, %609 ]
  %612 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %607 ], [ %648, %609 ]
  %613 = phi i64 [ %608, %607 ], [ %650, %609 ]
  %614 = getelementptr inbounds i32, i32* %597, i64 %610
  %615 = bitcast i32* %614 to <4 x i32>*
  %616 = load <4 x i32>, <4 x i32>* %615, align 4
  %617 = getelementptr inbounds i32, i32* %614, i64 4
  %618 = bitcast i32* %617 to <4 x i32>*
  %619 = load <4 x i32>, <4 x i32>* %618, align 4
  %620 = mul nsw <4 x i32> %616, %611
  %621 = mul nsw <4 x i32> %619, %612
  %622 = or i64 %610, 8
  %623 = getelementptr inbounds i32, i32* %597, i64 %622
  %624 = bitcast i32* %623 to <4 x i32>*
  %625 = load <4 x i32>, <4 x i32>* %624, align 4
  %626 = getelementptr inbounds i32, i32* %623, i64 4
  %627 = bitcast i32* %626 to <4 x i32>*
  %628 = load <4 x i32>, <4 x i32>* %627, align 4
  %629 = mul nsw <4 x i32> %625, %620
  %630 = mul nsw <4 x i32> %628, %621
  %631 = or i64 %610, 16
  %632 = getelementptr inbounds i32, i32* %597, i64 %631
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4
  %635 = getelementptr inbounds i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4
  %638 = mul nsw <4 x i32> %634, %629
  %639 = mul nsw <4 x i32> %637, %630
  %640 = or i64 %610, 24
  %641 = getelementptr inbounds i32, i32* %597, i64 %640
  %642 = bitcast i32* %641 to <4 x i32>*
  %643 = load <4 x i32>, <4 x i32>* %642, align 4
  %644 = getelementptr inbounds i32, i32* %641, i64 4
  %645 = bitcast i32* %644 to <4 x i32>*
  %646 = load <4 x i32>, <4 x i32>* %645, align 4
  %647 = mul nsw <4 x i32> %643, %638
  %648 = mul nsw <4 x i32> %646, %639
  %649 = add i64 %610, 32
  %650 = add i64 %613, -4
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %609, !llvm.loop !237

652:                                              ; preds = %609, %600
  %653 = phi <4 x i32> [ undef, %600 ], [ %647, %609 ]
  %654 = phi <4 x i32> [ undef, %600 ], [ %648, %609 ]
  %655 = phi i64 [ 0, %600 ], [ %649, %609 ]
  %656 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %600 ], [ %647, %609 ]
  %657 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %600 ], [ %648, %609 ]
  %658 = icmp eq i64 %605, 0
  br i1 %658, label %675, label %659

659:                                              ; preds = %652, %659
  %660 = phi i64 [ %672, %659 ], [ %655, %652 ]
  %661 = phi <4 x i32> [ %670, %659 ], [ %656, %652 ]
  %662 = phi <4 x i32> [ %671, %659 ], [ %657, %652 ]
  %663 = phi i64 [ %673, %659 ], [ %605, %652 ]
  %664 = getelementptr inbounds i32, i32* %597, i64 %660
  %665 = bitcast i32* %664 to <4 x i32>*
  %666 = load <4 x i32>, <4 x i32>* %665, align 4
  %667 = getelementptr inbounds i32, i32* %664, i64 4
  %668 = bitcast i32* %667 to <4 x i32>*
  %669 = load <4 x i32>, <4 x i32>* %668, align 4
  %670 = mul nsw <4 x i32> %666, %661
  %671 = mul nsw <4 x i32> %669, %662
  %672 = add i64 %660, 8
  %673 = add i64 %663, -1
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %675, label %659, !llvm.loop !238

675:                                              ; preds = %659, %652
  %676 = phi <4 x i32> [ %653, %652 ], [ %670, %659 ]
  %677 = phi <4 x i32> [ %654, %652 ], [ %671, %659 ]
  %678 = mul <4 x i32> %677, %676
  %679 = shufflevector <4 x i32> %678, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %680 = mul <4 x i32> %678, %679
  %681 = shufflevector <4 x i32> %680, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %682 = mul <4 x i32> %680, %681
  %683 = extractelement <4 x i32> %682, i32 0
  %684 = icmp eq i64 %601, %598
  br i1 %684, label %696, label %685

685:                                              ; preds = %675, %596
  %686 = phi i64 [ 0, %596 ], [ %601, %675 ]
  %687 = phi i32 [ 1, %596 ], [ %683, %675 ]
  br label %688

688:                                              ; preds = %685, %688
  %689 = phi i64 [ %694, %688 ], [ %686, %685 ]
  %690 = phi i32 [ %693, %688 ], [ %687, %685 ]
  %691 = getelementptr inbounds i32, i32* %597, i64 %689
  %692 = load i32, i32* %691, align 4
  %693 = mul nsw i32 %692, %690
  %694 = add nuw nsw i64 %689, 1
  %695 = icmp eq i64 %694, %598
  br i1 %695, label %696, label %688, !llvm.loop !239

696:                                              ; preds = %688, %675, %593
  %697 = phi i32 [ 1, %593 ], [ %683, %675 ], [ %693, %688 ]
  %698 = icmp eq i32 %477, %587
  br i1 %698, label %700, label %699

699:                                              ; preds = %696
  call void @abort() #13
  unreachable

700:                                              ; preds = %696
  %701 = icmp eq i32 %477, %697
  br i1 %701, label %703, label %702

702:                                              ; preds = %700
  call void @abort() #13
  unreachable

703:                                              ; preds = %700
  call void @_ZN6tflite13reference_ops14DivElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %477, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, i8* %298, i8* %332, i8* %367) #12
  br i1 %588, label %704, label %710

704:                                              ; preds = %703
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  %709 = bitcast i32* %706 to i8*
  call void @_ZdaPv(i8* %709) #11
  br label %710

710:                                              ; preds = %703, %704, %708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %333) #12
  br i1 %478, label %711, label %717

711:                                              ; preds = %710
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %713 = load i32*, i32** %712, align 8
  %714 = icmp eq i32* %713, null
  br i1 %714, label %717, label %715

715:                                              ; preds = %711
  %716 = bitcast i32* %713 to i8*
  call void @_ZdaPv(i8* %716) #11
  br label %717

717:                                              ; preds = %710, %711, %715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #12
  br i1 %368, label %718, label %724

718:                                              ; preds = %717
  %719 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = icmp eq i32* %720, null
  br i1 %721, label %724, label %722

722:                                              ; preds = %718
  %723 = bitcast i32* %720 to i8*
  call void @_ZdaPv(i8* %723) #11
  br label %724

724:                                              ; preds = %722, %718, %717, %262, %258, %254
  %725 = phi i8* [ %135, %254 ], [ %135, %258 ], [ %135, %262 ], [ %265, %717 ], [ %265, %718 ], [ %265, %722 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #12
  br label %729

726:                                              ; preds = %24, %20, %7
  %727 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %728 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %727, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %728(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.16, i64 0, i64 0)) #12
  br label %729

729:                                              ; preds = %724, %726
  %730 = phi i32 [ 0, %724 ], [ 1, %726 ]
  ret i32 %730
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #3 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"struct.tflite::NdArrayDesc", align 4
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %class.anon.7, align 8
  store i32* %2, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  store i32* %6, i32** %11, align 8
  %19 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #12
  %20 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %12, align 4
  %23 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %13, align 4
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %26 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -86, i64 40, i1 false)
  %27 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 -86, i64 40, i1 false)
  %28 = bitcast %"struct.tflite::NdArrayDesc"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %14, %"struct.tflite::NdArrayDesc"* nonnull %15)
  %29 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %30, align 8, !alias.scope !240
  %31 = load i32, i32* %25, align 8, !noalias !240
  %32 = icmp sgt i32 %31, 5
  br i1 %32, label %33, label %34

33:                                               ; preds = %7
  call void @abort() #13, !noalias !240
  unreachable

34:                                               ; preds = %7
  store i32 5, i32* %30, align 8, !alias.scope !240
  %35 = sub i32 5, %31
  %36 = icmp sgt i32 %35, 0
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %38 = bitcast %union.anon* %37 to [5 x i32]*
  br i1 %36, label %39, label %118

39:                                               ; preds = %34
  %40 = zext i32 %35 to i64
  %41 = icmp ult i32 %35, 8
  br i1 %41, label %111, label %42

42:                                               ; preds = %39
  %43 = and i64 %40, 4294967288
  %44 = add nsw i64 %43, -8
  %45 = lshr exact i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 7
  %48 = icmp ult i64 %44, 56
  br i1 %48, label %96, label %49

49:                                               ; preds = %42
  %50 = sub nsw i64 %46, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %93, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %94, %51 ]
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %52
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !240
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !240
  %58 = or i64 %52, 8
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !240
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !240
  %63 = or i64 %52, 16
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !240
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !240
  %68 = or i64 %52, 24
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !240
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !240
  %73 = or i64 %52, 32
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !240
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !240
  %78 = or i64 %52, 40
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !240
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !240
  %83 = or i64 %52, 48
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !240
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !240
  %88 = or i64 %52, 56
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !240
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %92, align 8, !alias.scope !240
  %93 = add i64 %52, 64
  %94 = add i64 %53, -8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %51, !llvm.loop !243

96:                                               ; preds = %51, %42
  %97 = phi i64 [ 0, %42 ], [ %93, %51 ]
  %98 = icmp eq i64 %47, 0
  br i1 %98, label %109, label %99

99:                                               ; preds = %96, %99
  %100 = phi i64 [ %106, %99 ], [ %97, %96 ]
  %101 = phi i64 [ %107, %99 ], [ %47, %96 ]
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %103, align 8, !alias.scope !240
  %104 = getelementptr inbounds i32, i32* %102, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %105, align 8, !alias.scope !240
  %106 = add i64 %100, 8
  %107 = add i64 %101, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %99, !llvm.loop !244

109:                                              ; preds = %99, %96
  %110 = icmp eq i64 %43, %40
  br i1 %110, label %118, label %111

111:                                              ; preds = %109, %39
  %112 = phi i64 [ 0, %39 ], [ %43, %109 ]
  br label %113

113:                                              ; preds = %111, %113
  %114 = phi i64 [ %116, %113 ], [ %112, %111 ]
  %115 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %114
  store i32 1, i32* %115, align 4, !alias.scope !240
  %116 = add nuw nsw i64 %114, 1
  %117 = icmp eq i64 %116, %40
  br i1 %117, label %118, label %113, !llvm.loop !245

118:                                              ; preds = %113, %109, %34
  %119 = getelementptr inbounds %union.anon, %union.anon* %37, i64 0, i32 0
  %120 = bitcast %union.anon* %37 to i32*
  %121 = sext i32 %35 to i64
  %122 = getelementptr inbounds i32, i32* %120, i64 %121
  %123 = bitcast i32* %122 to i8*
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %125 = bitcast %union.anon* %124 to i8*
  %126 = sext i32 %31 to i64
  %127 = shl nsw i64 %126, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %125, i64 %127, i1 false) #12
  %128 = load i32, i32* %30, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %119, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 4
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 8
  %133 = bitcast i8* %132 to i32*
  %134 = select i1 %129, i32* %131, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 4
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 4
  store i32 1, i32* %137, align 4
  %138 = load i32, i32* %134, align 4
  %139 = getelementptr inbounds i32, i32* %130, i64 3
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 4
  %141 = bitcast i8* %140 to i32*
  %142 = select i1 %129, i32* %139, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 3
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 3
  store i32 %138, i32* %145, align 4
  %146 = load i32, i32* %142, align 4
  %147 = mul nsw i32 %146, %138
  %148 = getelementptr inbounds i32, i32* %130, i64 2
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1
  %150 = bitcast [16 x i8]* %149 to i32*
  %151 = select i1 %129, i32* %148, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 2
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 2
  store i32 %147, i32* %154, align 4
  %155 = load i32, i32* %151, align 4
  %156 = mul nsw i32 %155, %147
  %157 = getelementptr inbounds i32, i32* %130, i64 1
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 1
  %159 = select i1 %129, i32* %157, i32* %158
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 1
  store i32 %156, i32* %162, align 4
  %163 = load i32, i32* %159, align 4
  %164 = mul nsw i32 %163, %156
  %165 = select i1 %129, i32* %130, i32* %120
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 0
  store i32 %166, i32* %167, align 4
  %168 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 0
  store i32 %164, i32* %168, align 4
  %169 = xor i1 %129, true
  %170 = icmp eq i32* %130, null
  %171 = or i1 %170, %169
  br i1 %171, label %174, label %172

172:                                              ; preds = %118
  %173 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %173) #11
  br label %174

174:                                              ; preds = %118, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #12
  %175 = bitcast %class.anon.7* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %175) #12
  %176 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 0
  store i32** %11, i32*** %176, align 8
  %177 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %16, %"struct.tflite::NdArrayDesc"** %177, align 8
  %178 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 2
  store i32** %9, i32*** %178, align 8
  %179 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 3
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %179, align 8
  %180 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 4
  store i32** %10, i32*** %180, align 8
  %181 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 5
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %181, align 8
  %182 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 6
  store i32* %12, i32** %182, align 8
  %183 = getelementptr inbounds %class.anon.7, %class.anon.7* %18, i64 0, i32 7
  store i32* %13, i32** %183, align 8
  %184 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %184) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %184, i8 0, i64 20, i1 false) #12
  %185 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13optimized_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %16, %class.anon.7* nonnull dereferenceable(64) %18, i32* nonnull %185) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %184) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %175) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #3 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"struct.tflite::NdArrayDesc", align 4
  %16 = alloca %"struct.tflite::NdArrayDesc", align 4
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %class.anon.8, align 8
  store float* %2, float** %9, align 8
  store float* %4, float** %10, align 8
  store float* %6, float** %11, align 8
  %19 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #12
  %20 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 13
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %12 to i32*
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 14
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %13 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %30 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 -86, i64 40, i1 false)
  %31 = bitcast %"struct.tflite::NdArrayDesc"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -86, i64 40, i1 false)
  %32 = bitcast %"struct.tflite::NdArrayDesc"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %14, %"struct.tflite::NdArrayDesc"* nonnull %15)
  %33 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %34, align 8, !alias.scope !246
  %35 = load i32, i32* %29, align 8, !noalias !246
  %36 = icmp sgt i32 %35, 5
  br i1 %36, label %37, label %38

37:                                               ; preds = %7
  call void @abort() #13, !noalias !246
  unreachable

38:                                               ; preds = %7
  store i32 5, i32* %34, align 8, !alias.scope !246
  %39 = sub i32 5, %35
  %40 = icmp sgt i32 %39, 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %42 = bitcast %union.anon* %41 to [5 x i32]*
  br i1 %40, label %43, label %122

43:                                               ; preds = %38
  %44 = zext i32 %39 to i64
  %45 = icmp ult i32 %39, 8
  br i1 %45, label %115, label %46

46:                                               ; preds = %43
  %47 = and i64 %44, 4294967288
  %48 = add nsw i64 %47, -8
  %49 = lshr exact i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 7
  %52 = icmp ult i64 %48, 56
  br i1 %52, label %100, label %53

53:                                               ; preds = %46
  %54 = sub nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %97, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %98, %55 ]
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %56
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !246
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !246
  %62 = or i64 %56, 8
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !246
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !246
  %67 = or i64 %56, 16
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !246
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !246
  %72 = or i64 %56, 24
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !246
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !246
  %77 = or i64 %56, 32
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !246
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !246
  %82 = or i64 %56, 40
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !246
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !246
  %87 = or i64 %56, 48
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %87
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !246
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !246
  %92 = or i64 %56, 56
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %92
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %94, align 8, !alias.scope !246
  %95 = getelementptr inbounds i32, i32* %93, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %96, align 8, !alias.scope !246
  %97 = add i64 %56, 64
  %98 = add i64 %57, -8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %55, !llvm.loop !249

100:                                              ; preds = %55, %46
  %101 = phi i64 [ 0, %46 ], [ %97, %55 ]
  %102 = icmp eq i64 %51, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %110, %103 ], [ %101, %100 ]
  %105 = phi i64 [ %111, %103 ], [ %51, %100 ]
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %107, align 8, !alias.scope !246
  %108 = getelementptr inbounds i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %109, align 8, !alias.scope !246
  %110 = add i64 %104, 8
  %111 = add i64 %105, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %103, !llvm.loop !250

113:                                              ; preds = %103, %100
  %114 = icmp eq i64 %47, %44
  br i1 %114, label %122, label %115

115:                                              ; preds = %113, %43
  %116 = phi i64 [ 0, %43 ], [ %47, %113 ]
  br label %117

117:                                              ; preds = %115, %117
  %118 = phi i64 [ %120, %117 ], [ %116, %115 ]
  %119 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %118
  store i32 1, i32* %119, align 4, !alias.scope !246
  %120 = add nuw nsw i64 %118, 1
  %121 = icmp eq i64 %120, %44
  br i1 %121, label %122, label %117, !llvm.loop !251

122:                                              ; preds = %117, %113, %38
  %123 = getelementptr inbounds %union.anon, %union.anon* %41, i64 0, i32 0
  %124 = bitcast %union.anon* %41 to i32*
  %125 = sext i32 %39 to i64
  %126 = getelementptr inbounds i32, i32* %124, i64 %125
  %127 = bitcast i32* %126 to i8*
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %129 = bitcast %union.anon* %128 to i8*
  %130 = sext i32 %35 to i64
  %131 = shl nsw i64 %130, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %129, i64 %131, i1 false) #12
  %132 = load i32, i32* %34, align 8
  %133 = icmp sgt i32 %132, 5
  %134 = load i32*, i32** %123, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 4
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 8
  %137 = bitcast i8* %136 to i32*
  %138 = select i1 %133, i32* %135, i32* %137
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 4
  store i32 %139, i32* %140, align 4
  %141 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 4
  store i32 1, i32* %141, align 4
  %142 = load i32, i32* %138, align 4
  %143 = getelementptr inbounds i32, i32* %134, i64 3
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1, i64 4
  %145 = bitcast i8* %144 to i32*
  %146 = select i1 %133, i32* %143, i32* %145
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 3
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 3
  store i32 %142, i32* %149, align 4
  %150 = load i32, i32* %146, align 4
  %151 = mul nsw i32 %150, %142
  %152 = getelementptr inbounds i32, i32* %134, i64 2
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 1
  %154 = bitcast [16 x i8]* %153 to i32*
  %155 = select i1 %133, i32* %152, i32* %154
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 2
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 2
  store i32 %151, i32* %158, align 4
  %159 = load i32, i32* %155, align 4
  %160 = mul nsw i32 %159, %151
  %161 = getelementptr inbounds i32, i32* %134, i64 1
  %162 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 1
  %163 = select i1 %133, i32* %161, i32* %162
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 1
  store i32 %164, i32* %165, align 4
  %166 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 1
  store i32 %160, i32* %166, align 4
  %167 = load i32, i32* %163, align 4
  %168 = mul nsw i32 %167, %160
  %169 = select i1 %133, i32* %134, i32* %124
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 0, i64 0
  store i32 %170, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %16, i64 0, i32 1, i64 0
  store i32 %168, i32* %172, align 4
  %173 = xor i1 %133, true
  %174 = icmp eq i32* %134, null
  %175 = or i1 %174, %173
  br i1 %175, label %178, label %176

176:                                              ; preds = %122
  %177 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %177) #11
  br label %178

178:                                              ; preds = %122, %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #12
  %179 = bitcast %class.anon.8* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %179) #12
  %180 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 0
  store float** %11, float*** %180, align 8
  %181 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %16, %"struct.tflite::NdArrayDesc"** %181, align 8
  %182 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 2
  store float** %9, float*** %182, align 8
  %183 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 3
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %183, align 8
  %184 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 4
  store float** %10, float*** %184, align 8
  %185 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 5
  store %"struct.tflite::NdArrayDesc"* %15, %"struct.tflite::NdArrayDesc"** %185, align 8
  %186 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 6
  store float* %12, float** %186, align 8
  %187 = getelementptr inbounds %class.anon.8, %class.anon.8* %18, i64 0, i32 7
  store float* %13, float** %187, align 8
  %188 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %188) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %188, i8 0, i64 20, i1 false) #12
  %189 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13optimized_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %16, %class.anon.8* nonnull dereferenceable(64) %18, i32* nonnull %189) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %188) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %179) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13optimized_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.7* dereferenceable(64), i32*) local_unnamed_addr #3 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %164

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 7
  %22 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon.7, %class.anon.7* %1, i64 0, i32 1
  br label %24

24:                                               ; preds = %7, %159
  %25 = phi i32 [ 0, %7 ], [ %161, %159 ]
  store i32 0, i32* %8, align 4
  %26 = load i32, i32* %9, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %159

28:                                               ; preds = %24, %152
  %29 = phi i32 [ %154, %152 ], [ 0, %24 ]
  store i32 0, i32* %10, align 4
  %30 = load i32, i32* %11, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %152

32:                                               ; preds = %28, %145
  %33 = phi i32 [ %147, %145 ], [ 0, %28 ]
  store i32 0, i32* %12, align 4
  %34 = load i32, i32* %13, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %145

36:                                               ; preds = %32, %138
  %37 = phi i32 [ %140, %138 ], [ 0, %32 ]
  store i32 0, i32* %14, align 4
  %38 = load i32, i32* %15, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %138

40:                                               ; preds = %36, %40
  %41 = phi i32 [ %134, %40 ], [ 0, %36 ]
  %42 = phi i32 [ %137, %40 ], [ %37, %36 ]
  %43 = load i32**, i32*** %16, align 8
  %44 = load i32*, i32** %43, align 8
  %45 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %17, align 8
  %46 = load i32, i32* %2, align 4
  %47 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i32 %48, %46
  %50 = load i32, i32* %8, align 4
  %51 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = mul nsw i32 %52, %50
  %54 = add nsw i32 %53, %49
  %55 = load i32, i32* %10, align 4
  %56 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = mul nsw i32 %57, %55
  %59 = add nsw i32 %54, %58
  %60 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 3
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %61, %42
  %63 = add nsw i32 %59, %62
  %64 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 4
  %65 = load i32, i32* %64, align 4
  %66 = mul nsw i32 %65, %41
  %67 = add nsw i32 %63, %66
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %44, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = load i32**, i32*** %18, align 8
  %72 = load i32*, i32** %71, align 8
  %73 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %19, align 8
  %74 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 0
  %75 = load i32, i32* %74, align 4
  %76 = mul nsw i32 %75, %46
  %77 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %50
  %80 = add nsw i32 %79, %76
  %81 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 2
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %82, %55
  %84 = add nsw i32 %80, %83
  %85 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 3
  %86 = load i32, i32* %85, align 4
  %87 = mul nsw i32 %86, %42
  %88 = add nsw i32 %84, %87
  %89 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 4
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %41
  %92 = add nsw i32 %88, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %72, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = sdiv i32 %70, %95
  %97 = sitofp i32 %96 to float
  %98 = load i32*, i32** %20, align 8
  %99 = load i32, i32* %98, align 4
  %100 = sitofp i32 %99 to float
  %101 = load i32*, i32** %21, align 8
  %102 = load i32, i32* %101, align 4
  %103 = sitofp i32 %102 to float
  %104 = fcmp olt float %97, %100
  %105 = select i1 %104, float %100, float %97
  %106 = fcmp ogt float %105, %103
  %107 = select i1 %106, float %103, float %105
  %108 = fptosi float %107 to i32
  %109 = load i32**, i32*** %22, align 8
  %110 = load i32*, i32** %109, align 8
  %111 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %23, align 8
  %112 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 0
  %113 = load i32, i32* %112, align 4
  %114 = mul nsw i32 %113, %46
  %115 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 1
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %50
  %118 = add nsw i32 %117, %114
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 2
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %120, %55
  %122 = add nsw i32 %118, %121
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 3
  %124 = load i32, i32* %123, align 4
  %125 = mul nsw i32 %124, %42
  %126 = add nsw i32 %122, %125
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 4
  %128 = load i32, i32* %127, align 4
  %129 = mul nsw i32 %128, %41
  %130 = add nsw i32 %126, %129
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %110, i64 %131
  store i32 %108, i32* %132, align 4
  %133 = load i32, i32* %14, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %14, align 4
  %135 = load i32, i32* %15, align 4
  %136 = icmp slt i32 %134, %135
  %137 = load i32, i32* %12, align 4
  br i1 %136, label %40, label %138

138:                                              ; preds = %40, %36
  %139 = phi i32 [ %37, %36 ], [ %137, %40 ]
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %12, align 4
  %141 = load i32, i32* %13, align 4
  %142 = icmp slt i32 %140, %141
  br i1 %142, label %36, label %143

143:                                              ; preds = %138
  %144 = load i32, i32* %10, align 4
  br label %145

145:                                              ; preds = %143, %32
  %146 = phi i32 [ %144, %143 ], [ %33, %32 ]
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %10, align 4
  %148 = load i32, i32* %11, align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %32, label %150

150:                                              ; preds = %145
  %151 = load i32, i32* %8, align 4
  br label %152

152:                                              ; preds = %150, %28
  %153 = phi i32 [ %151, %150 ], [ %29, %28 ]
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %8, align 4
  %155 = load i32, i32* %9, align 4
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %28, label %157

157:                                              ; preds = %152
  %158 = load i32, i32* %2, align 4
  br label %159

159:                                              ; preds = %157, %24
  %160 = phi i32 [ %158, %157 ], [ %25, %24 ]
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %2, align 4
  %162 = load i32, i32* %4, align 4
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %24, label %164

164:                                              ; preds = %159, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13optimized_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.8* dereferenceable(64), i32*) local_unnamed_addr #3 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %160

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 7
  %22 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 0
  %23 = getelementptr inbounds %class.anon.8, %class.anon.8* %1, i64 0, i32 1
  br label %24

24:                                               ; preds = %7, %155
  %25 = phi i32 [ 0, %7 ], [ %157, %155 ]
  store i32 0, i32* %8, align 4
  %26 = load i32, i32* %9, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %155

28:                                               ; preds = %24, %148
  %29 = phi i32 [ %150, %148 ], [ 0, %24 ]
  store i32 0, i32* %10, align 4
  %30 = load i32, i32* %11, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %148

32:                                               ; preds = %28, %141
  %33 = phi i32 [ %143, %141 ], [ 0, %28 ]
  store i32 0, i32* %12, align 4
  %34 = load i32, i32* %13, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %141

36:                                               ; preds = %32, %134
  %37 = phi i32 [ %136, %134 ], [ 0, %32 ]
  store i32 0, i32* %14, align 4
  %38 = load i32, i32* %15, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %134

40:                                               ; preds = %36, %40
  %41 = phi i32 [ %130, %40 ], [ 0, %36 ]
  %42 = phi i32 [ %133, %40 ], [ %37, %36 ]
  %43 = load float**, float*** %16, align 8
  %44 = load float*, float** %43, align 8
  %45 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %17, align 8
  %46 = load i32, i32* %2, align 4
  %47 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = mul nsw i32 %48, %46
  %50 = load i32, i32* %8, align 4
  %51 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = mul nsw i32 %52, %50
  %54 = add nsw i32 %53, %49
  %55 = load i32, i32* %10, align 4
  %56 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = mul nsw i32 %57, %55
  %59 = add nsw i32 %54, %58
  %60 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 3
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %61, %42
  %63 = add nsw i32 %59, %62
  %64 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %45, i64 0, i32 1, i64 4
  %65 = load i32, i32* %64, align 4
  %66 = mul nsw i32 %65, %41
  %67 = add nsw i32 %63, %66
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds float, float* %44, i64 %68
  %70 = load float, float* %69, align 4
  %71 = load float**, float*** %18, align 8
  %72 = load float*, float** %71, align 8
  %73 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %19, align 8
  %74 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 0
  %75 = load i32, i32* %74, align 4
  %76 = mul nsw i32 %75, %46
  %77 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %50
  %80 = add nsw i32 %79, %76
  %81 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 2
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %82, %55
  %84 = add nsw i32 %80, %83
  %85 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 3
  %86 = load i32, i32* %85, align 4
  %87 = mul nsw i32 %86, %42
  %88 = add nsw i32 %84, %87
  %89 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 4
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %41
  %92 = add nsw i32 %88, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds float, float* %72, i64 %93
  %95 = load float, float* %94, align 4
  %96 = fdiv float %70, %95
  %97 = load float*, float** %20, align 8
  %98 = load float, float* %97, align 4
  %99 = load float*, float** %21, align 8
  %100 = load float, float* %99, align 4
  %101 = fcmp olt float %96, %98
  %102 = select i1 %101, float %98, float %96
  %103 = fcmp ogt float %102, %100
  %104 = select i1 %103, float %100, float %102
  %105 = load float**, float*** %22, align 8
  %106 = load float*, float** %105, align 8
  %107 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %23, align 8
  %108 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 0
  %109 = load i32, i32* %108, align 4
  %110 = mul nsw i32 %109, %46
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 1
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %50
  %114 = add nsw i32 %113, %110
  %115 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 2
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %55
  %118 = add nsw i32 %114, %117
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 3
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %120, %42
  %122 = add nsw i32 %118, %121
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 4
  %124 = load i32, i32* %123, align 4
  %125 = mul nsw i32 %124, %41
  %126 = add nsw i32 %122, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, float* %106, i64 %127
  store float %104, float* %128, align 4
  %129 = load i32, i32* %14, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %14, align 4
  %131 = load i32, i32* %15, align 4
  %132 = icmp slt i32 %130, %131
  %133 = load i32, i32* %12, align 4
  br i1 %132, label %40, label %134

134:                                              ; preds = %40, %36
  %135 = phi i32 [ %37, %36 ], [ %133, %40 ]
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %12, align 4
  %137 = load i32, i32* %13, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %36, label %139

139:                                              ; preds = %134
  %140 = load i32, i32* %10, align 4
  br label %141

141:                                              ; preds = %139, %32
  %142 = phi i32 [ %140, %139 ], [ %33, %32 ]
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %10, align 4
  %144 = load i32, i32* %11, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %32, label %146

146:                                              ; preds = %141
  %147 = load i32, i32* %8, align 4
  br label %148

148:                                              ; preds = %146, %28
  %149 = phi i32 [ %147, %146 ], [ %29, %28 ]
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %8, align 4
  %151 = load i32, i32* %9, align 4
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %28, label %153

153:                                              ; preds = %148
  %154 = load i32, i32* %2, align 4
  br label %155

155:                                              ; preds = %153, %24
  %156 = phi i32 [ %154, %153 ], [ %25, %24 ]
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %2, align 4
  %158 = load i32, i32* %4, align 4
  %159 = icmp slt i32 %157, %158
  br i1 %159, label %24, label %160

160:                                              ; preds = %155, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_Ph(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %"struct.tflite::NdArrayDesc", align 4
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %class.anon.9, align 8
  store i8* %2, i8** %9, align 8
  store i8* %4, i8** %10, align 8
  store i8* %6, i8** %11, align 8
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %18 = bitcast %"struct.tflite::NdArrayDesc"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 40, i1 false)
  %19 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 40, i1 false)
  %20 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %12, %"struct.tflite::NdArrayDesc"* nonnull %13)
  %21 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %22, align 8, !alias.scope !252
  %23 = load i32, i32* %17, align 8, !noalias !252
  %24 = icmp sgt i32 %23, 5
  br i1 %24, label %25, label %26

25:                                               ; preds = %7
  call void @abort() #13, !noalias !252
  unreachable

26:                                               ; preds = %7
  store i32 5, i32* %22, align 8, !alias.scope !252
  %27 = sub i32 5, %23
  %28 = icmp sgt i32 %27, 0
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to [5 x i32]*
  br i1 %28, label %31, label %110

31:                                               ; preds = %26
  %32 = zext i32 %27 to i64
  %33 = icmp ult i32 %27, 8
  br i1 %33, label %103, label %34

34:                                               ; preds = %31
  %35 = and i64 %32, 4294967288
  %36 = add nsw i64 %35, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 7
  %40 = icmp ult i64 %36, 56
  br i1 %40, label %88, label %41

41:                                               ; preds = %34
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %85, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %86, %43 ]
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %44
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !252
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !252
  %50 = or i64 %44, 8
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !252
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !252
  %55 = or i64 %44, 16
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !252
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !252
  %60 = or i64 %44, 24
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !252
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !252
  %65 = or i64 %44, 32
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !252
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !252
  %70 = or i64 %44, 40
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !252
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !252
  %75 = or i64 %44, 48
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !252
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !252
  %80 = or i64 %44, 56
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !252
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !252
  %85 = add i64 %44, 64
  %86 = add i64 %45, -8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %43, !llvm.loop !255

88:                                               ; preds = %43, %34
  %89 = phi i64 [ 0, %34 ], [ %85, %43 ]
  %90 = icmp eq i64 %39, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %88, %91
  %92 = phi i64 [ %98, %91 ], [ %89, %88 ]
  %93 = phi i64 [ %99, %91 ], [ %39, %88 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %92
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %95, align 8, !alias.scope !252
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %97, align 8, !alias.scope !252
  %98 = add i64 %92, 8
  %99 = add i64 %93, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %91, !llvm.loop !256

101:                                              ; preds = %91, %88
  %102 = icmp eq i64 %35, %32
  br i1 %102, label %110, label %103

103:                                              ; preds = %101, %31
  %104 = phi i64 [ 0, %31 ], [ %35, %101 ]
  br label %105

105:                                              ; preds = %103, %105
  %106 = phi i64 [ %108, %105 ], [ %104, %103 ]
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %106
  store i32 1, i32* %107, align 4, !alias.scope !252
  %108 = add nuw nsw i64 %106, 1
  %109 = icmp eq i64 %108, %32
  br i1 %109, label %110, label %105, !llvm.loop !257

110:                                              ; preds = %105, %101, %26
  %111 = getelementptr inbounds %union.anon, %union.anon* %29, i64 0, i32 0
  %112 = bitcast %union.anon* %29 to i32*
  %113 = sext i32 %27 to i64
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  %115 = bitcast i32* %114 to i8*
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to i8*
  %118 = sext i32 %23 to i64
  %119 = shl nsw i64 %118, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %117, i64 %119, i1 false) #12
  %120 = load i32, i32* %22, align 8
  %121 = icmp sgt i32 %120, 5
  %122 = load i32*, i32** %111, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 4
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 8
  %125 = bitcast i8* %124 to i32*
  %126 = select i1 %121, i32* %123, i32* %125
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 4
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 4
  store i32 1, i32* %129, align 4
  %130 = load i32, i32* %126, align 4
  %131 = getelementptr inbounds i32, i32* %122, i64 3
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 4
  %133 = bitcast i8* %132 to i32*
  %134 = select i1 %121, i32* %131, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 3
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 3
  store i32 %130, i32* %137, align 4
  %138 = load i32, i32* %134, align 4
  %139 = mul nsw i32 %138, %130
  %140 = getelementptr inbounds i32, i32* %122, i64 2
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1
  %142 = bitcast [16 x i8]* %141 to i32*
  %143 = select i1 %121, i32* %140, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 2
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 2
  store i32 %139, i32* %146, align 4
  %147 = load i32, i32* %143, align 4
  %148 = mul nsw i32 %147, %139
  %149 = getelementptr inbounds i32, i32* %122, i64 1
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 1
  %151 = select i1 %121, i32* %149, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 1
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 1
  store i32 %148, i32* %154, align 4
  %155 = load i32, i32* %151, align 4
  %156 = mul nsw i32 %155, %148
  %157 = select i1 %121, i32* %122, i32* %112
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 0
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 0
  store i32 %156, i32* %160, align 4
  %161 = xor i1 %121, true
  %162 = icmp eq i32* %122, null
  %163 = or i1 %162, %161
  br i1 %163, label %167, label %164

164:                                              ; preds = %110
  %165 = bitcast i32* %122 to i8*
  call void @_ZdaPv(i8* %165) #11
  %166 = load i32, i32* %159, align 4
  br label %167

167:                                              ; preds = %110, %164
  %168 = phi i32 [ %158, %110 ], [ %166, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #12
  %169 = bitcast %class.anon.9* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %169) #12
  %170 = getelementptr inbounds %class.anon.9, %class.anon.9* %16, i64 0, i32 0
  store %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"** %170, align 8
  %171 = getelementptr inbounds %class.anon.9, %class.anon.9* %16, i64 0, i32 1
  store i8** %9, i8*** %171, align 8
  %172 = getelementptr inbounds %class.anon.9, %class.anon.9* %16, i64 0, i32 2
  store %"struct.tflite::NdArrayDesc"* %12, %"struct.tflite::NdArrayDesc"** %172, align 8
  %173 = getelementptr inbounds %class.anon.9, %class.anon.9* %16, i64 0, i32 3
  store i8** %10, i8*** %173, align 8
  %174 = getelementptr inbounds %class.anon.9, %class.anon.9* %16, i64 0, i32 4
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %174, align 8
  %175 = getelementptr inbounds %class.anon.9, %class.anon.9* %16, i64 0, i32 5
  store i8** %11, i8*** %175, align 8
  %176 = getelementptr inbounds %class.anon.9, %class.anon.9* %16, i64 0, i32 6
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %176, align 8
  %177 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %177) #12
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  %179 = icmp sgt i32 %168, 0
  %180 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %180, i8 0, i64 20, i1 false)
  br i1 %179, label %181, label %247

181:                                              ; preds = %167
  %182 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 1
  %183 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 2
  %184 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 3
  %185 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 4
  %186 = load i32, i32* %153, align 4
  br label %187

187:                                              ; preds = %240, %181
  %188 = phi i32 [ %168, %181 ], [ %241, %240 ]
  %189 = phi i32 [ %186, %181 ], [ %242, %240 ]
  %190 = phi i32 [ %186, %181 ], [ %243, %240 ]
  %191 = phi i32 [ 0, %181 ], [ %245, %240 ]
  store i32 0, i32* %182, align 4
  %192 = icmp sgt i32 %190, 0
  br i1 %192, label %193, label %240

193:                                              ; preds = %187, %232
  %194 = phi i32 [ %233, %232 ], [ %189, %187 ]
  %195 = phi i32 [ %235, %232 ], [ 0, %187 ]
  store i32 0, i32* %183, align 8
  %196 = load i32, i32* %145, align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %232

198:                                              ; preds = %193, %224
  %199 = phi i32 [ %225, %224 ], [ %196, %193 ]
  %200 = phi i32 [ %227, %224 ], [ 0, %193 ]
  store i32 0, i32* %184, align 4
  %201 = load i32, i32* %136, align 4
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %224

203:                                              ; preds = %198, %216
  %204 = phi i32 [ %217, %216 ], [ %201, %198 ]
  %205 = phi i32 [ %219, %216 ], [ 0, %198 ]
  store i32 0, i32* %185, align 16
  %206 = load i32, i32* %128, align 4
  %207 = icmp sgt i32 %206, 0
  br i1 %207, label %208, label %216

208:                                              ; preds = %203, %208
  call void @_ZZN6tflite13optimized_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_PhENKUlPiE_clESB_(%class.anon.9* nonnull %16, i32* nonnull %178) #12
  %209 = load i32, i32* %185, align 16
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %185, align 16
  %211 = load i32, i32* %128, align 4
  %212 = icmp slt i32 %210, %211
  br i1 %212, label %208, label %213

213:                                              ; preds = %208
  %214 = load i32, i32* %184, align 4
  %215 = load i32, i32* %136, align 4
  br label %216

216:                                              ; preds = %213, %203
  %217 = phi i32 [ %215, %213 ], [ %204, %203 ]
  %218 = phi i32 [ %214, %213 ], [ %205, %203 ]
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %184, align 4
  %220 = icmp slt i32 %219, %217
  br i1 %220, label %203, label %221

221:                                              ; preds = %216
  %222 = load i32, i32* %183, align 8
  %223 = load i32, i32* %145, align 4
  br label %224

224:                                              ; preds = %221, %198
  %225 = phi i32 [ %223, %221 ], [ %199, %198 ]
  %226 = phi i32 [ %222, %221 ], [ %200, %198 ]
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %183, align 8
  %228 = icmp slt i32 %227, %225
  br i1 %228, label %198, label %229

229:                                              ; preds = %224
  %230 = load i32, i32* %182, align 4
  %231 = load i32, i32* %153, align 4
  br label %232

232:                                              ; preds = %229, %193
  %233 = phi i32 [ %231, %229 ], [ %194, %193 ]
  %234 = phi i32 [ %230, %229 ], [ %195, %193 ]
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %182, align 4
  %236 = icmp slt i32 %235, %233
  br i1 %236, label %193, label %237

237:                                              ; preds = %232
  %238 = load i32, i32* %178, align 16
  %239 = load i32, i32* %159, align 4
  br label %240

240:                                              ; preds = %237, %187
  %241 = phi i32 [ %239, %237 ], [ %188, %187 ]
  %242 = phi i32 [ %233, %237 ], [ %189, %187 ]
  %243 = phi i32 [ %233, %237 ], [ %190, %187 ]
  %244 = phi i32 [ %238, %237 ], [ %191, %187 ]
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %178, align 16
  %246 = icmp slt i32 %245, %241
  br i1 %246, label %187, label %247

247:                                              ; preds = %240, %167
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %177) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %169) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN6tflite13optimized_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_PhENKUlPiE_clESB_(%class.anon.9*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %class.anon.9, %class.anon.9* %0, i64 0, i32 0
  %4 = load %"struct.tflite::ArithmeticParams"*, %"struct.tflite::ArithmeticParams"** %3, align 8
  %5 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.anon.9, %class.anon.9* %0, i64 0, i32 1
  %8 = load i8**, i8*** %7, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %class.anon.9, %class.anon.9* %0, i64 0, i32 2
  %11 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %10, align 8
  %12 = load i32, i32* %1, align 4
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = mul nsw i32 %14, %12
  %16 = getelementptr inbounds i32, i32* %1, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = mul nsw i32 %19, %17
  %21 = add nsw i32 %20, %15
  %22 = getelementptr inbounds i32, i32* %1, i64 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 2
  %25 = load i32, i32* %24, align 4
  %26 = mul nsw i32 %25, %23
  %27 = add nsw i32 %21, %26
  %28 = getelementptr inbounds i32, i32* %1, i64 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 3
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %31, %29
  %33 = add nsw i32 %27, %32
  %34 = getelementptr inbounds i32, i32* %1, i64 4
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %11, i64 0, i32 1, i64 4
  %37 = load i32, i32* %36, align 4
  %38 = mul nsw i32 %37, %35
  %39 = add nsw i32 %33, %38
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %9, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = add nsw i32 %6, %43
  %45 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %4, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.anon.9, %class.anon.9* %0, i64 0, i32 3
  %48 = load i8**, i8*** %47, align 8
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %class.anon.9, %class.anon.9* %0, i64 0, i32 4
  %51 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %50, align 8
  %52 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 0
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %12
  %55 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 1
  %56 = load i32, i32* %55, align 4
  %57 = mul nsw i32 %56, %17
  %58 = add nsw i32 %57, %54
  %59 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 2
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %60, %23
  %62 = add nsw i32 %58, %61
  %63 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 3
  %64 = load i32, i32* %63, align 4
  %65 = mul nsw i32 %64, %29
  %66 = add nsw i32 %62, %65
  %67 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %51, i64 0, i32 1, i64 4
  %68 = load i32, i32* %67, align 4
  %69 = mul nsw i32 %68, %35
  %70 = add nsw i32 %66, %69
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %49, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = add nsw i32 %46, %74
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %2
  %78 = tail call i32 @llvm.ctlz.i32(i32 %75, i1 false) #12, !range !142
  %79 = shl i32 %75, %78
  %80 = xor i32 %79, -2147483648
  %81 = tail call i32 @_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_(i32 %80) #12
  br label %89

82:                                               ; preds = %2
  %83 = sub nsw i32 0, %75
  %84 = tail call i32 @llvm.ctlz.i32(i32 %83, i1 false) #12, !range !142
  %85 = shl i32 %83, %84
  %86 = xor i32 %85, -2147483648
  %87 = tail call i32 @_ZN8gemmlowp32one_over_one_plus_x_for_x_in_0_1IiEENS_10FixedPointIT_Li0EEES3_(i32 %86) #12
  %88 = sub nsw i32 0, %87
  br label %89

89:                                               ; preds = %82, %77
  %90 = phi i32 [ %78, %77 ], [ %84, %82 ]
  %91 = phi i32 [ %81, %77 ], [ %88, %82 ]
  %92 = icmp sgt i32 %44, -1
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 false) #12, !range !142
  %95 = add nsw i32 %94, -1
  br label %102

96:                                               ; preds = %89
  %97 = icmp eq i32 %44, -2147483648
  br i1 %97, label %102, label %98

98:                                               ; preds = %96
  %99 = shl i32 %44, 1
  %100 = xor i32 %99, -1
  %101 = tail call i32 @llvm.ctlz.i32(i32 %100, i1 true) #12, !range !142
  br label %102

102:                                              ; preds = %93, %96, %98
  %103 = phi i32 [ %95, %93 ], [ %101, %98 ], [ 0, %96 ]
  %104 = shl i32 %44, %103
  %105 = icmp eq i32 %104, %91
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = sext i32 %104 to i64
  %108 = sext i32 %91 to i64
  %109 = mul nsw i64 %107, %108
  br label %114

110:                                              ; preds = %102
  %111 = icmp eq i32 %91, -2147483648
  %112 = sext i32 %91 to i64
  %113 = mul nsw i64 %112, %112
  br i1 %111, label %121, label %114

114:                                              ; preds = %110, %106
  %115 = phi i64 [ %109, %106 ], [ %113, %110 ]
  %116 = icmp sgt i64 %115, -1
  %117 = select i1 %116, i64 1073741824, i64 -1073741823
  %118 = add nsw i64 %117, %115
  %119 = sdiv i64 %118, 2147483648
  %120 = trunc i64 %119 to i32
  br label %121

121:                                              ; preds = %110, %114
  %122 = phi i32 [ %120, %114 ], [ 2147483647, %110 ]
  %123 = load %"struct.tflite::ArithmeticParams"*, %"struct.tflite::ArithmeticParams"** %3, align 8
  %124 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 5
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 4
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %122, %129
  br i1 %130, label %135, label %131

131:                                              ; preds = %121
  %132 = sext i32 %122 to i64
  %133 = sext i32 %129 to i64
  %134 = mul nsw i64 %133, %132
  br label %139

135:                                              ; preds = %121
  %136 = icmp eq i32 %122, -2147483648
  %137 = sext i32 %122 to i64
  %138 = mul nsw i64 %137, %137
  br i1 %136, label %146, label %139

139:                                              ; preds = %135, %131
  %140 = phi i64 [ %134, %131 ], [ %138, %135 ]
  %141 = icmp sgt i64 %140, -1
  %142 = select i1 %141, i64 1073741824, i64 -1073741823
  %143 = add nsw i64 %142, %140
  %144 = sdiv i64 %143, 2147483648
  %145 = trunc i64 %144 to i32
  br label %146

146:                                              ; preds = %135, %139
  %147 = phi i32 [ %145, %139 ], [ 2147483647, %135 ]
  %148 = sub nsw i32 31, %90
  %149 = add nsw i32 %148, %103
  %150 = sub i32 %149, %125
  %151 = zext i32 %150 to i64
  %152 = shl nsw i64 -1, %151
  %153 = trunc i64 %152 to i32
  %154 = xor i32 %153, -1
  %155 = and i32 %147, %154
  %156 = ashr i32 %154, 1
  %157 = lshr i32 %147, 31
  %158 = add nsw i32 %157, %156
  %159 = ashr i32 %147, %150
  %160 = icmp sgt i32 %155, %158
  %161 = zext i1 %160 to i32
  %162 = add i32 %159, %127
  %163 = add i32 %162, %161
  %164 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 12
  %165 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %123, i64 0, i32 11
  %166 = load i32, i32* %165, align 4
  %167 = icmp slt i32 %166, %163
  %168 = select i1 %167, i32 %163, i32 %166
  %169 = load i32, i32* %164, align 4
  %170 = icmp slt i32 %168, %169
  %171 = select i1 %170, i32 %168, i32 %169
  %172 = trunc i32 %171 to i8
  %173 = getelementptr inbounds %class.anon.9, %class.anon.9* %0, i64 0, i32 5
  %174 = load i8**, i8*** %173, align 8
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds %class.anon.9, %class.anon.9* %0, i64 0, i32 6
  %177 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %176, align 8
  %178 = load i32, i32* %1, align 4
  %179 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 0
  %180 = load i32, i32* %179, align 4
  %181 = mul nsw i32 %180, %178
  %182 = load i32, i32* %16, align 4
  %183 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 1
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, %182
  %186 = add nsw i32 %185, %181
  %187 = load i32, i32* %22, align 4
  %188 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 2
  %189 = load i32, i32* %188, align 4
  %190 = mul nsw i32 %189, %187
  %191 = add nsw i32 %186, %190
  %192 = load i32, i32* %28, align 4
  %193 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 3
  %194 = load i32, i32* %193, align 4
  %195 = mul nsw i32 %194, %192
  %196 = add nsw i32 %191, %195
  %197 = load i32, i32* %34, align 4
  %198 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %177, i64 0, i32 1, i64 4
  %199 = load i32, i32* %198, align 4
  %200 = mul nsw i32 %199, %197
  %201 = add nsw i32 %196, %200
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i8, i8* %175, i64 %202
  store i8 %172, i8* %203, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteDivParams*, %"struct.tflite::ops::builtin::div::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::ArithmeticParams", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %1436 [
    i32 2, label %24
    i32 1, label %669
  ]

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %175, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %30 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = sext i32 %32 to i64
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %32 to i64
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.39, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %28, %34
  %42 = phi i32 [ %37, %34 ], [ -2147483648, %28 ]
  %43 = phi i32 [ %40, %34 ], [ 2147483647, %28 ]
  %44 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %43, i32* %45, align 4
  %46 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #12
  %47 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %49, align 8, !alias.scope !258
  br label %77

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %52 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8, !noalias !258
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4, !noalias !258
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 0
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %54, i32* %56, align 8, !alias.scope !258
  %57 = icmp sgt i32 %54, 5
  br i1 %57, label %58, label %65

58:                                               ; preds = %50
  %59 = sext i32 %54 to i64
  %60 = shl nsw i64 %59, 2
  %61 = tail call i8* @_Znam(i64 %60) #11, !noalias !258
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %63 = bitcast i32** %62 to i8**
  store i8* %61, i8** %63, align 8, !alias.scope !258
  %64 = bitcast i8* %61 to i32*
  br label %70

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %67 = bitcast %union.anon* %66 to i32*
  %68 = sext i32 %54 to i64
  %69 = shl nsw i64 %68, 2
  br label %70

70:                                               ; preds = %65, %58
  %71 = phi i64 [ %60, %58 ], [ %69, %65 ]
  %72 = phi i32* [ %64, %58 ], [ %67, %65 ]
  %73 = bitcast i32* %72 to i8*
  %74 = bitcast i32* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 %71, i1 false) #12
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %76 = load i32*, i32** %75, align 8
  br label %77

77:                                               ; preds = %48, %70
  %78 = phi i32* [ %76, %70 ], [ null, %48 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #12
  %80 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !261
  br label %110

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !261
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !261
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !261
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #11, !noalias !261
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !261
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #12
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %109 = load i32*, i32** %108, align 8
  br label %110

110:                                              ; preds = %81, %103
  %111 = phi i32* [ %109, %103 ], [ null, %81 ]
  %112 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #12
  %113 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !264
  br label %143

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %117, align 8, !noalias !264
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 4, !noalias !264
  %121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %120, i32* %122, align 8, !alias.scope !264
  %123 = icmp sgt i32 %120, 5
  br i1 %123, label %124, label %131

124:                                              ; preds = %116
  %125 = sext i32 %120 to i64
  %126 = shl nsw i64 %125, 2
  %127 = tail call i8* @_Znam(i64 %126) #11, !noalias !264
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %129 = bitcast i32** %128 to i8**
  store i8* %127, i8** %129, align 8, !alias.scope !264
  %130 = bitcast i8* %127 to i32*
  br label %136

131:                                              ; preds = %116
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %133 = bitcast %union.anon* %132 to i32*
  %134 = sext i32 %120 to i64
  %135 = shl nsw i64 %134, 2
  br label %136

136:                                              ; preds = %131, %124
  %137 = phi i64 [ %126, %124 ], [ %135, %131 ]
  %138 = phi i32* [ %130, %124 ], [ %133, %131 ]
  %139 = bitcast i32* %138 to i8*
  %140 = bitcast i32* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 %137, i1 false) #12
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %142 = load i32*, i32** %141, align 8
  br label %143

143:                                              ; preds = %114, %136
  %144 = phi i32* [ %142, %136 ], [ null, %114 ]
  call void @_ZN6tflite13optimized_ops16BroadcastDivSlowIiLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %78, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %111, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %144)
  %145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = icmp sgt i32 %146, 5
  br i1 %147, label %148, label %154

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = icmp eq i32* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = bitcast i32* %150 to i8*
  call void @_ZdaPv(i8* %153) #11
  br label %154

154:                                              ; preds = %143, %148, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #12
  %155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp sgt i32 %156, 5
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = bitcast i32* %160 to i8*
  call void @_ZdaPv(i8* %163) #11
  br label %164

164:                                              ; preds = %154, %158, %162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #12
  %165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = icmp sgt i32 %166, 5
  br i1 %167, label %168, label %174

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %170 = load i32*, i32** %169, align 8
  %171 = icmp eq i32* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %168
  %173 = bitcast i32* %170 to i8*
  call void @_ZdaPv(i8* %173) #11
  br label %174

174:                                              ; preds = %164, %168, %172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #12
  br label %1436

175:                                              ; preds = %24
  %176 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, -1
  %179 = icmp ult i32 %178, 3
  br i1 %179, label %180, label %187

180:                                              ; preds = %175
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %181
  %183 = load float, float* %182, align 4
  %184 = sext i32 %178 to i64
  %185 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.41, i64 0, i64 %184
  %186 = load float, float* %185, align 4
  br label %187

187:                                              ; preds = %175, %180
  %188 = phi float [ %183, %180 ], [ 0xC1E0000000000000, %175 ]
  %189 = phi float [ %186, %180 ], [ 0x41E0000000000000, %175 ]
  %190 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #12
  %191 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %191, label %192, label %194

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %193, align 8, !alias.scope !267
  br label %221

194:                                              ; preds = %187
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %196 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %195, align 8, !noalias !267
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 0
  %198 = load i32, i32* %197, align 4, !noalias !267
  %199 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 0
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %198, i32* %200, align 8, !alias.scope !267
  %201 = icmp sgt i32 %198, 5
  br i1 %201, label %202, label %209

202:                                              ; preds = %194
  %203 = sext i32 %198 to i64
  %204 = shl nsw i64 %203, 2
  %205 = tail call i8* @_Znam(i64 %204) #11, !noalias !267
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %207 = bitcast i32** %206 to i8**
  store i8* %205, i8** %207, align 8, !alias.scope !267
  %208 = bitcast i8* %205 to i32*
  br label %214

209:                                              ; preds = %194
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %211 = bitcast %union.anon* %210 to i32*
  %212 = sext i32 %198 to i64
  %213 = shl nsw i64 %212, 2
  br label %214

214:                                              ; preds = %209, %202
  %215 = phi i64 [ %204, %202 ], [ %213, %209 ]
  %216 = phi i32* [ %208, %202 ], [ %211, %209 ]
  %217 = bitcast i32* %216 to i8*
  %218 = bitcast i32* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %215, i1 false) #12
  %219 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %220 = load i32*, i32** %219, align 8
  br label %221

221:                                              ; preds = %192, %214
  %222 = phi i32 [ %198, %214 ], [ 0, %192 ]
  %223 = phi i32* [ %220, %214 ], [ null, %192 ]
  %224 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %224) #12
  %225 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !270
  br label %255

228:                                              ; preds = %221
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %230 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %229, align 8, !noalias !270
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4, !noalias !270
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 1, i64 0
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %232, i32* %234, align 8, !alias.scope !270
  %235 = icmp sgt i32 %232, 5
  br i1 %235, label %236, label %243

236:                                              ; preds = %228
  %237 = sext i32 %232 to i64
  %238 = shl nsw i64 %237, 2
  %239 = tail call i8* @_Znam(i64 %238) #11, !noalias !270
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %241 = bitcast i32** %240 to i8**
  store i8* %239, i8** %241, align 8, !alias.scope !270
  %242 = bitcast i8* %239 to i32*
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %245 = bitcast %union.anon* %244 to i32*
  %246 = sext i32 %232 to i64
  %247 = shl nsw i64 %246, 2
  br label %248

248:                                              ; preds = %243, %236
  %249 = phi i64 [ %238, %236 ], [ %247, %243 ]
  %250 = phi i32* [ %242, %236 ], [ %245, %243 ]
  %251 = bitcast i32* %250 to i8*
  %252 = bitcast i32* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %249, i1 false) #12
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %254 = load i32*, i32** %253, align 8
  br label %255

255:                                              ; preds = %226, %248
  %256 = phi i32 [ %232, %248 ], [ 0, %226 ]
  %257 = phi i32* [ %254, %248 ], [ null, %226 ]
  %258 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %258) #12
  %259 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %261, align 8, !alias.scope !273
  br label %289

262:                                              ; preds = %255
  %263 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %264 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %263, align 8, !noalias !273
  %265 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %264, i64 0, i32 0
  %266 = load i32, i32* %265, align 4, !noalias !273
  %267 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %264, i64 0, i32 1, i64 0
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %266, i32* %268, align 8, !alias.scope !273
  %269 = icmp sgt i32 %266, 5
  br i1 %269, label %270, label %277

270:                                              ; preds = %262
  %271 = sext i32 %266 to i64
  %272 = shl nsw i64 %271, 2
  %273 = tail call i8* @_Znam(i64 %272) #11, !noalias !273
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %275 = bitcast i32** %274 to i8**
  store i8* %273, i8** %275, align 8, !alias.scope !273
  %276 = bitcast i8* %273 to i32*
  br label %282

277:                                              ; preds = %262
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %279 = bitcast %union.anon* %278 to i32*
  %280 = sext i32 %266 to i64
  %281 = shl nsw i64 %280, 2
  br label %282

282:                                              ; preds = %277, %270
  %283 = phi i64 [ %272, %270 ], [ %281, %277 ]
  %284 = phi i32* [ %276, %270 ], [ %279, %277 ]
  %285 = bitcast i32* %284 to i8*
  %286 = bitcast i32* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %285, i8* align 4 %286, i64 %283, i1 false) #12
  %287 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %288 = load i32*, i32** %287, align 8
  br label %289

289:                                              ; preds = %260, %282
  %290 = phi i32 [ %266, %282 ], [ 0, %260 ]
  %291 = phi i32* [ %288, %282 ], [ null, %260 ]
  %292 = icmp sgt i32 %222, 5
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  br i1 %292, label %294, label %297

294:                                              ; preds = %289
  %295 = getelementptr inbounds %union.anon, %union.anon* %293, i64 0, i32 0
  %296 = load i32*, i32** %295, align 8
  br label %300

297:                                              ; preds = %289
  %298 = bitcast %union.anon* %293 to i32*
  %299 = icmp sgt i32 %222, 0
  br i1 %299, label %300, label %400

300:                                              ; preds = %297, %294
  %301 = phi i32* [ %296, %294 ], [ %298, %297 ]
  %302 = zext i32 %222 to i64
  %303 = icmp ult i32 %222, 8
  br i1 %303, label %389, label %304

304:                                              ; preds = %300
  %305 = and i64 %302, 4294967288
  %306 = add nsw i64 %305, -8
  %307 = lshr exact i64 %306, 3
  %308 = add nuw nsw i64 %307, 1
  %309 = and i64 %308, 3
  %310 = icmp ult i64 %306, 24
  br i1 %310, label %356, label %311

311:                                              ; preds = %304
  %312 = sub nsw i64 %308, %309
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %353, %313 ]
  %315 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %351, %313 ]
  %316 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %352, %313 ]
  %317 = phi i64 [ %312, %311 ], [ %354, %313 ]
  %318 = getelementptr inbounds i32, i32* %301, i64 %314
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = getelementptr inbounds i32, i32* %318, i64 4
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4
  %324 = mul nsw <4 x i32> %320, %315
  %325 = mul nsw <4 x i32> %323, %316
  %326 = or i64 %314, 8
  %327 = getelementptr inbounds i32, i32* %301, i64 %326
  %328 = bitcast i32* %327 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4
  %330 = getelementptr inbounds i32, i32* %327, i64 4
  %331 = bitcast i32* %330 to <4 x i32>*
  %332 = load <4 x i32>, <4 x i32>* %331, align 4
  %333 = mul nsw <4 x i32> %329, %324
  %334 = mul nsw <4 x i32> %332, %325
  %335 = or i64 %314, 16
  %336 = getelementptr inbounds i32, i32* %301, i64 %335
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4
  %339 = getelementptr inbounds i32, i32* %336, i64 4
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4
  %342 = mul nsw <4 x i32> %338, %333
  %343 = mul nsw <4 x i32> %341, %334
  %344 = or i64 %314, 24
  %345 = getelementptr inbounds i32, i32* %301, i64 %344
  %346 = bitcast i32* %345 to <4 x i32>*
  %347 = load <4 x i32>, <4 x i32>* %346, align 4
  %348 = getelementptr inbounds i32, i32* %345, i64 4
  %349 = bitcast i32* %348 to <4 x i32>*
  %350 = load <4 x i32>, <4 x i32>* %349, align 4
  %351 = mul nsw <4 x i32> %347, %342
  %352 = mul nsw <4 x i32> %350, %343
  %353 = add i64 %314, 32
  %354 = add i64 %317, -4
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %313, !llvm.loop !276

356:                                              ; preds = %313, %304
  %357 = phi <4 x i32> [ undef, %304 ], [ %351, %313 ]
  %358 = phi <4 x i32> [ undef, %304 ], [ %352, %313 ]
  %359 = phi i64 [ 0, %304 ], [ %353, %313 ]
  %360 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %304 ], [ %351, %313 ]
  %361 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %304 ], [ %352, %313 ]
  %362 = icmp eq i64 %309, 0
  br i1 %362, label %379, label %363

363:                                              ; preds = %356, %363
  %364 = phi i64 [ %376, %363 ], [ %359, %356 ]
  %365 = phi <4 x i32> [ %374, %363 ], [ %360, %356 ]
  %366 = phi <4 x i32> [ %375, %363 ], [ %361, %356 ]
  %367 = phi i64 [ %377, %363 ], [ %309, %356 ]
  %368 = getelementptr inbounds i32, i32* %301, i64 %364
  %369 = bitcast i32* %368 to <4 x i32>*
  %370 = load <4 x i32>, <4 x i32>* %369, align 4
  %371 = getelementptr inbounds i32, i32* %368, i64 4
  %372 = bitcast i32* %371 to <4 x i32>*
  %373 = load <4 x i32>, <4 x i32>* %372, align 4
  %374 = mul nsw <4 x i32> %370, %365
  %375 = mul nsw <4 x i32> %373, %366
  %376 = add i64 %364, 8
  %377 = add i64 %367, -1
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %363, !llvm.loop !277

379:                                              ; preds = %363, %356
  %380 = phi <4 x i32> [ %357, %356 ], [ %374, %363 ]
  %381 = phi <4 x i32> [ %358, %356 ], [ %375, %363 ]
  %382 = mul <4 x i32> %381, %380
  %383 = shufflevector <4 x i32> %382, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %384 = mul <4 x i32> %382, %383
  %385 = shufflevector <4 x i32> %384, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %386 = mul <4 x i32> %384, %385
  %387 = extractelement <4 x i32> %386, i32 0
  %388 = icmp eq i64 %305, %302
  br i1 %388, label %400, label %389

389:                                              ; preds = %379, %300
  %390 = phi i64 [ 0, %300 ], [ %305, %379 ]
  %391 = phi i32 [ 1, %300 ], [ %387, %379 ]
  br label %392

392:                                              ; preds = %389, %392
  %393 = phi i64 [ %398, %392 ], [ %390, %389 ]
  %394 = phi i32 [ %397, %392 ], [ %391, %389 ]
  %395 = getelementptr inbounds i32, i32* %301, i64 %393
  %396 = load i32, i32* %395, align 4
  %397 = mul nsw i32 %396, %394
  %398 = add nuw nsw i64 %393, 1
  %399 = icmp eq i64 %398, %302
  br i1 %399, label %400, label %392, !llvm.loop !278

400:                                              ; preds = %392, %379, %297
  %401 = phi i32 [ 1, %297 ], [ %387, %379 ], [ %397, %392 ]
  %402 = icmp sgt i32 %256, 5
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %402, label %404, label %407

404:                                              ; preds = %400
  %405 = getelementptr inbounds %union.anon, %union.anon* %403, i64 0, i32 0
  %406 = load i32*, i32** %405, align 8
  br label %410

407:                                              ; preds = %400
  %408 = bitcast %union.anon* %403 to i32*
  %409 = icmp sgt i32 %256, 0
  br i1 %409, label %410, label %510

410:                                              ; preds = %407, %404
  %411 = phi i32* [ %406, %404 ], [ %408, %407 ]
  %412 = zext i32 %256 to i64
  %413 = icmp ult i32 %256, 8
  br i1 %413, label %499, label %414

414:                                              ; preds = %410
  %415 = and i64 %412, 4294967288
  %416 = add nsw i64 %415, -8
  %417 = lshr exact i64 %416, 3
  %418 = add nuw nsw i64 %417, 1
  %419 = and i64 %418, 3
  %420 = icmp ult i64 %416, 24
  br i1 %420, label %466, label %421

421:                                              ; preds = %414
  %422 = sub nsw i64 %418, %419
  br label %423

423:                                              ; preds = %423, %421
  %424 = phi i64 [ 0, %421 ], [ %463, %423 ]
  %425 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %421 ], [ %461, %423 ]
  %426 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %421 ], [ %462, %423 ]
  %427 = phi i64 [ %422, %421 ], [ %464, %423 ]
  %428 = getelementptr inbounds i32, i32* %411, i64 %424
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = mul nsw <4 x i32> %430, %425
  %435 = mul nsw <4 x i32> %433, %426
  %436 = or i64 %424, 8
  %437 = getelementptr inbounds i32, i32* %411, i64 %436
  %438 = bitcast i32* %437 to <4 x i32>*
  %439 = load <4 x i32>, <4 x i32>* %438, align 4
  %440 = getelementptr inbounds i32, i32* %437, i64 4
  %441 = bitcast i32* %440 to <4 x i32>*
  %442 = load <4 x i32>, <4 x i32>* %441, align 4
  %443 = mul nsw <4 x i32> %439, %434
  %444 = mul nsw <4 x i32> %442, %435
  %445 = or i64 %424, 16
  %446 = getelementptr inbounds i32, i32* %411, i64 %445
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = mul nsw <4 x i32> %448, %443
  %453 = mul nsw <4 x i32> %451, %444
  %454 = or i64 %424, 24
  %455 = getelementptr inbounds i32, i32* %411, i64 %454
  %456 = bitcast i32* %455 to <4 x i32>*
  %457 = load <4 x i32>, <4 x i32>* %456, align 4
  %458 = getelementptr inbounds i32, i32* %455, i64 4
  %459 = bitcast i32* %458 to <4 x i32>*
  %460 = load <4 x i32>, <4 x i32>* %459, align 4
  %461 = mul nsw <4 x i32> %457, %452
  %462 = mul nsw <4 x i32> %460, %453
  %463 = add i64 %424, 32
  %464 = add i64 %427, -4
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %423, !llvm.loop !279

466:                                              ; preds = %423, %414
  %467 = phi <4 x i32> [ undef, %414 ], [ %461, %423 ]
  %468 = phi <4 x i32> [ undef, %414 ], [ %462, %423 ]
  %469 = phi i64 [ 0, %414 ], [ %463, %423 ]
  %470 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %414 ], [ %461, %423 ]
  %471 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %414 ], [ %462, %423 ]
  %472 = icmp eq i64 %419, 0
  br i1 %472, label %489, label %473

473:                                              ; preds = %466, %473
  %474 = phi i64 [ %486, %473 ], [ %469, %466 ]
  %475 = phi <4 x i32> [ %484, %473 ], [ %470, %466 ]
  %476 = phi <4 x i32> [ %485, %473 ], [ %471, %466 ]
  %477 = phi i64 [ %487, %473 ], [ %419, %466 ]
  %478 = getelementptr inbounds i32, i32* %411, i64 %474
  %479 = bitcast i32* %478 to <4 x i32>*
  %480 = load <4 x i32>, <4 x i32>* %479, align 4
  %481 = getelementptr inbounds i32, i32* %478, i64 4
  %482 = bitcast i32* %481 to <4 x i32>*
  %483 = load <4 x i32>, <4 x i32>* %482, align 4
  %484 = mul nsw <4 x i32> %480, %475
  %485 = mul nsw <4 x i32> %483, %476
  %486 = add i64 %474, 8
  %487 = add i64 %477, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %473, !llvm.loop !280

489:                                              ; preds = %473, %466
  %490 = phi <4 x i32> [ %467, %466 ], [ %484, %473 ]
  %491 = phi <4 x i32> [ %468, %466 ], [ %485, %473 ]
  %492 = mul <4 x i32> %491, %490
  %493 = shufflevector <4 x i32> %492, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %494 = mul <4 x i32> %492, %493
  %495 = shufflevector <4 x i32> %494, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %496 = mul <4 x i32> %494, %495
  %497 = extractelement <4 x i32> %496, i32 0
  %498 = icmp eq i64 %415, %412
  br i1 %498, label %510, label %499

499:                                              ; preds = %489, %410
  %500 = phi i64 [ 0, %410 ], [ %415, %489 ]
  %501 = phi i32 [ 1, %410 ], [ %497, %489 ]
  br label %502

502:                                              ; preds = %499, %502
  %503 = phi i64 [ %508, %502 ], [ %500, %499 ]
  %504 = phi i32 [ %507, %502 ], [ %501, %499 ]
  %505 = getelementptr inbounds i32, i32* %411, i64 %503
  %506 = load i32, i32* %505, align 4
  %507 = mul nsw i32 %506, %504
  %508 = add nuw nsw i64 %503, 1
  %509 = icmp eq i64 %508, %412
  br i1 %509, label %510, label %502, !llvm.loop !281

510:                                              ; preds = %502, %489, %407
  %511 = phi i32 [ 1, %407 ], [ %497, %489 ], [ %507, %502 ]
  %512 = icmp sgt i32 %290, 5
  %513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %512, label %514, label %517

514:                                              ; preds = %510
  %515 = getelementptr inbounds %union.anon, %union.anon* %513, i64 0, i32 0
  %516 = load i32*, i32** %515, align 8
  br label %520

517:                                              ; preds = %510
  %518 = bitcast %union.anon* %513 to i32*
  %519 = icmp sgt i32 %290, 0
  br i1 %519, label %520, label %620

520:                                              ; preds = %517, %514
  %521 = phi i32* [ %516, %514 ], [ %518, %517 ]
  %522 = zext i32 %290 to i64
  %523 = icmp ult i32 %290, 8
  br i1 %523, label %609, label %524

524:                                              ; preds = %520
  %525 = and i64 %522, 4294967288
  %526 = add nsw i64 %525, -8
  %527 = lshr exact i64 %526, 3
  %528 = add nuw nsw i64 %527, 1
  %529 = and i64 %528, 3
  %530 = icmp ult i64 %526, 24
  br i1 %530, label %576, label %531

531:                                              ; preds = %524
  %532 = sub nsw i64 %528, %529
  br label %533

533:                                              ; preds = %533, %531
  %534 = phi i64 [ 0, %531 ], [ %573, %533 ]
  %535 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %531 ], [ %571, %533 ]
  %536 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %531 ], [ %572, %533 ]
  %537 = phi i64 [ %532, %531 ], [ %574, %533 ]
  %538 = getelementptr inbounds i32, i32* %521, i64 %534
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = getelementptr inbounds i32, i32* %538, i64 4
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4
  %544 = mul nsw <4 x i32> %540, %535
  %545 = mul nsw <4 x i32> %543, %536
  %546 = or i64 %534, 8
  %547 = getelementptr inbounds i32, i32* %521, i64 %546
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4
  %550 = getelementptr inbounds i32, i32* %547, i64 4
  %551 = bitcast i32* %550 to <4 x i32>*
  %552 = load <4 x i32>, <4 x i32>* %551, align 4
  %553 = mul nsw <4 x i32> %549, %544
  %554 = mul nsw <4 x i32> %552, %545
  %555 = or i64 %534, 16
  %556 = getelementptr inbounds i32, i32* %521, i64 %555
  %557 = bitcast i32* %556 to <4 x i32>*
  %558 = load <4 x i32>, <4 x i32>* %557, align 4
  %559 = getelementptr inbounds i32, i32* %556, i64 4
  %560 = bitcast i32* %559 to <4 x i32>*
  %561 = load <4 x i32>, <4 x i32>* %560, align 4
  %562 = mul nsw <4 x i32> %558, %553
  %563 = mul nsw <4 x i32> %561, %554
  %564 = or i64 %534, 24
  %565 = getelementptr inbounds i32, i32* %521, i64 %564
  %566 = bitcast i32* %565 to <4 x i32>*
  %567 = load <4 x i32>, <4 x i32>* %566, align 4
  %568 = getelementptr inbounds i32, i32* %565, i64 4
  %569 = bitcast i32* %568 to <4 x i32>*
  %570 = load <4 x i32>, <4 x i32>* %569, align 4
  %571 = mul nsw <4 x i32> %567, %562
  %572 = mul nsw <4 x i32> %570, %563
  %573 = add i64 %534, 32
  %574 = add i64 %537, -4
  %575 = icmp eq i64 %574, 0
  br i1 %575, label %576, label %533, !llvm.loop !282

576:                                              ; preds = %533, %524
  %577 = phi <4 x i32> [ undef, %524 ], [ %571, %533 ]
  %578 = phi <4 x i32> [ undef, %524 ], [ %572, %533 ]
  %579 = phi i64 [ 0, %524 ], [ %573, %533 ]
  %580 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %524 ], [ %571, %533 ]
  %581 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %524 ], [ %572, %533 ]
  %582 = icmp eq i64 %529, 0
  br i1 %582, label %599, label %583

583:                                              ; preds = %576, %583
  %584 = phi i64 [ %596, %583 ], [ %579, %576 ]
  %585 = phi <4 x i32> [ %594, %583 ], [ %580, %576 ]
  %586 = phi <4 x i32> [ %595, %583 ], [ %581, %576 ]
  %587 = phi i64 [ %597, %583 ], [ %529, %576 ]
  %588 = getelementptr inbounds i32, i32* %521, i64 %584
  %589 = bitcast i32* %588 to <4 x i32>*
  %590 = load <4 x i32>, <4 x i32>* %589, align 4
  %591 = getelementptr inbounds i32, i32* %588, i64 4
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4
  %594 = mul nsw <4 x i32> %590, %585
  %595 = mul nsw <4 x i32> %593, %586
  %596 = add i64 %584, 8
  %597 = add i64 %587, -1
  %598 = icmp eq i64 %597, 0
  br i1 %598, label %599, label %583, !llvm.loop !283

599:                                              ; preds = %583, %576
  %600 = phi <4 x i32> [ %577, %576 ], [ %594, %583 ]
  %601 = phi <4 x i32> [ %578, %576 ], [ %595, %583 ]
  %602 = mul <4 x i32> %601, %600
  %603 = shufflevector <4 x i32> %602, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %604 = mul <4 x i32> %602, %603
  %605 = shufflevector <4 x i32> %604, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %606 = mul <4 x i32> %604, %605
  %607 = extractelement <4 x i32> %606, i32 0
  %608 = icmp eq i64 %525, %522
  br i1 %608, label %620, label %609

609:                                              ; preds = %599, %520
  %610 = phi i64 [ 0, %520 ], [ %525, %599 ]
  %611 = phi i32 [ 1, %520 ], [ %607, %599 ]
  br label %612

612:                                              ; preds = %609, %612
  %613 = phi i64 [ %618, %612 ], [ %610, %609 ]
  %614 = phi i32 [ %617, %612 ], [ %611, %609 ]
  %615 = getelementptr inbounds i32, i32* %521, i64 %613
  %616 = load i32, i32* %615, align 4
  %617 = mul nsw i32 %616, %614
  %618 = add nuw nsw i64 %613, 1
  %619 = icmp eq i64 %618, %522
  br i1 %619, label %620, label %612, !llvm.loop !284

620:                                              ; preds = %612, %599, %517
  %621 = phi i32 [ 1, %517 ], [ %607, %599 ], [ %617, %612 ]
  %622 = icmp eq i32 %401, %511
  br i1 %622, label %624, label %623

623:                                              ; preds = %620
  tail call void @abort() #13
  unreachable

624:                                              ; preds = %620
  %625 = icmp eq i32 %401, %621
  br i1 %625, label %626, label %630

626:                                              ; preds = %624
  %627 = icmp sgt i32 %401, 0
  br i1 %627, label %628, label %647

628:                                              ; preds = %626
  %629 = zext i32 %401 to i64
  br label %631

630:                                              ; preds = %624
  tail call void @abort() #13
  unreachable

631:                                              ; preds = %631, %628
  %632 = phi i64 [ 0, %628 ], [ %645, %631 ]
  %633 = getelementptr inbounds i32, i32* %223, i64 %632
  %634 = load i32, i32* %633, align 4
  %635 = getelementptr inbounds i32, i32* %257, i64 %632
  %636 = load i32, i32* %635, align 4
  %637 = sdiv i32 %634, %636
  %638 = sitofp i32 %637 to float
  %639 = fcmp ogt float %188, %638
  %640 = select i1 %639, float %188, float %638
  %641 = fcmp ogt float %640, %189
  %642 = select i1 %641, float %189, float %640
  %643 = fptosi float %642 to i32
  %644 = getelementptr inbounds i32, i32* %291, i64 %632
  store i32 %643, i32* %644, align 4
  %645 = add nuw nsw i64 %632, 1
  %646 = icmp eq i64 %645, %629
  br i1 %646, label %647, label %631

647:                                              ; preds = %631, %626
  br i1 %512, label %648, label %654

648:                                              ; preds = %647
  %649 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %650 = load i32*, i32** %649, align 8
  %651 = icmp eq i32* %650, null
  br i1 %651, label %654, label %652

652:                                              ; preds = %648
  %653 = bitcast i32* %650 to i8*
  tail call void @_ZdaPv(i8* %653) #11
  br label %654

654:                                              ; preds = %647, %648, %652
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %258) #12
  br i1 %402, label %655, label %661

655:                                              ; preds = %654
  %656 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %657 = load i32*, i32** %656, align 8
  %658 = icmp eq i32* %657, null
  br i1 %658, label %661, label %659

659:                                              ; preds = %655
  %660 = bitcast i32* %657 to i8*
  tail call void @_ZdaPv(i8* %660) #11
  br label %661

661:                                              ; preds = %654, %655, %659
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #12
  br i1 %292, label %662, label %668

662:                                              ; preds = %661
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  %665 = icmp eq i32* %664, null
  br i1 %665, label %668, label %666

666:                                              ; preds = %662
  %667 = bitcast i32* %664 to i8*
  tail call void @_ZdaPv(i8* %667) #11
  br label %668

668:                                              ; preds = %661, %662, %666
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #12
  br label %1436

669:                                              ; preds = %7
  %670 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 0
  %671 = load i8, i8* %670, align 4, !range !2
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %823, label %673

673:                                              ; preds = %669
  %674 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %674) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %674, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %675 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  %677 = add i32 %676, -1
  %678 = icmp ult i32 %677, 3
  br i1 %678, label %679, label %686

679:                                              ; preds = %673
  %680 = sext i32 %677 to i64
  %681 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %680
  %682 = load float, float* %681, align 4
  %683 = sext i32 %677 to i64
  %684 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.45, i64 0, i64 %683
  %685 = load float, float* %684, align 4
  br label %686

686:                                              ; preds = %673, %679
  %687 = phi float [ %682, %679 ], [ 0xC7EFFFFFE0000000, %673 ]
  %688 = phi float [ %685, %679 ], [ 0x47EFFFFFE0000000, %673 ]
  %689 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 13
  store float %687, float* %689, align 4
  %690 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %15, i64 0, i32 14
  store float %688, float* %690, align 4
  %691 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %691) #12
  %692 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %692, label %693, label %695

693:                                              ; preds = %686
  %694 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %694, align 8, !alias.scope !285
  br label %723

695:                                              ; preds = %686
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %697 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %696, align 8, !noalias !285
  %698 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 0
  %699 = load i32, i32* %698, align 4, !noalias !285
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 1, i64 0
  %701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %699, i32* %701, align 8, !alias.scope !285
  %702 = icmp sgt i32 %699, 5
  br i1 %702, label %703, label %710

703:                                              ; preds = %695
  %704 = sext i32 %699 to i64
  %705 = shl nsw i64 %704, 2
  %706 = tail call i8* @_Znam(i64 %705) #11, !noalias !285
  %707 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %708 = bitcast i32** %707 to i8**
  store i8* %706, i8** %708, align 8, !alias.scope !285
  %709 = bitcast i8* %706 to i32*
  br label %715

710:                                              ; preds = %695
  %711 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %712 = bitcast %union.anon* %711 to i32*
  %713 = sext i32 %699 to i64
  %714 = shl nsw i64 %713, 2
  br label %715

715:                                              ; preds = %710, %703
  %716 = phi i64 [ %705, %703 ], [ %714, %710 ]
  %717 = phi i32* [ %709, %703 ], [ %712, %710 ]
  %718 = bitcast i32* %717 to i8*
  %719 = bitcast i32* %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %718, i8* align 4 %719, i64 %716, i1 false) #12
  %720 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %721 = bitcast %union.TfLitePtrUnion* %720 to float**
  %722 = load float*, float** %721, align 8
  br label %723

723:                                              ; preds = %693, %715
  %724 = phi float* [ %722, %715 ], [ null, %693 ]
  %725 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %725) #12
  %726 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %726, label %727, label %729

727:                                              ; preds = %723
  %728 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %728, align 8, !alias.scope !288
  br label %757

729:                                              ; preds = %723
  %730 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %731 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %730, align 8, !noalias !288
  %732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %731, i64 0, i32 0
  %733 = load i32, i32* %732, align 4, !noalias !288
  %734 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %731, i64 0, i32 1, i64 0
  %735 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %733, i32* %735, align 8, !alias.scope !288
  %736 = icmp sgt i32 %733, 5
  br i1 %736, label %737, label %744

737:                                              ; preds = %729
  %738 = sext i32 %733 to i64
  %739 = shl nsw i64 %738, 2
  %740 = tail call i8* @_Znam(i64 %739) #11, !noalias !288
  %741 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %742 = bitcast i32** %741 to i8**
  store i8* %740, i8** %742, align 8, !alias.scope !288
  %743 = bitcast i8* %740 to i32*
  br label %749

744:                                              ; preds = %729
  %745 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %746 = bitcast %union.anon* %745 to i32*
  %747 = sext i32 %733 to i64
  %748 = shl nsw i64 %747, 2
  br label %749

749:                                              ; preds = %744, %737
  %750 = phi i64 [ %739, %737 ], [ %748, %744 ]
  %751 = phi i32* [ %743, %737 ], [ %746, %744 ]
  %752 = bitcast i32* %751 to i8*
  %753 = bitcast i32* %734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %752, i8* align 4 %753, i64 %750, i1 false) #12
  %754 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %755 = bitcast %union.TfLitePtrUnion* %754 to float**
  %756 = load float*, float** %755, align 8
  br label %757

757:                                              ; preds = %727, %749
  %758 = phi float* [ %756, %749 ], [ null, %727 ]
  %759 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %759) #12
  %760 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %760, label %761, label %763

761:                                              ; preds = %757
  %762 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %762, align 8, !alias.scope !291
  br label %791

763:                                              ; preds = %757
  %764 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %765 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %764, align 8, !noalias !291
  %766 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %765, i64 0, i32 0
  %767 = load i32, i32* %766, align 4, !noalias !291
  %768 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %765, i64 0, i32 1, i64 0
  %769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %767, i32* %769, align 8, !alias.scope !291
  %770 = icmp sgt i32 %767, 5
  br i1 %770, label %771, label %778

771:                                              ; preds = %763
  %772 = sext i32 %767 to i64
  %773 = shl nsw i64 %772, 2
  %774 = tail call i8* @_Znam(i64 %773) #11, !noalias !291
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %776 = bitcast i32** %775 to i8**
  store i8* %774, i8** %776, align 8, !alias.scope !291
  %777 = bitcast i8* %774 to i32*
  br label %783

778:                                              ; preds = %763
  %779 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %780 = bitcast %union.anon* %779 to i32*
  %781 = sext i32 %767 to i64
  %782 = shl nsw i64 %781, 2
  br label %783

783:                                              ; preds = %778, %771
  %784 = phi i64 [ %773, %771 ], [ %782, %778 ]
  %785 = phi i32* [ %777, %771 ], [ %780, %778 ]
  %786 = bitcast i32* %785 to i8*
  %787 = bitcast i32* %768 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %786, i8* align 4 %787, i64 %784, i1 false) #12
  %788 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %789 = bitcast %union.TfLitePtrUnion* %788 to float**
  %790 = load float*, float** %789, align 8
  br label %791

791:                                              ; preds = %761, %783
  %792 = phi float* [ %790, %783 ], [ null, %761 ]
  call void @_ZN6tflite13optimized_ops16BroadcastDivSlowIfLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, float* %724, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, float* %758, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, float* %792)
  %793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %794 = load i32, i32* %793, align 8
  %795 = icmp sgt i32 %794, 5
  br i1 %795, label %796, label %802

796:                                              ; preds = %791
  %797 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %798 = load i32*, i32** %797, align 8
  %799 = icmp eq i32* %798, null
  br i1 %799, label %802, label %800

800:                                              ; preds = %796
  %801 = bitcast i32* %798 to i8*
  call void @_ZdaPv(i8* %801) #11
  br label %802

802:                                              ; preds = %791, %796, %800
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %759) #12
  %803 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %804 = load i32, i32* %803, align 8
  %805 = icmp sgt i32 %804, 5
  br i1 %805, label %806, label %812

806:                                              ; preds = %802
  %807 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %808 = load i32*, i32** %807, align 8
  %809 = icmp eq i32* %808, null
  br i1 %809, label %812, label %810

810:                                              ; preds = %806
  %811 = bitcast i32* %808 to i8*
  call void @_ZdaPv(i8* %811) #11
  br label %812

812:                                              ; preds = %802, %806, %810
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #12
  %813 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %814 = load i32, i32* %813, align 8
  %815 = icmp sgt i32 %814, 5
  br i1 %815, label %816, label %822

816:                                              ; preds = %812
  %817 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %818 = load i32*, i32** %817, align 8
  %819 = icmp eq i32* %818, null
  br i1 %819, label %822, label %820

820:                                              ; preds = %816
  %821 = bitcast i32* %818 to i8*
  call void @_ZdaPv(i8* %821) #11
  br label %822

822:                                              ; preds = %812, %816, %820
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %691) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %674) #12
  br label %1436

823:                                              ; preds = %669
  %824 = getelementptr inbounds %struct.TfLiteDivParams, %struct.TfLiteDivParams* %2, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  %826 = add i32 %825, -1
  %827 = icmp ult i32 %826, 3
  br i1 %827, label %828, label %835

828:                                              ; preds = %823
  %829 = sext i32 %826 to i64
  %830 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.44, i64 0, i64 %829
  %831 = load float, float* %830, align 4
  %832 = sext i32 %826 to i64
  %833 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3div7EvalDivILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.45, i64 0, i64 %832
  %834 = load float, float* %833, align 4
  br label %835

835:                                              ; preds = %823, %828
  %836 = phi float [ %831, %828 ], [ 0xC7EFFFFFE0000000, %823 ]
  %837 = phi float [ %834, %828 ], [ 0x47EFFFFFE0000000, %823 ]
  %838 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %838) #12
  %839 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %839, label %840, label %842

840:                                              ; preds = %835
  %841 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %841, align 8, !alias.scope !294
  br label %871

842:                                              ; preds = %835
  %843 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %844 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %843, align 8, !noalias !294
  %845 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 0
  %846 = load i32, i32* %845, align 4, !noalias !294
  %847 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 1, i64 0
  %848 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %846, i32* %848, align 8, !alias.scope !294
  %849 = icmp sgt i32 %846, 5
  br i1 %849, label %850, label %857

850:                                              ; preds = %842
  %851 = sext i32 %846 to i64
  %852 = shl nsw i64 %851, 2
  %853 = tail call i8* @_Znam(i64 %852) #11, !noalias !294
  %854 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %855 = bitcast i32** %854 to i8**
  store i8* %853, i8** %855, align 8, !alias.scope !294
  %856 = bitcast i8* %853 to i32*
  br label %862

857:                                              ; preds = %842
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %859 = bitcast %union.anon* %858 to i32*
  %860 = sext i32 %846 to i64
  %861 = shl nsw i64 %860, 2
  br label %862

862:                                              ; preds = %857, %850
  %863 = phi i64 [ %852, %850 ], [ %861, %857 ]
  %864 = phi i32* [ %856, %850 ], [ %859, %857 ]
  %865 = bitcast i32* %864 to i8*
  %866 = bitcast i32* %847 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %865, i8* align 4 %866, i64 %863, i1 false) #12
  %867 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %868 = bitcast %union.TfLitePtrUnion* %867 to float**
  %869 = load float*, float** %868, align 8
  %870 = bitcast float* %869 to i8*
  br label %871

871:                                              ; preds = %840, %862
  %872 = phi i32 [ %846, %862 ], [ 0, %840 ]
  %873 = phi i8* [ %870, %862 ], [ null, %840 ]
  %874 = phi float* [ %869, %862 ], [ null, %840 ]
  %875 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %875) #12
  %876 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %876, label %877, label %879

877:                                              ; preds = %871
  %878 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %878, align 8, !alias.scope !297
  br label %908

879:                                              ; preds = %871
  %880 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %881 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %880, align 8, !noalias !297
  %882 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %881, i64 0, i32 0
  %883 = load i32, i32* %882, align 4, !noalias !297
  %884 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %881, i64 0, i32 1, i64 0
  %885 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %883, i32* %885, align 8, !alias.scope !297
  %886 = icmp sgt i32 %883, 5
  br i1 %886, label %887, label %894

887:                                              ; preds = %879
  %888 = sext i32 %883 to i64
  %889 = shl nsw i64 %888, 2
  %890 = tail call i8* @_Znam(i64 %889) #11, !noalias !297
  %891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %892 = bitcast i32** %891 to i8**
  store i8* %890, i8** %892, align 8, !alias.scope !297
  %893 = bitcast i8* %890 to i32*
  br label %899

894:                                              ; preds = %879
  %895 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %896 = bitcast %union.anon* %895 to i32*
  %897 = sext i32 %883 to i64
  %898 = shl nsw i64 %897, 2
  br label %899

899:                                              ; preds = %894, %887
  %900 = phi i64 [ %889, %887 ], [ %898, %894 ]
  %901 = phi i32* [ %893, %887 ], [ %896, %894 ]
  %902 = bitcast i32* %901 to i8*
  %903 = bitcast i32* %884 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %902, i8* align 4 %903, i64 %900, i1 false) #12
  %904 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %905 = bitcast %union.TfLitePtrUnion* %904 to float**
  %906 = load float*, float** %905, align 8
  %907 = bitcast float* %906 to i8*
  br label %908

908:                                              ; preds = %877, %899
  %909 = phi i32 [ %883, %899 ], [ 0, %877 ]
  %910 = phi i8* [ %907, %899 ], [ null, %877 ]
  %911 = phi float* [ %906, %899 ], [ null, %877 ]
  %912 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %912) #12
  %913 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %913, label %914, label %916

914:                                              ; preds = %908
  %915 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %915, align 8, !alias.scope !300
  br label %945

916:                                              ; preds = %908
  %917 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %918 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %917, align 8, !noalias !300
  %919 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %918, i64 0, i32 0
  %920 = load i32, i32* %919, align 4, !noalias !300
  %921 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %918, i64 0, i32 1, i64 0
  %922 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %920, i32* %922, align 8, !alias.scope !300
  %923 = icmp sgt i32 %920, 5
  br i1 %923, label %924, label %931

924:                                              ; preds = %916
  %925 = sext i32 %920 to i64
  %926 = shl nsw i64 %925, 2
  %927 = tail call i8* @_Znam(i64 %926) #11, !noalias !300
  %928 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %929 = bitcast i32** %928 to i8**
  store i8* %927, i8** %929, align 8, !alias.scope !300
  %930 = bitcast i8* %927 to i32*
  br label %936

931:                                              ; preds = %916
  %932 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %933 = bitcast %union.anon* %932 to i32*
  %934 = sext i32 %920 to i64
  %935 = shl nsw i64 %934, 2
  br label %936

936:                                              ; preds = %931, %924
  %937 = phi i64 [ %926, %924 ], [ %935, %931 ]
  %938 = phi i32* [ %930, %924 ], [ %933, %931 ]
  %939 = bitcast i32* %938 to i8*
  %940 = bitcast i32* %921 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %939, i8* align 4 %940, i64 %937, i1 false) #12
  %941 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %942 = bitcast %union.TfLitePtrUnion* %941 to float**
  %943 = load float*, float** %942, align 8
  %944 = bitcast float* %943 to i8*
  br label %945

945:                                              ; preds = %914, %936
  %946 = phi i32 [ %920, %936 ], [ 0, %914 ]
  %947 = phi i8* [ %944, %936 ], [ null, %914 ]
  %948 = phi float* [ %943, %936 ], [ null, %914 ]
  %949 = icmp sgt i32 %872, 5
  %950 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  br i1 %949, label %951, label %954

951:                                              ; preds = %945
  %952 = getelementptr inbounds %union.anon, %union.anon* %950, i64 0, i32 0
  %953 = load i32*, i32** %952, align 8
  br label %957

954:                                              ; preds = %945
  %955 = bitcast %union.anon* %950 to i32*
  %956 = icmp sgt i32 %872, 0
  br i1 %956, label %957, label %1057

957:                                              ; preds = %954, %951
  %958 = phi i32* [ %953, %951 ], [ %955, %954 ]
  %959 = zext i32 %872 to i64
  %960 = icmp ult i32 %872, 8
  br i1 %960, label %1046, label %961

961:                                              ; preds = %957
  %962 = and i64 %959, 4294967288
  %963 = add nsw i64 %962, -8
  %964 = lshr exact i64 %963, 3
  %965 = add nuw nsw i64 %964, 1
  %966 = and i64 %965, 3
  %967 = icmp ult i64 %963, 24
  br i1 %967, label %1013, label %968

968:                                              ; preds = %961
  %969 = sub nsw i64 %965, %966
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi i64 [ 0, %968 ], [ %1010, %970 ]
  %972 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %968 ], [ %1008, %970 ]
  %973 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %968 ], [ %1009, %970 ]
  %974 = phi i64 [ %969, %968 ], [ %1011, %970 ]
  %975 = getelementptr inbounds i32, i32* %958, i64 %971
  %976 = bitcast i32* %975 to <4 x i32>*
  %977 = load <4 x i32>, <4 x i32>* %976, align 4
  %978 = getelementptr inbounds i32, i32* %975, i64 4
  %979 = bitcast i32* %978 to <4 x i32>*
  %980 = load <4 x i32>, <4 x i32>* %979, align 4
  %981 = mul nsw <4 x i32> %977, %972
  %982 = mul nsw <4 x i32> %980, %973
  %983 = or i64 %971, 8
  %984 = getelementptr inbounds i32, i32* %958, i64 %983
  %985 = bitcast i32* %984 to <4 x i32>*
  %986 = load <4 x i32>, <4 x i32>* %985, align 4
  %987 = getelementptr inbounds i32, i32* %984, i64 4
  %988 = bitcast i32* %987 to <4 x i32>*
  %989 = load <4 x i32>, <4 x i32>* %988, align 4
  %990 = mul nsw <4 x i32> %986, %981
  %991 = mul nsw <4 x i32> %989, %982
  %992 = or i64 %971, 16
  %993 = getelementptr inbounds i32, i32* %958, i64 %992
  %994 = bitcast i32* %993 to <4 x i32>*
  %995 = load <4 x i32>, <4 x i32>* %994, align 4
  %996 = getelementptr inbounds i32, i32* %993, i64 4
  %997 = bitcast i32* %996 to <4 x i32>*
  %998 = load <4 x i32>, <4 x i32>* %997, align 4
  %999 = mul nsw <4 x i32> %995, %990
  %1000 = mul nsw <4 x i32> %998, %991
  %1001 = or i64 %971, 24
  %1002 = getelementptr inbounds i32, i32* %958, i64 %1001
  %1003 = bitcast i32* %1002 to <4 x i32>*
  %1004 = load <4 x i32>, <4 x i32>* %1003, align 4
  %1005 = getelementptr inbounds i32, i32* %1002, i64 4
  %1006 = bitcast i32* %1005 to <4 x i32>*
  %1007 = load <4 x i32>, <4 x i32>* %1006, align 4
  %1008 = mul nsw <4 x i32> %1004, %999
  %1009 = mul nsw <4 x i32> %1007, %1000
  %1010 = add i64 %971, 32
  %1011 = add i64 %974, -4
  %1012 = icmp eq i64 %1011, 0
  br i1 %1012, label %1013, label %970, !llvm.loop !303

1013:                                             ; preds = %970, %961
  %1014 = phi <4 x i32> [ undef, %961 ], [ %1008, %970 ]
  %1015 = phi <4 x i32> [ undef, %961 ], [ %1009, %970 ]
  %1016 = phi i64 [ 0, %961 ], [ %1010, %970 ]
  %1017 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %961 ], [ %1008, %970 ]
  %1018 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %961 ], [ %1009, %970 ]
  %1019 = icmp eq i64 %966, 0
  br i1 %1019, label %1036, label %1020

1020:                                             ; preds = %1013, %1020
  %1021 = phi i64 [ %1033, %1020 ], [ %1016, %1013 ]
  %1022 = phi <4 x i32> [ %1031, %1020 ], [ %1017, %1013 ]
  %1023 = phi <4 x i32> [ %1032, %1020 ], [ %1018, %1013 ]
  %1024 = phi i64 [ %1034, %1020 ], [ %966, %1013 ]
  %1025 = getelementptr inbounds i32, i32* %958, i64 %1021
  %1026 = bitcast i32* %1025 to <4 x i32>*
  %1027 = load <4 x i32>, <4 x i32>* %1026, align 4
  %1028 = getelementptr inbounds i32, i32* %1025, i64 4
  %1029 = bitcast i32* %1028 to <4 x i32>*
  %1030 = load <4 x i32>, <4 x i32>* %1029, align 4
  %1031 = mul nsw <4 x i32> %1027, %1022
  %1032 = mul nsw <4 x i32> %1030, %1023
  %1033 = add i64 %1021, 8
  %1034 = add i64 %1024, -1
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %1036, label %1020, !llvm.loop !304

1036:                                             ; preds = %1020, %1013
  %1037 = phi <4 x i32> [ %1014, %1013 ], [ %1031, %1020 ]
  %1038 = phi <4 x i32> [ %1015, %1013 ], [ %1032, %1020 ]
  %1039 = mul <4 x i32> %1038, %1037
  %1040 = shufflevector <4 x i32> %1039, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1041 = mul <4 x i32> %1039, %1040
  %1042 = shufflevector <4 x i32> %1041, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1043 = mul <4 x i32> %1041, %1042
  %1044 = extractelement <4 x i32> %1043, i32 0
  %1045 = icmp eq i64 %962, %959
  br i1 %1045, label %1057, label %1046

1046:                                             ; preds = %1036, %957
  %1047 = phi i64 [ 0, %957 ], [ %962, %1036 ]
  %1048 = phi i32 [ 1, %957 ], [ %1044, %1036 ]
  br label %1049

1049:                                             ; preds = %1046, %1049
  %1050 = phi i64 [ %1055, %1049 ], [ %1047, %1046 ]
  %1051 = phi i32 [ %1054, %1049 ], [ %1048, %1046 ]
  %1052 = getelementptr inbounds i32, i32* %958, i64 %1050
  %1053 = load i32, i32* %1052, align 4
  %1054 = mul nsw i32 %1053, %1051
  %1055 = add nuw nsw i64 %1050, 1
  %1056 = icmp eq i64 %1055, %959
  br i1 %1056, label %1057, label %1049, !llvm.loop !305

1057:                                             ; preds = %1049, %1036, %954
  %1058 = phi i32 [ 1, %954 ], [ %1044, %1036 ], [ %1054, %1049 ]
  %1059 = icmp sgt i32 %909, 5
  %1060 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  br i1 %1059, label %1061, label %1064

1061:                                             ; preds = %1057
  %1062 = getelementptr inbounds %union.anon, %union.anon* %1060, i64 0, i32 0
  %1063 = load i32*, i32** %1062, align 8
  br label %1067

1064:                                             ; preds = %1057
  %1065 = bitcast %union.anon* %1060 to i32*
  %1066 = icmp sgt i32 %909, 0
  br i1 %1066, label %1067, label %1167

1067:                                             ; preds = %1064, %1061
  %1068 = phi i32* [ %1063, %1061 ], [ %1065, %1064 ]
  %1069 = zext i32 %909 to i64
  %1070 = icmp ult i32 %909, 8
  br i1 %1070, label %1156, label %1071

1071:                                             ; preds = %1067
  %1072 = and i64 %1069, 4294967288
  %1073 = add nsw i64 %1072, -8
  %1074 = lshr exact i64 %1073, 3
  %1075 = add nuw nsw i64 %1074, 1
  %1076 = and i64 %1075, 3
  %1077 = icmp ult i64 %1073, 24
  br i1 %1077, label %1123, label %1078

1078:                                             ; preds = %1071
  %1079 = sub nsw i64 %1075, %1076
  br label %1080

1080:                                             ; preds = %1080, %1078
  %1081 = phi i64 [ 0, %1078 ], [ %1120, %1080 ]
  %1082 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1078 ], [ %1118, %1080 ]
  %1083 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1078 ], [ %1119, %1080 ]
  %1084 = phi i64 [ %1079, %1078 ], [ %1121, %1080 ]
  %1085 = getelementptr inbounds i32, i32* %1068, i64 %1081
  %1086 = bitcast i32* %1085 to <4 x i32>*
  %1087 = load <4 x i32>, <4 x i32>* %1086, align 4
  %1088 = getelementptr inbounds i32, i32* %1085, i64 4
  %1089 = bitcast i32* %1088 to <4 x i32>*
  %1090 = load <4 x i32>, <4 x i32>* %1089, align 4
  %1091 = mul nsw <4 x i32> %1087, %1082
  %1092 = mul nsw <4 x i32> %1090, %1083
  %1093 = or i64 %1081, 8
  %1094 = getelementptr inbounds i32, i32* %1068, i64 %1093
  %1095 = bitcast i32* %1094 to <4 x i32>*
  %1096 = load <4 x i32>, <4 x i32>* %1095, align 4
  %1097 = getelementptr inbounds i32, i32* %1094, i64 4
  %1098 = bitcast i32* %1097 to <4 x i32>*
  %1099 = load <4 x i32>, <4 x i32>* %1098, align 4
  %1100 = mul nsw <4 x i32> %1096, %1091
  %1101 = mul nsw <4 x i32> %1099, %1092
  %1102 = or i64 %1081, 16
  %1103 = getelementptr inbounds i32, i32* %1068, i64 %1102
  %1104 = bitcast i32* %1103 to <4 x i32>*
  %1105 = load <4 x i32>, <4 x i32>* %1104, align 4
  %1106 = getelementptr inbounds i32, i32* %1103, i64 4
  %1107 = bitcast i32* %1106 to <4 x i32>*
  %1108 = load <4 x i32>, <4 x i32>* %1107, align 4
  %1109 = mul nsw <4 x i32> %1105, %1100
  %1110 = mul nsw <4 x i32> %1108, %1101
  %1111 = or i64 %1081, 24
  %1112 = getelementptr inbounds i32, i32* %1068, i64 %1111
  %1113 = bitcast i32* %1112 to <4 x i32>*
  %1114 = load <4 x i32>, <4 x i32>* %1113, align 4
  %1115 = getelementptr inbounds i32, i32* %1112, i64 4
  %1116 = bitcast i32* %1115 to <4 x i32>*
  %1117 = load <4 x i32>, <4 x i32>* %1116, align 4
  %1118 = mul nsw <4 x i32> %1114, %1109
  %1119 = mul nsw <4 x i32> %1117, %1110
  %1120 = add i64 %1081, 32
  %1121 = add i64 %1084, -4
  %1122 = icmp eq i64 %1121, 0
  br i1 %1122, label %1123, label %1080, !llvm.loop !306

1123:                                             ; preds = %1080, %1071
  %1124 = phi <4 x i32> [ undef, %1071 ], [ %1118, %1080 ]
  %1125 = phi <4 x i32> [ undef, %1071 ], [ %1119, %1080 ]
  %1126 = phi i64 [ 0, %1071 ], [ %1120, %1080 ]
  %1127 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1071 ], [ %1118, %1080 ]
  %1128 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1071 ], [ %1119, %1080 ]
  %1129 = icmp eq i64 %1076, 0
  br i1 %1129, label %1146, label %1130

1130:                                             ; preds = %1123, %1130
  %1131 = phi i64 [ %1143, %1130 ], [ %1126, %1123 ]
  %1132 = phi <4 x i32> [ %1141, %1130 ], [ %1127, %1123 ]
  %1133 = phi <4 x i32> [ %1142, %1130 ], [ %1128, %1123 ]
  %1134 = phi i64 [ %1144, %1130 ], [ %1076, %1123 ]
  %1135 = getelementptr inbounds i32, i32* %1068, i64 %1131
  %1136 = bitcast i32* %1135 to <4 x i32>*
  %1137 = load <4 x i32>, <4 x i32>* %1136, align 4
  %1138 = getelementptr inbounds i32, i32* %1135, i64 4
  %1139 = bitcast i32* %1138 to <4 x i32>*
  %1140 = load <4 x i32>, <4 x i32>* %1139, align 4
  %1141 = mul nsw <4 x i32> %1137, %1132
  %1142 = mul nsw <4 x i32> %1140, %1133
  %1143 = add i64 %1131, 8
  %1144 = add i64 %1134, -1
  %1145 = icmp eq i64 %1144, 0
  br i1 %1145, label %1146, label %1130, !llvm.loop !307

1146:                                             ; preds = %1130, %1123
  %1147 = phi <4 x i32> [ %1124, %1123 ], [ %1141, %1130 ]
  %1148 = phi <4 x i32> [ %1125, %1123 ], [ %1142, %1130 ]
  %1149 = mul <4 x i32> %1148, %1147
  %1150 = shufflevector <4 x i32> %1149, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1151 = mul <4 x i32> %1149, %1150
  %1152 = shufflevector <4 x i32> %1151, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1153 = mul <4 x i32> %1151, %1152
  %1154 = extractelement <4 x i32> %1153, i32 0
  %1155 = icmp eq i64 %1072, %1069
  br i1 %1155, label %1167, label %1156

1156:                                             ; preds = %1146, %1067
  %1157 = phi i64 [ 0, %1067 ], [ %1072, %1146 ]
  %1158 = phi i32 [ 1, %1067 ], [ %1154, %1146 ]
  br label %1159

1159:                                             ; preds = %1156, %1159
  %1160 = phi i64 [ %1165, %1159 ], [ %1157, %1156 ]
  %1161 = phi i32 [ %1164, %1159 ], [ %1158, %1156 ]
  %1162 = getelementptr inbounds i32, i32* %1068, i64 %1160
  %1163 = load i32, i32* %1162, align 4
  %1164 = mul nsw i32 %1163, %1161
  %1165 = add nuw nsw i64 %1160, 1
  %1166 = icmp eq i64 %1165, %1069
  br i1 %1166, label %1167, label %1159, !llvm.loop !308

1167:                                             ; preds = %1159, %1146, %1064
  %1168 = phi i32 [ 1, %1064 ], [ %1154, %1146 ], [ %1164, %1159 ]
  %1169 = icmp sgt i32 %946, 5
  %1170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1169, label %1171, label %1174

1171:                                             ; preds = %1167
  %1172 = getelementptr inbounds %union.anon, %union.anon* %1170, i64 0, i32 0
  %1173 = load i32*, i32** %1172, align 8
  br label %1177

1174:                                             ; preds = %1167
  %1175 = bitcast %union.anon* %1170 to i32*
  %1176 = icmp sgt i32 %946, 0
  br i1 %1176, label %1177, label %1277

1177:                                             ; preds = %1174, %1171
  %1178 = phi i32* [ %1173, %1171 ], [ %1175, %1174 ]
  %1179 = zext i32 %946 to i64
  %1180 = icmp ult i32 %946, 8
  br i1 %1180, label %1266, label %1181

1181:                                             ; preds = %1177
  %1182 = and i64 %1179, 4294967288
  %1183 = add nsw i64 %1182, -8
  %1184 = lshr exact i64 %1183, 3
  %1185 = add nuw nsw i64 %1184, 1
  %1186 = and i64 %1185, 3
  %1187 = icmp ult i64 %1183, 24
  br i1 %1187, label %1233, label %1188

1188:                                             ; preds = %1181
  %1189 = sub nsw i64 %1185, %1186
  br label %1190

1190:                                             ; preds = %1190, %1188
  %1191 = phi i64 [ 0, %1188 ], [ %1230, %1190 ]
  %1192 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1188 ], [ %1228, %1190 ]
  %1193 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1188 ], [ %1229, %1190 ]
  %1194 = phi i64 [ %1189, %1188 ], [ %1231, %1190 ]
  %1195 = getelementptr inbounds i32, i32* %1178, i64 %1191
  %1196 = bitcast i32* %1195 to <4 x i32>*
  %1197 = load <4 x i32>, <4 x i32>* %1196, align 4
  %1198 = getelementptr inbounds i32, i32* %1195, i64 4
  %1199 = bitcast i32* %1198 to <4 x i32>*
  %1200 = load <4 x i32>, <4 x i32>* %1199, align 4
  %1201 = mul nsw <4 x i32> %1197, %1192
  %1202 = mul nsw <4 x i32> %1200, %1193
  %1203 = or i64 %1191, 8
  %1204 = getelementptr inbounds i32, i32* %1178, i64 %1203
  %1205 = bitcast i32* %1204 to <4 x i32>*
  %1206 = load <4 x i32>, <4 x i32>* %1205, align 4
  %1207 = getelementptr inbounds i32, i32* %1204, i64 4
  %1208 = bitcast i32* %1207 to <4 x i32>*
  %1209 = load <4 x i32>, <4 x i32>* %1208, align 4
  %1210 = mul nsw <4 x i32> %1206, %1201
  %1211 = mul nsw <4 x i32> %1209, %1202
  %1212 = or i64 %1191, 16
  %1213 = getelementptr inbounds i32, i32* %1178, i64 %1212
  %1214 = bitcast i32* %1213 to <4 x i32>*
  %1215 = load <4 x i32>, <4 x i32>* %1214, align 4
  %1216 = getelementptr inbounds i32, i32* %1213, i64 4
  %1217 = bitcast i32* %1216 to <4 x i32>*
  %1218 = load <4 x i32>, <4 x i32>* %1217, align 4
  %1219 = mul nsw <4 x i32> %1215, %1210
  %1220 = mul nsw <4 x i32> %1218, %1211
  %1221 = or i64 %1191, 24
  %1222 = getelementptr inbounds i32, i32* %1178, i64 %1221
  %1223 = bitcast i32* %1222 to <4 x i32>*
  %1224 = load <4 x i32>, <4 x i32>* %1223, align 4
  %1225 = getelementptr inbounds i32, i32* %1222, i64 4
  %1226 = bitcast i32* %1225 to <4 x i32>*
  %1227 = load <4 x i32>, <4 x i32>* %1226, align 4
  %1228 = mul nsw <4 x i32> %1224, %1219
  %1229 = mul nsw <4 x i32> %1227, %1220
  %1230 = add i64 %1191, 32
  %1231 = add i64 %1194, -4
  %1232 = icmp eq i64 %1231, 0
  br i1 %1232, label %1233, label %1190, !llvm.loop !309

1233:                                             ; preds = %1190, %1181
  %1234 = phi <4 x i32> [ undef, %1181 ], [ %1228, %1190 ]
  %1235 = phi <4 x i32> [ undef, %1181 ], [ %1229, %1190 ]
  %1236 = phi i64 [ 0, %1181 ], [ %1230, %1190 ]
  %1237 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1181 ], [ %1228, %1190 ]
  %1238 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1181 ], [ %1229, %1190 ]
  %1239 = icmp eq i64 %1186, 0
  br i1 %1239, label %1256, label %1240

1240:                                             ; preds = %1233, %1240
  %1241 = phi i64 [ %1253, %1240 ], [ %1236, %1233 ]
  %1242 = phi <4 x i32> [ %1251, %1240 ], [ %1237, %1233 ]
  %1243 = phi <4 x i32> [ %1252, %1240 ], [ %1238, %1233 ]
  %1244 = phi i64 [ %1254, %1240 ], [ %1186, %1233 ]
  %1245 = getelementptr inbounds i32, i32* %1178, i64 %1241
  %1246 = bitcast i32* %1245 to <4 x i32>*
  %1247 = load <4 x i32>, <4 x i32>* %1246, align 4
  %1248 = getelementptr inbounds i32, i32* %1245, i64 4
  %1249 = bitcast i32* %1248 to <4 x i32>*
  %1250 = load <4 x i32>, <4 x i32>* %1249, align 4
  %1251 = mul nsw <4 x i32> %1247, %1242
  %1252 = mul nsw <4 x i32> %1250, %1243
  %1253 = add i64 %1241, 8
  %1254 = add i64 %1244, -1
  %1255 = icmp eq i64 %1254, 0
  br i1 %1255, label %1256, label %1240, !llvm.loop !310

1256:                                             ; preds = %1240, %1233
  %1257 = phi <4 x i32> [ %1234, %1233 ], [ %1251, %1240 ]
  %1258 = phi <4 x i32> [ %1235, %1233 ], [ %1252, %1240 ]
  %1259 = mul <4 x i32> %1258, %1257
  %1260 = shufflevector <4 x i32> %1259, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1261 = mul <4 x i32> %1259, %1260
  %1262 = shufflevector <4 x i32> %1261, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1263 = mul <4 x i32> %1261, %1262
  %1264 = extractelement <4 x i32> %1263, i32 0
  %1265 = icmp eq i64 %1182, %1179
  br i1 %1265, label %1277, label %1266

1266:                                             ; preds = %1256, %1177
  %1267 = phi i64 [ 0, %1177 ], [ %1182, %1256 ]
  %1268 = phi i32 [ 1, %1177 ], [ %1264, %1256 ]
  br label %1269

1269:                                             ; preds = %1266, %1269
  %1270 = phi i64 [ %1275, %1269 ], [ %1267, %1266 ]
  %1271 = phi i32 [ %1274, %1269 ], [ %1268, %1266 ]
  %1272 = getelementptr inbounds i32, i32* %1178, i64 %1270
  %1273 = load i32, i32* %1272, align 4
  %1274 = mul nsw i32 %1273, %1271
  %1275 = add nuw nsw i64 %1270, 1
  %1276 = icmp eq i64 %1275, %1179
  br i1 %1276, label %1277, label %1269, !llvm.loop !311

1277:                                             ; preds = %1269, %1256, %1174
  %1278 = phi i32 [ 1, %1174 ], [ %1264, %1256 ], [ %1274, %1269 ]
  %1279 = icmp eq i32 %1058, %1168
  br i1 %1279, label %1281, label %1280

1280:                                             ; preds = %1277
  tail call void @abort() #13
  unreachable

1281:                                             ; preds = %1277
  %1282 = icmp eq i32 %1058, %1278
  br i1 %1282, label %1283, label %1388

1283:                                             ; preds = %1281
  %1284 = icmp sgt i32 %1058, 0
  br i1 %1284, label %1285, label %1414

1285:                                             ; preds = %1283
  %1286 = zext i32 %1058 to i64
  %1287 = icmp ult i32 %1058, 4
  br i1 %1287, label %1288, label %1309

1288:                                             ; preds = %1386, %1309, %1285
  %1289 = phi i64 [ 0, %1309 ], [ 0, %1285 ], [ %1324, %1386 ]
  %1290 = xor i64 %1289, -1
  %1291 = and i64 %1286, 1
  %1292 = icmp eq i64 %1291, 0
  br i1 %1292, label %1305, label %1293

1293:                                             ; preds = %1288
  %1294 = getelementptr inbounds float, float* %874, i64 %1289
  %1295 = load float, float* %1294, align 4
  %1296 = getelementptr inbounds float, float* %911, i64 %1289
  %1297 = load float, float* %1296, align 4
  %1298 = fdiv float %1295, %1297
  %1299 = fcmp olt float %1298, %836
  %1300 = select i1 %1299, float %836, float %1298
  %1301 = fcmp ogt float %1300, %837
  %1302 = select i1 %1301, float %837, float %1300
  %1303 = getelementptr inbounds float, float* %948, i64 %1289
  store float %1302, float* %1303, align 4
  %1304 = or i64 %1289, 1
  br label %1305

1305:                                             ; preds = %1288, %1293
  %1306 = phi i64 [ %1289, %1288 ], [ %1304, %1293 ]
  %1307 = sub nsw i64 0, %1286
  %1308 = icmp eq i64 %1290, %1307
  br i1 %1308, label %1414, label %1389

1309:                                             ; preds = %1285
  %1310 = getelementptr float, float* %948, i64 %1286
  %1311 = bitcast float* %1310 to i8*
  %1312 = getelementptr float, float* %874, i64 %1286
  %1313 = bitcast float* %1312 to i8*
  %1314 = getelementptr float, float* %911, i64 %1286
  %1315 = bitcast float* %1314 to i8*
  %1316 = icmp ult i8* %947, %1313
  %1317 = icmp ult i8* %873, %1311
  %1318 = and i1 %1316, %1317
  %1319 = icmp ult i8* %947, %1315
  %1320 = icmp ult i8* %910, %1311
  %1321 = and i1 %1319, %1320
  %1322 = or i1 %1318, %1321
  br i1 %1322, label %1288, label %1323

1323:                                             ; preds = %1309
  %1324 = and i64 %1286, 4294967292
  %1325 = insertelement <4 x float> undef, float %836, i32 0
  %1326 = shufflevector <4 x float> %1325, <4 x float> undef, <4 x i32> zeroinitializer
  %1327 = insertelement <4 x float> undef, float %837, i32 0
  %1328 = shufflevector <4 x float> %1327, <4 x float> undef, <4 x i32> zeroinitializer
  %1329 = add nsw i64 %1324, -4
  %1330 = lshr exact i64 %1329, 2
  %1331 = add nuw nsw i64 %1330, 1
  %1332 = and i64 %1331, 1
  %1333 = icmp eq i64 %1329, 0
  br i1 %1333, label %1369, label %1334

1334:                                             ; preds = %1323
  %1335 = sub nuw nsw i64 %1331, %1332
  br label %1336

1336:                                             ; preds = %1336, %1334
  %1337 = phi i64 [ 0, %1334 ], [ %1366, %1336 ]
  %1338 = phi i64 [ %1335, %1334 ], [ %1367, %1336 ]
  %1339 = getelementptr inbounds float, float* %874, i64 %1337
  %1340 = bitcast float* %1339 to <4 x float>*
  %1341 = load <4 x float>, <4 x float>* %1340, align 4, !alias.scope !312
  %1342 = getelementptr inbounds float, float* %911, i64 %1337
  %1343 = bitcast float* %1342 to <4 x float>*
  %1344 = load <4 x float>, <4 x float>* %1343, align 4, !alias.scope !315
  %1345 = fdiv <4 x float> %1341, %1344
  %1346 = fcmp olt <4 x float> %1345, %1326
  %1347 = select <4 x i1> %1346, <4 x float> %1326, <4 x float> %1345
  %1348 = fcmp ogt <4 x float> %1347, %1328
  %1349 = select <4 x i1> %1348, <4 x float> %1328, <4 x float> %1347
  %1350 = getelementptr inbounds float, float* %948, i64 %1337
  %1351 = bitcast float* %1350 to <4 x float>*
  store <4 x float> %1349, <4 x float>* %1351, align 4, !alias.scope !317, !noalias !319
  %1352 = or i64 %1337, 4
  %1353 = getelementptr inbounds float, float* %874, i64 %1352
  %1354 = bitcast float* %1353 to <4 x float>*
  %1355 = load <4 x float>, <4 x float>* %1354, align 4, !alias.scope !312
  %1356 = getelementptr inbounds float, float* %911, i64 %1352
  %1357 = bitcast float* %1356 to <4 x float>*
  %1358 = load <4 x float>, <4 x float>* %1357, align 4, !alias.scope !315
  %1359 = fdiv <4 x float> %1355, %1358
  %1360 = fcmp olt <4 x float> %1359, %1326
  %1361 = select <4 x i1> %1360, <4 x float> %1326, <4 x float> %1359
  %1362 = fcmp ogt <4 x float> %1361, %1328
  %1363 = select <4 x i1> %1362, <4 x float> %1328, <4 x float> %1361
  %1364 = getelementptr inbounds float, float* %948, i64 %1352
  %1365 = bitcast float* %1364 to <4 x float>*
  store <4 x float> %1363, <4 x float>* %1365, align 4, !alias.scope !317, !noalias !319
  %1366 = add i64 %1337, 8
  %1367 = add i64 %1338, -2
  %1368 = icmp eq i64 %1367, 0
  br i1 %1368, label %1369, label %1336, !llvm.loop !320

1369:                                             ; preds = %1336, %1323
  %1370 = phi i64 [ 0, %1323 ], [ %1366, %1336 ]
  %1371 = icmp eq i64 %1332, 0
  br i1 %1371, label %1386, label %1372

1372:                                             ; preds = %1369
  %1373 = getelementptr inbounds float, float* %874, i64 %1370
  %1374 = bitcast float* %1373 to <4 x float>*
  %1375 = load <4 x float>, <4 x float>* %1374, align 4, !alias.scope !312
  %1376 = getelementptr inbounds float, float* %911, i64 %1370
  %1377 = bitcast float* %1376 to <4 x float>*
  %1378 = load <4 x float>, <4 x float>* %1377, align 4, !alias.scope !315
  %1379 = fdiv <4 x float> %1375, %1378
  %1380 = fcmp olt <4 x float> %1379, %1326
  %1381 = select <4 x i1> %1380, <4 x float> %1326, <4 x float> %1379
  %1382 = fcmp ogt <4 x float> %1381, %1328
  %1383 = select <4 x i1> %1382, <4 x float> %1328, <4 x float> %1381
  %1384 = getelementptr inbounds float, float* %948, i64 %1370
  %1385 = bitcast float* %1384 to <4 x float>*
  store <4 x float> %1383, <4 x float>* %1385, align 4, !alias.scope !317, !noalias !319
  br label %1386

1386:                                             ; preds = %1369, %1372
  %1387 = icmp eq i64 %1324, %1286
  br i1 %1387, label %1414, label %1288

1388:                                             ; preds = %1281
  tail call void @abort() #13
  unreachable

1389:                                             ; preds = %1305, %1389
  %1390 = phi i64 [ %1412, %1389 ], [ %1306, %1305 ]
  %1391 = getelementptr inbounds float, float* %874, i64 %1390
  %1392 = load float, float* %1391, align 4
  %1393 = getelementptr inbounds float, float* %911, i64 %1390
  %1394 = load float, float* %1393, align 4
  %1395 = fdiv float %1392, %1394
  %1396 = fcmp olt float %1395, %836
  %1397 = select i1 %1396, float %836, float %1395
  %1398 = fcmp ogt float %1397, %837
  %1399 = select i1 %1398, float %837, float %1397
  %1400 = getelementptr inbounds float, float* %948, i64 %1390
  store float %1399, float* %1400, align 4
  %1401 = add nuw nsw i64 %1390, 1
  %1402 = getelementptr inbounds float, float* %874, i64 %1401
  %1403 = load float, float* %1402, align 4
  %1404 = getelementptr inbounds float, float* %911, i64 %1401
  %1405 = load float, float* %1404, align 4
  %1406 = fdiv float %1403, %1405
  %1407 = fcmp olt float %1406, %836
  %1408 = select i1 %1407, float %836, float %1406
  %1409 = fcmp ogt float %1408, %837
  %1410 = select i1 %1409, float %837, float %1408
  %1411 = getelementptr inbounds float, float* %948, i64 %1401
  store float %1410, float* %1411, align 4
  %1412 = add nuw nsw i64 %1390, 2
  %1413 = icmp eq i64 %1412, %1286
  br i1 %1413, label %1414, label %1389, !llvm.loop !321

1414:                                             ; preds = %1305, %1389, %1386, %1283
  br i1 %1169, label %1415, label %1421

1415:                                             ; preds = %1414
  %1416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1417 = load i32*, i32** %1416, align 8
  %1418 = icmp eq i32* %1417, null
  br i1 %1418, label %1421, label %1419

1419:                                             ; preds = %1415
  %1420 = bitcast i32* %1417 to i8*
  tail call void @_ZdaPv(i8* %1420) #11
  br label %1421

1421:                                             ; preds = %1414, %1415, %1419
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %912) #12
  br i1 %1059, label %1422, label %1428

1422:                                             ; preds = %1421
  %1423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1424 = load i32*, i32** %1423, align 8
  %1425 = icmp eq i32* %1424, null
  br i1 %1425, label %1428, label %1426

1426:                                             ; preds = %1422
  %1427 = bitcast i32* %1424 to i8*
  tail call void @_ZdaPv(i8* %1427) #11
  br label %1428

1428:                                             ; preds = %1421, %1422, %1426
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %875) #12
  br i1 %949, label %1429, label %1435

1429:                                             ; preds = %1428
  %1430 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1431 = load i32*, i32** %1430, align 8
  %1432 = icmp eq i32* %1431, null
  br i1 %1432, label %1435, label %1433

1433:                                             ; preds = %1429
  %1434 = bitcast i32* %1431 to i8*
  tail call void @_ZdaPv(i8* %1434) #11
  br label %1435

1435:                                             ; preds = %1428, %1429, %1433
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %838) #12
  br label %1436

1436:                                             ; preds = %7, %1435, %822, %174, %668
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteDivParams*, %"struct.tflite::ops::builtin::div::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %726

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %726

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %726

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3div13EvalQuantizedILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeP15TfLiteDivParamsPKNS2_6OpDataEPK12TfLiteTensorSH_PSF_.op_params, i64 0, i32 0), i64 80, i1 false)
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %31, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %33, i32* %35, align 4
  %36 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sub nsw i32 0, %37
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 0, %41
  %43 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 3
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 4
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.tflite::ops::builtin::div::OpData", %"struct.tflite::ops::builtin::div::OpData"* %3, i64 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 5
  store i32 %51, i32* %52, align 4
  %53 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #12
  %54 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %56, align 8, !alias.scope !322
  br label %82

57:                                               ; preds = %28
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %59 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %58, align 8, !noalias !322
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4, !noalias !322
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 0
  %63 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %61, i32* %63, align 8, !alias.scope !322
  %64 = icmp sgt i32 %61, 5
  br i1 %64, label %65, label %72

65:                                               ; preds = %57
  %66 = sext i32 %61 to i64
  %67 = shl nsw i64 %66, 2
  %68 = tail call i8* @_Znam(i64 %67) #11, !noalias !322
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  store i8* %68, i8** %70, align 8, !alias.scope !322
  %71 = bitcast i8* %68 to i32*
  br label %77

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %74 = bitcast %union.anon* %73 to i32*
  %75 = sext i32 %61 to i64
  %76 = shl nsw i64 %75, 2
  br label %77

77:                                               ; preds = %72, %65
  %78 = phi i64 [ %67, %65 ], [ %76, %72 ]
  %79 = phi i32* [ %71, %65 ], [ %74, %72 ]
  %80 = bitcast i32* %79 to i8*
  %81 = bitcast i32* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %78, i1 false) #12
  br label %82

82:                                               ; preds = %55, %77
  %83 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #12
  %84 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %86, align 8, !alias.scope !325
  br label %112

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %89 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %88, align 8, !noalias !325
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !noalias !325
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 0
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %91, i32* %93, align 8, !alias.scope !325
  %94 = icmp sgt i32 %91, 5
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = sext i32 %91 to i64
  %97 = shl nsw i64 %96, 2
  %98 = tail call i8* @_Znam(i64 %97) #11, !noalias !325
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %100 = bitcast i32** %99 to i8**
  store i8* %98, i8** %100, align 8, !alias.scope !325
  %101 = bitcast i8* %98 to i32*
  br label %107

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i32*
  %105 = sext i32 %91 to i64
  %106 = shl nsw i64 %105, 2
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi i64 [ %97, %95 ], [ %106, %102 ]
  %109 = phi i32* [ %101, %95 ], [ %104, %102 ]
  %110 = bitcast i32* %109 to i8*
  %111 = bitcast i32* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %108, i1 false) #12
  br label %112

112:                                              ; preds = %85, %107
  %113 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = icmp sgt i32 %115, 5
  br i1 %116, label %117, label %123

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = icmp eq i32* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = bitcast i32* %119 to i8*
  call void @_ZdaPv(i8* %122) #11
  br label %123

123:                                              ; preds = %112, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #12
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp sgt i32 %125, 5
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = icmp eq i32* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = bitcast i32* %129 to i8*
  call void @_ZdaPv(i8* %132) #11
  br label %133

133:                                              ; preds = %123, %127, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12
  br i1 %113, label %134, label %264

134:                                              ; preds = %133
  %135 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #12
  br i1 %54, label %136, label %138

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %137, align 8, !alias.scope !328
  br label %166

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %140 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %139, align 8, !noalias !328
  %141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 4, !noalias !328
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 1, i64 0
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %142, i32* %144, align 8, !alias.scope !328
  %145 = icmp sgt i32 %142, 5
  br i1 %145, label %146, label %153

146:                                              ; preds = %138
  %147 = sext i32 %142 to i64
  %148 = shl nsw i64 %147, 2
  %149 = call i8* @_Znam(i64 %148) #11, !noalias !328
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %151 = bitcast i32** %150 to i8**
  store i8* %149, i8** %151, align 8, !alias.scope !328
  %152 = bitcast i8* %149 to i32*
  br label %158

153:                                              ; preds = %138
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %155 = bitcast %union.anon* %154 to i32*
  %156 = sext i32 %142 to i64
  %157 = shl nsw i64 %156, 2
  br label %158

158:                                              ; preds = %153, %146
  %159 = phi i64 [ %148, %146 ], [ %157, %153 ]
  %160 = phi i32* [ %152, %146 ], [ %155, %153 ]
  %161 = bitcast i32* %160 to i8*
  %162 = bitcast i32* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 %159, i1 false) #12
  %163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %164 = bitcast %union.TfLitePtrUnion* %163 to i8**
  %165 = load i8*, i8** %164, align 8
  br label %166

166:                                              ; preds = %136, %158
  %167 = phi i8* [ %165, %158 ], [ null, %136 ]
  %168 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #12
  br i1 %84, label %169, label %171

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %170, align 8, !alias.scope !331
  br label %199

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %173 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %172, align 8, !noalias !331
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !331
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %175, i32* %177, align 8, !alias.scope !331
  %178 = icmp sgt i32 %175, 5
  br i1 %178, label %179, label %186

179:                                              ; preds = %171
  %180 = sext i32 %175 to i64
  %181 = shl nsw i64 %180, 2
  %182 = call i8* @_Znam(i64 %181) #11, !noalias !331
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %184 = bitcast i32** %183 to i8**
  store i8* %182, i8** %184, align 8, !alias.scope !331
  %185 = bitcast i8* %182 to i32*
  br label %191

186:                                              ; preds = %171
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = sext i32 %175 to i64
  %190 = shl nsw i64 %189, 2
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %186 ]
  %193 = phi i32* [ %185, %179 ], [ %188, %186 ]
  %194 = bitcast i32* %193 to i8*
  %195 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 %192, i1 false) #12
  %196 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %197 = bitcast %union.TfLitePtrUnion* %196 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %169, %191
  %200 = phi i8* [ %198, %191 ], [ null, %169 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #12
  %202 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !334
  br label %233

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !334
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !334
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !334
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = call i8* @_Znam(i64 %215) #11, !noalias !334
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !334
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #12
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to i8**
  %232 = load i8*, i8** %231, align 8
  br label %233

233:                                              ; preds = %203, %225
  %234 = phi i8* [ %232, %225 ], [ null, %203 ]
  call void @_ZN6tflite13optimized_ops16BroadcastDivSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS7_S9_S7_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %167, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %200, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %234)
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = icmp sgt i32 %236, 5
  br i1 %237, label %238, label %244

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %240 = load i32*, i32** %239, align 8
  %241 = icmp eq i32* %240, null
  br i1 %241, label %244, label %242

242:                                              ; preds = %238
  %243 = bitcast i32* %240 to i8*
  call void @_ZdaPv(i8* %243) #11
  br label %244

244:                                              ; preds = %233, %238, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #12
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = icmp sgt i32 %246, 5
  br i1 %247, label %248, label %254

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = icmp eq i32* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %248
  %253 = bitcast i32* %250 to i8*
  call void @_ZdaPv(i8* %253) #11
  br label %254

254:                                              ; preds = %244, %248, %252
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #12
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp sgt i32 %256, 5
  br i1 %257, label %258, label %724

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = icmp eq i32* %260, null
  br i1 %261, label %724, label %262

262:                                              ; preds = %258
  %263 = bitcast i32* %260 to i8*
  call void @_ZdaPv(i8* %263) #11
  br label %724

264:                                              ; preds = %133
  %265 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %265) #12
  br i1 %54, label %266, label %268

266:                                              ; preds = %264
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %267, align 8, !alias.scope !337
  br label %296

268:                                              ; preds = %264
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %270 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %269, align 8, !noalias !337
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 0
  %272 = load i32, i32* %271, align 4, !noalias !337
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %272, i32* %274, align 8, !alias.scope !337
  %275 = icmp sgt i32 %272, 5
  br i1 %275, label %276, label %283

276:                                              ; preds = %268
  %277 = sext i32 %272 to i64
  %278 = shl nsw i64 %277, 2
  %279 = call i8* @_Znam(i64 %278) #11, !noalias !337
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %281 = bitcast i32** %280 to i8**
  store i8* %279, i8** %281, align 8, !alias.scope !337
  %282 = bitcast i8* %279 to i32*
  br label %288

283:                                              ; preds = %268
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %285 = bitcast %union.anon* %284 to i32*
  %286 = sext i32 %272 to i64
  %287 = shl nsw i64 %286, 2
  br label %288

288:                                              ; preds = %283, %276
  %289 = phi i64 [ %278, %276 ], [ %287, %283 ]
  %290 = phi i32* [ %282, %276 ], [ %285, %283 ]
  %291 = bitcast i32* %290 to i8*
  %292 = bitcast i32* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 4 %292, i64 %289, i1 false) #12
  %293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %294 = bitcast %union.TfLitePtrUnion* %293 to i8**
  %295 = load i8*, i8** %294, align 8
  br label %296

296:                                              ; preds = %266, %288
  %297 = phi i32 [ %272, %288 ], [ 0, %266 ]
  %298 = phi i8* [ %295, %288 ], [ null, %266 ]
  %299 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #12
  br i1 %84, label %300, label %302

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %301, align 8, !alias.scope !340
  br label %330

302:                                              ; preds = %296
  %303 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %304 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %303, align 8, !noalias !340
  %305 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 0
  %306 = load i32, i32* %305, align 4, !noalias !340
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %304, i64 0, i32 1, i64 0
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %306, i32* %308, align 8, !alias.scope !340
  %309 = icmp sgt i32 %306, 5
  br i1 %309, label %310, label %317

310:                                              ; preds = %302
  %311 = sext i32 %306 to i64
  %312 = shl nsw i64 %311, 2
  %313 = call i8* @_Znam(i64 %312) #11, !noalias !340
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %315 = bitcast i32** %314 to i8**
  store i8* %313, i8** %315, align 8, !alias.scope !340
  %316 = bitcast i8* %313 to i32*
  br label %322

317:                                              ; preds = %302
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %319 = bitcast %union.anon* %318 to i32*
  %320 = sext i32 %306 to i64
  %321 = shl nsw i64 %320, 2
  br label %322

322:                                              ; preds = %317, %310
  %323 = phi i64 [ %312, %310 ], [ %321, %317 ]
  %324 = phi i32* [ %316, %310 ], [ %319, %317 ]
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %323, i1 false) #12
  %327 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %328 = bitcast %union.TfLitePtrUnion* %327 to i8**
  %329 = load i8*, i8** %328, align 8
  br label %330

330:                                              ; preds = %300, %322
  %331 = phi i32 [ %306, %322 ], [ 0, %300 ]
  %332 = phi i8* [ %329, %322 ], [ null, %300 ]
  %333 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %333) #12
  %334 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %334, label %335, label %337

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %336, align 8, !alias.scope !343
  br label %365

337:                                              ; preds = %330
  %338 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %339 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %338, align 8, !noalias !343
  %340 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %339, i64 0, i32 0
  %341 = load i32, i32* %340, align 4, !noalias !343
  %342 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %339, i64 0, i32 1, i64 0
  %343 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %341, i32* %343, align 8, !alias.scope !343
  %344 = icmp sgt i32 %341, 5
  br i1 %344, label %345, label %352

345:                                              ; preds = %337
  %346 = sext i32 %341 to i64
  %347 = shl nsw i64 %346, 2
  %348 = call i8* @_Znam(i64 %347) #11, !noalias !343
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %350 = bitcast i32** %349 to i8**
  store i8* %348, i8** %350, align 8, !alias.scope !343
  %351 = bitcast i8* %348 to i32*
  br label %357

352:                                              ; preds = %337
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %354 = bitcast %union.anon* %353 to i32*
  %355 = sext i32 %341 to i64
  %356 = shl nsw i64 %355, 2
  br label %357

357:                                              ; preds = %352, %345
  %358 = phi i64 [ %347, %345 ], [ %356, %352 ]
  %359 = phi i32* [ %351, %345 ], [ %354, %352 ]
  %360 = bitcast i32* %359 to i8*
  %361 = bitcast i32* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %360, i8* align 4 %361, i64 %358, i1 false) #12
  %362 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %363 = bitcast %union.TfLitePtrUnion* %362 to i8**
  %364 = load i8*, i8** %363, align 8
  br label %365

365:                                              ; preds = %335, %357
  %366 = phi i32 [ %341, %357 ], [ 0, %335 ]
  %367 = phi i8* [ %364, %357 ], [ null, %335 ]
  %368 = icmp sgt i32 %297, 5
  %369 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %368, label %370, label %373

370:                                              ; preds = %365
  %371 = getelementptr inbounds %union.anon, %union.anon* %369, i64 0, i32 0
  %372 = load i32*, i32** %371, align 8
  br label %376

373:                                              ; preds = %365
  %374 = bitcast %union.anon* %369 to i32*
  %375 = icmp sgt i32 %297, 0
  br i1 %375, label %376, label %476

376:                                              ; preds = %373, %370
  %377 = phi i32* [ %372, %370 ], [ %374, %373 ]
  %378 = zext i32 %297 to i64
  %379 = icmp ult i32 %297, 8
  br i1 %379, label %465, label %380

380:                                              ; preds = %376
  %381 = and i64 %378, 4294967288
  %382 = add nsw i64 %381, -8
  %383 = lshr exact i64 %382, 3
  %384 = add nuw nsw i64 %383, 1
  %385 = and i64 %384, 3
  %386 = icmp ult i64 %382, 24
  br i1 %386, label %432, label %387

387:                                              ; preds = %380
  %388 = sub nsw i64 %384, %385
  br label %389

389:                                              ; preds = %389, %387
  %390 = phi i64 [ 0, %387 ], [ %429, %389 ]
  %391 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %427, %389 ]
  %392 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %428, %389 ]
  %393 = phi i64 [ %388, %387 ], [ %430, %389 ]
  %394 = getelementptr inbounds i32, i32* %377, i64 %390
  %395 = bitcast i32* %394 to <4 x i32>*
  %396 = load <4 x i32>, <4 x i32>* %395, align 4
  %397 = getelementptr inbounds i32, i32* %394, i64 4
  %398 = bitcast i32* %397 to <4 x i32>*
  %399 = load <4 x i32>, <4 x i32>* %398, align 4
  %400 = mul nsw <4 x i32> %396, %391
  %401 = mul nsw <4 x i32> %399, %392
  %402 = or i64 %390, 8
  %403 = getelementptr inbounds i32, i32* %377, i64 %402
  %404 = bitcast i32* %403 to <4 x i32>*
  %405 = load <4 x i32>, <4 x i32>* %404, align 4
  %406 = getelementptr inbounds i32, i32* %403, i64 4
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4
  %409 = mul nsw <4 x i32> %405, %400
  %410 = mul nsw <4 x i32> %408, %401
  %411 = or i64 %390, 16
  %412 = getelementptr inbounds i32, i32* %377, i64 %411
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4
  %415 = getelementptr inbounds i32, i32* %412, i64 4
  %416 = bitcast i32* %415 to <4 x i32>*
  %417 = load <4 x i32>, <4 x i32>* %416, align 4
  %418 = mul nsw <4 x i32> %414, %409
  %419 = mul nsw <4 x i32> %417, %410
  %420 = or i64 %390, 24
  %421 = getelementptr inbounds i32, i32* %377, i64 %420
  %422 = bitcast i32* %421 to <4 x i32>*
  %423 = load <4 x i32>, <4 x i32>* %422, align 4
  %424 = getelementptr inbounds i32, i32* %421, i64 4
  %425 = bitcast i32* %424 to <4 x i32>*
  %426 = load <4 x i32>, <4 x i32>* %425, align 4
  %427 = mul nsw <4 x i32> %423, %418
  %428 = mul nsw <4 x i32> %426, %419
  %429 = add i64 %390, 32
  %430 = add i64 %393, -4
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %389, !llvm.loop !346

432:                                              ; preds = %389, %380
  %433 = phi <4 x i32> [ undef, %380 ], [ %427, %389 ]
  %434 = phi <4 x i32> [ undef, %380 ], [ %428, %389 ]
  %435 = phi i64 [ 0, %380 ], [ %429, %389 ]
  %436 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %380 ], [ %427, %389 ]
  %437 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %380 ], [ %428, %389 ]
  %438 = icmp eq i64 %385, 0
  br i1 %438, label %455, label %439

439:                                              ; preds = %432, %439
  %440 = phi i64 [ %452, %439 ], [ %435, %432 ]
  %441 = phi <4 x i32> [ %450, %439 ], [ %436, %432 ]
  %442 = phi <4 x i32> [ %451, %439 ], [ %437, %432 ]
  %443 = phi i64 [ %453, %439 ], [ %385, %432 ]
  %444 = getelementptr inbounds i32, i32* %377, i64 %440
  %445 = bitcast i32* %444 to <4 x i32>*
  %446 = load <4 x i32>, <4 x i32>* %445, align 4
  %447 = getelementptr inbounds i32, i32* %444, i64 4
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4
  %450 = mul nsw <4 x i32> %446, %441
  %451 = mul nsw <4 x i32> %449, %442
  %452 = add i64 %440, 8
  %453 = add i64 %443, -1
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %455, label %439, !llvm.loop !347

455:                                              ; preds = %439, %432
  %456 = phi <4 x i32> [ %433, %432 ], [ %450, %439 ]
  %457 = phi <4 x i32> [ %434, %432 ], [ %451, %439 ]
  %458 = mul <4 x i32> %457, %456
  %459 = shufflevector <4 x i32> %458, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %460 = mul <4 x i32> %458, %459
  %461 = shufflevector <4 x i32> %460, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %462 = mul <4 x i32> %460, %461
  %463 = extractelement <4 x i32> %462, i32 0
  %464 = icmp eq i64 %381, %378
  br i1 %464, label %476, label %465

465:                                              ; preds = %455, %376
  %466 = phi i64 [ 0, %376 ], [ %381, %455 ]
  %467 = phi i32 [ 1, %376 ], [ %463, %455 ]
  br label %468

468:                                              ; preds = %465, %468
  %469 = phi i64 [ %474, %468 ], [ %466, %465 ]
  %470 = phi i32 [ %473, %468 ], [ %467, %465 ]
  %471 = getelementptr inbounds i32, i32* %377, i64 %469
  %472 = load i32, i32* %471, align 4
  %473 = mul nsw i32 %472, %470
  %474 = add nuw nsw i64 %469, 1
  %475 = icmp eq i64 %474, %378
  br i1 %475, label %476, label %468, !llvm.loop !348

476:                                              ; preds = %468, %455, %373
  %477 = phi i32 [ 1, %373 ], [ %463, %455 ], [ %473, %468 ]
  %478 = icmp sgt i32 %331, 5
  %479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %478, label %480, label %483

480:                                              ; preds = %476
  %481 = getelementptr inbounds %union.anon, %union.anon* %479, i64 0, i32 0
  %482 = load i32*, i32** %481, align 8
  br label %486

483:                                              ; preds = %476
  %484 = bitcast %union.anon* %479 to i32*
  %485 = icmp sgt i32 %331, 0
  br i1 %485, label %486, label %586

486:                                              ; preds = %483, %480
  %487 = phi i32* [ %482, %480 ], [ %484, %483 ]
  %488 = zext i32 %331 to i64
  %489 = icmp ult i32 %331, 8
  br i1 %489, label %575, label %490

490:                                              ; preds = %486
  %491 = and i64 %488, 4294967288
  %492 = add nsw i64 %491, -8
  %493 = lshr exact i64 %492, 3
  %494 = add nuw nsw i64 %493, 1
  %495 = and i64 %494, 3
  %496 = icmp ult i64 %492, 24
  br i1 %496, label %542, label %497

497:                                              ; preds = %490
  %498 = sub nsw i64 %494, %495
  br label %499

499:                                              ; preds = %499, %497
  %500 = phi i64 [ 0, %497 ], [ %539, %499 ]
  %501 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %537, %499 ]
  %502 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %538, %499 ]
  %503 = phi i64 [ %498, %497 ], [ %540, %499 ]
  %504 = getelementptr inbounds i32, i32* %487, i64 %500
  %505 = bitcast i32* %504 to <4 x i32>*
  %506 = load <4 x i32>, <4 x i32>* %505, align 4
  %507 = getelementptr inbounds i32, i32* %504, i64 4
  %508 = bitcast i32* %507 to <4 x i32>*
  %509 = load <4 x i32>, <4 x i32>* %508, align 4
  %510 = mul nsw <4 x i32> %506, %501
  %511 = mul nsw <4 x i32> %509, %502
  %512 = or i64 %500, 8
  %513 = getelementptr inbounds i32, i32* %487, i64 %512
  %514 = bitcast i32* %513 to <4 x i32>*
  %515 = load <4 x i32>, <4 x i32>* %514, align 4
  %516 = getelementptr inbounds i32, i32* %513, i64 4
  %517 = bitcast i32* %516 to <4 x i32>*
  %518 = load <4 x i32>, <4 x i32>* %517, align 4
  %519 = mul nsw <4 x i32> %515, %510
  %520 = mul nsw <4 x i32> %518, %511
  %521 = or i64 %500, 16
  %522 = getelementptr inbounds i32, i32* %487, i64 %521
  %523 = bitcast i32* %522 to <4 x i32>*
  %524 = load <4 x i32>, <4 x i32>* %523, align 4
  %525 = getelementptr inbounds i32, i32* %522, i64 4
  %526 = bitcast i32* %525 to <4 x i32>*
  %527 = load <4 x i32>, <4 x i32>* %526, align 4
  %528 = mul nsw <4 x i32> %524, %519
  %529 = mul nsw <4 x i32> %527, %520
  %530 = or i64 %500, 24
  %531 = getelementptr inbounds i32, i32* %487, i64 %530
  %532 = bitcast i32* %531 to <4 x i32>*
  %533 = load <4 x i32>, <4 x i32>* %532, align 4
  %534 = getelementptr inbounds i32, i32* %531, i64 4
  %535 = bitcast i32* %534 to <4 x i32>*
  %536 = load <4 x i32>, <4 x i32>* %535, align 4
  %537 = mul nsw <4 x i32> %533, %528
  %538 = mul nsw <4 x i32> %536, %529
  %539 = add i64 %500, 32
  %540 = add i64 %503, -4
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %542, label %499, !llvm.loop !349

542:                                              ; preds = %499, %490
  %543 = phi <4 x i32> [ undef, %490 ], [ %537, %499 ]
  %544 = phi <4 x i32> [ undef, %490 ], [ %538, %499 ]
  %545 = phi i64 [ 0, %490 ], [ %539, %499 ]
  %546 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %490 ], [ %537, %499 ]
  %547 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %490 ], [ %538, %499 ]
  %548 = icmp eq i64 %495, 0
  br i1 %548, label %565, label %549

549:                                              ; preds = %542, %549
  %550 = phi i64 [ %562, %549 ], [ %545, %542 ]
  %551 = phi <4 x i32> [ %560, %549 ], [ %546, %542 ]
  %552 = phi <4 x i32> [ %561, %549 ], [ %547, %542 ]
  %553 = phi i64 [ %563, %549 ], [ %495, %542 ]
  %554 = getelementptr inbounds i32, i32* %487, i64 %550
  %555 = bitcast i32* %554 to <4 x i32>*
  %556 = load <4 x i32>, <4 x i32>* %555, align 4
  %557 = getelementptr inbounds i32, i32* %554, i64 4
  %558 = bitcast i32* %557 to <4 x i32>*
  %559 = load <4 x i32>, <4 x i32>* %558, align 4
  %560 = mul nsw <4 x i32> %556, %551
  %561 = mul nsw <4 x i32> %559, %552
  %562 = add i64 %550, 8
  %563 = add i64 %553, -1
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %565, label %549, !llvm.loop !350

565:                                              ; preds = %549, %542
  %566 = phi <4 x i32> [ %543, %542 ], [ %560, %549 ]
  %567 = phi <4 x i32> [ %544, %542 ], [ %561, %549 ]
  %568 = mul <4 x i32> %567, %566
  %569 = shufflevector <4 x i32> %568, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %570 = mul <4 x i32> %568, %569
  %571 = shufflevector <4 x i32> %570, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %572 = mul <4 x i32> %570, %571
  %573 = extractelement <4 x i32> %572, i32 0
  %574 = icmp eq i64 %491, %488
  br i1 %574, label %586, label %575

575:                                              ; preds = %565, %486
  %576 = phi i64 [ 0, %486 ], [ %491, %565 ]
  %577 = phi i32 [ 1, %486 ], [ %573, %565 ]
  br label %578

578:                                              ; preds = %575, %578
  %579 = phi i64 [ %584, %578 ], [ %576, %575 ]
  %580 = phi i32 [ %583, %578 ], [ %577, %575 ]
  %581 = getelementptr inbounds i32, i32* %487, i64 %579
  %582 = load i32, i32* %581, align 4
  %583 = mul nsw i32 %582, %580
  %584 = add nuw nsw i64 %579, 1
  %585 = icmp eq i64 %584, %488
  br i1 %585, label %586, label %578, !llvm.loop !351

586:                                              ; preds = %578, %565, %483
  %587 = phi i32 [ 1, %483 ], [ %573, %565 ], [ %583, %578 ]
  %588 = icmp sgt i32 %366, 5
  %589 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %588, label %590, label %593

590:                                              ; preds = %586
  %591 = getelementptr inbounds %union.anon, %union.anon* %589, i64 0, i32 0
  %592 = load i32*, i32** %591, align 8
  br label %596

593:                                              ; preds = %586
  %594 = bitcast %union.anon* %589 to i32*
  %595 = icmp sgt i32 %366, 0
  br i1 %595, label %596, label %696

596:                                              ; preds = %593, %590
  %597 = phi i32* [ %592, %590 ], [ %594, %593 ]
  %598 = zext i32 %366 to i64
  %599 = icmp ult i32 %366, 8
  br i1 %599, label %685, label %600

600:                                              ; preds = %596
  %601 = and i64 %598, 4294967288
  %602 = add nsw i64 %601, -8
  %603 = lshr exact i64 %602, 3
  %604 = add nuw nsw i64 %603, 1
  %605 = and i64 %604, 3
  %606 = icmp ult i64 %602, 24
  br i1 %606, label %652, label %607

607:                                              ; preds = %600
  %608 = sub nsw i64 %604, %605
  br label %609

609:                                              ; preds = %609, %607
  %610 = phi i64 [ 0, %607 ], [ %649, %609 ]
  %611 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %607 ], [ %647, %609 ]
  %612 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %607 ], [ %648, %609 ]
  %613 = phi i64 [ %608, %607 ], [ %650, %609 ]
  %614 = getelementptr inbounds i32, i32* %597, i64 %610
  %615 = bitcast i32* %614 to <4 x i32>*
  %616 = load <4 x i32>, <4 x i32>* %615, align 4
  %617 = getelementptr inbounds i32, i32* %614, i64 4
  %618 = bitcast i32* %617 to <4 x i32>*
  %619 = load <4 x i32>, <4 x i32>* %618, align 4
  %620 = mul nsw <4 x i32> %616, %611
  %621 = mul nsw <4 x i32> %619, %612
  %622 = or i64 %610, 8
  %623 = getelementptr inbounds i32, i32* %597, i64 %622
  %624 = bitcast i32* %623 to <4 x i32>*
  %625 = load <4 x i32>, <4 x i32>* %624, align 4
  %626 = getelementptr inbounds i32, i32* %623, i64 4
  %627 = bitcast i32* %626 to <4 x i32>*
  %628 = load <4 x i32>, <4 x i32>* %627, align 4
  %629 = mul nsw <4 x i32> %625, %620
  %630 = mul nsw <4 x i32> %628, %621
  %631 = or i64 %610, 16
  %632 = getelementptr inbounds i32, i32* %597, i64 %631
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4
  %635 = getelementptr inbounds i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4
  %638 = mul nsw <4 x i32> %634, %629
  %639 = mul nsw <4 x i32> %637, %630
  %640 = or i64 %610, 24
  %641 = getelementptr inbounds i32, i32* %597, i64 %640
  %642 = bitcast i32* %641 to <4 x i32>*
  %643 = load <4 x i32>, <4 x i32>* %642, align 4
  %644 = getelementptr inbounds i32, i32* %641, i64 4
  %645 = bitcast i32* %644 to <4 x i32>*
  %646 = load <4 x i32>, <4 x i32>* %645, align 4
  %647 = mul nsw <4 x i32> %643, %638
  %648 = mul nsw <4 x i32> %646, %639
  %649 = add i64 %610, 32
  %650 = add i64 %613, -4
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %609, !llvm.loop !352

652:                                              ; preds = %609, %600
  %653 = phi <4 x i32> [ undef, %600 ], [ %647, %609 ]
  %654 = phi <4 x i32> [ undef, %600 ], [ %648, %609 ]
  %655 = phi i64 [ 0, %600 ], [ %649, %609 ]
  %656 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %600 ], [ %647, %609 ]
  %657 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %600 ], [ %648, %609 ]
  %658 = icmp eq i64 %605, 0
  br i1 %658, label %675, label %659

659:                                              ; preds = %652, %659
  %660 = phi i64 [ %672, %659 ], [ %655, %652 ]
  %661 = phi <4 x i32> [ %670, %659 ], [ %656, %652 ]
  %662 = phi <4 x i32> [ %671, %659 ], [ %657, %652 ]
  %663 = phi i64 [ %673, %659 ], [ %605, %652 ]
  %664 = getelementptr inbounds i32, i32* %597, i64 %660
  %665 = bitcast i32* %664 to <4 x i32>*
  %666 = load <4 x i32>, <4 x i32>* %665, align 4
  %667 = getelementptr inbounds i32, i32* %664, i64 4
  %668 = bitcast i32* %667 to <4 x i32>*
  %669 = load <4 x i32>, <4 x i32>* %668, align 4
  %670 = mul nsw <4 x i32> %666, %661
  %671 = mul nsw <4 x i32> %669, %662
  %672 = add i64 %660, 8
  %673 = add i64 %663, -1
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %675, label %659, !llvm.loop !353

675:                                              ; preds = %659, %652
  %676 = phi <4 x i32> [ %653, %652 ], [ %670, %659 ]
  %677 = phi <4 x i32> [ %654, %652 ], [ %671, %659 ]
  %678 = mul <4 x i32> %677, %676
  %679 = shufflevector <4 x i32> %678, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %680 = mul <4 x i32> %678, %679
  %681 = shufflevector <4 x i32> %680, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %682 = mul <4 x i32> %680, %681
  %683 = extractelement <4 x i32> %682, i32 0
  %684 = icmp eq i64 %601, %598
  br i1 %684, label %696, label %685

685:                                              ; preds = %675, %596
  %686 = phi i64 [ 0, %596 ], [ %601, %675 ]
  %687 = phi i32 [ 1, %596 ], [ %683, %675 ]
  br label %688

688:                                              ; preds = %685, %688
  %689 = phi i64 [ %694, %688 ], [ %686, %685 ]
  %690 = phi i32 [ %693, %688 ], [ %687, %685 ]
  %691 = getelementptr inbounds i32, i32* %597, i64 %689
  %692 = load i32, i32* %691, align 4
  %693 = mul nsw i32 %692, %690
  %694 = add nuw nsw i64 %689, 1
  %695 = icmp eq i64 %694, %598
  br i1 %695, label %696, label %688, !llvm.loop !354

696:                                              ; preds = %688, %675, %593
  %697 = phi i32 [ 1, %593 ], [ %683, %675 ], [ %693, %688 ]
  %698 = icmp eq i32 %477, %587
  br i1 %698, label %700, label %699

699:                                              ; preds = %696
  call void @abort() #13
  unreachable

700:                                              ; preds = %696
  %701 = icmp eq i32 %477, %697
  br i1 %701, label %703, label %702

702:                                              ; preds = %700
  call void @abort() #13
  unreachable

703:                                              ; preds = %700
  call void @_ZN6tflite13reference_ops14DivElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %477, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, i8* %298, i8* %332, i8* %367) #12
  br i1 %588, label %704, label %710

704:                                              ; preds = %703
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  %709 = bitcast i32* %706 to i8*
  call void @_ZdaPv(i8* %709) #11
  br label %710

710:                                              ; preds = %703, %704, %708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %333) #12
  br i1 %478, label %711, label %717

711:                                              ; preds = %710
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %713 = load i32*, i32** %712, align 8
  %714 = icmp eq i32* %713, null
  br i1 %714, label %717, label %715

715:                                              ; preds = %711
  %716 = bitcast i32* %713 to i8*
  call void @_ZdaPv(i8* %716) #11
  br label %717

717:                                              ; preds = %710, %711, %715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #12
  br i1 %368, label %718, label %724

718:                                              ; preds = %717
  %719 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = icmp eq i32* %720, null
  br i1 %721, label %724, label %722

722:                                              ; preds = %718
  %723 = bitcast i32* %720 to i8*
  call void @_ZdaPv(i8* %723) #11
  br label %724

724:                                              ; preds = %722, %718, %717, %262, %258, %254
  %725 = phi i8* [ %135, %254 ], [ %135, %258 ], [ %135, %262 ], [ %265, %717 ], [ %265, %718 ], [ %265, %722 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #12
  br label %729

726:                                              ; preds = %24, %20, %7
  %727 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %728 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %727, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %728(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.16, i64 0, i64 0)) #12
  br label %729

729:                                              ; preds = %724, %726
  %730 = phi i32 [ 0, %724 ], [ 1, %726 ]
  ret i32 %730
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!5 = distinct !{!5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!11 = distinct !{!11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !26, !22}
!26 = !{!"llvm.loop.unroll.runtime.disable"}
!27 = distinct !{!27, !22}
!28 = distinct !{!28, !24}
!29 = distinct !{!29, !26, !22}
!30 = distinct !{!30, !22}
!31 = distinct !{!31, !24}
!32 = distinct !{!32, !26, !22}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!35 = distinct !{!35, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!38 = distinct !{!38, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!41 = distinct !{!41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!44 = distinct !{!44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!47 = distinct !{!47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!50 = distinct !{!50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!51 = distinct !{!51, !22}
!52 = distinct !{!52, !24}
!53 = distinct !{!53, !26, !22}
!54 = distinct !{!54, !22}
!55 = distinct !{!55, !24}
!56 = distinct !{!56, !26, !22}
!57 = distinct !{!57, !22}
!58 = distinct !{!58, !24}
!59 = distinct !{!59, !26, !22}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = !{!66}
!66 = distinct !{!66, !62}
!67 = !{!61, !64}
!68 = distinct !{!68, !22}
!69 = distinct !{!69, !22}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!72 = distinct !{!72, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!75 = distinct !{!75, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!78 = distinct !{!78, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!81 = distinct !{!81, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!84 = distinct !{!84, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!87 = distinct !{!87, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!90 = distinct !{!90, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!93 = distinct !{!93, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!94 = distinct !{!94, !22}
!95 = distinct !{!95, !24}
!96 = distinct !{!96, !26, !22}
!97 = distinct !{!97, !22}
!98 = distinct !{!98, !24}
!99 = distinct !{!99, !26, !22}
!100 = distinct !{!100, !22}
!101 = distinct !{!101, !24}
!102 = distinct !{!102, !26, !22}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!105 = distinct !{!105, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!106 = distinct !{!106, !22}
!107 = distinct !{!107, !24}
!108 = distinct !{!108, !26, !22}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!111 = distinct !{!111, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!112 = distinct !{!112, !22}
!113 = distinct !{!113, !24}
!114 = distinct !{!114, !26, !22}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!117 = distinct !{!117, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!118 = distinct !{!118, !22}
!119 = distinct !{!119, !24}
!120 = distinct !{!120, !26, !22}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!123 = distinct !{!123, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!124 = distinct !{!124, !22}
!125 = distinct !{!125, !24}
!126 = distinct !{!126, !26, !22}
!127 = distinct !{!127, !24}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!130 = distinct !{!130, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!131 = distinct !{!131, !24}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!134 = distinct !{!134, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!135 = distinct !{!135, !24}
!136 = !{!137}
!137 = distinct !{!137, !138, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!138 = distinct !{!138, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!139 = distinct !{!139, !22}
!140 = distinct !{!140, !24}
!141 = distinct !{!141, !26, !22}
!142 = !{i32 0, i32 33}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!145 = distinct !{!145, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!148 = distinct !{!148, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!151 = distinct !{!151, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!154 = distinct !{!154, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!157 = distinct !{!157, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!160 = distinct !{!160, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!161 = distinct !{!161, !22}
!162 = distinct !{!162, !24}
!163 = distinct !{!163, !26, !22}
!164 = distinct !{!164, !22}
!165 = distinct !{!165, !24}
!166 = distinct !{!166, !26, !22}
!167 = distinct !{!167, !22}
!168 = distinct !{!168, !24}
!169 = distinct !{!169, !26, !22}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!172 = distinct !{!172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!175 = distinct !{!175, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!178 = distinct !{!178, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!181 = distinct !{!181, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!184 = distinct !{!184, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!187 = distinct !{!187, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!188 = distinct !{!188, !22}
!189 = distinct !{!189, !24}
!190 = distinct !{!190, !26, !22}
!191 = distinct !{!191, !22}
!192 = distinct !{!192, !24}
!193 = distinct !{!193, !26, !22}
!194 = distinct !{!194, !22}
!195 = distinct !{!195, !24}
!196 = distinct !{!196, !26, !22}
!197 = !{!198}
!198 = distinct !{!198, !199}
!199 = distinct !{!199, !"LVerDomain"}
!200 = !{!201}
!201 = distinct !{!201, !199}
!202 = !{!203}
!203 = distinct !{!203, !199}
!204 = !{!198, !201}
!205 = distinct !{!205, !22}
!206 = distinct !{!206, !22}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!209 = distinct !{!209, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!210 = !{!211}
!211 = distinct !{!211, !212, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!212 = distinct !{!212, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!215 = distinct !{!215, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!216 = !{!217}
!217 = distinct !{!217, !218, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!218 = distinct !{!218, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!221 = distinct !{!221, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!222 = !{!223}
!223 = distinct !{!223, !224, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!224 = distinct !{!224, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!227 = distinct !{!227, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!230 = distinct !{!230, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!231 = distinct !{!231, !22}
!232 = distinct !{!232, !24}
!233 = distinct !{!233, !26, !22}
!234 = distinct !{!234, !22}
!235 = distinct !{!235, !24}
!236 = distinct !{!236, !26, !22}
!237 = distinct !{!237, !22}
!238 = distinct !{!238, !24}
!239 = distinct !{!239, !26, !22}
!240 = !{!241}
!241 = distinct !{!241, !242, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!242 = distinct !{!242, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!243 = distinct !{!243, !22}
!244 = distinct !{!244, !24}
!245 = distinct !{!245, !26, !22}
!246 = !{!247}
!247 = distinct !{!247, !248, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!248 = distinct !{!248, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!249 = distinct !{!249, !22}
!250 = distinct !{!250, !24}
!251 = distinct !{!251, !26, !22}
!252 = !{!253}
!253 = distinct !{!253, !254, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!254 = distinct !{!254, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!255 = distinct !{!255, !22}
!256 = distinct !{!256, !24}
!257 = distinct !{!257, !26, !22}
!258 = !{!259}
!259 = distinct !{!259, !260, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!260 = distinct !{!260, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!263 = distinct !{!263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!266 = distinct !{!266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!269 = distinct !{!269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!272 = distinct !{!272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!273 = !{!274}
!274 = distinct !{!274, !275, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!275 = distinct !{!275, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!276 = distinct !{!276, !22}
!277 = distinct !{!277, !24}
!278 = distinct !{!278, !26, !22}
!279 = distinct !{!279, !22}
!280 = distinct !{!280, !24}
!281 = distinct !{!281, !26, !22}
!282 = distinct !{!282, !22}
!283 = distinct !{!283, !24}
!284 = distinct !{!284, !26, !22}
!285 = !{!286}
!286 = distinct !{!286, !287, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!287 = distinct !{!287, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!288 = !{!289}
!289 = distinct !{!289, !290, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!290 = distinct !{!290, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!291 = !{!292}
!292 = distinct !{!292, !293, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!293 = distinct !{!293, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!294 = !{!295}
!295 = distinct !{!295, !296, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!296 = distinct !{!296, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!299 = distinct !{!299, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!302 = distinct !{!302, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!303 = distinct !{!303, !22}
!304 = distinct !{!304, !24}
!305 = distinct !{!305, !26, !22}
!306 = distinct !{!306, !22}
!307 = distinct !{!307, !24}
!308 = distinct !{!308, !26, !22}
!309 = distinct !{!309, !22}
!310 = distinct !{!310, !24}
!311 = distinct !{!311, !26, !22}
!312 = !{!313}
!313 = distinct !{!313, !314}
!314 = distinct !{!314, !"LVerDomain"}
!315 = !{!316}
!316 = distinct !{!316, !314}
!317 = !{!318}
!318 = distinct !{!318, !314}
!319 = !{!313, !316}
!320 = distinct !{!320, !22}
!321 = distinct !{!321, !22}
!322 = !{!323}
!323 = distinct !{!323, !324, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!324 = distinct !{!324, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!325 = !{!326}
!326 = distinct !{!326, !327, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!327 = distinct !{!327, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!328 = !{!329}
!329 = distinct !{!329, !330, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!330 = distinct !{!330, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!331 = !{!332}
!332 = distinct !{!332, !333, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!333 = distinct !{!333, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!334 = !{!335}
!335 = distinct !{!335, !336, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!336 = distinct !{!336, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!337 = !{!338}
!338 = distinct !{!338, !339, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!339 = distinct !{!339, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!340 = !{!341}
!341 = distinct !{!341, !342, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!342 = distinct !{!342, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!343 = !{!344}
!344 = distinct !{!344, !345, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!345 = distinct !{!345, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!346 = distinct !{!346, !22}
!347 = distinct !{!347, !24}
!348 = distinct !{!348, !26, !22}
!349 = distinct !{!349, !22}
!350 = distinct !{!350, !24}
!351 = distinct !{!351, !26, !22}
!352 = distinct !{!352, !22}
!353 = distinct !{!353, !24}
!354 = distinct !{!354, !26, !22}
