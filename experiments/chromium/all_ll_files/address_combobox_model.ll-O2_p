; ModuleID = '../../components/autofill/core/browser/ui/address_combobox_model.cc'
source_filename = "../../components/autofill/core/browser/ui/address_combobox_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AddressComboboxModel" = type { %"class.ui::ComboboxModel", %"class.std::__1::vector", %"class.std::__1::vector.15", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::ObserverList" }
%"class.ui::ComboboxModel" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string.1" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.autofill::AutofillProfile"* }
%"class.autofill::AutofillProfile" = type { %"class.autofill::AutofillDataModel", %"class.autofill::NameInfo", %"class.autofill::EmailInfo", %"class.autofill::CompanyInfo", %"class.autofill::PhoneNumber", %"class.autofill::Address", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.base::Time", i32, i8, i8, %"class.std::__1::map", %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.autofill::AutofillDataModel" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::Time", %"class.base::Time" }
%"class.autofill::FormGroup" = type { i32 (...)** }
%"class.autofill::NameInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.autofill::structured_address::AddressComponent"* }
%"class.autofill::structured_address::AddressComponent" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.23", %"class.absl::optional.30", %"class.autofill::structured_address::AddressComponent"*, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.std::__1::basic_string.1" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.autofill::structured_address::AddressComponent"**, %"class.autofill::structured_address::AddressComponent"**, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.autofill::structured_address::AddressComponent"** }
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.autofill::structured_address::AddressToken"*, %"struct.autofill::structured_address::AddressToken"*, %"class.std::__1::__compressed_pair.37" }
%"struct.autofill::structured_address::AddressToken" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.autofill::structured_address::AddressToken"* }
%"class.autofill::EmailInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1" }
%"class.autofill::CompanyInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1", %"class.autofill::AutofillProfile"* }
%"class.autofill::PhoneNumber" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1", %"class.autofill::AutofillProfile"*, %"class.autofill::i18n::PhoneObject" }
%"class.autofill::i18n::PhoneObject" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.43", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.i18n::phonenumbers::PhoneNumber"* }
%"class.i18n::phonenumbers::PhoneNumber" = type opaque
%"class.autofill::Address" = type { %"class.autofill::FormGroup", %"class.std::__1::vector.49", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.autofill::structured_address::Address" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::basic_string.1"* }
%"class.autofill::structured_address::Address" = type { %"class.autofill::structured_address::AddressComponent.base", %"class.autofill::structured_address::StreetAddress", %"class.autofill::structured_address::PostalCode", %"class.autofill::structured_address::SortingCode", %"class.autofill::structured_address::DependentLocality", %"class.autofill::structured_address::City", %"class.autofill::structured_address::State", %"class.autofill::structured_address::CountryCode" }
%"class.autofill::structured_address::AddressComponent.base" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.23", %"class.absl::optional.30", %"class.autofill::structured_address::AddressComponent"*, i32 }>
%"class.autofill::structured_address::StreetAddress" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8], %"class.autofill::structured_address::StreetAndDependentStreetName", %"class.autofill::structured_address::HouseNumber", %"class.autofill::structured_address::Premise", %"class.autofill::structured_address::SubPremise", %"class.std::__1::vector.49" }
%"class.autofill::structured_address::AddressComponentWithRewriter.base" = type { %"class.autofill::structured_address::AddressComponent.base" }
%"class.autofill::structured_address::StreetAndDependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::StreetName", %"class.autofill::structured_address::DependentStreetName" }
%"class.autofill::structured_address::StreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::HouseNumber" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Premise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::SubPremise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::Floor", %"class.autofill::structured_address::Apartment" }
%"class.autofill::structured_address::Floor" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Apartment" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::PostalCode" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::SortingCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentLocality" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::City" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::State" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::CountryCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.65" }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i8 }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.78", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.81" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.80 }
%class.scoped_refptr.80 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.autofill::PersonalDataManager" = type { %class.KeyedService, %class.WebDataServiceConsumer, %"class.autofill::AutofillWebDataServiceObserverOnUISequence", %"class.history::HistoryServiceObserver", %"class.syncer::SyncServiceObserver", %"class.signin::IdentityManager::Observer", %"class.autofill::AccountInfoGetter", %"class.std::__1::unique_ptr.86", i8, %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::unique_ptr.92", %"class.std::__1::vector.98", %"class.std::__1::vector.98", %"class.std::__1::vector.106", %"class.std::__1::vector.113", %"class.std::__1::vector.121", i32, i32, i32, i32, i32, i32, i32, i32, %"class.base::ObserverList.129", %"class.std::__1::unique_ptr.140", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.PrefService*, %"class.history::HistoryService"*, %class.PrefChangeRegistrar, %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.228", %"class.std::__1::unordered_map", %"class.autofill::AutofillProfileValidator"*, %"class.signin::IdentityManager"*, %"class.syncer::SyncService"*, i8, i8, i8, i8, %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", i8, %"class.base::ScopedObservation.484", %"class.base::WeakPtrFactory.485" }
%class.KeyedService = type { i32 (...)** }
%class.WebDataServiceConsumer = type { i32 (...)** }
%"class.autofill::AutofillWebDataServiceObserverOnUISequence" = type { i32 (...)** }
%"class.history::HistoryServiceObserver" = type { i32 (...)** }
%"class.syncer::SyncServiceObserver" = type { i32 (...)** }
%"class.signin::IdentityManager::Observer" = type { i32 (...)** }
%"class.autofill::AccountInfoGetter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.autofill::PersonalDatabaseHelper"* }
%"class.autofill::PersonalDatabaseHelper" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.autofill::PaymentsCustomerData"* }
%"struct.autofill::PaymentsCustomerData" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::unique_ptr.100" = type opaque
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::unique_ptr.100"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::unique_ptr.115" = type opaque
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::unique_ptr.115"* }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"class.std::__1::unique_ptr.123"*, %"class.std::__1::unique_ptr.123"*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::unique_ptr.123" = type opaque
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::unique_ptr.123"* }
%"class.base::ObserverList.129" = type <{ %"class.std::__1::vector.130", %"class.base::LinkedList.137", i64, i32, [4 x i8] }>
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.132" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.137" = type { %"class.base::LinkNode.138" }
%"class.base::LinkNode.138" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.autofill::AlternativeStateNameMapUpdater"* }
%"class.autofill::AlternativeStateNameMapUpdater" = type { %"class.autofill::PersonalDataManagerObserver", %class.scoped_refptr.143, %"class.autofill::PersonalDataManager"*, %class.PrefService*, %"class.std::__1::vector.145", i32, i8, %"class.std::__1::set", %"class.base::WeakPtrFactory.163" }
%"class.autofill::PersonalDataManagerObserver" = type { i32 (...)** }
%class.scoped_refptr.143 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144" }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.149" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.147 }
%class.scoped_refptr.147 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.148", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.148" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.base::OnceCallback"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.base::WeakPtrFactory.163" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.PrefService = type opaque
%"class.history::HistoryService" = type { %class.KeyedService, %class.scoped_refptr.143, %class.scoped_refptr.167, %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", i8, [7 x i8], %"class.base::ObserverList.186", %"class.base::RepeatingCallbackList", %"class.std::__1::unique_ptr.195", %"class.base::OnceCallback", %"class.base::WeakPtrFactory.201" }
%class.scoped_refptr.167 = type { %"class.history::HistoryBackend"* }
%"class.history::HistoryBackend" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.history::InMemoryHistoryBackend"* }
%"class.history::InMemoryHistoryBackend" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.history::HistoryClient"* }
%"class.history::HistoryClient" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.history::VisitDelegate"* }
%"class.history::VisitDelegate" = type opaque
%"class.base::ObserverList.186" = type <{ %"class.std::__1::vector.130", %"class.base::LinkedList.187", i64, i32, [4 x i8] }>
%"class.base::LinkedList.187" = type { %"class.base::LinkNode.188" }
%"class.base::LinkNode.188" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.194" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.190" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.194" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.history::DeleteDirectiveHandler"* }
%"class.history::DeleteDirectiveHandler" = type opaque
%"class.base::WeakPtrFactory.201" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.202", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.202" = type { %"class.std::__1::__tree.203" }
%"class.std::__1::__tree.203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.autofill::UserProfileValidityMap"* }
%"class.autofill::UserProfileValidityMap" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::MapFieldLite", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::MapFieldLite" = type { %"class.google::protobuf::Map" }
%"class.google::protobuf::Map" = type { %"class.google::protobuf::Map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, autofill::ProfileValidityMap>::InnerMap" }
%"class.google::protobuf::Map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, autofill::ProfileValidityMap>::InnerMap" = type { i64, i64, i64, i64, i8**, %"class.google::protobuf::internal::MapAllocator" }
%"class.google::protobuf::internal::MapAllocator" = type { %"class.google::protobuf::Arena"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.216", %"struct.std::__1::atomic.216", %"struct.std::__1::atomic.220", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.autofill::PersonalDataManagerCleaner"* }
%"class.autofill::PersonalDataManagerCleaner" = type { i8, [7 x i8], %"class.autofill::TestDataCreator", %"class.autofill::PersonalDataManager"*, %class.PrefService*, %"class.autofill::AlternativeStateNameMapUpdater"*, %"class.base::WeakPtrFactory.231" }
%"class.autofill::TestDataCreator" = type <{ %"class.base::TimeDelta", %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory.231" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.235", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { float }
%"class.autofill::AutofillProfileValidator" = type { %"class.autofill::LoadRulesListener", %"class.autofill::AddressValidator", %"class.std::__1::map.336" }
%"class.autofill::LoadRulesListener" = type { i32 (...)** }
%"class.autofill::AddressValidator" = type { i32 (...)**, %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.319", %"class.autofill::LoadRulesListener"*, %"class.std::__1::map.326", %"class.base::WeakPtrFactory.335" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.i18n::addressinput::PreloadSupplier"* }
%"class.i18n::addressinput::PreloadSupplier" = type { %"class.i18n::addressinput::Supplier", %"class.std::__1::unique_ptr.256", %"class.std::__1::set.262", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.270", %"class.std::__1::vector.276", %"class.std::__1::map.283" }
%"class.i18n::addressinput::Supplier" = type { i32 (...)** }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.i18n::addressinput::Retriever"* }
%"class.i18n::addressinput::Retriever" = type opaque
%"class.std::__1::set.262" = type { %"class.std::__1::__tree.263" }
%"class.std::__1::__tree.263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.i18n::addressinput::IndexMap"* }
%"class.i18n::addressinput::IndexMap" = type opaque
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"class.i18n::addressinput::Rule"**, %"class.i18n::addressinput::Rule"**, %"class.std::__1::__compressed_pair.278" }
%"class.i18n::addressinput::Rule" = type opaque
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.i18n::addressinput::Rule"** }
%"class.std::__1::map.283" = type { %"class.std::__1::__tree.284" }
%"class.std::__1::__tree.284" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.autofill::InputSuggester"* }
%"class.autofill::InputSuggester" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.i18n::addressinput::AddressNormalizer"* }
%"class.i18n::addressinput::AddressNormalizer" = type opaque
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.i18n::addressinput::AddressValidator"* }
%"class.i18n::addressinput::AddressValidator" = type { %"class.i18n::addressinput::Supplier"* }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.i18n::addressinput::Callback"* }
%"class.i18n::addressinput::Callback" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.i18n::addressinput::Callback.322"* }
%"class.i18n::addressinput::Callback.322" = type opaque
%"class.std::__1::map.326" = type { %"class.std::__1::__tree.327" }
%"class.std::__1::__tree.327" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.base::WeakPtrFactory.335" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.336" = type { %"class.std::__1::__tree.337" }
%"class.std::__1::__tree.337" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.338", %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.signin::IdentityManager" = type <{ %class.KeyedService, %"class.OAuth2AccessTokenManager::DiagnosticsObserver", %"class.PrimaryAccountManager::Observer", %class.ProfileOAuth2TokenServiceObserver, %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.418", %"class.signin::IdentityMutator", %"class.std::__1::unique_ptr.448", %"class.base::ScopedObservation", %"class.base::ScopedObservation.454", %"class.base::ObserverList.455", %"class.base::ObserverList.459", i8, [7 x i8] }>
%"class.OAuth2AccessTokenManager::DiagnosticsObserver" = type { i32 (...)** }
%"class.PrimaryAccountManager::Observer" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.345" }
%"class.base::WeakPtrFactory.345" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.ProfileOAuth2TokenServiceObserver = type { i32 (...)** }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %class.AccountTrackerService* }
%class.AccountTrackerService = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %class.ProfileOAuth2TokenService* }
%class.ProfileOAuth2TokenService = type <{ %"class.OAuth2AccessTokenManager::Delegate", %class.ProfileOAuth2TokenServiceObserver, %class.PrefService*, %"class.std::__1::unique_ptr.355", i8, [7 x i8], %"class.std::__1::unique_ptr.361", %"class.base::RepeatingCallback.391", %"class.base::RepeatingCallback.392", i32, [4 x i8] }>
%"class.OAuth2AccessTokenManager::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %class.ProfileOAuth2TokenServiceDelegate* }
%class.ProfileOAuth2TokenServiceDelegate = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %class.OAuth2AccessTokenManager* }
%class.OAuth2AccessTokenManager = type { i32 (...)**, %"class.std::__1::map.364", %"class.base::ObserverList.375", %"class.OAuth2AccessTokenManager::Delegate"*, %"class.std::__1::map.379" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.base::ObserverList.375" = type <{ %"class.std::__1::vector.130", %"class.base::LinkedList.376", i64, i32, [4 x i8] }>
%"class.base::LinkedList.376" = type { %"class.base::LinkNode.377" }
%"class.base::LinkNode.377" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::map.379" = type { %"class.std::__1::__tree.380" }
%"class.std::__1::__tree.380" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.381", %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.base::RepeatingCallback.391" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.392" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %class.GaiaCookieManagerService* }
%class.GaiaCookieManagerService = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %class.PrimaryAccountManager* }
%class.PrimaryAccountManager = type { %class.ProfileOAuth2TokenServiceObserver, %class.SigninClient*, %class.ProfileOAuth2TokenService*, %class.AccountTrackerService*, i8, [7 x i8], %struct.CoreAccountInfo, %"class.std::__1::unique_ptr.405", %"class.base::ObserverList.411" }
%class.SigninClient = type { %class.KeyedService }
%struct.CoreAccountInfo = type <{ %struct.CoreAccountId, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%struct.CoreAccountId = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %class.PrimaryAccountPolicyManager* }
%class.PrimaryAccountPolicyManager = type opaque
%"class.base::ObserverList.411" = type <{ %"class.std::__1::vector.78", %"class.base::LinkedList.412", i64, i32, [4 x i8] }>
%"class.base::LinkedList.412" = type { %"class.base::LinkNode.413" }
%"class.base::LinkNode.413" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %class.AccountFetcherService* }
%class.AccountFetcherService = type opaque
%"class.signin::IdentityMutator" = type { i32 (...)**, %"class.std::__1::unique_ptr.424", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.442" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.signin::PrimaryAccountMutator"* }
%"class.signin::PrimaryAccountMutator" = type opaque
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.signin::AccountsMutator"* }
%"class.signin::AccountsMutator" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.signin::AccountsCookieMutator"* }
%"class.signin::AccountsCookieMutator" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.signin::DeviceAccountsSynchronizer"* }
%"class.signin::DeviceAccountsSynchronizer" = type opaque
%"class.std::__1::unique_ptr.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.signin::DiagnosticsProvider"* }
%"class.signin::DiagnosticsProvider" = type opaque
%"class.base::ScopedObservation" = type { %"class.PrimaryAccountManager::Observer"*, %class.PrimaryAccountManager* }
%"class.base::ScopedObservation.454" = type { %class.ProfileOAuth2TokenServiceObserver*, %class.ProfileOAuth2TokenService* }
%"class.base::ObserverList.455" = type <{ %"class.std::__1::vector.130", %"class.base::LinkedList.456", i64, i32, [4 x i8] }>
%"class.base::LinkedList.456" = type { %"class.base::LinkNode.457" }
%"class.base::LinkNode.457" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.459" = type <{ %"class.std::__1::vector.130", %"class.base::LinkedList.460", i64, i32, [4 x i8] }>
%"class.base::LinkedList.460" = type { %"class.base::LinkNode.461" }
%"class.base::LinkNode.461" = type { %"class.base::internal::LinkNodeBase" }
%"class.syncer::SyncService" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %class.PrefMember* }
%class.PrefMember = type { %"class.subtle::PrefMemberBase.base", %class.scoped_refptr.467 }
%"class.subtle::PrefMemberBase.base" = type <{ %class.PrefObserver, %"class.std::__1::basic_string", %"class.base::RepeatingCallback.466", %class.PrefService*, i8 }>
%"class.base::RepeatingCallback.466" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.467 = type { %"class.PrefMember<bool>::Internal"* }
%"class.PrefMember<bool>::Internal" = type { %"class.subtle::PrefMemberBase::Internal.base", i8, [4 x i8] }
%"class.subtle::PrefMemberBase::Internal.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.468", [4 x i8], %class.scoped_refptr.143, i8, i8, i8 }>
%"class.base::RefCountedThreadSafe.468" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.autofill::AutofillProfileSaveStrikeDatabase"* }
%"class.autofill::AutofillProfileSaveStrikeDatabase" = type { %"class.autofill::StrikeDatabaseIntegratorBase" }
%"class.autofill::StrikeDatabaseIntegratorBase" = type { i32 (...)**, %"class.autofill::StrikeDatabaseBase"* }
%"class.autofill::StrikeDatabaseBase" = type { %class.KeyedService }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.autofill::AutofillProfileUpdateStrikeDatabase"* }
%"class.autofill::AutofillProfileUpdateStrikeDatabase" = type { %"class.autofill::StrikeDatabaseIntegratorBase" }
%"class.base::ScopedObservation.484" = type { %"class.history::HistoryServiceObserver"*, %"class.history::HistoryService"* }
%"class.base::WeakPtrFactory.485" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.486" = type { %"class.std::__1::__vector_base.487" }
%"class.std::__1::__vector_base.487" = type { %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"**, %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.autofill::AutofillProfile"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.ui::ComboboxModelObserver" = type { %"class.base::CheckedObserver" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_ = comdat any

$_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8autofill15AutofillProfileENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_IDsNS3_IDsEENS5_IDsEEEEEENS5_ISB_EEE24__emplace_back_slow_pathIJS7_RSA_EEEvDpOT_ = comdat any

$_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_ = comdat any

@_ZTVN8autofill20AddressComboboxModelE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AddressComboboxModel"*)* @_ZN8autofill20AddressComboboxModelD2Ev to i8*), i8* bitcast (void (%"class.autofill::AddressComboboxModel"*)* @_ZN8autofill20AddressComboboxModelD0Ev to i8*), i8* bitcast (i32 (%"class.autofill::AddressComboboxModel"*)* @_ZNK8autofill20AddressComboboxModel12GetItemCountEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.1"*, %"class.autofill::AddressComboboxModel"*, i32)* @_ZNK8autofill20AddressComboboxModel9GetItemAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string.1"*, %"class.ui::ComboboxModel"*, i32)* @_ZNK2ui13ComboboxModel17GetDropDownTextAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string.1"*, %"class.ui::ComboboxModel"*, i32)* @_ZNK2ui13ComboboxModel26GetDropDownSecondaryTextAtEi to i8*), i8* bitcast (void ()* @_ZNK2ui13ComboboxModel9GetIconAtEi to i8*), i8* bitcast (void ()* @_ZNK2ui13ComboboxModel17GetDropDownIconAtEi to i8*), i8* bitcast (i1 (%"class.autofill::AddressComboboxModel"*, i32)* @_ZNK8autofill20AddressComboboxModel17IsItemSeparatorAtEi to i8*), i8* bitcast (i32 (%"class.autofill::AddressComboboxModel"*)* @_ZNK8autofill20AddressComboboxModel15GetDefaultIndexEv to i8*), i8* bitcast (i1 (%"class.ui::ComboboxModel"*, i32)* @_ZNK2ui13ComboboxModel15IsItemEnabledAtEi to i8*), i8* bitcast (void (%"class.autofill::AddressComboboxModel"*, %"class.ui::ComboboxModelObserver"*)* @_ZN8autofill20AddressComboboxModel11AddObserverEPN2ui21ComboboxModelObserverE to i8*), i8* bitcast (void (%"class.autofill::AddressComboboxModel"*, %"class.ui::ComboboxModelObserver"*)* @_ZN8autofill20AddressComboboxModel14RemoveObserverEPN2ui21ComboboxModelObserverE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1

@_ZN8autofill20AddressComboboxModelC1ERKNS_19PersonalDataManagerERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_ = hidden unnamed_addr alias void (%"class.autofill::AddressComboboxModel"*, %"class.autofill::PersonalDataManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"class.autofill::AddressComboboxModel"*, %"class.autofill::PersonalDataManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN8autofill20AddressComboboxModelC2ERKNS_19PersonalDataManagerERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_
@_ZN8autofill20AddressComboboxModelD1Ev = hidden unnamed_addr alias void (%"class.autofill::AddressComboboxModel"*), void (%"class.autofill::AddressComboboxModel"*)* @_ZN8autofill20AddressComboboxModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20AddressComboboxModelC2ERKNS_19PersonalDataManagerERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_(%"class.autofill::AddressComboboxModel"*, %"class.autofill::PersonalDataManager"* dereferenceable(648), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.486", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8autofill20AddressComboboxModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false)
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #13
  br label %24

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %21, i64 %23) #13
  br label %24

24:                                               ; preds = %16, %19
  %25 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 4
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #13
  br label %38

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %35, i64 %37) #13
  br label %38

38:                                               ; preds = %30, %33
  %39 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5
  %40 = bitcast %"class.base::ObserverList"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #13
  %41 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %41, %"class.base::internal::LinkNodeBase"* %41, %"class.base::internal::LinkNodeBase"* %41) #13
  %42 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 2
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %43, align 8
  %44 = bitcast %"class.std::__1::vector.486"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  call void @_ZNK8autofill19PersonalDataManager20GetProfilesToSuggestEv(%"class.std::__1::vector.486"* nonnull sret %5, %"class.autofill::PersonalDataManager"* %1) #13
  %45 = getelementptr inbounds %"class.std::__1::vector.486", %"class.std::__1::vector.486"* %5, i64 0, i32 0, i32 0
  %46 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.486", %"class.std::__1::vector.486"* %5, i64 0, i32 0, i32 1
  %48 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %47, align 8
  %49 = icmp eq %"class.autofill::AutofillProfile"** %46, %48
  br i1 %49, label %59, label %50

50:                                               ; preds = %38
  %51 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  %54 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2, i32 0, i32 1
  %55 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr"** %54 to i64*
  br label %67

57:                                               ; preds = %89
  %58 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %45, align 8
  br label %59

59:                                               ; preds = %57, %38
  %60 = phi %"class.autofill::AutofillProfile"** [ %58, %57 ], [ %46, %38 ]
  %61 = icmp eq %"class.autofill::AutofillProfile"** %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = ptrtoint %"class.autofill::AutofillProfile"** %60 to i64
  %64 = bitcast %"class.autofill::AutofillProfile"*** %47 to i64*
  store i64 %63, i64* %64, align 8
  %65 = bitcast %"class.autofill::AutofillProfile"** %60 to i8*
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  call void @_ZN8autofill20AddressComboboxModel15UpdateAddressesEv(%"class.autofill::AddressComboboxModel"* %0)
  ret void

67:                                               ; preds = %50, %89
  %68 = phi %"class.autofill::AutofillProfile"** [ %46, %50 ], [ %90, %89 ]
  %69 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %68, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  %70 = call i8* @_Znwm(i64 2856) #14
  %71 = bitcast i8* %70 to %"class.autofill::AutofillProfile"*
  call void @_ZN8autofill15AutofillProfileC1ERKS0_(%"class.autofill::AutofillProfile"* nonnull %71, %"class.autofill::AutofillProfile"* dereferenceable(2856) %69) #13
  store i8* %70, i8** %53, align 8
  %72 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %54, align 8
  %73 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %55, align 8
  %74 = icmp ult %"class.std::__1::unique_ptr"* %72, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %67
  %76 = ptrtoint i8* %70 to i64
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %52, align 8
  %77 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 1
  %79 = ptrtoint %"class.std::__1::unique_ptr"* %78 to i64
  store i64 %79, i64* %56, align 8
  br label %81

80:                                               ; preds = %67
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8autofill15AutofillProfileENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.15"* %9, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #13
  br label %81

81:                                               ; preds = %75, %80
  %82 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %52, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %52, align 8
  %83 = icmp eq %"class.autofill::AutofillProfile"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.autofill::AutofillProfile"* %82 to void (%"class.autofill::AutofillProfile"*)***
  %86 = load void (%"class.autofill::AutofillProfile"*)**, void (%"class.autofill::AutofillProfile"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %86, i64 1
  %88 = load void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %87, align 8
  call void %88(%"class.autofill::AutofillProfile"* nonnull %82) #13
  br label %89

89:                                               ; preds = %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  %90 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %68, i64 1
  %91 = icmp eq %"class.autofill::AutofillProfile"** %90, %48
  br i1 %91, label %57, label %67
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK8autofill19PersonalDataManager20GetProfilesToSuggestEv(%"class.std::__1::vector.486"* sret, %"class.autofill::PersonalDataManager"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20AddressComboboxModel15UpdateAddressesEv(%"class.autofill::AddressComboboxModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.49", align 8
  %3 = alloca %"class.std::__1::vector.486", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair"* %11, %9
  br i1 %12, label %34, label %13

13:                                               ; preds = %1, %32
  %14 = phi %"struct.std::__1::pair"* [ %15, %32 ], [ %11, %1 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 -1
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 -1, i32 1
  %17 = bitcast %"class.std::__1::basic_string.1"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.1"* %16 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %21, %13
  %25 = bitcast %"struct.std::__1::pair"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %29, %24
  %33 = icmp eq %"struct.std::__1::pair"* %15, %9
  br i1 %33, label %34, label %13

34:                                               ; preds = %32, %1
  store %"struct.std::__1::pair"* %9, %"struct.std::__1::pair"** %10, align 8
  %35 = bitcast %"class.std::__1::vector.49"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %2, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #13
  %38 = bitcast %"class.std::__1::vector.486"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.std::__1::vector.486", %"class.std::__1::vector.486"* %3, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.486", %"class.std::__1::vector.486"* %3, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::vector.486", %"class.std::__1::vector.486"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #13
  %42 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %43, align 8
  %45 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2, i32 0, i32 1
  %46 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %45, align 8
  %47 = icmp eq %"class.std::__1::unique_ptr"* %44, %46
  br i1 %47, label %52, label %48

48:                                               ; preds = %34
  %49 = bitcast %"class.autofill::AutofillProfile"*** %40 to i64*
  %50 = bitcast %"class.std::__1::vector.486"* %3 to i64*
  %51 = bitcast %"class.autofill::AutofillProfile"*** %41 to i64*
  br label %66

52:                                               ; preds = %127, %34
  %53 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 3
  call void @_ZN8autofill15AutofillProfile27CreateDifferentiatingLabelsERKNSt3__16vectorIPS0_NS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEEPNS2_INS9_IDsNSA_IDsEENS4_IDsEEEENS4_ISI_EEEE(%"class.std::__1::vector.486"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %53, %"class.std::__1::vector.49"* nonnull %2) #13
  %54 = bitcast %"class.std::__1::unique_ptr"** %45 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector.15"* %42 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %55, %57
  br i1 %58, label %134, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %61 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %63 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %172

66:                                               ; preds = %132, %48
  %67 = phi i64 [ 0, %48 ], [ %128, %132 ]
  %68 = phi %"class.autofill::AutofillProfile"** [ null, %48 ], [ %133, %132 ]
  %69 = phi %"class.autofill::AutofillProfile"** [ null, %48 ], [ %129, %132 ]
  %70 = phi %"class.std::__1::unique_ptr"* [ %44, %48 ], [ %130, %132 ]
  %71 = bitcast %"class.std::__1::unique_ptr"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult %"class.autofill::AutofillProfile"** %69, %68
  %74 = ptrtoint %"class.autofill::AutofillProfile"** %68 to i64
  br i1 %73, label %75, label %79

75:                                               ; preds = %66
  %76 = bitcast %"class.autofill::AutofillProfile"** %69 to i64*
  store i64 %72, i64* %76, align 8
  %77 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %69, i64 1
  %78 = ptrtoint %"class.autofill::AutofillProfile"** %77 to i64
  store i64 %78, i64* %49, align 8
  br label %127

79:                                               ; preds = %66
  %80 = ptrtoint %"class.autofill::AutofillProfile"** %69 to i64
  %81 = load i64, i64* %50, align 8
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  %84 = add nsw i64 %83, 1
  %85 = icmp ugt i64 %84, 2305843009213693951
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  %87 = bitcast %"class.std::__1::vector.486"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %87) #15
  unreachable

88:                                               ; preds = %79
  %89 = sub i64 %74, %81
  %90 = ashr exact i64 %89, 3
  %91 = icmp ult i64 %90, 1152921504606846975
  br i1 %91, label %92, label %100

92:                                               ; preds = %88
  %93 = ashr exact i64 %89, 2
  %94 = icmp ult i64 %93, %84
  %95 = select i1 %94, i64 %84, i64 %93
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %92
  %98 = icmp ugt i64 %95, 2305843009213693951
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  tail call void @abort() #15
  unreachable

100:                                              ; preds = %97, %88
  %101 = phi i64 [ %95, %97 ], [ 2305843009213693951, %88 ]
  %102 = shl i64 %101, 3
  %103 = tail call i8* @_Znwm(i64 %102) #14
  %104 = bitcast i8* %103 to %"class.autofill::AutofillProfile"**
  br label %105

105:                                              ; preds = %100, %92
  %106 = phi i64 [ %101, %100 ], [ 0, %92 ]
  %107 = phi %"class.autofill::AutofillProfile"** [ %104, %100 ], [ null, %92 ]
  %108 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %107, i64 %83
  %109 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %107, i64 %106
  %110 = ptrtoint %"class.autofill::AutofillProfile"** %109 to i64
  %111 = bitcast %"class.autofill::AutofillProfile"** %108 to i64*
  store i64 %72, i64* %111, align 8
  %112 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %108, i64 1
  %113 = ptrtoint %"class.autofill::AutofillProfile"** %112 to i64
  %114 = sub i64 %67, %81
  %115 = ashr exact i64 %114, 3
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %108, i64 %116
  %118 = ptrtoint %"class.autofill::AutofillProfile"** %117 to i64
  %119 = icmp sgt i64 %114, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %105
  %121 = bitcast %"class.autofill::AutofillProfile"** %117 to i8*
  %122 = inttoptr i64 %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 %114, i1 false) #13
  br label %123

123:                                              ; preds = %120, %105
  store i64 %118, i64* %50, align 8
  store i64 %113, i64* %49, align 8
  store i64 %110, i64* %51, align 8
  %124 = icmp eq i64 %81, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %126) #14
  br label %127

127:                                              ; preds = %75, %123, %125
  %128 = phi i64 [ %78, %75 ], [ %113, %123 ], [ %113, %125 ]
  %129 = phi %"class.autofill::AutofillProfile"** [ %77, %75 ], [ %112, %123 ], [ %112, %125 ]
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 1
  %131 = icmp eq %"class.std::__1::unique_ptr"* %130, %46
  br i1 %131, label %52, label %132

132:                                              ; preds = %127
  %133 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %41, align 8
  br label %66

134:                                              ; preds = %391, %52
  %135 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5
  %136 = bitcast %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %136) #13
  %137 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %139 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %140 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 40, i1 false)
  %142 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %140, align 8, !noalias !2
  %143 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %144 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %143, align 8, !noalias !2
  %145 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %142, %144
  %146 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %146) #13
  br i1 %145, label %147, label %149

147:                                              ; preds = %134
  %148 = bitcast %"class.base::ObserverList"** %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #13, !alias.scope !2
  br label %163

149:                                              ; preds = %134
  store %"class.base::ObserverList"* %135, %"class.base::ObserverList"** %137, align 8, !alias.scope !2
  %150 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %146, %"class.base::internal::LinkNodeBase"* %150) #13
  store i64 0, i64* %138, align 8, !alias.scope !2
  %151 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 3
  %152 = load i32, i32* %151, align 8, !noalias !2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %161, label %154

154:                                              ; preds = %149
  %155 = bitcast %"class.base::internal::CheckedObserverAdapter"** %143 to i64*
  %156 = load i64, i64* %155, align 8, !noalias !2
  %157 = bitcast %"class.base::ObserverList"* %135 to i64*
  %158 = load i64, i64* %157, align 8, !noalias !2
  %159 = sub i64 %156, %158
  %160 = ashr exact i64 %159, 4
  br label %161

161:                                              ; preds = %154, %149
  %162 = phi i64 [ %160, %154 ], [ -1, %149 ]
  store i64 %162, i64* %139, align 8, !alias.scope !2
  call void @_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %5) #13
  br label %163

163:                                              ; preds = %147, %161
  %164 = bitcast %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %164) #13
  %165 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %166 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %167 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %168 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %169 = bitcast %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %168) #13
  %170 = bitcast %"class.base::ObserverList"** %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #13, !alias.scope !5
  %171 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 0
  br label %398

172:                                              ; preds = %59, %391
  %173 = phi i64 [ %57, %59 ], [ %394, %391 ]
  %174 = phi i64 [ 0, %59 ], [ %392, %391 ]
  %175 = inttoptr i64 %173 to %"class.std::__1::unique_ptr"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #13
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %175, i64 %174, i32 0, i32 0, i32 0
  %177 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %176, align 8
  %178 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %177, i64 0, i32 0, i32 1
  %179 = bitcast %"class.std::__1::basic_string"* %178 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = load i8, i8* %180, align 1, !noalias !8
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %172
  %184 = bitcast %"class.std::__1::basic_string"* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 %184, i64 24, i1 false) #13
  br label %190

185:                                              ; preds = %172
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8, !noalias !8
  %188 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %177, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %187, i64 %189) #13
  br label %190

190:                                              ; preds = %183, %185
  %191 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %36, align 8
  %192 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %191, i64 %174
  %193 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %194 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %61, align 8
  %195 = icmp ult %"struct.std::__1::pair"* %193, %194
  br i1 %195, label %196, label %385

196:                                              ; preds = %190
  %197 = bitcast %"struct.std::__1::pair"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* nonnull align 8 %60, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #13
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 0, i32 1
  %199 = bitcast %"class.std::__1::basic_string.1"* %192 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %199, i64 0, i32 1, i32 1
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %196
  %204 = bitcast %"class.std::__1::basic_string.1"* %198 to i8*
  %205 = bitcast %"class.std::__1::basic_string.1"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %205, i64 24, i1 false) #13
  br label %382

206:                                              ; preds = %196
  %207 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i16*, i16** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %191, i64 %174, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = icmp ult i64 %210, 11
  br i1 %211, label %212, label %217

212:                                              ; preds = %206
  %213 = bitcast %"class.std::__1::basic_string.1"* %198 to i16*
  %214 = trunc i64 %210 to i8
  %215 = bitcast %"class.std::__1::basic_string.1"* %198 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %215, i64 0, i32 1, i32 1
  store i8 %214, i8* %216, align 1
  br label %234

217:                                              ; preds = %206
  %218 = icmp ugt i64 %210, 9223372036854775791
  br i1 %218, label %219, label %221

219:                                              ; preds = %217
  %220 = bitcast %"class.std::__1::basic_string.1"* %198 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %220) #15
  unreachable

221:                                              ; preds = %217
  %222 = add nuw nsw i64 %210, 8
  %223 = and i64 %222, -8
  %224 = icmp slt i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %221
  call void @abort() #15
  unreachable

226:                                              ; preds = %221
  %227 = shl i64 %223, 1
  %228 = call i8* @_Znwm(i64 %227) #14
  %229 = bitcast i8* %228 to i16*
  %230 = bitcast %"class.std::__1::basic_string.1"* %198 to i8**
  store i8* %228, i8** %230, align 8
  %231 = or i64 %223, -9223372036854775808
  %232 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %210, i64* %233, align 8
  br label %234

234:                                              ; preds = %226, %212
  %235 = phi i16* [ %213, %212 ], [ %229, %226 ]
  %236 = add nuw nsw i64 %210, 1
  %237 = add i64 %210, 1
  %238 = icmp ult i64 %237, 16
  br i1 %238, label %329, label %239

239:                                              ; preds = %234
  %240 = getelementptr i16, i16* %235, i64 1
  %241 = getelementptr i16, i16* %240, i64 %210
  %242 = getelementptr i16, i16* %208, i64 1
  %243 = getelementptr i16, i16* %242, i64 %210
  %244 = icmp ult i16* %235, %243
  %245 = icmp ult i16* %208, %241
  %246 = and i1 %244, %245
  br i1 %246, label %329, label %247

247:                                              ; preds = %239
  %248 = and i64 %237, -16
  %249 = sub i64 %236, %248
  %250 = getelementptr i16, i16* %208, i64 %248
  %251 = getelementptr i16, i16* %235, i64 %248
  %252 = add i64 %248, -16
  %253 = lshr exact i64 %252, 4
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 3
  %256 = icmp ult i64 %252, 48
  br i1 %256, label %308, label %257

257:                                              ; preds = %247
  %258 = sub nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %305, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %306, %259 ]
  %262 = getelementptr i16, i16* %208, i64 %260
  %263 = getelementptr i16, i16* %235, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !11
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !11
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !14, !noalias !11
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !14, !noalias !11
  %272 = or i64 %260, 16
  %273 = getelementptr i16, i16* %208, i64 %272
  %274 = getelementptr i16, i16* %235, i64 %272
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !11
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !11
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !14, !noalias !11
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !14, !noalias !11
  %283 = or i64 %260, 32
  %284 = getelementptr i16, i16* %208, i64 %283
  %285 = getelementptr i16, i16* %235, i64 %283
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !11
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !11
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !14, !noalias !11
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !14, !noalias !11
  %294 = or i64 %260, 48
  %295 = getelementptr i16, i16* %208, i64 %294
  %296 = getelementptr i16, i16* %235, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !11
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !11
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !14, !noalias !11
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !14, !noalias !11
  %305 = add i64 %260, 64
  %306 = add i64 %261, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %259, !llvm.loop !16

308:                                              ; preds = %259, %247
  %309 = phi i64 [ 0, %247 ], [ %305, %259 ]
  %310 = icmp eq i64 %255, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %324, %311 ], [ %309, %308 ]
  %313 = phi i64 [ %325, %311 ], [ %255, %308 ]
  %314 = getelementptr i16, i16* %208, i64 %312
  %315 = getelementptr i16, i16* %235, i64 %312
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !11
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !11
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !14, !noalias !11
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !14, !noalias !11
  %324 = add i64 %312, 16
  %325 = add i64 %313, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %311, !llvm.loop !18

327:                                              ; preds = %311, %308
  %328 = icmp eq i64 %237, %248
  br i1 %328, label %382, label %329

329:                                              ; preds = %327, %239, %234
  %330 = phi i64 [ %236, %239 ], [ %236, %234 ], [ %249, %327 ]
  %331 = phi i16* [ %208, %239 ], [ %208, %234 ], [ %250, %327 ]
  %332 = phi i16* [ %235, %239 ], [ %235, %234 ], [ %251, %327 ]
  %333 = add i64 %330, -1
  %334 = and i64 %330, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %342, %336 ], [ %330, %329 ]
  %338 = phi i16* [ %344, %336 ], [ %331, %329 ]
  %339 = phi i16* [ %343, %336 ], [ %332, %329 ]
  %340 = phi i64 [ %345, %336 ], [ %334, %329 ]
  %341 = load i16, i16* %338, align 2
  store i16 %341, i16* %339, align 2
  %342 = add i64 %337, -1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = getelementptr inbounds i16, i16* %338, i64 1
  %345 = add i64 %340, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !20

347:                                              ; preds = %336, %329
  %348 = phi i64 [ %330, %329 ], [ %342, %336 ]
  %349 = phi i16* [ %331, %329 ], [ %344, %336 ]
  %350 = phi i16* [ %332, %329 ], [ %343, %336 ]
  %351 = icmp ult i64 %333, 7
  br i1 %351, label %382, label %352

352:                                              ; preds = %347, %352
  %353 = phi i64 [ %378, %352 ], [ %348, %347 ]
  %354 = phi i16* [ %380, %352 ], [ %349, %347 ]
  %355 = phi i16* [ %379, %352 ], [ %350, %347 ]
  %356 = load i16, i16* %354, align 2
  store i16 %356, i16* %355, align 2
  %357 = getelementptr inbounds i16, i16* %355, i64 1
  %358 = getelementptr inbounds i16, i16* %354, i64 1
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %355, i64 2
  %361 = getelementptr inbounds i16, i16* %354, i64 2
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %355, i64 3
  %364 = getelementptr inbounds i16, i16* %354, i64 3
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %355, i64 4
  %367 = getelementptr inbounds i16, i16* %354, i64 4
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %355, i64 5
  %370 = getelementptr inbounds i16, i16* %354, i64 5
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %355, i64 6
  %373 = getelementptr inbounds i16, i16* %354, i64 6
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %355, i64 7
  %376 = getelementptr inbounds i16, i16* %354, i64 7
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = add i64 %353, -8
  %379 = getelementptr inbounds i16, i16* %355, i64 8
  %380 = getelementptr inbounds i16, i16* %354, i64 8
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %382, label %352, !llvm.loop !21

382:                                              ; preds = %347, %352, %327, %203
  %383 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 1
  %384 = ptrtoint %"struct.std::__1::pair"* %383 to i64
  store i64 %384, i64* %62, align 8
  br label %386

385:                                              ; preds = %190
  call void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_IDsNS3_IDsEENS5_IDsEEEEEENS5_ISB_EEE24__emplace_back_slow_pathIJS7_RSA_EEEvDpOT_(%"class.std::__1::vector"* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string.1"* dereferenceable(24) %192) #13
  br label %386

386:                                              ; preds = %382, %385
  %387 = load i8, i8* %64, align 1
  %388 = icmp slt i8 %387, 0
  br i1 %388, label %389, label %391

389:                                              ; preds = %386
  %390 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %390) #14
  br label %391

391:                                              ; preds = %386, %389
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #13
  %392 = add nuw i64 %174, 1
  %393 = load i64, i64* %54, align 8
  %394 = load i64, i64* %56, align 8
  %395 = sub i64 %393, %394
  %396 = ashr exact i64 %395, 3
  %397 = icmp ult i64 %392, %396
  br i1 %397, label %172, label %134

398:                                              ; preds = %542, %163
  %399 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %137, align 8
  %400 = icmp eq %"class.base::ObserverList"* %399, null
  br i1 %400, label %416, label %401

401:                                              ; preds = %398
  %402 = load i64, i64* %138, align 8
  %403 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %399, i64 0, i32 0, i32 0, i32 1
  %404 = bitcast %"class.base::internal::CheckedObserverAdapter"** %403 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = bitcast %"class.base::ObserverList"* %399 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = sub i64 %405, %407
  %409 = ashr exact i64 %408, 4
  %410 = load i64, i64* %139, align 8
  %411 = icmp ult i64 %409, %410
  %412 = select i1 %411, i64 %409, i64 %410
  %413 = icmp eq i64 %402, %412
  br i1 %413, label %416, label %414

414:                                              ; preds = %401
  %415 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %165, align 8
  br label %432

416:                                              ; preds = %401, %398
  %417 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %165, align 8
  %418 = icmp eq %"class.base::ObserverList"* %417, null
  br i1 %418, label %467, label %419

419:                                              ; preds = %416
  %420 = load i64, i64* %166, align 8
  %421 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %417, i64 0, i32 0, i32 0, i32 1
  %422 = bitcast %"class.base::internal::CheckedObserverAdapter"** %421 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = bitcast %"class.base::ObserverList"* %417 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = sub i64 %423, %425
  %427 = ashr exact i64 %426, 4
  %428 = load i64, i64* %167, align 8
  %429 = icmp ult i64 %427, %428
  %430 = select i1 %429, i64 %427, i64 %428
  %431 = icmp eq i64 %420, %430
  br i1 %431, label %441, label %432

432:                                              ; preds = %419, %414
  %433 = phi %"class.base::ObserverList"* [ %415, %414 ], [ %417, %419 ]
  %434 = icmp eq %"class.base::ObserverList"* %399, %433
  %435 = load i64, i64* %138, align 8
  %436 = load i64, i64* %166, align 8
  %437 = icmp eq i64 %435, %436
  %438 = and i1 %434, %437
  br i1 %438, label %439, label %527

439:                                              ; preds = %432
  %440 = icmp eq %"class.base::ObserverList"* %399, null
  br i1 %440, label %467, label %441

441:                                              ; preds = %419, %439
  %442 = phi %"class.base::ObserverList"* [ %399, %439 ], [ %417, %419 ]
  %443 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %442, i64 0, i32 1
  %444 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %442, i64 0, i32 1, i32 0, i32 0, i32 1
  %445 = bitcast %"class.base::internal::LinkNodeBase"** %444 to %"class.base::LinkNode"**
  %446 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %445, align 8
  %447 = bitcast %"class.base::LinkedList"* %443 to %"class.base::LinkNode"**
  %448 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %447, align 8
  %449 = icmp eq %"class.base::LinkNode"* %446, %448
  br i1 %449, label %450, label %463

450:                                              ; preds = %441
  %451 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %442, i64 0, i32 0, i32 0, i32 0
  %452 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %451, align 8
  %453 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %442, i64 0, i32 0, i32 0, i32 1
  %454 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %453, align 8
  %455 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %452, %"class.base::internal::CheckedObserverAdapter"* %454) #13
  %456 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %453, align 8
  %457 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %455, %456
  br i1 %457, label %463, label %458

458:                                              ; preds = %450, %458
  %459 = phi %"class.base::internal::CheckedObserverAdapter"* [ %460, %458 ], [ %456, %450 ]
  %460 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %459, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %460) #13
  %461 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %460, %455
  br i1 %461, label %462, label %458

462:                                              ; preds = %458
  store %"class.base::internal::CheckedObserverAdapter"* %455, %"class.base::internal::CheckedObserverAdapter"** %453, align 8
  br label %463

463:                                              ; preds = %462, %450, %441
  %464 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %165, align 8
  %465 = icmp eq %"class.base::ObserverList"* %464, null
  br i1 %465, label %467, label %466

466:                                              ; preds = %463
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %165, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %168) #13
  br label %467

467:                                              ; preds = %416, %439, %463, %466
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %164) #13
  %468 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %137, align 8
  %469 = icmp eq %"class.base::ObserverList"* %468, null
  br i1 %469, label %495, label %470

470:                                              ; preds = %467
  %471 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %468, i64 0, i32 1
  %472 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %468, i64 0, i32 1, i32 0, i32 0, i32 1
  %473 = bitcast %"class.base::internal::LinkNodeBase"** %472 to %"class.base::LinkNode"**
  %474 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %473, align 8
  %475 = bitcast %"class.base::LinkedList"* %471 to %"class.base::LinkNode"**
  %476 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %475, align 8
  %477 = icmp eq %"class.base::LinkNode"* %474, %476
  br i1 %477, label %478, label %491

478:                                              ; preds = %470
  %479 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %468, i64 0, i32 0, i32 0, i32 0
  %480 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %479, align 8
  %481 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %468, i64 0, i32 0, i32 0, i32 1
  %482 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %481, align 8
  %483 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %480, %"class.base::internal::CheckedObserverAdapter"* %482) #13
  %484 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %481, align 8
  %485 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %483, %484
  br i1 %485, label %491, label %486

486:                                              ; preds = %478, %486
  %487 = phi %"class.base::internal::CheckedObserverAdapter"* [ %488, %486 ], [ %484, %478 ]
  %488 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %487, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %488) #13
  %489 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %488, %483
  br i1 %489, label %490, label %486

490:                                              ; preds = %486
  store %"class.base::internal::CheckedObserverAdapter"* %483, %"class.base::internal::CheckedObserverAdapter"** %481, align 8
  br label %491

491:                                              ; preds = %490, %478, %470
  %492 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %137, align 8
  %493 = icmp eq %"class.base::ObserverList"* %492, null
  br i1 %493, label %495, label %494

494:                                              ; preds = %491
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %137, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %146) #13
  br label %495

495:                                              ; preds = %467, %491, %494
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %136) #13
  %496 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %39, align 8
  %497 = icmp eq %"class.autofill::AutofillProfile"** %496, null
  br i1 %497, label %502, label %498

498:                                              ; preds = %495
  %499 = ptrtoint %"class.autofill::AutofillProfile"** %496 to i64
  %500 = bitcast %"class.autofill::AutofillProfile"*** %40 to i64*
  store i64 %499, i64* %500, align 8
  %501 = bitcast %"class.autofill::AutofillProfile"** %496 to i8*
  call void @_ZdlPv(i8* %501) #14
  br label %502

502:                                              ; preds = %495, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  %503 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %36, align 8
  %504 = icmp eq %"class.std::__1::basic_string.1"* %503, null
  br i1 %504, label %526, label %505

505:                                              ; preds = %502
  %506 = bitcast %"class.std::__1::basic_string.1"* %503 to i8*
  %507 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %37, align 8
  %508 = icmp eq %"class.std::__1::basic_string.1"* %507, %503
  br i1 %508, label %524, label %509

509:                                              ; preds = %505, %519
  %510 = phi %"class.std::__1::basic_string.1"* [ %511, %519 ], [ %507, %505 ]
  %511 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %510, i64 -1
  %512 = bitcast %"class.std::__1::basic_string.1"* %511 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %513 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %512, i64 0, i32 1, i32 1
  %514 = load i8, i8* %513, align 1
  %515 = icmp slt i8 %514, 0
  br i1 %515, label %516, label %519

516:                                              ; preds = %509
  %517 = bitcast %"class.std::__1::basic_string.1"* %511 to i8**
  %518 = load i8*, i8** %517, align 8
  call void @_ZdlPv(i8* %518) #14
  br label %519

519:                                              ; preds = %516, %509
  %520 = icmp eq %"class.std::__1::basic_string.1"* %511, %503
  br i1 %520, label %521, label %509

521:                                              ; preds = %519
  %522 = bitcast %"class.std::__1::vector.49"* %2 to i8**
  %523 = load i8*, i8** %522, align 8
  br label %524

524:                                              ; preds = %521, %505
  %525 = phi i8* [ %523, %521 ], [ %506, %505 ]
  store %"class.std::__1::basic_string.1"* %503, %"class.std::__1::basic_string.1"** %37, align 8
  call void @_ZdlPv(i8* %525) #14
  br label %526

526:                                              ; preds = %502, %524
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #13
  ret void

527:                                              ; preds = %432
  %528 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %399, i64 0, i32 0, i32 0, i32 0
  %529 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %528, align 8
  %530 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %529, i64 %435, i32 0, i32 0, i32 0
  %531 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %530) #13
  %532 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %529, i64 %435, i32 0, i32 0, i32 1
  %533 = bitcast i64* %532 to %"class.ui::ComboboxModelObserver"**
  %534 = load %"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModelObserver"** %533, align 8
  %535 = select i1 %531, %"class.ui::ComboboxModelObserver"* %534, %"class.ui::ComboboxModelObserver"* null
  %536 = bitcast %"class.ui::ComboboxModelObserver"* %535 to void (%"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModel"*)***
  %537 = load void (%"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModel"*)**, void (%"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModel"*)*** %536, align 8
  %538 = getelementptr inbounds void (%"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModel"*)*, void (%"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModel"*)** %537, i64 2
  %539 = load void (%"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModel"*)*, void (%"class.ui::ComboboxModelObserver"*, %"class.ui::ComboboxModel"*)** %538, align 8
  call void %539(%"class.ui::ComboboxModelObserver"* %535, %"class.ui::ComboboxModel"* %171) #13
  %540 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %137, align 8
  %541 = icmp eq %"class.base::ObserverList"* %540, null
  br i1 %541, label %542, label %543

542:                                              ; preds = %527, %543
  br label %398

543:                                              ; preds = %527
  %544 = load i64, i64* %138, align 8
  %545 = add i64 %544, 1
  store i64 %545, i64* %138, align 8
  call void @_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %5) #13
  br label %542
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20AddressComboboxModelD2Ev(%"class.autofill::AddressComboboxModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN8autofill20AddressComboboxModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to %"class.base::LinkNode"**
  %6 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 1, i32 0
  %7 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  %8 = icmp eq %"class.base::LinkNode"* %7, %6
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"class.base::LinkNode"* [ %19, %18 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %10, i64 1
  %12 = bitcast %"class.base::LinkNode"* %11 to %"class.base::ObserverList"**
  %13 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %12, align 8
  %14 = icmp eq %"class.base::ObserverList"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %12, align 8
  %16 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %16) #13
  %17 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  br label %18

18:                                               ; preds = %15, %9
  %19 = phi %"class.base::LinkNode"* [ %10, %9 ], [ %17, %15 ]
  %20 = icmp eq %"class.base::LinkNode"* %19, %6
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  %24 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.base::internal::CheckedObserverAdapter"* %23 to i8*
  %27 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %28 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %27, align 8
  %29 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %28, %23
  br i1 %29, label %37, label %30

30:                                               ; preds = %25, %30
  %31 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %30 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %31, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %32) #13
  %33 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %23
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.base::ObserverList"* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi i8* [ %36, %34 ], [ %26, %25 ]
  store %"class.base::internal::CheckedObserverAdapter"* %23, %"class.base::internal::CheckedObserverAdapter"** %27, align 8
  tail call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %21, %37
  %40 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 4
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %39, %45
  %49 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 3
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %48, %54
  %58 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2
  %59 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %59, align 8
  %61 = icmp eq %"class.std::__1::unique_ptr"* %60, null
  br i1 %61, label %85, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::unique_ptr"* %60 to i8*
  %64 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2, i32 0, i32 1
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %64, align 8
  %66 = icmp eq %"class.std::__1::unique_ptr"* %65, %60
  br i1 %66, label %83, label %67

67:                                               ; preds = %62, %78
  %68 = phi %"class.std::__1::unique_ptr"* [ %69, %78 ], [ %65, %62 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %70, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %70, align 8
  %72 = icmp eq %"class.autofill::AutofillProfile"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.autofill::AutofillProfile"* %71 to void (%"class.autofill::AutofillProfile"*)***
  %75 = load void (%"class.autofill::AutofillProfile"*)**, void (%"class.autofill::AutofillProfile"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %75, i64 1
  %77 = load void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %76, align 8
  tail call void %77(%"class.autofill::AutofillProfile"* nonnull %71) #13
  br label %78

78:                                               ; preds = %73, %67
  %79 = icmp eq %"class.std::__1::unique_ptr"* %69, %60
  br i1 %79, label %80, label %67

80:                                               ; preds = %78
  %81 = bitcast %"class.std::__1::vector.15"* %58 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %62
  %84 = phi i8* [ %82, %80 ], [ %63, %62 ]
  store %"class.std::__1::unique_ptr"* %60, %"class.std::__1::unique_ptr"** %64, align 8
  tail call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %57, %83
  %86 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 0, i32 0, i32 0
  %88 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %87, align 8
  %89 = icmp eq %"struct.std::__1::pair"* %88, null
  br i1 %89, label %121, label %90

90:                                               ; preds = %85
  %91 = bitcast %"struct.std::__1::pair"* %88 to i8*
  %92 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1, i32 0, i32 1
  %93 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %92, align 8
  %94 = icmp eq %"struct.std::__1::pair"* %93, %88
  br i1 %94, label %119, label %95

95:                                               ; preds = %90, %114
  %96 = phi %"struct.std::__1::pair"* [ %97, %114 ], [ %93, %90 ]
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 -1
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 -1, i32 1
  %99 = bitcast %"class.std::__1::basic_string.1"* %98 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = bitcast %"class.std::__1::basic_string.1"* %98 to i8**
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #14
  br label %106

106:                                              ; preds = %103, %95
  %107 = bitcast %"struct.std::__1::pair"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #14
  br label %114

114:                                              ; preds = %111, %106
  %115 = icmp eq %"struct.std::__1::pair"* %97, %88
  br i1 %115, label %116, label %95

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector"* %86 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %90
  %120 = phi i8* [ %118, %116 ], [ %91, %90 ]
  store %"struct.std::__1::pair"* %88, %"struct.std::__1::pair"** %92, align 8
  tail call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %85, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20AddressComboboxModelD0Ev(%"class.autofill::AddressComboboxModel"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8autofill20AddressComboboxModelD2Ev(%"class.autofill::AddressComboboxModel"* %0) #13
  %2 = bitcast %"class.autofill::AddressComboboxModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8autofill20AddressComboboxModel12GetItemCountEv(%"class.autofill::AddressComboboxModel"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = icmp eq i64 %8, 0
  %11 = trunc i64 %9 to i32
  %12 = add i32 %11, 2
  %13 = select i1 %10, i32 1, i32 %12
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill20AddressComboboxModel9GetItemAtEi(%"class.std::__1::basic_string.1"* noalias sret, %"class.autofill::AddressComboboxModel"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %1, i64 0, i32 1, i32 0, i32 1
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.1"* sret %0, i32 19230) #13
  br label %205

10:                                               ; preds = %3
  switch i32 %2, label %19 [
    i32 0, label %11
    i32 1, label %12
  ]

11:                                               ; preds = %10
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.1"* sret %0, i32 19229) #13
  br label %205

12:                                               ; preds = %10
  %13 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  store i8 3, i8* %14, align 1
  %15 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  store i16 45, i16* %15, align 8
  %16 = getelementptr inbounds i16, i16* %15, i64 1
  store i16 45, i16* %16, align 2
  %17 = getelementptr inbounds i16, i16* %15, i64 2
  store i16 45, i16* %17, align 4
  %18 = getelementptr inbounds i16, i16* %15, i64 3
  store i16 0, i16* %18, align 2
  br label %205

19:                                               ; preds = %10
  %20 = add nsw i32 %2, -2
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %21, i32 1
  %23 = bitcast %"class.std::__1::basic_string.1"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  %29 = bitcast %"class.std::__1::basic_string.1"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #13
  br label %205

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %21, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, 11
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %38 = trunc i64 %34 to i8
  %39 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  br label %58

41:                                               ; preds = %30
  %42 = icmp ugt i64 %34, 9223372036854775791
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %44) #15
  unreachable

45:                                               ; preds = %41
  %46 = add nuw nsw i64 %34, 8
  %47 = and i64 %46, -8
  %48 = icmp slt i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %45
  %51 = shl i64 %47, 1
  %52 = tail call i8* @_Znwm(i64 %51) #14
  %53 = bitcast i8* %52 to i16*
  %54 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %52, i8** %54, align 8
  %55 = or i64 %47, -9223372036854775808
  %56 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %57, align 8
  br label %58

58:                                               ; preds = %50, %36
  %59 = phi i16* [ %37, %36 ], [ %53, %50 ]
  %60 = add nuw nsw i64 %34, 1
  %61 = add i64 %34, 1
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %152, label %63

63:                                               ; preds = %58
  %64 = add i64 %34, 1
  %65 = getelementptr i16, i16* %59, i64 %64
  %66 = getelementptr i16, i16* %32, i64 %64
  %67 = icmp ult i16* %59, %66
  %68 = icmp ult i16* %32, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %63
  %71 = and i64 %61, -16
  %72 = sub i64 %60, %71
  %73 = getelementptr i16, i16* %32, i64 %71
  %74 = getelementptr i16, i16* %59, i64 %71
  %75 = add i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %32, i64 %83
  %86 = getelementptr i16, i16* %59, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !22
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !22
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !25, !noalias !22
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !25, !noalias !22
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %32, i64 %95
  %97 = getelementptr i16, i16* %59, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !22
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !22
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !25, !noalias !22
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !25, !noalias !22
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %32, i64 %106
  %108 = getelementptr i16, i16* %59, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !22
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !22
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !25, !noalias !22
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !25, !noalias !22
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %32, i64 %117
  %119 = getelementptr i16, i16* %59, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !22
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !22
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !25, !noalias !22
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !25, !noalias !22
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !27

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %32, i64 %135
  %138 = getelementptr i16, i16* %59, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !22
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !22
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !25, !noalias !22
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !25, !noalias !22
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !28

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %61, %71
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %63, %58
  %153 = phi i64 [ %60, %63 ], [ %60, %58 ], [ %72, %150 ]
  %154 = phi i16* [ %32, %63 ], [ %32, %58 ], [ %73, %150 ]
  %155 = phi i16* [ %59, %63 ], [ %59, %58 ], [ %74, %150 ]
  %156 = add i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !29

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !30

205:                                              ; preds = %170, %175, %150, %27, %12, %11, %9
  ret void
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.1"* sret, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8autofill20AddressComboboxModel17IsItemSeparatorAtEi(%"class.autofill::AddressComboboxModel"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 1
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8autofill20AddressComboboxModel15GetDefaultIndexEv(%"class.autofill::AddressComboboxModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %82, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"struct.std::__1::pair"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, %21
  %23 = inttoptr i64 %21 to %"struct.std::__1::pair"*
  br i1 %22, label %82, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %5 to i64
  %28 = select i1 %6, i64 %26, i64 %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %32 = select i1 %6, i8* %30, i8* %31
  %33 = icmp eq i64 %28, 0
  %34 = sub i64 %19, %21
  %35 = sdiv exact i64 %34, 48
  br label %36

36:                                               ; preds = %75, %24
  %37 = phi i64 [ 0, %24 ], [ %76, %75 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %37, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = icmp eq i64 %46, %28
  br i1 %47, label %48, label %75

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %52 = select i1 %42, i8* %50, i8* %51
  br i1 %42, label %59, label %53

53:                                               ; preds = %48
  br i1 %33, label %78, label %54

54:                                               ; preds = %53
  %55 = ptrtoint i8* %50 to i64
  %56 = trunc i64 %55 to i8
  %57 = load i8, i8* %32, align 1
  %58 = icmp eq i8 %57, %56
  br i1 %58, label %60, label %75

59:                                               ; preds = %48
  br i1 %33, label %78, label %72

60:                                               ; preds = %54, %67
  %61 = phi i64 [ %64, %67 ], [ %45, %54 ]
  %62 = phi i8* [ %65, %67 ], [ %51, %54 ]
  %63 = phi i8* [ %68, %67 ], [ %32, %54 ]
  %64 = add i64 %61, -1
  %65 = getelementptr inbounds i8, i8* %62, i64 1
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %63, i64 1
  %69 = load i8, i8* %65, align 1
  %70 = load i8, i8* %68, align 1
  %71 = icmp eq i8 %69, %70
  br i1 %71, label %60, label %75

72:                                               ; preds = %59
  %73 = tail call i32 @bcmp(i8* %52, i8* %32, i64 %28) #13
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %67, %54, %72, %36
  %76 = add nuw i64 %37, 1
  %77 = icmp ult i64 %76, %35
  br i1 %77, label %36, label %82

78:                                               ; preds = %53, %59, %72, %60
  %79 = trunc i64 %37 to i32
  %80 = add i32 %79, 2
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %85

82:                                               ; preds = %75, %15, %78, %12
  %83 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 0
  %84 = tail call i32 @_ZNK2ui13ComboboxModel15GetDefaultIndexEv(%"class.ui::ComboboxModel"* %83) #13
  br label %85

85:                                               ; preds = %78, %82
  %86 = phi i32 [ %84, %82 ], [ %80, %78 ]
  ret i32 %86
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8autofill20AddressComboboxModel20GetIndexOfIdentifierERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::AddressComboboxModel"* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  br i1 %9, label %72, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %23 = select i1 %15, i8* %21, i8* %22
  %24 = icmp eq i64 %19, 0
  %25 = sub i64 %6, %8
  %26 = sdiv exact i64 %25, 48
  br label %27

27:                                               ; preds = %11, %66
  %28 = phi i64 [ 0, %11 ], [ %67, %66 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 %28, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 %28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = icmp eq i64 %37, %19
  br i1 %38, label %39, label %66

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %43 = select i1 %33, i8* %41, i8* %42
  br i1 %33, label %50, label %44

44:                                               ; preds = %39
  br i1 %24, label %69, label %45

45:                                               ; preds = %44
  %46 = ptrtoint i8* %41 to i64
  %47 = trunc i64 %46 to i8
  %48 = load i8, i8* %23, align 1
  %49 = icmp eq i8 %48, %47
  br i1 %49, label %51, label %66

50:                                               ; preds = %39
  br i1 %24, label %69, label %63

51:                                               ; preds = %45, %58
  %52 = phi i64 [ %55, %58 ], [ %36, %45 ]
  %53 = phi i8* [ %56, %58 ], [ %42, %45 ]
  %54 = phi i8* [ %59, %58 ], [ %23, %45 ]
  %55 = add i64 %52, -1
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  %60 = load i8, i8* %56, align 1
  %61 = load i8, i8* %59, align 1
  %62 = icmp eq i8 %60, %61
  br i1 %62, label %51, label %66

63:                                               ; preds = %50
  %64 = tail call i32 @bcmp(i8* %43, i8* %23, i64 %19) #13
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %58, %45, %27, %63
  %67 = add nuw i64 %28, 1
  %68 = icmp ult i64 %67, %26
  br i1 %68, label %27, label %72

69:                                               ; preds = %44, %50, %63, %51
  %70 = trunc i64 %28 to i32
  %71 = add i32 %70, 2
  br label %72

72:                                               ; preds = %66, %2, %69
  %73 = phi i32 [ %71, %69 ], [ -1, %2 ], [ -1, %66 ]
  ret i32 %73
}

declare i32 @_ZNK2ui13ComboboxModel15GetDefaultIndexEv(%"class.ui::ComboboxModel"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20AddressComboboxModel11AddObserverEPN2ui21ComboboxModelObserverE(%"class.autofill::AddressComboboxModel"*, %"class.ui::ComboboxModelObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5
  tail call void @_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList"* %3, %"class.ui::ComboboxModelObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList"*, %"class.ui::ComboboxModelObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::CheckedObserverAdapter", align 8
  %4 = icmp eq %"class.ui::ComboboxModelObserver"* %1, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %7, %9
  %11 = getelementptr inbounds %"class.ui::ComboboxModelObserver", %"class.ui::ComboboxModelObserver"* %1, i64 0, i32 0
  br i1 %10, label %28, label %12

12:                                               ; preds = %5, %21
  %13 = phi %"class.base::internal::CheckedObserverAdapter"* [ %22, %21 ], [ %7, %5 ]
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #13
  %16 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.base::CheckedObserver"**
  %18 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %17, align 8
  %19 = select i1 %15, %"class.base::CheckedObserver"* %18, %"class.base::CheckedObserver"* null
  %20 = icmp eq %"class.base::CheckedObserver"* %19, %11
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 1
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %22, %9
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %21
  %25 = phi %"class.base::internal::CheckedObserverAdapter"* [ %9, %21 ], [ %13, %12 ]
  %26 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %27 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %25, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %24, %5, %2
  %29 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = bitcast %"class.base::internal::CheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.ui::ComboboxModelObserver", %"class.ui::ComboboxModelObserver"* %1, i64 0, i32 0
  call void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"* nonnull %3, %"class.base::CheckedObserver"* %33) #13
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %34, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = icmp ult %"class.base::internal::CheckedObserverAdapter"* %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %28
  call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %35, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #13
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %35, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::CheckedObserverAdapter"** %34 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.78"* %44, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #13
  br label %45

45:                                               ; preds = %39, %43
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  br label %46

46:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20AddressComboboxModel14RemoveObserverEPN2ui21ComboboxModelObserverE(%"class.autofill::AddressComboboxModel"*, %"class.ui::ComboboxModelObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 5
  tail call void @_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList"* %3, %"class.ui::ComboboxModelObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList"*, %"class.ui::ComboboxModelObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %6, %8
  %10 = getelementptr inbounds %"class.ui::ComboboxModelObserver", %"class.ui::ComboboxModelObserver"* %1, i64 0, i32 0
  br i1 %9, label %97, label %11

11:                                               ; preds = %2, %20
  %12 = phi %"class.base::internal::CheckedObserverAdapter"* [ %21, %20 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #13
  %15 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.base::CheckedObserver"**
  %17 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %16, align 8
  %18 = select i1 %14, %"class.base::CheckedObserver"* %17, %"class.base::CheckedObserver"* null
  %19 = icmp eq %"class.base::CheckedObserver"* %18, %10
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 1
  %22 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %21, %8
  br i1 %22, label %23, label %11

23:                                               ; preds = %11, %20
  %24 = phi %"class.base::internal::CheckedObserverAdapter"* [ %8, %20 ], [ %12, %11 ]
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %97, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %32) #13
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #13
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  br label %37

37:                                               ; preds = %27, %31, %34
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #13
  %40 = bitcast i64* %28 to %"class.base::CheckedObserver"**
  %41 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %40, align 8
  %42 = icmp eq %"class.base::CheckedObserver"* %41, null
  %43 = xor i1 %39, true
  %44 = or i1 %42, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %45, %37
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::LinkNodeBase"** %50 to %"class.base::LinkNode"**
  %52 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %54 = icmp eq %"class.base::LinkNode"* %52, %53
  br i1 %54, label %55, label %78

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 1
  %57 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %58 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %56, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %59 ], [ %24, %55 ]
  %61 = phi %"class.base::internal::CheckedObserverAdapter"* [ %63, %59 ], [ %56, %55 ]
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %60, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %61) #13
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %60, i64 1
  %65 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %63, %57
  br i1 %65, label %66, label %59

66:                                               ; preds = %59
  %67 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %64
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %55
  %70 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %24, %55 ]
  %71 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %66 ], [ %56, %55 ]
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi %"class.base::internal::CheckedObserverAdapter"* [ %74, %72 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %73, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %74) #13
  %75 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %74, %70
  br i1 %75, label %76, label %72

76:                                               ; preds = %72, %66
  %77 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %70, %72 ]
  store %"class.base::internal::CheckedObserverAdapter"* %77, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  br label %97

78:                                               ; preds = %49
  %79 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #13
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %81, align 8
  %84 = bitcast %"class.base::internal::CheckedObserverAdapter"* %24 to i64*
  %85 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.base::internal::WeakReference::Flag"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %86) #13
  %93 = bitcast %"class.base::internal::WeakReference::Flag"* %86 to i8*
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %78, %88, %92
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %28, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #13
  br label %97

97:                                               ; preds = %2, %76, %94, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8autofill20AddressComboboxModel13AddNewProfileERKNS_15AutofillProfileE(%"class.autofill::AddressComboboxModel"*, %"class.autofill::AutofillProfile"* dereferenceable(2856)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = tail call i8* @_Znwm(i64 2856) #14
  %6 = bitcast i8* %5 to %"class.autofill::AutofillProfile"*
  tail call void @_ZN8autofill15AutofillProfileC1ERKS0_(%"class.autofill::AutofillProfile"* nonnull %6, %"class.autofill::AutofillProfile"* dereferenceable(2856) %1) #13
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = icmp ult %"class.std::__1::unique_ptr"* %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = ptrtoint i8* %5 to i64
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %7, align 8
  %16 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 1
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %17 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  store i64 %18, i64* %19, align 8
  br label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8autofill15AutofillProfileENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.15"* %21, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #13
  br label %22

22:                                               ; preds = %14, %20
  %23 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %7, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %7, align 8
  %24 = icmp eq %"class.autofill::AutofillProfile"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.autofill::AutofillProfile"* %23 to void (%"class.autofill::AutofillProfile"*)***
  %27 = load void (%"class.autofill::AutofillProfile"*)**, void (%"class.autofill::AutofillProfile"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %27, i64 1
  %29 = load void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %28, align 8
  call void %29(%"class.autofill::AutofillProfile"* nonnull %23) #13
  br label %30

30:                                               ; preds = %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  call void @_ZN8autofill20AddressComboboxModel15UpdateAddressesEv(%"class.autofill::AddressComboboxModel"* %0)
  %31 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %0, i64 0, i32 1, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector"* %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = sdiv exact i64 %37, 48
  %39 = trunc i64 %38 to i32
  %40 = add i32 %39, 1
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20AddressComboboxModel19GetItemIdentifierAtEi(%"class.std::__1::basic_string"* noalias sret, %"class.autofill::AddressComboboxModel"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 2
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  br label %25

7:                                                ; preds = %3
  %8 = add nsw i32 %2, -2
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.autofill::AddressComboboxModel", %"class.autofill::AddressComboboxModel"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %9, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #13
  br label %25

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %22, i64 %24) #13
  br label %25

25:                                               ; preds = %20, %17, %5
  ret void
}

declare void @_ZN8autofill15AutofillProfile27CreateDifferentiatingLabelsERKNSt3__16vectorIPS0_NS1_9allocatorIS3_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEEPNS2_INS9_IDsNSA_IDsEENS4_IDsEEEENS4_ISI_EEEE(%"class.std::__1::vector.486"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.49"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK2ui13ComboboxModel17GetDropDownTextAtEi(%"class.std::__1::basic_string.1"* sret, %"class.ui::ComboboxModel"*, i32) unnamed_addr #2

declare void @_ZNK2ui13ComboboxModel26GetDropDownSecondaryTextAtEi(%"class.std::__1::basic_string.1"* sret, %"class.ui::ComboboxModel"*, i32) unnamed_addr #2

declare void @_ZNK2ui13ComboboxModel9GetIconAtEi() unnamed_addr

declare void @_ZNK2ui13ComboboxModel17GetDropDownIconAtEi() unnamed_addr

declare zeroext i1 @_ZNK2ui13ComboboxModel15IsItemEnabledAtEi(%"class.ui::ComboboxModel"*, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN8autofill15AutofillProfileC1ERKS0_(%"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"* dereferenceable(2856)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8autofill15AutofillProfileENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.15"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.autofill::AutofillProfile"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !31

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %142, align 8
  store %"class.autofill::AutofillProfile"* null, %"class.autofill::AutofillProfile"** %142, align 8
  %144 = icmp eq %"class.autofill::AutofillProfile"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.autofill::AutofillProfile"* %143 to void (%"class.autofill::AutofillProfile"*)***
  %147 = load void (%"class.autofill::AutofillProfile"*)**, void (%"class.autofill::AutofillProfile"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %147, i64 1
  %149 = load void (%"class.autofill::AutofillProfile"*)*, void (%"class.autofill::AutofillProfile"*)** %148, align 8
  tail call void %149(%"class.autofill::AutofillProfile"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

declare void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.78"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.78", %"class.std::__1::vector.78"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.78"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.78"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.78", %"class.std::__1::vector.78"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::CheckedObserverAdapter"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedObserverAdapter"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %38 to i64
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %1) #13
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.78", %"class.std::__1::vector.78"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8
  %44 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  %45 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::CheckedObserverAdapter"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::CheckedObserverAdapter"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %50, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %51, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %52) #13
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::CheckedObserverAdapter"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::CheckedObserverAdapter"*
  %63 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %65, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %66) #13
  %67 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #7

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_IDsNS3_IDsEENS5_IDsEEEEEENS5_ISB_EEE24__emplace_back_slow_pathIJS7_RSA_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 384307168202282325
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 48
  %21 = icmp ult i64 %20, 192153584101141162
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 384307168202282325, %15 ]
  %29 = mul i64 %28, 48
  %30 = tail call i8* @_Znwm(i64 %29) #14
  %31 = bitcast i8* %30 to %"struct.std::__1::pair"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.std::__1::pair"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %33
  %37 = ptrtoint %"struct.std::__1::pair"* %36 to i64
  %38 = bitcast %"struct.std::__1::pair"* %35 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #13
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %10, i32 1
  %41 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %32
  %46 = bitcast %"class.std::__1::basic_string.1"* %40 to i8*
  %47 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #13
  br label %223

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, 11
  br i1 %53, label %54, label %59

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::basic_string.1"* %40 to i16*
  %56 = trunc i64 %52 to i8
  %57 = bitcast %"class.std::__1::basic_string.1"* %40 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  store i8 %56, i8* %58, align 1
  br label %76

59:                                               ; preds = %48
  %60 = icmp ugt i64 %52, 9223372036854775791
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::basic_string.1"* %40 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %62) #15
  unreachable

63:                                               ; preds = %59
  %64 = add nuw nsw i64 %52, 8
  %65 = and i64 %64, -8
  %66 = icmp slt i64 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  tail call void @abort() #15
  unreachable

68:                                               ; preds = %63
  %69 = shl i64 %65, 1
  %70 = tail call i8* @_Znwm(i64 %69) #14
  %71 = bitcast i8* %70 to i16*
  %72 = bitcast %"class.std::__1::basic_string.1"* %40 to i8**
  store i8* %70, i8** %72, align 8
  %73 = or i64 %65, -9223372036854775808
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %10, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %10, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %75, align 8
  br label %76

76:                                               ; preds = %68, %54
  %77 = phi i16* [ %55, %54 ], [ %71, %68 ]
  %78 = add nuw nsw i64 %52, 1
  %79 = add i64 %52, 1
  %80 = icmp ult i64 %79, 16
  br i1 %80, label %170, label %81

81:                                               ; preds = %76
  %82 = add i64 %52, 1
  %83 = getelementptr i16, i16* %77, i64 %82
  %84 = getelementptr i16, i16* %50, i64 %82
  %85 = icmp ult i16* %77, %84
  %86 = icmp ult i16* %50, %83
  %87 = and i1 %85, %86
  br i1 %87, label %170, label %88

88:                                               ; preds = %81
  %89 = and i64 %79, -16
  %90 = sub i64 %78, %89
  %91 = getelementptr i16, i16* %50, i64 %89
  %92 = getelementptr i16, i16* %77, i64 %89
  %93 = add i64 %89, -16
  %94 = lshr exact i64 %93, 4
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 3
  %97 = icmp ult i64 %93, 48
  br i1 %97, label %149, label %98

98:                                               ; preds = %88
  %99 = sub nsw i64 %95, %96
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %146, %100 ]
  %102 = phi i64 [ %99, %98 ], [ %147, %100 ]
  %103 = getelementptr i16, i16* %50, i64 %101
  %104 = getelementptr i16, i16* %77, i64 %101
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !32
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !32
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !35, !noalias !32
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !35, !noalias !32
  %113 = or i64 %101, 16
  %114 = getelementptr i16, i16* %50, i64 %113
  %115 = getelementptr i16, i16* %77, i64 %113
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !32
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !32
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !35, !noalias !32
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !35, !noalias !32
  %124 = or i64 %101, 32
  %125 = getelementptr i16, i16* %50, i64 %124
  %126 = getelementptr i16, i16* %77, i64 %124
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !32
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !32
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !35, !noalias !32
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !35, !noalias !32
  %135 = or i64 %101, 48
  %136 = getelementptr i16, i16* %50, i64 %135
  %137 = getelementptr i16, i16* %77, i64 %135
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !32
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !32
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !35, !noalias !32
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !35, !noalias !32
  %146 = add i64 %101, 64
  %147 = add i64 %102, -4
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %100, !llvm.loop !37

149:                                              ; preds = %100, %88
  %150 = phi i64 [ 0, %88 ], [ %146, %100 ]
  %151 = icmp eq i64 %96, 0
  br i1 %151, label %168, label %152

152:                                              ; preds = %149, %152
  %153 = phi i64 [ %165, %152 ], [ %150, %149 ]
  %154 = phi i64 [ %166, %152 ], [ %96, %149 ]
  %155 = getelementptr i16, i16* %50, i64 %153
  %156 = getelementptr i16, i16* %77, i64 %153
  %157 = bitcast i16* %155 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !32
  %159 = getelementptr i16, i16* %155, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !32
  %162 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %162, align 2, !alias.scope !35, !noalias !32
  %163 = getelementptr i16, i16* %156, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %164, align 2, !alias.scope !35, !noalias !32
  %165 = add i64 %153, 16
  %166 = add i64 %154, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %152, !llvm.loop !38

168:                                              ; preds = %152, %149
  %169 = icmp eq i64 %79, %89
  br i1 %169, label %223, label %170

170:                                              ; preds = %168, %81, %76
  %171 = phi i64 [ %78, %81 ], [ %78, %76 ], [ %90, %168 ]
  %172 = phi i16* [ %50, %81 ], [ %50, %76 ], [ %91, %168 ]
  %173 = phi i16* [ %77, %81 ], [ %77, %76 ], [ %92, %168 ]
  %174 = add i64 %171, -1
  %175 = and i64 %171, 7
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %170, %177
  %178 = phi i64 [ %183, %177 ], [ %171, %170 ]
  %179 = phi i16* [ %185, %177 ], [ %172, %170 ]
  %180 = phi i16* [ %184, %177 ], [ %173, %170 ]
  %181 = phi i64 [ %186, %177 ], [ %175, %170 ]
  %182 = load i16, i16* %179, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %178, -1
  %184 = getelementptr inbounds i16, i16* %180, i64 1
  %185 = getelementptr inbounds i16, i16* %179, i64 1
  %186 = add i64 %181, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !39

188:                                              ; preds = %177, %170
  %189 = phi i64 [ %171, %170 ], [ %183, %177 ]
  %190 = phi i16* [ %172, %170 ], [ %185, %177 ]
  %191 = phi i16* [ %173, %170 ], [ %184, %177 ]
  %192 = icmp ult i64 %174, 7
  br i1 %192, label %223, label %193

193:                                              ; preds = %188, %193
  %194 = phi i64 [ %219, %193 ], [ %189, %188 ]
  %195 = phi i16* [ %221, %193 ], [ %190, %188 ]
  %196 = phi i16* [ %220, %193 ], [ %191, %188 ]
  %197 = load i16, i16* %195, align 2
  store i16 %197, i16* %196, align 2
  %198 = getelementptr inbounds i16, i16* %196, i64 1
  %199 = getelementptr inbounds i16, i16* %195, i64 1
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %196, i64 2
  %202 = getelementptr inbounds i16, i16* %195, i64 2
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %196, i64 3
  %205 = getelementptr inbounds i16, i16* %195, i64 3
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = getelementptr inbounds i16, i16* %196, i64 4
  %208 = getelementptr inbounds i16, i16* %195, i64 4
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %196, i64 5
  %211 = getelementptr inbounds i16, i16* %195, i64 5
  %212 = load i16, i16* %211, align 2
  store i16 %212, i16* %210, align 2
  %213 = getelementptr inbounds i16, i16* %196, i64 6
  %214 = getelementptr inbounds i16, i16* %195, i64 6
  %215 = load i16, i16* %214, align 2
  store i16 %215, i16* %213, align 2
  %216 = getelementptr inbounds i16, i16* %196, i64 7
  %217 = getelementptr inbounds i16, i16* %195, i64 7
  %218 = load i16, i16* %217, align 2
  store i16 %218, i16* %216, align 2
  %219 = add i64 %194, -8
  %220 = getelementptr inbounds i16, i16* %196, i64 8
  %221 = getelementptr inbounds i16, i16* %195, i64 8
  %222 = icmp eq i64 %219, 0
  br i1 %222, label %223, label %193, !llvm.loop !40

223:                                              ; preds = %188, %193, %168, %45
  %224 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %225 = ptrtoint %"struct.std::__1::pair"* %224 to i64
  %226 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %227 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %226, align 8
  %228 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %229 = icmp eq %"struct.std::__1::pair"* %228, %227
  br i1 %229, label %230, label %232

230:                                              ; preds = %223
  %231 = ptrtoint %"struct.std::__1::pair"* %227 to i64
  br label %247

232:                                              ; preds = %223, %232
  %233 = phi %"struct.std::__1::pair"* [ %235, %232 ], [ %35, %223 ]
  %234 = phi %"struct.std::__1::pair"* [ %236, %232 ], [ %228, %223 ]
  %235 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 -1
  %236 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %234, i64 -1
  %237 = bitcast %"struct.std::__1::pair"* %235 to i8*
  %238 = bitcast %"struct.std::__1::pair"* %236 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %238, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 24, i1 false) #13
  %239 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 -1, i32 1
  %240 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %234, i64 -1, i32 1
  %241 = bitcast %"class.std::__1::basic_string.1"* %239 to i8*
  %242 = bitcast %"class.std::__1::basic_string.1"* %240 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 24, i1 false) #13
  %243 = icmp eq %"struct.std::__1::pair"* %236, %227
  br i1 %243, label %244, label %232

244:                                              ; preds = %232
  %245 = load i64, i64* %7, align 8
  %246 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %247

247:                                              ; preds = %230, %244
  %248 = phi %"struct.std::__1::pair"* [ %227, %230 ], [ %246, %244 ]
  %249 = phi %"struct.std::__1::pair"* [ %35, %230 ], [ %235, %244 ]
  %250 = phi i64 [ %231, %230 ], [ %245, %244 ]
  %251 = ptrtoint %"struct.std::__1::pair"* %249 to i64
  store i64 %251, i64* %7, align 8
  store i64 %225, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %252 = inttoptr i64 %250 to %"struct.std::__1::pair"*
  %253 = icmp eq %"struct.std::__1::pair"* %248, %252
  br i1 %253, label %275, label %254

254:                                              ; preds = %247, %273
  %255 = phi %"struct.std::__1::pair"* [ %256, %273 ], [ %248, %247 ]
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %255, i64 -1
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %255, i64 -1, i32 1
  %258 = bitcast %"class.std::__1::basic_string.1"* %257 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %258, i64 0, i32 1, i32 1
  %260 = load i8, i8* %259, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %262, label %265

262:                                              ; preds = %254
  %263 = bitcast %"class.std::__1::basic_string.1"* %257 to i8**
  %264 = load i8*, i8** %263, align 8
  tail call void @_ZdlPv(i8* %264) #14
  br label %265

265:                                              ; preds = %262, %254
  %266 = bitcast %"struct.std::__1::pair"* %256 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %266, i64 0, i32 1, i32 0
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %270, label %273

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  tail call void @_ZdlPv(i8* %272) #14
  br label %273

273:                                              ; preds = %270, %265
  %274 = icmp eq %"struct.std::__1::pair"* %256, %252
  br i1 %274, label %275, label %254

275:                                              ; preds = %273, %247
  %276 = icmp eq i64 %250, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %275
  %278 = inttoptr i64 %250 to i8*
  tail call void @_ZdlPv(i8* %278) #14
  br label %279

279:                                              ; preds = %275, %277
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::ComboboxModelObserver, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #13
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #13
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #13
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #13
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #13
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #13
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #13
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #13
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #13
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN2ui21ComboboxModelObserverELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK8autofill17AutofillDataModel4guidEv: argument 0"}
!10 = distinct !{!10, !"_ZNK8autofill17AutofillDataModel4guidEv"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
!21 = distinct !{!21, !17}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !17}
!28 = distinct !{!28, !19}
!29 = distinct !{!29, !19}
!30 = distinct !{!30, !17}
!31 = distinct !{!31, !19}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !17}
!38 = distinct !{!38, !19}
!39 = distinct !{!39, !19}
!40 = distinct !{!40, !17}
