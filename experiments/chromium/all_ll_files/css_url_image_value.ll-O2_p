; ModuleID = '../../third_party/blink/renderer/core/css/cssom/css_url_image_value.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/css_url_image_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.213", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.213" = type { %"class.base::RefCounted.214" }
%"class.base::RefCounted.214" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.215" }
%"class.blink::PersistentBase.215" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.216" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr.216" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.23", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.135", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i64 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.138", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.147" }
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.208" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSURLImageValue" = type { %"class.blink::CSSStyleImageValue", %"class.blink::Member" }
%"class.blink::CSSStyleImageValue" = type { %"class.blink::CSSResourceValue", %"class.blink::CanvasImageSource" }
%"class.blink::CSSResourceValue" = type { %"class.blink::CSSStyleValue" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSImageValue"* }
%"class.blink::CSSImageValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %"struct.blink::Referrer", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.3", i32, i8, [3 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.9", float, i8, %class.scoped_refptr.11, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type opaque
%class.scoped_refptr.11 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.17, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.200" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i32 }
%class.scoped_refptr.17 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.18" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::FloatSize" = type { float, float }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.221, %"class.blink::Member.222", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.221 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.224" }
%"class.blink::Persistent.224" = type { %"class.blink::PersistentBase.225" }
%"class.blink::PersistentBase.225" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.216" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.226" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::KURL"* }

$_ZN5blink18CSSStyleImageValueD2Ev = comdat any

$_ZN5blink16CSSURLImageValueD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink18CSSStyleImageValue18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink16CSSURLImageValue7GetTypeEv = comdat any

$_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE = comdat any

$_ZNK5blink18CSSStyleImageValue15IsCSSImageValueEv = comdat any

$_ZNK5blink18CSSStyleImageValue16WouldTaintOriginEv = comdat any

$_ZThn24_NK5blink18CSSStyleImageValue16WouldTaintOriginEv = comdat any

$_ZThn24_NK5blink18CSSStyleImageValue15IsCSSImageValueEv = comdat any

$_ZNK5blink17CanvasImageSource14IsImageElementEv = comdat any

$_ZNK5blink17CanvasImageSource14IsVideoElementEv = comdat any

$_ZNK5blink17CanvasImageSource15IsCanvasElementEv = comdat any

$_ZNK5blink17CanvasImageSource11IsSVGSourceEv = comdat any

$_ZNK5blink17CanvasImageSource13IsImageBitmapEv = comdat any

$_ZNK5blink17CanvasImageSource17IsOffscreenCanvasEv = comdat any

$_ZNK5blink17CanvasImageSource12IsVideoFrameEv = comdat any

$_ZNK5blink17CanvasImageSource10IsNeuteredEv = comdat any

$_ZNK5blink17CanvasImageSource22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE = comdat any

$_ZNK5blink17CanvasImageSource9SourceURLEv = comdat any

$_ZNK5blink17CanvasImageSource8IsOpaqueEv = comdat any

$_ZThn24_N5blink16CSSURLImageValueD1Ev = comdat any

$_ZThn24_N5blink16CSSURLImageValueD0Ev = comdat any

$_ZN5blink10TraceTraitINS_13CSSImageValueEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink16CSSURLImageValueE = hidden unnamed_addr constant { [22 x i8*], [20 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CSSStyleImageValue"*)* @_ZN5blink18CSSStyleImageValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSURLImageValue"*)* @_ZN5blink16CSSURLImageValueD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CSSURLImageValue"*, %"class.blink::Visitor"*)* @_ZNK5blink16CSSURLImageValue5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSStyleImageValue"*)* @_ZNK5blink18CSSStyleImageValue18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::CSSURLImageValue"*)* @_ZNK5blink16CSSURLImageValue7GetTypeEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSURLImageValue"*)* @_ZNK5blink16CSSURLImageValue10ToCSSValueEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSStyleValue"*)* @_ZNK5blink13CSSStyleValue8toStringEv to i8*), i8* bitcast (i8 (%"class.blink::CSSURLImageValue"*)* @_ZNK5blink16CSSURLImageValue6StatusEv to i8*), i8* bitcast (i1 (%"class.blink::CSSStyleImageValue"*)* @_ZNK5blink18CSSStyleImageValue15IsCSSImageValueEv to i8*), i8* bitcast (i1 (%"class.blink::CSSStyleImageValue"*)* @_ZNK5blink18CSSStyleImageValue16WouldTaintOriginEv to i8*), i8* bitcast (<2 x float> (%"class.blink::CSSStyleImageValue"*, %"class.blink::FloatSize"*, i32)* @_ZNK5blink18CSSStyleImageValue11ElementSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE to i8*), i8* bitcast ({ i64, i32 } (%"class.blink::CSSURLImageValue"*)* @_ZNK5blink16CSSURLImageValue13IntrinsicSizeEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::CSSURLImageValue"*, i32*, %"class.blink::FloatSize"*, i32)* @_ZN5blink16CSSURLImageValue23GetSourceImageForCanvasEPNS_17SourceImageStatusERKNS_9FloatSizeENS_16AlphaDispositionE to i8*), i8* bitcast (i1 (%"class.blink::CSSURLImageValue"*)* @_ZNK5blink16CSSURLImageValue13IsAcceleratedEv to i8*)], [20 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (%"class.blink::Image"* (%"class.blink::CSSURLImageValue"*, i32*, %"class.blink::FloatSize"*, i32)* @_ZThn24_N5blink16CSSURLImageValue23GetSourceImageForCanvasEPNS_17SourceImageStatusERKNS_9FloatSizeENS_16AlphaDispositionE to i8*), i8* bitcast (i1 (%"class.blink::CSSStyleImageValue"*)* @_ZThn24_NK5blink18CSSStyleImageValue16WouldTaintOriginEv to i8*), i8* bitcast (i1 (%"class.blink::CSSStyleImageValue"*)* @_ZThn24_NK5blink18CSSStyleImageValue15IsCSSImageValueEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource14IsImageElementEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource14IsVideoElementEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource15IsCanvasElementEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource11IsSVGSourceEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource13IsImageBitmapEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource17IsOffscreenCanvasEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource12IsVideoFrameEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource10IsNeuteredEv to i8*), i8* bitcast (<2 x float> (%"class.blink::CSSStyleImageValue"*, %"class.blink::FloatSize"*, i32)* @_ZThn24_NK5blink18CSSStyleImageValue11ElementSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (<2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)* @_ZNK5blink17CanvasImageSource22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource9SourceURLEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource8IsOpaqueEv to i8*), i8* bitcast (i1 (%"class.blink::CSSURLImageValue"*)* @_ZThn24_NK5blink16CSSURLImageValue13IsAcceleratedEv to i8*), i8* bitcast (void (%"class.blink::CSSURLImageValue"*)* @_ZThn24_N5blink16CSSURLImageValueD1Ev to i8*), i8* bitcast (void (%"class.blink::CSSURLImageValue"*)* @_ZThn24_N5blink16CSSURLImageValueD0Ev to i8*)] }, align 8
@_ZTVN5blink13CSSStyleValueE = external unnamed_addr constant { [15 x i8*] }, align 8
@_ZN5blink18CSSStyleImageValue18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16CSSURLImageValue3urlEv(%"class.blink::CSSURLImageValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %3, i64 0, i32 2, i32 0
  ret %"class.WTF::String"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK5blink16CSSURLImageValue13IntrinsicSizeEv(%"class.blink::CSSURLImageValue"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %3 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %4, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %5, align 8
  %7 = icmp eq %"class.blink::StyleImage"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::StyleImage"* %6 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %10 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %10, i64 15
  %12 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %11, align 8
  %13 = tail call %"class.blink::ImageResourceContent"* %12(%"class.blink::StyleImage"* nonnull %6) #5
  %14 = tail call zeroext i8 @_ZNK5blink20ImageResourceContent16GetContentStatusEv(%"class.blink::ImageResourceContent"* %13) #5
  %15 = icmp eq i8 %14, 2
  br i1 %15, label %18, label %16

16:                                               ; preds = %1, %8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 0, i8* %17, align 8
  br label %41

18:                                               ; preds = %8
  %19 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %19, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %20, align 8
  %22 = bitcast %"class.blink::StyleImage"* %21 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %23 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %23, i64 15
  %25 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %24, align 8
  %26 = tail call %"class.blink::ImageResourceContent"* %25(%"class.blink::StyleImage"* %21) #5
  %27 = icmp eq %"class.blink::ImageResourceContent"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = tail call i64 @_ZNK5blink20ImageResourceContent13IntrinsicSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"* nonnull %26, i32 1) #5
  %30 = and i64 %29, -4294967296
  %31 = and i64 %29, 4294967295
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi i64 [ %30, %28 ], [ 0, %18 ]
  %34 = phi i64 [ %31, %28 ], [ 0, %18 ]
  %35 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 0
  store i8 1, i8* %35, align 8
  %36 = or i64 %34, %33
  %37 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %2, i64 0, i32 1
  %38 = bitcast %union.anon* %37 to i64*
  store i64 %36, i64* %38, align 4
  %39 = lshr exact i64 %33, 32
  %40 = trunc i64 %39 to i32
  br label %41

41:                                               ; preds = %32, %16
  %42 = phi i32 [ %40, %32 ], [ undef, %16 ]
  %43 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %2 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = insertvalue { i64, i32 } undef, i64 %44, 0
  %46 = insertvalue { i64, i32 } %45, i32 %42, 1
  ret { i64, i32 } %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink16CSSURLImageValue6StatusEv(%"class.blink::CSSURLImageValue"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %4, align 8
  %6 = icmp eq %"class.blink::StyleImage"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::StyleImage"* %5 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %9 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %9, i64 15
  %11 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %10, align 8
  %12 = tail call %"class.blink::ImageResourceContent"* %11(%"class.blink::StyleImage"* nonnull %5) #5
  %13 = tail call zeroext i8 @_ZNK5blink20ImageResourceContent16GetContentStatusEv(%"class.blink::ImageResourceContent"* %12) #5
  br label %14

14:                                               ; preds = %1, %7
  %15 = phi i8 [ %13, %7 ], [ 0, %1 ]
  ret i8 %15
}

declare i64 @_ZNK5blink20ImageResourceContent13IntrinsicSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"*, i32) local_unnamed_addr #2

declare zeroext i8 @_ZNK5blink20ImageResourceContent16GetContentStatusEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZN5blink16CSSURLImageValue23GetSourceImageForCanvasEPNS_17SourceImageStatusERKNS_9FloatSizeENS_16AlphaDispositionE(%"class.blink::CSSURLImageValue"* nocapture readonly, i32* nocapture readnone, %"class.blink::FloatSize"* nocapture readnone dereferenceable(8), i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %6, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %7, align 8
  %9 = icmp eq %"class.blink::StyleImage"* %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::StyleImage"* %8 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %12 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %12, i64 15
  %14 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %13, align 8
  %15 = tail call %"class.blink::ImageResourceContent"* %14(%"class.blink::StyleImage"* nonnull %8) #5
  %16 = icmp eq %"class.blink::ImageResourceContent"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %10
  %18 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %15) #5
  %19 = bitcast %"class.blink::Image"* %18 to %"class.blink::Image"* (%"class.blink::Image"*)***
  %20 = load %"class.blink::Image"* (%"class.blink::Image"*)**, %"class.blink::Image"* (%"class.blink::Image"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %20, i64 29
  %22 = load %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %21, align 8
  %23 = tail call %"class.blink::Image"* %22(%"class.blink::Image"* %18) #5
  br label %24

24:                                               ; preds = %4, %10, %17
  %25 = phi %"class.blink::Image"* [ %23, %17 ], [ null, %4 ], [ null, %10 ]
  ret %"class.blink::Image"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZNK5blink16CSSURLImageValue8GetImageEv(%"class.blink::CSSURLImageValue"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %4, align 8
  %6 = icmp eq %"class.blink::StyleImage"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::StyleImage"* %5 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %9 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %9, i64 15
  %11 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %10, align 8
  %12 = tail call %"class.blink::ImageResourceContent"* %11(%"class.blink::StyleImage"* nonnull %5) #5
  %13 = icmp eq %"class.blink::ImageResourceContent"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %7
  %15 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %12) #5
  %16 = bitcast %"class.blink::Image"* %15 to %"class.blink::Image"* (%"class.blink::Image"*)***
  %17 = load %"class.blink::Image"* (%"class.blink::Image"*)**, %"class.blink::Image"* (%"class.blink::Image"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %17, i64 29
  %19 = load %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %18, align 8
  %20 = tail call %"class.blink::Image"* %19(%"class.blink::Image"* %15) #5
  br label %21

21:                                               ; preds = %7, %1, %14
  %22 = phi %"class.blink::Image"* [ %20, %14 ], [ null, %1 ], [ null, %7 ]
  ret %"class.blink::Image"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZThn24_N5blink16CSSURLImageValue23GetSourceImageForCanvasEPNS_17SourceImageStatusERKNS_9FloatSizeENS_16AlphaDispositionE(%"class.blink::CSSURLImageValue"* nocapture readonly, i32* nocapture readnone, %"class.blink::FloatSize"* nocapture readnone dereferenceable(8), i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 4
  %7 = bitcast %"class.WTF::String"* %6 to %"class.blink::CSSImageValue"**
  %8 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %8, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %9, align 8
  %11 = icmp eq %"class.blink::StyleImage"* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.blink::StyleImage"* %10 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %14 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %14, i64 15
  %16 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %15, align 8
  %17 = tail call %"class.blink::ImageResourceContent"* %16(%"class.blink::StyleImage"* nonnull %10) #5
  %18 = icmp eq %"class.blink::ImageResourceContent"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %17) #5
  %21 = bitcast %"class.blink::Image"* %20 to %"class.blink::Image"* (%"class.blink::Image"*)***
  %22 = load %"class.blink::Image"* (%"class.blink::Image"*)**, %"class.blink::Image"* (%"class.blink::Image"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %22, i64 29
  %24 = load %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %23, align 8
  %25 = tail call %"class.blink::Image"* %24(%"class.blink::Image"* %20) #5
  br label %26

26:                                               ; preds = %4, %12, %19
  %27 = phi %"class.blink::Image"* [ %25, %19 ], [ null, %4 ], [ null, %12 ]
  ret %"class.blink::Image"* %27
}

declare %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16CSSURLImageValue13IsAcceleratedEv(%"class.blink::CSSURLImageValue"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %4, align 8
  %6 = icmp eq %"class.blink::StyleImage"* %5, null
  br i1 %6, label %73, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::StyleImage"* %5 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %9 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %9, i64 15
  %11 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %10, align 8
  %12 = tail call %"class.blink::ImageResourceContent"* %11(%"class.blink::StyleImage"* nonnull %5) #5
  %13 = icmp eq %"class.blink::ImageResourceContent"* %12, null
  br i1 %13, label %73, label %14

14:                                               ; preds = %7
  %15 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %12) #5
  %16 = bitcast %"class.blink::Image"* %15 to %"class.blink::Image"* (%"class.blink::Image"*)***
  %17 = load %"class.blink::Image"* (%"class.blink::Image"*)**, %"class.blink::Image"* (%"class.blink::Image"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %17, i64 29
  %19 = load %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %18, align 8
  %20 = tail call %"class.blink::Image"* %19(%"class.blink::Image"* %15) #5
  %21 = icmp eq %"class.blink::Image"* %20, null
  br i1 %21, label %73, label %22

22:                                               ; preds = %14
  %23 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %2, align 8
  %24 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %24, align 8
  %26 = icmp eq %"class.blink::StyleImage"* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::StyleImage"* %25 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %29 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %29, i64 15
  %31 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %30, align 8
  %32 = tail call %"class.blink::ImageResourceContent"* %31(%"class.blink::StyleImage"* nonnull %25) #5
  %33 = icmp eq %"class.blink::ImageResourceContent"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %27
  %35 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %32) #5
  %36 = bitcast %"class.blink::Image"* %35 to %"class.blink::Image"* (%"class.blink::Image"*)***
  %37 = load %"class.blink::Image"* (%"class.blink::Image"*)**, %"class.blink::Image"* (%"class.blink::Image"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %37, i64 29
  %39 = load %"class.blink::Image"* (%"class.blink::Image"*)*, %"class.blink::Image"* (%"class.blink::Image"*)** %38, align 8
  %40 = tail call %"class.blink::Image"* %39(%"class.blink::Image"* %35) #5
  br label %41

41:                                               ; preds = %22, %27, %34
  %42 = phi %"class.blink::Image"* [ %40, %34 ], [ null, %22 ], [ null, %27 ]
  %43 = bitcast %"class.blink::Image"* %42 to i1 (%"class.blink::Image"*)***
  %44 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %44, i64 10
  %46 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::Image"* %42) #5
  %48 = icmp eq %"class.blink::Image"* %42, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %42, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i32* %51, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %50, i64 -2
  %56 = bitcast %"class.base::RefCountedThreadSafe"* %55 to %"class.blink::Image"*
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %55 to void (%"class.blink::Image"*)***
  %58 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %58, i64 1
  %60 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %59, align 8
  tail call void %60(%"class.blink::Image"* nonnull %56) #5
  br label %61

61:                                               ; preds = %41, %49, %54
  %62 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %20, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw sub i32* %63, i32 1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %73

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 -2
  %68 = bitcast %"class.base::RefCountedThreadSafe"* %67 to %"class.blink::Image"*
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %67 to void (%"class.blink::Image"*)***
  %70 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %70, i64 1
  %72 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %71, align 8
  tail call void %72(%"class.blink::Image"* nonnull %68) #5
  br label %73

73:                                               ; preds = %14, %7, %1, %61, %66
  %74 = phi i1 [ %47, %61 ], [ %47, %66 ], [ false, %14 ], [ false, %1 ], [ false, %7 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn24_NK5blink16CSSURLImageValue13IsAcceleratedEv(%"class.blink::CSSURLImageValue"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::CSSURLImageValue"*
  %4 = tail call zeroext i1 @_ZNK5blink16CSSURLImageValue13IsAcceleratedEv(%"class.blink::CSSURLImageValue"* %3)
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink16CSSURLImageValue10ToCSSValueEv(%"class.blink::CSSURLImageValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %3, i64 0, i32 0
  ret %"class.blink::CSSValue"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16CSSURLImageValue5TraceEPNS_7VisitorE(%"class.blink::CSSURLImageValue"*, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSImageValue"*
  %9 = getelementptr inbounds %"class.blink::CSSImageValue", %"class.blink::CSSImageValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSImageValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %15, %"class.blink::Visitor"* %1) #5
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18CSSStyleImageValueD2Ev(%"class.blink::CSSStyleImageValue"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSStyleImageValue", %"class.blink::CSSStyleImageValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSStyleImageValue", %"class.blink::CSSStyleImageValue"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #5
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSURLImageValueD0Ev(%"class.blink::CSSURLImageValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #5
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink18CSSStyleImageValue18GetWrapperTypeInfoEv(%"class.blink::CSSStyleImageValue"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink18CSSStyleImageValue18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink16CSSURLImageValue7GetTypeEv(%"class.blink::CSSURLImageValue"*) unnamed_addr #1 comdat align 2 {
  ret i32 12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE(%"class.blink::CSSStyleValue"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.blink::CSSStyleValue"* %0 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %4 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %4, i64 10
  %6 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %5, align 8
  %7 = tail call %"class.blink::CSSValue"* %6(%"class.blink::CSSStyleValue"* %0) #5
  ret %"class.blink::CSSValue"* %7
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleValue8toStringEv(%"class.blink::CSSStyleValue"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18CSSStyleImageValue15IsCSSImageValueEv(%"class.blink::CSSStyleImageValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18CSSStyleImageValue16WouldTaintOriginEv(%"class.blink::CSSStyleImageValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

declare <2 x float> @_ZNK5blink18CSSStyleImageValue11ElementSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::CSSStyleImageValue"*, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn24_NK5blink18CSSStyleImageValue16WouldTaintOriginEv(%"class.blink::CSSStyleImageValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn24_NK5blink18CSSStyleImageValue15IsCSSImageValueEv(%"class.blink::CSSStyleImageValue"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource14IsImageElementEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource14IsVideoElementEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource15IsCanvasElementEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource11IsSVGSourceEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource13IsImageBitmapEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource17IsOffscreenCanvasEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource12IsVideoFrameEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource10IsNeuteredEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare <2 x float> @_ZThn24_NK5blink18CSSStyleImageValue11ElementSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::CSSStyleImageValue"*, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #4 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden <2 x float> @_ZNK5blink17CanvasImageSource22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #4 comdat align 2 {
  %4 = bitcast %"class.blink::CanvasImageSource"* %0 to <2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)***
  %5 = load <2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)**, <2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)*** %4, align 8
  %6 = getelementptr inbounds <2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)** %5, i64 11
  %7 = load <2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::CanvasImageSource"*, %"class.blink::FloatSize"*, i32)** %6, align 8
  %8 = tail call <2 x float> %7(%"class.blink::CanvasImageSource"* %0, %"class.blink::FloatSize"* dereferenceable(8) %1, i32 %2) #5
  ret <2 x float> %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17CanvasImageSource9SourceURLEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() #5
  ret %"class.blink::KURL"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource8IsOpaqueEv(%"class.blink::CanvasImageSource"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn24_N5blink16CSSURLImageValueD1Ev(%"class.blink::CSSURLImageValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.WTF::String"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 2, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #5
  br label %20

20:                                               ; preds = %1, %16, %19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn24_N5blink16CSSURLImageValueD0Ev(%"class.blink::CSSURLImageValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSURLImageValue", %"class.blink::CSSURLImageValue"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.WTF::String"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 2, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #5
  br label %20

20:                                               ; preds = %1, %16, %19
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSImageValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
