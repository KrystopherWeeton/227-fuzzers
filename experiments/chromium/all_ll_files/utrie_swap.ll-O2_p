; ModuleID = '../../third_party/icu/source/common/utrie_swap.cpp'
source_filename = "../../third_party/icu/source/common/utrie_swap.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UDataSwapper = type { i8, i8, i8, i8, i16 (i16)*, i32 (i32)*, i32 (%struct.UDataSwapper*, i8*, i32, i16*, i32)*, void (i16*, i16)*, void (i32*, i32)*, {}*, {}*, {}*, {}*, void (i8*, i8*, %struct.__va_list_tag*)*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie_swap_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %100, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %100

10:                                               ; preds = %7
  %11 = icmp eq %struct.UDataSwapper* %0, null
  %12 = icmp eq i8* %1, null
  %13 = or i1 %11, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = icmp sgt i32 %2, -1
  %16 = icmp eq i8* %3, null
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %14, %10
  store i32 1, i32* %4, align 4
  br label %100

19:                                               ; preds = %14
  %20 = icmp ult i32 %2, 16
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 8, i32* %4, align 4
  br label %100

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %24 = load i32 (i32)*, i32 (i32)** %23, align 8
  %25 = bitcast i8* %1 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = tail call i32 %24(i32 %26) #3
  %28 = load i32 (i32)*, i32 (i32)** %23, align 8
  %29 = getelementptr inbounds i8, i8* %1, i64 4
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = tail call i32 %28(i32 %31) #3
  %33 = getelementptr inbounds i8, i8* %1, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* nonnull %0, i32 %35) #3
  %37 = getelementptr inbounds i8, i8* %1, i64 12
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* nonnull %0, i32 %39) #3
  %41 = icmp ne i32 %27, 1416784229
  %42 = and i32 %32, 255
  %43 = icmp ne i32 %42, 37
  %44 = or i1 %41, %43
  %45 = icmp slt i32 %36, 2048
  %46 = or i1 %44, %45
  %47 = and i32 %36, 31
  %48 = icmp ne i32 %47, 0
  %49 = or i1 %46, %48
  %50 = icmp slt i32 %40, 32
  %51 = or i1 %49, %50
  %52 = xor i1 %51, true
  %53 = and i32 %40, 3
  %54 = icmp eq i32 %53, 0
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %61

56:                                               ; preds = %22
  %57 = and i32 %32, 512
  %58 = icmp ne i32 %57, 0
  %59 = icmp slt i32 %40, 288
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %56, %22
  store i32 3, i32* %4, align 4
  br label %100

62:                                               ; preds = %56
  %63 = and i32 %32, 256
  %64 = icmp ne i32 %63, 0
  %65 = shl nsw i32 %36, 1
  %66 = add i32 %65, 16
  %67 = select i1 %64, i32 4, i32 2
  %68 = mul nsw i32 %40, %67
  %69 = add i32 %66, %68
  br i1 %15, label %70, label %100

70:                                               ; preds = %62
  %71 = icmp sgt i32 %69, %2
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  store i32 8, i32* %4, align 4
  br label %100

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %75 = bitcast {}** %74 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %76 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %75, align 8
  %77 = tail call i32 %76(%struct.UDataSwapper* nonnull %0, i8* nonnull %1, i32 16, i8* %3, i32* nonnull %4) #3
  %78 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %79 = bitcast {}** %78 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %80 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %79, align 8
  %81 = getelementptr inbounds i8, i8* %1, i64 16
  br i1 %64, label %82, label %95

82:                                               ; preds = %73
  %83 = getelementptr inbounds i8, i8* %3, i64 16
  %84 = tail call i32 %80(%struct.UDataSwapper* nonnull %0, i8* %81, i32 %65, i8* %83, i32* nonnull %4) #3
  %85 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %75, align 8
  %86 = bitcast i8* %81 to i16*
  %87 = sext i32 %36 to i64
  %88 = getelementptr inbounds i16, i16* %86, i64 %87
  %89 = bitcast i16* %88 to i8*
  %90 = shl nsw i32 %40, 2
  %91 = bitcast i8* %83 to i16*
  %92 = getelementptr inbounds i16, i16* %91, i64 %87
  %93 = bitcast i16* %92 to i8*
  %94 = tail call i32 %85(%struct.UDataSwapper* nonnull %0, i8* %89, i32 %90, i8* %93, i32* nonnull %4) #3
  br label %100

95:                                               ; preds = %73
  %96 = add nsw i32 %40, %36
  %97 = shl nsw i32 %96, 1
  %98 = getelementptr inbounds i8, i8* %3, i64 16
  %99 = tail call i32 %80(%struct.UDataSwapper* nonnull %0, i8* %81, i32 %97, i8* %98, i32* nonnull %4) #3
  br label %100

100:                                              ; preds = %62, %82, %95, %72, %5, %7, %61, %21, %18
  %101 = phi i32 [ 0, %18 ], [ 0, %21 ], [ 0, %61 ], [ 0, %7 ], [ 0, %5 ], [ 0, %72 ], [ %69, %95 ], [ %69, %82 ], [ %69, %62 ]
  ret i32 %101
}

declare i32 @udata_readInt32_69(%struct.UDataSwapper*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie2_swap_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %100

8:                                                ; preds = %5
  %9 = icmp eq %struct.UDataSwapper* %0, null
  %10 = icmp eq i8* %1, null
  %11 = or i1 %9, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = icmp sgt i32 %2, -1
  %14 = icmp eq i8* %3, null
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %8
  store i32 1, i32* %4, align 4
  br label %100

17:                                               ; preds = %12
  %18 = icmp ult i32 %2, 16
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  store i32 8, i32* %4, align 4
  br label %100

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %22 = load i32 (i32)*, i32 (i32)** %21, align 8
  %23 = bitcast i8* %1 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = tail call i32 %22(i32 %24) #3
  %26 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 4
  %27 = load i16 (i16)*, i16 (i16)** %26, align 8
  %28 = getelementptr inbounds i8, i8* %1, i64 4
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = tail call zeroext i16 %27(i16 zeroext %30) #3
  %32 = load i16 (i16)*, i16 (i16)** %26, align 8
  %33 = getelementptr inbounds i8, i8* %1, i64 6
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 2
  %36 = tail call zeroext i16 %32(i16 zeroext %35) #3
  %37 = load i16 (i16)*, i16 (i16)** %26, align 8
  %38 = getelementptr inbounds i8, i8* %1, i64 8
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 4
  %41 = tail call zeroext i16 %37(i16 zeroext %40) #3
  %42 = and i16 %31, 15
  %43 = zext i16 %42 to i32
  %44 = zext i16 %41 to i32
  %45 = shl nuw nsw i32 %44, 2
  %46 = icmp ne i32 %25, 1416784178
  %47 = icmp ugt i16 %42, 1
  %48 = or i1 %46, %47
  br i1 %48, label %54, label %49

49:                                               ; preds = %20
  %50 = zext i16 %36 to i32
  %51 = icmp ult i16 %36, 2112
  %52 = icmp ult i16 %41, 48
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %49, %20
  store i32 3, i32* %4, align 4
  br label %100

55:                                               ; preds = %49
  %56 = shl nuw nsw i32 %50, 1
  %57 = add nuw nsw i32 %56, 16
  switch i32 %43, label %59 [
    i32 0, label %60
    i32 1, label %58
  ]

58:                                               ; preds = %55
  br label %60

59:                                               ; preds = %55
  store i32 3, i32* %4, align 4
  br label %100

60:                                               ; preds = %55, %58
  %61 = phi i32 [ 4, %58 ], [ 3, %55 ]
  %62 = shl nuw nsw i32 %44, %61
  %63 = add nuw nsw i32 %57, %62
  br i1 %13, label %64, label %100

64:                                               ; preds = %60
  %65 = icmp sgt i32 %63, %2
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  store i32 8, i32* %4, align 4
  br label %100

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %69 = bitcast {}** %68 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %70 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %69, align 8
  %71 = tail call i32 %70(%struct.UDataSwapper* nonnull %0, i8* nonnull %1, i32 4, i8* %3, i32* %4) #3
  %72 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %73 = bitcast {}** %72 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %74 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %73, align 8
  %75 = getelementptr inbounds i8, i8* %3, i64 4
  %76 = tail call i32 %74(%struct.UDataSwapper* nonnull %0, i8* %28, i32 12, i8* %75, i32* %4) #3
  switch i32 %43, label %99 [
    i32 0, label %77
    i32 1, label %84
  ]

77:                                               ; preds = %67
  %78 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %73, align 8
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = add nuw nsw i32 %45, %50
  %81 = shl nuw nsw i32 %80, 1
  %82 = getelementptr inbounds i8, i8* %3, i64 16
  %83 = tail call i32 %78(%struct.UDataSwapper* nonnull %0, i8* %79, i32 %81, i8* %82, i32* %4) #3
  br label %100

84:                                               ; preds = %67
  %85 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %73, align 8
  %86 = getelementptr inbounds i8, i8* %1, i64 16
  %87 = getelementptr inbounds i8, i8* %3, i64 16
  %88 = tail call i32 %85(%struct.UDataSwapper* nonnull %0, i8* %86, i32 %56, i8* %87, i32* %4) #3
  %89 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %69, align 8
  %90 = bitcast i8* %86 to i16*
  %91 = zext i16 %36 to i64
  %92 = getelementptr inbounds i16, i16* %90, i64 %91
  %93 = bitcast i16* %92 to i8*
  %94 = shl nuw nsw i32 %44, 4
  %95 = bitcast i8* %87 to i16*
  %96 = getelementptr inbounds i16, i16* %95, i64 %91
  %97 = bitcast i16* %96 to i8*
  %98 = tail call i32 %89(%struct.UDataSwapper* nonnull %0, i8* %93, i32 %94, i8* %97, i32* %4) #3
  br label %100

99:                                               ; preds = %67
  store i32 3, i32* %4, align 4
  br label %100

100:                                              ; preds = %60, %77, %84, %99, %66, %5, %59, %54, %19, %16
  %101 = phi i32 [ 0, %16 ], [ 0, %19 ], [ 0, %54 ], [ 0, %59 ], [ 0, %5 ], [ 0, %66 ], [ 0, %99 ], [ %63, %84 ], [ %63, %77 ], [ %63, %60 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucptrie_swap_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %118

8:                                                ; preds = %5
  %9 = icmp eq %struct.UDataSwapper* %0, null
  %10 = icmp eq i8* %1, null
  %11 = or i1 %9, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = icmp sgt i32 %2, -1
  %14 = icmp eq i8* %3, null
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %8
  store i32 1, i32* %4, align 4
  br label %118

17:                                               ; preds = %12
  %18 = icmp ult i32 %2, 16
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  store i32 8, i32* %4, align 4
  br label %118

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %22 = load i32 (i32)*, i32 (i32)** %21, align 8
  %23 = bitcast i8* %1 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = tail call i32 %22(i32 %24) #3
  %26 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 4
  %27 = load i16 (i16)*, i16 (i16)** %26, align 8
  %28 = getelementptr inbounds i8, i8* %1, i64 4
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = tail call zeroext i16 %27(i16 zeroext %30) #3
  %32 = load i16 (i16)*, i16 (i16)** %26, align 8
  %33 = getelementptr inbounds i8, i8* %1, i64 6
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 2
  %36 = tail call zeroext i16 %32(i16 zeroext %35) #3
  %37 = load i16 (i16)*, i16 (i16)** %26, align 8
  %38 = getelementptr inbounds i8, i8* %1, i64 8
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 4
  %41 = tail call zeroext i16 %37(i16 zeroext %40) #3
  %42 = zext i16 %31 to i32
  %43 = lshr i32 %42, 6
  %44 = and i32 %43, 3
  %45 = and i32 %42, 7
  %46 = shl nuw nsw i32 %42, 4
  %47 = and i32 %46, 983040
  %48 = zext i16 %41 to i32
  %49 = or i32 %47, %48
  %50 = icmp eq i32 %44, 0
  %51 = select i1 %50, i32 1024, i32 64
  %52 = icmp ne i32 %25, 1416784179
  %53 = icmp ugt i32 %44, 1
  %54 = or i1 %52, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %20
  %56 = and i32 %42, 56
  %57 = icmp ne i32 %56, 0
  %58 = icmp ugt i32 %45, 2
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = zext i16 %36 to i32
  %62 = icmp ugt i32 %51, %61
  %63 = icmp ult i32 %49, 128
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %60, %55, %20
  store i32 3, i32* %4, align 4
  br label %118

66:                                               ; preds = %60
  %67 = shl nuw nsw i32 %61, 1
  %68 = add nuw nsw i32 %67, 16
  switch i32 %45, label %73 [
    i32 0, label %69
    i32 1, label %71
    i32 2, label %74
  ]

69:                                               ; preds = %66
  %70 = shl nuw nsw i32 %49, 1
  br label %74

71:                                               ; preds = %66
  %72 = shl nuw nsw i32 %49, 2
  br label %74

73:                                               ; preds = %66
  store i32 3, i32* %4, align 4
  br label %118

74:                                               ; preds = %66, %71, %69
  %75 = phi i32 [ %72, %71 ], [ %70, %69 ], [ %49, %66 ]
  %76 = add nsw i32 %68, %75
  br i1 %13, label %77, label %118

77:                                               ; preds = %74
  %78 = icmp sgt i32 %76, %2
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  store i32 8, i32* %4, align 4
  br label %118

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %82 = bitcast {}** %81 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %83 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %82, align 8
  %84 = tail call i32 %83(%struct.UDataSwapper* nonnull %0, i8* nonnull %1, i32 4, i8* %3, i32* %4) #3
  %85 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %86 = bitcast {}** %85 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %87 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %86, align 8
  %88 = getelementptr inbounds i8, i8* %3, i64 4
  %89 = tail call i32 %87(%struct.UDataSwapper* nonnull %0, i8* %28, i32 12, i8* %88, i32* %4) #3
  %90 = getelementptr inbounds i8, i8* %1, i64 16
  %91 = bitcast i8* %90 to i16*
  %92 = getelementptr inbounds i8, i8* %3, i64 16
  %93 = bitcast i8* %92 to i16*
  %94 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %86, align 8
  %95 = tail call i32 %94(%struct.UDataSwapper* nonnull %0, i8* %90, i32 %67, i8* %92, i32* %4) #3
  %96 = zext i16 %36 to i64
  %97 = getelementptr inbounds i16, i16* %91, i64 %96
  %98 = getelementptr inbounds i16, i16* %93, i64 %96
  switch i32 %45, label %117 [
    i32 0, label %99
    i32 1, label %105
    i32 2, label %111
  ]

99:                                               ; preds = %80
  %100 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %86, align 8
  %101 = bitcast i16* %97 to i8*
  %102 = shl nuw nsw i32 %49, 1
  %103 = bitcast i16* %98 to i8*
  %104 = tail call i32 %100(%struct.UDataSwapper* nonnull %0, i8* %101, i32 %102, i8* %103, i32* %4) #3
  br label %118

105:                                              ; preds = %80
  %106 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %82, align 8
  %107 = bitcast i16* %97 to i8*
  %108 = shl nuw nsw i32 %49, 2
  %109 = bitcast i16* %98 to i8*
  %110 = tail call i32 %106(%struct.UDataSwapper* nonnull %0, i8* %107, i32 %108, i8* %109, i32* %4) #3
  br label %118

111:                                              ; preds = %80
  %112 = icmp eq i8* %1, %3
  br i1 %112, label %118, label %113

113:                                              ; preds = %111
  %114 = bitcast i16* %98 to i8*
  %115 = bitcast i16* %97 to i8*
  %116 = zext i32 %49 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %114, i8* align 2 %115, i64 %116, i1 false)
  br label %118

117:                                              ; preds = %80
  store i32 3, i32* %4, align 4
  br label %118

118:                                              ; preds = %99, %105, %113, %111, %74, %79, %117, %65, %73, %5, %19, %16
  %119 = phi i32 [ 0, %16 ], [ 0, %19 ], [ 0, %5 ], [ 0, %65 ], [ 0, %73 ], [ 0, %117 ], [ 0, %79 ], [ %76, %74 ], [ %76, %111 ], [ %76, %113 ], [ %76, %105 ], [ %76, %99 ]
  ret i32 %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie_swapAnyVersion_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %26

8:                                                ; preds = %5
  %9 = icmp slt i32 %2, 16
  %10 = icmp eq i8* %1, null
  %11 = or i1 %10, %9
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = ptrtoint i8* %1 to i64
  %14 = and i64 %13, 3
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = bitcast i8* %1 to i32*
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %25 [
    i32 1416784179, label %23
    i32 862548564, label %23
    i32 1416784178, label %21
    i32 845771348, label %21
    i32 1416784229, label %19
    i32 1701409364, label %19
  ]

19:                                               ; preds = %16, %16
  %20 = tail call i32 @utrie_swap_69(%struct.UDataSwapper* %0, i8* nonnull %1, i32 %2, i8* %3, i32* %4)
  br label %26

21:                                               ; preds = %16, %16
  %22 = tail call i32 @utrie2_swap_69(%struct.UDataSwapper* %0, i8* nonnull %1, i32 %2, i8* %3, i32* %4)
  br label %26

23:                                               ; preds = %16, %16
  %24 = tail call i32 @ucptrie_swap_69(%struct.UDataSwapper* %0, i8* nonnull %1, i32 %2, i8* %3, i32* %4)
  br label %26

25:                                               ; preds = %16, %12, %8
  store i32 3, i32* %4, align 4
  br label %26

26:                                               ; preds = %5, %25, %23, %21, %19
  %27 = phi i32 [ 0, %25 ], [ %24, %23 ], [ %22, %21 ], [ %20, %19 ], [ 0, %5 ]
  ret i32 %27
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
