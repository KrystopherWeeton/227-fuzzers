; ModuleID = '../../third_party/angle/src/compiler/translator/tree_ops/FoldExpressions.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_ops/FoldExpressions.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::TCompiler" = type opaque
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, [7 x i8] }>
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TIntermNode"** }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.sh::TInfoSinkBase" = type opaque
%"class.sh::(anonymous namespace)::FoldExpressionsTraverser" = type <{ %"class.sh::TIntermTraverser", %"class.sh::TDiagnostics"*, i8, [7 x i8] }>
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.1", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.sh::TVector", %"class.std::__1::vector.20" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.3" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.sh::TSymbolTable" = type opaque
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.8" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector", %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.15" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.22" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TVariable" = type opaque
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.27"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.27" = type opaque
%"class.sh::TInterfaceBlock" = type opaque
%"class.sh::TStructure" = type opaque
%"class.sh::TConstantUnion" = type { %union.anon, i32 }
%union.anon = type { i32 }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.28", i8, [7 x i8] }>
%"class.sh::TVector.28" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i32*, i32*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i32* }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type opaque
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector" }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.sh::ImmutableString" = type { i8*, i64 }

$_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE = comdat any

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

@_ZTVN2sh12_GLOBAL__N_124FoldExpressionsTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*)* @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh15FoldExpressionsEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TDiagnosticsE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TDiagnostics"*) local_unnamed_addr #0 {
  %4 = alloca %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", align 8
  %5 = bitcast %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 168, i1 false)
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %4, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %6, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #5
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124FoldExpressionsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %4, i64 0, i32 1
  store %"class.sh::TDiagnostics"* %2, %"class.sh::TDiagnostics"** %8, align 8
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %4, i64 0, i32 2
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 0
  br label %11

11:                                               ; preds = %13, %3
  store i8 0, i8* %9, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %6) #5
  %12 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %6, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %10) #5
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = load i8, i8* %9, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %11

16:                                               ; preds = %13, %11
  %17 = phi i1 [ false, %11 ], [ true, %13 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %5) #5
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #2

declare zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverserD0Ev(%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %4, align 8
  %6 = bitcast %"class.sh::TIntermSwizzle"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)***
  %7 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)** %7, i64 27
  %9 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)** %8, align 8
  %10 = tail call %"class.sh::TIntermTyped"* %9(%"class.sh::TIntermSwizzle"* %2, %"class.sh::TDiagnostics"* %5) #5
  %11 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %2, i64 0, i32 0, i32 0
  %12 = icmp eq %"class.sh::TIntermTyped"* %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %10, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %14, %"class.sh::TIntermNode"* %15, i32 1) #5
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 2
  store i8 1, i8* %16, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = phi i1 [ false, %13 ], [ true, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %4, align 8
  %6 = bitcast %"class.sh::TIntermBinary"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*, %"class.sh::TDiagnostics"*)***
  %7 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*, %"class.sh::TDiagnostics"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*, %"class.sh::TDiagnostics"*)** %7, i64 27
  %9 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*, %"class.sh::TDiagnostics"*)** %8, align 8
  %10 = tail call %"class.sh::TIntermTyped"* %9(%"class.sh::TIntermBinary"* %2, %"class.sh::TDiagnostics"* %5) #5
  %11 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.sh::TIntermTyped"* %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %10, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %14, %"class.sh::TIntermNode"* %15, i32 1) #5
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 2
  store i8 1, i8* %16, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = phi i1 [ false, %13 ], [ true, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %4, align 8
  %6 = bitcast %"class.sh::TIntermUnary"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)***
  %7 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)** %7, i64 27
  %9 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)** %8, align 8
  %10 = tail call %"class.sh::TIntermTyped"* %9(%"class.sh::TIntermUnary"* %2, %"class.sh::TDiagnostics"* %5) #5
  %11 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.sh::TIntermTyped"* %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %10, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %14, %"class.sh::TIntermNode"* %15, i32 1) #5
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 2
  store i8 1, i8* %16, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = phi i1 [ false, %13 ], [ true, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %4, align 8
  %6 = bitcast %"class.sh::TIntermTernary"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTernary"*, %"class.sh::TDiagnostics"*)***
  %7 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTernary"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTernary"*, %"class.sh::TDiagnostics"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTernary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTernary"*, %"class.sh::TDiagnostics"*)** %7, i64 27
  %9 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTernary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTernary"*, %"class.sh::TDiagnostics"*)** %8, align 8
  %10 = tail call %"class.sh::TIntermTyped"* %9(%"class.sh::TIntermTernary"* %2, %"class.sh::TDiagnostics"* %5) #5
  %11 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 0, i32 0
  %12 = icmp eq %"class.sh::TIntermTyped"* %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %10, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %14, %"class.sh::TIntermNode"* %15, i32 1) #5
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 2
  store i8 1, i8* %16, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = phi i1 [ false, %13 ], [ true, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_124FoldExpressionsTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::(anonymous namespace)::FoldExpressionsTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %4, align 8
  %6 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)***
  %7 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)** %7, i64 27
  %9 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)** %8, align 8
  %10 = tail call %"class.sh::TIntermTyped"* %9(%"class.sh::TIntermAggregate"* %2, %"class.sh::TDiagnostics"* %5) #5
  %11 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.sh::TIntermTyped"* %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %10, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %14, %"class.sh::TIntermNode"* %15, i32 1) #5
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::FoldExpressionsTraverser", %"class.sh::(anonymous namespace)::FoldExpressionsTraverser"* %0, i64 0, i32 2
  store i8 1, i8* %16, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = phi i1 [ false, %13 ], [ true, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
