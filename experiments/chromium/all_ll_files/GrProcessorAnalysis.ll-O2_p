; ModuleID = '../../third_party/skia/src/gpu/GrProcessorAnalysis.cpp'
source_filename = "../../third_party/skia/src/gpu/GrProcessorAnalysis.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrColorFragmentProcessorAnalysis = type { i8, i8, i8, i8, i32, %struct.SkRGBA4f }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>

@_ZN32GrColorFragmentProcessorAnalysisC1ERK24GrProcessorAnalysisColorPKNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEi = hidden unnamed_addr alias void (%class.GrColorFragmentProcessorAnalysis*, %class.GrProcessorAnalysisColor*, %"class.std::__1::unique_ptr"*, i32), void (%class.GrColorFragmentProcessorAnalysis*, %class.GrProcessorAnalysisColor*, %"class.std::__1::unique_ptr"*, i32)* @_ZN32GrColorFragmentProcessorAnalysisC2ERK24GrProcessorAnalysisColorPKNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEi

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32GrColorFragmentProcessorAnalysisC2ERK24GrProcessorAnalysisColorPKNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEi(%class.GrColorFragmentProcessorAnalysis*, %class.GrProcessorAnalysisColor* nocapture readonly dereferenceable(20), %"class.std::__1::unique_ptr"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %0, i64 0, i32 1
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %0, i64 0, i32 0
  %10 = lshr i32 %8, 1
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  store i8 %12, i8* %9, align 4
  %13 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %0, i64 0, i32 2
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %0, i64 0, i32 4
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %0, i64 0, i32 5
  %16 = load i32, i32* %7, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %4
  %20 = icmp eq %struct.SkRGBA4f* %15, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %1, i64 0, i32 1
  %23 = bitcast %struct.SkRGBA4f* %15 to i8*
  %24 = bitcast %struct.SkRGBA4f* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %24, i64 16, i1 false) #2
  br label %25

25:                                               ; preds = %4, %19, %21
  %26 = phi i8 [ 1, %19 ], [ 1, %21 ], [ 0, %4 ]
  %27 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %0, i64 0, i32 3
  store i8 %26, i8* %27, align 1
  %28 = icmp sgt i32 %3, 0
  br i1 %28, label %29, label %125

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %0, i64 0, i32 5, i32 2
  %31 = bitcast <2 x i64>* %5 to i8*
  %32 = bitcast %struct.SkRGBA4f* %15 to <2 x float>*
  %33 = bitcast <2 x i64>* %5 to %struct.SkRGBA4f*
  %34 = bitcast float* %30 to <2 x float>*
  %35 = zext i32 %3 to i64
  %36 = bitcast %struct.SkRGBA4f* %15 to <2 x i64>*
  br label %37

37:                                               ; preds = %119, %29
  %38 = phi i8 [ 1, %29 ], [ %120, %119 ]
  %39 = phi i8 [ %12, %29 ], [ %121, %119 ]
  %40 = phi i8 [ 0, %29 ], [ %122, %119 ]
  %41 = phi i64 [ 0, %29 ], [ %123, %119 ]
  %42 = icmp eq i8 %40, 0
  %43 = load i8, i8* %27, align 1
  br i1 %42, label %56, label %44

44:                                               ; preds = %37
  %45 = icmp eq i8 %43, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 %41
  br label %59

48:                                               ; preds = %44
  %49 = icmp eq i8 %38, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 %41
  br label %82

52:                                               ; preds = %48
  %53 = icmp eq i8 %39, 0
  br i1 %53, label %125, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 %41
  br label %82

56:                                               ; preds = %37
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 %41
  %58 = icmp eq i8 %43, 0
  br i1 %58, label %82, label %59

59:                                               ; preds = %46, %56
  %60 = phi %"class.std::__1::unique_ptr"* [ %47, %46 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 %41, i32 0, i32 0, i32 0
  %62 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %61, align 8
  %63 = load <2 x i64>, <2 x i64>* %36, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31)
  store <2 x i64> %63, <2 x i64>* %5, align 16
  %64 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %62, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  br label %82

69:                                               ; preds = %59
  %70 = bitcast %class.GrFragmentProcessor* %62 to { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)***
  %71 = load { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)**, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*** %70, align 8
  %72 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)** %71, i64 4
  %73 = load { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)*, { <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)** %72, align 8
  %74 = call { <2 x float>, <2 x float> } %73(%class.GrFragmentProcessor* %62, %struct.SkRGBA4f* nonnull dereferenceable(16) %33) #2
  %75 = extractvalue { <2 x float>, <2 x float> } %74, 0
  %76 = extractvalue { <2 x float>, <2 x float> } %74, 1
  store <2 x float> %75, <2 x float>* %32, align 4
  store <2 x float> %76, <2 x float>* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  %77 = load i32, i32* %14, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %14, align 4
  %79 = extractelement <2 x float> %76, i32 1
  %80 = fcmp oeq float %79, 1.000000e+00
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %9, align 4
  store i8 1, i8* %6, align 1
  br label %115

82:                                               ; preds = %54, %68, %50, %56
  %83 = phi %"class.std::__1::unique_ptr"* [ %51, %50 ], [ %57, %56 ], [ %60, %68 ], [ %55, %54 ]
  store i8 0, i8* %27, align 1
  %84 = icmp eq i8 %39, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %87 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %86, align 8
  %88 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %87, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %85
  store i8 0, i8* %9, align 4
  br label %93

93:                                               ; preds = %85, %82, %92
  %94 = phi i8 [ %39, %85 ], [ 0, %82 ], [ 0, %92 ]
  %95 = icmp eq i8 %38, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %98 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %97, align 8
  %99 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %98, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  store i8 0, i8* %6, align 1
  br label %104

104:                                              ; preds = %96, %93, %103
  %105 = phi i8 [ %38, %96 ], [ 0, %93 ], [ 0, %103 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %107 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %106, align 8
  %108 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %107, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, 24
  %111 = icmp ne i32 %110, 0
  %112 = and i32 %109, 32
  %113 = icmp eq i32 %112, 0
  %114 = and i1 %113, %111
  br i1 %114, label %115, label %119

115:                                              ; preds = %104, %69
  %116 = phi i8 [ 0, %69 ], [ 1, %104 ]
  %117 = phi i8 [ 1, %69 ], [ %105, %104 ]
  %118 = phi i8 [ %81, %69 ], [ %94, %104 ]
  store i8 %116, i8* %13, align 2
  br label %119

119:                                              ; preds = %115, %104
  %120 = phi i8 [ %105, %104 ], [ %117, %115 ]
  %121 = phi i8 [ %94, %104 ], [ %118, %115 ]
  %122 = phi i8 [ %40, %104 ], [ %116, %115 ]
  %123 = add nuw nsw i64 %41, 1
  %124 = icmp eq i64 %123, %35
  br i1 %124, label %125, label %37

125:                                              ; preds = %52, %119, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
