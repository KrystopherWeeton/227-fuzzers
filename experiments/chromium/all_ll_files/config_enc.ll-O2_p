; ModuleID = '../../third_party/libwebp/src/enc/config_enc.c'
source_filename = "../../third_party/libwebp/src/enc/config_enc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon = type { i8, i8 }
%struct.WebPConfig = type { i32, float, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@kLosslessPresets = internal unnamed_addr constant [10 x %struct.anon] [%struct.anon zeroinitializer, %struct.anon { i8 1, i8 20 }, %struct.anon { i8 2, i8 25 }, %struct.anon { i8 3, i8 30 }, %struct.anon { i8 3, i8 50 }, %struct.anon { i8 4, i8 50 }, %struct.anon { i8 4, i8 75 }, %struct.anon { i8 4, i8 90 }, %struct.anon { i8 5, i8 90 }, %struct.anon { i8 6, i8 100 }], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebPConfigInitInternal(%struct.WebPConfig*, i32, float, i32) local_unnamed_addr #0 {
  %5 = and i32 %3, -256
  %6 = icmp ne i32 %5, 512
  %7 = icmp eq %struct.WebPConfig* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %42, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 1
  store float %2, float* %10, align 4
  %11 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 4
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 5
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 2
  store i32 4, i32* %13, align 4
  %14 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 7
  %15 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 8
  %16 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 9
  %17 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 10
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 6
  %19 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> <i32 4, i32 50, i32 60, i32 0>, <4 x i32>* %19, align 4
  %20 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 15
  %21 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 27
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 28
  store i32 100, i32* %22, align 4
  %23 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 17
  %24 = bitcast i32* %20 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, <4 x i32>* %24, align 4
  %25 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 11
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 19
  %27 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 12
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 13
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 14
  store i32 100, i32* %29, align 4
  %30 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 0
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 3
  store i32 0, i32* %31, align 4
  %32 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %32, align 4
  %33 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 23
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 100, i32 0, i32 0, i32 0>, <4 x i32>* %34, align 4
  switch i32 %1, label %40 [
    i32 1, label %35
    i32 2, label %36
    i32 3, label %37
    i32 4, label %38
    i32 5, label %39
  ]

35:                                               ; preds = %9
  store i32 80, i32* %14, align 4
  store i32 4, i32* %16, align 4
  store i32 35, i32* %15, align 4
  store i32 0, i32* %23, align 4
  br label %40

36:                                               ; preds = %9
  store i32 80, i32* %14, align 4
  store i32 3, i32* %16, align 4
  store i32 30, i32* %15, align 4
  store i32 2, i32* %23, align 4
  br label %40

37:                                               ; preds = %9
  store i32 25, i32* %14, align 4
  store i32 6, i32* %16, align 4
  store i32 10, i32* %15, align 4
  br label %40

38:                                               ; preds = %9
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %23, align 4
  br label %40

39:                                               ; preds = %9
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %23, align 4
  store i32 2, i32* %18, align 4
  br label %40

40:                                               ; preds = %9, %39, %38, %37, %36, %35
  %41 = tail call i32 @WebPValidateConfig(%struct.WebPConfig* nonnull %0)
  br label %42

42:                                               ; preds = %4, %40
  %43 = phi i32 [ %41, %40 ], [ 0, %4 ]
  ret i32 %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebPValidateConfig(%struct.WebPConfig* readonly) local_unnamed_addr #1 {
  %2 = icmp eq %struct.WebPConfig* %0, null
  br i1 %2, label %126, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fcmp olt float %5, 0.000000e+00
  %7 = fcmp ogt float %5, 1.000000e+02
  %8 = or i1 %6, %7
  br i1 %8, label %126, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %126, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 5
  %15 = load float, float* %14, align 4
  %16 = fcmp olt float %15, 0.000000e+00
  br i1 %16, label %126, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 6
  br i1 %20, label %126, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, -1
  %25 = icmp ugt i32 %24, 3
  br i1 %25, label %126, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 7
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, 100
  br i1 %29, label %126, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 8
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %32, 100
  br i1 %33, label %126, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 9
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, 7
  br i1 %37, label %126, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %40, 1
  br i1 %41, label %126, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = icmp ugt i32 %44, 1
  br i1 %45, label %126, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 15
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, -1
  %50 = icmp ugt i32 %49, 9
  br i1 %50, label %126, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 27
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %126, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 28
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, 100
  %59 = icmp sgt i32 %53, %57
  %60 = or i1 %58, %59
  br i1 %60, label %126, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 16
  %63 = load i32, i32* %62, align 4
  %64 = icmp ugt i32 %63, 1
  br i1 %64, label %126, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 17
  %67 = load i32, i32* %66, align 4
  %68 = icmp ugt i32 %67, 7
  br i1 %68, label %126, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 18
  %71 = load i32, i32* %70, align 4
  %72 = icmp ugt i32 %71, 3
  br i1 %72, label %126, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 19
  %75 = load i32, i32* %74, align 4
  %76 = icmp ugt i32 %75, 100
  br i1 %76, label %126, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 12
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, 0
  br i1 %80, label %126, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 13
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %126, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 14
  %87 = load i32, i32* %86, align 4
  %88 = icmp ugt i32 %87, 100
  br i1 %88, label %126, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp ugt i32 %91, 1
  br i1 %92, label %126, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 23
  %95 = load i32, i32* %94, align 4
  %96 = icmp ugt i32 %95, 100
  br i1 %96, label %126, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = icmp ugt i32 %99, 3
  br i1 %100, label %126, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 20
  %103 = load i32, i32* %102, align 4
  %104 = icmp ugt i32 %103, 1
  br i1 %104, label %126, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 21
  %107 = load i32, i32* %106, align 4
  %108 = icmp ugt i32 %107, 1
  br i1 %108, label %126, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 22
  %111 = load i32, i32* %110, align 4
  %112 = icmp ugt i32 %111, 1
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 24
  %115 = load i32, i32* %114, align 4
  %116 = icmp ugt i32 %115, 1
  br i1 %116, label %126, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 25
  %119 = load i32, i32* %118, align 4
  %120 = icmp ugt i32 %119, 1
  br i1 %120, label %126, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 26
  %123 = load i32, i32* %122, align 4
  %124 = icmp ult i32 %123, 2
  %125 = zext i1 %124 to i32
  ret i32 %125

126:                                              ; preds = %117, %113, %109, %105, %101, %97, %93, %89, %85, %81, %77, %73, %69, %65, %61, %51, %55, %46, %42, %38, %34, %30, %26, %21, %17, %13, %9, %3, %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @WebPConfigLosslessPreset(%struct.WebPConfig*, i32) local_unnamed_addr #2 {
  %3 = icmp eq %struct.WebPConfig* %0, null
  %4 = icmp ugt i32 %1, 9
  %5 = or i1 %3, %4
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 0
  store i32 1, i32* %7, align 4
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* @kLosslessPresets, i64 0, i64 %8, i32 0
  %10 = load i8, i8* %9, align 2
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 2
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* @kLosslessPresets, i64 0, i64 %8, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = uitofp i8 %14 to float
  %16 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %0, i64 0, i32 1
  store float %15, float* %16, align 4
  br label %17

17:                                               ; preds = %2, %6
  %18 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %18
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
