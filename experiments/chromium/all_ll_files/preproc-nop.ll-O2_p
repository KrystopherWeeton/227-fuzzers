; ModuleID = '../../third_party/nasm/asm/preproc-nop.c'
source_filename = "../../third_party/nasm/asm/preproc-nop.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.preproc_ops = type { void ()*, void (i8*, i32, %struct.strlist*)*, i8* ()*, void ()*, void ()*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*, i8*)*, void (%struct.strlist*)*, void (i32)*, i1 (i32)* }
%struct.strlist = type { %struct.hash_table, %struct.strlist_entry*, %struct.strlist_entry**, i64, i64, i8 }
%struct.hash_table = type { %struct.hash_node*, i64, i64, i64 }
%struct.hash_node = type { i64, i8*, i64, i8* }
%struct.strlist_entry = type { %struct.strlist_entry*, i64, i64, %union.intorptr, [1 x i8] }
%union.intorptr = type { i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.lfmt = type { void (i8*)*, void ()*, void (%struct.out_data*)*, void (i32, i32, i8*)*, void (i32, i64)*, void (i32)*, void (i32, i8*, ...)*, void (i64)* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.src_location_stack = type { %struct.src_location, %struct.src_location_stack*, %struct.src_location_stack*, i8* }

@preproc_nop = hidden local_unnamed_addr constant %struct.preproc_ops { void ()* @nop_init, void (i8*, i32, %struct.strlist*)* @nop_reset, i8* ()* @nop_getline, void ()* @nop_cleanup_pass, void ()* @nop_cleanup_session, void (i8*)* @nop_extra_stdmac, void (i8*)* @nop_pre_define, void (i8*)* @nop_pre_undefine, void (i8*)* @nop_pre_include, void (i8*, i8*)* @nop_pre_command, void (%struct.strlist*)* @nop_include_path, void (i32)* @nop_error_list_macros, i1 (i32)* @nop_suppress_error }, align 8
@nop_lineinc = internal unnamed_addr global i32 0, align 4
@nop_fp = internal unnamed_addr global %struct._IO_FILE* null, align 8
@.str = private unnamed_addr constant [31 x i8] c"unable to open input file `%s'\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"\0D\0A\1A\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%line\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"%d+%d %s\00", align 1
@pp_noline = external local_unnamed_addr global i8, align 1
@lfmt = external local_unnamed_addr global %struct.lfmt*, align 8
@_src_bottom = external local_unnamed_addr global %struct.src_location_stack*, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_init() #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @nop_reset(i8*, i32, %struct.strlist*) #1 {
  tail call void @src_set(i32 0, i8* %0) #11
  store i32 1, i32* @nop_lineinc, align 4
  %4 = tail call %struct._IO_FILE* @nasm_open_read(i8* %0, i32 1) #11
  store %struct._IO_FILE* %4, %struct._IO_FILE** @nop_fp, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void (i32, i8*, ...) @nasm_fatalf(i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %0) #12
  unreachable

7:                                                ; preds = %3
  %8 = tail call %struct.strlist_entry* @strlist_add(%struct.strlist* %2, i8* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @nop_getline() #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = tail call noalias i8* @nasm_malloc(i64 512) #13
  %4 = load %struct.src_location_stack*, %struct.src_location_stack** @_src_bottom, align 8
  %5 = getelementptr inbounds %struct.src_location_stack, %struct.src_location_stack* %4, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = load i32, i32* @nop_lineinc, align 4
  %8 = add nsw i32 %7, %6
  store i32 %8, i32* %5, align 8
  %9 = bitcast i32* %1 to i8*
  %10 = bitcast i32* %2 to i8*
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @nop_fp, align 8
  %12 = call i8* @fgets(i8* %3, i32 512, %struct._IO_FILE* %11)
  %13 = icmp eq i8* %12, null
  br i1 %13, label %58, label %14

14:                                               ; preds = %0, %80
  %15 = phi i32 [ %62, %80 ], [ 512, %0 ]
  %16 = phi i8* [ %61, %80 ], [ %3, %0 ]
  %17 = ptrtoint i8* %16 to i64
  br label %18

18:                                               ; preds = %44, %14
  %19 = phi i64 [ %49, %44 ], [ %17, %14 ]
  %20 = phi i32 [ %48, %44 ], [ %15, %14 ]
  %21 = phi i8* [ %47, %44 ], [ %16, %14 ]
  %22 = phi i8* [ %46, %44 ], [ %16, %14 ]
  %23 = call i64 @strlen(i8* %21) #14
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = icmp ugt i8* %24, %22
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  %27 = getelementptr inbounds i8, i8* %24, i64 -1
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 10
  br i1 %29, label %60, label %30

30:                                               ; preds = %26, %18
  %31 = ptrtoint i8* %24 to i64
  %32 = sub i64 %31, %19
  %33 = add nsw i32 %20, -10
  %34 = sext i32 %33 to i64
  %35 = icmp sgt i64 %32, %34
  br i1 %35, label %36, label %44

36:                                               ; preds = %30
  %37 = add nsw i32 %20, 512
  %38 = sext i32 %37 to i64
  %39 = call i8* @nasm_realloc(i8* %22, i64 %38) #15
  %40 = shl i64 %32, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  %43 = ptrtoint i8* %42 to i64
  br label %44

44:                                               ; preds = %36, %30
  %45 = phi i64 [ %43, %36 ], [ %31, %30 ]
  %46 = phi i8* [ %39, %36 ], [ %22, %30 ]
  %47 = phi i8* [ %42, %36 ], [ %24, %30 ]
  %48 = phi i32 [ %37, %36 ], [ %20, %30 ]
  %49 = ptrtoint i8* %46 to i64
  %50 = sub i64 %49, %45
  %51 = trunc i64 %50 to i32
  %52 = add i32 %48, %51
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @nop_fp, align 8
  %54 = call i8* @fgets(i8* %47, i32 %52, %struct._IO_FILE* %53)
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %18

56:                                               ; preds = %44
  %57 = icmp eq i8* %47, %46
  br i1 %57, label %58, label %60

58:                                               ; preds = %56, %80, %0
  %59 = phi i8* [ %3, %0 ], [ %46, %56 ], [ %61, %80 ]
  call void @nasm_free(i8* %59) #11
  br label %93

60:                                               ; preds = %26, %56
  %61 = phi i8* [ %46, %56 ], [ %22, %26 ]
  %62 = phi i32 [ %48, %56 ], [ %20, %26 ]
  %63 = call i64 @strcspn(i8* %61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #14
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  store i8 0, i8* %64, align 1
  %65 = call i32 @strncasecmp(i8* %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #14
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %86

67:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 -1431655766, i32* %1, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 -1431655766, i32* %2, align 4
  %68 = call i64 @strlen(i8* %61) #14
  %69 = call noalias i8* @nasm_malloc(i64 %68) #13
  %70 = getelementptr inbounds i8, i8* %61, i64 5
  %71 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %70, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i8* %69) #11
  %72 = icmp sgt i32 %71, 1
  br i1 %72, label %73, label %85

73:                                               ; preds = %67
  %74 = load i8, i8* @pp_noline, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = load i32, i32* %1, align 4
  %78 = icmp sgt i32 %71, 2
  %79 = select i1 %78, i8* %69, i8* null
  call void @src_set(i32 %77, i8* %79) #11
  br label %80

80:                                               ; preds = %73, %76
  %81 = load i32, i32* %2, align 4
  store i32 %81, i32* @nop_lineinc, align 4
  call void @nasm_free(i8* %69) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @nop_fp, align 8
  %83 = call i8* @fgets(i8* %61, i32 %62, %struct._IO_FILE* %82)
  %84 = icmp eq i8* %83, null
  br i1 %84, label %58, label %14

85:                                               ; preds = %67
  call void @nasm_free(i8* %69) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %86

86:                                               ; preds = %60, %85
  %87 = load %struct.lfmt*, %struct.lfmt** @lfmt, align 8
  %88 = getelementptr inbounds %struct.lfmt, %struct.lfmt* %87, i64 0, i32 3
  %89 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %88, align 8
  %90 = load %struct.src_location_stack*, %struct.src_location_stack** @_src_bottom, align 8
  %91 = getelementptr inbounds %struct.src_location_stack, %struct.src_location_stack* %90, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  call void %89(i32 0, i32 %92, i8* %61) #11
  br label %93

93:                                               ; preds = %86, %58
  %94 = phi i8* [ %61, %86 ], [ null, %58 ]
  ret i8* %94
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @nop_cleanup_pass() #2 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @nop_fp, align 8
  %2 = icmp eq %struct._IO_FILE* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = tail call i32 @fclose(%struct._IO_FILE* nonnull %1)
  store %struct._IO_FILE* null, %struct._IO_FILE** @nop_fp, align 8
  br label %5

5:                                                ; preds = %0, %3
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_cleanup_session() #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_extra_stdmac(i8* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_pre_define(i8* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_pre_undefine(i8* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_pre_include(i8* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_pre_command(i8* nocapture, i8* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_include_path(%struct.strlist* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @nop_error_list_macros(i32) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @nop_suppress_error(i32) #0 {
  ret i1 false
}

declare void @src_set(i32, i8*) local_unnamed_addr #3

declare %struct._IO_FILE* @nasm_open_read(i8*, i32) local_unnamed_addr #3

; Function Attrs: cold noreturn
declare void @nasm_fatalf(i32, i8*, ...) local_unnamed_addr #4

declare %struct.strlist_entry* @strlist_add(%struct.strlist*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: allocsize(1)
declare i8* @nasm_realloc(i8*, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @nasm_free(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind allocsize(0) }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
