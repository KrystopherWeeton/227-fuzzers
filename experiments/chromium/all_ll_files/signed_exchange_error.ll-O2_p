; ModuleID = '../../content/browser/web_package/signed_exchange_error.cc'
source_filename = "../../content/browser/web_package/signed_exchange_error.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::SignedExchangeError" = type <{ %"class.std::__1::basic_string", %"class.absl::optional.2", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@switch.table._ZN7content19SignedExchangeError35GetFieldFromSignatureVerifierResultENS_31SignedExchangeSignatureVerifier6ResultE = private unnamed_addr constant [9 x i64] [i64 1, i64 0, i64 1, i64 0, i64 0, i64 1, i64 1, i64 1, i64 1], align 8
@switch.table._ZN7content19SignedExchangeError35GetFieldFromSignatureVerifierResultENS_31SignedExchangeSignatureVerifier6ResultE.1 = private unnamed_addr constant [9 x i64] [i64 12884901888, i64 0, i64 0, i64 0, i64 0, i64 8589934592, i64 21474836480, i64 21474836480, i64 21474836480], align 8

@_ZN7content19SignedExchangeErrorC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4absl8optionalINS1_4pairIiNS0_5FieldEEEEE = hidden unnamed_addr alias void (%"struct.content::SignedExchangeError"*, %"class.std::__1::basic_string"*, %"class.absl::optional.2"*), void (%"struct.content::SignedExchangeError"*, %"class.std::__1::basic_string"*, %"class.absl::optional.2"*)* @_ZN7content19SignedExchangeErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4absl8optionalINS1_4pairIiNS0_5FieldEEEEE
@_ZN7content19SignedExchangeErrorC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::SignedExchangeError"*, %"struct.content::SignedExchangeError"*), void (%"struct.content::SignedExchangeError"*, %"struct.content::SignedExchangeError"*)* @_ZN7content19SignedExchangeErrorC2ERKS0_
@_ZN7content19SignedExchangeErrorC1EOS0_ = hidden unnamed_addr alias void (%"struct.content::SignedExchangeError"*, %"struct.content::SignedExchangeError"*), void (%"struct.content::SignedExchangeError"*, %"struct.content::SignedExchangeError"*)* @_ZN7content19SignedExchangeErrorC2EOS0_
@_ZN7content19SignedExchangeErrorD1Ev = hidden unnamed_addr alias void (%"struct.content::SignedExchangeError"*), void (%"struct.content::SignedExchangeError"*)* @_ZN7content19SignedExchangeErrorD2Ev

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN7content19SignedExchangeError35GetFieldFromSignatureVerifierResultENS_31SignedExchangeSignatureVerifier6ResultE(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -3
  %3 = icmp ult i32 %2, 9
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [9 x i64], [9 x i64]* @switch.table._ZN7content19SignedExchangeError35GetFieldFromSignatureVerifierResultENS_31SignedExchangeSignatureVerifier6ResultE, i64 0, i64 %5
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds [9 x i64], [9 x i64]* @switch.table._ZN7content19SignedExchangeError35GetFieldFromSignatureVerifierResultENS_31SignedExchangeSignatureVerifier6ResultE.1, i64 0, i64 %8
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %4, %1
  %12 = phi i64 [ 0, %1 ], [ %7, %4 ]
  %13 = phi i64 [ 0, %1 ], [ %10, %4 ]
  %14 = or i64 %13, %12
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SignedExchangeErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4absl8optionalINS1_4pairIiNS0_5FieldEEEEE(%"struct.content::SignedExchangeError"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.absl::optional.2"* nocapture readonly) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %"struct.content::SignedExchangeError"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #5
  br label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %14, i64 %16) #5
  br label %17

17:                                               ; preds = %8, %11
  %18 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 12, i1 false) #5
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::pair"* %23 to i64*
  %26 = bitcast %union.anon.6* %24 to i64*
  %27 = load i64, i64* %25, align 4
  store i64 %27, i64* %26, align 4
  store i8 1, i8* %18, align 4
  br label %28

28:                                               ; preds = %17, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SignedExchangeErrorC2ERKS0_(%"struct.content::SignedExchangeError"*, %"struct.content::SignedExchangeError"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.content::SignedExchangeError"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.content::SignedExchangeError"* %0 to i8*
  %9 = bitcast %"struct.content::SignedExchangeError"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #5
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #5
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 12, i1 false) #5
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::pair"* %22 to i64*
  %25 = bitcast %union.anon.6* %23 to i64*
  %26 = load i64, i64* %24, align 4
  store i64 %26, i64* %25, align 4
  store i8 1, i8* %17, align 4
  br label %27

27:                                               ; preds = %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SignedExchangeErrorC2EOS0_(%"struct.content::SignedExchangeError"* nocapture, %"struct.content::SignedExchangeError"* nocapture dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.content::SignedExchangeError"* %0 to i8*
  %4 = bitcast %"struct.content::SignedExchangeError"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #5
  %5 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 12, i1 false) #5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair"* %10 to i64*
  %13 = bitcast %union.anon.6* %11 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 4
  store i8 1, i8* %5, align 4
  br label %15

15:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SignedExchangeErrorD2Ev(%"struct.content::SignedExchangeError"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.content::SignedExchangeError"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.content::SignedExchangeError", %"struct.content::SignedExchangeError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #6
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

attributes #0 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
