; ModuleID = '../../media/capture/video/gpu_memory_buffer_utils.cc'
source_filename = "../../media/capture/video/gpu_memory_buffer_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::ScopedNV12GpuMemoryBufferMapping" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%"class.media::VideoCaptureDevice::Client" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.gpu::GpuMemoryBufferSupport" = type { i32 (...)**, %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.gfx::ClientNativePixmapFactory"* }
%"class.gfx::ClientNativePixmapFactory" = type opaque
%"struct.media::VideoCaptureDevice::Client::Buffer" = type <{ i32, i32, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"* }
%"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* }
%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector.36", i64 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.38" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gpu::GpuMemoryBufferImpl" = type <{ %"class.gfx::GpuMemoryBuffer", %"class.gfx::GenericSharedMemoryId", %"class.gfx::Size", i32, %"class.base::OnceCallback", %"struct.gpu::SyncToken", %"class.base::Lock", i32, [4 x i8] }>
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.gpu::GpuMemoryBufferManager" = type opaque

@.str = private unnamed_addr constant [53 x i8] c"../../media/capture/video/gpu_memory_buffer_utils.cc\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"out_gpu_memory_buffer\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"out_capture_buffer\00", align 1

@_ZN5media32ScopedNV12GpuMemoryBufferMappingC1ENSt3__110unique_ptrIN3gfx15GpuMemoryBufferENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.media::ScopedNV12GpuMemoryBufferMapping"*, %"class.gfx::GpuMemoryBuffer"*), void (%"class.media::ScopedNV12GpuMemoryBufferMapping"*, %"class.gfx::GpuMemoryBuffer"*)* @_ZN5media32ScopedNV12GpuMemoryBufferMappingC2ENSt3__110unique_ptrIN3gfx15GpuMemoryBufferENS1_14default_deleteIS4_EEEE
@_ZN5media32ScopedNV12GpuMemoryBufferMappingD1Ev = hidden unnamed_addr alias void (%"class.media::ScopedNV12GpuMemoryBufferMapping"*), void (%"class.media::ScopedNV12GpuMemoryBufferMapping"*)* @_ZN5media32ScopedNV12GpuMemoryBufferMappingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media32ScopedNV12GpuMemoryBufferMappingC2ENSt3__110unique_ptrIN3gfx15GpuMemoryBufferENS1_14default_deleteIS4_EEEE(%"class.media::ScopedNV12GpuMemoryBufferMapping"* nocapture, %"class.gfx::GpuMemoryBuffer"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gfx::GpuMemoryBuffer"* %1 to i64
  %4 = bitcast %"class.media::ScopedNV12GpuMemoryBufferMapping"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = bitcast %"class.gfx::GpuMemoryBuffer"* %1 to i1 (%"class.gfx::GpuMemoryBuffer"*)***
  %6 = load i1 (%"class.gfx::GpuMemoryBuffer"*)**, i1 (%"class.gfx::GpuMemoryBuffer"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.gfx::GpuMemoryBuffer"*)*, i1 (%"class.gfx::GpuMemoryBuffer"*)** %6, i64 2
  %8 = load i1 (%"class.gfx::GpuMemoryBuffer"*)*, i1 (%"class.gfx::GpuMemoryBuffer"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.gfx::GpuMemoryBuffer"* %1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media32ScopedNV12GpuMemoryBufferMappingD2Ev(%"class.media::ScopedNV12GpuMemoryBufferMapping"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ScopedNV12GpuMemoryBufferMapping", %"class.media::ScopedNV12GpuMemoryBufferMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::GpuMemoryBuffer"*, %"class.gfx::GpuMemoryBuffer"** %2, align 8
  %4 = bitcast %"class.gfx::GpuMemoryBuffer"* %3 to void (%"class.gfx::GpuMemoryBuffer"*)***
  %5 = load void (%"class.gfx::GpuMemoryBuffer"*)**, void (%"class.gfx::GpuMemoryBuffer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %5, i64 4
  %7 = load void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %6, align 8
  tail call void %7(%"class.gfx::GpuMemoryBuffer"* %3) #4
  %8 = load %"class.gfx::GpuMemoryBuffer"*, %"class.gfx::GpuMemoryBuffer"** %2, align 8
  store %"class.gfx::GpuMemoryBuffer"* null, %"class.gfx::GpuMemoryBuffer"** %2, align 8
  %9 = icmp eq %"class.gfx::GpuMemoryBuffer"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.gfx::GpuMemoryBuffer"* %8 to void (%"class.gfx::GpuMemoryBuffer"*)***
  %12 = load void (%"class.gfx::GpuMemoryBuffer"*)**, void (%"class.gfx::GpuMemoryBuffer"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %12, i64 1
  %14 = load void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %13, align 8
  tail call void %14(%"class.gfx::GpuMemoryBuffer"* nonnull %8) #4
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5media32ScopedNV12GpuMemoryBufferMapping7y_planeEv(%"class.media::ScopedNV12GpuMemoryBufferMapping"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ScopedNV12GpuMemoryBufferMapping", %"class.media::ScopedNV12GpuMemoryBufferMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::GpuMemoryBuffer"*, %"class.gfx::GpuMemoryBuffer"** %2, align 8
  %4 = bitcast %"class.gfx::GpuMemoryBuffer"* %3 to i8* (%"class.gfx::GpuMemoryBuffer"*, i64)***
  %5 = load i8* (%"class.gfx::GpuMemoryBuffer"*, i64)**, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)** %5, i64 3
  %7 = load i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)** %6, align 8
  %8 = tail call i8* %7(%"class.gfx::GpuMemoryBuffer"* %3, i64 0) #4
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5media32ScopedNV12GpuMemoryBufferMapping8uv_planeEv(%"class.media::ScopedNV12GpuMemoryBufferMapping"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ScopedNV12GpuMemoryBufferMapping", %"class.media::ScopedNV12GpuMemoryBufferMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::GpuMemoryBuffer"*, %"class.gfx::GpuMemoryBuffer"** %2, align 8
  %4 = bitcast %"class.gfx::GpuMemoryBuffer"* %3 to i8* (%"class.gfx::GpuMemoryBuffer"*, i64)***
  %5 = load i8* (%"class.gfx::GpuMemoryBuffer"*, i64)**, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)** %5, i64 3
  %7 = load i8* (%"class.gfx::GpuMemoryBuffer"*, i64)*, i8* (%"class.gfx::GpuMemoryBuffer"*, i64)** %6, align 8
  %8 = tail call i8* %7(%"class.gfx::GpuMemoryBuffer"* %3, i64 1) #4
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media32ScopedNV12GpuMemoryBufferMapping8y_strideEv(%"class.media::ScopedNV12GpuMemoryBufferMapping"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ScopedNV12GpuMemoryBufferMapping", %"class.media::ScopedNV12GpuMemoryBufferMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::GpuMemoryBuffer"*, %"class.gfx::GpuMemoryBuffer"** %2, align 8
  %4 = bitcast %"class.gfx::GpuMemoryBuffer"* %3 to i32 (%"class.gfx::GpuMemoryBuffer"*, i64)***
  %5 = load i32 (%"class.gfx::GpuMemoryBuffer"*, i64)**, i32 (%"class.gfx::GpuMemoryBuffer"*, i64)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::GpuMemoryBuffer"*, i64)*, i32 (%"class.gfx::GpuMemoryBuffer"*, i64)** %5, i64 7
  %7 = load i32 (%"class.gfx::GpuMemoryBuffer"*, i64)*, i32 (%"class.gfx::GpuMemoryBuffer"*, i64)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::GpuMemoryBuffer"* %3, i64 0) #4
  %9 = sext i32 %8 to i64
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media32ScopedNV12GpuMemoryBufferMapping9uv_strideEv(%"class.media::ScopedNV12GpuMemoryBufferMapping"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ScopedNV12GpuMemoryBufferMapping", %"class.media::ScopedNV12GpuMemoryBufferMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::GpuMemoryBuffer"*, %"class.gfx::GpuMemoryBuffer"** %2, align 8
  %4 = bitcast %"class.gfx::GpuMemoryBuffer"* %3 to i32 (%"class.gfx::GpuMemoryBuffer"*, i64)***
  %5 = load i32 (%"class.gfx::GpuMemoryBuffer"*, i64)**, i32 (%"class.gfx::GpuMemoryBuffer"*, i64)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::GpuMemoryBuffer"*, i64)*, i32 (%"class.gfx::GpuMemoryBuffer"*, i64)** %5, i64 7
  %7 = load i32 (%"class.gfx::GpuMemoryBuffer"*, i64)*, i32 (%"class.gfx::GpuMemoryBuffer"*, i64)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::GpuMemoryBuffer"* %3, i64 1) #4
  %9 = sext i32 %8 to i64
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media27AllocateNV12GpuMemoryBufferEPNS_18VideoCaptureDevice6ClientERKN3gfx4SizeEPN3gpu22GpuMemoryBufferSupportEPNSt3__110unique_ptrINS3_15GpuMemoryBufferENSA_14default_deleteISC_EEEEPNS1_6BufferE(%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"* dereferenceable(8), %"class.gpu::GpuMemoryBufferSupport"*, %"class.std::__1::unique_ptr"*, %"struct.media::VideoCaptureDevice::Client::Buffer"*) local_unnamed_addr #0 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"struct.gfx::GpuMemoryBufferHandle", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %3, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #4
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  br label %14

14:                                               ; preds = %5, %11
  %15 = icmp eq %"struct.media::VideoCaptureDevice::Client::Buffer"* %4, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %14, %16
  %20 = bitcast %"class.media::VideoCaptureDevice::Client"* %0 to i32 (%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"*, i32, i32, %"struct.media::VideoCaptureDevice::Client::Buffer"*)***
  %21 = load i32 (%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"*, i32, i32, %"struct.media::VideoCaptureDevice::Client::Buffer"*)**, i32 (%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"*, i32, i32, %"struct.media::VideoCaptureDevice::Client::Buffer"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"*, i32, i32, %"struct.media::VideoCaptureDevice::Client::Buffer"*)*, i32 (%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"*, i32, i32, %"struct.media::VideoCaptureDevice::Client::Buffer"*)** %21, i64 5
  %23 = load i32 (%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"*, i32, i32, %"struct.media::VideoCaptureDevice::Client::Buffer"*)*, i32 (%"class.media::VideoCaptureDevice::Client"*, %"class.gfx::Size"*, i32, i32, %"struct.media::VideoCaptureDevice::Client::Buffer"*)** %22, align 8
  %24 = call i32 %23(%"class.media::VideoCaptureDevice::Client"* %0, %"class.gfx::Size"* dereferenceable(8) %1, i32 6, i32 0, %"struct.media::VideoCaptureDevice::Client::Buffer"* %4) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %50

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.media::VideoCaptureDevice::Client::Buffer", %"struct.media::VideoCaptureDevice::Client::Buffer"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"** %27, align 8
  %29 = bitcast %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"* %28 to void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*)***
  %30 = load void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*)**, void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*)*, void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*)** %30, i64 5
  %32 = load void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*)*, void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"*)** %31, align 8
  call void %32(%"struct.gfx::GpuMemoryBufferHandle"* nonnull sret %8, %"class.media::VideoCaptureDevice::Client::Buffer::HandleProvider"* %28) #4
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8, !alias.scope !2
  %34 = bitcast %"class.gpu::GpuMemoryBufferSupport"* %2 to %"class.gpu::GpuMemoryBufferImpl"* (%"class.gpu::GpuMemoryBufferSupport"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32, i32, %"class.base::OnceCallback"*, %"class.gpu::GpuMemoryBufferManager"*, i64)***
  %35 = load %"class.gpu::GpuMemoryBufferImpl"* (%"class.gpu::GpuMemoryBufferSupport"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32, i32, %"class.base::OnceCallback"*, %"class.gpu::GpuMemoryBufferManager"*, i64)**, %"class.gpu::GpuMemoryBufferImpl"* (%"class.gpu::GpuMemoryBufferSupport"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32, i32, %"class.base::OnceCallback"*, %"class.gpu::GpuMemoryBufferManager"*, i64)*** %34, align 8
  %36 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl"* (%"class.gpu::GpuMemoryBufferSupport"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32, i32, %"class.base::OnceCallback"*, %"class.gpu::GpuMemoryBufferManager"*, i64)*, %"class.gpu::GpuMemoryBufferImpl"* (%"class.gpu::GpuMemoryBufferSupport"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32, i32, %"class.base::OnceCallback"*, %"class.gpu::GpuMemoryBufferManager"*, i64)** %35, i64 2
  %37 = load %"class.gpu::GpuMemoryBufferImpl"* (%"class.gpu::GpuMemoryBufferSupport"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32, i32, %"class.base::OnceCallback"*, %"class.gpu::GpuMemoryBufferManager"*, i64)*, %"class.gpu::GpuMemoryBufferImpl"* (%"class.gpu::GpuMemoryBufferSupport"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"*, i32, i32, %"class.base::OnceCallback"*, %"class.gpu::GpuMemoryBufferManager"*, i64)** %36, align 8
  %38 = call %"class.gpu::GpuMemoryBufferImpl"* %37(%"class.gpu::GpuMemoryBufferSupport"* %2, %"struct.gfx::GpuMemoryBufferHandle"* nonnull %8, %"class.gfx::Size"* dereferenceable(8) %1, i32 13, i32 10, %"class.base::OnceCallback"* nonnull %9, %"class.gpu::GpuMemoryBufferManager"* null, i64 0) #4
  %39 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.gfx::GpuMemoryBuffer"*, %"class.gfx::GpuMemoryBuffer"** %40, align 8
  store %"class.gfx::GpuMemoryBuffer"* %39, %"class.gfx::GpuMemoryBuffer"** %40, align 8
  %42 = icmp eq %"class.gfx::GpuMemoryBuffer"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %26
  %44 = bitcast %"class.gfx::GpuMemoryBuffer"* %41 to void (%"class.gfx::GpuMemoryBuffer"*)***
  %45 = load void (%"class.gfx::GpuMemoryBuffer"*)**, void (%"class.gfx::GpuMemoryBuffer"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %45, i64 1
  %47 = load void (%"class.gfx::GpuMemoryBuffer"*)*, void (%"class.gfx::GpuMemoryBuffer"*)** %46, align 8
  call void %47(%"class.gfx::GpuMemoryBuffer"* nonnull %41) #4
  br label %48

48:                                               ; preds = %43, %26
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #4
  call void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"* nonnull %8) #4
  br label %50

50:                                               ; preds = %19, %48
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12NullCallbackcvNS_12OnceCallbackIFT_DpT0_EEEIvJRKN3gpu9SyncTokenEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12NullCallbackcvNS_12OnceCallbackIFT_DpT0_EEEIvJRKN3gpu9SyncTokenEEEEv"}
