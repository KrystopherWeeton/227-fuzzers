; ModuleID = '../../media/learning/common/media_learning_tasks.cc'
source_filename = "../../media/learning/common/media_learning_tasks.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::learning::LearningTask" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::vector", %"struct.media::learning::LearningTask::ValueDescription", i64, double, %"class.absl::optional", i64, i8, double, i8, i8, i8, double, i32, i8, double, double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.media::learning::LearningTask::ValueDescription"* }
%"struct.media::learning::LearningTask::ValueDescription" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%union.anon.6 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@_ZN5media8learning9tasknamesL9kWillPlayE = internal constant [22 x i8] c"MediaLearningWillPlay\00", align 16
@_ZN5media8learning9tasknamesL22kConsecutiveBadWindowsE = internal constant [35 x i8] c"MediaLearningConsecutiveBadWindows\00", align 16
@_ZN5media8learning9tasknamesL16kConsecutiveNNRsE = internal constant [29 x i8] c"MediaLearningConsecutiveNNRs\00", align 16
@_ZZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task = internal global %"struct.media::learning::LearningTask" zeroinitializer, align 8
@_ZGVZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZZN5media8learningL15GetWillPlayTaskEvE5task_ = internal global %"struct.media::learning::LearningTask" zeroinitializer, align 8
@_ZGVZN5media8learningL15GetWillPlayTaskEvE5task_ = internal global i64 0, align 8
@_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_ = internal global %"struct.media::learning::LearningTask" zeroinitializer, align 8
@_ZGVZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_ = internal global i64 0, align 8
@.str = private unnamed_addr constant [16 x i8] c"max_bad_windows\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"codec\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"fps\00", align 1
@_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ = internal global %"struct.media::learning::LearningTask" zeroinitializer, align 8
@_ZGVZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"total_playback_nnrs\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(176) %"struct.media::learning::LearningTask"* @_ZN5media8learning18MediaLearningTasks3GetEPKc(i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca [3 x i8], align 4
  %3 = alloca [7 x i8], align 8
  %4 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN5media8learning9tasknamesL9kWillPlayE, i64 0, i64 0)) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN5media8learningL15GetWillPlayTaskEvE5task_ to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5media8learningL15GetWillPlayTaskEvE5task_) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  tail call void @_ZN5media8learning12LearningTaskC1Ev(%"struct.media::learning::LearningTask"* nonnull @_ZZN5media8learningL15GetWillPlayTaskEvE5task_) #12
  %13 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.media::learning::LearningTask"*)* @_ZN5media8learning12LearningTaskD1Ev to void (i8*)*), i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_ to i8*), i8* nonnull @__dso_handle) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5media8learningL15GetWillPlayTaskEvE5task_) #12
  br label %14

14:                                               ; preds = %12, %9, %6
  %15 = load i64, i64* bitcast (%"struct.media::learning::LearningTask::ValueDescription"** getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_, i64 0, i32 2, i32 0, i32 1) to i64*), align 8
  %16 = load i64, i64* bitcast (%"class.std::__1::vector"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_, i64 0, i32 2) to i64*), align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %18, label %81

18:                                               ; preds = %14
  %19 = load i8, i8* getelementptr (%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_ to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*), i64 0, i32 1, i32 0), align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  store i64 21, i64* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1), align 8
  %22 = load i8*, i8** getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8
  br label %24

23:                                               ; preds = %18
  store i8 21, i8* getelementptr (%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_ to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*), i64 0, i32 1, i32 0), align 1
  br label %24

24:                                               ; preds = %23, %21
  %25 = phi i8* [ %22, %21 ], [ bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL15GetWillPlayTaskEvE5task_ to i8*), %23 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 16 getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN5media8learning9tasknamesL9kWillPlayE, i64 0, i64 0), i64 21, i1 false) #12
  %26 = getelementptr inbounds i8, i8* %25, i64 21
  store i8 0, i8* %26, align 1
  br label %81

27:                                               ; preds = %1
  %28 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN5media8learning9tasknamesL22kConsecutiveBadWindowsE, i64 0, i64 0)) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %50

30:                                               ; preds = %27
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_ to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %38, !prof !2

33:                                               ; preds = %30
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  tail call void @_ZN5media8learning12LearningTaskC1Ev(%"struct.media::learning::LearningTask"* nonnull @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_) #12
  %37 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.media::learning::LearningTask"*)* @_ZN5media8learning12LearningTaskD1Ev to void (i8*)*), i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_ to i8*), i8* nonnull @__dso_handle) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_) #12
  br label %38

38:                                               ; preds = %36, %33, %30
  %39 = load i64, i64* bitcast (%"struct.media::learning::LearningTask::ValueDescription"** getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 2, i32 0, i32 1) to i64*), align 8
  %40 = load i64, i64* bitcast (%"class.std::__1::vector"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 2) to i64*), align 8
  %41 = icmp eq i64 %39, %40
  br i1 %41, label %42, label %81

42:                                               ; preds = %38
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN5media8learning9tasknamesL22kConsecutiveBadWindowsE, i64 0, i64 0), i64 34) #12
  store i32 0, i32* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 1), align 8
  %44 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %44)
  %45 = load i8, i8* getelementptr (%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* bitcast (%"struct.media::learning::LearningTask::ValueDescription"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 3) to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*), i64 0, i32 1, i32 0), align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = load i8*, i8** getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8
  tail call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %47, %42
  store i8 109, i8* bitcast (%"struct.media::learning::LearningTask::ValueDescription"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 3) to i8*), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds (i8, i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_ to i8*), i64 57), i8* nonnull align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 1), i64 14, i1 false)
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_ to i8*), i64 71), align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2) to i8*), i8* nonnull align 8 %44, i64 7, i1 false)
  store i8 15, i8* getelementptr inbounds (i8, i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_ to i8*), i64 79), align 1
  store i64 4294967297, i64* bitcast (i32* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 3, i32 1) to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %44)
  tail call fastcc void @_ZN5media8learningL16PushWMPIFeaturesERNS0_12LearningTaskE(%"struct.media::learning::LearningTask"* nonnull dereferenceable(176) @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_) #12
  store i8 1, i8* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 15), align 4
  store <2 x double> <double 0.000000e+00, double 1.000000e+02>, <2 x double>* bitcast (double* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, i64 0, i32 16) to <2 x double>*), align 8
  br label %81

50:                                               ; preds = %27
  %51 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN5media8learning9tasknamesL16kConsecutiveNNRsE, i64 0, i64 0)) #11
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %73

53:                                               ; preds = %50
  %54 = load atomic i8, i8* bitcast (i64* @_ZGVZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ to i8*) acquire, align 8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %61, !prof !2

56:                                               ; preds = %53
  %57 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_) #12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  tail call void @_ZN5media8learning12LearningTaskC1Ev(%"struct.media::learning::LearningTask"* nonnull @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_) #12
  %60 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.media::learning::LearningTask"*)* @_ZN5media8learning12LearningTaskD1Ev to void (i8*)*), i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ to i8*), i8* nonnull @__dso_handle) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_) #12
  br label %61

61:                                               ; preds = %59, %56, %53
  %62 = load i64, i64* bitcast (%"struct.media::learning::LearningTask::ValueDescription"** getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 2, i32 0, i32 1) to i64*), align 8
  %63 = load i64, i64* bitcast (%"class.std::__1::vector"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 2) to i64*), align 8
  %64 = icmp eq i64 %62, %63
  br i1 %64, label %65, label %81

65:                                               ; preds = %61
  %66 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN5media8learning9tasknamesL16kConsecutiveNNRsE, i64 0, i64 0), i64 28) #12
  store i32 0, i32* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 1), align 8
  %67 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %67)
  %68 = load i8, i8* getelementptr (%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* bitcast (%"struct.media::learning::LearningTask::ValueDescription"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 3) to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*), i64 0, i32 1, i32 0), align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = load i8*, i8** getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %70, %65
  store i8 116, i8* bitcast (%"struct.media::learning::LearningTask::ValueDescription"* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 3) to i8*), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds (i8, i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ to i8*), i64 57), i8* nonnull align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 1), i64 18, i1 false)
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ to i8*), i64 75), align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 getelementptr inbounds (i8, i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ to i8*), i64 76), i8* nonnull align 4 %67, i64 3, i1 false)
  store i8 19, i8* getelementptr inbounds (i8, i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_ to i8*), i64 79), align 1
  store i64 4294967297, i64* bitcast (i32* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 3, i32 1) to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %67)
  tail call fastcc void @_ZN5media8learningL16PushWMPIFeaturesERNS0_12LearningTaskE(%"struct.media::learning::LearningTask"* nonnull dereferenceable(176) @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_) #12
  store i8 1, i8* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 15), align 4
  store <2 x double> <double 0.000000e+00, double 1.000000e+02>, <2 x double>* bitcast (double* getelementptr inbounds (%"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, i64 0, i32 16) to <2 x double>*), align 8
  br label %81

73:                                               ; preds = %50
  %74 = load atomic i8, i8* bitcast (i64* @_ZGVZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task to i8*) acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %81, !prof !2

76:                                               ; preds = %73
  %77 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task) #12
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  tail call void @_ZN5media8learning12LearningTaskC1Ev(%"struct.media::learning::LearningTask"* nonnull @_ZZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task) #12
  %80 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.media::learning::LearningTask"*)* @_ZN5media8learning12LearningTaskD1Ev to void (i8*)*), i8* bitcast (%"struct.media::learning::LearningTask"* @_ZZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task to i8*), i8* nonnull @__dso_handle) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task) #12
  br label %81

81:                                               ; preds = %72, %61, %49, %38, %24, %14, %73, %79, %76
  %82 = phi %"struct.media::learning::LearningTask"* [ @_ZZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task, %76 ], [ @_ZZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task, %79 ], [ @_ZZN5media8learning18MediaLearningTasks3GetEPKcE10empty_task, %73 ], [ @_ZZN5media8learningL15GetWillPlayTaskEvE5task_, %14 ], [ @_ZZN5media8learningL15GetWillPlayTaskEvE5task_, %24 ], [ @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, %38 ], [ @_ZZN5media8learningL28GetConsecutiveBadWindowsTaskEvE5task_, %49 ], [ @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, %61 ], [ @_ZZN5media8learningL22GetConsecutiveNNRsTaskEvE5task_, %72 ]
  ret %"struct.media::learning::LearningTask"* %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

declare void @_ZN5media8learning12LearningTaskC1Ev(%"struct.media::learning::LearningTask"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5media8learning12LearningTaskD1Ev(%"struct.media::learning::LearningTask"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning18MediaLearningTasks8RegisterEN4base17RepeatingCallbackIFvRKNS0_12LearningTaskEEEE(%"class.base::RepeatingCallback"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(176) %"struct.media::learning::LearningTask"* @_ZN5media8learning18MediaLearningTasks3GetEPKc(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN5media8learning9tasknamesL9kWillPlayE, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %6 = bitcast void ()** %5 to void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)**
  %7 = load void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)** %6, align 8
  tail call void %7(%"class.base::internal::BindStateBase"* %4, %"struct.media::learning::LearningTask"* nonnull dereferenceable(176) %2) #12
  %8 = tail call dereferenceable(176) %"struct.media::learning::LearningTask"* @_ZN5media8learning18MediaLearningTasks3GetEPKc(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN5media8learning9tasknamesL22kConsecutiveBadWindowsE, i64 0, i64 0))
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %11 = bitcast void ()** %10 to void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)**
  %12 = load void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)** %11, align 8
  tail call void %12(%"class.base::internal::BindStateBase"* %9, %"struct.media::learning::LearningTask"* nonnull dereferenceable(176) %8) #12
  %13 = tail call dereferenceable(176) %"struct.media::learning::LearningTask"* @_ZN5media8learning18MediaLearningTasks3GetEPKc(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN5media8learning9tasknamesL16kConsecutiveNNRsE, i64 0, i64 0))
  %14 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)**
  %17 = load void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.media::learning::LearningTask"*)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, %"struct.media::learning::LearningTask"* nonnull dereferenceable(176) %13) #12
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5media8learningL16PushWMPIFeaturesERNS0_12LearningTaskE(%"struct.media::learning::LearningTask"* dereferenceable(176)) unnamed_addr #0 {
  %2 = alloca %"struct.media::learning::LearningTask::ValueDescription", align 8
  %3 = alloca %"struct.media::learning::LearningTask::ValueDescription", align 8
  %4 = alloca %"struct.media::learning::LearningTask::ValueDescription", align 8
  %5 = alloca %"struct.media::learning::LearningTask::ValueDescription", align 8
  %6 = getelementptr inbounds %"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* %0, i64 0, i32 2
  %7 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %8 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 5, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5, i1 false) #12
  %10 = getelementptr inbounds i8, i8* %7, i64 5
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %2, i64 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %2, i64 0, i32 2
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %13, align 8
  %15 = getelementptr inbounds %"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %16 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %15, align 8
  %17 = icmp ult %"struct.media::learning::LearningTask::ValueDescription"* %14, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %1
  %19 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %7, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %14, i64 0, i32 1
  %21 = bitcast i32* %11 to i64*
  %22 = bitcast i32* %20 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %14, i64 1
  %25 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %24 to i64
  %26 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %13 to i64*
  store i64 %25, i64* %26, align 8
  br label %33

27:                                               ; preds = %1
  call void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* %6, %"struct.media::learning::LearningTask::ValueDescription"* nonnull dereferenceable(32) %2) #12
  %28 = load i8, i8* %9, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %18, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  %34 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #12
  %35 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 7, i8* %36, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7, i1 false) #12
  %37 = getelementptr inbounds i8, i8* %34, i64 7
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %3, i64 0, i32 1
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %3, i64 0, i32 2
  store i32 1, i32* %39, align 4
  %40 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %13, align 8
  %41 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %15, align 8
  %42 = icmp ult %"struct.media::learning::LearningTask::ValueDescription"* %40, %41
  br i1 %42, label %43, label %52

43:                                               ; preds = %33
  %44 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %34, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #12
  %45 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %40, i64 0, i32 1
  %46 = bitcast i32* %38 to i64*
  %47 = bitcast i32* %45 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %40, i64 1
  %50 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %49 to i64
  %51 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %13 to i64*
  store i64 %50, i64* %51, align 8
  br label %58

52:                                               ; preds = %33
  call void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* %6, %"struct.media::learning::LearningTask::ValueDescription"* nonnull dereferenceable(32) %3) #12
  %53 = load i8, i8* %36, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %43, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #12
  %59 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #12
  %60 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 5, i8* %61, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false) #12
  %62 = getelementptr inbounds i8, i8* %59, i64 5
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %4, i64 0, i32 1
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %4, i64 0, i32 2
  store i32 1, i32* %64, align 4
  %65 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %13, align 8
  %66 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %15, align 8
  %67 = icmp ult %"struct.media::learning::LearningTask::ValueDescription"* %65, %66
  br i1 %67, label %68, label %77

68:                                               ; preds = %58
  %69 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %59, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #12
  %70 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %65, i64 0, i32 1
  %71 = bitcast i32* %63 to i64*
  %72 = bitcast i32* %70 to i64*
  %73 = load i64, i64* %71, align 8
  store i64 %73, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %65, i64 1
  %75 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %74 to i64
  %76 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %13 to i64*
  store i64 %75, i64* %76, align 8
  br label %83

77:                                               ; preds = %58
  call void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* %6, %"struct.media::learning::LearningTask::ValueDescription"* nonnull dereferenceable(32) %4) #12
  %78 = load i8, i8* %61, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %68, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #12
  %84 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #12
  %85 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 3, i8* %86, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i1 false) #12
  %87 = getelementptr inbounds i8, i8* %84, i64 3
  store i8 0, i8* %87, align 1
  %88 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %5, i64 0, i32 1
  store i32 1, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %5, i64 0, i32 2
  store i32 1, i32* %89, align 4
  %90 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %13, align 8
  %91 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %15, align 8
  %92 = icmp ult %"struct.media::learning::LearningTask::ValueDescription"* %90, %91
  br i1 %92, label %93, label %102

93:                                               ; preds = %83
  %94 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 8 %84, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 24, i1 false) #12
  %95 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %90, i64 0, i32 1
  %96 = bitcast i32* %88 to i64*
  %97 = bitcast i32* %95 to i64*
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %90, i64 1
  %100 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %99 to i64
  %101 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %13 to i64*
  store i64 %100, i64* %101, align 8
  br label %108

102:                                              ; preds = %83
  call void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* %6, %"struct.media::learning::LearningTask::ValueDescription"* nonnull dereferenceable(32) %5) #12
  %103 = load i8, i8* %86, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %93, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #12
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"*, %"struct.media::learning::LearningTask::ValueDescription"* dereferenceable(32)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.media::learning::LearningTask::ValueDescription"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %36, i64 %35
  %39 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %38 to i64
  %40 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %37 to i8*
  %41 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #12
  %42 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %1, i64 0, i32 1
  %44 = bitcast i32* %43 to i64*
  %45 = bitcast i32* %42 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %37, i64 1
  %48 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %50 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %49, align 8
  %51 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %50 to i64
  %52 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %3, align 8
  %53 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %52, %50
  br i1 %53, label %101, label %54

54:                                               ; preds = %34
  %55 = getelementptr %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %52, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = ptrtoint i8** %55 to i64
  %57 = sub i64 %56, %51
  %58 = and i64 %57, 32
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %37, i64 -1
  %62 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %52, i64 -1
  %63 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %61 to i8*
  %64 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #12
  %65 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %37, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %52, i64 -1, i32 1
  %67 = bitcast i32* %66 to i64*
  %68 = bitcast i32* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  br label %70

70:                                               ; preds = %60, %54
  %71 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ undef, %54 ], [ %61, %60 ]
  %72 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %37, %54 ], [ %61, %60 ]
  %73 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %52, %54 ], [ %62, %60 ]
  %74 = icmp ult i64 %57, 32
  br i1 %74, label %97, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %87, %75 ], [ %72, %70 ]
  %77 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %88, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %76, i64 -1
  %79 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %77, i64 -1
  %80 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %78 to i8*
  %81 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #12
  %82 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %76, i64 -1, i32 1
  %83 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %77, i64 -1, i32 1
  %84 = bitcast i32* %83 to i64*
  %85 = bitcast i32* %82 to i64*
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %76, i64 -2
  %88 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %77, i64 -2
  %89 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %87 to i8*
  %90 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #12
  %91 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %76, i64 -2, i32 1
  %92 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %77, i64 -2, i32 1
  %93 = bitcast i32* %92 to i64*
  %94 = bitcast i32* %91 to i64*
  %95 = load i64, i64* %93, align 8
  store i64 %95, i64* %94, align 8
  %96 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %88, %50
  br i1 %96, label %97, label %75

97:                                               ; preds = %75, %70
  %98 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %71, %70 ], [ %87, %75 ]
  %99 = load i64, i64* %6, align 8
  %100 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %3, align 8
  br label %101

101:                                              ; preds = %34, %97
  %102 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %100, %97 ], [ %50, %34 ]
  %103 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %98, %97 ], [ %37, %34 ]
  %104 = phi i64 [ %99, %97 ], [ %51, %34 ]
  %105 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %103 to i64
  store i64 %105, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %106 = inttoptr i64 %104 to %"struct.media::learning::LearningTask::ValueDescription"*
  %107 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %102, %106
  br i1 %107, label %120, label %108

108:                                              ; preds = %101, %118
  %109 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %110, %118 ], [ %102, %101 ]
  %110 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %109, i64 -1
  %111 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %115, %108
  %119 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %110, %106
  br i1 %119, label %120, label %108

120:                                              ; preds = %118, %101
  %121 = icmp eq i64 %104, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %120, %122
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
