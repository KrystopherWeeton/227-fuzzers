; ModuleID = '../../third_party/webrtc/modules/congestion_controller/goog_cc/link_capacity_estimator.cc'
source_filename = "../../third_party/webrtc/modules/congestion_controller/goog_cc/link_capacity_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::LinkCapacityEstimator" = type { %"class.absl::optional", double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }

@_ZN6webrtc21LinkCapacityEstimatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::LinkCapacityEstimator"*), void (%"class.webrtc::LinkCapacityEstimator"*)* @_ZN6webrtc21LinkCapacityEstimatorC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21LinkCapacityEstimatorC2Ev(%"class.webrtc::LinkCapacityEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 1
  store double 4.000000e-01, double* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6webrtc21LinkCapacityEstimator10UpperBoundEv(%"class.webrtc::LinkCapacityEstimator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 1
  %9 = load double, double* %8, align 8
  %10 = fmul double %7, %9
  %11 = tail call double @sqrt(double %10) #7
  %12 = fmul double %11, 3.000000e+00
  %13 = fadd double %7, %12
  %14 = fmul double %13, 1.000000e+03
  %15 = fcmp oeq double %14, 0x7FF0000000000000
  br i1 %15, label %20, label %16

16:                                               ; preds = %5
  %17 = fcmp oeq double %14, 0xFFF0000000000000
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = fptosi double %14 to i64
  br label %20

20:                                               ; preds = %1, %18, %16, %5
  %21 = phi i64 [ %19, %18 ], [ 9223372036854775807, %5 ], [ -9223372036854775808, %16 ], [ 9223372036854775807, %1 ]
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK6webrtc21LinkCapacityEstimator23deviation_estimate_kbpsEv(%"class.webrtc::LinkCapacityEstimator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #8
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 1
  %8 = load double, double* %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = load double, double* %9, align 8
  %11 = fmul double %8, %10
  %12 = tail call double @sqrt(double %11) #7
  ret double %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6webrtc21LinkCapacityEstimator10LowerBoundEv(%"class.webrtc::LinkCapacityEstimator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 1
  %9 = load double, double* %8, align 8
  %10 = fmul double %7, %9
  %11 = tail call double @sqrt(double %10) #7
  %12 = fmul double %11, 3.000000e+00
  %13 = fsub double %7, %12
  %14 = fcmp ogt double %13, 0.000000e+00
  %15 = select i1 %14, double %13, double 0.000000e+00
  %16 = fmul double %15, 1.000000e+03
  %17 = fcmp oeq double %16, 0x7FF0000000000000
  br i1 %17, label %22, label %18

18:                                               ; preds = %5
  %19 = fcmp oeq double %16, 0xFFF0000000000000
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = fptosi double %16 to i64
  br label %22

22:                                               ; preds = %1, %20, %18, %5
  %23 = phi i64 [ %21, %20 ], [ 9223372036854775807, %5 ], [ -9223372036854775808, %18 ], [ 0, %1 ]
  ret i64 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21LinkCapacityEstimator5ResetEv(%"class.webrtc::LinkCapacityEstimator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21LinkCapacityEstimator17OnOveruseDetectedENS_8DataRateE(%"class.webrtc::LinkCapacityEstimator"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = add nsw i64 %1, 500
  %4 = sdiv i64 %3, 1000
  %5 = sitofp i64 %4 to double
  %6 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load double, double* %10, align 8
  %12 = fmul double %11, 0x3FEE666666666666
  %13 = fmul double %5, 5.000000e-02
  %14 = fadd double %13, %12
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi double [ %14, %9 ], [ %5, %2 ]
  store i8 1, i8* %6, align 8
  %17 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %16, double* %17, align 8
  %18 = fcmp olt double %16, 1.000000e+00
  %19 = select i1 %18, double 1.000000e+00, double %16
  %20 = fsub double %16, %5
  %21 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 1
  %22 = load double, double* %21, align 8
  %23 = fmul double %22, 0x3FEE666666666666
  %24 = fmul double %20, 5.000000e-02
  %25 = fmul double %20, %24
  %26 = fdiv double %25, %19
  %27 = fadd double %23, %26
  %28 = fcmp ugt double %27, 0x3FD99999A0000000
  %29 = fcmp oge double %27, 2.500000e+00
  %30 = select i1 %29, double 2.500000e+00, double %27
  %31 = select i1 %28, double %30, double 0x3FD99999A0000000
  store double %31, double* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21LinkCapacityEstimator6UpdateENS_8DataRateEd(%"class.webrtc::LinkCapacityEstimator"* nocapture, i64, double) local_unnamed_addr #1 align 2 {
  %4 = add nsw i64 %1, 500
  %5 = sdiv i64 %4, 1000
  %6 = sitofp i64 %5 to double
  %7 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = fsub double 1.000000e+00, %2
  %12 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = load double, double* %12, align 8
  %14 = fmul double %11, %13
  %15 = fmul double %6, %2
  %16 = fadd double %15, %14
  br label %17

17:                                               ; preds = %10, %3
  %18 = phi double [ %16, %10 ], [ %6, %3 ]
  store i8 1, i8* %7, align 8
  %19 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %18, double* %19, align 8
  %20 = fcmp olt double %18, 1.000000e+00
  %21 = select i1 %20, double 1.000000e+00, double %18
  %22 = fsub double %18, %6
  %23 = fsub double 1.000000e+00, %2
  %24 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 1
  %25 = load double, double* %24, align 8
  %26 = fmul double %23, %25
  %27 = fmul double %22, %2
  %28 = fmul double %22, %27
  %29 = fdiv double %28, %21
  %30 = fadd double %26, %29
  %31 = fcmp ugt double %30, 0x3FD99999A0000000
  %32 = fcmp oge double %30, 2.500000e+00
  %33 = select i1 %32, double 2.500000e+00, double %30
  %34 = select i1 %31, double %33, double 0x3FD99999A0000000
  store double %34, double* %24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21LinkCapacityEstimator11OnProbeRateENS_8DataRateE(%"class.webrtc::LinkCapacityEstimator"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = add nsw i64 %1, 500
  %4 = sdiv i64 %3, 1000
  %5 = sitofp i64 %4 to double
  %6 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load double, double* %10, align 8
  %12 = fmul double %11, 5.000000e-01
  %13 = fmul double %5, 5.000000e-01
  %14 = fadd double %13, %12
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi double [ %14, %9 ], [ %5, %2 ]
  store i8 1, i8* %6, align 8
  %17 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %16, double* %17, align 8
  %18 = fcmp olt double %16, 1.000000e+00
  %19 = select i1 %18, double 1.000000e+00, double %16
  %20 = fsub double %16, %5
  %21 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 1
  %22 = load double, double* %21, align 8
  %23 = fmul double %22, 5.000000e-01
  %24 = fmul double %20, 5.000000e-01
  %25 = fmul double %20, %24
  %26 = fdiv double %25, %19
  %27 = fadd double %23, %26
  %28 = fcmp ugt double %27, 0x3FD99999A0000000
  %29 = fcmp oge double %27, 2.500000e+00
  %30 = select i1 %29, double 2.500000e+00, double %27
  %31 = select i1 %28, double %30, double 0x3FD99999A0000000
  store double %31, double* %21, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc21LinkCapacityEstimator12has_estimateEv(%"class.webrtc::LinkCapacityEstimator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6webrtc21LinkCapacityEstimator8estimateEv(%"class.webrtc::LinkCapacityEstimator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6, !prof !3

5:                                                ; preds = %1
  tail call void @llvm.trap() #7
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::LinkCapacityEstimator", %"class.webrtc::LinkCapacityEstimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load double, double* %7, align 8
  %9 = fmul double %8, 1.000000e+03
  %10 = fcmp oeq double %9, 0x7FF0000000000000
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = fcmp oeq double %9, 0xFFF0000000000000
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = fptosi double %9 to i64
  br label %15

15:                                               ; preds = %6, %11, %13
  %16 = phi i64 [ %14, %13 ], [ 9223372036854775807, %6 ], [ -9223372036854775808, %11 ]
  ret i64 %16
}

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
