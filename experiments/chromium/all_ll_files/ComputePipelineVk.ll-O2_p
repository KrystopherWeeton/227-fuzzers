; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/ComputePipelineVk.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/ComputePipelineVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::vulkan::ComputePipeline" = type { %"class.dawn_native::ComputePipelineBase", %"class.dawn_native::vulkan::detail::VkHandle.407" }
%"class.dawn_native::ComputePipelineBase" = type { %"class.dawn_native::PipelineBase" }
%"class.dawn_native::PipelineBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.dawn_native::PerStage", %class.Ref.396, %"class.ityp::array.398" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %class.Ref.22, %"class.std::__1::unique_ptr.24", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.22 = type { %class.RefBase.23 }
%class.RefBase.23 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.30" }
%"struct.std::__1::array.30" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.31" }
%"class.std::__1::bitset.31" = type { %"class.std::__1::__bitset.32" }
%"class.std::__1::__bitset.32" = type { i64 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array.378" }
%"struct.std::__1::array.378" = type { [3 x %"struct.dawn_native::ProgrammableStage"] }
%"struct.dawn_native::ProgrammableStage" = type { %class.Ref.379, %"class.std::__1::basic_string", %"struct.dawn_native::EntryPointMetadata"* }
%class.Ref.379 = type { %class.RefBase.380 }
%class.RefBase.380 = type { %"class.dawn_native::ShaderModuleBase"* }
%"class.dawn_native::ShaderModuleBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.std::__1::vector.314", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", %"class.std::__1::vector.314", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.356" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.326", %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.341", [4 x i8] }>
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328", %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i64 }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { float }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { i32*, i32*, %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { i32* }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.tint::Program"* }
%"class.tint::Program" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.dawn_native::TintSource"* }
%"class.dawn_native::TintSource" = type opaque
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.dawn_native::OwnedCompilationMessages"* }
%"class.dawn_native::OwnedCompilationMessages" = type { %struct.WGPUCompilationInfo, %"class.std::__1::vector.359", %"class.std::__1::vector.366" }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.366" = type { %"class.std::__1::__vector_base.367" }
%"class.std::__1::__vector_base.367" = type { %struct.WGPUCompilationMessage*, %struct.WGPUCompilationMessage*, %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %struct.WGPUCompilationMessage* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::EntryPointMetadata" = type { %"class.ityp::array.381", %"class.std::__1::bitset.391", %"class.ityp::array.393", %"class.ityp::bitset.395", %"struct.dawn_native::Origin3D", i32 }
%"class.ityp::array.381" = type { %"struct.std::__1::array.382" }
%"struct.std::__1::array.382" = type { [4 x %"class.std::__1::map"] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::bitset.391" = type { %"class.std::__1::__bitset.392" }
%"class.std::__1::__bitset.392" = type { i64 }
%"class.ityp::array.393" = type { %"struct.std::__1::array.394" }
%"struct.std::__1::array.394" = type { [4 x i32] }
%"class.ityp::bitset.395" = type { %"class.std::__1::bitset.312" }
%"class.std::__1::bitset.312" = type { %"class.std::__1::__bitset.313" }
%"class.std::__1::__bitset.313" = type { i64 }
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%class.Ref.396 = type { %class.RefBase.397 }
%class.RefBase.397 = type { %"class.dawn_native::PipelineLayoutBase"* }
%"class.dawn_native::PipelineLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"class.ityp::array", %"class.ityp::bitset.311" }
%"class.ityp::array" = type { %"struct.std::__1::array.310" }
%"struct.std::__1::array.310" = type { [4 x %class.Ref.8] }
%"class.ityp::bitset.311" = type { %"class.std::__1::bitset.312" }
%"class.ityp::array.398" = type { %"struct.std::__1::array.399" }
%"struct.std::__1::array.399" = type { [4 x %"class.std::__1::vector.400"] }
%"class.std::__1::vector.400" = type { %"class.std::__1::__vector_base.401" }
%"class.std::__1::__vector_base.401" = type { i64*, i64*, %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { i64* }
%"class.dawn_native::vulkan::detail::VkHandle.407" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%class.Result = type { i64 }
%"class.dawn_native::vulkan::Device" = type { %"class.dawn_native::DeviceBase", %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanDeviceInfo", %struct.VkDevice_T*, i32, %struct.VkQueue_T*, i32, %class.SerialQueue, %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.std::__1::queue", %"class.std::__1::vector.269", %class.SerialQueue.276, %"class.std::__1::vector.286", %"struct.dawn_native::vulkan::CommandRecordingContext" }
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstance_T = type opaque
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector", %"class.std::__1::vector.50", %"class.std::__1::vector.57", %"class.std::__1::vector.64" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.45" }
%"class.std::__1::bitset.45" = type { %"class.std::__1::__bitset.46" }
%"class.std::__1::__bitset.46" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %struct.VkLayerProperties* }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.73" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.dawn_native::vulkan::FencedDeleter"* }
%"class.dawn_native::vulkan::FencedDeleter" = type { %"class.dawn_native::vulkan::Device"*, %class.SerialQueue.81, %class.SerialQueue.91, %class.SerialQueue.101, %class.SerialQueue.111, %class.SerialQueue.121, %class.SerialQueue.131, %class.SerialQueue.141, %class.SerialQueue.151, %class.SerialQueue.161, %class.SerialQueue.171, %class.SerialQueue.181, %class.SerialQueue.191, %class.SerialQueue.201, %class.SerialQueue.211, %class.SerialQueue.221 }
%class.SerialQueue.81 = type { %class.SerialStorage.82 }
%class.SerialStorage.82 = type { %"class.std::__1::vector.83" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.std::__1::pair.85"*, %"struct.std::__1::pair.85"*, %"class.std::__1::__compressed_pair.86" }
%"struct.std::__1::pair.85" = type opaque
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::pair.85"* }
%class.SerialQueue.91 = type { %class.SerialStorage.92 }
%class.SerialStorage.92 = type { %"class.std::__1::vector.93" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"class.std::__1::__compressed_pair.96" }
%"struct.std::__1::pair.95" = type opaque
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::pair.95"* }
%class.SerialQueue.101 = type { %class.SerialStorage.102 }
%class.SerialStorage.102 = type { %"class.std::__1::vector.103" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type opaque
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%class.SerialQueue.111 = type { %class.SerialStorage.112 }
%class.SerialStorage.112 = type { %"class.std::__1::vector.113" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"struct.std::__1::pair.115"*, %"struct.std::__1::pair.115"*, %"class.std::__1::__compressed_pair.116" }
%"struct.std::__1::pair.115" = type opaque
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::pair.115"* }
%class.SerialQueue.121 = type { %class.SerialStorage.122 }
%class.SerialStorage.122 = type { %"class.std::__1::vector.123" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.std::__1::pair.125"*, %"struct.std::__1::pair.125"*, %"class.std::__1::__compressed_pair.126" }
%"struct.std::__1::pair.125" = type opaque
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::pair.125"* }
%class.SerialQueue.131 = type { %class.SerialStorage.132 }
%class.SerialStorage.132 = type { %"class.std::__1::vector.133" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair.135"*, %"struct.std::__1::pair.135"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair.135" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair.135"* }
%class.SerialQueue.141 = type { %class.SerialStorage.142 }
%class.SerialStorage.142 = type { %"class.std::__1::vector.143" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"*, %"class.std::__1::__compressed_pair.146" }
%"struct.std::__1::pair.145" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::pair.145"* }
%class.SerialQueue.151 = type { %class.SerialStorage.152 }
%class.SerialStorage.152 = type { %"class.std::__1::vector.153" }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair.155" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair.155"* }
%class.SerialQueue.161 = type { %class.SerialStorage.162 }
%class.SerialStorage.162 = type { %"class.std::__1::vector.163" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"struct.std::__1::pair.165"*, %"struct.std::__1::pair.165"*, %"class.std::__1::__compressed_pair.166" }
%"struct.std::__1::pair.165" = type opaque
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::pair.165"* }
%class.SerialQueue.171 = type { %class.SerialStorage.172 }
%class.SerialStorage.172 = type { %"class.std::__1::vector.173" }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.std::__1::pair.175"*, %"struct.std::__1::pair.175"*, %"class.std::__1::__compressed_pair.176" }
%"struct.std::__1::pair.175" = type opaque
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::pair.175"* }
%class.SerialQueue.181 = type { %class.SerialStorage.182 }
%class.SerialStorage.182 = type { %"class.std::__1::vector.183" }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"*, %"class.std::__1::__compressed_pair.186" }
%"struct.std::__1::pair.185" = type opaque
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::pair.185"* }
%class.SerialQueue.191 = type { %class.SerialStorage.192 }
%class.SerialStorage.192 = type { %"class.std::__1::vector.193" }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"*, %"class.std::__1::__compressed_pair.196" }
%"struct.std::__1::pair.195" = type opaque
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.std::__1::pair.195"* }
%class.SerialQueue.201 = type { %class.SerialStorage.202 }
%class.SerialStorage.202 = type { %"class.std::__1::vector.203" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.std::__1::pair.205"*, %"struct.std::__1::pair.205"*, %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::pair.205" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::pair.205"* }
%class.SerialQueue.211 = type { %class.SerialStorage.212 }
%class.SerialStorage.212 = type { %"class.std::__1::vector.213" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.std::__1::pair.215"*, %"struct.std::__1::pair.215"*, %"class.std::__1::__compressed_pair.216" }
%"struct.std::__1::pair.215" = type opaque
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::pair.215"* }
%class.SerialQueue.221 = type { %class.SerialStorage.222 }
%class.SerialStorage.222 = type { %"class.std::__1::vector.223" }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"struct.std::__1::pair.225"*, %"struct.std::__1::pair.225"*, %"class.std::__1::__compressed_pair.226" }
%"struct.std::__1::pair.225" = type opaque
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::pair.225"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.dawn_native::vulkan::ResourceMemoryAllocator"* }
%"class.dawn_native::vulkan::ResourceMemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.dawn_native::vulkan::RenderPassCache"* }
%"class.dawn_native::vulkan::RenderPassCache" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.dawn_native::vulkan::external_memory::Service"* }
%"class.dawn_native::vulkan::external_memory::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.dawn_native::vulkan::external_semaphore::Service"* }
%"class.dawn_native::vulkan::external_semaphore::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.264" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.258"**, %"struct.std::__1::pair.258"**, %"struct.std::__1::pair.258"**, %"class.std::__1::__compressed_pair.259" }
%"struct.std::__1::pair.258" = type opaque
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::pair.258"** }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.std::__1::__compressed_pair.271" }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.dawn_native::vulkan::detail::VkHandle"* }
%class.SerialQueue.276 = type { %class.SerialStorage.277 }
%class.SerialStorage.277 = type { %"class.std::__1::vector.278" }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"struct.std::__1::pair.280"*, %"struct.std::__1::pair.280"*, %"class.std::__1::__compressed_pair.281" }
%"struct.std::__1::pair.280" = type opaque
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::pair.280"* }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"class.std::__1::__compressed_pair.289" }
%"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer" = type { %"class.dawn_native::vulkan::detail::VkHandle.288", %struct.VkCommandBuffer_T* }
%"class.dawn_native::vulkan::detail::VkHandle.288" = type { %struct.VkCommandPool_T* }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"* }
%"struct.dawn_native::vulkan::CommandRecordingContext" = type <{ %struct.VkCommandBuffer_T*, %"class.std::__1::vector.294", %"class.std::__1::vector.294", %"class.std::__1::vector.302", %"class.dawn_native::vulkan::detail::VkHandle.288", i8, [7 x i8] }>
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"class.dawn_native::vulkan::detail::VkHandle.296"*, %"class.dawn_native::vulkan::detail::VkHandle.296"*, %"class.std::__1::__compressed_pair.297" }
%"class.dawn_native::vulkan::detail::VkHandle.296" = type { %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.dawn_native::vulkan::detail::VkHandle.296"* }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %class.Ref.304*, %class.Ref.304*, %"class.std::__1::__compressed_pair.305" }
%class.Ref.304 = type opaque
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %class.Ref.304* }
%"struct.dawn_native::ComputePipelineDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::PipelineLayoutBase"*, %"struct.dawn_native::ProgrammableStageDescriptor" }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::ProgrammableStageDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8* }
%class.Result.408 = type { %"class.std::__1::unique_ptr.409" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.412" }
%"class.std::__1::vector.412" = type { %"class.std::__1::__vector_base.413" }
%"class.std::__1::__vector_base.413" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.414" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.Result.423 = type { i32, %"class.std::__1::unique_ptr.409", %"class.dawn_native::vulkan::detail::VkHandle.424" }
%"class.dawn_native::vulkan::detail::VkHandle.424" = type { %struct.VkShaderModule_T* }
%struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT = type { i32, i8*, i32 }
%"class.dawn_native::vulkan::PipelineLayout" = type { %"class.dawn_native::PipelineLayoutBase", %"class.dawn_native::vulkan::detail::VkHandle.422" }
%"class.dawn_native::vulkan::detail::VkHandle.422" = type { %struct.VkPipelineLayout_T* }
%struct.VkBaseOutStructure = type { i32, %struct.VkBaseOutStructure* }
%"class.dawn_native::vulkan::ShaderModule" = type { %"class.dawn_native::ShaderModuleBase", %"class.dawn_native::vulkan::detail::VkHandle.424", %"class.std::__1::unordered_map.425" }
%"class.std::__1::unordered_map.425" = type { %"class.std::__1::__hash_table.426" }
%"class.std::__1::__hash_table.426" = type <{ %"class.std::__1::unique_ptr.427", %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.445", [4 x i8] }>
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429", %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"struct.std::__1::__hash_node_base.430"** }
%"struct.std::__1::__hash_node_base.430" = type { %"struct.std::__1::__hash_node_base.430"* }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.std::__1::__bucket_list_deallocator.432" }
%"class.std::__1::__bucket_list_deallocator.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"struct.std::__1::__hash_node_base.430" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.342" }

@.str = private unnamed_addr constant [68 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/ComputePipelineVk.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan15ComputePipeline6CreateEPNS0_6DeviceEPKNS_25ComputePipelineDescriptorE = private unnamed_addr constant [7 x i8] c"Create\00", align 1
@__func__._ZN11dawn_native6vulkan15ComputePipeline10InitializeEPKNS_25ComputePipelineDescriptorE = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"CreateComputePipeline\00", align 1
@_ZTVN11dawn_native6vulkan15ComputePipelineE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::vulkan::ComputePipeline"*)* @_ZN11dawn_native6vulkan15ComputePipelineD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::vulkan::ComputePipeline"*)* @_ZN11dawn_native6vulkan15ComputePipelineD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (i64 (%"class.dawn_native::PipelineBase"*)* @_ZN11dawn_native12PipelineBase18ComputeContentHashEv to i8*)] }, align 8

@_ZN11dawn_native6vulkan15ComputePipelineD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::ComputePipeline"*), void (%"class.dawn_native::vulkan::ComputePipeline"*)* @_ZN11dawn_native6vulkan15ComputePipelineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15ComputePipeline6CreateEPNS0_6DeviceEPKNS_25ComputePipelineDescriptorE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Device"*, %"struct.dawn_native::ComputePipelineDescriptor"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.Result.408, align 8
  %5 = tail call i8* @_Znwm(i64 280) #7
  %6 = bitcast i8* %5 to %"class.dawn_native::vulkan::ComputePipeline"*
  %7 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %1, i64 0, i32 0
  %8 = bitcast i8* %5 to %"class.dawn_native::ComputePipelineBase"*
  tail call void @_ZN11dawn_native19ComputePipelineBaseC2EPNS_10DeviceBaseEPKNS_25ComputePipelineDescriptorE(%"class.dawn_native::ComputePipelineBase"* nonnull %8, %"class.dawn_native::DeviceBase"* %7, %"struct.dawn_native::ComputePipelineDescriptor"* %2) #8
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan15ComputePipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 272
  %11 = bitcast i8* %10 to %struct.VkPipeline_T**
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %11, align 8
  %12 = bitcast %class.Result.408* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = getelementptr inbounds %class.Result.408, %class.Result.408* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %13, align 8
  call void @_ZN11dawn_native6vulkan15ComputePipeline10InitializeEPKNS_25ComputePipelineDescriptorE(%class.Result.408* nonnull sret %4, %"class.dawn_native::vulkan::ComputePipeline"* nonnull %6, %"struct.dawn_native::ComputePipelineDescriptor"* %2)
  %14 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %13, align 8
  %15 = icmp eq %"class.dawn_native::ErrorData"* %14, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %13, align 8
  br i1 %15, label %42, label %16, !prof !2

16:                                               ; preds = %3
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %14, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__func__._ZN11dawn_native6vulkan15ComputePipeline6CreateEPNS0_6DeviceEPKNS_25ComputePipelineDescriptorE, i64 0, i64 0), i32 31) #8
  %17 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  %18 = bitcast %"class.dawn_native::ErrorData"* %14 to i8*
  %19 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %18, i32 1) #8
  store i64 %19, i64* %17, align 8
  %20 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %13, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %13, align 8
  %21 = icmp eq %"class.dawn_native::ErrorData"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %20, i64 0, i32 2, i32 0, i32 0
  %24 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %23, align 8
  %25 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %24 to i64
  %28 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %20, i64 0, i32 2, i32 0, i32 1
  %29 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %24 to i8*
  call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %26, %22
  %32 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %20, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #7
  br label %40

40:                                               ; preds = %37, %31
  %41 = bitcast %"class.dawn_native::ErrorData"* %20 to i8*
  call void @_ZdlPv(i8* %41) #7
  br label %45

42:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %43 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  %44 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %5, i32 0) #8
  store i64 %44, i64* %43, align 8
  br label %47

45:                                               ; preds = %16, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %46 = bitcast i8* %5 to %class.RefCounted*
  call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* nonnull %46) #8
  br label %47

47:                                               ; preds = %42, %45
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15ComputePipeline10InitializeEPKNS_25ComputePipelineDescriptorE(%class.Result.408* noalias sret, %"class.dawn_native::vulkan::ComputePipeline"*, %"struct.dawn_native::ComputePipelineDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkComputePipelineCreateInfo, align 8
  %5 = alloca %class.Result.423, align 8
  %6 = alloca %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT, align 8
  %7 = bitcast %struct.VkComputePipelineCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 96, i1 false)
  %8 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 0
  store i32 29, i32* %8, align 8
  %9 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.dawn_native::ComputePipelineDescriptor", %"struct.dawn_native::ComputePipelineDescriptor"* %2, i64 0, i32 2
  %12 = bitcast %"class.dawn_native::PipelineLayoutBase"** %11 to %"class.dawn_native::vulkan::PipelineLayout"**
  %13 = load %"class.dawn_native::vulkan::PipelineLayout"*, %"class.dawn_native::vulkan::PipelineLayout"** %12, align 8
  %14 = tail call %struct.VkPipelineLayout_T* @_ZNK11dawn_native6vulkan14PipelineLayout9GetHandleEv(%"class.dawn_native::vulkan::PipelineLayout"* %13) #8
  %15 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 4
  store %struct.VkPipelineLayout_T* %14, %struct.VkPipelineLayout_T** %15, align 8
  %16 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 5
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %16, align 8
  %17 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 6
  store i32 -1, i32* %17, align 8
  %18 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3
  %19 = bitcast %struct.VkPipelineShaderStageCreateInfo* %18 to %struct.VkBaseOutStructure*
  %20 = getelementptr inbounds %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineShaderStageCreateInfo* %18, i64 0, i32 0
  store i32 18, i32* %20, align 8
  %21 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3, i32 1
  store i8* null, i8** %21, align 8
  %22 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3, i32 2
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3, i32 3
  store i32 32, i32* %23, align 4
  %24 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %24) #8
  %26 = tail call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %25, i32 24) #8
  br i1 %26, label %27, label %99

27:                                               ; preds = %3
  %28 = bitcast %class.Result.423* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = getelementptr inbounds %"struct.dawn_native::ComputePipelineDescriptor", %"struct.dawn_native::ComputePipelineDescriptor"* %2, i64 0, i32 3, i32 1
  %30 = bitcast %"class.dawn_native::ShaderModuleBase"** %29 to %"class.dawn_native::vulkan::ShaderModule"**
  %31 = load %"class.dawn_native::vulkan::ShaderModule"*, %"class.dawn_native::vulkan::ShaderModule"** %30, align 8
  %32 = getelementptr inbounds %"struct.dawn_native::ComputePipelineDescriptor", %"struct.dawn_native::ComputePipelineDescriptor"* %2, i64 0, i32 3, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %1, i64 0, i32 0, i32 0
  %35 = tail call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %34) #8
  %36 = bitcast %"class.dawn_native::PipelineLayoutBase"* %35 to %"class.dawn_native::vulkan::PipelineLayout"*
  call void @_ZN11dawn_native6vulkan12ShaderModule26GetTransformedModuleHandleEPKcPNS0_14PipelineLayoutE(%class.Result.423* nonnull sret %5, %"class.dawn_native::vulkan::ShaderModule"* %31, i8* %33, %"class.dawn_native::vulkan::PipelineLayout"* %36) #8
  %37 = getelementptr inbounds %class.Result.423, %class.Result.423* %5, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 1
  store i32 2, i32* %37, align 8
  br i1 %39, label %40, label %67, !prof !3

40:                                               ; preds = %27
  %41 = getelementptr inbounds %class.Result.423, %class.Result.423* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %41, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %41, align 8
  %43 = ptrtoint %"class.dawn_native::ErrorData"* %42 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %42, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan15ComputePipeline10InitializeEPKNS_25ComputePipelineDescriptorE, i64 0, i64 0), i32 53) #8
  %44 = bitcast %class.Result.408* %0 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %41, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %41, align 8
  %46 = icmp eq %"class.dawn_native::ErrorData"* %45, null
  br i1 %46, label %139, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %45, i64 0, i32 2, i32 0, i32 0
  %49 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %48, align 8
  %50 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %49 to i64
  %53 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %45, i64 0, i32 2, i32 0, i32 1
  %54 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %49 to i8*
  call void @_ZdlPv(i8* %55) #7
  br label %56

56:                                               ; preds = %51, %47
  %57 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %45, i64 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #7
  br label %65

65:                                               ; preds = %62, %56
  %66 = bitcast %"class.dawn_native::ErrorData"* %45 to i8*
  call void @_ZdlPv(i8* %66) #7
  br label %139

67:                                               ; preds = %27
  %68 = getelementptr inbounds %class.Result.423, %class.Result.423* %5, i64 0, i32 2, i32 0
  %69 = bitcast %struct.VkShaderModule_T** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3, i32 4
  %72 = bitcast %struct.VkShaderModule_T** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = getelementptr inbounds %class.Result.423, %class.Result.423* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %73, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %73, align 8
  %75 = icmp eq %"class.dawn_native::ErrorData"* %74, null
  br i1 %75, label %96, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %74, i64 0, i32 2, i32 0, i32 0
  %78 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %77, align 8
  %79 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %78 to i64
  %82 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %74, i64 0, i32 2, i32 0, i32 1
  %83 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %78 to i8*
  call void @_ZdlPv(i8* %84) #7
  br label %85

85:                                               ; preds = %80, %76
  %86 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %74, i64 0, i32 1
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #7
  br label %94

94:                                               ; preds = %91, %85
  %95 = bitcast %"class.dawn_native::ErrorData"* %74 to i8*
  call void @_ZdlPv(i8* %95) #7
  br label %96

96:                                               ; preds = %67, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8
  %97 = bitcast i8** %21 to %struct.VkBaseOutStructure**
  %98 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %97, align 8
  br label %105

99:                                               ; preds = %3
  %100 = getelementptr inbounds %"struct.dawn_native::ComputePipelineDescriptor", %"struct.dawn_native::ComputePipelineDescriptor"* %2, i64 0, i32 3, i32 1
  %101 = bitcast %"class.dawn_native::ShaderModuleBase"** %100 to %"class.dawn_native::vulkan::ShaderModule"**
  %102 = load %"class.dawn_native::vulkan::ShaderModule"*, %"class.dawn_native::vulkan::ShaderModule"** %101, align 8
  %103 = tail call %struct.VkShaderModule_T* @_ZNK11dawn_native6vulkan12ShaderModule9GetHandleEv(%"class.dawn_native::vulkan::ShaderModule"* %102) #8
  %104 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3, i32 4
  store %struct.VkShaderModule_T* %103, %struct.VkShaderModule_T** %104, align 8
  br label %105

105:                                              ; preds = %96, %99
  %106 = phi %struct.VkBaseOutStructure* [ %98, %96 ], [ null, %99 ]
  %107 = getelementptr inbounds %"struct.dawn_native::ComputePipelineDescriptor", %"struct.dawn_native::ComputePipelineDescriptor"* %2, i64 0, i32 3, i32 2
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3, i32 5
  %111 = bitcast i8** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %4, i64 0, i32 3, i32 6
  store %struct.VkSpecializationInfo* null, %struct.VkSpecializationInfo** %112, align 8
  %113 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %24) #8
  %114 = bitcast %"class.dawn_native::DeviceBase"* %113 to %"class.dawn_native::vulkan::Device"*
  %115 = icmp eq %struct.VkBaseOutStructure* %106, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %105, %116
  %117 = phi %struct.VkBaseOutStructure* [ %119, %116 ], [ %106, %105 ]
  %118 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %117, i64 0, i32 1
  %119 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %118, align 8
  %120 = icmp eq %struct.VkBaseOutStructure* %119, null
  br i1 %120, label %121, label %116

121:                                              ; preds = %116, %105
  %122 = phi %struct.VkBaseOutStructure* [ %19, %105 ], [ %117, %116 ]
  %123 = bitcast %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 24, i1 false)
  %124 = call i32 @_ZNK11dawn_native6vulkan6Device22GetComputeSubgroupSizeEv(%"class.dawn_native::vulkan::Device"* %114) #8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT, %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT* %6, i64 0, i32 2
  store i32 %124, i32* %127, align 8
  %128 = getelementptr inbounds %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT, %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT* %6, i64 0, i32 0
  store i32 1000225001, i32* %128, align 8
  %129 = getelementptr inbounds %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT, %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT* %6, i64 0, i32 1
  store i8* null, i8** %129, align 8
  %130 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %122, i64 0, i32 1
  %131 = bitcast %struct.VkBaseOutStructure** %130 to %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT**
  store %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT* %6, %struct.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT** %131, align 8
  br label %132

132:                                              ; preds = %121, %126
  %133 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %113, i64 1, i32 18, i32 0, i64 7, i32 6, i32 0, i64 2, i32 1
  %134 = bitcast i32* %133 to i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)**
  %135 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %134, align 8
  %136 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %114) #8
  %137 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %1, i64 0, i32 1, i32 0
  %138 = call i32 %135(%struct.VkDevice_T* %136, %struct.VkPipelineCache_T* null, i32 1, %struct.VkComputePipelineCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkPipeline_T** %137) #8
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.408* sret %0, i32 %138, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %139

139:                                              ; preds = %65, %40, %132
  %140 = phi i8* [ %123, %132 ], [ %28, %40 ], [ %28, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #8
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7) #8
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.VkPipelineLayout_T* @_ZNK11dawn_native6vulkan14PipelineLayout9GetHandleEv(%"class.dawn_native::vulkan::PipelineLayout"*) local_unnamed_addr #3

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan12ShaderModule26GetTransformedModuleHandleEPKcPNS0_14PipelineLayoutE(%class.Result.423* sret, %"class.dawn_native::vulkan::ShaderModule"*, i8*, %"class.dawn_native::vulkan::PipelineLayout"*) local_unnamed_addr #3

declare %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"*) local_unnamed_addr #3

declare %struct.VkShaderModule_T* @_ZNK11dawn_native6vulkan12ShaderModule9GetHandleEv(%"class.dawn_native::vulkan::ShaderModule"*) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native6vulkan6Device22GetComputeSubgroupSizeEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.408* sret, i32, i8*) local_unnamed_addr #3

declare %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15ComputePipelineD2Ev(%"class.dawn_native::vulkan::ComputePipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan15ComputePipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.407", %"class.dawn_native::vulkan::detail::VkHandle.407"* %3, i64 0, i32 0
  %5 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %4, align 8
  %6 = icmp eq %struct.VkPipeline_T* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #8
  %10 = bitcast %"class.dawn_native::DeviceBase"* %9 to %"class.dawn_native::vulkan::Device"*
  %11 = tail call %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"* %10) #8
  %12 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 1, i32 0
  %13 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %12, align 8
  tail call void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_15VkTagVkPipelineEP12VkPipeline_TEE(%"class.dawn_native::vulkan::FencedDeleter"* %11, %struct.VkPipeline_T* %13) #8
  %14 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.407"* %3 to i64*
  store i64 0, i64* %14, align 8
  br label %15

15:                                               ; preds = %1, %7
  %16 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native19ComputePipelineBaseD2Ev(%"class.dawn_native::ComputePipelineBase"* %16) #8
  ret void
}

declare %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_15VkTagVkPipelineEP12VkPipeline_TEE(%"class.dawn_native::vulkan::FencedDeleter"*, %struct.VkPipeline_T*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11dawn_native19ComputePipelineBaseD2Ev(%"class.dawn_native::ComputePipelineBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15ComputePipelineD0Ev(%"class.dawn_native::vulkan::ComputePipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan15ComputePipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.407", %"class.dawn_native::vulkan::detail::VkHandle.407"* %3, i64 0, i32 0
  %5 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %4, align 8
  %6 = icmp eq %struct.VkPipeline_T* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #8
  %10 = bitcast %"class.dawn_native::DeviceBase"* %9 to %"class.dawn_native::vulkan::Device"*
  %11 = tail call %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"* %10) #8
  %12 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 1, i32 0
  %13 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %12, align 8
  tail call void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_15VkTagVkPipelineEP12VkPipeline_TEE(%"class.dawn_native::vulkan::FencedDeleter"* %11, %struct.VkPipeline_T* %13) #8
  %14 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.407"* %3 to i64*
  store i64 0, i64* %14, align 8
  br label %15

15:                                               ; preds = %1, %7
  %16 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native19ComputePipelineBaseD2Ev(%"class.dawn_native::ComputePipelineBase"* %16) #8
  %17 = bitcast %"class.dawn_native::vulkan::ComputePipeline"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkPipeline_T* @_ZNK11dawn_native6vulkan15ComputePipeline9GetHandleEv(%"class.dawn_native::vulkan::ComputePipeline"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::ComputePipeline", %"class.dawn_native::vulkan::ComputePipeline"* %0, i64 0, i32 1, i32 0
  %3 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %2, align 8
  ret %struct.VkPipeline_T* %3
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #3

declare i64 @_ZN11dawn_native12PipelineBase18ComputeContentHashEv(%"class.dawn_native::PipelineBase"*) unnamed_addr #3

declare void @_ZN11dawn_native19ComputePipelineBaseC2EPNS_10DeviceBaseEPKNS_25ComputePipelineDescriptorE(%"class.dawn_native::ComputePipelineBase"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::ComputePipelineDescriptor"*) unnamed_addr #3

declare void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #3

declare i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
