; ModuleID = '../../chrome/common/extensions/manifest_handlers/settings_overrides_handler.cc'
source_filename = "../../chrome/common/extensions/manifest_handlers/settings_overrides_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::SettingsOverrides" = type { %"struct.extensions::Extension::ManifestData", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.26", %"class.std::__1::vector.32" }
%"struct.extensions::Extension::ManifestData" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* }
%"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider" = type <{ %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.17", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i32* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.GURL* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.26" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.extensions::SettingsOverridesHandler" = type { %"class.extensions::ManifestHandler" }
%"class.extensions::ManifestHandler" = type { i32 (...)** }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.59", %"class.std::__1::vector.65", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.79", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type { %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.extensions::PermissionsParser::InitialPermissions"* }
%"struct.extensions::PermissionsParser::InitialPermissions" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.67" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i32*, i32*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i32* }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.82", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.85" }
%"union.absl::variant_internal::DestructibleUnionImpl.85" = type { %"union.absl::variant_internal::DestructibleUnionImpl.86" }
%"union.absl::variant_internal::DestructibleUnionImpl.86" = type { %"union.absl::variant_internal::DestructibleUnionImpl.87" }
%"union.absl::variant_internal::DestructibleUnionImpl.87" = type { %"union.absl::variant_internal::DestructibleUnionImpl.88" }
%"union.absl::variant_internal::DestructibleUnionImpl.88" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.132 }
%union.anon.132 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::allocator" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.extensions::api::manifest_types::ChromeSettingsOverrides" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.7" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.133 }
%struct.anon.133 = type { %"struct.std::__1::__padding.134", i8 }
%"struct.std::__1::__padding.134" = type { [1 x i8] }
%"class.extensions::SettingsOverrideAPIPermission" = type { %"class.extensions::APIPermission", %"class.std::__1::basic_string" }
%"class.extensions::APIPermission" = type { i32 (...)**, %"class.extensions::APIPermissionInfo"* }
%"class.extensions::APIPermissionInfo" = type { i8*, i32, i32, {}* }
%"class.extensions::PermissionsInfo" = type { i32 (...)**, %"class.std::__1::unordered_map", %"class.std::__1::map.170", i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.151", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.166", [4 x i8] }>
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153", %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { float }
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.extensions::ManifestPermission" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZTVN10extensions17SettingsOverridesE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.extensions::SettingsOverrides"*)* @_ZN10extensions17SettingsOverridesD2Ev to i8*), i8* bitcast (void (%"struct.extensions::SettingsOverrides"*)* @_ZN10extensions17SettingsOverridesD0Ev to i8*)] }, align 8
@_ZN10extensions13manifest_keys17kSettingsOverrideE = external constant [0 x i8], align 1
@_ZTVN10extensions24SettingsOverridesHandlerE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::SettingsOverridesHandler"*)* @_ZN10extensions24SettingsOverridesHandlerD2Ev to i8*), i8* bitcast (void (%"class.extensions::SettingsOverridesHandler"*)* @_ZN10extensions24SettingsOverridesHandlerD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::SettingsOverridesHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.129"*)* @_ZN10extensions24SettingsOverridesHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.65"*)* @_ZNK10extensions15ManifestHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, i32)* @_ZNK10extensions15ManifestHandler18AlwaysParseForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, i32)* @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.extensions::ManifestHandler"*)* @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*)* @_ZN10extensions15ManifestHandler16CreatePermissionEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*)* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE to i8*), i8* bitcast ({ i64, i8** } (%"class.extensions::SettingsOverridesHandler"*)* @_ZNK10extensions24SettingsOverridesHandler4KeysEv to i8*)] }, align 8
@.str = private unnamed_addr constant [79 x i8] c"../../chrome/common/extensions/manifest_handlers/settings_overrides_handler.cc\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"extension->manifest()->Get(manifest_keys::kSettingsOverride, &dict)\00", align 1
@_ZN10extensions15manifest_errors23kInvalidEmptyDictionaryE = external constant [0 x i8], align 1
@_ZZNK10extensions24SettingsOverridesHandler4KeysEvE5kKeys = internal constant [1 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i32 0, i32 0)], align 8
@_ZN10extensions15manifest_errors27kInvalidHomepageOverrideURLE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors23kInvalidSearchEngineURLE = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"keyword\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"favicon_url\00", align 1
@_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors26kInvalidStartupOverrideURLE = external constant [0 x i8], align 1

@_ZN10extensions17SettingsOverridesC1Ev = hidden unnamed_addr alias void (%"struct.extensions::SettingsOverrides"*), void (%"struct.extensions::SettingsOverrides"*)* @_ZN10extensions17SettingsOverridesC2Ev
@_ZN10extensions17SettingsOverridesD1Ev = hidden unnamed_addr alias void (%"struct.extensions::SettingsOverrides"*), void (%"struct.extensions::SettingsOverrides"*)* @_ZN10extensions17SettingsOverridesD2Ev
@_ZN10extensions24SettingsOverridesHandlerC1Ev = hidden unnamed_addr alias void (%"class.extensions::SettingsOverridesHandler"*), void (%"class.extensions::SettingsOverridesHandler"*)* @_ZN10extensions24SettingsOverridesHandlerC2Ev
@_ZN10extensions24SettingsOverridesHandlerD1Ev = hidden unnamed_addr alias void (%"class.extensions::SettingsOverridesHandler"*), void (%"class.extensions::SettingsOverridesHandler"*)* @_ZN10extensions24SettingsOverridesHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17SettingsOverridesC2Ev(%"struct.extensions::SettingsOverrides"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions17SettingsOverridesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17SettingsOverridesD2Ev(%"struct.extensions::SettingsOverrides"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions17SettingsOverridesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %3, i64 0, i32 0, i32 0
  %5 = load %class.GURL*, %class.GURL** %4, align 8
  %6 = icmp eq %class.GURL* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GURL* %5 to i8*
  %9 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %class.GURL*, %class.GURL** %9, align 8
  %11 = icmp eq %class.GURL* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %class.GURL* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.GURL, %class.GURL* %13, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %14) #11
  %15 = icmp eq %class.GURL* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.32"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %class.GURL* %5, %class.GURL** %9, align 8
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %class.GURL*, %class.GURL** %22, align 8
  store %class.GURL* null, %class.GURL** %22, align 8
  %24 = icmp eq %class.GURL* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  tail call void @_ZN4GURLD1Ev(%class.GURL* nonnull %23) #11
  %26 = bitcast %class.GURL* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %28, align 8
  store %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* null, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %28, align 8
  %30 = icmp eq %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN10extensions3api14manifest_types23ChromeSettingsOverrides14SearchProviderD1Ev(%"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* nonnull %29) #11
  %32 = bitcast %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17SettingsOverridesD0Ev(%"struct.extensions::SettingsOverrides"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions17SettingsOverridesD2Ev(%"struct.extensions::SettingsOverrides"* %0) #11
  %2 = bitcast %"struct.extensions::SettingsOverrides"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::SettingsOverrides"* @_ZN10extensions17SettingsOverrides3GetEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0)) #11
  %5 = icmp ugt i64 %4, -17
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %7) #13
  unreachable

8:                                                ; preds = %1
  %9 = icmp ult i64 %4, 23
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = add nuw i64 %4, 16
  %12 = and i64 %11, -16
  %13 = tail call i8* @_Znwm(i64 %12) #12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = or i64 %12, -9223372036854775808
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %17, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

19:                                               ; preds = %8
  %20 = trunc i64 %4 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = icmp eq i64 %4, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19, %10
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %18, %10 ]
  %26 = phi i8* [ %3, %19 ], [ %13, %10 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0), i64 %4, i1 false) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %25, %24 ]
  %29 = phi i8* [ %3, %19 ], [ %26, %24 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %4
  store i8 0, i8* %30, align 1
  %31 = call %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #11
  %32 = bitcast %"struct.extensions::Extension::ManifestData"* %31 to %"struct.extensions::SettingsOverrides"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %27, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret %"struct.extensions::SettingsOverrides"* %32
}

declare %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions24SettingsOverridesHandlerC2Ev(%"class.extensions::SettingsOverridesHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsOverridesHandler", %"class.extensions::SettingsOverridesHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"* %2) #11
  %3 = getelementptr inbounds %"class.extensions::SettingsOverridesHandler", %"class.extensions::SettingsOverridesHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN10extensions24SettingsOverridesHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions24SettingsOverridesHandlerD2Ev(%"class.extensions::SettingsOverridesHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsOverridesHandler", %"class.extensions::SettingsOverridesHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions24SettingsOverridesHandlerD0Ev(%"class.extensions::SettingsOverridesHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsOverridesHandler", %"class.extensions::SettingsOverridesHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #11
  %3 = bitcast %"class.extensions::SettingsOverridesHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions24SettingsOverridesHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.extensions::SettingsOverridesHandler"* nocapture readnone, %"class.extensions::Extension"*, %"class.std::__1::basic_string.129"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::allocator", align 1
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::allocator", align 1
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string.129", align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %"class.std::__1::basic_string.129", align 8
  %13 = alloca %"class.std::__1::basic_string.129", align 8
  %14 = alloca %"class.std::__1::basic_string.129", align 8
  %15 = alloca %"class.std::__1::basic_string.129", align 8
  %16 = alloca %"class.std::__1::basic_string.129", align 8
  %17 = alloca %"class.std::__1::basic_string.129", align 8
  %18 = alloca %"class.std::__1::basic_string.129", align 8
  %19 = alloca %"class.base::Value"*, align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.logging::CheckError", align 8
  %22 = alloca %"class.std::__1::basic_string.129", align 8
  %23 = alloca %"class.std::__1::basic_string.129", align 8
  %24 = alloca %"class.std::__1::basic_string.129", align 8
  %25 = alloca %"class.std::__1::vector.32", align 8
  %26 = alloca %"class.std::__1::basic_string.129", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = bitcast %"class.base::Value"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store %"class.base::Value"* null, %"class.base::Value"** %19, align 8
  %32 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 16, i32 0, i32 0, i32 0
  %33 = load %"class.extensions::Manifest"*, %"class.extensions::Manifest"** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0)) #11
  %36 = icmp ugt i64 %35, -17
  br i1 %36, label %37, label %39

37:                                               ; preds = %3
  %38 = bitcast %"class.std::__1::basic_string"* %20 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %38) #13
  unreachable

39:                                               ; preds = %3
  %40 = icmp ult i64 %35, 23
  br i1 %40, label %49, label %41

41:                                               ; preds = %39
  %42 = add nuw i64 %35, 16
  %43 = and i64 %42, -16
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %44, i8** %45, align 8
  %46 = or i64 %43, -9223372036854775808
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %48, align 8
  br label %54

49:                                               ; preds = %39
  %50 = trunc i64 %35 to i8
  %51 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 %50, i8* %52, align 1
  %53 = icmp eq i64 %35, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49, %41
  %55 = phi i8* [ %44, %41 ], [ %34, %49 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0), i64 %35, i1 false) #11
  br label %56

56:                                               ; preds = %49, %54
  %57 = phi i8* [ %34, %49 ], [ %55, %54 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %35
  store i8 0, i8* %58, align 1
  %59 = call zeroext i1 @_ZNK10extensions8Manifest3GetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPPKN4base5ValueE(%"class.extensions::Manifest"* %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, %"class.base::Value"** nonnull %19) #11
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.logging::CheckError"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %21, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0)) #11
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #11
  br label %63

63:                                               ; preds = %56, %60
  %64 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %63, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  %72 = load %"class.base::Value"*, %"class.base::Value"** %19, align 8
  %73 = call %"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* @_ZN10extensions3api14manifest_types23ChromeSettingsOverrides9FromValueERKN4base5ValueEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32) %72, %"class.std::__1::basic_string.129"* %2) #11
  %74 = icmp eq %"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* %73, null
  br i1 %74, label %698, label %75

75:                                               ; preds = %71
  %76 = call i8* @_Znwm(i64 48) #12
  %77 = bitcast i8* %76 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions17SettingsOverridesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 40, i1 false) #11
  %79 = ptrtoint i8* %76 to i64
  %80 = bitcast %"class.std::__1::basic_string.129"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 24, i1 false) #11
  %82 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = icmp eq %"class.std::__1::basic_string"* %83, null
  br i1 %84, label %130, label %85

85:                                               ; preds = %75
  %86 = call i8* @_Znwm(i64 120) #12
  %87 = bitcast i8* %86 to %class.GURL*
  %88 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  %95 = select i1 %91, i8* %93, i8* %94
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %90 to i64
  %99 = select i1 %91, i64 %97, i64 %98
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %87, i8* %95, i64 %99) #11
  %100 = getelementptr inbounds i8, i8* %86, i64 24
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %85
  %104 = ptrtoint i8* %86 to i64
  %105 = call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* nonnull %87) #11
  br i1 %105, label %130, label %106

106:                                              ; preds = %103, %85
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %87) #11
  call void @_ZdlPv(i8* nonnull %86) #12
  %107 = bitcast %"class.std::__1::basic_string.129"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #11
  %108 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors27kInvalidHomepageOverrideURLE, i64 0, i64 0)) #11
  %109 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %117 = select i1 %113, i8* %115, i8* %116
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = zext i8 %112 to i64
  %121 = select i1 %113, i64 %119, i64 %120
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %18, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors27kInvalidHomepageOverrideURLE, i64 0, i64 0), i64 %108, i8* %117, i64 %121) #11
  %122 = bitcast %"class.std::__1::basic_string.129"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %106
  %127 = bitcast %"class.std::__1::basic_string.129"* %22 to i8**
  %128 = load i8*, i8** %127, align 8
  call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %126, %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* nonnull align 8 %107, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #11
  br label %130

130:                                              ; preds = %75, %103, %129
  %131 = phi i64 [ 0, %75 ], [ 0, %129 ], [ %104, %103 ]
  %132 = getelementptr inbounds i8, i8* %76, i64 16
  %133 = bitcast i8* %132 to %class.GURL**
  %134 = load %class.GURL*, %class.GURL** %133, align 8
  %135 = bitcast i8* %132 to i64*
  store i64 %131, i64* %135, align 8
  %136 = icmp eq %class.GURL* %134, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %130
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %134) #11
  %138 = bitcast %class.GURL* %134 to i8*
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %137, %130
  %140 = bitcast %"class.std::__1::basic_string.129"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #11
  %141 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 0, i64 24, i1 false) #11
  %142 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* %73, i64 0, i32 1
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %143, align 8
  %145 = icmp eq %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %144, null
  br i1 %145, label %308, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %144, i64 0, i32 3
  %148 = call i8* @_Znwm(i64 120) #12
  %149 = bitcast i8* %148 to %class.GURL*
  %150 = bitcast %"class.std::__1::basic_string"* %147 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  %157 = select i1 %153, i8* %155, i8* %156
  %158 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %144, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = zext i8 %152 to i64
  %161 = select i1 %153, i64 %159, i64 %160
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %149, i8* %157, i64 %161) #11
  %162 = getelementptr inbounds i8, i8* %148, i64 24
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %146
  %166 = call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* nonnull %149) #11
  br i1 %166, label %188, label %167

167:                                              ; preds = %165, %146
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %149) #11
  call void @_ZdlPv(i8* nonnull %148) #12
  %168 = bitcast %"class.std::__1::basic_string.129"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #11
  %169 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors23kInvalidSearchEngineURLE, i64 0, i64 0)) #11
  %170 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %143, align 8
  %171 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %170, i64 0, i32 3
  %172 = bitcast %"class.std::__1::basic_string"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  %179 = select i1 %175, i8* %177, i8* %178
  %180 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %170, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = zext i8 %174 to i64
  %183 = select i1 %175, i64 %181, i64 %182
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %12, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors23kInvalidSearchEngineURLE, i64 0, i64 0), i64 %169, i8* %179, i64 %183) #11
  %184 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %184, i64 0, i32 1, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %193, label %196

188:                                              ; preds = %165
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %149) #11
  call void @_ZdlPv(i8* nonnull %148) #12
  %189 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %143, align 8
  %190 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %189, i64 0, i32 11, i32 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = icmp eq i32* %191, null
  br i1 %192, label %199, label %197

193:                                              ; preds = %167
  %194 = bitcast %"class.std::__1::basic_string.129"* %23 to i8**
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #12
  br label %196

196:                                              ; preds = %193, %167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %168, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #11
  br label %308

197:                                              ; preds = %188
  %198 = ptrtoint %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %189 to i64
  store %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* null, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %143, align 8
  br label %308

199:                                              ; preds = %188
  %200 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %189, i64 0, i32 0, i32 0, i32 0, i32 0
  %201 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %200, align 8
  %202 = icmp eq %"class.std::__1::basic_string"* %201, null
  br i1 %202, label %203, label %214

203:                                              ; preds = %199
  %204 = bitcast %"class.std::__1::basic_string.129"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #11
  %205 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0)) #11, !noalias !3
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0), i64 %205, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #11
  %206 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %203
  %211 = bitcast %"class.std::__1::basic_string.129"* %23 to i8**
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %210, %203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %204, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #11
  br label %308

214:                                              ; preds = %199
  %215 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %189, i64 0, i32 1, i32 0, i32 0, i32 0
  %216 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %215, align 8
  %217 = icmp eq %"class.std::__1::basic_string"* %216, null
  br i1 %217, label %218, label %229

218:                                              ; preds = %214
  %219 = bitcast %"class.std::__1::basic_string.129"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #11
  %220 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0)) #11, !noalias !6
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %14, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0), i64 %220, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #11
  %221 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %221, i64 0, i32 1, i32 1
  %223 = load i8, i8* %222, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %218
  %226 = bitcast %"class.std::__1::basic_string.129"* %23 to i8**
  %227 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %227) #12
  br label %228

228:                                              ; preds = %225, %218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %219, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #11
  br label %308

229:                                              ; preds = %214
  %230 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %189, i64 0, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %230, align 8
  %232 = icmp eq %"class.std::__1::basic_string"* %231, null
  br i1 %232, label %233, label %244

233:                                              ; preds = %229
  %234 = bitcast %"class.std::__1::basic_string.129"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #11
  %235 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0)) #11, !noalias !9
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %15, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0), i64 %235, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8) #11
  %236 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %236, i64 0, i32 1, i32 1
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %233
  %241 = bitcast %"class.std::__1::basic_string.129"* %23 to i8**
  %242 = load i8*, i8** %241, align 8
  call void @_ZdlPv(i8* %242) #12
  br label %243

243:                                              ; preds = %240, %233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %234, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #11
  br label %308

244:                                              ; preds = %229
  %245 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %189, i64 0, i32 2, i32 0, i32 0, i32 0
  %246 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %245, align 8
  %247 = icmp eq %"class.std::__1::basic_string"* %246, null
  br i1 %247, label %248, label %259

248:                                              ; preds = %244
  %249 = bitcast %"class.std::__1::basic_string.129"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #11
  %250 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0)) #11, !noalias !12
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors31kInvalidSearchEngineMissingKeysE, i64 0, i64 0), i64 %250, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11) #11
  %251 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %251, i64 0, i32 1, i32 1
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %248
  %256 = bitcast %"class.std::__1::basic_string.129"* %23 to i8**
  %257 = load i8*, i8** %256, align 8
  call void @_ZdlPv(i8* %257) #12
  br label %258

258:                                              ; preds = %255, %248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %249, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #11
  br label %308

259:                                              ; preds = %244
  %260 = call i8* @_Znwm(i64 120) #12
  %261 = bitcast i8* %260 to %class.GURL*
  %262 = bitcast %"class.std::__1::basic_string"* %246 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = bitcast %"class.std::__1::basic_string"* %246 to i8*
  %269 = select i1 %265, i8* %267, i8* %268
  %270 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %271 = load i64, i64* %270, align 8
  %272 = zext i8 %264 to i64
  %273 = select i1 %265, i64 %271, i64 %272
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %261, i8* %269, i64 %273) #11
  %274 = getelementptr inbounds i8, i8* %260, i64 24
  %275 = load i8, i8* %274, align 8, !range !2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %259
  %278 = call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* nonnull %261) #11
  br i1 %278, label %301, label %279

279:                                              ; preds = %277, %259
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %261) #11
  call void @_ZdlPv(i8* nonnull %260) #12
  %280 = bitcast %"class.std::__1::basic_string.129"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #11
  %281 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors23kInvalidSearchEngineURLE, i64 0, i64 0)) #11
  %282 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %143, align 8
  %283 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %282, i64 0, i32 2, i32 0, i32 0, i32 0
  %284 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %283, align 8
  %285 = bitcast %"class.std::__1::basic_string"* %284 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %286 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %285, i64 0, i32 1, i32 0
  %287 = load i8, i8* %286, align 1
  %288 = icmp slt i8 %287, 0
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = bitcast %"class.std::__1::basic_string"* %284 to i8*
  %292 = select i1 %288, i8* %290, i8* %291
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %294 = load i64, i64* %293, align 8
  %295 = zext i8 %287 to i64
  %296 = select i1 %288, i64 %294, i64 %295
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %17, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors23kInvalidSearchEngineURLE, i64 0, i64 0), i64 %281, i8* %292, i64 %296) #11
  %297 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %297, i64 0, i32 1, i32 1
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %304, label %307

301:                                              ; preds = %277
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %261) #11
  call void @_ZdlPv(i8* nonnull %260) #12
  %302 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  %303 = load i64, i64* %302, align 8
  store %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* null, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %143, align 8
  br label %308

304:                                              ; preds = %279
  %305 = bitcast %"class.std::__1::basic_string.129"* %23 to i8**
  %306 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %306) #12
  br label %307

307:                                              ; preds = %304, %279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %280, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #11
  br label %308

308:                                              ; preds = %139, %196, %197, %213, %228, %243, %258, %301, %307
  %309 = phi i64 [ %198, %197 ], [ %303, %301 ], [ 0, %307 ], [ 0, %258 ], [ 0, %243 ], [ 0, %228 ], [ 0, %213 ], [ 0, %196 ], [ 0, %139 ]
  %310 = bitcast i8* %78 to %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"**
  %311 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %310, align 8
  %312 = bitcast i8* %78 to i64*
  store i64 %309, i64* %312, align 8
  %313 = icmp eq %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %311, null
  br i1 %313, label %316, label %314

314:                                              ; preds = %308
  call void @_ZN10extensions3api14manifest_types23ChromeSettingsOverrides14SearchProviderD1Ev(%"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* nonnull %311) #11
  %315 = bitcast %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %311 to i8*
  call void @_ZdlPv(i8* %315) #12
  br label %316

316:                                              ; preds = %314, %308
  %317 = bitcast %"class.std::__1::basic_string.129"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #11
  %318 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %317, i8 0, i64 24, i1 false) #11
  %319 = bitcast %"class.std::__1::vector.32"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #11
  %320 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %25, i64 0, i32 0, i32 1
  %321 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %319, i8 0, i64 24, i1 false) #11, !alias.scope !15
  %322 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* %73, i64 0, i32 2, i32 0, i32 0, i32 0
  %323 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %322, align 8, !noalias !15
  %324 = icmp eq %"class.std::__1::vector"* %323, null
  br i1 %324, label %390, label %325

325:                                              ; preds = %316
  %326 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %323, i64 0, i32 0, i32 0
  %327 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %326, align 8, !noalias !15
  %328 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %323, i64 0, i32 0, i32 1
  %329 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !15
  %330 = icmp eq %"class.std::__1::basic_string"* %327, %329
  br i1 %330, label %390, label %331

331:                                              ; preds = %325
  %332 = bitcast %class.GURL* %11 to i8*
  %333 = bitcast %class.GURL** %320 to i64*
  %334 = bitcast %"class.std::__1::basic_string.129"* %10 to i8*
  %335 = bitcast %"class.std::__1::basic_string.129"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %336 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %335, i64 0, i32 1, i32 1
  %337 = bitcast %"class.std::__1::basic_string.129"* %24 to i8**
  br label %338

338:                                              ; preds = %384, %331
  %339 = phi %"class.std::__1::basic_string"* [ %327, %331 ], [ %385, %384 ]
  %340 = call i8* @_Znwm(i64 120) #12
  %341 = bitcast i8* %340 to %class.GURL*
  %342 = bitcast %"class.std::__1::basic_string"* %339 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %343 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %342, i64 0, i32 1, i32 0
  %344 = load i8, i8* %343, align 1
  %345 = icmp slt i8 %344, 0
  %346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = bitcast %"class.std::__1::basic_string"* %339 to i8*
  %349 = select i1 %345, i8* %347, i8* %348
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %351 = load i64, i64* %350, align 8
  %352 = zext i8 %344 to i64
  %353 = select i1 %345, i64 %351, i64 %352
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %341, i8* %349, i64 %353) #11
  %354 = getelementptr inbounds i8, i8* %340, i64 24
  %355 = load i8, i8* %354, align 8, !range !2, !noalias !15
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %338
  %358 = call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* nonnull %341) #11
  br i1 %358, label %370, label %359

359:                                              ; preds = %357, %338
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %341) #11
  call void @_ZdlPv(i8* nonnull %340) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #11, !noalias !15
  %360 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors26kInvalidStartupOverrideURLE, i64 0, i64 0)) #11
  %361 = load i8, i8* %343, align 1
  %362 = icmp slt i8 %361, 0
  %363 = load i8*, i8** %346, align 8
  %364 = select i1 %362, i8* %363, i8* %348
  %365 = load i64, i64* %350, align 8
  %366 = zext i8 %361 to i64
  %367 = select i1 %362, i64 %365, i64 %366
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors26kInvalidStartupOverrideURLE, i64 0, i64 0), i64 %360, i8* %364, i64 %367) #11
  %368 = load i8, i8* %336, align 1, !noalias !15
  %369 = icmp slt i8 %368, 0
  br i1 %369, label %374, label %376

370:                                              ; preds = %357
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %332) #11, !noalias !15
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %11) #11
  %371 = load %class.GURL*, %class.GURL** %320, align 8, !alias.scope !15
  %372 = load %class.GURL*, %class.GURL** %321, align 8, !alias.scope !15
  %373 = icmp ult %class.GURL* %371, %372
  br i1 %373, label %377, label %380

374:                                              ; preds = %359
  %375 = load i8*, i8** %337, align 8, !noalias !15
  call void @_ZdlPv(i8* %375) #12
  br label %376

376:                                              ; preds = %374, %359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %317, i8* nonnull align 8 %334, i64 24, i1 false) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #11, !noalias !15
  br label %384

377:                                              ; preds = %370
  call void @_ZN4GURLC1EOS_(%class.GURL* %371, %class.GURL* nonnull dereferenceable(120) %11) #11
  %378 = getelementptr inbounds %class.GURL, %class.GURL* %371, i64 1
  %379 = ptrtoint %class.GURL* %378 to i64
  store i64 %379, i64* %333, align 8, !alias.scope !15
  br label %381

380:                                              ; preds = %370
  call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.32"* nonnull %25, %class.GURL* nonnull dereferenceable(120) %11) #11
  br label %381

381:                                              ; preds = %380, %377
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %332) #11, !noalias !15
  %382 = load %class.GURL*, %class.GURL** %320, align 8, !alias.scope !15
  %383 = getelementptr inbounds %class.GURL, %class.GURL* %382, i64 -1
  call void @_ZN4GURL4SwapEPS_(%class.GURL* %383, %class.GURL* nonnull %341) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %341) #11
  call void @_ZdlPv(i8* nonnull %340) #12
  br label %384

384:                                              ; preds = %381, %376
  %385 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %339, i64 1
  %386 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %322, align 8, !noalias !15
  %387 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %386, i64 0, i32 0, i32 1
  %388 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %387, align 8
  %389 = icmp eq %"class.std::__1::basic_string"* %385, %388
  br i1 %389, label %390, label %338

390:                                              ; preds = %384, %316, %325
  %391 = getelementptr inbounds i8, i8* %76, i64 24
  %392 = bitcast i8* %391 to %class.GURL**
  %393 = load %class.GURL*, %class.GURL** %392, align 8
  %394 = icmp eq %class.GURL* %393, null
  br i1 %394, label %410, label %395

395:                                              ; preds = %390
  %396 = bitcast %class.GURL* %393 to i8*
  %397 = getelementptr inbounds i8, i8* %76, i64 32
  %398 = bitcast i8* %397 to %class.GURL**
  %399 = load %class.GURL*, %class.GURL** %398, align 8
  %400 = icmp eq %class.GURL* %399, %393
  br i1 %400, label %408, label %401

401:                                              ; preds = %395, %401
  %402 = phi %class.GURL* [ %403, %401 ], [ %399, %395 ]
  %403 = getelementptr inbounds %class.GURL, %class.GURL* %402, i64 -1
  call void @_ZN4GURLD1Ev(%class.GURL* %403) #11
  %404 = icmp eq %class.GURL* %403, %393
  br i1 %404, label %405, label %401

405:                                              ; preds = %401
  %406 = bitcast i8* %391 to i8**
  %407 = load i8*, i8** %406, align 8
  br label %408

408:                                              ; preds = %405, %395
  %409 = phi i8* [ %407, %405 ], [ %396, %395 ]
  store %class.GURL* %393, %class.GURL** %398, align 8
  call void @_ZdlPv(i8* %409) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %391, i8 0, i64 24, i1 false) #11
  br label %410

410:                                              ; preds = %390, %408
  %411 = bitcast %"class.std::__1::vector.32"* %25 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = bitcast i8* %391 to i64*
  store i64 %412, i64* %413, align 8
  %414 = getelementptr inbounds i8, i8* %76, i64 32
  %415 = bitcast i8* %414 to %class.GURL**
  %416 = bitcast %class.GURL** %320 to <2 x i64>*
  %417 = load <2 x i64>, <2 x i64>* %416, align 8
  %418 = bitcast i8* %414 to <2 x i64>*
  store <2 x i64> %417, <2 x i64>* %418, align 8
  %419 = inttoptr i64 %412 to %class.GURL*
  %420 = extractelement <2 x i64> %417, i32 0
  %421 = inttoptr i64 %420 to %class.GURL*
  %422 = load %class.GURL*, %class.GURL** %133, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #11
  %423 = icmp eq %class.GURL* %422, null
  %424 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %310, align 8
  %425 = icmp eq %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %424, null
  br i1 %423, label %426, label %475

426:                                              ; preds = %410
  br i1 %425, label %427, label %476

427:                                              ; preds = %426
  %428 = icmp eq %class.GURL* %419, %421
  br i1 %428, label %429, label %544

429:                                              ; preds = %427
  %430 = bitcast %"class.std::__1::basic_string.129"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %430, i64 0, i32 1, i32 1
  %432 = load i8, i8* %431, align 1
  %433 = icmp slt i8 %432, 0
  %434 = load i64, i64* %81, align 8
  %435 = zext i8 %432 to i64
  %436 = select i1 %433, i64 %434, i64 %435
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %440, label %438

438:                                              ; preds = %429
  %439 = call dereferenceable(24) %"class.std::__1::basic_string.129"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.129"* %2, %"class.std::__1::basic_string.129"* nonnull dereferenceable(24) %22)
  br label %662

440:                                              ; preds = %429
  %441 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %442 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %441, i64 0, i32 1, i32 1
  %443 = load i8, i8* %442, align 1
  %444 = icmp slt i8 %443, 0
  %445 = load i64, i64* %141, align 8
  %446 = zext i8 %443 to i64
  %447 = select i1 %444, i64 %445, i64 %446
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %451, label %449

449:                                              ; preds = %440
  %450 = call dereferenceable(24) %"class.std::__1::basic_string.129"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.129"* %2, %"class.std::__1::basic_string.129"* nonnull dereferenceable(24) %23)
  br label %662

451:                                              ; preds = %440
  %452 = bitcast %"class.std::__1::basic_string.129"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %453 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %452, i64 0, i32 1, i32 1
  %454 = load i8, i8* %453, align 1
  %455 = icmp slt i8 %454, 0
  %456 = load i64, i64* %318, align 8
  %457 = zext i8 %454 to i64
  %458 = select i1 %455, i64 %456, i64 %457
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %462, label %460

460:                                              ; preds = %451
  %461 = call dereferenceable(24) %"class.std::__1::basic_string.129"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.129"* %2, %"class.std::__1::basic_string.129"* nonnull dereferenceable(24) %24)
  br label %662

462:                                              ; preds = %451
  %463 = bitcast %"class.std::__1::basic_string.129"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %463) #11
  %464 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors23kInvalidEmptyDictionaryE, i64 0, i64 0)) #11
  %465 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0)) #11
  call void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* nonnull sret %26, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors23kInvalidEmptyDictionaryE, i64 0, i64 0), i64 %464, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0), i64 %465) #11
  %466 = bitcast %"class.std::__1::basic_string.129"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %467 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %466, i64 0, i32 1, i32 1
  %468 = load i8, i8* %467, align 1
  %469 = icmp slt i8 %468, 0
  br i1 %469, label %470, label %473

470:                                              ; preds = %462
  %471 = bitcast %"class.std::__1::basic_string.129"* %2 to i8**
  %472 = load i8*, i8** %471, align 8
  call void @_ZdlPv(i8* %472) #12
  br label %473

473:                                              ; preds = %470, %462
  %474 = bitcast %"class.std::__1::basic_string.129"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %474, i8* nonnull align 8 %463, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %463) #11
  br label %662

475:                                              ; preds = %410
  br i1 %425, label %544, label %476

476:                                              ; preds = %475, %426
  %477 = call i8* @_Znwm(i64 40) #12
  %478 = bitcast i8* %477 to %"class.extensions::SettingsOverrideAPIPermission"*
  %479 = call %"class.extensions::PermissionsInfo"* @_ZN10extensions15PermissionsInfo11GetInstanceEv() #11
  %480 = call %"class.extensions::APIPermissionInfo"* @_ZNK10extensions15PermissionsInfo7GetByIDENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsInfo"* %479, i32 125) #11
  %481 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %481) #11
  %482 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %310, align 8
  %483 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %482, i64 0, i32 3
  %484 = call i8* @_Znwm(i64 120) #12
  %485 = bitcast i8* %484 to %class.GURL*
  %486 = bitcast %"class.std::__1::basic_string"* %483 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %487 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %486, i64 0, i32 1, i32 0
  %488 = load i8, i8* %487, align 1
  %489 = icmp slt i8 %488, 0
  %490 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %483, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load i8*, i8** %490, align 8
  %492 = bitcast %"class.std::__1::basic_string"* %483 to i8*
  %493 = select i1 %489, i8* %491, i8* %492
  %494 = getelementptr inbounds %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider", %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %482, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %495 = load i64, i64* %494, align 8
  %496 = zext i8 %488 to i64
  %497 = select i1 %489, i64 %495, i64 %496
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %485, i8* %493, i64 %497) #11
  %498 = getelementptr inbounds i8, i8* %484, i64 24
  %499 = load i8, i8* %498, align 8, !range !2
  %500 = icmp eq i8 %499, 0
  br i1 %500, label %504, label %501

501:                                              ; preds = %476
  %502 = ptrtoint i8* %484 to i64
  %503 = call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* nonnull %485) #11
  br i1 %503, label %505, label %504

504:                                              ; preds = %501, %476
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %485) #11
  call void @_ZdlPv(i8* nonnull %484) #12
  br label %505

505:                                              ; preds = %501, %504
  %506 = phi i64 [ 0, %504 ], [ %502, %501 ]
  %507 = inttoptr i64 %506 to %class.GURL*
  %508 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %508) #11, !noalias !18
  %509 = getelementptr inbounds %class.GURL, %class.GURL* %507, i64 0, i32 2, i32 3, i32 1
  %510 = load i32, i32* %509, align 4, !noalias !21
  %511 = icmp slt i32 %510, 1
  br i1 %511, label %512, label %513

512:                                              ; preds = %505
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %508, i8 0, i64 24, i1 false) #11, !alias.scope !26, !noalias !18
  br label %520

513:                                              ; preds = %505
  %514 = getelementptr inbounds %class.GURL, %class.GURL* %507, i64 0, i32 0
  %515 = getelementptr inbounds %class.GURL, %class.GURL* %507, i64 0, i32 2, i32 3, i32 0
  %516 = load i32, i32* %515, align 4, !noalias !21
  %517 = sext i32 %516 to i64
  %518 = sext i32 %510 to i64
  %519 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %519) #11, !noalias !21
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %514, i64 %517, i64 %518, %"class.std::__1::allocator"* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %519) #11, !noalias !21
  br label %520

520:                                              ; preds = %513, %512
  call void @_ZN13url_formatter8StripWWWERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #11
  %521 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %522 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %521, i64 0, i32 1, i32 0
  %523 = load i8, i8* %522, align 1, !noalias !18
  %524 = icmp slt i8 %523, 0
  br i1 %524, label %525, label %528

525:                                              ; preds = %520
  %526 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load i8*, i8** %526, align 8, !noalias !18
  call void @_ZdlPv(i8* %527) #12
  br label %528

528:                                              ; preds = %520, %525
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %508) #11, !noalias !18
  call void @_ZN10extensions29SettingsOverrideAPIPermissionC1EPKNS_17APIPermissionInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::SettingsOverrideAPIPermission"* nonnull %478, %"class.extensions::APIPermissionInfo"* %480, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #11
  %529 = bitcast i8* %477 to %"class.extensions::APIPermission"*
  call void @_ZN10extensions17PermissionsParser16AddAPIPermissionEPNS_9ExtensionEPNS_13APIPermissionE(%"class.extensions::Extension"* %1, %"class.extensions::APIPermission"* nonnull %529) #11
  %530 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %531 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %530, i64 0, i32 1, i32 0
  %532 = load i8, i8* %531, align 1
  %533 = icmp slt i8 %532, 0
  br i1 %533, label %534, label %537

534:                                              ; preds = %528
  %535 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load i8*, i8** %535, align 8
  call void @_ZdlPv(i8* %536) #12
  br label %537

537:                                              ; preds = %528, %534
  %538 = icmp eq i64 %506, 0
  br i1 %538, label %541, label %539

539:                                              ; preds = %537
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %507) #11
  %540 = inttoptr i64 %506 to i8*
  call void @_ZdlPv(i8* %540) #12
  br label %541

541:                                              ; preds = %537, %539
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %481) #11
  %542 = load %class.GURL*, %class.GURL** %392, align 8
  %543 = load %class.GURL*, %class.GURL** %415, align 8
  br label %544

544:                                              ; preds = %427, %475, %541
  %545 = phi %class.GURL* [ %421, %475 ], [ %543, %541 ], [ %421, %427 ]
  %546 = phi %class.GURL* [ %419, %475 ], [ %542, %541 ], [ %419, %427 ]
  %547 = icmp eq %class.GURL* %546, %545
  br i1 %547, label %585, label %548

548:                                              ; preds = %544
  %549 = call i8* @_Znwm(i64 40) #12
  %550 = bitcast i8* %549 to %"class.extensions::SettingsOverrideAPIPermission"*
  %551 = call %"class.extensions::PermissionsInfo"* @_ZN10extensions15PermissionsInfo11GetInstanceEv() #11
  %552 = call %"class.extensions::APIPermissionInfo"* @_ZNK10extensions15PermissionsInfo7GetByIDENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsInfo"* %551, i32 132) #11
  %553 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %553) #11
  %554 = load %class.GURL*, %class.GURL** %392, align 8
  %555 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %555) #11, !noalias !27
  %556 = getelementptr inbounds %class.GURL, %class.GURL* %554, i64 0, i32 2, i32 3, i32 1
  %557 = load i32, i32* %556, align 4, !noalias !30
  %558 = icmp slt i32 %557, 1
  br i1 %558, label %559, label %560

559:                                              ; preds = %548
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %555, i8 0, i64 24, i1 false) #11, !alias.scope !35, !noalias !27
  br label %567

560:                                              ; preds = %548
  %561 = getelementptr inbounds %class.GURL, %class.GURL* %554, i64 0, i32 0
  %562 = getelementptr inbounds %class.GURL, %class.GURL* %554, i64 0, i32 2, i32 3, i32 0
  %563 = load i32, i32* %562, align 4, !noalias !30
  %564 = sext i32 %563 to i64
  %565 = sext i32 %557 to i64
  %566 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %566) #11, !noalias !30
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %561, i64 %564, i64 %565, %"class.std::__1::allocator"* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %566) #11, !noalias !30
  br label %567

567:                                              ; preds = %560, %559
  call void @_ZN13url_formatter8StripWWWERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  %568 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %569 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %568, i64 0, i32 1, i32 0
  %570 = load i8, i8* %569, align 1, !noalias !27
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %572, label %575

572:                                              ; preds = %567
  %573 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load i8*, i8** %573, align 8, !noalias !27
  call void @_ZdlPv(i8* %574) #12
  br label %575

575:                                              ; preds = %567, %572
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %555) #11, !noalias !27
  call void @_ZN10extensions29SettingsOverrideAPIPermissionC1EPKNS_17APIPermissionInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::SettingsOverrideAPIPermission"* nonnull %550, %"class.extensions::APIPermissionInfo"* %552, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28) #11
  %576 = bitcast i8* %549 to %"class.extensions::APIPermission"*
  call void @_ZN10extensions17PermissionsParser16AddAPIPermissionEPNS_9ExtensionEPNS_13APIPermissionE(%"class.extensions::Extension"* %1, %"class.extensions::APIPermission"* nonnull %576) #11
  %577 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %578 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %577, i64 0, i32 1, i32 0
  %579 = load i8, i8* %578, align 1
  %580 = icmp slt i8 %579, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %575
  %582 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %583 = load i8*, i8** %582, align 8
  call void @_ZdlPv(i8* %583) #12
  br label %584

584:                                              ; preds = %575, %581
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %553) #11
  br label %585

585:                                              ; preds = %584, %544
  %586 = load %class.GURL*, %class.GURL** %133, align 8
  %587 = icmp eq %class.GURL* %586, null
  br i1 %587, label %625, label %588

588:                                              ; preds = %585
  %589 = call i8* @_Znwm(i64 40) #12
  %590 = bitcast i8* %589 to %"class.extensions::SettingsOverrideAPIPermission"*
  %591 = call %"class.extensions::PermissionsInfo"* @_ZN10extensions15PermissionsInfo11GetInstanceEv() #11
  %592 = call %"class.extensions::APIPermissionInfo"* @_ZNK10extensions15PermissionsInfo7GetByIDENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsInfo"* %591, i32 83) #11
  %593 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %593) #11
  %594 = load %class.GURL*, %class.GURL** %133, align 8
  %595 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #11, !noalias !36
  %596 = getelementptr inbounds %class.GURL, %class.GURL* %594, i64 0, i32 2, i32 3, i32 1
  %597 = load i32, i32* %596, align 4, !noalias !39
  %598 = icmp slt i32 %597, 1
  br i1 %598, label %599, label %600

599:                                              ; preds = %588
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %595, i8 0, i64 24, i1 false) #11, !alias.scope !44, !noalias !36
  br label %607

600:                                              ; preds = %588
  %601 = getelementptr inbounds %class.GURL, %class.GURL* %594, i64 0, i32 0
  %602 = getelementptr inbounds %class.GURL, %class.GURL* %594, i64 0, i32 2, i32 3, i32 0
  %603 = load i32, i32* %602, align 4, !noalias !39
  %604 = sext i32 %603 to i64
  %605 = sext i32 %597 to i64
  %606 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %606) #11, !noalias !39
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %601, i64 %604, i64 %605, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %606) #11, !noalias !39
  br label %607

607:                                              ; preds = %600, %599
  call void @_ZN13url_formatter8StripWWWERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %29, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #11
  %608 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %609 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %608, i64 0, i32 1, i32 0
  %610 = load i8, i8* %609, align 1, !noalias !36
  %611 = icmp slt i8 %610, 0
  br i1 %611, label %612, label %615

612:                                              ; preds = %607
  %613 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = load i8*, i8** %613, align 8, !noalias !36
  call void @_ZdlPv(i8* %614) #12
  br label %615

615:                                              ; preds = %607, %612
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %595) #11, !noalias !36
  call void @_ZN10extensions29SettingsOverrideAPIPermissionC1EPKNS_17APIPermissionInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::SettingsOverrideAPIPermission"* nonnull %590, %"class.extensions::APIPermissionInfo"* %592, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29) #11
  %616 = bitcast i8* %589 to %"class.extensions::APIPermission"*
  call void @_ZN10extensions17PermissionsParser16AddAPIPermissionEPNS_9ExtensionEPNS_13APIPermissionE(%"class.extensions::Extension"* %1, %"class.extensions::APIPermission"* nonnull %616) #11
  %617 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %618 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %617, i64 0, i32 1, i32 0
  %619 = load i8, i8* %618, align 1
  %620 = icmp slt i8 %619, 0
  br i1 %620, label %621, label %624

621:                                              ; preds = %615
  %622 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = load i8*, i8** %622, align 8
  call void @_ZdlPv(i8* %623) #12
  br label %624

624:                                              ; preds = %615, %621
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %593) #11
  br label %625

625:                                              ; preds = %585, %624
  %626 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %626) #11
  %627 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0)) #11
  %628 = icmp ugt i64 %627, -17
  br i1 %628, label %629, label %631

629:                                              ; preds = %625
  %630 = bitcast %"class.std::__1::basic_string"* %30 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %630) #13
  unreachable

631:                                              ; preds = %625
  %632 = icmp ult i64 %627, 23
  br i1 %632, label %642, label %633

633:                                              ; preds = %631
  %634 = add nuw i64 %627, 16
  %635 = and i64 %634, -16
  %636 = call i8* @_Znwm(i64 %635) #12
  %637 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %636, i8** %637, align 8
  %638 = or i64 %635, -9223372036854775808
  %639 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %638, i64* %639, align 8
  %640 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %627, i64* %640, align 8
  %641 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %647

642:                                              ; preds = %631
  %643 = trunc i64 %627 to i8
  %644 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %645 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %644, i64 0, i32 1, i32 0
  store i8 %643, i8* %645, align 1
  %646 = icmp eq i64 %627, 0
  br i1 %646, label %650, label %647

647:                                              ; preds = %642, %633
  %648 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %644, %642 ], [ %641, %633 ]
  %649 = phi i8* [ %626, %642 ], [ %636, %633 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %649, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys17kSettingsOverrideE, i64 0, i64 0), i64 %627, i1 false) #11
  br label %650

650:                                              ; preds = %642, %647
  %651 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %644, %642 ], [ %648, %647 ]
  %652 = phi i8* [ %626, %642 ], [ %649, %647 ]
  %653 = getelementptr inbounds i8, i8* %652, i64 %627
  store i8 0, i8* %653, align 1
  %654 = bitcast i8* %76 to %"struct.extensions::Extension::ManifestData"*
  call void @_ZN10extensions9Extension15SetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS0_12ManifestDataENS1_14default_deleteISB_EEEE(%"class.extensions::Extension"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %30, %"struct.extensions::Extension::ManifestData"* nonnull %654) #11
  %655 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %651, i64 0, i32 1, i32 0
  %656 = load i8, i8* %655, align 1
  %657 = icmp slt i8 %656, 0
  br i1 %657, label %658, label %661

658:                                              ; preds = %650
  %659 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %660 = load i8*, i8** %659, align 8
  call void @_ZdlPv(i8* %660) #12
  br label %661

661:                                              ; preds = %650, %658
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %626) #11
  br label %662

662:                                              ; preds = %438, %460, %473, %449, %661
  %663 = phi i64 [ 0, %661 ], [ %79, %473 ], [ %79, %460 ], [ %79, %449 ], [ %79, %438 ]
  %664 = phi i1 [ true, %661 ], [ false, %473 ], [ false, %460 ], [ false, %449 ], [ false, %438 ]
  %665 = bitcast %"class.std::__1::basic_string.129"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %666 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %665, i64 0, i32 1, i32 1
  %667 = load i8, i8* %666, align 1
  %668 = icmp slt i8 %667, 0
  br i1 %668, label %669, label %672

669:                                              ; preds = %662
  %670 = bitcast %"class.std::__1::basic_string.129"* %24 to i8**
  %671 = load i8*, i8** %670, align 8
  call void @_ZdlPv(i8* %671) #12
  br label %672

672:                                              ; preds = %662, %669
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #11
  %673 = bitcast %"class.std::__1::basic_string.129"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %674 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %673, i64 0, i32 1, i32 1
  %675 = load i8, i8* %674, align 1
  %676 = icmp slt i8 %675, 0
  br i1 %676, label %677, label %680

677:                                              ; preds = %672
  %678 = bitcast %"class.std::__1::basic_string.129"* %23 to i8**
  %679 = load i8*, i8** %678, align 8
  call void @_ZdlPv(i8* %679) #12
  br label %680

680:                                              ; preds = %672, %677
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #11
  %681 = bitcast %"class.std::__1::basic_string.129"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %682 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %681, i64 0, i32 1, i32 1
  %683 = load i8, i8* %682, align 1
  %684 = icmp slt i8 %683, 0
  br i1 %684, label %685, label %688

685:                                              ; preds = %680
  %686 = bitcast %"class.std::__1::basic_string.129"* %22 to i8**
  %687 = load i8*, i8** %686, align 8
  call void @_ZdlPv(i8* %687) #12
  br label %688

688:                                              ; preds = %680, %685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #11
  %689 = icmp eq i64 %663, 0
  br i1 %689, label %696, label %690

690:                                              ; preds = %688
  %691 = inttoptr i64 %663 to %"struct.extensions::SettingsOverrides"*
  %692 = inttoptr i64 %663 to void (%"struct.extensions::SettingsOverrides"*)***
  %693 = load void (%"struct.extensions::SettingsOverrides"*)**, void (%"struct.extensions::SettingsOverrides"*)*** %692, align 8
  %694 = getelementptr inbounds void (%"struct.extensions::SettingsOverrides"*)*, void (%"struct.extensions::SettingsOverrides"*)** %693, i64 1
  %695 = load void (%"struct.extensions::SettingsOverrides"*)*, void (%"struct.extensions::SettingsOverrides"*)** %694, align 8
  call void %695(%"struct.extensions::SettingsOverrides"* nonnull %691) #11
  br label %696

696:                                              ; preds = %688, %690
  call void @_ZN10extensions3api14manifest_types23ChromeSettingsOverridesD1Ev(%"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* nonnull %73) #11
  %697 = bitcast %"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* %73 to i8*
  call void @_ZdlPv(i8* %697) #12
  br label %698

698:                                              ; preds = %71, %696
  %699 = phi i1 [ %664, %696 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  ret i1 %699
}

declare zeroext i1 @_ZNK10extensions8Manifest3GetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPPKN4base5ValueE(%"class.extensions::Manifest"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"**) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare %"struct.extensions::api::manifest_types::ChromeSettingsOverrides"* @_ZN10extensions3api14manifest_types23ChromeSettingsOverrides9FromValueERKN4base5ValueEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string.129"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.129"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.129"*, %"class.std::__1::basic_string.129"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.129"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.129"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.129"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.129"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.129"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.129"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.129"*
  %35 = icmp ugt %"class.std::__1::basic_string.129"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !45
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !45
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !48, !noalias !45
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !48, !noalias !45
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !45
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !45
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !48, !noalias !45
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !48, !noalias !45
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !45
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !45
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !48, !noalias !45
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !48, !noalias !45
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !45
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !45
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !48, !noalias !45
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !48, !noalias !45
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !50

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !45
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !45
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !48, !noalias !45
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !48, !noalias !45
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !52

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !54

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !55

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.129"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !56
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !56
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !59, !noalias !56
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !59, !noalias !56
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !56
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !56
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !59, !noalias !56
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !59, !noalias !56
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !56
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !56
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !59, !noalias !56
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !59, !noalias !56
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !56
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !56
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !59, !noalias !56
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !59, !noalias !56
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !61

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !56
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !56
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !59, !noalias !56
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !59, !noalias !56
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !62

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !63

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !64

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.129"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.129"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !65
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !65
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !68, !noalias !65
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !68, !noalias !65
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !65
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !65
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !68, !noalias !65
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !68, !noalias !65
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !65
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !65
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !68, !noalias !65
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !68, !noalias !65
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !65
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !65
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !68, !noalias !65
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !68, !noalias !65
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !70

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !65
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !65
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !68, !noalias !65
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !68, !noalias !65
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !71

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !72

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !73

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.129"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.129"* %0
}

declare void @_ZN10extensions10ErrorUtils23FormatErrorMessageUTF16EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string.129"* sret, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN10extensions17PermissionsParser16AddAPIPermissionEPNS_9ExtensionEPNS_13APIPermissionE(%"class.extensions::Extension"*, %"class.extensions::APIPermission"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare %"class.extensions::PermissionsInfo"* @_ZN10extensions15PermissionsInfo11GetInstanceEv() local_unnamed_addr #2

declare %"class.extensions::APIPermissionInfo"* @_ZNK10extensions15PermissionsInfo7GetByIDENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionsInfo"*, i32) local_unnamed_addr #2

declare void @_ZN10extensions29SettingsOverrideAPIPermissionC1EPKNS_17APIPermissionInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::SettingsOverrideAPIPermission"*, %"class.extensions::APIPermissionInfo"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN10extensions9Extension15SetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS0_12ManifestDataENS1_14default_deleteISB_EEEE(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.extensions::Extension::ManifestData"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i8** } @_ZNK10extensions24SettingsOverridesHandler4KeysEv(%"class.extensions::SettingsOverridesHandler"* nocapture readnone) unnamed_addr #6 align 2 {
  ret { i64, i8** } { i64 1, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @_ZZNK10extensions24SettingsOverridesHandler4KeysEvE5kKeys, i64 0, i64 0) }
}

declare zeroext i1 @_ZNK10extensions15ManifestHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE(%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.65"*) unnamed_addr #2

declare zeroext i1 @_ZNK10extensions15ManifestHandler18AlwaysParseForTypeENS_8Manifest4TypeE(%"class.extensions::ManifestHandler"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE(%"class.extensions::ManifestHandler"*, i32) unnamed_addr #2

declare void @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv(%"class.std::__1::vector"* sret, %"class.extensions::ManifestHandler"*) unnamed_addr #2

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler16CreatePermissionEv(%"class.extensions::ManifestHandler"*) unnamed_addr #2

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE(%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*) unnamed_addr #2

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare void @_ZN4GURL4SwapEPS_(%class.GURL*, %class.GURL*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.32"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.GURL** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 153722867280912930
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.GURL** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 120
  %20 = icmp ult i64 %19, 76861433640456465
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 153722867280912930, %14 ]
  %28 = mul i64 %27, 120
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %class.GURL*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %class.GURL* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %9
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %32
  %36 = ptrtoint %class.GURL* %35 to i64
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %34, %class.GURL* dereferenceable(120) %1) #11
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %34, i64 1
  %38 = ptrtoint %class.GURL* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %40 = load %class.GURL*, %class.GURL** %39, align 8
  %41 = load %class.GURL*, %class.GURL** %3, align 8
  %42 = icmp eq %class.GURL* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %class.GURL* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %class.GURL* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %class.GURL* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %class.GURL, %class.GURL* %46, i64 -1
  %49 = getelementptr inbounds %class.GURL, %class.GURL* %47, i64 -1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %48, %class.GURL* dereferenceable(120) %49) #11
  %50 = icmp eq %class.GURL* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %class.GURL*, %class.GURL** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %class.GURL* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %class.GURL* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %class.GURL* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %class.GURL*
  %60 = icmp eq %class.GURL* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %class.GURL* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %class.GURL, %class.GURL* %62, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %63) #11
  %64 = icmp eq %class.GURL* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN13url_formatter8StripWWWERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN10extensions3api14manifest_types23ChromeSettingsOverrides14SearchProviderD1Ev(%"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN10extensions3api14manifest_types23ChromeSettingsOverridesD1Ev(%"struct.extensions::api::manifest_types::ChromeSettingsOverrides"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.129"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.129"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.129"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.129"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !74
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !74
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !77, !noalias !74
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !77, !noalias !74
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !74
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !74
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !77, !noalias !74
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !77, !noalias !74
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !74
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !74
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !77, !noalias !74
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !77, !noalias !74
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !74
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !74
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !77, !noalias !74
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !77, !noalias !74
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !79

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !74
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !74
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !77, !noalias !74
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !77, !noalias !74
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !80

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !81

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !82

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !83

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !84

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !85

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !87
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !87
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !90, !noalias !87
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !90, !noalias !87
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !87
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !87
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !90, !noalias !87
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !90, !noalias !87
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !87
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !87
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !90, !noalias !87
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !90, !noalias !87
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !87
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !87
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !90, !noalias !87
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !90, !noalias !87
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !92

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !87
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !87
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !90, !noalias !87
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !90, !noalias !87
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !93

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !94

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !95

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.129"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.129", %"class.std::__1::basic_string.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc: argument 0"}
!5 = distinct !{!5, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc: argument 0"}
!8 = distinct !{!8, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc: argument 0"}
!11 = distinct !{!11, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc: argument 0"}
!14 = distinct !{!14, !"_ZZN10extensions12_GLOBAL__N_117ParseSearchEngineEPNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEENK3$_0clEPKc"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN10extensions12_GLOBAL__N_116ParseStartupPageERKNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE: argument 0"}
!17 = distinct !{!17, !"_ZN10extensions12_GLOBAL__N_116ParseStartupPageERKNS_3api14manifest_types23ChromeSettingsOverridesEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN10extensions12_GLOBAL__N_119FormatUrlForDisplayERK4GURL: argument 0"}
!20 = distinct !{!20, !"_ZN10extensions12_GLOBAL__N_119FormatUrlForDisplayERK4GURL"}
!21 = !{!22, !24, !19}
!22 = distinct !{!22, !23, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!23 = distinct !{!23, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!24 = distinct !{!24, !25, !"_ZNK4GURL4hostEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4GURL4hostEv"}
!26 = !{!22, !24}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN10extensions12_GLOBAL__N_119FormatUrlForDisplayERK4GURL: argument 0"}
!29 = distinct !{!29, !"_ZN10extensions12_GLOBAL__N_119FormatUrlForDisplayERK4GURL"}
!30 = !{!31, !33, !28}
!31 = distinct !{!31, !32, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!32 = distinct !{!32, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!33 = distinct !{!33, !34, !"_ZNK4GURL4hostEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4GURL4hostEv"}
!35 = !{!31, !33}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN10extensions12_GLOBAL__N_119FormatUrlForDisplayERK4GURL: argument 0"}
!38 = distinct !{!38, !"_ZN10extensions12_GLOBAL__N_119FormatUrlForDisplayERK4GURL"}
!39 = !{!40, !42, !37}
!40 = distinct !{!40, !41, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!41 = distinct !{!41, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!42 = distinct !{!42, !43, !"_ZNK4GURL4hostEv: argument 0"}
!43 = distinct !{!43, !"_ZNK4GURL4hostEv"}
!44 = !{!40, !42}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !51}
!51 = !{!"llvm.loop.isvectorized", i32 1}
!52 = distinct !{!52, !53}
!53 = !{!"llvm.loop.unroll.disable"}
!54 = distinct !{!54, !53}
!55 = distinct !{!55, !51}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !51}
!62 = distinct !{!62, !53}
!63 = distinct !{!63, !53}
!64 = distinct !{!64, !51}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !51}
!71 = distinct !{!71, !53}
!72 = distinct !{!72, !53}
!73 = distinct !{!73, !51}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !51}
!80 = distinct !{!80, !53}
!81 = distinct !{!81, !53}
!82 = distinct !{!82, !51}
!83 = distinct !{!83, !51}
!84 = distinct !{!84, !53}
!85 = distinct !{!85, !86, !51}
!86 = !{!"llvm.loop.unroll.runtime.disable"}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !51}
!93 = distinct !{!93, !53}
!94 = distinct !{!94, !53}
!95 = distinct !{!95, !51}
