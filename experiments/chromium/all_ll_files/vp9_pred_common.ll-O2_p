; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/common/vp9_pred_common.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/common/vp9_pred_common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VP9Common = type { %struct.vpx_internal_error_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], [8 x i32], [3 x %struct.RefBuffer], i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], i32, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, i32 (%struct.VP9Common*, i32)*, void (%struct.VP9Common*)*, void (%struct.VP9Common*)*, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, i32, i32, i32, [2 x i8*], i8*, i8*, i32, i8, [11 x i8], %struct.loop_filter_info_n, i32, [4 x i32], %struct.loopfilter, %struct.segmentation, i8, [2 x i8], i32, %struct.frame_contexts*, %struct.frame_contexts*, i32, %struct.FRAME_COUNTS, i32, i32, i32, i32, i32, %struct.postproc_state, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i8*, i32, i32, [8 x i8] }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.RefCntBuffer = type { i32, %struct.MV_REF*, i32, i32, i8, i32, i32, %struct.vpx_codec_frame_buffer, %struct.yv12_buffer_config }
%struct.MV_REF = type { [2 x %union.int_mv], [2 x i8] }
%union.int_mv = type { i32 }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [8 x [4 x [2 x i8]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { i32, i32, i32, i32, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], %struct.LOOP_FILTER_MASK*, i32 }
%struct.LOOP_FILTER_MASK = type { [4 x i64], [4 x i64], i64, [4 x i16], [4 x i16], i16, [64 x i8] }
%struct.segmentation = type { i8, i8, i8, i8, i8, [7 x i8], [3 x i8], [8 x [4 x i16]], [8 x i32], i32 }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.postproc_state = type { i32, i32, i32, i32, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i8*, i8* }
%struct.BufferPool = type { i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, [12 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.buf_2d = type { i8*, i32 }
%struct.TileInfo = type { i32, i32, i32, i32 }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_compound_reference_allowed(%struct.VP9Common* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67, i64 1
  %3 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67, i64 2
  %4 = load i32, i32* %3, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  ret i32 1

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67, i64 3
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %2, align 4
  %12 = icmp eq i32 %10, %11
  %13 = select i1 %12, i32 0, i32 1
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_setup_compound_reference_mode(%struct.VP9Common* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67, i64 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67, i64 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 70
  store i8 3, i8* %8, align 4
  br label %16

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67, i64 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %3, %11
  %13 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 70
  br i1 %12, label %14, label %15

14:                                               ; preds = %9
  store i8 2, i8* %13, align 4
  br label %16

15:                                               ; preds = %9
  store i8 1, i8* %13, align 4
  br label %16

16:                                               ; preds = %14, %15, %7
  %17 = phi i8 [ 1, %14 ], [ 2, %15 ], [ 1, %7 ]
  %18 = phi i8 [ 3, %14 ], [ 3, %15 ], [ 2, %7 ]
  %19 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 0
  store i8 %17, i8* %19, align 1
  %20 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 1
  store i8 %18, i8* %20, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_get_reference_mode_context(%struct.VP9Common* nocapture readonly, %struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 8
  %4 = load %struct.MODE_INFO*, %struct.MODE_INFO** %3, align 8
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 7
  %6 = load %struct.MODE_INFO*, %struct.MODE_INFO** %5, align 8
  %7 = icmp ne %struct.MODE_INFO* %4, null
  %8 = icmp ne %struct.MODE_INFO* %6, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %43

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %4, i64 0, i32 8, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 1
  %14 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %6, i64 0, i32 8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 1
  br i1 %13, label %17, label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %4, i64 0, i32 8, i64 0
  %19 = load i8, i8* %18, align 4
  %20 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 70
  %21 = load i8, i8* %20, align 4
  %22 = icmp eq i8 %19, %21
  br i1 %16, label %23, label %29

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %6, i64 0, i32 8, i64 0
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, %21
  %27 = xor i1 %22, %26
  %28 = zext i1 %27 to i32
  br label %57

29:                                               ; preds = %17
  br i1 %22, label %57, label %30

30:                                               ; preds = %29
  %31 = icmp slt i8 %19, 1
  %32 = select i1 %31, i32 3, i32 2
  br label %57

33:                                               ; preds = %10
  br i1 %16, label %34, label %57

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %6, i64 0, i32 8, i64 0
  %36 = load i8, i8* %35, align 4
  %37 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 70
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %36, %38
  br i1 %39, label %57, label %40

40:                                               ; preds = %34
  %41 = icmp slt i8 %36, 1
  %42 = select i1 %41, i32 3, i32 2
  br label %57

43:                                               ; preds = %2
  %44 = or i1 %7, %8
  br i1 %44, label %45, label %57

45:                                               ; preds = %43
  %46 = select i1 %7, %struct.MODE_INFO* %4, %struct.MODE_INFO* %6
  %47 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %46, i64 0, i32 8, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %46, i64 0, i32 8, i64 0
  %52 = load i8, i8* %51, align 4
  %53 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 70
  %54 = load i8, i8* %53, align 4
  %55 = icmp eq i8 %52, %54
  %56 = zext i1 %55 to i32
  br label %57

57:                                               ; preds = %43, %50, %45, %33, %34, %40, %29, %30, %23
  %58 = phi i32 [ %28, %23 ], [ 3, %29 ], [ %32, %30 ], [ 3, %34 ], [ %42, %40 ], [ 4, %33 ], [ %56, %50 ], [ 3, %45 ], [ 1, %43 ]
  ret i32 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_get_pred_context_comp_ref_p(%struct.VP9Common* nocapture readonly, %struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 8
  %4 = load %struct.MODE_INFO*, %struct.MODE_INFO** %3, align 8
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 7
  %6 = load %struct.MODE_INFO*, %struct.MODE_INFO** %5, align 8
  %7 = icmp ne %struct.MODE_INFO* %4, null
  %8 = icmp ne %struct.MODE_INFO* %6, null
  %9 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 70
  %10 = load i8, i8* %9, align 4
  %11 = sext i8 %10 to i64
  %12 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 67, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = and i1 %7, %8
  br i1 %15, label %16, label %94

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %4, i64 0, i32 8, i64 0
  %18 = load i8, i8* %17, align 4
  %19 = icmp sgt i8 %18, 0
  %20 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %6, i64 0, i32 8, i64 0
  %21 = load i8, i8* %20, align 4
  %22 = icmp sgt i8 %21, 0
  %23 = or i1 %19, %22
  br i1 %23, label %24, label %119

24:                                               ; preds = %16
  %25 = and i1 %19, %22
  br i1 %25, label %42, label %26

26:                                               ; preds = %24
  %27 = select i1 %19, %struct.MODE_INFO* %4, %struct.MODE_INFO* %6
  %28 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %27, i64 0, i32 8, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 1
  %31 = zext i1 %14 to i64
  %32 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %27, i64 0, i32 8, i64 %31
  %33 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %27, i64 0, i32 8, i64 0
  %34 = select i1 %30, i8* %33, i8* %32
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp ne i8 %35, %37
  %39 = zext i1 %38 to i32
  %40 = shl nuw nsw i32 %39, 1
  %41 = or i32 %40, 1
  br label %119

42:                                               ; preds = %24
  %43 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %6, i64 0, i32 8, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp sgt i8 %44, 0
  %46 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %4, i64 0, i32 8, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp sgt i8 %47, 0
  %49 = zext i1 %14 to i64
  %50 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %4, i64 0, i32 8, i64 %49
  %51 = select i1 %48, i8* %50, i8* %17
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %6, i64 0, i32 8, i64 %49
  %54 = select i1 %45, i8* %53, i8* %20
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %52, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %42
  %58 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, %52
  br i1 %60, label %119, label %61

61:                                               ; preds = %57, %42
  %62 = or i1 %45, %48
  br i1 %62, label %77, label %63

63:                                               ; preds = %61
  %64 = icmp eq i8 %52, %10
  br i1 %64, label %65, label %69

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %55, %67
  br i1 %68, label %119, label %69

69:                                               ; preds = %65, %63
  %70 = icmp eq i8 %55, %10
  br i1 %70, label %71, label %75

71:                                               ; preds = %69
  %72 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %52, %73
  br i1 %74, label %119, label %75

75:                                               ; preds = %71, %69
  %76 = select i1 %56, i32 3, i32 1
  br label %119

77:                                               ; preds = %61
  %78 = and i1 %45, %48
  br i1 %78, label %92, label %79

79:                                               ; preds = %77
  %80 = select i1 %45, i8 %55, i8 %52
  %81 = select i1 %48, i8 %55, i8 %52
  %82 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp ne i8 %80, %83
  %85 = icmp eq i8 %81, %83
  %86 = or i1 %84, %85
  br i1 %86, label %87, label %119

87:                                               ; preds = %79
  %88 = icmp ne i8 %81, %83
  %89 = icmp eq i8 %80, %83
  %90 = or i1 %88, %89
  %91 = select i1 %90, i32 4, i32 2
  ret i32 %91

92:                                               ; preds = %77
  %93 = select i1 %56, i32 4, i32 2
  br label %119

94:                                               ; preds = %2
  %95 = or i1 %7, %8
  br i1 %95, label %96, label %119

96:                                               ; preds = %94
  %97 = select i1 %7, %struct.MODE_INFO* %4, %struct.MODE_INFO* %6
  %98 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %97, i64 0, i32 8, i64 0
  %99 = load i8, i8* %98, align 4
  %100 = icmp slt i8 %99, 1
  br i1 %100, label %119, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %97, i64 0, i32 8, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 1
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = zext i1 %14 to i64
  %107 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %97, i64 0, i32 8, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp ne i8 %108, %110
  %112 = zext i1 %111 to i32
  %113 = shl nuw nsw i32 %112, 2
  br label %119

114:                                              ; preds = %101
  %115 = getelementptr inbounds %struct.VP9Common, %struct.VP9Common* %0, i64 0, i32 71, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %99, %116
  %118 = select i1 %117, i32 0, i32 3
  br label %119

119:                                              ; preds = %16, %94, %114, %105, %96, %26, %92, %79, %75, %65, %71, %57
  %120 = phi i32 [ %41, %26 ], [ 2, %16 ], [ 0, %57 ], [ 4, %71 ], [ 4, %65 ], [ %76, %75 ], [ 1, %79 ], [ %93, %92 ], [ %113, %105 ], [ %118, %114 ], [ 2, %96 ], [ 2, %94 ]
  ret i32 %120
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_get_pred_context_single_ref_p1(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 8
  %3 = load %struct.MODE_INFO*, %struct.MODE_INFO** %2, align 8
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 7
  %5 = load %struct.MODE_INFO*, %struct.MODE_INFO** %4, align 8
  %6 = icmp ne %struct.MODE_INFO* %3, null
  %7 = icmp ne %struct.MODE_INFO* %5, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %71

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %3, i64 0, i32 8, i64 0
  %11 = load i8, i8* %10, align 4
  %12 = icmp sgt i8 %11, 0
  %13 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %5, i64 0, i32 8, i64 0
  %14 = load i8, i8* %13, align 4
  %15 = icmp sgt i8 %14, 0
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %90

17:                                               ; preds = %9
  %18 = and i1 %12, %15
  br i1 %18, label %34, label %19

19:                                               ; preds = %17
  %20 = select i1 %12, %struct.MODE_INFO* %3, %struct.MODE_INFO* %5
  %21 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %20, i64 0, i32 8, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 1
  %24 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %20, i64 0, i32 8, i64 0
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, 1
  br i1 %23, label %27, label %30

27:                                               ; preds = %19
  %28 = zext i1 %26 to i32
  %29 = shl nuw nsw i32 %28, 2
  br label %90

30:                                               ; preds = %19
  br i1 %26, label %90, label %31

31:                                               ; preds = %30
  %32 = icmp eq i8 %22, 1
  %33 = select i1 %32, i32 2, i32 1
  br label %90

34:                                               ; preds = %17
  %35 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %3, i64 0, i32 8, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp sgt i8 %36, 0
  %38 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %5, i64 0, i32 8, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp sgt i8 %39, 0
  %41 = and i1 %37, %40
  br i1 %41, label %42, label %51

42:                                               ; preds = %34
  %43 = icmp eq i8 %11, 1
  %44 = icmp eq i8 %36, 1
  %45 = or i1 %43, %44
  %46 = icmp eq i8 %14, 1
  %47 = or i1 %46, %45
  %48 = icmp eq i8 %39, 1
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 2, i32 1
  br label %90

51:                                               ; preds = %34
  %52 = or i1 %37, %40
  br i1 %52, label %53, label %64

53:                                               ; preds = %51
  %54 = select i1 %37, i8 %14, i8 %11
  %55 = select i1 %37, i8 %11, i8 %14
  %56 = select i1 %37, i8 %36, i8 %39
  %57 = icmp eq i8 %54, 1
  %58 = icmp eq i8 %55, 1
  %59 = icmp eq i8 %56, 1
  %60 = or i1 %58, %59
  %61 = select i1 %60, i32 4, i32 3
  %62 = zext i1 %60 to i32
  %63 = select i1 %57, i32 %61, i32 %62
  br label %90

64:                                               ; preds = %51
  %65 = icmp eq i8 %11, 1
  %66 = zext i1 %65 to i32
  %67 = icmp eq i8 %14, 1
  %68 = zext i1 %67 to i32
  %69 = add nuw nsw i32 %68, %66
  %70 = shl nuw nsw i32 %69, 1
  br label %90

71:                                               ; preds = %1
  %72 = or i1 %6, %7
  br i1 %72, label %73, label %90

73:                                               ; preds = %71
  %74 = select i1 %6, %struct.MODE_INFO* %3, %struct.MODE_INFO* %5
  %75 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %74, i64 0, i32 8, i64 0
  %76 = load i8, i8* %75, align 4
  %77 = icmp slt i8 %76, 1
  br i1 %77, label %90, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %74, i64 0, i32 8, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 1
  %82 = icmp eq i8 %76, 1
  br i1 %81, label %83, label %86

83:                                               ; preds = %78
  %84 = zext i1 %82 to i32
  %85 = shl nuw nsw i32 %84, 2
  br label %90

86:                                               ; preds = %78
  br i1 %82, label %90, label %87

87:                                               ; preds = %86
  %88 = icmp eq i8 %80, 1
  %89 = select i1 %88, i32 2, i32 1
  br label %90

90:                                               ; preds = %9, %71, %83, %73, %87, %86, %30, %31, %27, %53, %42, %64
  %91 = phi i32 [ 2, %9 ], [ %29, %27 ], [ 2, %30 ], [ %33, %31 ], [ %70, %64 ], [ %50, %42 ], [ %63, %53 ], [ %85, %83 ], [ 2, %73 ], [ 2, %86 ], [ %89, %87 ], [ 2, %71 ]
  ret i32 %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp9_get_pred_context_single_ref_p2(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 8
  %3 = load %struct.MODE_INFO*, %struct.MODE_INFO** %2, align 8
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 7
  %5 = load %struct.MODE_INFO*, %struct.MODE_INFO** %4, align 8
  %6 = icmp ne %struct.MODE_INFO* %3, null
  %7 = icmp ne %struct.MODE_INFO* %5, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %95

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %3, i64 0, i32 8, i64 0
  %11 = load i8, i8* %10, align 4
  %12 = icmp sgt i8 %11, 0
  %13 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %5, i64 0, i32 8, i64 0
  %14 = load i8, i8* %13, align 4
  %15 = icmp sgt i8 %14, 0
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %117

17:                                               ; preds = %9
  %18 = and i1 %12, %15
  br i1 %18, label %39, label %19

19:                                               ; preds = %17
  %20 = select i1 %12, %struct.MODE_INFO* %3, %struct.MODE_INFO* %5
  %21 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %20, i64 0, i32 8, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 1
  %24 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %20, i64 0, i32 8, i64 0
  %25 = load i8, i8* %24, align 4
  br i1 %23, label %26, label %32

26:                                               ; preds = %19
  %27 = icmp eq i8 %25, 1
  br i1 %27, label %117, label %28

28:                                               ; preds = %26
  %29 = icmp eq i8 %25, 2
  %30 = zext i1 %29 to i32
  %31 = shl nuw nsw i32 %30, 2
  br label %117

32:                                               ; preds = %19
  %33 = icmp eq i8 %25, 2
  br i1 %33, label %117, label %34

34:                                               ; preds = %32
  %35 = icmp eq i8 %22, 2
  %36 = zext i1 %35 to i32
  %37 = shl nuw nsw i32 %36, 1
  %38 = or i32 %37, 1
  br label %117

39:                                               ; preds = %17
  %40 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %3, i64 0, i32 8, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp sgt i8 %41, 0
  %43 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %5, i64 0, i32 8, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp sgt i8 %44, 0
  %46 = and i1 %42, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %39
  %48 = icmp eq i8 %11, %14
  %49 = icmp eq i8 %41, %44
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %117

51:                                               ; preds = %47
  %52 = icmp eq i8 %11, 2
  %53 = icmp eq i8 %41, 2
  %54 = or i1 %52, %53
  %55 = select i1 %54, i32 3, i32 0
  br label %117

56:                                               ; preds = %39
  %57 = or i1 %42, %45
  br i1 %57, label %58, label %77

58:                                               ; preds = %56
  %59 = select i1 %42, i8 %14, i8 %11
  %60 = select i1 %42, i8 %11, i8 %14
  %61 = select i1 %42, i8 %41, i8 %44
  %62 = icmp eq i8 %59, 2
  br i1 %62, label %63, label %68

63:                                               ; preds = %58
  %64 = icmp eq i8 %60, 2
  %65 = icmp eq i8 %61, 2
  %66 = or i1 %64, %65
  %67 = select i1 %66, i32 4, i32 3
  br label %117

68:                                               ; preds = %58
  %69 = icmp eq i8 %59, 3
  %70 = icmp eq i8 %60, 2
  %71 = icmp eq i8 %61, 2
  %72 = or i1 %70, %71
  %73 = zext i1 %72 to i32
  br i1 %69, label %117, label %74

74:                                               ; preds = %68
  %75 = shl nuw nsw i32 %73, 1
  %76 = or i32 %75, 1
  br label %117

77:                                               ; preds = %56
  %78 = icmp eq i8 %11, 1
  %79 = icmp eq i8 %14, 1
  %80 = and i1 %78, %79
  br i1 %80, label %117, label %81

81:                                               ; preds = %77
  %82 = or i1 %78, %79
  br i1 %82, label %83, label %88

83:                                               ; preds = %81
  %84 = select i1 %78, i8 %14, i8 %11
  %85 = icmp eq i8 %84, 2
  %86 = zext i1 %85 to i32
  %87 = shl nuw nsw i32 %86, 2
  br label %117

88:                                               ; preds = %81
  %89 = icmp eq i8 %11, 2
  %90 = zext i1 %89 to i32
  %91 = icmp eq i8 %14, 2
  %92 = zext i1 %91 to i32
  %93 = add nuw nsw i32 %92, %90
  %94 = shl nuw nsw i32 %93, 1
  br label %117

95:                                               ; preds = %1
  %96 = or i1 %6, %7
  br i1 %96, label %97, label %117

97:                                               ; preds = %95
  %98 = select i1 %6, %struct.MODE_INFO* %3, %struct.MODE_INFO* %5
  %99 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %98, i64 0, i32 8, i64 0
  %100 = load i8, i8* %99, align 4
  %101 = icmp slt i8 %100, 1
  br i1 %101, label %117, label %102

102:                                              ; preds = %97
  %103 = icmp eq i8 %100, 1
  %104 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %98, i64 0, i32 8, i64 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 1
  br i1 %103, label %107, label %108

107:                                              ; preds = %102
  br i1 %106, label %117, label %114

108:                                              ; preds = %102
  %109 = icmp eq i8 %100, 2
  br i1 %106, label %110, label %113

110:                                              ; preds = %108
  %111 = zext i1 %109 to i32
  %112 = shl nuw nsw i32 %111, 2
  br label %117

113:                                              ; preds = %108
  br i1 %109, label %117, label %114

114:                                              ; preds = %107, %113
  %115 = icmp eq i8 %105, 2
  %116 = select i1 %115, i32 3, i32 0
  br label %117

117:                                              ; preds = %9, %95, %110, %107, %97, %114, %113, %32, %34, %26, %28, %77, %63, %74, %68, %47, %51, %83, %88
  %118 = phi i32 [ 2, %9 ], [ %31, %28 ], [ 3, %26 ], [ 3, %32 ], [ %38, %34 ], [ %87, %83 ], [ %94, %88 ], [ %55, %51 ], [ 2, %47 ], [ %67, %63 ], [ %76, %74 ], [ %73, %68 ], [ 3, %77 ], [ %112, %110 ], [ 2, %107 ], [ 2, %97 ], [ 3, %113 ], [ %116, %114 ], [ 2, %95 ]
  ret i32 %118
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
