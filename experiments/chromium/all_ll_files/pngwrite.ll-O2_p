; ModuleID = '../../third_party/libpng/pngwrite.c'
source_filename = "../../third_party/libpng/pngwrite.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_image = type { %struct.png_control*, i32, i32, i32, i32, i32, i32, i32, [64 x i8] }
%struct.png_control = type { %struct.png_struct_def*, %struct.png_info_def*, i8*, i8*, i64, i8 }
%struct.png_image_write_control = type { %struct.png_image*, i8*, i32, i8*, i32, i8*, i64, i8*, i8*, i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [46 x i8] c"profile matches sRGB but writing iCCP instead\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"Valid palette required for paletted images\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"Unable to write international text\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"No IDATs written into file\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"png_write_info was never called before png_write_row\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"internal write transform logic error\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"Unknown row filter for method 0\00", align 1
@.str.7 = private unnamed_addr constant [57 x i8] c"png_set_filter: UP/AVG/PAETH cannot be added after start\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"Unknown custom filter method\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"Only compression windows <= 32k supported by PNG\00", align 1
@.str.10 = private unnamed_addr constant [49 x i8] c"Only compression windows >= 256 supported by PNG\00", align 1
@.str.11 = private unnamed_addr constant [46 x i8] c"Only compression method 8 is supported by PNG\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"no rows for png_write_image to write\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"PNG_TRANSFORM_INVERT_MONO not supported\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"PNG_TRANSFORM_INVERT_ALPHA not supported\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"png_image_write_to_memory: invalid argument\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"png_image_write_to_memory: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.18 = private unnamed_addr constant [43 x i8] c"png_image_write_to_stdio: invalid argument\00", align 1
@.str.19 = private unnamed_addr constant [54 x i8] c"png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"png_image_write_to_file: invalid argument\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"png_image_write_to_file: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"Writing zero-length unknown chunk\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"1.6.37\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"png_image_write_: out of memory\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"png_image_write_to_memory: PNG too big\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"memory image too large\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"supplied row stride too small\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"image row stride too large\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"no color-map for color-mapped image\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"png_write_image: unsupported transformation\00", align 1
@cr_png_sRGB_base = external local_unnamed_addr constant [512 x i16], align 16
@cr_png_sRGB_delta = external local_unnamed_addr constant [512 x i8], align 16
@.str.32 = private unnamed_addr constant [37 x i8] c"png_write_image: internal call error\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_info_before_PLTE(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  %4 = icmp eq %struct.png_info_def* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %80, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1024
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %80

11:                                               ; preds = %6
  tail call void @cr_png_write_sig(%struct.png_struct_def* nonnull %0) #11
  %12 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 7
  %17 = load i8, i8* %16, align 4
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 9
  %23 = load i8, i8* %22, align 2
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 10
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 11
  %29 = load i8, i8* %28, align 8
  %30 = zext i8 %29 to i32
  tail call void @cr_png_write_IHDR(%struct.png_struct_def* nonnull %0, i32 %13, i32 %15, i32 %18, i32 %21, i32 %24, i32 %27, i32 %30) #11
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 4
  %32 = load i16, i16* %31, align 2
  %33 = and i16 %32, -32760
  %34 = icmp eq i16 %33, 8
  br i1 %34, label %35, label %44

35:                                               ; preds = %11
  %36 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 0
  %42 = load i32, i32* %41, align 4
  tail call void @cr_png_write_gAMA_fixed(%struct.png_struct_def* nonnull %0, i32 %42) #11
  %43 = load i16, i16* %31, align 2
  br label %44

44:                                               ; preds = %35, %40, %11
  %45 = phi i16 [ %32, %11 ], [ %43, %40 ], [ %32, %35 ]
  %46 = icmp sgt i16 %45, -1
  br i1 %46, label %47, label %66

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 4096
  %51 = icmp eq i32 %50, 0
  %52 = and i32 %49, 2048
  %53 = icmp eq i32 %52, 0
  br i1 %51, label %61, label %54

54:                                               ; preds = %47
  br i1 %53, label %56, label %55

55:                                               ; preds = %54
  tail call void @cr_png_app_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0)) #11
  br label %56

56:                                               ; preds = %54, %55
  %57 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 17
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 18
  %60 = load i8*, i8** %59, align 8
  tail call void @cr_png_write_iCCP(%struct.png_struct_def* nonnull %0, i8* %58, i8* %60) #11
  br label %66

61:                                               ; preds = %47
  br i1 %53, label %66, label %62

62:                                               ; preds = %61
  %63 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 3
  %64 = load i16, i16* %63, align 4
  %65 = zext i16 %64 to i32
  tail call void @cr_png_write_sRGB(%struct.png_struct_def* nonnull %0, i32 %65) #11
  br label %66

66:                                               ; preds = %44, %61, %62, %56
  %67 = load i16, i16* %31, align 2
  %68 = and i16 %67, -32752
  %69 = icmp eq i16 %68, 16
  br i1 %69, label %70, label %77

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 1
  tail call void @cr_png_write_cHRM_fixed(%struct.png_struct_def* nonnull %0, %struct.png_xy* %76) #11
  br label %77

77:                                               ; preds = %66, %70, %75
  tail call fastcc void @write_unknown_chunks(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1, i32 1)
  %78 = load i32, i32* %7, align 4
  %79 = or i32 %78, 1024
  store i32 %79, i32* %7, align 4
  br label %80

80:                                               ; preds = %2, %77, %6
  ret void
}

declare void @cr_png_write_sig(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_write_IHDR(%struct.png_struct_def*, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @cr_png_write_gAMA_fixed(%struct.png_struct_def*, i32) local_unnamed_addr #1

declare void @cr_png_app_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #1

declare void @cr_png_write_iCCP(%struct.png_struct_def*, i8*, i8*) local_unnamed_addr #1

declare void @cr_png_write_sRGB(%struct.png_struct_def*, i32) local_unnamed_addr #1

declare void @cr_png_write_cHRM_fixed(%struct.png_struct_def*, %struct.png_xy*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @write_unknown_chunks(%struct.png_struct_def* noalias, %struct.png_info_def* noalias nocapture readonly, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 29
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %51, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 28
  %9 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %9, i64 %10
  %12 = icmp sgt i32 %5, 0
  br i1 %12, label %13, label %51

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 111
  br label %15

15:                                               ; preds = %13, %48
  %16 = phi %struct.png_unknown_chunk_t* [ %9, %13 ], [ %49, %48 ]
  %17 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %16, i64 0, i32 3
  %18 = load i8, i8* %17, align 8
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, %2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %48, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %16, i64 0, i32 0, i64 0
  %24 = tail call i32 @cr_png_handle_as_unknown(%struct.png_struct_def* %0, i8* %23) #11
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %48, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %16, i64 0, i32 0, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 32
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq i32 %24, 3
  %32 = or i1 %31, %30
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = icmp eq i32 %24, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %33
  %36 = load i32, i32* %14, align 8
  %37 = icmp eq i32 %36, 3
  br i1 %37, label %38, label %48

38:                                               ; preds = %35, %26
  %39 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %16, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0)) #11
  %43 = load i64, i64* %39, align 8
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi i64 [ %43, %42 ], [ %40, %38 ]
  %46 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %16, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  tail call void @cr_png_write_chunk(%struct.png_struct_def* %0, i8* %23, i8* %47, i64 %45) #11
  br label %48

48:                                               ; preds = %33, %35, %44, %22, %15
  %49 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %16, i64 1
  %50 = icmp ult %struct.png_unknown_chunk_t* %49, %11
  br i1 %50, label %15, label %51

51:                                               ; preds = %48, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_info(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  %4 = icmp eq %struct.png_info_def* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  tail call void @cr_png_write_info_before_PLTE(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1)
  %7 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 4
  %13 = load %struct.png_color_struct*, %struct.png_color_struct** %12, align 8
  %14 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 5
  %15 = load i16, i16* %14, align 8
  %16 = zext i16 %15 to i32
  tail call void @cr_png_write_PLTE(%struct.png_struct_def* nonnull %0, %struct.png_color_struct* %13, i32 %16) #11
  %17 = load i32, i32* %7, align 8
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 3
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

23:                                               ; preds = %18, %11
  %24 = phi i32 [ %8, %18 ], [ %17, %11 ]
  %25 = and i32 %24, 16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 24
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 25
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 6
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  tail call void @cr_png_write_tRNS(%struct.png_struct_def* nonnull %0, i8* %29, %struct.png_color_16_struct* %30, i32 %33, i32 %36) #11
  br label %37

37:                                               ; preds = %23, %27
  %38 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 20
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %70

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 22
  br label %43

43:                                               ; preds = %41, %65
  %44 = phi i64 [ 0, %41 ], [ %66, %65 ]
  %45 = load %struct.png_text_struct*, %struct.png_text_struct** %42, align 8
  %46 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %44, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %65

50:                                               ; preds = %43
  switch i32 %47, label %65 [
    i32 0, label %51
    i32 -1, label %58
  ]

51:                                               ; preds = %50
  %52 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %44, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %44, i32 2
  %55 = load i8*, i8** %54, align 8
  tail call void @cr_png_write_zTXt(%struct.png_struct_def* %0, i8* %53, i8* %55, i32 0) #11
  %56 = load %struct.png_text_struct*, %struct.png_text_struct** %42, align 8
  %57 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %56, i64 %44, i32 0
  store i32 -2, i32* %57, align 8
  br label %65

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %44, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %44, i32 2
  %62 = load i8*, i8** %61, align 8
  tail call void @cr_png_write_tEXt(%struct.png_struct_def* %0, i8* %60, i8* %62, i64 0) #11
  %63 = load %struct.png_text_struct*, %struct.png_text_struct** %42, align 8
  %64 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %63, i64 %44, i32 0
  store i32 -3, i32* %64, align 8
  br label %65

65:                                               ; preds = %50, %49, %58, %51
  %66 = add nuw nsw i64 %44, 1
  %67 = load i32, i32* %38, align 4
  %68 = sext i32 %67 to i64
  %69 = icmp slt i64 %66, %68
  br i1 %69, label %43, label %70

70:                                               ; preds = %65, %37
  tail call fastcc void @write_unknown_chunks(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 2)
  br label %71

71:                                               ; preds = %2, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @cr_png_write_PLTE(%struct.png_struct_def*, %struct.png_color_struct*, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @cr_png_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare void @cr_png_write_tRNS(%struct.png_struct_def*, i8*, %struct.png_color_16_struct*, i32, i32) local_unnamed_addr #1

declare void @cr_png_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #1

declare void @cr_png_write_zTXt(%struct.png_struct_def*, i8*, i8*, i32) local_unnamed_addr #1

declare void @cr_png_write_tEXt(%struct.png_struct_def*, i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_end(%struct.png_struct_def* noalias, %struct.png_info_def* noalias readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %53, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

10:                                               ; preds = %4
  %11 = icmp eq %struct.png_info_def* %1, null
  br i1 %11, label %50, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 20
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 22
  br label %18

18:                                               ; preds = %16, %43
  %19 = phi i64 [ 0, %16 ], [ %44, %43 ]
  %20 = load %struct.png_text_struct*, %struct.png_text_struct** %17, align 8
  %21 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %20, i64 %19, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %18
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %43

25:                                               ; preds = %18
  %26 = icmp sgt i32 %22, -1
  br i1 %26, label %27, label %34

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %20, i64 %19, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %20, i64 %19, i32 2
  %31 = load i8*, i8** %30, align 8
  tail call void @cr_png_write_zTXt(%struct.png_struct_def* nonnull %0, i8* %29, i8* %31, i32 %22) #11
  %32 = load %struct.png_text_struct*, %struct.png_text_struct** %17, align 8
  %33 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %32, i64 %19, i32 0
  store i32 -2, i32* %33, align 8
  br label %43

34:                                               ; preds = %25
  %35 = icmp eq i32 %22, -1
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %20, i64 %19, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %20, i64 %19, i32 2
  %40 = load i8*, i8** %39, align 8
  tail call void @cr_png_write_tEXt(%struct.png_struct_def* nonnull %0, i8* %38, i8* %40, i64 0) #11
  %41 = load %struct.png_text_struct*, %struct.png_text_struct** %17, align 8
  %42 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %41, i64 %19, i32 0
  store i32 -3, i32* %42, align 8
  br label %43

43:                                               ; preds = %24, %34, %36, %27
  %44 = add nuw nsw i64 %19, 1
  %45 = load i32, i32* %13, align 4
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %44, %46
  br i1 %47, label %18, label %48

48:                                               ; preds = %43, %12
  tail call fastcc void @write_unknown_chunks(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1, i32 8)
  %49 = load i32, i32* %5, align 4
  br label %50

50:                                               ; preds = %10, %48
  %51 = phi i32 [ %6, %10 ], [ %49, %48 ]
  %52 = or i32 %51, 8
  store i32 %52, i32* %5, align 4
  tail call void @cr_png_write_IEND(%struct.png_struct_def* nonnull %0) #11
  br label %53

53:                                               ; preds = %2, %50
  ret void
}

declare void @cr_png_write_IEND(%struct.png_struct_def*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.png_struct_def* @cr_png_create_write_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #0 {
  %5 = tail call noalias %struct.png_struct_def* @cr_png_create_png_struct(i8* %0, i8* %1, void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)* %3, i8* null, i8* (%struct.png_struct_def*, i64)* null, void (%struct.png_struct_def*, i8*)* null) #11
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 21
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 25
  %10 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 8192, i32 -1, i32 8, i32 15>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 31
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 30
  store i32 8, i32* %12, align 4
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 29
  store i32 15, i32* %13, align 8
  %14 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 8, i32 1, i32 -1, i32 8>, <4 x i32>* %14, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 16
  %16 = load i32, i32* %15, align 8
  %17 = or i32 %16, 2097152
  store i32 %17, i32* %15, align 8
  tail call void @cr_png_set_write_fn(%struct.png_struct_def* nonnull %5, i8* null, void (%struct.png_struct_def*, i8*, i64)* null, void (%struct.png_struct_def*)* null) #11
  br label %18

18:                                               ; preds = %4, %7
  ret %struct.png_struct_def* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.png_struct_def* @cr_png_create_write_struct_2(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #0 {
  %8 = tail call noalias %struct.png_struct_def* @cr_png_create_png_struct(i8* %0, i8* %1, void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)* %3, i8* %4, i8* (%struct.png_struct_def*, i64)* %5, void (%struct.png_struct_def*, i8*)* %6) #11
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 21
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 25
  %13 = bitcast i32* %11 to <4 x i32>*
  store <4 x i32> <i32 8192, i32 -1, i32 8, i32 15>, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 31
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 30
  store i32 8, i32* %15, align 4
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 29
  store i32 15, i32* %16, align 8
  %17 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> <i32 8, i32 1, i32 -1, i32 8>, <4 x i32>* %17, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 16
  %19 = load i32, i32* %18, align 8
  %20 = or i32 %19, 2097152
  store i32 %20, i32* %18, align 8
  tail call void @cr_png_set_write_fn(%struct.png_struct_def* nonnull %8, i8* null, void (%struct.png_struct_def*, i8*, i64)* null, void (%struct.png_struct_def*)* null) #11
  br label %21

21:                                               ; preds = %7, %10
  ret %struct.png_struct_def* %8
}

declare noalias %struct.png_struct_def* @cr_png_create_png_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #1

declare void @cr_png_set_write_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_rows(%struct.png_struct_def* noalias, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = icmp ne %struct.png_struct_def* %0, null
  %5 = icmp ne i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %14

7:                                                ; preds = %3, %7
  %8 = phi i8** [ %12, %7 ], [ %1, %3 ]
  %9 = phi i32 [ %11, %7 ], [ 0, %3 ]
  %10 = load i8*, i8** %8, align 8
  tail call void @cr_png_write_row(%struct.png_struct_def* nonnull %0, i8* %10)
  %11 = add nuw i32 %9, 1
  %12 = getelementptr inbounds i8*, i8** %8, i64 1
  %13 = icmp eq i32 %11, %2
  br i1 %13, label %14, label %7

14:                                               ; preds = %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_row(%struct.png_struct_def* noalias, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.png_row_info_struct, align 8
  %4 = bitcast %struct.png_row_info_struct* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false)
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %153, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1024
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

20:                                               ; preds = %14
  tail call void @cr_png_write_start_row(%struct.png_struct_def* nonnull %0) #11
  br label %21

21:                                               ; preds = %20, %10, %6
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 57
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %80, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %80, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %32 = load i8, i8* %31, align 1
  switch i8 %32, label %80 [
    i8 0, label %33
    i8 1, label %38
    i8 2, label %47
    i8 3, label %52
    i8 4, label %61
    i8 5, label %66
    i8 6, label %75
  ]

33:                                               ; preds = %30
  %34 = load i32, i32* %7, align 4
  %35 = and i32 %34, 7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %33
  tail call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

38:                                               ; preds = %30
  %39 = load i32, i32* %7, align 4
  %40 = and i32 %39, 7
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %44 = load i32, i32* %43, align 8
  %45 = icmp ult i32 %44, 5
  br i1 %45, label %46, label %80

46:                                               ; preds = %38, %42
  tail call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

47:                                               ; preds = %30
  %48 = load i32, i32* %7, align 4
  %49 = and i32 %48, 7
  %50 = icmp eq i32 %49, 4
  br i1 %50, label %80, label %51

51:                                               ; preds = %47
  tail call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

52:                                               ; preds = %30
  %53 = load i32, i32* %7, align 4
  %54 = and i32 %53, 3
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %58 = load i32, i32* %57, align 8
  %59 = icmp ult i32 %58, 3
  br i1 %59, label %60, label %80

60:                                               ; preds = %52, %56
  tail call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

61:                                               ; preds = %30
  %62 = load i32, i32* %7, align 4
  %63 = and i32 %62, 3
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %80, label %65

65:                                               ; preds = %61
  tail call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

66:                                               ; preds = %30
  %67 = load i32, i32* %7, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %72 = load i32, i32* %71, align 8
  %73 = icmp ult i32 %72, 2
  br i1 %73, label %74, label %80

74:                                               ; preds = %66, %70
  tail call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

75:                                               ; preds = %30
  %76 = load i32, i32* %7, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  tail call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

80:                                               ; preds = %33, %47, %61, %25, %21, %42, %56, %70, %75, %30
  %81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i64 0, i32 2
  store i8 %82, i8* %83, align 8
  %84 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 40
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i64 0, i32 0
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 65
  %88 = load i8, i8* %87, align 2
  %89 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i64 0, i32 4
  store i8 %88, i8* %89, align 2
  %90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 62
  %91 = load i8, i8* %90, align 1
  %92 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i64 0, i32 3
  store i8 %91, i8* %92, align 1
  %93 = mul i8 %91, %88
  %94 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i64 0, i32 5
  store i8 %93, i8* %94, align 1
  %95 = icmp ugt i8 %93, 7
  %96 = zext i32 %85 to i64
  %97 = zext i8 %93 to i64
  br i1 %95, label %98, label %101

98:                                               ; preds = %80
  %99 = lshr i64 %97, 3
  %100 = mul nuw nsw i64 %99, %96
  br label %105

101:                                              ; preds = %80
  %102 = mul nuw nsw i64 %97, %96
  %103 = add nuw nsw i64 %102, 7
  %104 = lshr i64 %103, 3
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i64 [ %100, %98 ], [ %104, %101 ]
  %107 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %3, i64 0, i32 1
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %1, i64 %106, i1 false)
  %111 = load i8, i8* %22, align 2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp ult i8 %115, 6
  br i1 %117, label %118, label %129

118:                                              ; preds = %113
  %119 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %118
  %124 = load i8*, i8** %108, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 1
  call void @cr_png_do_write_interlace(%struct.png_row_info_struct* nonnull %3, i8* %125, i32 %116) #11
  %126 = load i32, i32* %86, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  call void @cr_png_write_finish_row(%struct.png_struct_def* nonnull %0) #11
  br label %153

129:                                              ; preds = %118, %105, %123, %113
  %130 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %129
  call void @cr_png_do_write_transformations(%struct.png_struct_def* nonnull %0, %struct.png_row_info_struct* nonnull %3) #11
  br label %134

134:                                              ; preds = %129, %133
  %135 = load i8, i8* %94, align 1
  %136 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 63
  %137 = load i8, i8* %136, align 4
  %138 = icmp eq i8 %135, %137
  br i1 %138, label %139, label %143

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 68
  %141 = load i8, i8* %140, align 1
  %142 = icmp eq i8 %135, %141
  br i1 %142, label %144, label %143

143:                                              ; preds = %139, %134
  call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

144:                                              ; preds = %139
  call void @cr_png_write_find_filter(%struct.png_struct_def* nonnull %0, %struct.png_row_info_struct* nonnull %3) #11
  %145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 91
  %146 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %145, align 8
  %147 = icmp eq void (%struct.png_struct_def*, i32, i32)* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = load i32, i32* %7, align 4
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  call void %146(%struct.png_struct_def* nonnull %0, i32 %149, i32 %152) #11
  br label %153

153:                                              ; preds = %148, %144, %2, %128, %79, %74, %65, %60, %51, %46, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_image(%struct.png_struct_def* noalias, i8** nocapture readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* nonnull %0) #11
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %26

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %22, %7
  %11 = phi i32 [ %9, %7 ], [ %23, %22 ]
  %12 = phi i32 [ 0, %7 ], [ %24, %22 ]
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %10, %14
  %15 = phi i8** [ %19, %14 ], [ %1, %10 ]
  %16 = phi i32 [ %18, %14 ], [ 0, %10 ]
  %17 = load i8*, i8** %15, align 8
  tail call void @cr_png_write_row(%struct.png_struct_def* nonnull %0, i8* %17)
  %18 = add nuw i32 %16, 1
  %19 = getelementptr inbounds i8*, i8** %15, i64 1
  %20 = load i32, i32* %8, align 4
  %21 = icmp ult i32 %18, %20
  br i1 %21, label %14, label %22

22:                                               ; preds = %14, %10
  %23 = phi i32 [ 0, %10 ], [ %20, %14 ]
  %24 = add nuw nsw i32 %12, 1
  %25 = icmp eq i32 %24, %5
  br i1 %25, label %26, label %10

26:                                               ; preds = %22, %4, %2
  ret void
}

declare i32 @cr_png_set_interlace_handling(%struct.png_struct_def*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @cr_png_write_start_row(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_write_finish_row(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_do_write_interlace(%struct.png_row_info_struct*, i8*, i32) local_unnamed_addr #1

declare void @cr_png_do_write_transformations(%struct.png_struct_def*, %struct.png_row_info_struct*) local_unnamed_addr #1

declare void @cr_png_write_find_filter(%struct.png_struct_def*, %struct.png_row_info_struct*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_flush(%struct.png_struct_def* noalias, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 0
  %6 = select i1 %5, i32 %1, i32 0
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 76
  store i32 %6, i32* %7, align 8
  br label %8

8:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_flush(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 39
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  tail call void @cr_png_compress_IDAT(%struct.png_struct_def* nonnull %0, i8* null, i64 0, i32 2) #11
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 77
  store i32 0, i32* %10, align 4
  tail call void @cr_png_flush(%struct.png_struct_def* nonnull %0) #11
  br label %11

11:                                               ; preds = %3, %1, %9
  ret void
}

declare void @cr_png_compress_IDAT(%struct.png_struct_def*, i8*, i64, i32) local_unnamed_addr #1

declare void @cr_png_flush(%struct.png_struct_def*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_destroy_write_struct(%struct.png_struct_def**, %struct.png_info_def**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def** %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %0, align 8
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %4
  tail call void @cr_png_destroy_info_struct(%struct.png_struct_def* nonnull %5, %struct.png_info_def** %1) #11
  store %struct.png_struct_def* null, %struct.png_struct_def** %0, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 16
  %9 = load i32, i32* %8, align 8, !alias.scope !2
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 19
  %14 = tail call i32 @Cr_z_deflateEnd(%struct.z_stream_s* %13) #11
  br label %15

15:                                               ; preds = %7, %12
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 20
  tail call void @cr_png_free_buffer_list(%struct.png_struct_def* nonnull %5, %struct.png_compression_buffer** %16) #11
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 46
  %18 = load i8*, i8** %17, align 8, !alias.scope !2
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %5, i8* %18) #11
  store i8* null, i8** %17, align 8, !alias.scope !2
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 45
  %20 = load i8*, i8** %19, align 8, !alias.scope !2
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %5, i8* %20) #11
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 47
  %22 = load i8*, i8** %21, align 8, !alias.scope !2
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %5, i8* %22) #11
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 48
  %24 = load i8*, i8** %23, align 8, !alias.scope !2
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %5, i8* %24) #11
  store i8* null, i8** %19, align 8, !alias.scope !2
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 113
  %26 = bitcast i8** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11, !alias.scope !2
  %27 = load i8*, i8** %25, align 8, !alias.scope !2
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %5, i8* %27) #11
  store i8* null, i8** %25, align 8, !alias.scope !2
  tail call void @cr_png_destroy_png_struct(%struct.png_struct_def* nonnull %5) #11
  br label %28

28:                                               ; preds = %15, %4, %2
  ret void
}

declare void @cr_png_destroy_info_struct(%struct.png_struct_def*, %struct.png_info_def**) local_unnamed_addr #1

declare void @cr_png_destroy_png_struct(%struct.png_struct_def*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_filter(%struct.png_struct_def* noalias, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %93, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %92

7:                                                ; preds = %5
  %8 = trunc i32 %2 to i8
  switch i8 %8, label %14 [
    i8 5, label %9
    i8 6, label %9
    i8 7, label %9
    i8 0, label %15
    i8 1, label %10
    i8 2, label %11
    i8 3, label %12
    i8 4, label %13
  ]

9:                                                ; preds = %7, %7, %7
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %15

10:                                               ; preds = %7
  br label %15

11:                                               ; preds = %7
  br label %15

12:                                               ; preds = %7
  br label %15

13:                                               ; preds = %7
  br label %15

14:                                               ; preds = %7
  br label %15

15:                                               ; preds = %9, %7, %14, %13, %12, %11, %10
  %16 = phi i8 [ %8, %14 ], [ -128, %13 ], [ 64, %12 ], [ 32, %11 ], [ 16, %10 ], [ 8, %7 ], [ 8, %9 ]
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 59
  store i8 %16, i8* %17, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %88, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 1
  %25 = and i32 %2, -225
  %26 = select i1 %24, i32 %25, i32 %2
  %27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  %30 = and i32 %26, -209
  %31 = select i1 %29, i32 %30, i32 %26
  %32 = and i32 %31, 224
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 45
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  tail call void @cr_png_app_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0)) #11
  %39 = and i32 %31, -225
  %40 = load i32, i32* %27, align 8
  br label %41

41:                                               ; preds = %21, %38, %34
  %42 = phi i32 [ %40, %38 ], [ %28, %34 ], [ %28, %21 ]
  %43 = phi i32 [ %39, %38 ], [ %31, %34 ], [ %31, %21 ]
  %44 = lshr i32 %43, 4
  %45 = and i32 %44, 1
  %46 = lshr i32 %43, 5
  %47 = and i32 %46, 1
  %48 = add nuw nsw i32 %45, %47
  %49 = lshr i32 %43, 6
  %50 = and i32 %49, 1
  %51 = add nuw nsw i32 %48, %50
  %52 = lshr i32 %43, 7
  %53 = and i32 %52, 1
  %54 = add nuw nsw i32 %51, %53
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 65
  %56 = load i8, i8* %55, align 2
  %57 = zext i8 %56 to i32
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 62
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nuw nsw i32 %60, %57
  %62 = icmp ugt i32 %61, 7
  %63 = zext i32 %42 to i64
  %64 = zext i32 %61 to i64
  br i1 %62, label %65, label %68

65:                                               ; preds = %41
  %66 = lshr i64 %64, 3
  %67 = mul nuw nsw i64 %66, %63
  br label %72

68:                                               ; preds = %41
  %69 = mul nuw nsw i64 %64, %63
  %70 = add nuw nsw i64 %69, 7
  %71 = lshr i64 %70, 3
  br label %72

72:                                               ; preds = %68, %65
  %73 = phi i64 [ %67, %65 ], [ %71, %68 ]
  %74 = add nuw nsw i64 %73, 1
  %75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 47
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = tail call noalias i8* @cr_png_malloc(%struct.png_struct_def* nonnull %0, i64 %74) #11
  store i8* %79, i8** %75, align 8
  br label %80

80:                                               ; preds = %78, %72
  %81 = icmp ugt i32 %54, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 48
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = tail call noalias i8* @cr_png_malloc(%struct.png_struct_def* nonnull %0, i64 %74) #11
  store i8* %87, i8** %83, align 8
  br label %88

88:                                               ; preds = %80, %86, %82, %15
  %89 = phi i32 [ %2, %15 ], [ %43, %82 ], [ %43, %86 ], [ %43, %80 ]
  %90 = trunc i32 %89 to i8
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 59
  store i8 %90, i8* %91, align 8
  br label %93

92:                                               ; preds = %5
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

93:                                               ; preds = %3, %88
  ret void
}

declare void @cr_png_app_error(%struct.png_struct_def*, i8*) local_unnamed_addr #1

declare noalias i8* @cr_png_malloc(%struct.png_struct_def*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @cr_png_set_filter_heuristics(%struct.png_struct_def* noalias nocapture, i32, i32, double* nocapture, double* nocapture) local_unnamed_addr #5 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @cr_png_set_filter_heuristics_fixed(%struct.png_struct_def* noalias nocapture, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #5 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_compression_level(%struct.png_struct_def* noalias, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 22
  store i32 %1, i32* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_compression_mem_level(%struct.png_struct_def* noalias, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 25
  store i32 %1, i32* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_compression_strategy(%struct.png_struct_def* noalias, i32) local_unnamed_addr #6 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 26
  store i32 %1, i32* %8, align 4
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_compression_window_bits(%struct.png_struct_def* noalias, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 15
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %7 = icmp slt i32 %1, 8
  br i1 %7, label %8, label %11

8:                                                ; preds = %6, %4
  %9 = phi i8* [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0), %4 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.10, i64 0, i64 0), %6 ]
  %10 = phi i32 [ 15, %4 ], [ 8, %6 ]
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* %9) #11
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i32 [ %1, %6 ], [ %10, %8 ]
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 24
  store i32 %12, i32* %13, align 4
  br label %14

14:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_compression_method(%struct.png_struct_def* noalias, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, 8
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %7

7:                                                ; preds = %4, %6
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 23
  store i32 %1, i32* %8, align 8
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_text_compression_level(%struct.png_struct_def* noalias, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 27
  store i32 %1, i32* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_text_compression_mem_level(%struct.png_struct_def* noalias, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 30
  store i32 %1, i32* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_text_compression_strategy(%struct.png_struct_def* noalias, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 31
  store i32 %1, i32* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_text_compression_window_bits(%struct.png_struct_def* noalias, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 15
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %7 = icmp slt i32 %1, 8
  br i1 %7, label %8, label %11

8:                                                ; preds = %6, %4
  %9 = phi i8* [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0), %4 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.10, i64 0, i64 0), %6 ]
  %10 = phi i32 [ 15, %4 ], [ 8, %6 ]
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* %9) #11
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i32 [ %1, %6 ], [ %10, %8 ]
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 29
  store i32 %12, i32* %13, align 8
  br label %14

14:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_text_compression_method(%struct.png_struct_def* noalias, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, 8
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %7

7:                                                ; preds = %4, %6
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 28
  store i32 %1, i32* %8, align 4
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_write_status_fn(%struct.png_struct_def* noalias, void (%struct.png_struct_def*, i32, i32)*) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 91
  store void (%struct.png_struct_def*, i32, i32)* %1, void (%struct.png_struct_def*, i32, i32)** %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_write_user_transform_fn(%struct.png_struct_def* noalias, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*) local_unnamed_addr #6 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %6 = load i32, i32* %5, align 4
  %7 = or i32 %6, 1048576
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 11
  store void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* %1, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)** %8, align 8
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_write_png(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32, i8* nocapture readnone) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  %6 = icmp eq %struct.png_info_def* %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %89, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = icmp sgt i16 %11, -1
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0)) #11
  br label %89

14:                                               ; preds = %8
  tail call void @cr_png_write_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1)
  %15 = and i32 %2, 32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %18

18:                                               ; preds = %14, %17
  %19 = and i32 %2, 64
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %9, align 8
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 23
  tail call void @cr_png_set_shift(%struct.png_struct_def* nonnull %0, %struct.png_color_8_struct* %26) #11
  br label %27

27:                                               ; preds = %21, %18, %25
  %28 = and i32 %2, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void @cr_png_set_packing(%struct.png_struct_def* nonnull %0) #11
  br label %31

31:                                               ; preds = %27, %30
  %32 = and i32 %2, 256
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  tail call void @cr_png_set_swap_alpha(%struct.png_struct_def* nonnull %0) #11
  br label %35

35:                                               ; preds = %31, %34
  %36 = and i32 %2, 6144
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = and i32 %2, 4096
  %40 = icmp eq i32 %39, 0
  %41 = and i32 %2, 2048
  %42 = icmp ne i32 %41, 0
  br i1 %40, label %46, label %43

43:                                               ; preds = %38
  br i1 %42, label %44, label %45

44:                                               ; preds = %43
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0)) #11
  br label %45

45:                                               ; preds = %44, %43
  tail call void @cr_png_set_filler(%struct.png_struct_def* nonnull %0, i32 0, i32 1) #11
  br label %48

46:                                               ; preds = %38
  br i1 %42, label %47, label %48

47:                                               ; preds = %46
  tail call void @cr_png_set_filler(%struct.png_struct_def* nonnull %0, i32 0, i32 0) #11
  br label %48

48:                                               ; preds = %35, %45, %47, %46
  %49 = trunc i32 %2 to i8
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @cr_png_set_bgr(%struct.png_struct_def* nonnull %0) #11
  br label %52

52:                                               ; preds = %51, %48
  %53 = and i32 %2, 512
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  tail call void @cr_png_set_swap(%struct.png_struct_def* nonnull %0) #11
  br label %56

56:                                               ; preds = %52, %55
  %57 = and i32 %2, 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  tail call void @cr_png_set_packswap(%struct.png_struct_def* nonnull %0) #11
  br label %60

60:                                               ; preds = %56, %59
  %61 = and i32 %2, 1024
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0)) #11
  br label %64

64:                                               ; preds = %63, %60
  %65 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 30
  %66 = load i8**, i8*** %65, align 8
  %67 = tail call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* nonnull %0) #11
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %88

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %71 = load i32, i32* %70, align 4, !alias.scope !5
  br label %72

72:                                               ; preds = %84, %69
  %73 = phi i32 [ %71, %69 ], [ %85, %84 ]
  %74 = phi i32 [ 0, %69 ], [ %86, %84 ]
  %75 = icmp eq i32 %73, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %72, %76
  %77 = phi i8** [ %81, %76 ], [ %66, %72 ]
  %78 = phi i32 [ %80, %76 ], [ 0, %72 ]
  %79 = load i8*, i8** %77, align 8, !noalias !5
  tail call void @cr_png_write_row(%struct.png_struct_def* nonnull %0, i8* %79) #11
  %80 = add nuw i32 %78, 1
  %81 = getelementptr inbounds i8*, i8** %77, i64 1
  %82 = load i32, i32* %70, align 4, !alias.scope !5
  %83 = icmp ult i32 %80, %82
  br i1 %83, label %76, label %84

84:                                               ; preds = %76, %72
  %85 = phi i32 [ 0, %72 ], [ %82, %76 ]
  %86 = add nuw nsw i32 %74, 1
  %87 = icmp eq i32 %86, %67
  br i1 %87, label %88, label %72

88:                                               ; preds = %84, %64
  tail call void @cr_png_write_end(%struct.png_struct_def* %0, %struct.png_info_def* %1)
  br label %89

89:                                               ; preds = %4, %88, %13
  ret void
}

declare void @cr_png_set_shift(%struct.png_struct_def*, %struct.png_color_8_struct*) local_unnamed_addr #1

declare void @cr_png_set_packing(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_set_swap_alpha(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_set_filler(%struct.png_struct_def*, i32, i32) local_unnamed_addr #1

declare void @cr_png_set_bgr(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_set_swap(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_set_packswap(%struct.png_struct_def*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_image_write_to_memory(%struct.png_image*, i8*, i64* noalias, i32, i8*, i32, i8*) local_unnamed_addr #0 {
  %8 = alloca %struct.png_image_write_control, align 8
  %9 = icmp eq %struct.png_image* %0, null
  br i1 %9, label %51, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %49

14:                                               ; preds = %10
  %15 = icmp ne i64* %2, null
  %16 = icmp ne i8* %4, null
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %47

18:                                               ; preds = %14
  %19 = icmp eq i8* %1, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  store i64 0, i64* %2, align 8
  br label %21

21:                                               ; preds = %20, %18
  %22 = tail call fastcc i32 @png_image_write_init(%struct.png_image* nonnull %0)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %21
  %25 = bitcast %struct.png_image_write_control* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 64, i1 false)
  %26 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 0
  store %struct.png_image* %0, %struct.png_image** %26, align 8
  %27 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 1
  store i8* %4, i8** %27, align 8
  %28 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 2
  store i32 %5, i32* %28, align 8
  %29 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 3
  store i8* %6, i8** %29, align 8
  %30 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 4
  store i32 %3, i32* %30, align 8
  %31 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 8
  store i8* %1, i8** %31, align 8
  %32 = load i64, i64* %2, align 8
  %33 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 9
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %8, i64 0, i32 10
  store i64 0, i64* %34, align 8
  %35 = call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_write_memory, i8* nonnull %25) #11
  call void @cr_png_image_free(%struct.png_image* nonnull %0) #11
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %24
  %38 = load i64, i64* %34, align 8
  br i1 %19, label %43, label %39

39:                                               ; preds = %37
  %40 = load i64, i64* %2, align 8
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 0, i32 %35
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi i32 [ %42, %39 ], [ %35, %37 ]
  store i64 %38, i64* %2, align 8
  br label %45

45:                                               ; preds = %24, %43
  %46 = phi i32 [ %44, %43 ], [ 0, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %25) #11
  br label %51

47:                                               ; preds = %14
  %48 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0)) #11
  br label %51

49:                                               ; preds = %10
  %50 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0)) #11
  br label %51

51:                                               ; preds = %7, %21, %49, %47, %45
  %52 = phi i32 [ %46, %45 ], [ %48, %47 ], [ %50, %49 ], [ 0, %21 ], [ 0, %7 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @png_image_write_init(%struct.png_image*) unnamed_addr #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca %struct.png_info_def*, align 8
  %4 = bitcast %struct.png_struct_def** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  store %struct.png_struct_def* inttoptr (i64 -6148914691236517206 to %struct.png_struct_def*), %struct.png_struct_def** %2, align 8
  %5 = bitcast %struct.png_image* %0 to i8*
  %6 = tail call noalias %struct.png_struct_def* @cr_png_create_png_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %5, void (%struct.png_struct_def*, i8*)* nonnull @cr_png_safe_error, void (%struct.png_struct_def*, i8*)* nonnull @cr_png_safe_warning, i8* null, i8* (%struct.png_struct_def*, i64)* null, void (%struct.png_struct_def*, i8*)* null) #11
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store %struct.png_struct_def* null, %struct.png_struct_def** %2, align 8
  br label %37

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 21
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 25
  %12 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 8192, i32 -1, i32 8, i32 15>, <4 x i32>* %12, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 31
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 30
  store i32 8, i32* %14, align 4
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 29
  store i32 15, i32* %15, align 8
  %16 = bitcast i32* %11 to <4 x i32>*
  store <4 x i32> <i32 8, i32 1, i32 -1, i32 8>, <4 x i32>* %16, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 16
  %18 = load i32, i32* %17, align 8
  %19 = or i32 %18, 2097152
  store i32 %19, i32* %17, align 8
  tail call void @cr_png_set_write_fn(%struct.png_struct_def* nonnull %6, i8* null, void (%struct.png_struct_def*, i8*, i64)* null, void (%struct.png_struct_def*)* null) #11
  store %struct.png_struct_def* %6, %struct.png_struct_def** %2, align 8
  %20 = bitcast %struct.png_info_def** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = tail call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %6) #11
  store %struct.png_info_def* %21, %struct.png_info_def** %3, align 8
  %22 = icmp eq %struct.png_info_def* %21, null
  %23 = ptrtoint %struct.png_struct_def* %6 to i64
  %24 = ptrtoint %struct.png_info_def* %21 to i64
  br i1 %22, label %29, label %25

25:                                               ; preds = %9
  %26 = tail call noalias i8* @cr_png_malloc_warn(%struct.png_struct_def* nonnull %6, i64 48) #11
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  call void @cr_png_destroy_info_struct(%struct.png_struct_def* nonnull %6, %struct.png_info_def** nonnull %3) #11
  br label %29

29:                                               ; preds = %9, %28
  call void @cr_png_destroy_write_struct(%struct.png_struct_def** nonnull %2, %struct.png_info_def** null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %26, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 32, i1 false)
  %32 = bitcast i8* %26 to i64*
  store i64 %23, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %26, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %24, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %26, i64 40
  store i8 1, i8* %35, align 8
  %36 = bitcast %struct.png_image* %0 to i8**
  store i8* %26, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %39

37:                                               ; preds = %29, %8
  %38 = call i32 @cr_png_image_error(%struct.png_image* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0)) #11
  br label %39

39:                                               ; preds = %30, %37
  %40 = phi i32 [ %38, %37 ], [ 1, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret i32 %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @cr_png_safe_execute(%struct.png_image*, i32 (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_write_memory(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.png_image**
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  tail call void @cr_png_set_write_fn(%struct.png_struct_def* %7, i8* %0, void (%struct.png_struct_def*, i8*, i64)* nonnull @image_memory_write, void (%struct.png_struct_def*)* nonnull @image_memory_flush) #11
  %8 = tail call i32 @png_image_write_main(i8* %0)
  ret i32 %8
}

declare void @cr_png_image_free(%struct.png_image*) local_unnamed_addr #1

declare i32 @cr_png_image_error(%struct.png_image*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_image_write_to_stdio(%struct.png_image*, %struct._IO_FILE*, i32, i8*, i32, i8*) local_unnamed_addr #0 {
  %7 = alloca %struct.png_image_write_control, align 8
  %8 = icmp eq %struct.png_image* %0, null
  br i1 %8, label %38, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %36

13:                                               ; preds = %9
  %14 = icmp ne %struct._IO_FILE* %1, null
  %15 = icmp ne i8* %3, null
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %34

17:                                               ; preds = %13
  %18 = tail call fastcc i32 @png_image_write_init(%struct.png_image* nonnull %0)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %17
  %21 = bitcast %struct.png_image_write_control* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %21) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 88, i1 false)
  %22 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 0
  %23 = load %struct.png_control*, %struct.png_control** %22, align 8
  %24 = getelementptr inbounds %struct.png_control, %struct.png_control* %23, i64 0, i32 0
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %24, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i64 0, i32 9
  %27 = bitcast i8** %26 to %struct._IO_FILE**
  store %struct._IO_FILE* %1, %struct._IO_FILE** %27, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 88, i1 false)
  %28 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 0
  store %struct.png_image* %0, %struct.png_image** %28, align 8
  %29 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 1
  store i8* %3, i8** %29, align 8
  %30 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 2
  store i32 %4, i32* %30, align 8
  %31 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 3
  store i8* %5, i8** %31, align 8
  %32 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 4
  store i32 %2, i32* %32, align 8
  %33 = call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_write_main, i8* nonnull %21) #11
  call void @cr_png_image_free(%struct.png_image* nonnull %0) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %21) #11
  br label %38

34:                                               ; preds = %13
  %35 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %38

36:                                               ; preds = %9
  %37 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.19, i64 0, i64 0)) #11
  br label %38

38:                                               ; preds = %6, %17, %36, %34, %20
  %39 = phi i32 [ %33, %20 ], [ %35, %34 ], [ %37, %36 ], [ 0, %17 ], [ 0, %6 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_write_main(i8*) #0 {
  %2 = alloca [256 x %struct.png_color_struct], align 16
  %3 = alloca [256 x i8], align 16
  %4 = bitcast i8* %0 to %struct.png_image**
  %5 = load %struct.png_image*, %struct.png_image** %4, align 8
  %6 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 0
  %7 = load %struct.png_control*, %struct.png_control** %6, align 8
  %8 = getelementptr inbounds %struct.png_control, %struct.png_control* %7, i64 0, i32 0
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %10 = getelementptr inbounds %struct.png_control, %struct.png_control* %7, i64 0, i32 1
  %11 = load %struct.png_info_def*, %struct.png_info_def** %10, align 8
  %12 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 8
  %15 = icmp ne i32 %14, 0
  %16 = and i32 %13, 4
  %17 = icmp ne i32 %16, 0
  %18 = xor i1 %15, true
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %1
  %21 = getelementptr inbounds i8, i8* %0, i64 32
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br label %25

25:                                               ; preds = %20, %1
  %26 = phi i1 [ false, %1 ], [ %24, %20 ]
  tail call void @cr_png_set_benign_errors(%struct.png_struct_def* %9, i32 0) #11
  %27 = load i32, i32* %12, align 4
  %28 = and i32 %27, 8
  %29 = icmp eq i32 %28, 0
  %30 = and i32 %27, 3
  %31 = add nuw nsw i32 %30, 1
  %32 = select i1 %29, i32 %31, i32 1
  %33 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = udiv i32 2147483647, %32
  %36 = icmp ugt i32 %34, %35
  br i1 %36, label %64, label %37

37:                                               ; preds = %25
  %38 = mul i32 %32, %34
  %39 = getelementptr inbounds i8, i8* %0, i64 16
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  store i32 %38, i32* %40, align 8
  br label %44

44:                                               ; preds = %43, %37
  %45 = phi i32 [ %38, %43 ], [ %41, %37 ]
  %46 = icmp slt i32 %45, 0
  %47 = sub nsw i32 0, %45
  %48 = select i1 %46, i32 %47, i32 %45
  %49 = icmp ult i32 %48, %38
  br i1 %49, label %59, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = udiv i32 -1, %38
  %54 = icmp ugt i32 %52, %53
  br i1 %54, label %55, label %63

55:                                               ; preds = %50
  %56 = load %struct.png_control*, %struct.png_control** %6, align 8
  %57 = getelementptr inbounds %struct.png_control, %struct.png_control* %56, i64 0, i32 0
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %57, align 8
  tail call void @cr_png_error(%struct.png_struct_def* %58, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0)) #12
  unreachable

59:                                               ; preds = %44
  %60 = load %struct.png_control*, %struct.png_control** %6, align 8
  %61 = getelementptr inbounds %struct.png_control, %struct.png_control* %60, i64 0, i32 0
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %61, align 8
  tail call void @cr_png_error(%struct.png_struct_def* %62, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0)) #12
  unreachable

63:                                               ; preds = %50
  br i1 %15, label %68, label %436

64:                                               ; preds = %25
  %65 = load %struct.png_control*, %struct.png_control** %6, align 8
  %66 = getelementptr inbounds %struct.png_control, %struct.png_control* %65, i64 0, i32 0
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %66, align 8
  tail call void @cr_png_error(%struct.png_struct_def* %67, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0)) #12
  unreachable

68:                                               ; preds = %63
  %69 = getelementptr inbounds i8, i8* %0, i64 24
  %70 = bitcast i8* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %432, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 6
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %432, label %77

77:                                               ; preds = %73
  %78 = load i32, i32* %33, align 4
  %79 = icmp ugt i32 %75, 16
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = icmp ugt i32 %75, 4
  br i1 %81, label %85, label %82

82:                                               ; preds = %80
  %83 = icmp ugt i32 %75, 2
  %84 = select i1 %83, i32 2, i32 1
  br label %85

85:                                               ; preds = %82, %80, %77
  %86 = phi i32 [ 8, %77 ], [ %84, %82 ], [ 4, %80 ]
  tail call void @cr_png_set_IHDR(%struct.png_struct_def* %9, %struct.png_info_def* %11, i32 %78, i32 %52, i32 %86, i32 3, i32 0, i32 0, i32 0) #11
  %87 = load %struct.png_image*, %struct.png_image** %4, align 8
  %88 = load i8*, i8** %70, align 8
  %89 = getelementptr inbounds %struct.png_image, %struct.png_image* %87, i64 0, i32 6
  %90 = load i32, i32* %89, align 4
  %91 = icmp ult i32 %90, 256
  %92 = select i1 %91, i32 %90, i32 256
  %93 = getelementptr inbounds %struct.png_image, %struct.png_image* %87, i64 0, i32 4
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 3
  %96 = add nuw nsw i32 %95, 1
  %97 = and i32 %94, 33
  %98 = icmp eq i32 %97, 33
  %99 = zext i1 %98 to i32
  %100 = lshr i32 %94, 3
  %101 = and i32 %100, 2
  %102 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 768, i8* nonnull %102) #11
  %103 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %103) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -1, i64 256, i1 false) #11
  %104 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %102, i8 0, i64 768, i1 false) #11
  %105 = icmp sgt i32 %92, 0
  br i1 %105, label %106, label %416

106:                                              ; preds = %85
  %107 = and i32 %94, 4
  %108 = icmp eq i32 %107, 0
  %109 = bitcast i8* %88 to i16*
  %110 = and i32 %96, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp ugt i32 %95, 1
  %113 = xor i32 %101, 2
  %114 = zext i32 %113 to i64
  %115 = zext i32 %101 to i64
  %116 = select i1 %98, i32 0, i32 %95
  %117 = zext i32 %116 to i64
  %118 = zext i1 %98 to i64
  %119 = or i32 %101, %99
  %120 = xor i32 %119, 2
  %121 = zext i32 %120 to i64
  %122 = select i1 %98, i64 2, i64 1
  %123 = zext i32 %119 to i64
  %124 = xor i32 %99, 1
  %125 = zext i32 %124 to i64
  %126 = select i1 %98, i64 0, i64 3
  %127 = zext i32 %92 to i64
  br label %128

128:                                              ; preds = %412, %106
  %129 = phi i64 [ 0, %106 ], [ %414, %412 ]
  %130 = phi i32 [ 0, %106 ], [ %413, %412 ]
  %131 = trunc i64 %129 to i32
  %132 = mul i32 %96, %131
  %133 = zext i32 %132 to i64
  br i1 %108, label %377, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds i16, i16* %109, i64 %133
  br i1 %111, label %216, label %136

136:                                              ; preds = %134
  br i1 %112, label %137, label %195

137:                                              ; preds = %136
  %138 = getelementptr inbounds i16, i16* %135, i64 %114
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = mul nuw nsw i32 %140, 255
  %142 = lshr i32 %141, 15
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %143
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %141, 32767
  %148 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %143
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = mul nuw nsw i32 %147, %150
  %152 = lshr i32 %151, 12
  %153 = add nuw nsw i32 %152, %146
  %154 = lshr i32 %153, 8
  %155 = trunc i32 %154 to i8
  %156 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 2
  store i8 %155, i8* %156, align 1
  %157 = getelementptr inbounds i16, i16* %135, i64 1
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = mul nuw nsw i32 %159, 255
  %161 = lshr i32 %160, 15
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %162
  %164 = load i16, i16* %163, align 2
  %165 = zext i16 %164 to i32
  %166 = and i32 %160, 32767
  %167 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %162
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = mul nuw nsw i32 %166, %169
  %171 = lshr i32 %170, 12
  %172 = add nuw nsw i32 %171, %165
  %173 = lshr i32 %172, 8
  %174 = trunc i32 %173 to i8
  %175 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 1
  store i8 %174, i8* %175, align 1
  %176 = getelementptr inbounds i16, i16* %135, i64 %115
  %177 = load i16, i16* %176, align 2
  %178 = zext i16 %177 to i32
  %179 = mul nuw nsw i32 %178, 255
  %180 = lshr i32 %179, 15
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %181
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i32
  %185 = and i32 %179, 32767
  %186 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %181
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = mul nuw nsw i32 %185, %188
  %190 = lshr i32 %189, 12
  %191 = add nuw nsw i32 %190, %184
  %192 = lshr i32 %191, 8
  %193 = trunc i32 %192 to i8
  %194 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 0
  store i8 %193, i8* %194, align 1
  br label %412

195:                                              ; preds = %136
  %196 = load i16, i16* %135, align 2
  %197 = zext i16 %196 to i32
  %198 = mul nuw nsw i32 %197, 255
  %199 = lshr i32 %198, 15
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %200
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = and i32 %198, 32767
  %205 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %200
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = mul nuw nsw i32 %204, %207
  %209 = lshr i32 %208, 12
  %210 = add nuw nsw i32 %209, %203
  %211 = lshr i32 %210, 8
  %212 = trunc i32 %211 to i8
  %213 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 1
  store i8 %212, i8* %213, align 1
  %214 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 0
  store i8 %212, i8* %214, align 1
  %215 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 2
  store i8 %212, i8* %215, align 1
  br label %412

216:                                              ; preds = %134
  %217 = getelementptr inbounds i16, i16* %135, i64 %117
  %218 = load i16, i16* %217, align 2
  %219 = zext i16 %218 to i32
  %220 = mul nuw nsw i32 %219, 255
  %221 = add nuw nsw i32 %220, 32895
  %222 = lshr i32 %221, 16
  %223 = trunc i32 %222 to i8
  %224 = and i32 %221, 16711680
  switch i8 %223, label %225 [
    i8 0, label %229
    i8 -1, label %229
  ]

225:                                              ; preds = %216
  %226 = lshr i32 %219, 1
  %227 = add nuw nsw i32 %226, 2139062400
  %228 = udiv i32 %227, %219
  br label %229

229:                                              ; preds = %225, %216, %216
  %230 = phi i32 [ %228, %225 ], [ 0, %216 ], [ 0, %216 ]
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %129
  store i8 %223, i8* %231, align 1
  %232 = icmp eq i32 %224, 16711680
  %233 = add i32 %131, 1
  %234 = select i1 %232, i32 %130, i32 %233
  br i1 %112, label %235, label %339

235:                                              ; preds = %229
  %236 = getelementptr inbounds i16, i16* %135, i64 %121
  %237 = load i16, i16* %236, align 2
  %238 = zext i16 %237 to i32
  %239 = icmp uge i16 %237, %218
  %240 = icmp ult i16 %218, 128
  %241 = or i1 %240, %239
  br i1 %241, label %268, label %242

242:                                              ; preds = %235
  %243 = icmp eq i16 %237, 0
  br i1 %243, label %268, label %244

244:                                              ; preds = %242
  %245 = icmp ult i16 %218, -129
  br i1 %245, label %246, label %250

246:                                              ; preds = %244
  %247 = mul i32 %230, %238
  %248 = add i32 %247, 64
  %249 = lshr i32 %248, 7
  br label %252

250:                                              ; preds = %244
  %251 = mul nuw nsw i32 %238, 255
  br label %252

252:                                              ; preds = %250, %246
  %253 = phi i32 [ %249, %246 ], [ %251, %250 ]
  %254 = lshr i32 %253, 15
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %255
  %257 = load i16, i16* %256, align 2
  %258 = zext i16 %257 to i32
  %259 = and i32 %253, 32767
  %260 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %255
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i32
  %263 = mul nuw nsw i32 %259, %262
  %264 = lshr i32 %263, 12
  %265 = add nuw nsw i32 %264, %258
  %266 = lshr i32 %265, 8
  %267 = trunc i32 %266 to i8
  br label %268

268:                                              ; preds = %252, %242, %235
  %269 = phi i8 [ %267, %252 ], [ -1, %235 ], [ 0, %242 ]
  %270 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 2
  store i8 %269, i8* %270, align 1
  %271 = getelementptr inbounds i16, i16* %135, i64 %122
  %272 = load i16, i16* %271, align 2
  %273 = zext i16 %272 to i32
  %274 = icmp uge i16 %272, %218
  %275 = or i1 %240, %274
  br i1 %275, label %302, label %276

276:                                              ; preds = %268
  %277 = icmp eq i16 %272, 0
  br i1 %277, label %302, label %278

278:                                              ; preds = %276
  %279 = icmp ult i16 %218, -129
  br i1 %279, label %280, label %284

280:                                              ; preds = %278
  %281 = mul i32 %230, %273
  %282 = add i32 %281, 64
  %283 = lshr i32 %282, 7
  br label %286

284:                                              ; preds = %278
  %285 = mul nuw nsw i32 %273, 255
  br label %286

286:                                              ; preds = %284, %280
  %287 = phi i32 [ %283, %280 ], [ %285, %284 ]
  %288 = lshr i32 %287, 15
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %289
  %291 = load i16, i16* %290, align 2
  %292 = zext i16 %291 to i32
  %293 = and i32 %287, 32767
  %294 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %289
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  %297 = mul nuw nsw i32 %293, %296
  %298 = lshr i32 %297, 12
  %299 = add nuw nsw i32 %298, %292
  %300 = lshr i32 %299, 8
  %301 = trunc i32 %300 to i8
  br label %302

302:                                              ; preds = %286, %276, %268
  %303 = phi i8 [ %301, %286 ], [ -1, %268 ], [ 0, %276 ]
  %304 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 1
  store i8 %303, i8* %304, align 1
  %305 = getelementptr inbounds i16, i16* %135, i64 %123
  %306 = load i16, i16* %305, align 2
  %307 = zext i16 %306 to i32
  %308 = icmp uge i16 %306, %218
  %309 = or i1 %240, %308
  br i1 %309, label %336, label %310

310:                                              ; preds = %302
  %311 = icmp eq i16 %306, 0
  br i1 %311, label %336, label %312

312:                                              ; preds = %310
  %313 = icmp ult i16 %218, -129
  br i1 %313, label %314, label %318

314:                                              ; preds = %312
  %315 = mul i32 %230, %307
  %316 = add i32 %315, 64
  %317 = lshr i32 %316, 7
  br label %320

318:                                              ; preds = %312
  %319 = mul nuw nsw i32 %307, 255
  br label %320

320:                                              ; preds = %318, %314
  %321 = phi i32 [ %317, %314 ], [ %319, %318 ]
  %322 = lshr i32 %321, 15
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %323
  %325 = load i16, i16* %324, align 2
  %326 = zext i16 %325 to i32
  %327 = and i32 %321, 32767
  %328 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %323
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i32
  %331 = mul nuw nsw i32 %327, %330
  %332 = lshr i32 %331, 12
  %333 = add nuw nsw i32 %332, %326
  %334 = lshr i32 %333, 8
  %335 = trunc i32 %334 to i8
  br label %336

336:                                              ; preds = %320, %310, %302
  %337 = phi i8 [ %335, %320 ], [ -1, %302 ], [ 0, %310 ]
  %338 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 0
  store i8 %337, i8* %338, align 1
  br label %412

339:                                              ; preds = %229
  %340 = getelementptr inbounds i16, i16* %135, i64 %118
  %341 = load i16, i16* %340, align 2
  %342 = zext i16 %341 to i32
  %343 = icmp uge i16 %341, %218
  %344 = icmp ult i16 %218, 128
  %345 = or i1 %344, %343
  br i1 %345, label %372, label %346

346:                                              ; preds = %339
  %347 = icmp eq i16 %341, 0
  br i1 %347, label %372, label %348

348:                                              ; preds = %346
  %349 = icmp ult i16 %218, -129
  br i1 %349, label %350, label %354

350:                                              ; preds = %348
  %351 = mul i32 %230, %342
  %352 = add i32 %351, 64
  %353 = lshr i32 %352, 7
  br label %356

354:                                              ; preds = %348
  %355 = mul nuw nsw i32 %342, 255
  br label %356

356:                                              ; preds = %354, %350
  %357 = phi i32 [ %353, %350 ], [ %355, %354 ]
  %358 = lshr i32 %357, 15
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %359
  %361 = load i16, i16* %360, align 2
  %362 = zext i16 %361 to i32
  %363 = and i32 %357, 32767
  %364 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %359
  %365 = load i8, i8* %364, align 1
  %366 = zext i8 %365 to i32
  %367 = mul nuw nsw i32 %363, %366
  %368 = lshr i32 %367, 12
  %369 = add nuw nsw i32 %368, %362
  %370 = lshr i32 %369, 8
  %371 = trunc i32 %370 to i8
  br label %372

372:                                              ; preds = %356, %346, %339
  %373 = phi i8 [ %371, %356 ], [ -1, %339 ], [ 0, %346 ]
  %374 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 1
  store i8 %373, i8* %374, align 1
  %375 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 0
  store i8 %373, i8* %375, align 1
  %376 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 2
  store i8 %373, i8* %376, align 1
  br label %412

377:                                              ; preds = %128
  %378 = getelementptr inbounds i8, i8* %88, i64 %133
  switch i32 %95, label %411 [
    i32 3, label %379
    i32 2, label %386
    i32 1, label %397
    i32 0, label %404
  ]

379:                                              ; preds = %377
  %380 = getelementptr inbounds i8, i8* %378, i64 %126
  %381 = load i8, i8* %380, align 1
  %382 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %129
  store i8 %381, i8* %382, align 1
  %383 = icmp eq i8 %381, -1
  %384 = add i32 %131, 1
  %385 = select i1 %383, i32 %130, i32 %384
  br label %386

386:                                              ; preds = %379, %377
  %387 = phi i32 [ %130, %377 ], [ %385, %379 ]
  %388 = getelementptr inbounds i8, i8* %378, i64 %121
  %389 = load i8, i8* %388, align 1
  %390 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 2
  store i8 %389, i8* %390, align 1
  %391 = getelementptr inbounds i8, i8* %378, i64 %122
  %392 = load i8, i8* %391, align 1
  %393 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 1
  store i8 %392, i8* %393, align 1
  %394 = getelementptr inbounds i8, i8* %378, i64 %123
  %395 = load i8, i8* %394, align 1
  %396 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 0
  store i8 %395, i8* %396, align 1
  br label %412

397:                                              ; preds = %377
  %398 = getelementptr inbounds i8, i8* %378, i64 %125
  %399 = load i8, i8* %398, align 1
  %400 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %129
  store i8 %399, i8* %400, align 1
  %401 = icmp eq i8 %399, -1
  %402 = add i32 %131, 1
  %403 = select i1 %401, i32 %130, i32 %402
  br label %404

404:                                              ; preds = %397, %377
  %405 = phi i32 [ %130, %377 ], [ %403, %397 ]
  %406 = getelementptr inbounds i8, i8* %378, i64 %118
  %407 = load i8, i8* %406, align 1
  %408 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 1
  store i8 %407, i8* %408, align 1
  %409 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 0
  store i8 %407, i8* %409, align 1
  %410 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %2, i64 0, i64 %129, i32 2
  store i8 %407, i8* %410, align 1
  br label %412

411:                                              ; preds = %377
  unreachable

412:                                              ; preds = %404, %386, %372, %336, %195, %137
  %413 = phi i32 [ %130, %137 ], [ %130, %195 ], [ %234, %372 ], [ %234, %336 ], [ %405, %404 ], [ %387, %386 ]
  %414 = add nuw nsw i64 %129, 1
  %415 = icmp ult i64 %414, %127
  br i1 %415, label %128, label %416

416:                                              ; preds = %412, %85
  %417 = phi i32 [ 0, %85 ], [ %413, %412 ]
  %418 = getelementptr inbounds %struct.png_image, %struct.png_image* %87, i64 0, i32 0
  %419 = load %struct.png_control*, %struct.png_control** %418, align 8
  %420 = getelementptr inbounds %struct.png_control, %struct.png_control* %419, i64 0, i32 0
  %421 = load %struct.png_struct_def*, %struct.png_struct_def** %420, align 8
  %422 = getelementptr inbounds %struct.png_control, %struct.png_control* %419, i64 0, i32 1
  %423 = load %struct.png_info_def*, %struct.png_info_def** %422, align 8
  call void @cr_png_set_PLTE(%struct.png_struct_def* %421, %struct.png_info_def* %423, %struct.png_color_struct* nonnull %104, i32 %92) #11
  %424 = icmp sgt i32 %417, 0
  br i1 %424, label %425, label %431

425:                                              ; preds = %416
  %426 = load %struct.png_control*, %struct.png_control** %418, align 8
  %427 = getelementptr inbounds %struct.png_control, %struct.png_control* %426, i64 0, i32 0
  %428 = load %struct.png_struct_def*, %struct.png_struct_def** %427, align 8
  %429 = getelementptr inbounds %struct.png_control, %struct.png_control* %426, i64 0, i32 1
  %430 = load %struct.png_info_def*, %struct.png_info_def** %429, align 8
  call void @cr_png_set_tRNS(%struct.png_struct_def* %428, %struct.png_info_def* %430, i8* nonnull %103, i32 %417, %struct.png_color_16_struct* null) #11
  br label %431

431:                                              ; preds = %416, %425
  store i32 %92, i32* %89, align 4
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %103) #11
  call void @llvm.lifetime.end.p0i8(i64 768, i8* nonnull %102) #11
  br label %443

432:                                              ; preds = %73, %68
  %433 = load %struct.png_control*, %struct.png_control** %6, align 8
  %434 = getelementptr inbounds %struct.png_control, %struct.png_control* %433, i64 0, i32 0
  %435 = load %struct.png_struct_def*, %struct.png_struct_def** %434, align 8
  tail call void @cr_png_error(%struct.png_struct_def* %435, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i64 0, i64 0)) #12
  unreachable

436:                                              ; preds = %63
  %437 = load i32, i32* %33, align 4
  %438 = select i1 %26, i32 16, i32 8
  %439 = and i32 %13, 2
  %440 = shl i32 %13, 2
  %441 = and i32 %440, 4
  %442 = or i32 %441, %439
  tail call void @cr_png_set_IHDR(%struct.png_struct_def* %9, %struct.png_info_def* %11, i32 %437, i32 %52, i32 %438, i32 %442, i32 0, i32 0, i32 0) #11
  br label %443

443:                                              ; preds = %436, %431
  br i1 %26, label %444, label %450

444:                                              ; preds = %443
  call void @cr_png_set_gAMA_fixed(%struct.png_struct_def* %9, %struct.png_info_def* %11, i32 100000) #11
  %445 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 5
  %446 = load i32, i32* %445, align 8
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %458

449:                                              ; preds = %444
  call void @cr_png_set_cHRM_fixed(%struct.png_struct_def* %9, %struct.png_info_def* %11, i32 31270, i32 32900, i32 64000, i32 33000, i32 30000, i32 60000, i32 15000, i32 6000) #11
  br label %458

450:                                              ; preds = %443
  %451 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 5
  %452 = load i32, i32* %451, align 8
  %453 = and i32 %452, 1
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %450
  call void @cr_png_set_sRGB(%struct.png_struct_def* %9, %struct.png_info_def* %11, i32 0) #11
  br label %457

456:                                              ; preds = %450
  call void @cr_png_set_gAMA_fixed(%struct.png_struct_def* %9, %struct.png_info_def* %11, i32 45455) #11
  br label %457

457:                                              ; preds = %455, %456
  call void @cr_png_write_info(%struct.png_struct_def* %9, %struct.png_info_def* %11)
  br label %459

458:                                              ; preds = %444, %449
  call void @cr_png_write_info(%struct.png_struct_def* %9, %struct.png_info_def* %11)
  call void @cr_png_set_swap(%struct.png_struct_def* %9) #11
  br label %459

459:                                              ; preds = %457, %458
  %460 = and i32 %13, 16
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %468, label %462

462:                                              ; preds = %459
  %463 = and i32 %13, 10
  %464 = icmp eq i32 %463, 2
  br i1 %464, label %465, label %466

465:                                              ; preds = %462
  call void @cr_png_set_bgr(%struct.png_struct_def* %9) #11
  br label %466

466:                                              ; preds = %462, %465
  %467 = and i32 %13, -17
  br label %468

468:                                              ; preds = %459, %466
  %469 = phi i32 [ %467, %466 ], [ %13, %459 ]
  %470 = and i32 %469, 32
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %479, label %472

472:                                              ; preds = %468
  %473 = and i32 %469, 1
  %474 = icmp eq i32 %473, 0
  %475 = or i1 %15, %474
  br i1 %475, label %477, label %476

476:                                              ; preds = %472
  call void @cr_png_set_swap_alpha(%struct.png_struct_def* %9) #11
  br label %477

477:                                              ; preds = %472, %476
  %478 = and i32 %469, -33
  br label %479

479:                                              ; preds = %468, %477
  %480 = phi i32 [ %478, %477 ], [ %469, %468 ]
  br i1 %15, label %481, label %486

481:                                              ; preds = %479
  %482 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 6
  %483 = load i32, i32* %482, align 4
  %484 = icmp ult i32 %483, 17
  br i1 %484, label %485, label %486

485:                                              ; preds = %481
  call void @cr_png_set_packing(%struct.png_struct_def* %9) #11
  br label %486

486:                                              ; preds = %485, %481, %479
  %487 = icmp ugt i32 %480, 15
  br i1 %487, label %488, label %489

488:                                              ; preds = %486
  call void @cr_png_error(%struct.png_struct_def* %9, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0)) #12
  unreachable

489:                                              ; preds = %486
  %490 = getelementptr inbounds i8, i8* %0, i64 8
  %491 = bitcast i8* %490 to i8**
  %492 = load i8*, i8** %491, align 8
  %493 = load i32, i32* %40, align 8
  %494 = sext i32 %493 to i64
  %495 = zext i1 %19 to i64
  %496 = shl nsw i64 %494, %495
  %497 = icmp slt i64 %496, 0
  br i1 %497, label %498, label %505

498:                                              ; preds = %489
  %499 = load i32, i32* %51, align 8
  %500 = add i32 %499, -1
  %501 = zext i32 %500 to i64
  %502 = mul i64 %496, %501
  %503 = sub i64 0, %502
  %504 = getelementptr inbounds i8, i8* %492, i64 %503
  br label %505

505:                                              ; preds = %498, %489
  %506 = phi i8* [ %504, %498 ], [ %492, %489 ]
  %507 = getelementptr inbounds i8, i8* %0, i64 40
  %508 = bitcast i8* %507 to i8**
  store i8* %506, i8** %508, align 8
  %509 = getelementptr inbounds i8, i8* %0, i64 48
  %510 = bitcast i8* %509 to i64*
  store i64 %496, i64* %510, align 8
  %511 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 5
  %512 = load i32, i32* %511, align 8
  %513 = and i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp eq %struct.png_struct_def* %9, null
  %516 = or i1 %515, %514
  br i1 %516, label %552, label %517

517:                                              ; preds = %505
  %518 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 59
  store i8 8, i8* %518, align 8, !alias.scope !8
  %519 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 46
  %520 = load i8*, i8** %519, align 8, !alias.scope !8
  %521 = icmp eq i8* %520, null
  br i1 %521, label %550, label %522

522:                                              ; preds = %517
  %523 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 37
  %524 = load i32, i32* %523, align 8, !alias.scope !8
  %525 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 65
  %526 = load i8, i8* %525, align 2, !alias.scope !8
  %527 = zext i8 %526 to i32
  %528 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 62
  %529 = load i8, i8* %528, align 1, !alias.scope !8
  %530 = zext i8 %529 to i32
  %531 = mul nuw nsw i32 %530, %527
  %532 = icmp ugt i32 %531, 7
  %533 = zext i32 %524 to i64
  %534 = zext i32 %531 to i64
  br i1 %532, label %535, label %538

535:                                              ; preds = %522
  %536 = lshr i64 %534, 3
  %537 = mul nuw nsw i64 %536, %533
  br label %542

538:                                              ; preds = %522
  %539 = mul nuw nsw i64 %534, %533
  %540 = add nuw nsw i64 %539, 7
  %541 = lshr i64 %540, 3
  br label %542

542:                                              ; preds = %538, %535
  %543 = phi i64 [ %537, %535 ], [ %541, %538 ]
  %544 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 47
  %545 = load i8*, i8** %544, align 8, !alias.scope !8
  %546 = icmp eq i8* %545, null
  br i1 %546, label %547, label %550

547:                                              ; preds = %542
  %548 = add nuw nsw i64 %543, 1
  %549 = call noalias i8* @cr_png_malloc(%struct.png_struct_def* nonnull %9, i64 %548) #11
  store i8* %549, i8** %544, align 8, !alias.scope !8
  br label %550

550:                                              ; preds = %542, %547, %517
  store i8 0, i8* %518, align 8, !alias.scope !8
  %551 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 22
  store i32 3, i32* %551, align 4, !alias.scope !11
  br label %552

552:                                              ; preds = %550, %505
  %553 = and i32 %13, 5
  %554 = icmp eq i32 %553, 5
  %555 = and i1 %554, %18
  br i1 %555, label %563, label %556

556:                                              ; preds = %552
  %557 = icmp eq i32 %14, 0
  br i1 %557, label %558, label %571

558:                                              ; preds = %556
  %559 = getelementptr inbounds i8, i8* %0, i64 32
  %560 = bitcast i8* %559 to i32*
  %561 = load i32, i32* %560, align 8
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %571, label %563

563:                                              ; preds = %558, %552
  %564 = call i64 @cr_png_get_rowbytes(%struct.png_struct_def* %9, %struct.png_info_def* %11) #11
  %565 = call noalias i8* @cr_png_malloc(%struct.png_struct_def* %9, i64 %564) #11
  %566 = getelementptr inbounds i8, i8* %0, i64 56
  %567 = bitcast i8* %566 to i8**
  store i8* %565, i8** %567, align 8
  %568 = select i1 %26, i32 (i8*)* @png_write_image_16bit, i32 (i8*)* @png_write_image_8bit
  %569 = call i32 @cr_png_safe_execute(%struct.png_image* %5, i32 (i8*)* nonnull %568, i8* %0) #11
  store i8* null, i8** %567, align 8
  call void @cr_png_free(%struct.png_struct_def* %9, i8* %565) #11
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %584, label %583

571:                                              ; preds = %558, %556
  %572 = load i64, i64* %510, align 8
  %573 = load i32, i32* %51, align 8
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %583, label %575

575:                                              ; preds = %571
  %576 = load i8*, i8** %508, align 8
  br label %577

577:                                              ; preds = %575, %577
  %578 = phi i32 [ %581, %577 ], [ %573, %575 ]
  %579 = phi i8* [ %580, %577 ], [ %576, %575 ]
  call void @cr_png_write_row(%struct.png_struct_def* %9, i8* %579)
  %580 = getelementptr inbounds i8, i8* %579, i64 %572
  %581 = add i32 %578, -1
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %577

583:                                              ; preds = %577, %571, %563
  call void @cr_png_write_end(%struct.png_struct_def* %9, %struct.png_info_def* %11)
  br label %584

584:                                              ; preds = %563, %583
  %585 = phi i32 [ 1, %583 ], [ 0, %563 ]
  ret i32 %585
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_image_write_to_file(%struct.png_image*, i8* readonly, i32, i8*, i32, i8*) local_unnamed_addr #0 {
  %7 = alloca %struct.png_image_write_control, align 8
  %8 = icmp eq %struct.png_image* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %76

13:                                               ; preds = %9
  %14 = icmp ne i8* %1, null
  %15 = icmp ne i8* %3, null
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %74

17:                                               ; preds = %13
  %18 = tail call %struct._IO_FILE* @fopen64(i8* nonnull %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0))
  %19 = icmp eq %struct._IO_FILE* %18, null
  br i1 %19, label %69, label %20

20:                                               ; preds = %17
  %21 = load i32, i32* %10, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %40

23:                                               ; preds = %20
  %24 = tail call fastcc i32 @png_image_write_init(%struct.png_image* nonnull %0) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %66, label %26

26:                                               ; preds = %23
  %27 = bitcast %struct.png_image_write_control* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 88, i1 false) #11
  %28 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 0
  %29 = load %struct.png_control*, %struct.png_control** %28, align 8
  %30 = getelementptr inbounds %struct.png_control, %struct.png_control* %29, i64 0, i32 0
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %30, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i64 0, i32 9
  %33 = bitcast i8** %32 to %struct._IO_FILE**
  store %struct._IO_FILE* %18, %struct._IO_FILE** %33, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 88, i1 false) #11
  %34 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 0
  store %struct.png_image* %0, %struct.png_image** %34, align 8
  %35 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 1
  store i8* %3, i8** %35, align 8
  %36 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 2
  store i32 %4, i32* %36, align 8
  %37 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 3
  store i8* %5, i8** %37, align 8
  %38 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %7, i64 0, i32 4
  store i32 %2, i32* %38, align 8
  %39 = call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_write_main, i8* nonnull %27) #11
  call void @cr_png_image_free(%struct.png_image* nonnull %0) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %27) #11
  br label %42

40:                                               ; preds = %20
  %41 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.19, i64 0, i64 0)) #11
  br label %42

42:                                               ; preds = %26, %40
  %43 = phi i32 [ %39, %26 ], [ %41, %40 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %66, label %45

45:                                               ; preds = %42
  %46 = call i32 @fflush(%struct._IO_FILE* nonnull %18)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = call i32 @ferror(%struct._IO_FILE* nonnull %18) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %48
  %52 = call i32 @fclose(%struct._IO_FILE* nonnull %18)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %78, label %54

54:                                               ; preds = %51
  %55 = tail call i32* @__errno_location() #13
  %56 = load i32, i32* %55, align 4
  br label %61

57:                                               ; preds = %48, %45
  %58 = tail call i32* @__errno_location() #13
  %59 = load i32, i32* %58, align 4
  %60 = call i32 @fclose(%struct._IO_FILE* nonnull %18)
  br label %61

61:                                               ; preds = %57, %54
  %62 = phi i32 [ %56, %54 ], [ %59, %57 ]
  %63 = call i32 @remove(i8* nonnull %1) #11
  %64 = call i8* @strerror(i32 %62) #11
  %65 = call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* %64) #11
  br label %78

66:                                               ; preds = %23, %42
  %67 = call i32 @fclose(%struct._IO_FILE* nonnull %18)
  %68 = call i32 @remove(i8* nonnull %1) #11
  br label %78

69:                                               ; preds = %17
  %70 = tail call i32* @__errno_location() #13
  %71 = load i32, i32* %70, align 4
  %72 = tail call i8* @strerror(i32 %71) #11
  %73 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* %72) #11
  br label %78

74:                                               ; preds = %13
  %75 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)) #11
  br label %78

76:                                               ; preds = %9
  %77 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i64 0, i64 0)) #11
  br label %78

78:                                               ; preds = %6, %66, %69, %51, %61, %76, %74
  %79 = phi i32 [ %75, %74 ], [ %77, %76 ], [ 0, %66 ], [ %73, %69 ], [ %65, %61 ], [ 1, %51 ], [ 0, %6 ]
  ret i32 %79
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @remove(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #10

declare i32 @cr_png_handle_as_unknown(%struct.png_struct_def*, i8*) local_unnamed_addr #1

declare void @cr_png_write_chunk(%struct.png_struct_def*, i8*, i8*, i64) local_unnamed_addr #1

declare i32 @Cr_z_deflateEnd(%struct.z_stream_s*) local_unnamed_addr #1

declare void @cr_png_free_buffer_list(%struct.png_struct_def*, %struct.png_compression_buffer**) local_unnamed_addr #1

declare void @cr_png_free(%struct.png_struct_def*, i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @cr_png_safe_error(%struct.png_struct_def*, i8*) #3

declare void @cr_png_safe_warning(%struct.png_struct_def*, i8*) #1

declare noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def*) local_unnamed_addr #1

declare noalias i8* @cr_png_malloc_warn(%struct.png_struct_def*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @image_memory_write(%struct.png_struct_def*, i8* nocapture readonly, i64) #0 {
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 9
  %5 = bitcast i8** %4 to %struct.png_image_write_control**
  %6 = load %struct.png_image_write_control*, %struct.png_image_write_control** %5, align 8
  %7 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %6, i64 0, i32 10
  %8 = load i64, i64* %7, align 8
  %9 = xor i64 %8, -1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %6, i64 0, i32 9
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %8, %2
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.png_image_write_control, %struct.png_image_write_control* %6, i64 0, i32 8
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %1, i64 %2, i1 false)
  br label %22

22:                                               ; preds = %13, %18
  store i64 %16, i64* %7, align 8
  br label %24

23:                                               ; preds = %3
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0)) #12
  unreachable

24:                                               ; preds = %11, %22
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @image_memory_flush(%struct.png_struct_def* nocapture) #5 {
  ret void
}

declare void @cr_png_set_benign_errors(%struct.png_struct_def*, i32) local_unnamed_addr #1

declare void @cr_png_set_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @cr_png_set_gAMA_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #1

declare void @cr_png_set_cHRM_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @cr_png_set_sRGB(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #1

declare i64 @cr_png_get_rowbytes(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_write_image_16bit(i8* nocapture readonly) #0 {
  %2 = bitcast i8* %0 to %struct.png_image**
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 40
  %9 = bitcast i8* %8 to i16**
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds i8, i8* %0, i64 56
  %12 = bitcast i8* %11 to i8**
  %13 = bitcast i8* %11 to i16**
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 2
  %18 = or i32 %17, 1
  %19 = and i32 %16, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %16, 32
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds i16, i16* %14, i64 1
  %27 = zext i32 %18 to i64
  %28 = select i1 %25, i16* %14, i16* %26
  %29 = select i1 %25, i64 %27, i64 -1
  %30 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add nuw nsw i32 %18, 1
  %33 = mul i32 %31, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i16, i16* %28, i64 %34
  %36 = icmp eq i32 %23, 0
  br i1 %36, label %92, label %37

37:                                               ; preds = %21
  %38 = getelementptr inbounds i16, i16* %10, i64 1
  %39 = select i1 %25, i16* %10, i16* %38
  %40 = icmp eq i32 %33, 0
  %41 = getelementptr inbounds i8, i8* %0, i64 48
  %42 = bitcast i8* %41 to i64*
  %43 = icmp eq i32 %17, 0
  %44 = icmp eq i32 %17, 0
  br label %46

45:                                               ; preds = %1
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0)) #12
  unreachable

46:                                               ; preds = %37, %84
  %47 = phi i32 [ %23, %37 ], [ %90, %84 ]
  %48 = phi i16* [ %39, %37 ], [ %89, %84 ]
  br i1 %40, label %84, label %49

49:                                               ; preds = %46, %78
  %50 = phi i16* [ %82, %78 ], [ %28, %46 ]
  %51 = phi i16* [ %81, %78 ], [ %48, %46 ]
  %52 = getelementptr inbounds i16, i16* %51, i64 %29
  %53 = load i16, i16* %52, align 2
  %54 = getelementptr inbounds i16, i16* %50, i64 %29
  store i16 %53, i16* %54, align 2
  %55 = zext i16 %53 to i32
  switch i16 %53, label %56 [
    i16 0, label %60
    i16 -1, label %60
  ]

56:                                               ; preds = %49
  %57 = lshr i32 %55, 1
  %58 = or i32 %57, 2147450880
  %59 = udiv i32 %58, %55
  br label %60

60:                                               ; preds = %49, %49, %56
  %61 = phi i32 [ %59, %56 ], [ 0, %49 ], [ 0, %49 ]
  %62 = icmp eq i16 %53, -1
  %63 = getelementptr inbounds i16, i16* %51, i64 1
  %64 = load i16, i16* %51, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp ult i16 %64, %53
  br i1 %66, label %67, label %75

67:                                               ; preds = %60
  %68 = icmp eq i16 %64, 0
  %69 = or i1 %62, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = mul i32 %61, %65
  %72 = add i32 %71, 16384
  %73 = lshr i32 %72, 15
  %74 = trunc i32 %73 to i16
  br label %75

75:                                               ; preds = %60, %67, %70
  %76 = phi i16 [ %74, %70 ], [ %64, %67 ], [ -1, %60 ]
  %77 = getelementptr inbounds i16, i16* %50, i64 1
  store i16 %76, i16* %50, align 2
  br i1 %43, label %78, label %93

78:                                               ; preds = %106, %75, %121
  %79 = phi i16* [ %51, %75 ], [ %63, %106 ], [ %94, %121 ]
  %80 = phi i16* [ %50, %75 ], [ %77, %106 ], [ %108, %121 ]
  %81 = getelementptr inbounds i16, i16* %79, i64 2
  %82 = getelementptr inbounds i16, i16* %80, i64 2
  %83 = icmp ult i16* %82, %35
  br i1 %83, label %49, label %84

84:                                               ; preds = %78, %46
  %85 = load i8*, i8** %12, align 8
  tail call void @cr_png_write_row(%struct.png_struct_def* %7, i8* %85)
  %86 = load i64, i64* %42, align 8
  %87 = lshr i64 %86, 1
  %88 = and i64 %87, 32767
  %89 = getelementptr inbounds i16, i16* %48, i64 %88
  %90 = add i32 %47, -1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %46

92:                                               ; preds = %84, %21
  ret i32 1

93:                                               ; preds = %75
  %94 = getelementptr inbounds i16, i16* %51, i64 2
  %95 = load i16, i16* %63, align 2
  %96 = zext i16 %95 to i32
  %97 = icmp ult i16 %95, %53
  br i1 %97, label %98, label %106

98:                                               ; preds = %93
  %99 = icmp eq i16 %95, 0
  %100 = or i1 %62, %99
  br i1 %100, label %106, label %101

101:                                              ; preds = %98
  %102 = mul i32 %61, %96
  %103 = add i32 %102, 16384
  %104 = lshr i32 %103, 15
  %105 = trunc i32 %104 to i16
  br label %106

106:                                              ; preds = %101, %98, %93
  %107 = phi i16 [ %105, %101 ], [ %95, %98 ], [ -1, %93 ]
  %108 = getelementptr inbounds i16, i16* %50, i64 2
  store i16 %107, i16* %77, align 2
  br i1 %44, label %78, label %109

109:                                              ; preds = %106
  %110 = load i16, i16* %94, align 2
  %111 = zext i16 %110 to i32
  %112 = icmp ult i16 %110, %53
  br i1 %112, label %113, label %121

113:                                              ; preds = %109
  %114 = icmp eq i16 %110, 0
  %115 = or i1 %62, %114
  br i1 %115, label %121, label %116

116:                                              ; preds = %113
  %117 = mul i32 %61, %111
  %118 = add i32 %117, 16384
  %119 = lshr i32 %118, 15
  %120 = trunc i32 %119 to i16
  br label %121

121:                                              ; preds = %116, %113, %109
  %122 = phi i16 [ %120, %116 ], [ %110, %113 ], [ -1, %109 ]
  store i16 %122, i16* %108, align 2
  br label %78
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_write_image_8bit(i8* nocapture readonly) #0 {
  %2 = bitcast i8* %0 to %struct.png_image**
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 40
  %9 = bitcast i8* %8 to i16**
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds i8, i8* %0, i64 56
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 2
  %19 = or i32 %18, 1
  %20 = and i32 %17, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %113, label %22

22:                                               ; preds = %1
  %23 = and i32 %17, 32
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds i8, i8* %13, i64 1
  %26 = zext i32 %19 to i64
  %27 = select i1 %24, i8* %13, i8* %25
  %28 = select i1 %24, i64 %26, i64 -1
  %29 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add nuw nsw i32 %19, 1
  %32 = mul i32 %30, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %27, i64 %33
  %35 = icmp eq i32 %15, 0
  br i1 %35, label %157, label %36

36:                                               ; preds = %22
  %37 = getelementptr inbounds i16, i16* %10, i64 1
  %38 = select i1 %24, i16* %10, i16* %37
  %39 = icmp eq i32 %32, 0
  %40 = getelementptr inbounds i8, i8* %0, i64 48
  %41 = bitcast i8* %40 to i64*
  %42 = icmp eq i32 %18, 0
  %43 = icmp eq i32 %18, 0
  br label %44

44:                                               ; preds = %36, %105
  %45 = phi i32 [ %15, %36 ], [ %111, %105 ]
  %46 = phi i16* [ %38, %36 ], [ %110, %105 ]
  br i1 %39, label %105, label %47

47:                                               ; preds = %44, %99
  %48 = phi i8* [ %103, %99 ], [ %27, %44 ]
  %49 = phi i16* [ %102, %99 ], [ %46, %44 ]
  %50 = getelementptr inbounds i16, i16* %49, i64 %28
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = mul nuw nsw i32 %52, 255
  %54 = add nuw nsw i32 %53, 32895
  %55 = lshr i32 %54, 16
  %56 = trunc i32 %55 to i8
  %57 = getelementptr inbounds i8, i8* %48, i64 %28
  store i8 %56, i8* %57, align 1
  switch i8 %56, label %58 [
    i8 0, label %62
    i8 -1, label %62
  ]

58:                                               ; preds = %47
  %59 = lshr i32 %52, 1
  %60 = add nuw nsw i32 %59, 2139062400
  %61 = udiv i32 %60, %52
  br label %62

62:                                               ; preds = %47, %47, %58
  %63 = phi i32 [ %61, %58 ], [ 0, %47 ], [ 0, %47 ]
  %64 = icmp ult i16 %51, 128
  %65 = icmp ult i16 %51, -129
  %66 = getelementptr inbounds i16, i16* %49, i64 1
  %67 = load i16, i16* %49, align 2
  %68 = zext i16 %67 to i32
  %69 = icmp uge i16 %67, %51
  %70 = or i1 %64, %69
  br i1 %70, label %96, label %71

71:                                               ; preds = %62
  %72 = icmp eq i16 %67, 0
  br i1 %72, label %96, label %73

73:                                               ; preds = %71
  br i1 %65, label %74, label %78

74:                                               ; preds = %73
  %75 = mul i32 %63, %68
  %76 = add i32 %75, 64
  %77 = lshr i32 %76, 7
  br label %80

78:                                               ; preds = %73
  %79 = mul nuw nsw i32 %68, 255
  br label %80

80:                                               ; preds = %78, %74
  %81 = phi i32 [ %77, %74 ], [ %79, %78 ]
  %82 = lshr i32 %81, 15
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %83
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = and i32 %81, 32767
  %88 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %83
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = mul nuw nsw i32 %87, %90
  %92 = lshr i32 %91, 12
  %93 = add nuw nsw i32 %92, %86
  %94 = lshr i32 %93, 8
  %95 = trunc i32 %94 to i8
  br label %96

96:                                               ; preds = %62, %71, %80
  %97 = phi i8 [ %95, %80 ], [ -1, %62 ], [ 0, %71 ]
  %98 = getelementptr inbounds i8, i8* %48, i64 1
  store i8 %97, i8* %48, align 1
  br i1 %42, label %99, label %158

99:                                               ; preds = %189, %96, %222
  %100 = phi i16* [ %49, %96 ], [ %66, %189 ], [ %159, %222 ]
  %101 = phi i8* [ %48, %96 ], [ %98, %189 ], [ %191, %222 ]
  %102 = getelementptr inbounds i16, i16* %100, i64 2
  %103 = getelementptr inbounds i8, i8* %101, i64 2
  %104 = icmp ult i8* %103, %34
  br i1 %104, label %47, label %105

105:                                              ; preds = %99, %44
  %106 = load i8*, i8** %12, align 8
  tail call void @cr_png_write_row(%struct.png_struct_def* %7, i8* %106)
  %107 = load i64, i64* %41, align 8
  %108 = lshr i64 %107, 1
  %109 = and i64 %108, 32767
  %110 = getelementptr inbounds i16, i16* %46, i64 %109
  %111 = add i32 %45, -1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %157, label %44

113:                                              ; preds = %1
  %114 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = mul i32 %115, %19
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %13, i64 %117
  %119 = icmp eq i32 %15, 0
  br i1 %119, label %157, label %120

120:                                              ; preds = %113
  %121 = icmp eq i32 %116, 0
  %122 = getelementptr inbounds i8, i8* %0, i64 48
  %123 = bitcast i8* %122 to i64*
  br label %124

124:                                              ; preds = %120, %150
  %125 = phi i32 [ %15, %120 ], [ %155, %150 ]
  %126 = phi i16* [ %10, %120 ], [ %154, %150 ]
  br i1 %121, label %150, label %127

127:                                              ; preds = %124, %127
  %128 = phi i8* [ %148, %127 ], [ %13, %124 ]
  %129 = phi i16* [ %130, %127 ], [ %126, %124 ]
  %130 = getelementptr inbounds i16, i16* %129, i64 1
  %131 = load i16, i16* %129, align 2
  %132 = zext i16 %131 to i32
  %133 = mul nuw nsw i32 %132, 255
  %134 = lshr i32 %133, 15
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = and i32 %133, 32767
  %140 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %135
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = mul nuw nsw i32 %139, %142
  %144 = lshr i32 %143, 12
  %145 = add nuw nsw i32 %144, %138
  %146 = lshr i32 %145, 8
  %147 = trunc i32 %146 to i8
  %148 = getelementptr inbounds i8, i8* %128, i64 1
  store i8 %147, i8* %128, align 1
  %149 = icmp ult i8* %148, %118
  br i1 %149, label %127, label %150

150:                                              ; preds = %127, %124
  tail call void @cr_png_write_row(%struct.png_struct_def* %7, i8* %13)
  %151 = load i64, i64* %123, align 8
  %152 = lshr i64 %151, 1
  %153 = and i64 %152, 32767
  %154 = getelementptr inbounds i16, i16* %126, i64 %153
  %155 = add i32 %125, -1
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %124

157:                                              ; preds = %105, %150, %22, %113
  ret i32 1

158:                                              ; preds = %96
  %159 = getelementptr inbounds i16, i16* %49, i64 2
  %160 = load i16, i16* %66, align 2
  %161 = zext i16 %160 to i32
  %162 = icmp uge i16 %160, %51
  %163 = or i1 %64, %162
  br i1 %163, label %189, label %164

164:                                              ; preds = %158
  %165 = icmp eq i16 %160, 0
  br i1 %165, label %189, label %166

166:                                              ; preds = %164
  br i1 %65, label %169, label %167

167:                                              ; preds = %166
  %168 = mul nuw nsw i32 %161, 255
  br label %173

169:                                              ; preds = %166
  %170 = mul i32 %63, %161
  %171 = add i32 %170, 64
  %172 = lshr i32 %171, 7
  br label %173

173:                                              ; preds = %169, %167
  %174 = phi i32 [ %172, %169 ], [ %168, %167 ]
  %175 = lshr i32 %174, 15
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %176
  %178 = load i16, i16* %177, align 2
  %179 = zext i16 %178 to i32
  %180 = and i32 %174, 32767
  %181 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %176
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = mul nuw nsw i32 %180, %183
  %185 = lshr i32 %184, 12
  %186 = add nuw nsw i32 %185, %179
  %187 = lshr i32 %186, 8
  %188 = trunc i32 %187 to i8
  br label %189

189:                                              ; preds = %173, %164, %158
  %190 = phi i8 [ %188, %173 ], [ -1, %158 ], [ 0, %164 ]
  %191 = getelementptr inbounds i8, i8* %48, i64 2
  store i8 %190, i8* %98, align 1
  br i1 %43, label %99, label %192

192:                                              ; preds = %189
  %193 = load i16, i16* %159, align 2
  %194 = zext i16 %193 to i32
  %195 = icmp uge i16 %193, %51
  %196 = or i1 %64, %195
  br i1 %196, label %222, label %197

197:                                              ; preds = %192
  %198 = icmp eq i16 %193, 0
  br i1 %198, label %222, label %199

199:                                              ; preds = %197
  br i1 %65, label %202, label %200

200:                                              ; preds = %199
  %201 = mul nuw nsw i32 %194, 255
  br label %206

202:                                              ; preds = %199
  %203 = mul i32 %63, %194
  %204 = add i32 %203, 64
  %205 = lshr i32 %204, 7
  br label %206

206:                                              ; preds = %202, %200
  %207 = phi i32 [ %205, %202 ], [ %201, %200 ]
  %208 = lshr i32 %207, 15
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %209
  %211 = load i16, i16* %210, align 2
  %212 = zext i16 %211 to i32
  %213 = and i32 %207, 32767
  %214 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %209
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = mul nuw nsw i32 %213, %216
  %218 = lshr i32 %217, 12
  %219 = add nuw nsw i32 %218, %212
  %220 = lshr i32 %219, 8
  %221 = trunc i32 %220 to i8
  br label %222

222:                                              ; preds = %206, %197, %192
  %223 = phi i8 [ %221, %206 ], [ -1, %192 ], [ 0, %197 ]
  store i8 %223, i8* %191, align 1
  br label %99
}

declare void @cr_png_set_PLTE(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_color_struct*, i32) local_unnamed_addr #1

declare void @cr_png_set_tRNS(%struct.png_struct_def*, %struct.png_info_def*, i8*, i32, %struct.png_color_16_struct*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"png_write_destroy: argument 0"}
!4 = distinct !{!4, !"png_write_destroy"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"cr_png_write_image: argument 0"}
!7 = distinct !{!7, !"cr_png_write_image"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"cr_png_set_filter: argument 0"}
!10 = distinct !{!10, !"cr_png_set_filter"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"cr_png_set_compression_level: argument 0"}
!13 = distinct !{!13, !"cr_png_set_compression_level"}
