; ModuleID = '../../third_party/skia/src/core/SkMipmapAccessor.cpp'
source_filename = "../../third_party/skia/src/core/SkMipmapAccessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkMipmapAccessor = type { %class.SkPixmap, %class.SkPixmap, float, %class.SkMatrix, %class.SkMatrix, i32, %class.SkBitmap, %class.sk_sp.8 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkBitmap = type { %class.sk_sp.6, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp.6 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8 }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.sk_sp.8 = type { %class.SkMipmap* }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%struct.SkBitmapCacheDesc = type { i32, %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.anon.13 = type { %class.SkImage_Base*, %class.SkMatrix }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %class.sk_sp.53, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.89", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.14 }
%class.sk_sp.14 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.25 }
%class.SkFibBlockSizes.25 = type { i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.53 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.66, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.57, [4 x i8] }>
%union.anon.57 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.58, i8* }
%class.sk_sp.58 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.59, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.59 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.60" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.66 = type { %class.SkTHashTable.67 }
%class.SkTHashTable.67 = type { i32, i32, %class.SkAutoTArray.68 }
%class.SkAutoTArray.68 = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.75, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.75 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.76 }
%class.sk_sp.76 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.77, void (i8*)*, i8* }
%class.SkNVRefCnt.77 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap = type { %class.SkTHashTable.78 }
%class.SkTHashTable.78 = type { i32, i32, %class.SkAutoTArray.79 }
%class.SkAutoTArray.79 = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.92, %class.sk_sp.94, %class.sk_sp.94 }
%class.sk_sp.92 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.93, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.93 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.94 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkResourceCache = type opaque

$_ZZN12SkArenaAlloc4makeIZNS_4makeI16SkMipmapAccessorJPK12SkImage_BaseRK8SkMatrixR12SkMipmapModeEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSB_ENUlPcE_8__invokeESK_ = comdat any

@_ZN16SkMipmapAccessorC1EPK12SkImage_BaseRK8SkMatrix12SkMipmapMode = hidden unnamed_addr alias void (%class.SkMipmapAccessor*, %class.SkImage_Base*, %class.SkMatrix*, i32), void (%class.SkMipmapAccessor*, %class.SkImage_Base*, %class.SkMatrix*, i32)* @_ZN16SkMipmapAccessorC2EPK12SkImage_BaseRK8SkMatrix12SkMipmapMode

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkMipmapAccessorC2EPK12SkImage_BaseRK8SkMatrix12SkMipmapMode(%class.SkMipmapAccessor*, %class.SkImage_Base*, %class.SkMatrix* dereferenceable(40), i32) unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkBitmapCacheDesc, align 4
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %struct.SkSize*
  %10 = alloca %class.anon.13, align 8
  %11 = alloca %"struct.SkMipmap::Level", align 8
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca %class.SkMatrix, align 16
  %14 = ptrtoint %class.SkImage_Base* %1 to i64
  %15 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 0
  %16 = bitcast %class.SkMipmapAccessor* %0 to i8*
  %17 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 1
  %18 = bitcast %class.SkPixmap* %17 to i8*
  %19 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 3
  %20 = bitcast %class.SkMipmapAccessor* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 80, i1 false)
  %21 = bitcast %class.SkMatrix* %19 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %21, align 4
  %22 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 3, i32 0, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 3, i32 0, i64 8
  store float 1.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 3, i32 1
  store i32 16, i32* %25, align 4
  %26 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 4
  %27 = bitcast %class.SkMatrix* %26 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %27, align 4
  %28 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 4, i32 0, i64 4
  store float 1.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 4, i32 0, i64 5
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 4, i32 0, i64 6
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 4, i32 0, i64 7
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 4, i32 0, i64 8
  store float 1.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 4, i32 1
  store i32 16, i32* %33, align 4
  %34 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %34) #8
  %35 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 7
  %36 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %35, i64 0, i32 0
  store %class.SkMipmap* null, %class.SkMipmap** %36, align 8
  %37 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 5
  store i32 %3, i32* %37, align 4
  %38 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 2
  store float 0.000000e+00, float* %38, align 8
  %39 = icmp eq i32 %3, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %4
  %41 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  %42 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %42, align 8
  %43 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %9, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %43, align 4
  %44 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %2, %struct.SkSize* nonnull %9, %class.SkMatrix* null) #8
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = load <2 x float>, <2 x float>* %8, align 8
  %47 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %46
  %48 = call float @_ZN8SkMipmap12ComputeLevelE6SkSize(<2 x float> %47) #8
  %49 = fcmp ugt float %48, 0.000000e+00
  br i1 %49, label %51, label %50

50:                                               ; preds = %45, %40
  store i32 0, i32* %37, align 4
  br label %51

51:                                               ; preds = %50, %45
  %52 = phi float [ %48, %45 ], [ 0.000000e+00, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  br label %53

53:                                               ; preds = %4, %51
  %54 = phi float [ %52, %51 ], [ 0.000000e+00, %4 ]
  %55 = bitcast %class.anon.13* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %55) #8
  %56 = getelementptr inbounds %class.anon.13, %class.anon.13* %10, i64 0, i32 1
  %57 = bitcast %class.SkMatrix* %56 to i8*
  %58 = bitcast %class.anon.13* %10 to i64*
  store i64 %14, i64* %58, align 8
  %59 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %59, i64 40, i1 false)
  %60 = call float @llvm.floor.f32(float %54)
  %61 = fcmp olt float %60, 0x41DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0x41DFFFFFE0000000
  %63 = fcmp ogt float %62, 0xC1DFFFFFE0000000
  %64 = select i1 %63, float %62, float 0xC1DFFFFFE0000000
  %65 = fptosi float %64 to i32
  %66 = sitofp i32 %65 to float
  %67 = fsub float %54, %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %53
  %70 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = bitcast %class.SkImage_Base* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %75 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %74, align 8
  %76 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %75, i64 18
  %77 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %76, align 8
  %78 = call zeroext i1 %77(%class.SkImage_Base* %1, %class.GrDirectContext* null, %class.SkBitmap* %34, i32 0) #8
  %79 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 2
  %80 = load i8*, i8** %70, align 8
  %81 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 1
  %82 = load i64, i64* %81, align 8
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %15, %struct.SkImageInfo* dereferenceable(24) %79, i8* %80, i64 %82) #8
  br label %85

83:                                               ; preds = %53
  %84 = icmp sgt i32 %65, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %69, %73, %83
  %86 = load i32, i32* %37, align 4
  %87 = icmp eq i32 %86, 2
  %88 = fcmp ogt float %67, 0.000000e+00
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %256

90:                                               ; preds = %85, %83
  %91 = phi i1 [ false, %85 ], [ true, %83 ]
  %92 = bitcast %class.SkImage_Base* %1 to %class.SkMipmap* (%class.SkImage_Base*)***
  %93 = load %class.SkMipmap* (%class.SkImage_Base*)**, %class.SkMipmap* (%class.SkImage_Base*)*** %92, align 8, !noalias !2
  %94 = getelementptr inbounds %class.SkMipmap* (%class.SkImage_Base*)*, %class.SkMipmap* (%class.SkImage_Base*)** %93, i64 7
  %95 = load %class.SkMipmap* (%class.SkImage_Base*)*, %class.SkMipmap* (%class.SkImage_Base*)** %94, align 8, !noalias !2
  %96 = call %class.SkMipmap* %95(%class.SkImage_Base* %1) #8, !noalias !2
  %97 = icmp eq %class.SkMipmap* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %90
  %99 = bitcast %class.SkMipmap* %96 to %class.SkCachedData*
  call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* nonnull %99, i1 zeroext false) #8, !noalias !7
  br label %107

100:                                              ; preds = %90
  %101 = bitcast %struct.SkBitmapCacheDesc* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %101) #8, !noalias !10
  %102 = bitcast %class.SkImage_Base* %1 to %class.SkImage*
  call void @_ZN17SkBitmapCacheDesc4MakeEPK7SkImage(%struct.SkBitmapCacheDesc* nonnull sret %5, %class.SkImage* %102) #8, !noalias !10
  %103 = call %class.SkMipmap* @_ZN13SkMipmapCache10FindAndRefERK17SkBitmapCacheDescP15SkResourceCache(%struct.SkBitmapCacheDesc* nonnull dereferenceable(20) %5, %class.SkResourceCache* null) #8, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %101) #8, !noalias !10
  %104 = icmp eq %class.SkMipmap* %103, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = call %class.SkMipmap* @_ZN13SkMipmapCache9AddAndRefEPK12SkImage_BaseP15SkResourceCache(%class.SkImage_Base* %1, %class.SkResourceCache* null) #8, !noalias !10
  br label %107

107:                                              ; preds = %98, %100, %105
  %108 = phi %class.SkMipmap* [ %106, %105 ], [ %103, %100 ], [ %96, %98 ]
  %109 = ptrtoint %class.SkMipmap* %108 to i64
  %110 = load %class.SkMipmap*, %class.SkMipmap** %36, align 8
  %111 = bitcast %class.sk_sp.8* %35 to i64*
  store i64 %109, i64* %111, align 8
  %112 = icmp eq %class.SkMipmap* %110, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %107
  %114 = bitcast %class.SkMipmap* %110 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %114, i1 zeroext false) #8
  %115 = load %class.SkMipmap*, %class.SkMipmap** %36, align 8
  br label %116

116:                                              ; preds = %113, %107
  %117 = phi %class.SkMipmap* [ %115, %113 ], [ %108, %107 ]
  %118 = icmp eq %class.SkMipmap* %117, null
  br i1 %118, label %119, label %134

119:                                              ; preds = %116
  %120 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %133

123:                                              ; preds = %119
  %124 = bitcast %class.SkImage_Base* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %125 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %124, align 8
  %126 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %125, i64 18
  %127 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %126, align 8
  %128 = call zeroext i1 %127(%class.SkImage_Base* %1, %class.GrDirectContext* null, %class.SkBitmap* %34, i32 0) #8
  %129 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 2
  %130 = load i8*, i8** %120, align 8
  %131 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 1
  %132 = load i64, i64* %131, align 8
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %15, %struct.SkImageInfo* dereferenceable(24) %129, i8* %130, i64 %132) #8
  br label %133

133:                                              ; preds = %119, %123
  store i32 0, i32* %37, align 4
  br label %256

134:                                              ; preds = %116
  %135 = bitcast %"struct.SkMipmap::Level"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %135) #8
  %136 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 0
  %137 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 1, i32 0
  store float 0xFFFFFFFFE0000000, float* %137, align 8
  %138 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 1, i32 1
  store float 0xFFFFFFFFE0000000, float* %138, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 0, i64 40, i1 false) #8
  br i1 %91, label %139, label %182

139:                                              ; preds = %134
  %140 = add nsw i32 %65, -1
  %141 = call zeroext i1 @_ZNK8SkMipmap8getLevelEiPNS_5LevelE(%class.SkMipmap* nonnull %117, i32 %140, %"struct.SkMipmap::Level"* nonnull %11) #8
  br i1 %141, label %142, label %167

142:                                              ; preds = %139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %135, i64 16, i1 false) #8
  %143 = icmp eq %class.SkPixmap* %15, %136
  br i1 %143, label %161, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %146 = load %class.SkColorSpace*, %class.SkColorSpace** %145, align 8
  %147 = icmp eq %class.SkColorSpace* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 1 monotonic
  br label %151

151:                                              ; preds = %148, %144
  %152 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %153 = load %class.SkColorSpace*, %class.SkColorSpace** %152, align 8
  store %class.SkColorSpace* %146, %class.SkColorSpace** %152, align 8
  %154 = icmp eq %class.SkColorSpace* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 -1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %161

159:                                              ; preds = %155
  %160 = bitcast %class.SkColorSpace* %153 to i8*
  call void @_ZdlPv(i8* %160) #9
  br label %161

161:                                              ; preds = %142, %151, %155, %159
  %162 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %163 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 0, i32 2, i32 0, i32 1
  %164 = bitcast i32* %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8
  %166 = bitcast i32* %162 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %166, align 8
  br label %182

167:                                              ; preds = %139
  %168 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %171, label %181

171:                                              ; preds = %167
  %172 = bitcast %class.SkImage_Base* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %173 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %172, align 8
  %174 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %173, i64 18
  %175 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %174, align 8
  %176 = call zeroext i1 %175(%class.SkImage_Base* %1, %class.GrDirectContext* null, %class.SkBitmap* %34, i32 0) #8
  %177 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 2
  %178 = load i8*, i8** %168, align 8
  %179 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 6, i32 1, i32 1
  %180 = load i64, i64* %179, align 8
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %15, %struct.SkImageInfo* dereferenceable(24) %177, i8* %178, i64 %180) #8
  br label %181

181:                                              ; preds = %171, %167
  store i32 0, i32* %37, align 4
  br label %245

182:                                              ; preds = %161, %134
  %183 = load i32, i32* %37, align 4
  %184 = icmp eq i32 %183, 2
  br i1 %184, label %185, label %245

185:                                              ; preds = %182
  %186 = load %class.SkMipmap*, %class.SkMipmap** %36, align 8
  %187 = call zeroext i1 @_ZNK8SkMipmap8getLevelEiPNS_5LevelE(%class.SkMipmap* %186, i32 %65, %"struct.SkMipmap::Level"* nonnull %11) #8
  br i1 %187, label %188, label %244

188:                                              ; preds = %185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %135, i64 16, i1 false) #8
  %189 = icmp eq %class.SkPixmap* %17, %136
  br i1 %189, label %207, label %190

190:                                              ; preds = %188
  %191 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %192 = load %class.SkColorSpace*, %class.SkColorSpace** %191, align 8
  %193 = icmp eq %class.SkColorSpace* %192, null
  br i1 %193, label %197, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw add i32* %195, i32 1 monotonic
  br label %197

197:                                              ; preds = %194, %190
  %198 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %199 = load %class.SkColorSpace*, %class.SkColorSpace** %198, align 8
  store %class.SkColorSpace* %192, %class.SkColorSpace** %198, align 8
  %200 = icmp eq %class.SkColorSpace* %199, null
  br i1 %200, label %207, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = atomicrmw add i32* %202, i32 -1 acq_rel
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %207

205:                                              ; preds = %201
  %206 = bitcast %class.SkColorSpace* %199 to i8*
  call void @_ZdlPv(i8* %206) #9
  br label %207

207:                                              ; preds = %188, %197, %201, %205
  %208 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %209 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 0, i32 2, i32 0, i32 1
  %210 = bitcast i32* %209 to <2 x i64>*
  %211 = load <2 x i64>, <2 x i64>* %210, align 8
  %212 = bitcast i32* %208 to <2 x i64>*
  store <2 x i64> %211, <2 x i64>* %212, align 8
  store float %67, float* %38, align 8
  %213 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %213) #8
  %214 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %214) #8, !noalias !11
  %215 = extractelement <2 x i64> %211, i32 1
  %216 = trunc i64 %215 to i32
  %217 = sitofp i32 %216 to float
  %218 = bitcast %class.anon.13* %10 to %class.SkImage**
  %219 = load %class.SkImage*, %class.SkImage** %218, align 8, !noalias !11
  %220 = getelementptr inbounds %class.SkImage, %class.SkImage* %219, i64 0, i32 2, i32 1, i32 0
  %221 = load i32, i32* %220, align 4, !noalias !11
  %222 = sitofp i32 %221 to float
  %223 = fdiv float %217, %222
  %224 = lshr i64 %215, 32
  %225 = trunc i64 %224 to i32
  %226 = sitofp i32 %225 to float
  %227 = getelementptr inbounds %class.SkImage, %class.SkImage* %219, i64 0, i32 2, i32 1, i32 1
  %228 = load i32, i32* %227, align 4, !noalias !11
  %229 = sitofp i32 %228 to float
  %230 = fdiv float %226, %229
  %231 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %232 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %232, align 16, !alias.scope !14, !noalias !11
  %233 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %234 = bitcast float* %233 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %234, align 16, !alias.scope !14, !noalias !11
  %235 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %235, align 16, !alias.scope !14, !noalias !11
  store i32 16, i32* %231, align 4, !alias.scope !14, !noalias !11
  %236 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %6, float %223, float %230) #8, !noalias !11
  %237 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %238 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %238, align 16, !alias.scope !17
  %239 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %240 = bitcast float* %239 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %240, align 16, !alias.scope !17
  %241 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %241, align 16, !alias.scope !17
  store i32 16, i32* %237, align 4, !alias.scope !17
  %242 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %12, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkMatrix* dereferenceable(40) %56) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %214) #8, !noalias !11
  %243 = bitcast %class.SkMatrix* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %243, i8* nonnull align 16 %213, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %213) #8
  br label %245

244:                                              ; preds = %185
  store i32 1, i32* %37, align 4
  br label %245

245:                                              ; preds = %181, %207, %244, %182
  %246 = getelementptr inbounds %"struct.SkMipmap::Level", %"struct.SkMipmap::Level"* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %247 = load %class.SkColorSpace*, %class.SkColorSpace** %246, align 8
  %248 = icmp eq %class.SkColorSpace* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = atomicrmw add i32* %250, i32 -1 acq_rel
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %255

253:                                              ; preds = %249
  %254 = bitcast %class.SkColorSpace* %247 to i8*
  call void @_ZdlPv(i8* %254) #9
  br label %255

255:                                              ; preds = %245, %249, %253
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %135) #8
  br label %256

256:                                              ; preds = %133, %255, %85
  %257 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %257) #8
  %258 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %258) #8, !noalias !22
  %259 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %260 = load i32, i32* %259, align 4, !noalias !22
  %261 = sitofp i32 %260 to float
  %262 = bitcast %class.anon.13* %10 to %class.SkImage**
  %263 = load %class.SkImage*, %class.SkImage** %262, align 8, !noalias !22
  %264 = getelementptr inbounds %class.SkImage, %class.SkImage* %263, i64 0, i32 2, i32 1, i32 0
  %265 = load i32, i32* %264, align 4, !noalias !22
  %266 = sitofp i32 %265 to float
  %267 = fdiv float %261, %266
  %268 = getelementptr inbounds %class.SkMipmapAccessor, %class.SkMipmapAccessor* %0, i64 0, i32 0, i32 2, i32 1, i32 1
  %269 = load i32, i32* %268, align 4, !noalias !22
  %270 = sitofp i32 %269 to float
  %271 = getelementptr inbounds %class.SkImage, %class.SkImage* %263, i64 0, i32 2, i32 1, i32 1
  %272 = load i32, i32* %271, align 4, !noalias !22
  %273 = sitofp i32 %272 to float
  %274 = fdiv float %270, %273
  %275 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %276 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %276, align 16, !alias.scope !25, !noalias !22
  %277 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %278 = bitcast float* %277 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %278, align 16, !alias.scope !25, !noalias !22
  %279 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %279, align 16, !alias.scope !25, !noalias !22
  store i32 16, i32* %275, align 4, !alias.scope !25, !noalias !22
  %280 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %7, float %267, float %274) #8, !noalias !22
  %281 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %282 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %282, align 16, !alias.scope !28
  %283 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %284 = bitcast float* %283 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %284, align 16, !alias.scope !28
  %285 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %285, align 16, !alias.scope !28
  store i32 16, i32* %281, align 4, !alias.scope !28
  %286 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %13, %class.SkMatrix* nonnull dereferenceable(40) %7, %class.SkMatrix* dereferenceable(40) %56) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %258) #8, !noalias !22
  %287 = bitcast %class.SkMatrix* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %287, i8* nonnull align 16 %257, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %257) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %55) #8
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix*, %struct.SkSize*, %class.SkMatrix*) local_unnamed_addr #1

declare float @_ZN8SkMipmap12ComputeLevelE6SkSize(<2 x float>) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

declare zeroext i1 @_ZNK8SkMipmap8getLevelEiPNS_5LevelE(%class.SkMipmap*, i32, %"struct.SkMipmap::Level"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkMipmapAccessor* @_ZN16SkMipmapAccessor4MakeEP12SkArenaAllocPK7SkImageRK8SkMatrix12SkMipmapMode(%class.SkArenaAlloc*, %class.SkImage*, %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #4 align 2 {
  %5 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %6 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 241, i32 8) #8
  %7 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint i8* %6 to i64
  %11 = sub i64 %10, %9
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds i8, i8* %6, i64 232
  store i8* %13, i8** %7, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI16SkMipmapAccessorJPK12SkImage_BaseRK8SkMatrixR12SkMipmapModeEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSB_ENUlPcE_8__invokeESK_, i32 %12) #8
  %14 = bitcast i8* %6 to %class.SkMipmapAccessor*
  tail call void @_ZN16SkMipmapAccessorC2EPK12SkImage_BaseRK8SkMatrix12SkMipmapMode(%class.SkMipmapAccessor* %14, %class.SkImage_Base* %5, %class.SkMatrix* dereferenceable(40) %2, i32 %3) #8
  %15 = bitcast i8* %6 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = select i1 %17, %class.SkMipmapAccessor* null, %class.SkMipmapAccessor* %14
  ret %class.SkMipmapAccessor* %18
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #1

declare %class.SkMipmap* @_ZN13SkMipmapCache10FindAndRefERK17SkBitmapCacheDescP15SkResourceCache(%struct.SkBitmapCacheDesc* dereferenceable(20), %class.SkResourceCache*) local_unnamed_addr #1

declare void @_ZN17SkBitmapCacheDesc4MakeEPK7SkImage(%struct.SkBitmapCacheDesc* sret, %class.SkImage*) local_unnamed_addr #1

declare %class.SkMipmap* @_ZN13SkMipmapCache9AddAndRefEPK12SkImage_BaseP15SkResourceCache(%class.SkImage_Base*, %class.SkResourceCache*) local_unnamed_addr #1

declare void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #1

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI16SkMipmapAccessorJPK12SkImage_BaseRK8SkMatrixR12SkMipmapModeEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSB_ENUlPcE_8__invokeESK_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -241
  %3 = getelementptr inbounds i8, i8* %0, i64 -17
  %4 = bitcast i8* %3 to %class.SkMipmap**
  %5 = load %class.SkMipmap*, %class.SkMipmap** %4, align 8
  %6 = icmp eq %class.SkMipmap* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.SkMipmap* %5 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %8, i1 zeroext false) #8
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds i8, i8* %0, i64 -73
  %11 = bitcast i8* %10 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %11) #8
  %12 = getelementptr inbounds i8, i8* %0, i64 -185
  %13 = bitcast i8* %12 to %class.SkColorSpace**
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkColorSpace* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %20, %16, %9
  %23 = getelementptr inbounds i8, i8* %0, i64 -225
  %24 = bitcast i8* %23 to %class.SkColorSpace**
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = bitcast %class.SkColorSpace* %25 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %22, %27, %31
  ret i8* %2
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK12SkImage_Base7refMipsEv: argument 0"}
!4 = distinct !{!4, !"_ZNK12SkImage_Base7refMipsEv"}
!5 = distinct !{!5, !6, !"_ZL13try_load_mipsPK12SkImage_Base: argument 0"}
!6 = distinct !{!6, !"_ZL13try_load_mipsPK12SkImage_Base"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_Z9sk_ref_spI8SkMipmapE5sk_spIT_EPS2_: argument 0"}
!9 = distinct !{!9, !"_Z9sk_ref_spI8SkMipmapE5sk_spIT_EPS2_"}
!10 = !{!5}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZZN16SkMipmapAccessorC1EPK12SkImage_BaseRK8SkMatrix12SkMipmapModeENK3$_1clERK8SkPixmap: argument 0"}
!13 = distinct !{!13, !"_ZZN16SkMipmapAccessorC1EPK12SkImage_BaseRK8SkMatrix12SkMipmapModeENK3$_1clERK8SkPixmap"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!16 = distinct !{!16, !"_ZN8SkMatrix5ScaleEff"}
!17 = !{!18, !20, !12}
!18 = distinct !{!18, !19, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!19 = distinct !{!19, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!20 = distinct !{!20, !21, !"_ZmlRK8SkMatrixS1_: argument 0"}
!21 = distinct !{!21, !"_ZmlRK8SkMatrixS1_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZZN16SkMipmapAccessorC1EPK12SkImage_BaseRK8SkMatrix12SkMipmapModeENK3$_1clERK8SkPixmap: argument 0"}
!24 = distinct !{!24, !"_ZZN16SkMipmapAccessorC1EPK12SkImage_BaseRK8SkMatrix12SkMipmapModeENK3$_1clERK8SkPixmap"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!27 = distinct !{!27, !"_ZN8SkMatrix5ScaleEff"}
!28 = !{!29, !31, !23}
!29 = distinct !{!29, !30, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!30 = distinct !{!30, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!31 = distinct !{!31, !32, !"_ZmlRK8SkMatrixS1_: argument 0"}
!32 = distinct !{!32, !"_ZmlRK8SkMatrixS1_"}
