; ModuleID = '../../skia/ext/fontmgr_default_linux.cc'
source_filename = "../../skia/ext/fontmgr_default_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkFontConfigInterface* }
%class.SkFontConfigInterface = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia22CreateDefaultSkFontMgrEv(%class.sk_sp* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %class.sk_sp.1, align 8
  %3 = alloca %class.sk_sp.1, align 8
  %4 = bitcast %class.sk_sp.1* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #3
  %5 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  store %class.SkFontConfigInterface* inttoptr (i64 -6148914691236517206 to %class.SkFontConfigInterface*), %class.SkFontConfigInterface** %5, align 8
  call void @_ZN21SkFontConfigInterface9RefGlobalEv(%class.sk_sp.1* nonnull sret %2) #3
  %6 = load %class.SkFontConfigInterface*, %class.SkFontConfigInterface** %5, align 8
  %7 = icmp eq %class.SkFontConfigInterface* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %class.SkFontConfigInterface* %6 to i64
  store %class.SkFontConfigInterface* null, %class.SkFontConfigInterface** %5, align 8
  %10 = bitcast %class.sk_sp.1* %3 to i64*
  store i64 %9, i64* %10, align 8
  call void @_Z17SkFontMgr_New_FCI5sk_spI21SkFontConfigInterfaceE(%class.sk_sp* sret %0, %class.sk_sp.1* nonnull %3) #3
  %11 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  %12 = load %class.SkFontConfigInterface*, %class.SkFontConfigInterface** %11, align 8
  %13 = icmp eq %class.SkFontConfigInterface* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.SkFontConfigInterface, %class.SkFontConfigInterface* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = bitcast %class.SkFontConfigInterface* %12 to %class.SkRefCntBase*
  %20 = bitcast %class.SkFontConfigInterface* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  call void %23(%class.SkRefCntBase* nonnull %19) #3
  br label %26

24:                                               ; preds = %1
  %25 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkFontMgr* null, %class.SkFontMgr** %25, align 8
  br label %39

26:                                               ; preds = %18, %14, %8
  %27 = load %class.SkFontConfigInterface*, %class.SkFontConfigInterface** %5, align 8
  %28 = icmp eq %class.SkFontConfigInterface* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.SkFontConfigInterface, %class.SkFontConfigInterface* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkFontConfigInterface* %27 to %class.SkRefCntBase*
  %35 = bitcast %class.SkFontConfigInterface* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  call void %38(%class.SkRefCntBase* nonnull %34) #3
  br label %39

39:                                               ; preds = %24, %26, %29, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN21SkFontConfigInterface9RefGlobalEv(%class.sk_sp.1* sret) local_unnamed_addr #2

declare void @_Z17SkFontMgr_New_FCI5sk_spI21SkFontConfigInterfaceE(%class.sk_sp* sret, %class.sk_sp.1*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
