; ModuleID = '../../third_party/skia/modules/skottie/src/layers/shapelayer/MergePaths.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/layers/shapelayer/MergePaths.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.3 = type { %"class.sksg::Merge"* }
%"class.sksg::Merge" = type { %"class.sksg::GeometryNode.base", %"class.std::__1::vector.4", %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"*, %"class.std::__1::__compressed_pair.6" }
%"struct.sksg::Merge::Rec" = type <{ %class.sk_sp, i32, [4 x i8] }>
%class.sk_sp = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.sksg::Merge::Rec"* }
%class.SkPath = type <{ %class.sk_sp.11, i32, %"struct.std::__1::atomic.14", %"struct.std::__1::atomic.14", i8, i8 }>
%class.sk_sp.11 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.12, %class.SkTDArray.13, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.12 = type { i8*, i32, i32 }
%class.SkTDArray.13 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.19 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.19 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.20", [3 x i8] }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp*, %class.sk_sp*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp.24, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.26, %class.sk_sp.27, %class.sk_sp.28, %class.sk_sp.29, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector.30"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.41, %class.SkTHashMap.50 }
%class.sk_sp.24 = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.25 }
%class.sk_sp.25 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.26 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.27 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.28 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.29 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %class.sk_sp.32*, %class.sk_sp.32*, %"class.std::__1::__compressed_pair.33" }
%class.sk_sp.32 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.sk_sp.32* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.41 = type { %class.SkTHashTable.42 }
%class.SkTHashTable.42 = type { i32, i32, %class.SkAutoTArray.43 }
%class.SkAutoTArray.43 = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.50 = type { %class.SkTHashTable.51 }
%class.SkTHashTable.51 = type { i32, i32, %class.SkAutoTArray.52 }
%class.SkAutoTArray.52 = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4sksg5Merge3RecENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN4sksg5Merge3RecENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@_ZZN7skottie8internal12ShapeBuilder25AttachMergeGeometryEffectERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS9_9allocatorISE_EEEEE6gModes = internal unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 3, i32 2, i32 5], align 16
@.str = private unnamed_addr constant [3 x i8] c"mm\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder13MergeGeometryEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS2_9allocatorIS7_EEEENS5_5Merge4ModeE(%class.sk_sp.3* noalias nocapture sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = alloca %"struct.sksg::Merge::Rec", align 8
  %6 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %class.sk_sp** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  call void @_ZNSt3__16vectorIN4sksg5Merge3RecENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.4"* nonnull %4, i64 %16)
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %18 = load %class.sk_sp*, %class.sk_sp** %17, align 8
  %19 = load %class.sk_sp*, %class.sk_sp** %10, align 8
  %20 = icmp eq %class.sk_sp* %18, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %3
  %22 = bitcast %"struct.sksg::Merge::Rec"* %5 to i8*
  %23 = bitcast %"struct.sksg::Merge::Rec"* %5 to i64*
  %24 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %5, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %5, i64 0, i32 0, i32 0
  %26 = bitcast %"struct.sksg::Merge::Rec"** %8 to i64*
  br label %61

27:                                               ; preds = %92, %3
  %28 = call i8* @_Znwm(i64 88) #9, !noalias !2
  %29 = bitcast i8* %28 to %"class.sksg::Merge"*
  call void @_ZN4sksg5MergeC1EONSt3__16vectorINS0_3RecENS1_9allocatorIS3_EEEE(%"class.sksg::Merge"* nonnull %29, %"class.std::__1::vector.4"* nonnull dereferenceable(24) %4) #8, !noalias !2
  %30 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %28, i8** %30, align 8, !alias.scope !2
  %31 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %7, align 8
  %32 = icmp eq %"struct.sksg::Merge::Rec"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = bitcast %"struct.sksg::Merge::Rec"* %31 to i8*
  %35 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %8, align 8
  %36 = icmp eq %"struct.sksg::Merge::Rec"* %35, %31
  br i1 %36, label %58, label %37

37:                                               ; preds = %33, %53
  %38 = phi %"struct.sksg::Merge::Rec"* [ %39, %53 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %38, i64 -1
  %40 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %40, align 8
  %42 = icmp eq %"class.sksg::GeometryNode"* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %41, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %"class.sksg::GeometryNode"* %41 to %class.SkRefCntBase*
  %49 = bitcast %"class.sksg::GeometryNode"* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #8
  br label %53

53:                                               ; preds = %47, %43, %37
  %54 = icmp eq %"struct.sksg::Merge::Rec"* %39, %31
  br i1 %54, label %55, label %37

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::vector.4"* %4 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %33
  %59 = phi i8* [ %57, %55 ], [ %34, %33 ]
  store %"struct.sksg::Merge::Rec"* %31, %"struct.sksg::Merge::Rec"** %8, align 8
  call void @_ZdlPv(i8* %59) #9
  br label %60

60:                                               ; preds = %27, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret void

61:                                               ; preds = %21, %92
  %62 = phi %class.sk_sp* [ %18, %21 ], [ %93, %92 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %62, i64 0, i32 0
  %64 = bitcast %class.sk_sp* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %63, align 8
  store i64 %65, i64* %23, align 8
  %66 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %7, align 8
  %67 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %8, align 8
  %68 = icmp eq %"struct.sksg::Merge::Rec"* %66, %67
  %69 = select i1 %68, i32 0, i32 %2
  store i32 %69, i32* %24, align 8
  %70 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %9, align 8
  %71 = icmp ult %"struct.sksg::Merge::Rec"* %67, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %61
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %25, align 8
  %73 = bitcast %"struct.sksg::Merge::Rec"* %67 to i64*
  store i64 %65, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %67, i64 0, i32 1
  %75 = load i32, i32* %24, align 8
  store i32 %75, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %67, i64 1
  %77 = ptrtoint %"struct.sksg::Merge::Rec"* %76 to i64
  store i64 %77, i64* %26, align 8
  br label %79

78:                                               ; preds = %61
  call void @_ZNSt3__16vectorIN4sksg5Merge3RecENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.4"* nonnull %4, %"struct.sksg::Merge::Rec"* nonnull dereferenceable(16) %5) #8
  br label %79

79:                                               ; preds = %72, %78
  %80 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %25, align 8
  %81 = icmp eq %"class.sksg::GeometryNode"* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %"class.sksg::GeometryNode"* %80 to %class.SkRefCntBase*
  %88 = bitcast %"class.sksg::GeometryNode"* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #8
  br label %92

92:                                               ; preds = %79, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %62, i64 1
  %94 = icmp eq %class.sk_sp* %93, %19
  br i1 %94, label %27, label %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4sksg5Merge3RecENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.4"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.sksg::Merge::Rec"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.sksg::Merge::Rec"*
  br i1 %10, label %12, label %134

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.sksg::Merge::Rec"** %13 to i64*
  %15 = icmp ugt i64 %1, 1152921504606846975
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #10
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 4
  %21 = shl i64 %1, 4
  %22 = tail call i8* @_Znwm(i64 %21) #9
  %23 = bitcast i8* %22 to %"struct.sksg::Merge::Rec"*
  %24 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %23, i64 %20
  %25 = ptrtoint %"struct.sksg::Merge::Rec"* %24 to i64
  %26 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %23, i64 %1
  %27 = ptrtoint %"struct.sksg::Merge::Rec"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.sksg::Merge::Rec"*
  %29 = icmp eq %"struct.sksg::Merge::Rec"* %28, %11
  br i1 %29, label %106, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %28, i64 -1, i32 0, i32 0
  %32 = bitcast %"class.sksg::GeometryNode"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 4
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %55, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"struct.sksg::Merge::Rec"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"struct.sksg::Merge::Rec"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %53, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %41, i64 -1
  %45 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %42, i64 -1
  %46 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"struct.sksg::Merge::Rec"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %46, align 8
  %49 = bitcast %"struct.sksg::Merge::Rec"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %41, i64 -1, i32 1
  %51 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %42, i64 -1, i32 1
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %50, align 8
  %53 = add i64 %43, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %40, !llvm.loop !5

55:                                               ; preds = %40, %30
  %56 = phi %"struct.sksg::Merge::Rec"* [ undef, %30 ], [ %44, %40 ]
  %57 = phi %"struct.sksg::Merge::Rec"* [ %24, %30 ], [ %44, %40 ]
  %58 = phi %"struct.sksg::Merge::Rec"* [ %28, %30 ], [ %45, %40 ]
  %59 = icmp ult i8* %34, inttoptr (i64 48 to i8*)
  br i1 %59, label %100, label %60

60:                                               ; preds = %55, %60
  %61 = phi %"struct.sksg::Merge::Rec"* [ %90, %60 ], [ %57, %55 ]
  %62 = phi %"struct.sksg::Merge::Rec"* [ %91, %60 ], [ %58, %55 ]
  %63 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -1
  %64 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -1
  %65 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"struct.sksg::Merge::Rec"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %65, align 8
  %68 = bitcast %"struct.sksg::Merge::Rec"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -1, i32 1
  %70 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -1, i32 1
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %69, align 8
  %72 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -2
  %73 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -2
  %74 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %73, i64 0, i32 0, i32 0
  %75 = bitcast %"struct.sksg::Merge::Rec"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %74, align 8
  %77 = bitcast %"struct.sksg::Merge::Rec"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -2, i32 1
  %79 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -2, i32 1
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -3
  %82 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -3
  %83 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"struct.sksg::Merge::Rec"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %83, align 8
  %86 = bitcast %"struct.sksg::Merge::Rec"* %81 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -3, i32 1
  %88 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -3, i32 1
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -4
  %91 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -4
  %92 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %91, i64 0, i32 0, i32 0
  %93 = bitcast %"struct.sksg::Merge::Rec"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %92, align 8
  %95 = bitcast %"struct.sksg::Merge::Rec"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %61, i64 -4, i32 1
  %97 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %62, i64 -4, i32 1
  %98 = load i32, i32* %97, align 8
  store i32 %98, i32* %96, align 8
  %99 = icmp eq %"struct.sksg::Merge::Rec"* %91, %11
  br i1 %99, label %100, label %60

100:                                              ; preds = %60, %55
  %101 = phi %"struct.sksg::Merge::Rec"* [ %56, %55 ], [ %90, %60 ]
  %102 = ptrtoint %"struct.sksg::Merge::Rec"* %101 to i64
  %103 = load i64, i64* %6, align 8
  %104 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %13, align 8
  %105 = inttoptr i64 %103 to %"struct.sksg::Merge::Rec"*
  br label %106

106:                                              ; preds = %17, %100
  %107 = phi %"struct.sksg::Merge::Rec"* [ %105, %100 ], [ %28, %17 ]
  %108 = phi %"struct.sksg::Merge::Rec"* [ %104, %100 ], [ %11, %17 ]
  %109 = phi i64 [ %102, %100 ], [ %25, %17 ]
  %110 = phi i64 [ %103, %100 ], [ %18, %17 ]
  store i64 %109, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %111 = icmp eq %"struct.sksg::Merge::Rec"* %108, %107
  br i1 %111, label %130, label %112

112:                                              ; preds = %106, %128
  %113 = phi %"struct.sksg::Merge::Rec"* [ %114, %128 ], [ %108, %106 ]
  %114 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %113, i64 -1
  %115 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %115, align 8
  %117 = icmp eq %"class.sksg::GeometryNode"* %116, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %116, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = bitcast %"class.sksg::GeometryNode"* %116 to %class.SkRefCntBase*
  %124 = bitcast %"class.sksg::GeometryNode"* %116 to void (%class.SkRefCntBase*)***
  %125 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, i64 2
  %127 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, align 8
  tail call void %127(%class.SkRefCntBase* nonnull %123) #8
  br label %128

128:                                              ; preds = %122, %118, %112
  %129 = icmp eq %"struct.sksg::Merge::Rec"* %114, %107
  br i1 %129, label %130, label %112

130:                                              ; preds = %128, %106
  %131 = icmp eq i64 %110, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = inttoptr i64 %110 to i8*
  tail call void @_ZdlPv(i8* %133) #9
  br label %134

134:                                              ; preds = %132, %130, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder25AttachMergeGeometryEffectERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS9_9allocatorISE_EEEE(%"class.std::__1::vector"* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"* nocapture readnone, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp.3, align 8
  %8 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #8
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  store i64 -6148914691236517206, i64* %5, align 8
  %10 = call zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %8, i64* nonnull %5) #8
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %16

12:                                               ; preds = %4
  %13 = load i64, i64* %5, align 8
  %14 = add i64 %13, -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %15 = icmp ult i64 %14, 4
  br i1 %15, label %16, label %18

16:                                               ; preds = %11, %12
  %17 = phi i64 [ 0, %11 ], [ %14, %12 ]
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi i64 [ %17, %16 ], [ 4, %12 ]
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* @_ZZN7skottie8internal12ShapeBuilder25AttachMergeGeometryEffectERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS9_9allocatorISE_EEEEE6gModes, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #8
  %23 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  %24 = bitcast %class.sk_sp.3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN7skottie8internal12ShapeBuilder13MergeGeometryEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS2_9allocatorIS7_EEEENS5_5Merge4ModeE(%class.sk_sp.3* nonnull sret %7, %"class.std::__1::vector"* dereferenceable(24) %3, i32 %21)
  %25 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %7, i64 0, i32 0
  %26 = bitcast %class.sk_sp.3* %7 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.sksg::Merge"* null, %"class.sksg::Merge"** %25, align 8
  %28 = bitcast %class.sk_sp* %6 to i64*
  store i64 %27, i64* %28, align 8
  call void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* %0, %class.sk_sp* nonnull dereferenceable(8) %6) #8
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %30 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %29, align 8
  %31 = bitcast %"class.sksg::GeometryNode"* %30 to %class.SkRefCntBase*
  %32 = icmp eq %"class.sksg::GeometryNode"* %30, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = bitcast %"class.sksg::GeometryNode"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %31) #8
  br label %42

42:                                               ; preds = %18, %33, %37
  %43 = load %"class.sksg::Merge"*, %"class.sksg::Merge"** %25, align 8
  %44 = icmp eq %"class.sksg::Merge"* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %"class.sksg::Merge"* %43 to %class.SkRefCntBase*
  %51 = bitcast %"class.sksg::Merge"* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #8
  br label %55

55:                                               ; preds = %42, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  ret void
}

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4sksg5MergeC1EONSt3__16vectorINS0_3RecENS1_9allocatorIS3_EEEE(%"class.sksg::Merge"*, %"class.std::__1::vector.4"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4sksg5Merge3RecENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.4"*, %"struct.sksg::Merge::Rec"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.sksg::Merge::Rec"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.sksg::Merge::Rec"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #9
  %33 = bitcast i8* %32 to %"struct.sksg::Merge::Rec"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.sksg::Merge::Rec"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %36, i64 %35
  %39 = ptrtoint %"struct.sksg::Merge::Rec"* %38 to i64
  %40 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"struct.sksg::Merge::Rec"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %40, align 8
  %43 = bitcast %"struct.sksg::Merge::Rec"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %36, i64 %9, i32 1
  %45 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %1, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %37, i64 1
  %48 = ptrtoint %"struct.sksg::Merge::Rec"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %50 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %49, align 8
  %51 = ptrtoint %"struct.sksg::Merge::Rec"* %50 to i64
  %52 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %3, align 8
  %53 = icmp eq %"struct.sksg::Merge::Rec"* %52, %50
  br i1 %53, label %126, label %54

54:                                               ; preds = %34
  %55 = getelementptr %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %52, i64 -1, i32 0, i32 0
  %56 = ptrtoint %"class.sksg::GeometryNode"** %55 to i64
  %57 = sub i64 %56, %51
  %58 = lshr i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %77, label %62

62:                                               ; preds = %54, %62
  %63 = phi %"struct.sksg::Merge::Rec"* [ %66, %62 ], [ %37, %54 ]
  %64 = phi %"struct.sksg::Merge::Rec"* [ %67, %62 ], [ %52, %54 ]
  %65 = phi i64 [ %75, %62 ], [ %60, %54 ]
  %66 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %63, i64 -1
  %67 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %64, i64 -1
  %68 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %67, i64 0, i32 0, i32 0
  %69 = bitcast %"struct.sksg::Merge::Rec"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %68, align 8
  %71 = bitcast %"struct.sksg::Merge::Rec"* %66 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %63, i64 -1, i32 1
  %73 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %64, i64 -1, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = add i64 %65, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %62, !llvm.loop !7

77:                                               ; preds = %62, %54
  %78 = phi %"struct.sksg::Merge::Rec"* [ undef, %54 ], [ %66, %62 ]
  %79 = phi %"struct.sksg::Merge::Rec"* [ %37, %54 ], [ %66, %62 ]
  %80 = phi %"struct.sksg::Merge::Rec"* [ %52, %54 ], [ %67, %62 ]
  %81 = icmp ult i64 %57, 48
  br i1 %81, label %122, label %82

82:                                               ; preds = %77, %82
  %83 = phi %"struct.sksg::Merge::Rec"* [ %112, %82 ], [ %79, %77 ]
  %84 = phi %"struct.sksg::Merge::Rec"* [ %113, %82 ], [ %80, %77 ]
  %85 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -1
  %86 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -1
  %87 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"struct.sksg::Merge::Rec"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %87, align 8
  %90 = bitcast %"struct.sksg::Merge::Rec"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -1, i32 1
  %92 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -1, i32 1
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %91, align 8
  %94 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -2
  %95 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -2
  %96 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %95, i64 0, i32 0, i32 0
  %97 = bitcast %"struct.sksg::Merge::Rec"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %96, align 8
  %99 = bitcast %"struct.sksg::Merge::Rec"* %94 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -2, i32 1
  %101 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -2, i32 1
  %102 = load i32, i32* %101, align 8
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -3
  %104 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -3
  %105 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"struct.sksg::Merge::Rec"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %105, align 8
  %108 = bitcast %"struct.sksg::Merge::Rec"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -3, i32 1
  %110 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -3, i32 1
  %111 = load i32, i32* %110, align 8
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -4
  %113 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -4
  %114 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %113, i64 0, i32 0, i32 0
  %115 = bitcast %"struct.sksg::Merge::Rec"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %114, align 8
  %117 = bitcast %"struct.sksg::Merge::Rec"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %83, i64 -4, i32 1
  %119 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %84, i64 -4, i32 1
  %120 = load i32, i32* %119, align 8
  store i32 %120, i32* %118, align 8
  %121 = icmp eq %"struct.sksg::Merge::Rec"* %113, %50
  br i1 %121, label %122, label %82

122:                                              ; preds = %82, %77
  %123 = phi %"struct.sksg::Merge::Rec"* [ %78, %77 ], [ %112, %82 ]
  %124 = load i64, i64* %6, align 8
  %125 = load %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"** %3, align 8
  br label %126

126:                                              ; preds = %34, %122
  %127 = phi %"struct.sksg::Merge::Rec"* [ %125, %122 ], [ %50, %34 ]
  %128 = phi %"struct.sksg::Merge::Rec"* [ %123, %122 ], [ %37, %34 ]
  %129 = phi i64 [ %124, %122 ], [ %51, %34 ]
  %130 = ptrtoint %"struct.sksg::Merge::Rec"* %128 to i64
  store i64 %130, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %131 = inttoptr i64 %129 to %"struct.sksg::Merge::Rec"*
  %132 = icmp eq %"struct.sksg::Merge::Rec"* %127, %131
  br i1 %132, label %151, label %133

133:                                              ; preds = %126, %149
  %134 = phi %"struct.sksg::Merge::Rec"* [ %135, %149 ], [ %127, %126 ]
  %135 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %134, i64 -1
  %136 = getelementptr inbounds %"struct.sksg::Merge::Rec", %"struct.sksg::Merge::Rec"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %136, align 8
  %138 = icmp eq %"class.sksg::GeometryNode"* %137, null
  br i1 %138, label %149, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %137, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %149

143:                                              ; preds = %139
  %144 = bitcast %"class.sksg::GeometryNode"* %137 to %class.SkRefCntBase*
  %145 = bitcast %"class.sksg::GeometryNode"* %137 to void (%class.SkRefCntBase*)***
  %146 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %145, align 8
  %147 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, i64 2
  %148 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %147, align 8
  tail call void %148(%class.SkRefCntBase* nonnull %144) #8
  br label %149

149:                                              ; preds = %143, %139, %133
  %150 = icmp eq %"struct.sksg::Merge::Rec"* %135, %131
  br i1 %150, label %151, label %133

151:                                              ; preds = %149, %126
  %152 = icmp eq i64 %129, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = inttoptr i64 %129 to i8*
  tail call void @_ZdlPv(i8* %154) #9
  br label %155

155:                                              ; preds = %151, %153
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #9
  %33 = bitcast i8* %32 to %class.sk_sp*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %35
  %39 = ptrtoint %class.sk_sp* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %40, align 8
  %43 = bitcast %class.sk_sp* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %37, i64 1
  %45 = ptrtoint %class.sk_sp* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp*, %class.sk_sp** %46, align 8
  %48 = ptrtoint %class.sk_sp* %47 to i64
  %49 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %50 = icmp eq %class.sk_sp* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp, %class.sk_sp* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.sksg::GeometryNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %65, align 8
  %68 = bitcast %class.sk_sp* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !8

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %81, align 8
  %84 = bitcast %class.sk_sp* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %87, align 8
  %90 = bitcast %class.sk_sp* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %93, align 8
  %96 = bitcast %class.sk_sp* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %99, align 8
  %102 = bitcast %class.sk_sp* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %105, align 8
  %108 = bitcast %class.sk_sp* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %111, align 8
  %114 = bitcast %class.sk_sp* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %117, align 8
  %120 = bitcast %class.sk_sp* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %123, align 8
  %126 = bitcast %class.sk_sp* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp*
  %138 = icmp eq %class.sk_sp* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %141, i64 0, i32 0
  %143 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %142, align 8
  %144 = icmp eq %"class.sksg::GeometryNode"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.sksg::GeometryNode"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.sksg::GeometryNode"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #8
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #9
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4sksg5Merge4MakeEONSt3__16vectorINS0_3RecENS1_9allocatorIS3_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN4sksg5Merge4MakeEONSt3__16vectorINS0_3RecENS1_9allocatorIS3_EEEE"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
