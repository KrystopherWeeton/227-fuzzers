; ModuleID = '../../ui/gfx/x/xproto_internal.cc'
source_filename = "../../ui/gfx/x/xproto_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.x11::MallocedRefCountedMemory" = type { %"class.base::RefCountedMemory.base", i8* }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.x11::OffsetRefCountedMemory" = type { %"class.base::RefCountedMemory.base", %class.scoped_refptr, i64, i64 }
%class.scoped_refptr = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.x11::UnretainedRefCountedMemory" = type { %"class.base::RefCountedMemory.base", i8* }

@_ZTVN3x1124MallocedRefCountedMemoryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.x11::MallocedRefCountedMemory"*)* @_ZNK3x1124MallocedRefCountedMemory5frontEv to i8*), i8* bitcast (i64 (%"class.x11::MallocedRefCountedMemory"*)* @_ZNK3x1124MallocedRefCountedMemory4sizeEv to i8*), i8* bitcast (void (%"class.x11::MallocedRefCountedMemory"*)* @_ZN3x1124MallocedRefCountedMemoryD2Ev to i8*), i8* bitcast (void (%"class.x11::MallocedRefCountedMemory"*)* @_ZN3x1124MallocedRefCountedMemoryD0Ev to i8*)] }, align 8
@_ZTVN3x1122OffsetRefCountedMemoryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.x11::OffsetRefCountedMemory"*)* @_ZNK3x1122OffsetRefCountedMemory5frontEv to i8*), i8* bitcast (i64 (%"class.x11::OffsetRefCountedMemory"*)* @_ZNK3x1122OffsetRefCountedMemory4sizeEv to i8*), i8* bitcast (void (%"class.x11::OffsetRefCountedMemory"*)* @_ZN3x1122OffsetRefCountedMemoryD2Ev to i8*), i8* bitcast (void (%"class.x11::OffsetRefCountedMemory"*)* @_ZN3x1122OffsetRefCountedMemoryD0Ev to i8*)] }, align 8
@_ZTVN3x1126UnretainedRefCountedMemoryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.x11::UnretainedRefCountedMemory"*)* @_ZNK3x1126UnretainedRefCountedMemory5frontEv to i8*), i8* bitcast (i64 (%"class.x11::UnretainedRefCountedMemory"*)* @_ZNK3x1126UnretainedRefCountedMemory4sizeEv to i8*), i8* bitcast (void (%"class.x11::UnretainedRefCountedMemory"*)* @_ZN3x1126UnretainedRefCountedMemoryD2Ev to i8*), i8* bitcast (void (%"class.x11::UnretainedRefCountedMemory"*)* @_ZN3x1126UnretainedRefCountedMemoryD0Ev to i8*)] }, align 8

@_ZN3x1124MallocedRefCountedMemoryC1EPv = hidden unnamed_addr alias void (%"class.x11::MallocedRefCountedMemory"*, i8*), void (%"class.x11::MallocedRefCountedMemory"*, i8*)* @_ZN3x1124MallocedRefCountedMemoryC2EPv
@_ZN3x1124MallocedRefCountedMemoryD1Ev = hidden unnamed_addr alias void (%"class.x11::MallocedRefCountedMemory"*), void (%"class.x11::MallocedRefCountedMemory"*)* @_ZN3x1124MallocedRefCountedMemoryD2Ev
@_ZN3x1122OffsetRefCountedMemoryC1E13scoped_refptrIN4base16RefCountedMemoryEEmm = hidden unnamed_addr alias void (%"class.x11::OffsetRefCountedMemory"*, %"class.base::RefCountedMemory"*, i64, i64), void (%"class.x11::OffsetRefCountedMemory"*, %"class.base::RefCountedMemory"*, i64, i64)* @_ZN3x1122OffsetRefCountedMemoryC2E13scoped_refptrIN4base16RefCountedMemoryEEmm
@_ZN3x1122OffsetRefCountedMemoryD1Ev = hidden unnamed_addr alias void (%"class.x11::OffsetRefCountedMemory"*), void (%"class.x11::OffsetRefCountedMemory"*)* @_ZN3x1122OffsetRefCountedMemoryD2Ev
@_ZN3x1126UnretainedRefCountedMemoryC1EPKv = hidden unnamed_addr alias void (%"class.x11::UnretainedRefCountedMemory"*, i8*), void (%"class.x11::UnretainedRefCountedMemory"*, i8*)* @_ZN3x1126UnretainedRefCountedMemoryC2EPKv
@_ZN3x1126UnretainedRefCountedMemoryD1Ev = hidden unnamed_addr alias void (%"class.x11::UnretainedRefCountedMemory"*), void (%"class.x11::UnretainedRefCountedMemory"*)* @_ZN3x1126UnretainedRefCountedMemoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1124MallocedRefCountedMemoryC2EPv(%"class.x11::MallocedRefCountedMemory"*, i8*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.x11::MallocedRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryC2Ev(%"class.base::RefCountedMemory"* %3) #6
  %4 = getelementptr inbounds %"class.x11::MallocedRefCountedMemory", %"class.x11::MallocedRefCountedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3x1124MallocedRefCountedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.x11::MallocedRefCountedMemory", %"class.x11::MallocedRefCountedMemory"* %0, i64 0, i32 1
  store i8* %1, i8** %5, align 8
  ret void
}

declare void @_ZN4base16RefCountedMemoryC2Ev(%"class.base::RefCountedMemory"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK3x1124MallocedRefCountedMemory5frontEv(%"class.x11::MallocedRefCountedMemory"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.x11::MallocedRefCountedMemory", %"class.x11::MallocedRefCountedMemory"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3x1124MallocedRefCountedMemory4sizeEv(%"class.x11::MallocedRefCountedMemory"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1124MallocedRefCountedMemoryD2Ev(%"class.x11::MallocedRefCountedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::MallocedRefCountedMemory", %"class.x11::MallocedRefCountedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3x1124MallocedRefCountedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::MallocedRefCountedMemory", %"class.x11::MallocedRefCountedMemory"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  tail call void @free(i8* %4) #6
  %5 = bitcast %"class.x11::MallocedRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryD2Ev(%"class.base::RefCountedMemory"* %5) #6
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base16RefCountedMemoryD2Ev(%"class.base::RefCountedMemory"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1124MallocedRefCountedMemoryD0Ev(%"class.x11::MallocedRefCountedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::MallocedRefCountedMemory", %"class.x11::MallocedRefCountedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3x1124MallocedRefCountedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::MallocedRefCountedMemory", %"class.x11::MallocedRefCountedMemory"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  tail call void @free(i8* %4) #6
  %5 = bitcast %"class.x11::MallocedRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryD2Ev(%"class.base::RefCountedMemory"* %5) #6
  %6 = bitcast %"class.x11::MallocedRefCountedMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1122OffsetRefCountedMemoryC2E13scoped_refptrIN4base16RefCountedMemoryEEmm(%"class.x11::OffsetRefCountedMemory"*, %"class.base::RefCountedMemory"*, i64, i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.x11::OffsetRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryC2Ev(%"class.base::RefCountedMemory"* %5) #6
  %6 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3x1122OffsetRefCountedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 1, i32 0
  store %"class.base::RefCountedMemory"* %1, %"class.base::RefCountedMemory"** %7, align 8
  %8 = icmp eq %"class.base::RefCountedMemory"* %1, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 2
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 3
  store i64 %3, i64* %11, align 8
  br label %28

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 2
  store i64 %2, i64* %15, align 8
  %16 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 3
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::RefCountedMemory"*
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %22 to void (%"class.base::RefCountedMemory"*)***
  %25 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %25, i64 3
  %27 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %26, align 8
  tail call void %27(%"class.base::RefCountedMemory"* nonnull %23) #6
  br label %28

28:                                               ; preds = %9, %12, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK3x1122OffsetRefCountedMemory5frontEv(%"class.x11::OffsetRefCountedMemory"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %2, align 8
  %4 = bitcast %"class.base::RefCountedMemory"* %3 to i8* (%"class.base::RefCountedMemory"*)***
  %5 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %4, align 8
  %6 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %5, align 8
  %7 = tail call i8* %6(%"class.base::RefCountedMemory"* %3) #6
  %8 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  ret i8* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3x1122OffsetRefCountedMemory4sizeEv(%"class.x11::OffsetRefCountedMemory"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1122OffsetRefCountedMemoryD2Ev(%"class.x11::OffsetRefCountedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3x1122OffsetRefCountedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedMemory"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::RefCountedMemory"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.base::RefCountedMemory"*)***
  %15 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %15, i64 3
  %17 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %16, align 8
  tail call void %17(%"class.base::RefCountedMemory"* nonnull %13) #6
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.x11::OffsetRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryD2Ev(%"class.base::RefCountedMemory"* %19) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1122OffsetRefCountedMemoryD0Ev(%"class.x11::OffsetRefCountedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3x1122OffsetRefCountedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.x11::OffsetRefCountedMemory", %"class.x11::OffsetRefCountedMemory"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedMemory"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::RefCountedMemory"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.base::RefCountedMemory"*)***
  %15 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %15, i64 3
  %17 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %16, align 8
  tail call void %17(%"class.base::RefCountedMemory"* nonnull %13) #6
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.x11::OffsetRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryD2Ev(%"class.base::RefCountedMemory"* %19) #6
  %20 = bitcast %"class.x11::OffsetRefCountedMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1126UnretainedRefCountedMemoryC2EPKv(%"class.x11::UnretainedRefCountedMemory"*, i8*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.x11::UnretainedRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryC2Ev(%"class.base::RefCountedMemory"* %3) #6
  %4 = getelementptr inbounds %"class.x11::UnretainedRefCountedMemory", %"class.x11::UnretainedRefCountedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3x1126UnretainedRefCountedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.x11::UnretainedRefCountedMemory", %"class.x11::UnretainedRefCountedMemory"* %0, i64 0, i32 1
  store i8* %1, i8** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK3x1126UnretainedRefCountedMemory5frontEv(%"class.x11::UnretainedRefCountedMemory"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.x11::UnretainedRefCountedMemory", %"class.x11::UnretainedRefCountedMemory"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3x1126UnretainedRefCountedMemory4sizeEv(%"class.x11::UnretainedRefCountedMemory"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1126UnretainedRefCountedMemoryD2Ev(%"class.x11::UnretainedRefCountedMemory"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.x11::UnretainedRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryD2Ev(%"class.base::RefCountedMemory"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1126UnretainedRefCountedMemoryD0Ev(%"class.x11::UnretainedRefCountedMemory"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.x11::UnretainedRefCountedMemory"* %0 to %"class.base::RefCountedMemory"*
  tail call void @_ZN4base16RefCountedMemoryD2Ev(%"class.base::RefCountedMemory"* %2) #6
  %3 = bitcast %"class.x11::UnretainedRefCountedMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
