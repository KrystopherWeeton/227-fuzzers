; ModuleID = '../../third_party/blink/renderer/core/css/resolver/cascade_expansion.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/cascade_expansion.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.75" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i32 }
%"class.blink::CascadeExpansion" = type { %"class.blink::Document"*, i32, %"struct.blink::MatchedProperties"*, %"class.blink::CascadePriority", i64, i64, %"class.blink::CascadeFilter", i64, i32, %"class.blink::CSSProperty"*, %"class.blink::CustomProperty" }
%"class.blink::CascadePriority" = type { i64 }
%"class.blink::CascadeFilter" = type { i32, i32 }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::CustomProperty" = type { %"class.blink::Variable.base", %"class.WTF::AtomicString", %"class.blink::Member.519" }
%"class.blink::Variable.base" = type { %"class.blink::Longhand.base" }
%"class.blink::Longhand.base" = type { %"class.blink::CSSProperty.base" }
%"class.blink::CSSProperty.base" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8 }>
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.528", %class.scoped_refptr.532, %"class.WTF::Vector.545", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.523" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr.532 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.533", %"class.WTF::Vector.535", %"class.WTF::Vector.540", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.533" = type { %"class.base::RefCounted.534" }
%"class.base::RefCounted.534" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { %"class.std::__1::unique_ptr.548"*, i32, i32 }
%"class.std::__1::unique_ptr.548" = type opaque
%"struct.blink::MatchedProperties" = type <{ %"class.blink::Member.30", %"struct.blink::MatchedProperties::Data", [4 x i8] }>
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"struct.blink::MatchedProperties::Data" = type { i8, i8, i16 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.71", %"class.WTF::Vector.71", i8, i32, %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", %"class.blink::Member.92", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.95", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.106", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.315", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.324", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.331", i16, i8, %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::TextLinkColors", %"class.blink::Member.346", i8, [7 x i8], %"class.blink::HeapHashMap.348", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.355", %"class.blink::Member.360", %"class.blink::Member.362", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.364", %"class.blink::HeapVector.366", %"class.std::__1::unique_ptr.374", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.380", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.393", %"class.WTF::Vector.395", i8, i8, %"class.std::__1::unique_ptr.400", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.406", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.414", i8, i32, %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.422", %"class.WTF::HashMap.424", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.437", i8, i32, %"class.blink::Member.444", %"class.blink::Member.446", i32, %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.std::__1::unique_ptr.454", i64, %"class.std::__1::unique_ptr.460", i32, i32, %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.472", %"class.WTF::Vector.474", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.479", %"class.blink::Member.486", %"class.std::__1::unique_ptr.488", %"class.blink::Member.494", i8, i8, %"class.WTF::String", %"class.blink::Member.496", i8, [7 x i8], %"class.blink::HeapHashMap.498", %"class.blink::HeapObserverSet", %"class.blink::Member.512", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.514", i32, i8, i8, %"class.blink::WeakMember.516", %"class.blink::Member.517" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.64" }
%"class.blink::HeapHashMap.64" = type { %"class.WTF::HashMap.67" }
%"class.WTF::HashMap.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"struct.WTF::KeyValuePair.70"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.70" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.75" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.567", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.608", i32, i8, [3 x i8], %"class.blink::HeapVector.610", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.618", %"class.blink::Member.620", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.629", %"class.blink::Member.635", %"class.blink::Member.637", i8, [7 x i8] }>
%"class.blink::Supplementable.567" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.568" }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.583" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.575" }
%"class.blink::HeapObserverSet.575" = type { i32, [4 x i8], %"class.blink::HeapHashSet.576" }
%"class.blink::HeapHashSet.576" = type { %"class.WTF::HashSet.579" }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"class.blink::WeakMember.582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.582" = type opaque
%"class.blink::Supplementable.583" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.584" }
%"class.blink::HeapHashMap.584" = type { %"class.WTF::HashMap.587" }
%"class.WTF::HashMap.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"struct.WTF::KeyValuePair.590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.590" = type { i8*, %"class.blink::Member.639" }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.641" }
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.591, %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.598", %"class.std::__1::unique_ptr.598", %"class.blink::Member.84", i32, [4 x i8], %"class.WTF::HashSet.604", i32, i32 }
%class.scoped_refptr.591 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.604" = type { %"class.WTF::HashTable.605" }
%"class.WTF::HashTable.605" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.610" = type { %"class.WTF::Vector.613" }
%"class.WTF::Vector.613" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { %"class.blink::Member.616"*, i32, i32 }
%"class.blink::Member.616" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.622", i32, i32 }
%"class.blink::HeapHashMap.622" = type { %"class.WTF::HashMap.625" }
%"class.WTF::HashMap.625" = type { %"class.WTF::HashTable.626" }
%"class.WTF::HashTable.626" = type <{ %"struct.WTF::KeyValuePair.628"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.628" = type opaque
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.110", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.110" = type { %"class.base::RefCounted.111" }
%"class.base::RefCounted.111" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.114" }
%"class.blink::HeapHashMap.114" = type { %"class.WTF::HashMap.117" }
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.122", i32, [4 x i8], %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.299", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.238", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i64 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.232", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { i64 }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { float }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.241", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.280" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.169"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.176"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.562" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.298 }
%class.scoped_refptr.298 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__cxx_atomic_impl.301" }
%"struct.std::__1::__cxx_atomic_impl.301" = type { %"struct.std::__1::__cxx_atomic_base_impl.302" }
%"struct.std::__1::__cxx_atomic_base_impl.302" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.317" }
%"class.blink::HeapHashMap.317" = type { %"class.WTF::HashMap.320" }
%"class.WTF::HashMap.320" = type { %"class.WTF::HashTable.321" }
%"class.WTF::HashTable.321" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"class.blink::WeakMember.330"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.330" = type opaque
%"class.blink::HeapHashSet.331" = type { %"class.WTF::HashSet.334" }
%"class.WTF::HashSet.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"class.blink::WeakMember.337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.337" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.348" = type { %"class.WTF::HashMap.351" }
%"class.WTF::HashMap.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.366" = type { %"class.WTF::Vector.369" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"class.blink::Member.372"*, i32, i32 }
%"class.blink::Member.372" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.380" = type { %"class.WTF::HashSet.383" }
%"class.WTF::HashSet.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"class.blink::WeakMember.386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.386" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.387", i32, [4 x i8] }>
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"struct.std::__1::pair.390"*, i32, i32 }
%"struct.std::__1::pair.390" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.412"*, i32, i32 }
%"class.blink::Member.412" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"struct.WTF::KeyValuePair.428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.428" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.314", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.305, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.305 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.306" }>
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.307 }
%class.scoped_refptr.307 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.308", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.308" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.309" }
%"struct.std::__1::atomic.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.blink::WeakMember.314" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.437" = type { %"class.WTF::HashSet.440" }
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"class.blink::Member.443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.443" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.479" = type { %"class.WTF::HashMap.482" }
%"class.WTF::HashMap.482" = type { %"class.WTF::HashTable.483" }
%"class.WTF::HashTable.483" = type <{ %"struct.WTF::KeyValuePair.485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.485" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.498" = type { %"class.WTF::HashMap.501" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.505" }
%"class.blink::HeapHashSet.505" = type { %"class.WTF::HashSet.508" }
%"class.WTF::HashSet.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"class.blink::WeakMember.511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.511" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.553", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.560", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.553" = type { %"class.WTF::HashSet.556" }
%"class.WTF::HashSet.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"class.blink::Member.559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.559" = type opaque
%"class.blink::HeapTaskRunnerTimer.560" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.561", { i64, i64 } }
%"class.blink::WeakMember.561" = type { %"class.blink::MemberBase.515" }
%"class.blink::WeakMember.516" = type { %"class.blink::MemberBase" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.651" = type { %"class.WTF::VectorBuffer.652" }
%"class.WTF::VectorBuffer.652" = type { %"class.WTF::VectorBufferBase.653", [96 x i8] }
%"class.WTF::VectorBufferBase.653" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.528" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::LayoutObject" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.962 }
%union.anon.962 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink21CSSUnresolvedProperty8ExposureEv = comdat any

$_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE = comdat any

$_ZNK5blink11CSSProperty18IsResolvedPropertyEv = comdat any

$_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv = comdat any

$_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv = comdat any

$_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE = comdat any

$_ZNK5blink11CSSProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb = comdat any

$_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE = comdat any

$_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE = comdat any

$_ZNK5blink11CSSProperty18GetVisitedPropertyEv = comdat any

$_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv = comdat any

$_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE = comdat any

$_ZNK5blink21CSSUnresolvedProperty15GetPropertyNameEv = comdat any

$_ZNK5blink21CSSUnresolvedProperty27GetPropertyNameAtomicStringEv = comdat any

$_ZNK5blink11CSSProperty18GetCSSPropertyNameEv = comdat any

$_ZNK5blink11CSSProperty15IsAffectedByAllEv = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZTVN5blink11CSSPropertyE = comdat any

@_ZTVN5blink14CustomPropertyE = external unnamed_addr constant { [25 x i8*] }, align 8
@_ZTVN5blink11CSSPropertyE = linkonce_odr hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty8ExposureEv to i8*), i8* bitcast (i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty18IsResolvedPropertyEv to i8*), i8* bitcast (i8* (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty15GetPropertyNameEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty27GetPropertyNameAtomicStringEv to i8*), i8* bitcast (i8* (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv to i8*), i8* bitcast ({ i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty18GetCSSPropertyNameEv to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty15IsAffectedByAllEv to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink11CSSProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)* @_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*, i32)* @_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty18GetVisitedPropertyEv to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)* @_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE to i8*)] }, comdat, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink16CascadeExpansionC1ERKNS_17MatchedPropertiesERKNS_8DocumentENS_13CascadeFilterEm = hidden unnamed_addr alias void (%"class.blink::CascadeExpansion"*, %"struct.blink::MatchedProperties"*, %"class.blink::Document"*, i64, i64), void (%"class.blink::CascadeExpansion"*, %"struct.blink::MatchedProperties"*, %"class.blink::Document"*, i64, i64)* @_ZN5blink16CascadeExpansionC2ERKNS_17MatchedPropertiesERKNS_8DocumentENS_13CascadeFilterEm
@_ZN5blink16CascadeExpansionC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::CascadeExpansion"*, %"class.blink::CascadeExpansion"*), void (%"class.blink::CascadeExpansion"*, %"class.blink::CascadeExpansion"*)* @_ZN5blink16CascadeExpansionC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CascadeExpansionC2ERKNS_17MatchedPropertiesERKNS_8DocumentENS_13CascadeFilterEm(%"class.blink::CascadeExpansion"*, %"struct.blink::MatchedProperties"* dereferenceable(16), %"class.blink::Document"* dereferenceable(2848), i64, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 0
  store %"class.blink::Document"* %2, %"class.blink::Document"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 2
  store %"struct.blink::MatchedProperties"* %1, %"struct.blink::MatchedProperties"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 4
  %12 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %12, align 8
  %13 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %14, align 8
  %16 = icmp eq %"class.blink::CSSPropertyValueSet"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %5
  %18 = load i32, i32* null, align 536870912
  br label %26

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %15, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %15, i64 7, i32 0
  %25 = load i32, i32* %24, align 4
  br label %29

26:                                               ; preds = %19, %17
  %27 = phi i32 [ %18, %17 ], [ %21, %19 ]
  %28 = and i32 %27, 268435455
  br label %29

29:                                               ; preds = %23, %26
  %30 = phi i32 [ %28, %26 ], [ %25, %23 ]
  %31 = zext i32 %30 to i64
  store i64 %31, i64* %13, align 8
  %32 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 6
  %33 = lshr i64 %3, 32
  %34 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %1, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 8
  %36 = lshr i8 %35, 2
  %37 = and i8 %36, 7
  %38 = zext i8 %37 to i32
  switch i32 %38, label %74 [
    i32 0, label %75
    i32 1, label %39
    i32 2, label %46
    i32 3, label %53
    i32 4, label %60
    i32 5, label %67
  ]

39:                                               ; preds = %29
  %40 = or i64 %3, 4294965247
  %41 = and i64 %40, %33
  %42 = shl nuw i64 %41, 32
  %43 = and i64 %3, 4294965247
  %44 = or i64 %43, %42
  %45 = or i64 %44, 2048
  br label %75

46:                                               ; preds = %29
  %47 = or i64 %3, 4294966271
  %48 = and i64 %47, %33
  %49 = shl nuw i64 %48, 32
  %50 = and i64 %3, 4294966271
  %51 = or i64 %50, %49
  %52 = or i64 %51, 1024
  br label %75

53:                                               ; preds = %29
  %54 = or i64 %3, 4293918719
  %55 = and i64 %54, %33
  %56 = shl nuw i64 %55, 32
  %57 = and i64 %3, 4293918719
  %58 = or i64 %57, %56
  %59 = or i64 %58, 1048576
  br label %75

60:                                               ; preds = %29
  %61 = or i64 %3, 4294963199
  %62 = and i64 %61, %33
  %63 = shl nuw i64 %62, 32
  %64 = and i64 %3, 4294963199
  %65 = or i64 %64, %63
  %66 = or i64 %65, 4096
  br label %75

67:                                               ; preds = %29
  %68 = or i64 %3, 4294705151
  %69 = and i64 %68, %33
  %70 = shl nuw i64 %69, 32
  %71 = and i64 %3, 4294705151
  %72 = or i64 %71, %70
  %73 = or i64 %72, 262144
  br label %75

74:                                               ; preds = %29
  unreachable

75:                                               ; preds = %67, %60, %53, %46, %39, %29
  %76 = phi i64 [ %73, %67 ], [ %66, %60 ], [ %59, %53 ], [ %52, %46 ], [ %45, %39 ], [ %3, %29 ]
  %77 = lshr i64 %76, 32
  %78 = and i8 %35, 3
  %79 = zext i8 %78 to i32
  switch i32 %79, label %95 [
    i32 2, label %80
    i32 1, label %87
    i32 3, label %103
  ]

80:                                               ; preds = %75
  %81 = or i64 %76, 4294967167
  %82 = and i64 %81, %77
  %83 = shl nuw i64 %82, 32
  %84 = and i64 %76, 4294967167
  %85 = or i64 %84, %83
  %86 = or i64 %85, 128
  br label %103

87:                                               ; preds = %75
  %88 = and i64 %76, 128
  %89 = xor i64 %88, 128
  %90 = or i64 %89, %77
  %91 = shl nuw i64 %90, 32
  %92 = and i64 %76, 4294967167
  %93 = or i64 %92, %91
  %94 = or i64 %93, 128
  br label %103

95:                                               ; preds = %75
  %96 = and i64 %76, 8
  %97 = xor i64 %96, 8
  %98 = or i64 %97, %77
  %99 = shl nuw i64 %98, 32
  %100 = and i64 %76, 4294967287
  %101 = or i64 %100, %99
  %102 = or i64 %101, 8
  br label %103

103:                                              ; preds = %75, %80, %87, %95
  %104 = phi i64 [ %102, %95 ], [ %94, %87 ], [ %86, %80 ], [ %76, %75 ]
  %105 = bitcast %"class.blink::CascadeFilter"* %32 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 7
  store i64 %4, i64* %106, align 8
  %107 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 8
  store i32 0, i32* %107, align 8
  %108 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  store %"class.blink::CSSProperty"* null, %"class.blink::CSSProperty"** %108, align 8
  %109 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10
  %110 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  call void @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringEPKNS_20PropertyRegistrationE(%"class.blink::CustomProperty"* %109, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.blink::PropertyRegistration"* null) #7
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #7
  br label %127

127:                                              ; preds = %103, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7
  %128 = load i64, i64* %13, align 8
  %129 = icmp ugt i64 %128, 65536
  br i1 %129, label %133, label %130

130:                                              ; preds = %127
  %131 = load i64, i64* %106, align 8
  %132 = icmp ugt i64 %131, 65535
  br i1 %132, label %133, label %134

133:                                              ; preds = %130, %127
  store i64 %128, i64* %11, align 8
  br label %135

134:                                              ; preds = %130
  call void @_ZN5blink16CascadeExpansion4NextEv(%"class.blink::CascadeExpansion"* %0)
  br label %135

135:                                              ; preds = %134, %133
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CascadeExpansion4NextEv(%"class.blink::CascadeExpansion"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 6, i32 1
  %5 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 6, i32 0
  %6 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 5
  br label %9

9:                                                ; preds = %36, %1
  %10 = load i32, i32* %3, align 8
  switch i32 %10, label %32 [
    i32 0, label %11
    i32 1, label %12
    i32 2, label %30
    i32 3, label %31
  ]

11:                                               ; preds = %9
  tail call void @_ZN5blink16CascadeExpansion13AdvanceNormalEv(%"class.blink::CascadeExpansion"* %0)
  br label %32

12:                                               ; preds = %9
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %5, align 4
  %15 = and i32 %13, 128
  %16 = and i32 %15, %14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %29

18:                                               ; preds = %12
  %19 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %2, align 8
  %20 = bitcast %"class.blink::CSSProperty"* %19 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %21 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %21, i64 13
  %23 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %22, align 8
  %24 = tail call %"class.blink::CSSProperty"* %23(%"class.blink::CSSProperty"* %19) #7
  %25 = icmp eq %"class.blink::CSSProperty"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  store %"class.blink::CSSProperty"* %24, %"class.blink::CSSProperty"** %2, align 8
  %27 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %6, align 8
  store i32 2, i32* %3, align 8
  br label %32

29:                                               ; preds = %18, %12
  tail call void @_ZN5blink16CascadeExpansion13AdvanceNormalEv(%"class.blink::CascadeExpansion"* %0)
  br label %32

30:                                               ; preds = %9
  tail call void @_ZN5blink16CascadeExpansion13AdvanceNormalEv(%"class.blink::CascadeExpansion"* %0)
  br label %32

31:                                               ; preds = %9
  tail call void @_ZN5blink16CascadeExpansion10AdvanceAllEv(%"class.blink::CascadeExpansion"* %0)
  br label %32

32:                                               ; preds = %26, %11, %29, %30, %31, %9
  %33 = load i64, i64* %7, align 8
  %34 = load i64, i64* %8, align 8
  %35 = icmp ult i64 %33, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %32
  %37 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %2, align 8
  %38 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %37, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %4, align 4
  %41 = xor i32 %39, -1
  %42 = xor i32 %40, %41
  %43 = load i32, i32* %5, align 4
  %44 = and i32 %43, %42
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %9

46:                                               ; preds = %36, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CascadeExpansionC2ERKS0_(%"class.blink::CascadeExpansion"*, %"class.blink::CascadeExpansion"* nocapture readonly dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CascadeExpansion"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::CascadeExpansion"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 2
  %11 = bitcast %"struct.blink::MatchedProperties"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.blink::MatchedProperties"** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 3, i32 0
  %15 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 3, i32 0
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 5
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 6
  %25 = bitcast %"class.blink::CascadeFilter"* %24 to i64*
  %26 = bitcast %"class.blink::CascadeFilter"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 7
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 8
  %32 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %31, align 8
  %34 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  %35 = icmp eq i32 %33, 1
  %36 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10
  %37 = bitcast %"class.blink::CustomProperty"* %36 to %"class.blink::CSSProperty"*
  %38 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 9
  %39 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %38, align 8
  %40 = select i1 %35, %"class.blink::CSSProperty"* %37, %"class.blink::CSSProperty"* %39
  store %"class.blink::CSSProperty"* %40, %"class.blink::CSSProperty"** %34, align 8
  %41 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink11CSSPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast i32* %42 to i8*
  %45 = bitcast i32* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 9, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %46 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #7
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  tail call void @llvm.trap() #7
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %2, %50, %65
  %68 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10, i32 2
  %69 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %1, i64 0, i32 10, i32 2
  %70 = bitcast %"class.blink::Member.519"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.blink::Member.519"* %68 to i64*
  store i64 %71, i64* %72, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CascadeExpansion13AdvanceNormalEv(%"class.blink::CascadeExpansion"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CustomProperty", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 1
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %204

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 2
  %14 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %13, align 8
  %15 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %15, align 8
  %17 = trunc i64 %8 to i32
  %18 = icmp eq %"class.blink::CSSPropertyValueSet"* %16, null
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %16, i64 0, i32 0
  br i1 %18, label %20, label %22

20:                                               ; preds = %12
  %21 = load i32, i32* %19, align 8
  br label %30

22:                                               ; preds = %12
  %23 = load i32, i32* %19, align 4
  %24 = icmp sgt i32 %23, -1
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %16, i64 4
  %27 = bitcast %"class.blink::CSSPropertyValueSet"* %26 to %"class.WTF::Vector.651"*
  %28 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.651"* %27, i32 %17) #7
  %29 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %28, i64 0, i32 0
  br label %40

30:                                               ; preds = %22, %20
  %31 = phi i32 [ %21, %20 ], [ %23, %22 ]
  %32 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %16, i64 2
  %33 = bitcast %"class.blink::CSSPropertyValueSet"* %32 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %34 = and i32 %31, 268435455
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %33, i64 %35
  %37 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %36 to %"struct.blink::CSSPropertyValueMetadata"*
  %38 = and i64 %8, 4294967295
  %39 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %37, i64 %38
  br label %40

40:                                               ; preds = %25, %30
  %41 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %39, %30 ], [ %29, %25 ]
  %42 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %41) #7
  %43 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 8
  store i32 %42, i32* %43, align 8
  %44 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %13, align 8
  %45 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %41, i64 0, i32 1
  %48 = load i16, i16* %47, align 8
  %49 = and i16 %48, 16384
  %50 = icmp ne i16 %49, 0
  %51 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %44, i64 0, i32 1, i32 2
  %52 = load i16, i16* %51, align 2
  %53 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 7
  %54 = load i64, i64* %53, align 8
  %55 = load i64, i64* %6, align 8
  %56 = shl i64 %54, 16
  %57 = and i64 %55, 65535
  %58 = and i64 %56, 4294901760
  %59 = or i64 %58, %57
  %60 = shl nuw nsw i64 %59, 4
  %61 = zext i16 %52 to i64
  %62 = select i1 %50, i64 65535, i64 0
  %63 = xor i64 %62, %61
  %64 = shl nuw nsw i64 %63, 36
  %65 = zext i8 %46 to i64
  %66 = select i1 %50, i64 15, i64 0
  %67 = xor i64 %66, %65
  %68 = shl nuw nsw i64 %67, 52
  %69 = or i64 %64, %68
  %70 = or i64 %69, %60
  %71 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 3, i32 0
  store i64 %70, i64* %71, align 8
  switch i32 %42, label %201 [
    i32 1, label %72
    i32 34, label %198
  ]

72:                                               ; preds = %40
  %73 = bitcast %"class.blink::CustomProperty"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #7
  %74 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #7
  %75 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #7
  br i1 %18, label %76, label %78

76:                                               ; preds = %72
  %77 = load i32, i32* %19, align 8
  br label %86

78:                                               ; preds = %72
  %79 = load i32, i32* %19, align 4
  %80 = icmp sgt i32 %79, -1
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %16, i64 4
  %83 = bitcast %"class.blink::CSSPropertyValueSet"* %82 to %"class.WTF::Vector.651"*
  %84 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.651"* %83, i32 %17) #7
  %85 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %84, i64 0, i32 0
  br label %96

86:                                               ; preds = %78, %76
  %87 = phi i32 [ %77, %76 ], [ %79, %78 ]
  %88 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %16, i64 2
  %89 = bitcast %"class.blink::CSSPropertyValueSet"* %88 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %90 = and i32 %87, 268435455
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %89, i64 %91
  %93 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %92 to %"struct.blink::CSSPropertyValueMetadata"*
  %94 = and i64 %8, 4294967295
  %95 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %93, i64 %94
  br label %96

96:                                               ; preds = %81, %86
  %97 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %95, %86 ], [ %85, %81 ]
  %98 = tail call { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"* %97) #7
  %99 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %100 = extractvalue { i32, %"class.WTF::StringImpl"* } %98, 0
  store i32 %100, i32* %99, align 8
  %101 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %102 = extractvalue { i32, %"class.WTF::StringImpl"* } %98, 1
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %101, align 8
  %103 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* nonnull %4) #7
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  %105 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 0
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink14CustomPropertyC1ERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CustomProperty"* nonnull %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::Document"* dereferenceable(2848) %106) #7
  %107 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10
  %108 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %110 = bitcast i32* %108 to i8*
  %111 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 9, i1 false) #7
  %112 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10, i32 1
  %113 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %2, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.WTF::AtomicString"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %114, align 8
  %117 = bitcast %"class.WTF::AtomicString"* %112 to i64*
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %112, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  store i64 %116, i64* %117, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %96
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #7
  br label %134

134:                                              ; preds = %133, %130, %96
  %135 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 10, i32 2
  %136 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %2, i64 0, i32 2
  %137 = bitcast %"class.blink::Member.519"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.blink::Member.519"* %135 to i64*
  store atomic i64 %138, i64* %139 monotonic, align 8
  %140 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %134
  %143 = inttoptr i64 %138 to i8*
  %144 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %143) #7
  br label %145

145:                                              ; preds = %134, %142
  %146 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %146, align 8
  %147 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #7
  br label %163

163:                                              ; preds = %145, %159, %162
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #7
  br label %179

179:                                              ; preds = %163, %175, %178
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #7
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #7
  %196 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  %197 = bitcast %"class.blink::CSSProperty"** %196 to %"class.blink::CustomProperty"**
  store %"class.blink::CustomProperty"* %107, %"class.blink::CustomProperty"** %197, align 8
  br label %204

198:                                              ; preds = %40
  store i32 3, i32* %5, align 8
  store i32 2, i32* %43, align 8
  %199 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 2) #7
  %200 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  store %"class.blink::CSSProperty"* %199, %"class.blink::CSSProperty"** %200, align 8
  br label %204

201:                                              ; preds = %40
  %202 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %42) #7
  %203 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  store %"class.blink::CSSProperty"* %202, %"class.blink::CSSProperty"** %203, align 8
  br label %204

204:                                              ; preds = %1, %195, %198, %201
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16CascadeExpansion17ShouldEmitVisitedEv(%"class.blink::CascadeExpansion"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 6, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %3, 128
  %7 = and i32 %6, %5
  %8 = icmp eq i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16CascadeExpansion14AdvanceVisitedEv(%"class.blink::CascadeExpansion"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  %3 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %2, align 8
  %4 = bitcast %"class.blink::CSSProperty"* %3 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %5 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %5, i64 13
  %7 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %6, align 8
  %8 = tail call %"class.blink::CSSProperty"* %7(%"class.blink::CSSProperty"* %3) #7
  %9 = icmp eq %"class.blink::CSSProperty"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  store %"class.blink::CSSProperty"* %8, %"class.blink::CSSProperty"** %2, align 8
  %11 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 8
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 1
  store i32 2, i32* %14, align 8
  br label %15

15:                                               ; preds = %1, %10
  %16 = phi i1 [ true, %10 ], [ false, %1 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16CascadeExpansion10AdvanceAllEv(%"class.blink::CascadeExpansion"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 1
  store i32 3, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  %6 = icmp slt i32 %5, 525
  br i1 %6, label %7, label %39

7:                                                ; preds = %1, %34
  %8 = phi i32 [ %35, %34 ], [ %5, %1 ]
  %9 = phi i32 [ %8, %34 ], [ %4, %1 ]
  store i32 %8, i32* %3, align 8
  %10 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %8) #7
  %11 = bitcast %"class.blink::CSSProperty"* %10 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %12 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %12, i64 14
  %14 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %13, align 8
  %15 = tail call %"class.blink::CSSProperty"* %14(%"class.blink::CSSProperty"* %10) #7
  %16 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %10, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %34

20:                                               ; preds = %7
  %21 = bitcast %"class.blink::CSSProperty"* %10 to i1 (%"class.blink::CSSProperty"*)***
  %22 = load i1 (%"class.blink::CSSProperty"*)**, i1 (%"class.blink::CSSProperty"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %22, i64 7
  %24 = load i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::CSSProperty"* %10) #7
  br i1 %25, label %37, label %26

26:                                               ; preds = %20
  %27 = icmp eq %"class.blink::CSSProperty"* %15, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.blink::CSSProperty"* %15 to i1 (%"class.blink::CSSProperty"*)***
  %30 = load i1 (%"class.blink::CSSProperty"*)**, i1 (%"class.blink::CSSProperty"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %30, i64 7
  %32 = load i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::CSSProperty"* nonnull %15) #7
  br i1 %33, label %37, label %34

34:                                               ; preds = %26, %7, %28
  %35 = add i32 %8, 1
  %36 = icmp eq i32 %35, 525
  br i1 %36, label %39, label %7

37:                                               ; preds = %20, %28
  %38 = icmp sgt i32 %9, 523
  br i1 %38, label %39, label %40

39:                                               ; preds = %34, %1, %37
  tail call void @_ZN5blink16CascadeExpansion13AdvanceNormalEv(%"class.blink::CascadeExpansion"* %0)
  br label %44

40:                                               ; preds = %37
  %41 = load i32, i32* %3, align 8
  %42 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %41) #7
  %43 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 9
  store %"class.blink::CSSProperty"* %42, %"class.blink::CSSProperty"** %43, align 8
  br label %44

44:                                               ; preds = %40, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16CascadeExpansion16IsInAllExpansionENS_13CSSPropertyIDE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %0) #7
  %3 = bitcast %"class.blink::CSSProperty"* %2 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %4 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %4, i64 14
  %6 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %5, align 8
  %7 = tail call %"class.blink::CSSProperty"* %6(%"class.blink::CSSProperty"* %2) #7
  %8 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %2, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::CSSProperty"* %2 to i1 (%"class.blink::CSSProperty"*)***
  %14 = load i1 (%"class.blink::CSSProperty"*)**, i1 (%"class.blink::CSSProperty"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %14, i64 7
  %16 = load i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::CSSProperty"* %2) #7
  br i1 %17, label %26, label %18

18:                                               ; preds = %12
  %19 = icmp eq %"class.blink::CSSProperty"* %7, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.blink::CSSProperty"* %7 to i1 (%"class.blink::CSSProperty"*)***
  %22 = load i1 (%"class.blink::CSSProperty"*)**, i1 (%"class.blink::CSSProperty"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %22, i64 7
  %24 = load i1 (%"class.blink::CSSProperty"*)*, i1 (%"class.blink::CSSProperty"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::CSSProperty"* nonnull %7) #7
  br label %26

26:                                               ; preds = %1, %18, %12, %20
  %27 = phi i1 [ false, %1 ], [ true, %12 ], [ false, %18 ], [ %25, %20 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { %"class.blink::CSSPropertyValueSet"*, i32 } @_ZNK5blink16CascadeExpansion10PropertyAtEm(%"class.blink::CascadeExpansion"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 2
  %4 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = insertvalue { %"class.blink::CSSPropertyValueSet"*, i32 } undef, %"class.blink::CSSPropertyValueSet"* %6, 0
  %11 = insertvalue { %"class.blink::CSSPropertyValueSet"*, i32 } %10, i32 %9, 1
  ret { %"class.blink::CSSPropertyValueSet"*, i32 } %11
}

declare i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #3

declare void @_ZN5blink14CustomPropertyC1ERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK5blink16CascadeExpansion9TreeOrderEv(%"class.blink::CascadeExpansion"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %0, i64 0, i32 2
  %3 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %3, i64 0, i32 1, i32 2
  %5 = load i16, i16* %4, align 2
  ret i16 %5
}

declare void @_ZN5blink14CustomPropertyC2ERKN3WTF12AtomicStringEPKNS_20PropertyRegistrationE(%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::PropertyRegistration"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21CSSUnresolvedProperty8ExposureEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE(%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSUnresolvedProperty"* %0 to i32 (%"class.blink::CSSUnresolvedProperty"*)***
  %4 = load i32 (%"class.blink::CSSUnresolvedProperty"*)**, i32 (%"class.blink::CSSUnresolvedProperty"*)*** %3, align 8
  %5 = load i32 (%"class.blink::CSSUnresolvedProperty"*)*, i32 (%"class.blink::CSSUnresolvedProperty"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::CSSUnresolvedProperty"* %0) #7
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty18IsResolvedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE(%"class.blink::CSSProperty"*, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE(%"class.blink::CSSProperty"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty18GetVisitedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE(%"class.blink::CSSProperty"*, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink21CSSUnresolvedProperty15GetPropertyNameEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink21CSSUnresolvedProperty27GetPropertyNameAtomicStringEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32, %"class.WTF::StringImpl"* } @_ZNK5blink11CSSProperty18GetCSSPropertyNameEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = insertvalue { i32, %"class.WTF::StringImpl"* } undef, i32 %3, 0
  %5 = insertvalue { i32, %"class.WTF::StringImpl"* } %4, %"class.WTF::StringImpl"* null, 1
  ret { i32, %"class.WTF::StringImpl"* } %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty15IsAffectedByAllEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::CSSProperty"* %0 to i32 (%"class.blink::CSSUnresolvedProperty"*)***
  %4 = load i32 (%"class.blink::CSSUnresolvedProperty"*)**, i32 (%"class.blink::CSSUnresolvedProperty"*)*** %3, align 8
  %5 = load i32 (%"class.blink::CSSUnresolvedProperty"*)*, i32 (%"class.blink::CSSUnresolvedProperty"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::CSSUnresolvedProperty"* %2) #7
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 8
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %8, %1
  %14 = phi i1 [ false, %1 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.651"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.651", %"class.WTF::Vector.651"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.651", %"class.WTF::Vector.651"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
