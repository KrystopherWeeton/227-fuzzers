; ModuleID = '../../ui/events/gestures/blink/web_gesture_curve_impl.cc'
source_filename = "../../ui/events/gestures/blink/web_gesture_curve_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.ui::WebGestureCurveImpl" = type { %"class.blink::WebGestureCurve", %"class.std::__1::unique_ptr.1", %"class.gfx::Vector2dF", i64, double, double }
%"class.blink::WebGestureCurve" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.ui::GestureCurve"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.ui::GestureCurve" = type { i32 (...)** }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Size" = type { i32, i32 }
%"struct.ui::MobileScroller::Config" = type <{ float, i8, i8, [2 x i8] }>
%"class.ui::FixedVelocityCurve" = type { %"class.ui::GestureCurve", %"class.gfx::Vector2dF", %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::MobileScroller" = type <{ %"class.ui::GestureCurve", i32, float, float, float, float, float, float, float, float, float, float, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", double, float, float, float, float, i8, i8, [2 x i8], float, float, float, float, float, float, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.ui::PhysicsBasedFlingCurve" = type { %"class.ui::GestureCurve", %"class.base::TimeTicks", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Vector2dF", %"class.base::TimeDelta", %"class.gfx::CubicBezier", %"class.base::TimeDelta", %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.gfx::CubicBezier" = type { double, double, double, double, double, double, double, double, double, double, [11 x double] }
%"class.ui::FlingCurve" = type { %"class.ui::GestureCurve", float, %"class.base::TimeTicks", %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"class.base::TimeTicks", float, float }

@_ZTVN2ui19WebGestureCurveImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::WebGestureCurveImpl"*)* @_ZN2ui19WebGestureCurveImplD2Ev to i8*), i8* bitcast (void (%"class.ui::WebGestureCurveImpl"*)* @_ZN2ui19WebGestureCurveImplD0Ev to i8*), i8* bitcast (i1 (%"class.ui::WebGestureCurveImpl"*, double, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)* @_ZN2ui19WebGestureCurveImpl7AdvanceEdRN3gfx9Vector2dFES3_ to i8*)] }, align 8
@_ZN8features27kExperimentalFlingAnimationE = external global %"struct.base::Feature", align 8

@_ZN2ui19WebGestureCurveImplC1ENSt3__110unique_ptrINS_12GestureCurveENS1_14default_deleteIS3_EEEERKN3gfx9Vector2dFENS0_10ThreadTypeE = hidden unnamed_addr alias void (%"class.ui::WebGestureCurveImpl"*, %"class.ui::GestureCurve"*, %"class.gfx::Vector2dF"*, i32), void (%"class.ui::WebGestureCurveImpl"*, %"class.ui::GestureCurve"*, %"class.gfx::Vector2dF"*, i32)* @_ZN2ui19WebGestureCurveImplC2ENSt3__110unique_ptrINS_12GestureCurveENS1_14default_deleteIS3_EEEERKN3gfx9Vector2dFENS0_10ThreadTypeE
@_ZN2ui19WebGestureCurveImplD1Ev = hidden unnamed_addr alias void (%"class.ui::WebGestureCurveImpl"*), void (%"class.ui::WebGestureCurveImpl"*)* @_ZN2ui19WebGestureCurveImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebGestureCurve"* @_ZN2ui19WebGestureCurveImpl30CreateFromDefaultPlatformCurveEN5blink5mojom13GestureDeviceERKN3gfx9Vector2dFES7_bbRKNS4_6PointFEfRKNS4_4SizeE(i32, %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext, %"class.gfx::PointF"* nocapture readnone dereferenceable(8), float, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.ui::MobileScroller::Config", align 4
  %10 = alloca %"class.gfx::Vector2dF", align 4
  %11 = tail call i8* @_Znwm(i64 48) #6
  %12 = icmp eq i32 %0, 3
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = tail call i8* @_Znwm(i64 24) #6
  %15 = bitcast i8* %14 to %"class.ui::FixedVelocityCurve"*
  tail call void @_ZN2ui18FixedVelocityCurveC1ERKN3gfx9Vector2dFEN4base9TimeTicksE(%"class.ui::FixedVelocityCurve"* nonnull %15, %"class.gfx::Vector2dF"* dereferenceable(8) %1, i64 0) #7
  br label %39

16:                                               ; preds = %8
  br i1 %4, label %17, label %28

17:                                               ; preds = %16
  %18 = bitcast %"struct.ui::MobileScroller::Config"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"struct.ui::MobileScroller::Config", %"struct.ui::MobileScroller::Config"* %9, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %19, align 4
  %20 = getelementptr inbounds %"struct.ui::MobileScroller::Config", %"struct.ui::MobileScroller::Config"* %9, i64 0, i32 1
  %21 = bitcast i8* %20 to i32*
  store i32 -1431655766, i32* %21, align 4
  call void @_ZN2ui14MobileScroller6ConfigC1Ev(%"struct.ui::MobileScroller::Config"* nonnull %9) #7
  %22 = call i8* @_Znwm(i64 136) #6
  %23 = bitcast i8* %22 to %"class.ui::MobileScroller"*
  call void @_ZN2ui14MobileScrollerC1ERKNS0_6ConfigE(%"class.ui::MobileScroller"* nonnull %23, %"struct.ui::MobileScroller::Config"* nonnull dereferenceable(8) %9) #7
  %24 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %27 = load float, float* %26, align 4
  call void @_ZN2ui14MobileScroller5FlingEffffffffN4base9TimeTicksE(%"class.ui::MobileScroller"* nonnull %23, float 0.000000e+00, float 0.000000e+00, float %25, float %27, float 0xC1E0000000000000, float 0x41E0000000000000, float 0xC1E0000000000000, float 0x41E0000000000000, i64 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %39

28:                                               ; preds = %16
  %29 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features27kExperimentalFlingAnimationE) #7
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = bitcast %"class.gfx::Vector2dF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %10, i64 0, i32 0
  %33 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %10, i64 0, i32 1
  store float 9.600000e+01, float* %32, align 4
  store float 9.600000e+01, float* %33, align 4
  %34 = tail call i8* @_Znwm(i64 240) #6
  %35 = bitcast i8* %34 to %"class.ui::PhysicsBasedFlingCurve"*
  call void @_ZN2ui22PhysicsBasedFlingCurveC1ERKN3gfx9Vector2dFEN4base9TimeTicksES4_fRKNS1_4SizeE(%"class.ui::PhysicsBasedFlingCurve"* nonnull %35, %"class.gfx::Vector2dF"* dereferenceable(8) %1, i64 0, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %10, float %6, %"class.gfx::Size"* dereferenceable(8) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %39

36:                                               ; preds = %28
  %37 = tail call i8* @_Znwm(i64 56) #6
  %38 = bitcast i8* %37 to %"class.ui::FlingCurve"*
  tail call void @_ZN2ui10FlingCurveC1ERKN3gfx9Vector2dFEN4base9TimeTicksE(%"class.ui::FlingCurve"* nonnull %38, %"class.gfx::Vector2dF"* dereferenceable(8) %1, i64 0) #7
  br label %39

39:                                               ; preds = %13, %17, %30, %36
  %40 = phi i8* [ %14, %13 ], [ %22, %17 ], [ %34, %30 ], [ %37, %36 ]
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui19WebGestureCurveImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %11, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %41, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %11, i64 16
  %46 = bitcast %"class.gfx::Vector2dF"* %2 to i64*
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %46, align 4
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %11, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #7
  %50 = bitcast i8* %11 to %"class.blink::WebGestureCurve"*
  ret %"class.blink::WebGestureCurve"* %50
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebGestureCurve"* @_ZN2ui19WebGestureCurveImpl27CreateFromUICurveForTestingENSt3__110unique_ptrINS_12GestureCurveENS1_14default_deleteIS3_EEEERKN3gfx9Vector2dFE(%"class.ui::GestureCurve"*, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.ui::GestureCurve"* %0 to i64
  %4 = tail call i8* @_Znwm(i64 48) #6
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui19WebGestureCurveImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast %"class.gfx::Vector2dF"* %1 to i64*
  %10 = bitcast i8* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #7
  %13 = bitcast i8* %4 to %"class.blink::WebGestureCurve"*
  ret %"class.blink::WebGestureCurve"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19WebGestureCurveImplC2ENSt3__110unique_ptrINS_12GestureCurveENS1_14default_deleteIS3_EEEERKN3gfx9Vector2dFENS0_10ThreadTypeE(%"class.ui::WebGestureCurveImpl"* nocapture, %"class.ui::GestureCurve"*, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.ui::GestureCurve"* %1 to i64
  %6 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui19WebGestureCurveImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.1"* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 2
  %10 = bitcast %"class.gfx::Vector2dF"* %2 to i64*
  %11 = bitcast %"class.gfx::Vector2dF"* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 3
  %14 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19WebGestureCurveImplD2Ev(%"class.ui::WebGestureCurveImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui19WebGestureCurveImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.ui::GestureCurve"*, %"class.ui::GestureCurve"** %3, align 8
  store %"class.ui::GestureCurve"* null, %"class.ui::GestureCurve"** %3, align 8
  %5 = icmp eq %"class.ui::GestureCurve"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::GestureCurve"* %4 to void (%"class.ui::GestureCurve"*)***
  %8 = load void (%"class.ui::GestureCurve"*)**, void (%"class.ui::GestureCurve"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::GestureCurve"*)*, void (%"class.ui::GestureCurve"*)** %8, i64 1
  %10 = load void (%"class.ui::GestureCurve"*)*, void (%"class.ui::GestureCurve"*)** %9, align 8
  tail call void %10(%"class.ui::GestureCurve"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19WebGestureCurveImplD0Ev(%"class.ui::WebGestureCurveImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui19WebGestureCurveImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.ui::GestureCurve"*, %"class.ui::GestureCurve"** %3, align 8
  store %"class.ui::GestureCurve"* null, %"class.ui::GestureCurve"** %3, align 8
  %5 = icmp eq %"class.ui::GestureCurve"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::GestureCurve"* %4 to void (%"class.ui::GestureCurve"*)***
  %8 = load void (%"class.ui::GestureCurve"*)**, void (%"class.ui::GestureCurve"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::GestureCurve"*)*, void (%"class.ui::GestureCurve"*)** %8, i64 1
  %10 = load void (%"class.ui::GestureCurve"*)*, void (%"class.ui::GestureCurve"*)** %9, align 8
  tail call void %10(%"class.ui::GestureCurve"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::WebGestureCurveImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui19WebGestureCurveImpl7AdvanceEdRN3gfx9Vector2dFES3_(%"class.ui::WebGestureCurveImpl"* nocapture, double, %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Vector2dF"* nocapture dereferenceable(8)) unnamed_addr #3 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.gfx::Vector2dF"*
  %9 = fcmp ugt double %1, 0.000000e+00
  br i1 %9, label %10, label %55

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 4
  %12 = load double, double* %11, align 8
  %13 = fcmp une double %12, 0.000000e+00
  %14 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 5
  br i1 %13, label %16, label %15

15:                                               ; preds = %10
  store double %1, double* %14, align 8
  store double %1, double* %11, align 8
  br label %23

16:                                               ; preds = %10
  %17 = load double, double* %14, align 8
  %18 = fcmp une double %17, %1
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  store double %1, double* %14, align 8
  %20 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, 1
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %16, %19, %15
  %24 = fmul double %1, 1.000000e+06
  %25 = fcmp ult double %24, 0xC3E0000000000000
  %26 = fcmp ugt double %24, 0x43DFFFFFFFFFFFFF
  %27 = fcmp ogt double %24, 0xC3E0000000000000
  %28 = select i1 %27, double %24, double 0xC3E0000000000000
  %29 = fptosi double %28 to i64
  %30 = select i1 %25, i64 0, i64 9223372036854775807
  %31 = select i1 %26, i64 %30, i64 %29
  %32 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %33 = bitcast i64* %7 to float*
  %34 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 1
  store float 0.000000e+00, float* %33, align 8
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.ui::GestureCurve"*, %"class.ui::GestureCurve"** %35, align 8
  %37 = bitcast %"class.ui::GestureCurve"* %36 to i1 (%"class.ui::GestureCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)***
  %38 = load i1 (%"class.ui::GestureCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)**, i1 (%"class.ui::GestureCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.ui::GestureCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)*, i1 (%"class.ui::GestureCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)** %38, i64 2
  %40 = load i1 (%"class.ui::GestureCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)*, i1 (%"class.ui::GestureCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.ui::GestureCurve"* %36, i64 %31, %"class.gfx::Vector2dF"* nonnull %8, %"class.gfx::Vector2dF"* %2) #7
  %42 = getelementptr inbounds %"class.ui::WebGestureCurveImpl", %"class.ui::WebGestureCurveImpl"* %0, i64 0, i32 2
  %43 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast i64* %5 to %"class.gfx::Vector2dF"*
  %45 = bitcast <2 x float>* %6 to %"class.gfx::Vector2dF"*
  %46 = load i64, i64* %7, align 8
  store i64 %46, i64* %5, align 8
  %47 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  %48 = bitcast %"class.gfx::Vector2dF"* %42 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 4
  %50 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %49
  store <2 x float> %50, <2 x float>* %6, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %44, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %45) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  %51 = load i64, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %52 = bitcast %"class.gfx::Vector2dF"* %3 to i64*
  store i64 %51, i64* %52, align 4
  %53 = bitcast %"class.gfx::Vector2dF"* %42 to i64*
  %54 = load i64, i64* %7, align 8
  store i64 %54, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  br label %55

55:                                               ; preds = %4, %23
  %56 = phi i1 [ %41, %23 ], [ true, %4 ]
  ret i1 %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN2ui14MobileScroller6ConfigC1Ev(%"struct.ui::MobileScroller::Config"*) unnamed_addr #5

declare void @_ZN2ui14MobileScroller5FlingEffffffffN4base9TimeTicksE(%"class.ui::MobileScroller"*, float, float, float, float, float, float, float, float, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN2ui18FixedVelocityCurveC1ERKN3gfx9Vector2dFEN4base9TimeTicksE(%"class.ui::FixedVelocityCurve"*, %"class.gfx::Vector2dF"* dereferenceable(8), i64) unnamed_addr #5

declare void @_ZN2ui14MobileScrollerC1ERKNS0_6ConfigE(%"class.ui::MobileScroller"*, %"struct.ui::MobileScroller::Config"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN2ui22PhysicsBasedFlingCurveC1ERKN3gfx9Vector2dFEN4base9TimeTicksES4_fRKNS1_4SizeE(%"class.ui::PhysicsBasedFlingCurve"*, %"class.gfx::Vector2dF"* dereferenceable(8), i64, %"class.gfx::Vector2dF"* dereferenceable(8), float, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN2ui10FlingCurveC1ERKN3gfx9Vector2dFEN4base9TimeTicksE(%"class.ui::FlingCurve"*, %"class.gfx::Vector2dF"* dereferenceable(8), i64) unnamed_addr #5

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
