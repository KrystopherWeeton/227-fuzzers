; ModuleID = '../../third_party/blink/renderer/platform/image-decoders/gif/gif_image_decoder.cc'
source_filename = "../../third_party/blink/renderer/platform/image-decoders/gif/gif_image_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GIFImageDecoder" = type { %"class.blink::ImageDecoder", %"class.std::__1::unique_ptr.28", %"class.blink::SegmentStream"*, i32, i32 }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr, %"class.WTF::Vector", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.9", %class.sk_sp.1, i8, %"class.std::__1::unique_ptr.22" }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.13" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.12, [8 x i8] }
%struct.anon.12 = type { i32, i8*, i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkCodec* }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.39", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp.34 }
%class.sk_sp.34 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.35, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.35 = type { %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.SkStream* }
%class.SkStream = type { i32 (...)** }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.blink::SegmentStream" = type { %class.SkStream, %class.scoped_refptr, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.72 }
%union.anon.72 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkPngChunkReader = type opaque
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %struct.SkISize*, i32, i32 }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional", i8, i8, %"class.absl::optional.65", %"class.absl::optional.65", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink12ImageDecoderD2Ev = comdat any

$_ZN5blink12ImageDecoder7SetSizeEjj = comdat any

$_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj = comdat any

$_ZNK5blink12ImageDecoder4SizeEv = comdat any

$_ZNK5blink15GIFImageDecoder17FilenameExtensionEv = comdat any

$_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv = comdat any

$_ZNK5blink12ImageDecoder11DecodedSizeEv = comdat any

$_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv = comdat any

$_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE = comdat any

$_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE = comdat any

$_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv = comdat any

$_ZNK5blink12ImageDecoder14GetYUVBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm = comdat any

$_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE = comdat any

$_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE = comdat any

$_ZN5blink12ImageDecoder11DecodeToYUVEv = comdat any

$_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv = comdat any

$_ZN5blink15GIFImageDecoder10DecodeSizeEv = comdat any

$_ZN5blink12ImageDecoder17OnInitFrameBufferEm = comdat any

$_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK13SkEncodedInfo13makeImageInfoEv = comdat any

$_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink15GIFImageDecoderE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GIFImageDecoder"*)* @_ZN5blink15GIFImageDecoderD2Ev to i8*), i8* bitcast (void (%"class.blink::GIFImageDecoder"*)* @_ZN5blink15GIFImageDecoderD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::GIFImageDecoder"*)* @_ZNK5blink15GIFImageDecoder17FilenameExtensionEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv to i8*), i8* bitcast (void (%"class.blink::GIFImageDecoder"*, %"class.blink::SegmentReader"*)* @_ZN5blink15GIFImageDecoder9OnSetDataEPNS_13SegmentReaderE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder4SizeEv to i8*), i8* bitcast (void (%"class.WTF::Vector.60"*, %"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder11DecodedSizeEv to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i32)* @_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i32)* @_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv to i8*), i8* bitcast (i8 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv to i8*), i8* bitcast (void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i32, i32)* @_ZN5blink12ImageDecoder7SetSizeEjj to i8*), i8* bitcast (i32 (%"class.blink::GIFImageDecoder"*)* @_ZNK5blink15GIFImageDecoder15RepetitionCountEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::GIFImageDecoder"*, i64)* @_ZNK5blink15GIFImageDecoder22FrameIsReceivedAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::GIFImageDecoder"*, i64)* @_ZNK5blink15GIFImageDecoder20FrameDurationAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::GIFImageDecoder"*)* @_ZN5blink15GIFImageDecoder9SetFailedEv to i8*), i8* bitcast (i64 (%"class.blink::GIFImageDecoder"*, i64)* @_ZN5blink15GIFImageDecoder21ClearCacheExceptFrameEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)* @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)* @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder11DecodeToYUVEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder16ClearFrameBufferEm to i8*), i8* bitcast (void (%"class.blink::GIFImageDecoder"*)* @_ZN5blink15GIFImageDecoder10DecodeSizeEv to i8*), i8* bitcast (i64 (%"class.blink::GIFImageDecoder"*)* @_ZN5blink15GIFImageDecoder16DecodeFrameCountEv to i8*), i8* bitcast (void (%"class.blink::GIFImageDecoder"*, i64)* @_ZN5blink15GIFImageDecoder18InitializeNewFrameEm to i8*), i8* bitcast (void (%"class.blink::GIFImageDecoder"*, i64)* @_ZN5blink15GIFImageDecoder6DecodeEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i32)* @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder17OnInitFrameBufferEm to i8*), i8* bitcast (i1 (%"class.blink::GIFImageDecoder"*, i64)* @_ZNK5blink15GIFImageDecoder27CanReusePreviousFrameBufferEm to i8*)] }, align 8
@_ZTVN5blink12ImageDecoderE = external unnamed_addr constant { [37 x i8*] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"gif\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink15GIFImageDecoderC1ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm = hidden unnamed_addr alias void (%"class.blink::GIFImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64), void (%"class.blink::GIFImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64)* @_ZN5blink15GIFImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm
@_ZN5blink15GIFImageDecoderD1Ev = hidden unnamed_addr alias void (%"class.blink::GIFImageDecoder"*), void (%"class.blink::GIFImageDecoder"*)* @_ZN5blink15GIFImageDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15GIFImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm(%"class.blink::GIFImageDecoder"*, i32, %"class.blink::ColorBehavior"* nocapture readonly dereferenceable(4), i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i64 0
  %9 = bitcast %"class.WTF::Vector"* %7 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 3
  %13 = icmp eq i32 %1, 0
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %12, align 8
  %15 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 6, i32 0
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 7, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 7, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 8
  store i64 %3, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 9
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 10
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 12, i32 0
  %28 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 16
  %29 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 19
  %30 = bitcast %"class.std::__1::unique_ptr.22"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = bitcast i32* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 11, i1 false) #8
  %32 = bitcast %"class.std::__1::unique_ptr.9"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 17, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15GIFImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %33 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 4
  %35 = bitcast %"class.std::__1::unique_ptr.28"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 20, i1 false)
  store i32 -1, i32* %34, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15GIFImageDecoderD2Ev(%"class.blink::GIFImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15GIFImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  store %class.SkCodec* null, %class.SkCodec** %3, align 8
  %5 = icmp eq %class.SkCodec* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCodec* %4 to void (%class.SkCodec*)***
  %8 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %8, i64 1
  %10 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %9, align 8
  tail call void %10(%class.SkCodec* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ColorProfileTransform"*, %"class.blink::ColorProfileTransform"** %3, align 8
  store %"class.blink::ColorProfileTransform"* null, %"class.blink::ColorProfileTransform"** %3, align 8
  %5 = icmp eq %"class.blink::ColorProfileTransform"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ColorProfileTransform"* %4 to i8*
  tail call void @free(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 17, i32 0
  %10 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %11 = icmp eq %class.SkColorSpace* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = bitcast %class.SkColorSpace* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %8, %12, %16
  %19 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %19, align 8
  store %"class.blink::ColorProfile"* null, %"class.blink::ColorProfile"** %19, align 8
  %21 = icmp eq %"class.blink::ColorProfile"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  store i8* null, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdaPv(i8* nonnull %24) #9
  br label %27

27:                                               ; preds = %26, %22
  %28 = bitcast %"class.blink::ColorProfile"* %20 to i8*
  tail call void @free(i8* %28) #8
  br label %29

29:                                               ; preds = %18, %27
  %30 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %31 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %30, align 8
  store %"class.blink::ImagePlanes"* null, %"class.blink::ImagePlanes"** %30, align 8
  %32 = icmp eq %"class.blink::ImagePlanes"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::ImagePlanes"* %31 to i8*
  tail call void @free(i8* %34) #8
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  br i1 %39, label %51, label %41, !prof !2

41:                                               ; preds = %35
  %42 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %42, i64 %43
  br label %45

45:                                               ; preds = %45, %41
  %46 = phi %"class.blink::ImageFrame"* [ %48, %45 ], [ %42, %41 ]
  %47 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %47) #8
  %48 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 1
  %49 = icmp eq %"class.blink::ImageFrame"* %48, %44
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  store i32 0, i32* %37, align 4
  br label %51

51:                                               ; preds = %50, %35
  %52 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %54 = bitcast i8* %53 to %"class.blink::ImageFrame"*
  %55 = icmp eq %"class.blink::ImageFrame"* %52, %54
  br i1 %55, label %58, label %56, !prof !3

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %57, %"class.blink::ImageFrame"* %52) #8
  br label %58

58:                                               ; preds = %51, %56
  store %"class.blink::ImageFrame"* null, %"class.blink::ImageFrame"** %40, align 8
  %59 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %59, align 8
  %61 = icmp eq %"class.blink::SegmentReader"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %68 to %"class.blink::SegmentReader"*
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %68 to void (%"class.blink::SegmentReader"*)***
  %71 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %71, i64 1
  %73 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %72, align 8
  tail call void %73(%"class.blink::SegmentReader"* nonnull %69) #8
  br label %74

74:                                               ; preds = %58, %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15GIFImageDecoderD0Ev(%"class.blink::GIFImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15GIFImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  store %class.SkCodec* null, %class.SkCodec** %3, align 8
  %5 = icmp eq %class.SkCodec* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCodec* %4 to void (%class.SkCodec*)***
  %8 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %8, i64 1
  %10 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %9, align 8
  tail call void %10(%class.SkCodec* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %12) #8
  %13 = bitcast %"class.blink::GIFImageDecoder"* %0 to i8*
  tail call void @free(i8* %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15GIFImageDecoder9OnSetDataEPNS_13SegmentReaderE(%"class.blink::GIFImageDecoder"*, %"class.blink::SegmentReader"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = icmp eq %"class.blink::SegmentReader"* %1, null
  %7 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 2
  %8 = load %"class.blink::SegmentStream"*, %"class.blink::SegmentStream"** %7, align 8
  %9 = icmp eq %"class.blink::SegmentStream"* %8, null
  br i1 %6, label %10, label %12

10:                                               ; preds = %2
  br i1 %9, label %175, label %11

11:                                               ; preds = %10
  tail call void @_ZN5blink13SegmentStream9SetReaderE13scoped_refptrINS_13SegmentReaderEE(%"class.blink::SegmentStream"* nonnull %8, %"class.blink::SegmentReader"* null) #8
  br label %175

12:                                               ; preds = %2
  br i1 %9, label %13, label %18

13:                                               ; preds = %12
  %14 = tail call i8* @_Znwm(i64 24) #9
  %15 = bitcast i8* %14 to %"class.blink::SegmentStream"*
  tail call void @_ZN5blink13SegmentStreamC1Ev(%"class.blink::SegmentStream"* nonnull %15) #8
  %16 = ptrtoint i8* %14 to i64
  %17 = bitcast %"class.blink::SegmentStream"** %7 to i8**
  store i8* %14, i8** %17, align 8
  br label %18

18:                                               ; preds = %13, %12
  %19 = phi %"class.blink::SegmentStream"* [ %15, %13 ], [ %8, %12 ]
  %20 = phi i64 [ %16, %13 ], [ 0, %12 ]
  %21 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #8
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  br label %27

27:                                               ; preds = %18, %24
  call void @_ZN5blink13SegmentStream9SetReaderE13scoped_refptrINS_13SegmentReaderEE(%"class.blink::SegmentStream"* nonnull %19, %"class.blink::SegmentReader"* nonnull %1) #8
  %28 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %class.SkCodec*, %class.SkCodec** %29, align 8
  %31 = icmp eq %class.SkCodec* %30, null
  br i1 %31, label %32, label %167

32:                                               ; preds = %27
  %33 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #8
  store i32 -1431655766, i32* %4, align 4
  %34 = inttoptr i64 %20 to %class.SkStream*
  %35 = call %class.SkCodec* @_ZN7SkCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPNS_6ResultEP16SkPngChunkReaderNS_15SelectionPolicyE(%class.SkStream* %34, i32* nonnull %4, %class.SkPngChunkReader* null, i32 0) #8
  %36 = ptrtoint %class.SkCodec* %35 to i64
  %37 = load %class.SkCodec*, %class.SkCodec** %29, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.28"* %28 to i64*
  store i64 %36, i64* %38, align 8
  %39 = icmp eq %class.SkCodec* %37, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %32
  %41 = bitcast %class.SkCodec* %37 to void (%class.SkCodec*)***
  %42 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %42, i64 1
  %44 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %43, align 8
  call void %44(%class.SkCodec* nonnull %37) #8
  %45 = load %class.SkCodec*, %class.SkCodec** %29, align 8
  br label %46

46:                                               ; preds = %40, %32
  %47 = phi %class.SkCodec* [ %45, %40 ], [ %35, %32 ]
  %48 = icmp eq %class.SkCodec* %47, null
  br i1 %48, label %67, label %49

49:                                               ; preds = %46
  %50 = bitcast %class.SkCodec* %47 to i32 (%class.SkCodec*)***
  %51 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %51, i64 4
  %53 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %52, align 8
  %54 = call i32 %53(%class.SkCodec* nonnull %47) #8
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %49
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %7, align 8
  %57 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %class.SkCodec*, %class.SkCodec** %57, align 8
  store %class.SkCodec* null, %class.SkCodec** %57, align 8
  %59 = icmp eq %class.SkCodec* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = bitcast %class.SkCodec* %58 to void (%class.SkCodec*)***
  %62 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %62, i64 1
  %64 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %63, align 8
  call void %64(%class.SkCodec* nonnull %58) #8
  br label %65

65:                                               ; preds = %56, %60
  %66 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %66, align 2
  br label %166

67:                                               ; preds = %46, %49
  %68 = load i32, i32* %4, align 4
  switch i32 %68, label %155 [
    i32 0, label %69
    i32 1, label %140
  ]

69:                                               ; preds = %67
  %70 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #8
  %71 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1, i32 0
  %73 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1, i32 1
  %74 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  %75 = load %class.SkCodec*, %class.SkCodec** %29, align 8
  %76 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %75, i64 0, i32 1
  call void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* nonnull sret %5, %struct.SkEncodedInfo* %76) #8
  %77 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0
  %78 = load i32, i32* %72, align 8
  %79 = load i32, i32* %73, align 4
  %80 = bitcast %"class.blink::GIFImageDecoder"* %0 to i1 (%"class.blink::ImageDecoder"*)***
  %81 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %80, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %81, i64 3
  %83 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %82, align 8
  %84 = call zeroext i1 %83(%"class.blink::ImageDecoder"* %77) #8
  br i1 %84, label %85, label %90

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 4
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 1
  %89 = select i1 %88, i32 8, i32 4
  br label %90

90:                                               ; preds = %85, %69
  %91 = phi i32 [ 4, %69 ], [ %89, %85 ]
  %92 = lshr i32 %78, 31
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %117, label %94

94:                                               ; preds = %90
  %95 = icmp slt i32 %78, 0
  %96 = sub i32 0, %78
  %97 = select i1 %95, i32 %96, i32 %78
  %98 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %97, i32 %79) #8
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = add nuw nsw i32 %92, 2147483647
  %102 = icmp ugt i32 %100, %101
  %103 = or i1 %99, %102
  %104 = sub i32 0, %100
  %105 = select i1 %95, i32 %104, i32 %100
  br i1 %103, label %117, label %106

106:                                              ; preds = %94
  %107 = icmp slt i32 %105, 0
  %108 = sub i32 0, %105
  %109 = select i1 %107, i32 %108, i32 %105
  %110 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %109, i32 %91) #8
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = lshr i32 %105, 31
  %114 = add nuw i32 %113, 2147483647
  %115 = icmp ugt i32 %112, %114
  %116 = or i1 %111, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %106, %94, %90
  %118 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %80, align 8
  %119 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %118, i64 21
  %120 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %119, align 8
  %121 = call zeroext i1 %120(%"class.blink::ImageDecoder"* %77) #8
  br label %130

122:                                              ; preds = %106
  %123 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 12
  %124 = bitcast %"class.blink::IntSize"* %123 to i64*
  %125 = zext i32 %79 to i64
  %126 = shl nuw i64 %125, 32
  %127 = zext i32 %78 to i64
  %128 = or i64 %126, %127
  store i64 %128, i64* %124, align 4
  %129 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 13
  store i8 1, i8* %129, align 4
  br label %130

130:                                              ; preds = %117, %122
  %131 = load %class.SkColorSpace*, %class.SkColorSpace** %71, align 8
  %132 = icmp eq %class.SkColorSpace* %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = bitcast %class.SkColorSpace* %131 to i8*
  call void @_ZdlPv(i8* %138) #9
  br label %139

139:                                              ; preds = %130, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #8
  br label %166

140:                                              ; preds = %67
  %141 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 14
  %142 = load i8, i8* %141, align 1, !range !4
  %143 = icmp eq i8 %142, 0
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %7, align 8
  br i1 %143, label %166, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %146 = load %class.SkCodec*, %class.SkCodec** %145, align 8
  store %class.SkCodec* null, %class.SkCodec** %145, align 8
  %147 = icmp eq %class.SkCodec* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = bitcast %class.SkCodec* %146 to void (%class.SkCodec*)***
  %150 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %150, i64 1
  %152 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %151, align 8
  call void %152(%class.SkCodec* nonnull %146) #8
  br label %153

153:                                              ; preds = %144, %148
  %154 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %154, align 2
  br label %166

155:                                              ; preds = %67
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %7, align 8
  %156 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %157 = load %class.SkCodec*, %class.SkCodec** %156, align 8
  store %class.SkCodec* null, %class.SkCodec** %156, align 8
  %158 = icmp eq %class.SkCodec* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = bitcast %class.SkCodec* %157 to void (%class.SkCodec*)***
  %161 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %161, i64 1
  %163 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %162, align 8
  call void %163(%class.SkCodec* nonnull %157) #8
  br label %164

164:                                              ; preds = %155, %159
  %165 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %165, align 2
  br label %166

166:                                              ; preds = %140, %65, %139, %153, %164
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #8
  br label %175

167:                                              ; preds = %27
  %168 = icmp eq i64 %20, 0
  br i1 %168, label %175, label %169

169:                                              ; preds = %167
  %170 = inttoptr i64 %20 to %"class.blink::SegmentStream"*
  %171 = inttoptr i64 %20 to void (%"class.blink::SegmentStream"*)***
  %172 = load void (%"class.blink::SegmentStream"*)**, void (%"class.blink::SegmentStream"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::SegmentStream"*)*, void (%"class.blink::SegmentStream"*)** %172, i64 1
  %174 = load void (%"class.blink::SegmentStream"*)*, void (%"class.blink::SegmentStream"*)** %173, align 8
  call void %174(%"class.blink::SegmentStream"* nonnull %170) #8
  br label %175

175:                                              ; preds = %169, %167, %166, %10, %11
  ret void
}

declare void @_ZN5blink13SegmentStream9SetReaderE13scoped_refptrINS_13SegmentReaderEE(%"class.blink::SegmentStream"*, %"class.blink::SegmentReader"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %class.SkCodec* @_ZN7SkCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPNS_6ResultEP16SkPngChunkReaderNS_15SelectionPolicyE(%class.SkStream*, i32*, %class.SkPngChunkReader*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15GIFImageDecoder9SetFailedEv(%"class.blink::GIFImageDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 2
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  store %class.SkCodec* null, %class.SkCodec** %3, align 8
  %5 = icmp eq %class.SkCodec* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCodec* %4 to void (%class.SkCodec*)***
  %8 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %8, i64 1
  %10 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %9, align 8
  tail call void %10(%class.SkCodec* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %12, align 2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder7SetSizeEjj(%"class.blink::ImageDecoder"*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::ImageDecoder"* %0 to i1 (%"class.blink::ImageDecoder"*)***
  %5 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ImageDecoder"* %0) #8
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1
  %13 = select i1 %12, i32 8, i32 4
  br label %14

14:                                               ; preds = %9, %3
  %15 = phi i32 [ 4, %3 ], [ %13, %9 ]
  %16 = lshr i32 %1, 31
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = icmp slt i32 %1, 0
  %20 = sub i32 0, %1
  %21 = select i1 %19, i32 %20, i32 %1
  %22 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %21, i32 %2) #8
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = add nuw nsw i32 %16, 2147483647
  %26 = icmp ugt i32 %24, %25
  %27 = or i1 %23, %26
  %28 = sub i32 0, %24
  %29 = select i1 %19, i32 %28, i32 %24
  br i1 %27, label %41, label %30

30:                                               ; preds = %18
  %31 = icmp slt i32 %29, 0
  %32 = sub i32 0, %29
  %33 = select i1 %31, i32 %32, i32 %29
  %34 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %33, i32 %15) #8
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = lshr i32 %29, 31
  %38 = add nuw i32 %37, 2147483647
  %39 = icmp ugt i32 %36, %38
  %40 = or i1 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %14, %18, %30
  %42 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %4, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %42, i64 21
  %44 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::ImageDecoder"* %0) #8
  br label %54

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %48 = bitcast %"class.blink::IntSize"* %47 to i64*
  %49 = zext i32 %2 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %1 to i64
  %52 = or i64 %50, %51
  store i64 %52, i64* %48, align 4
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 13
  store i8 1, i8* %53, align 4
  br label %54

54:                                               ; preds = %46, %41
  %55 = phi i1 [ %45, %41 ], [ true, %46 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15GIFImageDecoder15RepetitionCountEv(%"class.blink::GIFImageDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %class.SkCodec*, %class.SkCodec** %2, align 8
  %4 = icmp eq %class.SkCodec* %3, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 2
  %7 = load %"class.blink::SegmentStream"*, %"class.blink::SegmentStream"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK5blink13SegmentStream9IsClearedEv(%"class.blink::SegmentStream"* %7) #8
  br i1 %8, label %36, label %9

9:                                                ; preds = %5
  %10 = load %class.SkCodec*, %class.SkCodec** %2, align 8
  %11 = bitcast %class.SkCodec* %10 to i32 (%class.SkCodec*)***
  %12 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %12, i64 16
  %14 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %13, align 8
  %15 = tail call i32 %14(%class.SkCodec* %10) #8
  switch i32 %15, label %34 [
    i32 0, label %16
    i32 -1, label %32
  ]

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 14
  %18 = load i8, i8* %17, align 1, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = load %class.SkCodec*, %class.SkCodec** %2, align 8
  %22 = bitcast %class.SkCodec* %21 to i32 (%class.SkCodec*)***
  %23 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %23, i64 14
  %25 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %24, align 8
  %26 = tail call i32 %25(%class.SkCodec* %21) #8
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 3
  store i32 -2, i32* %29, align 8
  br label %36

30:                                               ; preds = %16, %20
  %31 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 3
  store i32 0, i32* %31, align 8
  br label %36

32:                                               ; preds = %9
  %33 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 3
  store i32 -1, i32* %33, align 8
  br label %36

34:                                               ; preds = %9
  %35 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 3
  store i32 %15, i32* %35, align 8
  br label %36

36:                                               ; preds = %1, %28, %30, %32, %34, %5
  %37 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  ret i32 %38
}

declare zeroext i1 @_ZNK5blink13SegmentStream9IsClearedEv(%"class.blink::SegmentStream"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15GIFImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::GIFImageDecoder"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkCodec::FrameInfo", align 4
  %4 = bitcast %"struct.SkCodec::FrameInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -86, i64 44, i1 false)
  %5 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %class.SkCodec*, %class.SkCodec** %5, align 8
  %7 = icmp eq %class.SkCodec* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = trunc i64 %1 to i32
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %8
  %12 = bitcast %class.SkCodec* %6 to i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)***
  %13 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)**, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %13, i64 15
  %15 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %14, align 8
  %16 = call zeroext i1 %15(%class.SkCodec* nonnull %6, i32 %9, %"struct.SkCodec::FrameInfo"* nonnull %3) #8
  br i1 %16, label %17, label %21

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %3, i64 0, i32 2
  %19 = load i8, i8* %18, align 4, !range !4
  %20 = icmp ne i8 %19, 0
  br label %21

21:                                               ; preds = %2, %8, %11, %17
  %22 = phi i1 [ %20, %17 ], [ false, %11 ], [ false, %2 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %4) #8
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15GIFImageDecoder20FrameDurationAtIndexEm(%"class.blink::GIFImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = icmp ugt i64 %5, %1
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2
  %9 = trunc i64 %1 to i32
  %10 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %9) #8
  %11 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %10, i64 0, i32 6, i32 0
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ %12, %7 ], [ 0, %2 ]
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink15GIFImageDecoder21ClearCacheExceptFrameEm(%"class.blink::GIFImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %50, label %8

8:                                                ; preds = %2
  %9 = zext i32 %6 to i64
  %10 = icmp ugt i64 %9, %1
  br i1 %10, label %11, label %47

11:                                               ; preds = %8
  %12 = trunc i64 %1 to i32
  %13 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %12) #8
  %14 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 11
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 4294967295
  br i1 %16, label %47, label %17

17:                                               ; preds = %11
  %18 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %12) #8
  %19 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %18, i64 0, i32 5
  %20 = load i32, i32* %19, align 8
  %21 = or i32 %20, 1
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %47

27:                                               ; preds = %23, %17
  %28 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %12) #8
  %29 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %28, i64 0, i32 11
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %1, -1
  %32 = icmp eq i64 %31, %30
  br i1 %32, label %47, label %33

33:                                               ; preds = %27, %44
  %34 = phi i64 [ %45, %44 ], [ %31, %27 ]
  %35 = trunc i64 %34 to i32
  %36 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %35) #8
  %37 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %36, i64 0, i32 7
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 3
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %36, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 3
  br i1 %43, label %47, label %44

44:                                               ; preds = %40, %33
  %45 = add i64 %34, -1
  %46 = icmp eq i64 %45, %30
  br i1 %46, label %47, label %33

47:                                               ; preds = %44, %40, %27, %23, %11, %8
  %48 = phi i64 [ 4294967295, %8 ], [ 4294967295, %23 ], [ 4294967295, %11 ], [ 4294967295, %27 ], [ %34, %40 ], [ 4294967295, %44 ]
  %49 = tail call i64 @_ZN5blink12ImageDecoder25ClearCacheExceptTwoFramesEmm(%"class.blink::ImageDecoder"* %3, i64 %1, i64 %48) #8
  br label %50

50:                                               ; preds = %2, %47
  %51 = phi i64 [ %49, %47 ], [ 0, %2 ]
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1) #8
  %5 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 1
  %8 = icmp eq i32 %7, 3
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15GIFImageDecoder28GetViableReferenceFrameIndexEm(%"class.blink::GIFImageDecoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2
  %4 = trunc i64 %1 to i32
  %5 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %4) #8
  %6 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %5, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %1, -1
  %9 = icmp eq i64 %8, %7
  br i1 %9, label %24, label %10

10:                                               ; preds = %2, %21
  %11 = phi i64 [ %22, %21 ], [ %8, %2 ]
  %12 = trunc i64 %11 to i32
  %13 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %12) #8
  %14 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 7
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %24, label %21

21:                                               ; preds = %10, %17
  %22 = add i64 %11, -1
  %23 = icmp eq i64 %22, %7
  br i1 %23, label %24, label %10

24:                                               ; preds = %17, %21, %2
  %25 = phi i64 [ 4294967295, %2 ], [ 4294967295, %21 ], [ %11, %17 ]
  ret i64 %25
}

declare i64 @_ZN5blink12ImageDecoder25ClearCacheExceptTwoFramesEmm(%"class.blink::ImageDecoder"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink15GIFImageDecoder16DecodeFrameCountEv(%"class.blink::GIFImageDecoder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %class.SkCodec*, %class.SkCodec** %2, align 8
  %4 = icmp eq %class.SkCodec* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 2
  %7 = load %"class.blink::SegmentStream"*, %"class.blink::SegmentStream"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK5blink13SegmentStream9IsClearedEv(%"class.blink::SegmentStream"* %7) #8
  br i1 %8, label %9, label %13

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  br label %21

13:                                               ; preds = %5
  %14 = load %class.SkCodec*, %class.SkCodec** %2, align 8
  %15 = bitcast %class.SkCodec* %14 to i32 (%class.SkCodec*)***
  %16 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %16, i64 14
  %18 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %17, align 8
  %19 = tail call i32 %18(%class.SkCodec* %14) #8
  %20 = sext i32 %19 to i64
  br label %21

21:                                               ; preds = %13, %9
  %22 = phi i64 [ %12, %9 ], [ %20, %13 ]
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15GIFImageDecoder18InitializeNewFrameEm(%"class.blink::GIFImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkCodec::FrameInfo", align 4
  %4 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2
  %5 = trunc i64 %1 to i32
  %6 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %5) #8
  %7 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 12
  %8 = bitcast %"class.blink::IntSize"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 4
  %11 = bitcast %"class.blink::IntRect"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 4, i32 1
  %13 = bitcast %"class.blink::IntSize"* %12 to i64*
  store i64 %9, i64* %13, align 8
  %14 = bitcast %"struct.SkCodec::FrameInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 44, i1 false)
  %15 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %class.SkCodec*, %class.SkCodec** %15, align 8
  %17 = icmp slt i32 %5, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 6, i32 0
  store i64 -1431655766000, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 11
  store i64 -1431655766, i64* %20, align 8
  br label %43

21:                                               ; preds = %2
  %22 = bitcast %class.SkCodec* %16 to i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)***
  %23 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)**, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %23, i64 15
  %25 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %24, align 8
  %26 = call zeroext i1 %25(%class.SkCodec* %16, i32 %5, %"struct.SkCodec::FrameInfo"* nonnull %3) #8
  %27 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %3, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %3, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %3, i64 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %28 to i64
  %34 = mul nsw i64 %33, 1000
  %35 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 6, i32 0
  store i64 %34, i64* %35, align 8
  %36 = icmp eq i32 %30, -1
  %37 = sext i32 %30 to i64
  %38 = select i1 %36, i64 4294967295, i64 %37
  %39 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 11
  store i64 %38, i64* %39, align 8
  %40 = add i32 %32, -1
  %41 = icmp ult i32 %40, 3
  %42 = select i1 %41, i32 %32, i32 0
  br label %43

43:                                               ; preds = %21, %18
  %44 = phi i32 [ 0, %18 ], [ %42, %21 ]
  %45 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 7
  store i32 %44, i32* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder4SizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15GIFImageDecoder6DecodeEm(%"class.blink::GIFImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkCodec::FrameInfo", align 4
  %4 = alloca %class.sk_sp.1, align 8
  %5 = alloca %"struct.SkCodec::FrameInfo", align 4
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = alloca %class.sk_sp.1, align 8
  %9 = alloca %"struct.SkCodec::Options", align 8
  %10 = alloca %"struct.SkCodec::FrameInfo", align 4
  %11 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  %13 = icmp eq %class.SkCodec* %12, null
  br i1 %13, label %316, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 2
  %16 = load %"class.blink::SegmentStream"*, %"class.blink::SegmentStream"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK5blink13SegmentStream9IsClearedEv(%"class.blink::SegmentStream"* %16) #8
  br i1 %17, label %316, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2
  %21 = trunc i64 %1 to i32
  %22 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %21) #8
  %23 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %316, label %26

26:                                               ; preds = %18
  tail call void @_ZN5blink12ImageDecoder23UpdateAggressivePurgingEm(%"class.blink::ImageDecoder"* %19, i64 %1) #8
  %27 = load i32, i32* %23, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %103

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %22, i64 0, i32 11
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 4294967295
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 12
  %35 = bitcast %"class.blink::IntSize"* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = trunc i64 %36 to i32
  %38 = lshr i64 %36, 32
  %39 = trunc i64 %38 to i32
  call void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.1* nonnull sret %4, %"class.blink::ImageDecoder"* %19) #8
  %40 = call zeroext i1 @_ZN5blink10ImageFrame17AllocatePixelDataEii5sk_spI12SkColorSpaceE(%"class.blink::ImageFrame"* %22, i32 %37, i32 %39, %class.sk_sp.1* nonnull %4) #8
  %41 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8
  %43 = icmp eq %class.SkColorSpace* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = bitcast %class.SkColorSpace* %42 to i8*
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %33, %44, %48
  call void @_ZN5blink10ImageFrame17ZeroFillPixelDataEv(%"class.blink::ImageFrame"* %22) #8
  br label %99

51:                                               ; preds = %29
  %52 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %21) #8
  %53 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %52, i64 0, i32 11
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %1, -1
  %56 = icmp eq i64 %55, %54
  br i1 %56, label %73, label %57

57:                                               ; preds = %51, %68
  %58 = phi i64 [ %69, %68 ], [ %55, %51 ]
  %59 = trunc i64 %58 to i32
  %60 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %59) #8
  %61 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %60, i64 0, i32 7
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 3
  br i1 %63, label %68, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %60, i64 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 3
  br i1 %67, label %71, label %68

68:                                               ; preds = %64, %57
  %69 = add i64 %58, -1
  %70 = icmp eq i64 %69, %54
  br i1 %70, label %73, label %57

71:                                               ; preds = %64
  %72 = icmp eq i64 %58, 4294967295
  br i1 %72, label %73, label %77

73:                                               ; preds = %68, %51, %71
  tail call void @_ZN5blink15GIFImageDecoder6DecodeEm(%"class.blink::GIFImageDecoder"* %0, i64 %31)
  %74 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  %75 = load i8, i8* %74, align 2, !range !4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %316

77:                                               ; preds = %73, %71
  %78 = phi i64 [ %58, %71 ], [ %31, %73 ]
  %79 = trunc i64 %78 to i32
  %80 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %79) #8
  %81 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %21) #8
  %82 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %81, i64 0, i32 7
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 3
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = tail call zeroext i1 @_ZN5blink10ImageFrame24TakeBitmapDataIfWritableEPS0_(%"class.blink::ImageFrame"* %22, %"class.blink::ImageFrame"* %80) #8
  br i1 %86, label %99, label %87

87:                                               ; preds = %77, %85
  %88 = tail call zeroext i1 @_ZN5blink10ImageFrame14CopyBitmapDataERKS0_(%"class.blink::ImageFrame"* %22, %"class.blink::ImageFrame"* dereferenceable(128) %80) #8
  br i1 %88, label %99, label %89

89:                                               ; preds = %87
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %15, align 8
  %90 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  store %class.SkCodec* null, %class.SkCodec** %11, align 8
  %91 = icmp eq %class.SkCodec* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = bitcast %class.SkCodec* %90 to void (%class.SkCodec*)***
  %94 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %94, i64 1
  %96 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %95, align 8
  tail call void %96(%class.SkCodec* nonnull %90) #8
  br label %97

97:                                               ; preds = %89, %92
  %98 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %98, align 2
  br label %316

99:                                               ; preds = %87, %85, %50
  %100 = phi i32 [ -1, %50 ], [ %79, %85 ], [ %79, %87 ]
  %101 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 4
  store i32 %100, i32* %101, align 4
  %102 = load i32, i32* %23, align 8
  br label %103

103:                                              ; preds = %99, %26
  %104 = phi i32 [ %102, %99 ], [ %27, %26 ]
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %245

106:                                              ; preds = %103
  %107 = bitcast %"struct.SkCodec::FrameInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %107) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %107, i8 -86, i64 44, i1 false)
  %108 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  %109 = icmp slt i32 %21, 0
  br i1 %109, label %119, label %110

110:                                              ; preds = %106
  %111 = bitcast %class.SkCodec* %108 to i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)***
  %112 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)**, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*** %111, align 8
  %113 = getelementptr inbounds i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %112, i64 15
  %114 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %113, align 8
  %115 = call zeroext i1 %114(%class.SkCodec* %108, i32 %21, %"struct.SkCodec::FrameInfo"* nonnull %5) #8
  %116 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %5, i64 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %124, label %119

119:                                              ; preds = %106, %110
  %120 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !4
  %122 = icmp eq i8 %121, 0
  %123 = select i1 %122, i64 12884901888, i64 8589934592
  br label %124

124:                                              ; preds = %119, %110
  %125 = phi i64 [ 4294967296, %110 ], [ %123, %119 ]
  %126 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #8
  %127 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %129 = bitcast %struct.SkImageInfo* %7 to i8*
  %130 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #8
  %131 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  %132 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %131, i64 0, i32 1
  call void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* nonnull sret %7, %struct.SkEncodedInfo* %132) #8
  %133 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %134 = bitcast %struct.SkISize* %133 to i64*
  %135 = load i64, i64* %134, align 8, !noalias !5
  %136 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %137 = load %class.SkColorSpace*, %class.SkColorSpace** %136, align 8, !noalias !8
  %138 = icmp eq %class.SkColorSpace* %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %124
  %140 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 1 monotonic, !noalias !8
  br label %142

142:                                              ; preds = %124, %139
  call void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.1* nonnull sret %8, %"class.blink::ImageDecoder"* %19) #8
  %143 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %8, i64 0, i32 0
  %144 = bitcast %class.sk_sp.1* %8 to i64*
  %145 = load i64, i64* %144, align 8, !noalias !13
  store %class.SkColorSpace* null, %class.SkColorSpace** %143, align 8, !noalias !13
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = inttoptr i64 %145 to %class.SkColorSpace*
  %149 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 1 monotonic, !noalias !16
  %151 = or i64 %125, 6
  %152 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %145, i64* %152, align 8, !alias.scope !23
  %153 = bitcast i32* %128 to i64*
  store i64 %151, i64* %153, align 8, !alias.scope !23
  %154 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %155 = bitcast %struct.SkISize* %154 to i64*
  store i64 %135, i64* %155, align 8, !alias.scope !23
  %156 = atomicrmw add i32* %149, i32 -1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %166

158:                                              ; preds = %147
  %159 = inttoptr i64 %145 to i8*
  call void @_ZdlPv(i8* %159) #9
  br label %166

160:                                              ; preds = %142
  %161 = or i64 %125, 6
  %162 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 0, i64* %162, align 8, !alias.scope !23
  %163 = bitcast i32* %128 to i64*
  store i64 %161, i64* %163, align 8, !alias.scope !23
  %164 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %165 = bitcast %struct.SkISize* %164 to i64*
  store i64 %135, i64* %165, align 8, !alias.scope !23
  br label %166

166:                                              ; preds = %160, %147, %158
  %167 = load %class.SkColorSpace*, %class.SkColorSpace** %143, align 8
  %168 = icmp eq %class.SkColorSpace* %167, null
  br i1 %168, label %175, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 -1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  %174 = bitcast %class.SkColorSpace* %167 to i8*
  call void @_ZdlPv(i8* %174) #9
  br label %175

175:                                              ; preds = %166, %169, %173
  br i1 %138, label %182, label %176

176:                                              ; preds = %175
  %177 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw add i32* %177, i32 -1 acq_rel
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = bitcast %class.SkColorSpace* %137 to i8*
  call void @_ZdlPv(i8* %181) #9
  br label %182

182:                                              ; preds = %175, %176, %180
  %183 = load %class.SkColorSpace*, %class.SkColorSpace** %136, align 8
  %184 = icmp eq %class.SkColorSpace* %183, null
  br i1 %184, label %191, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = atomicrmw add i32* %186, i32 -1 acq_rel
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %189, label %191

189:                                              ; preds = %185
  %190 = bitcast %class.SkColorSpace* %183 to i8*
  call void @_ZdlPv(i8* %190) #9
  br label %191

191:                                              ; preds = %182, %185, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #8
  %192 = bitcast %"struct.SkCodec::Options"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #8
  %193 = bitcast %"struct.SkCodec::Options"* %9 to i64*
  store i64 -6148914691236517206, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %9, i64 0, i32 0
  %195 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %9, i64 0, i32 1
  store %struct.SkIRect* null, %struct.SkIRect** %195, align 8
  %196 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %9, i64 0, i32 2
  %197 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %9, i64 0, i32 3
  store i32 %21, i32* %196, align 8
  %198 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 4
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %197, align 4
  store i32 1, i32* %194, align 8
  %200 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  %201 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %22, i64 0, i32 0, i32 1, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %22, i64 0, i32 0, i32 1, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = call i32 @_ZN7SkCodec22startIncrementalDecodeERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec* %200, %struct.SkImageInfo* nonnull dereferenceable(24) %6, i8* %202, i64 %204, %"struct.SkCodec::Options"* nonnull %9) #8
  switch i32 %205, label %206 [
    i32 0, label %225
    i32 1, label %235
  ]

206:                                              ; preds = %191
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %15, align 8
  %207 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  store %class.SkCodec* null, %class.SkCodec** %11, align 8
  %208 = icmp eq %class.SkCodec* %207, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %206
  %210 = bitcast %class.SkCodec* %207 to void (%class.SkCodec*)***
  %211 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %210, align 8
  %212 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %211, i64 1
  %213 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %212, align 8
  call void %213(%class.SkCodec* nonnull %207) #8
  br label %214

214:                                              ; preds = %206, %209
  %215 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %215, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #8
  %216 = load %class.SkColorSpace*, %class.SkColorSpace** %127, align 8
  %217 = icmp eq %class.SkColorSpace* %216, null
  br i1 %217, label %224, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = atomicrmw add i32* %219, i32 -1 acq_rel
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %224

222:                                              ; preds = %218
  %223 = bitcast %class.SkColorSpace* %216 to i8*
  call void @_ZdlPv(i8* %223) #9
  br label %224

224:                                              ; preds = %214, %218, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #8
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %107) #8
  br label %316

225:                                              ; preds = %191
  call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %22, i32 2) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #8
  %226 = load %class.SkColorSpace*, %class.SkColorSpace** %127, align 8
  %227 = icmp eq %class.SkColorSpace* %226, null
  br i1 %227, label %234, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = atomicrmw add i32* %229, i32 -1 acq_rel
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %234

232:                                              ; preds = %228
  %233 = bitcast %class.SkColorSpace* %226 to i8*
  call void @_ZdlPv(i8* %233) #9
  br label %234

234:                                              ; preds = %225, %228, %232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #8
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %107) #8
  br label %245

235:                                              ; preds = %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #8
  %236 = load %class.SkColorSpace*, %class.SkColorSpace** %127, align 8
  %237 = icmp eq %class.SkColorSpace* %236, null
  br i1 %237, label %244, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = atomicrmw add i32* %239, i32 -1 acq_rel
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = bitcast %class.SkColorSpace* %236 to i8*
  call void @_ZdlPv(i8* %243) #9
  br label %244

244:                                              ; preds = %235, %238, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #8
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %107) #8
  br label %316

245:                                              ; preds = %234, %103
  %246 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  %247 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %246, i64 0, i32 15
  %248 = load i8, i8* %247, align 8, !range !4
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %305, label %250

250:                                              ; preds = %245
  %251 = bitcast %class.SkCodec* %246 to i32 (%class.SkCodec*, i32*)***
  %252 = load i32 (%class.SkCodec*, i32*)**, i32 (%class.SkCodec*, i32*)*** %251, align 8
  %253 = getelementptr inbounds i32 (%class.SkCodec*, i32*)*, i32 (%class.SkCodec*, i32*)** %252, i64 20
  %254 = load i32 (%class.SkCodec*, i32*)*, i32 (%class.SkCodec*, i32*)** %253, align 8
  %255 = call i32 %254(%class.SkCodec* %246, i32* null) #8
  switch i32 %255, label %305 [
    i32 0, label %256
    i32 1, label %273
  ]

256:                                              ; preds = %250
  %257 = bitcast %"struct.SkCodec::FrameInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %257) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %257, i8 -86, i64 44, i1 false)
  %258 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  %259 = icmp slt i32 %21, 0
  br i1 %259, label %269, label %260

260:                                              ; preds = %256
  %261 = bitcast %class.SkCodec* %258 to i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)***
  %262 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)**, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*** %261, align 8
  %263 = getelementptr inbounds i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %262, i64 15
  %264 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %263, align 8
  %265 = call zeroext i1 %264(%class.SkCodec* %258, i32 %21, %"struct.SkCodec::FrameInfo"* nonnull %10) #8
  %266 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %10, i64 0, i32 3
  %267 = load i32, i32* %266, align 4
  %268 = icmp ne i32 %267, 1
  br label %269

269:                                              ; preds = %256, %260
  %270 = phi i1 [ true, %256 ], [ %268, %260 ]
  call void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"* %22, i1 zeroext %270) #8
  %271 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %22, i64 0, i32 10
  store i8 1, i8* %271, align 1
  call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %22, i32 3) #8
  %272 = call zeroext i1 @_ZN5blink12ImageDecoder20PostDecodeProcessingEm(%"class.blink::ImageDecoder"* %19, i64 %1) #8
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %257) #8
  br label %316

273:                                              ; preds = %250
  %274 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %22, i64 0, i32 10
  store i8 1, i8* %274, align 1
  %275 = bitcast %"struct.SkCodec::FrameInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %275) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %275, i8 -86, i64 44, i1 false) #8
  %276 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  %277 = icmp eq %class.SkCodec* %276, null
  %278 = icmp slt i32 %21, 0
  %279 = or i1 %278, %277
  br i1 %279, label %286, label %280

280:                                              ; preds = %273
  %281 = bitcast %class.SkCodec* %276 to i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)***
  %282 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)**, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*** %281, align 8
  %283 = getelementptr inbounds i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %282, i64 15
  %284 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %283, align 8
  %285 = call zeroext i1 %284(%class.SkCodec* nonnull %276, i32 %21, %"struct.SkCodec::FrameInfo"* nonnull %3) #8
  br i1 %285, label %287, label %286

286:                                              ; preds = %280, %273
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %275) #8
  br label %291

287:                                              ; preds = %280
  %288 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %3, i64 0, i32 2
  %289 = load i8, i8* %288, align 4, !range !4
  %290 = icmp eq i8 %289, 0
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %275) #8
  br i1 %290, label %291, label %295

291:                                              ; preds = %287, %286
  %292 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 14
  %293 = load i8, i8* %292, align 1, !range !4
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %316, label %295

295:                                              ; preds = %287, %291
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %15, align 8
  %296 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  store %class.SkCodec* null, %class.SkCodec** %11, align 8
  %297 = icmp eq %class.SkCodec* %296, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %295
  %299 = bitcast %class.SkCodec* %296 to void (%class.SkCodec*)***
  %300 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %299, align 8
  %301 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %300, i64 1
  %302 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %301, align 8
  call void %302(%class.SkCodec* nonnull %296) #8
  br label %303

303:                                              ; preds = %295, %298
  %304 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %304, align 2
  br label %316

305:                                              ; preds = %245, %250
  %306 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %22, i64 0, i32 10
  store i8 1, i8* %306, align 1
  store %"class.blink::SegmentStream"* null, %"class.blink::SegmentStream"** %15, align 8
  %307 = load %class.SkCodec*, %class.SkCodec** %11, align 8
  store %class.SkCodec* null, %class.SkCodec** %11, align 8
  %308 = icmp eq %class.SkCodec* %307, null
  br i1 %308, label %314, label %309

309:                                              ; preds = %305
  %310 = bitcast %class.SkCodec* %307 to void (%class.SkCodec*)***
  %311 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %310, align 8
  %312 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %311, i64 1
  %313 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %312, align 8
  call void %313(%class.SkCodec* nonnull %307) #8
  br label %314

314:                                              ; preds = %305, %309
  %315 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %315, align 2
  br label %316

316:                                              ; preds = %73, %291, %2, %97, %18, %224, %244, %303, %314, %269, %14
  ret void
}

declare void @_ZN5blink12ImageDecoder23UpdateAggressivePurgingEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink10ImageFrame17AllocatePixelDataEii5sk_spI12SkColorSpaceE(%"class.blink::ImageFrame"*, i32, i32, %class.sk_sp.1*) local_unnamed_addr #1

declare void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.1* sret, %"class.blink::ImageDecoder"*) local_unnamed_addr #1

declare void @_ZN5blink10ImageFrame17ZeroFillPixelDataEv(%"class.blink::ImageFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15GIFImageDecoder27CanReusePreviousFrameBufferEm(%"class.blink::GIFImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GIFImageDecoder", %"class.blink::GIFImageDecoder"* %0, i64 0, i32 0, i32 2
  %4 = trunc i64 %1 to i32
  %5 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %4) #8
  %6 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %5, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 3
  ret i1 %8
}

declare zeroext i1 @_ZN5blink10ImageFrame24TakeBitmapDataIfWritableEPS0_(%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink10ImageFrame14CopyBitmapDataERKS0_(%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"* dereferenceable(128)) local_unnamed_addr #1

declare i32 @_ZN7SkCodec22startIncrementalDecodeERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"*) local_unnamed_addr #1

declare void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"*, i32) local_unnamed_addr #1

declare void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink12ImageDecoder20PostDecodeProcessingEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink15GIFImageDecoder17FilenameExtensionEv(%"class.blink::GIFImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #8
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv(%"class.WTF::Vector.60"* noalias sret, %"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.60"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder11DecodedSizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %3 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %3, i64 5
  %5 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::ImageDecoder"* %0) #8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i32 6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i32 10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i8 8
}

declare void @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* sret, %"class.blink::ImageDecoder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %4 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, i64 5
  %6 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %5, align 8
  %7 = tail call i64 %6(%"class.blink::ImageDecoder"* %0) #8
  ret i64 %7
}

declare zeroext i1 @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

declare i64 @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE(%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE(%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %0) #8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7, %2
  %11 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0) #8
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %11, i64 0, i32 1
  store %"class.SkBitmap::Allocator"* %1, %"class.SkBitmap::Allocator"** %12, align 8
  br label %13

13:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder11DecodeToYUVEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12ImageDecoder16ClearFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15GIFImageDecoder10DecodeSizeEv(%"class.blink::GIFImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder17OnInitFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::ImageFrame"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::ImageFrame"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* noalias sret, %struct.SkEncodedInfo*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.1, align 8
  %4 = alloca %class.sk_sp.1, align 8
  %5 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %7 [
    i32 0, label %11
    i32 2, label %10
  ]

7:                                                ; preds = %2
  %8 = icmp eq i32 %6, 3
  %9 = select i1 %8, i64 2, i64 6
  br label %11

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %2, %10, %7
  %12 = phi i64 [ 11, %2 ], [ %9, %7 ], [ 1, %10 ]
  %13 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i64 4294967296, i64 12884901888
  %17 = bitcast %class.sk_sp.1* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %18, align 8
  %19 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %19, align 8
  %21 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  store %class.SkColorSpace* null, %class.SkColorSpace** %18, align 8
  br label %29

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %20, i64 0, i32 0
  call void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.1* nonnull sret %3, %struct.skcms_ICCProfile* dereferenceable(1008) %24) #8
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %class.SkColorSpace* %25 to i64
  br label %54

29:                                               ; preds = %23, %22
  %30 = bitcast %class.sk_sp.1* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.1* nonnull sret %4) #8
  %31 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %32 = bitcast %class.sk_sp.1* %4 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %31, align 8
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %35 = bitcast %class.sk_sp.1* %3 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.SkColorSpace* %34, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %37, %41
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %29, %43, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %53 = load i64, i64* %35, align 8
  br label %54

54:                                               ; preds = %52, %27
  %55 = phi i64 [ %28, %27 ], [ %53, %52 ]
  %56 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = or i64 %16, %12
  %61 = zext i32 %59 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %57 to i64
  %64 = or i64 %62, %63
  %65 = bitcast %struct.SkImageInfo* %0 to i64*
  store i64 %55, i64* %65, align 8, !alias.scope !26
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  store i64 %60, i64* %67, align 8, !alias.scope !26
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %64, i64* %69, align 8, !alias.scope !26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  ret void
}

declare void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.1* sret, %struct.skcms_ICCProfile* dereferenceable(1008)) local_unnamed_addr #1

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.1* sret) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink13SegmentStreamC1Ev(%"class.blink::SegmentStream"*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!8 = !{!9, !11, !6}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!11 = distinct !{!11, !12, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!12 = distinct !{!12, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!15 = distinct !{!15, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!18 = distinct !{!18, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!19 = distinct !{!19, !20, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!20 = distinct !{!20, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!21 = distinct !{!21, !22, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!22 = distinct !{!22, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!25 = distinct !{!25, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!28 = distinct !{!28, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
