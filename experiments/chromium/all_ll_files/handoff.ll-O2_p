; ModuleID = '../../third_party/boringssl/src/ssl/handoff.cc'
source_filename = "../../third_party/boringssl/src/ssl/handoff.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.58", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray.82", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.84", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.56", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.39, i16, [2 x i8], %"class.std::__1::unique_ptr.40", [2 x %"class.std::__1::unique_ptr.45"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.57", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.63", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.70", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.39 = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.50", %"class.bssl::internal::StackAllocated.55" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.55" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.57" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray", i32, [4 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.66" }
%"class.bssl::Array.66" = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.84", %"class.bssl::GrowableArray.114", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.63", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.56", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.114" = type { i64, %"class.bssl::Array.115" }
%"class.bssl::Array.115" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.bssl::GrowableArray.82" = type { i64, %"class.bssl::Array.83" }
%"class.bssl::Array.83" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.bssl::Array.56" = type { i16*, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.40", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.96", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.58", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.101"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %struct.ssl_ctx_st* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"struct.bssl::NamedGroup" = type { i32, i16, [8 x i8], [11 x i8] }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"class.bssl::internal::StackAllocated.118" = type { %struct.cbb_st }

$sk_SSL_CIPHER_call_cmp_func = comdat any

@.str = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/handoff.cc\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21SSL_serialize_handoffEPK6ssl_stP6cbb_stP22ssl_early_callback_ctx(%struct.ssl_st*, %struct.cbb_st*, %struct.ssl_early_callback_ctx*) local_unnamed_addr #0 {
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %"struct.bssl::SSLMessage", align 8
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %9 = load i8, i8* %8, align 4
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %65, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 34, i32 0, i32 0, i32 0
  %14 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %13, align 8
  %15 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %14, null
  br i1 %15, label %65, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 17
  br i1 %19, label %20, label %65

20:                                               ; preds = %16
  %21 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %22 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 40, i1 false)
  %23 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %14, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %24 = load %struct.buf_mem_st*, %struct.buf_mem_st** %23, align 8
  %25 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %24, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %24, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = call i32 @CBB_add_asn1(%struct.cbb_st* %1, %struct.cbb_st* nonnull %4, i32 536870928) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %63, label %31

31:                                               ; preds = %20
  %32 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %4, i64 0) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %63, label %34

34:                                               ; preds = %31
  %35 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %4, i8* %26, i64 %28) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %63, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 25, i32 0, i32 0, i32 0
  %39 = load %struct.buf_mem_st*, %struct.buf_mem_st** %38, align 8
  %40 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %39, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %39, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %4, i8* %41, i64 %43) #8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %63, label %46

46:                                               ; preds = %37
  %47 = call fastcc zeroext i1 @_ZN4bsslL18serialize_featuresEP6cbb_st(%struct.cbb_st* nonnull %4)
  br i1 %47, label %48, label %63

48:                                               ; preds = %46
  %49 = call i32 @CBB_flush(%struct.cbb_st* %1) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %63, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %53 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %52, align 8
  %54 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %53, i64 0, i32 3
  %55 = load i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)** %54, align 8
  %56 = call zeroext i1 %55(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull %5) #8
  br i1 %56, label %57, label %63

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %5, i64 0, i32 2, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %5, i64 0, i32 2, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = call zeroext i1 @_ZN4bssl21ssl_client_hello_initEPK6ssl_stP22ssl_early_callback_ctxNS_4SpanIKhEE(%struct.ssl_st* %0, %struct.ssl_early_callback_ctx* %2, i8* %59, i64 %61) #8
  br label %63

63:                                               ; preds = %57, %51, %46, %20, %31, %34, %37, %48
  %64 = phi i1 [ false, %48 ], [ false, %37 ], [ false, %34 ], [ false, %31 ], [ false, %20 ], [ false, %46 ], [ false, %51 ], [ %62, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8
  br label %65

65:                                               ; preds = %12, %3, %16, %63
  %66 = phi i1 [ %64, %63 ], [ false, %16 ], [ false, %3 ], [ false, %12 ]
  ret i1 %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_add_asn1_octet_string(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL18serialize_featuresEP6cbb_st(%struct.cbb_st*) unnamed_addr #0 {
  %2 = alloca %struct.cbb_st, align 8
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = bitcast %struct.cbb_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %2, i32 4) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %57, label %8

8:                                                ; preds = %1
  %9 = call { %struct.ssl_cipher_st*, i64 } @_ZN4bssl10AllCiphersEv() #8
  %10 = extractvalue { %struct.ssl_cipher_st*, i64 } %9, 0
  %11 = extractvalue { %struct.ssl_cipher_st*, i64 } %9, 1
  %12 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %10, i64 %11
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %24, label %16

14:                                               ; preds = %16
  %15 = icmp eq %struct.ssl_cipher_st* %23, %12
  br i1 %15, label %24, label %16

16:                                               ; preds = %8, %14
  %17 = phi %struct.ssl_cipher_st* [ %23, %14 ], [ %10, %8 ]
  %18 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = trunc i32 %19 to i16
  %21 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %2, i16 zeroext %20) #8
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %17, i64 1
  br i1 %22, label %57, label %14

24:                                               ; preds = %14, %8
  %25 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  %26 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 4) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %55, label %28

28:                                               ; preds = %24
  %29 = call { %"struct.bssl::NamedGroup"*, i64 } @_ZN4bssl11NamedGroupsEv() #8
  %30 = extractvalue { %"struct.bssl::NamedGroup"*, i64 } %29, 0
  %31 = extractvalue { %"struct.bssl::NamedGroup"*, i64 } %29, 1
  %32 = getelementptr inbounds %"struct.bssl::NamedGroup", %"struct.bssl::NamedGroup"* %30, i64 %31
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %43, label %36

34:                                               ; preds = %36
  %35 = icmp eq %"struct.bssl::NamedGroup"* %42, %32
  br i1 %35, label %43, label %36

36:                                               ; preds = %28, %34
  %37 = phi %"struct.bssl::NamedGroup"* [ %42, %34 ], [ %30, %28 ]
  %38 = getelementptr inbounds %"struct.bssl::NamedGroup", %"struct.bssl::NamedGroup"* %37, i64 0, i32 1
  %39 = load i16, i16* %38, align 4
  %40 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext %39) #8
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"struct.bssl::NamedGroup", %"struct.bssl::NamedGroup"* %37, i64 1
  br i1 %41, label %55, label %34

43:                                               ; preds = %34, %28
  %44 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 32, i1 false)
  %45 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %4, i32 -2147483648) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext 17513) #8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = call i32 @CBB_flush(%struct.cbb_st* %0) #8
  %52 = icmp ne i32 %51, 0
  br label %53

53:                                               ; preds = %43, %47, %50
  %54 = phi i1 [ %52, %50 ], [ false, %47 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  br label %55

55:                                               ; preds = %36, %24, %53
  %56 = phi i1 [ %54, %53 ], [ false, %24 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #8
  br label %57

57:                                               ; preds = %16, %55, %1
  %58 = phi i1 [ false, %1 ], [ %56, %55 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret i1 %58
}

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl21ssl_client_hello_initEPK6ssl_stP22ssl_early_callback_ctxNS_4SpanIKhEE(%struct.ssl_st*, %struct.ssl_early_callback_ctx*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl19SSL_decline_handoffEP6ssl_st(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %9, align 8
  %11 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 16
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 17
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %10, i64 0, i32 1
  %18 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %17, align 8
  %19 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %18, i64 0, i32 23
  %20 = load i16, i16* %19, align 1
  %21 = and i16 %20, -65
  store i16 %21, i16* %19, align 1
  br label %22

22:                                               ; preds = %8, %1, %12, %16
  %23 = phi i1 [ true, %16 ], [ false, %12 ], [ false, %1 ], [ false, %8 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl17SSL_apply_handoffEP6ssl_stNS_4SpanIKhEE(%struct.ssl_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %10 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %10, i64 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %99

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %16, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %17, align 8
  %19 = icmp eq %"struct.bssl::CERT"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %18, i64 0, i32 15, i32 0, i32 0, i32 0
  %22 = load %"struct.bssl::DC"*, %"struct.bssl::DC"** %21, align 8
  %23 = icmp eq %"struct.bssl::DC"* %22, null
  br i1 %23, label %24, label %99

24:                                               ; preds = %14, %20
  %25 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %16, i64 0, i32 18, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %99

28:                                               ; preds = %24
  %29 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8
  %30 = bitcast %struct.cbs_st* %5 to i8*
  %31 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  %32 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %33 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  store i8* %1, i8** %32, align 8
  store i64 %2, i64* %33, align 8
  %34 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  store i64 -6148914691236517206, i64* %6, align 8
  %35 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %4, i32 536870928) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %97, label %37

37:                                               ; preds = %28
  %38 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %4, i64* nonnull %6) #8
  %39 = icmp eq i32 %38, 0
  %40 = load i64, i64* %6, align 8
  %41 = icmp ne i64 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %97, label %43

43:                                               ; preds = %37
  %44 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #8
  %45 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %7, i64 0, i32 0
  %46 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %7, i64 0, i32 1
  %47 = bitcast %struct.cbs_st* %8 to i8*
  %48 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #8
  %49 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %50 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %7, i32 4) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %95, label %52

52:                                               ; preds = %43
  %53 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %8, i32 4) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %95, label %55

55:                                               ; preds = %52
  %56 = call fastcc zeroext i1 @_ZN4bsslL21apply_remote_featuresEP6ssl_stP6cbs_st(%struct.ssl_st* %0, %struct.cbs_st* nonnull %4)
  br i1 %56, label %57, label %95

57:                                               ; preds = %55
  call void @SSL_set_accept_state(%struct.ssl_st* %0) #8
  %58 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %59 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %58, align 8
  %60 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 23
  %61 = load i16, i16* %60, align 1
  %62 = or i16 %61, 20
  store i16 %62, i16* %60, align 1
  %63 = call %struct.buf_mem_st* @BUF_MEM_new() #8
  %64 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 25, i32 0, i32 0, i32 0
  %65 = load %struct.buf_mem_st*, %struct.buf_mem_st** %64, align 8
  store %struct.buf_mem_st* %63, %struct.buf_mem_st** %64, align 8
  %66 = icmp eq %struct.buf_mem_st* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %57
  call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %65) #8
  %68 = load %struct.buf_mem_st*, %struct.buf_mem_st** %64, align 8
  br label %69

69:                                               ; preds = %57, %67
  %70 = phi %struct.buf_mem_st* [ %63, %57 ], [ %68, %67 ]
  %71 = icmp eq %struct.buf_mem_st* %70, null
  br i1 %71, label %95, label %72

72:                                               ; preds = %69
  %73 = call i8* @CBS_data(%struct.cbs_st* nonnull %8) #8
  %74 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #8
  %75 = call i32 @BUF_MEM_append(%struct.buf_mem_st* nonnull %70, i8* %73, i64 %74) #8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %95, label %77

77:                                               ; preds = %72
  %78 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 34, i32 0, i32 0, i32 0
  %82 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %81, align 8
  %83 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %82, i64 0, i32 20
  %84 = load i8*, i8** %45, align 8
  %85 = load i64, i64* %46, align 8
  %86 = call zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"* %83, i8* %84, i64 %85) #8
  %87 = load i16, i16* %60, align 1
  %88 = or i16 %87, 8
  store i16 %88, i16* %60, align 1
  br label %89

89:                                               ; preds = %77, %80
  %90 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 34, i32 0, i32 0, i32 0
  %91 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %90, align 8
  %92 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %91, i64 0, i32 46
  %93 = load i32, i32* %92, align 8
  %94 = or i32 %93, 4194304
  store i32 %94, i32* %92, align 8
  br label %95

95:                                               ; preds = %69, %89, %72, %55, %43, %52
  %96 = phi i1 [ false, %52 ], [ false, %43 ], [ false, %55 ], [ true, %89 ], [ false, %72 ], [ false, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #8
  br label %97

97:                                               ; preds = %37, %28, %95
  %98 = phi i1 [ %96, %95 ], [ false, %28 ], [ false, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8
  br label %99

99:                                               ; preds = %24, %3, %20, %97
  %100 = phi i1 [ %98, %97 ], [ false, %24 ], [ false, %20 ], [ false, %3 ]
  ret i1 %100
}

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL21apply_remote_featuresEP6ssl_stP6cbs_st(%struct.ssl_st*, %struct.cbs_st*) unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca i16, align 2
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i16, align 2
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca i16, align 2
  %9 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = call i32 @CBS_get_asn1(%struct.cbs_st* %1, %struct.cbs_st* nonnull %3, i32 4) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %265, label %13

13:                                               ; preds = %2
  %14 = call %struct.stack_st* @sk_new_null() #8
  %15 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %13
  %18 = bitcast i16* %4 to i8*
  br label %19

19:                                               ; preds = %17, %31
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #8
  store i16 -21846, i16* %4, align 2
  %20 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %3, i16* nonnull %4) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = load i16, i16* %4, align 2
  %24 = call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %23) #8
  %25 = icmp eq %struct.ssl_cipher_st* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %struct.ssl_cipher_st* %24 to i8*
  %28 = call i64 @sk_push(%struct.stack_st* %14, i8* nonnull %27) #8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %19, %26
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #8
  br label %261

31:                                               ; preds = %26, %22
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #8
  %32 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %19

34:                                               ; preds = %31, %13
  %35 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %37 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %36, i64 0, i32 5, i32 0, i32 0, i32 0
  %38 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %37, align 8
  %39 = icmp eq %"struct.bssl::SSLCipherPreferenceList"* %38, null
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %42 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %41, align 8
  %43 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %42, i64 0, i32 7, i32 0, i32 0, i32 0
  %44 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %43, align 8
  br label %45

45:                                               ; preds = %34, %40
  %46 = phi %"struct.bssl::SSLCipherPreferenceList"* [ %44, %40 ], [ %38, %34 ]
  %47 = bitcast %"struct.bssl::SSLCipherPreferenceList"* %46 to %struct.stack_st**
  %48 = load %struct.stack_st*, %struct.stack_st** %47, align 8
  %49 = call %struct.stack_st* @sk_new_null() #8
  %50 = call i64 @sk_num(%struct.stack_st* %48) #8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %45, %60
  %53 = phi i64 [ %61, %60 ], [ 0, %45 ]
  %54 = call i8* @sk_value(%struct.stack_st* %48, i64 %53) #8
  %55 = call i32 @sk_find(%struct.stack_st* %14, i64* null, i8* %54, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_SSL_CIPHER_call_cmp_func) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = call i64 @sk_push(%struct.stack_st* %49, i8* %54) #8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %257, label %60

60:                                               ; preds = %52, %57
  %61 = add nuw i64 %53, 1
  %62 = icmp eq i64 %61, %50
  br i1 %62, label %63, label %52

63:                                               ; preds = %60, %45
  %64 = call i64 @sk_num(%struct.stack_st* %49) #8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %97, label %66

66:                                               ; preds = %63
  %67 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %68 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %67, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %68, align 8
  %70 = icmp eq %"struct.bssl::SSLCipherPreferenceList"* %69, null
  br i1 %70, label %71, label %97

71:                                               ; preds = %66
  %72 = call i8* @OPENSSL_malloc(i64 16) #8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #8
  br label %77

75:                                               ; preds = %71
  %76 = bitcast i8* %72 to %"struct.bssl::SSLCipherPreferenceList"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 16, i1 false) #8
  br label %77

77:                                               ; preds = %74, %75
  %78 = phi %"struct.bssl::SSLCipherPreferenceList"* [ null, %74 ], [ %76, %75 ]
  %79 = ptrtoint %"struct.bssl::SSLCipherPreferenceList"* %78 to i64
  %80 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %81 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %80, i64 0, i32 5
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %82, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.5"* %81 to i64*
  store i64 %79, i64* %84, align 8
  %85 = icmp eq %"struct.bssl::SSLCipherPreferenceList"* %83, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %77
  call void @_ZN4bssl23SSLCipherPreferenceListD1Ev(%"struct.bssl::SSLCipherPreferenceList"* nonnull %83) #8
  %87 = bitcast %"struct.bssl::SSLCipherPreferenceList"* %83 to i8*
  call void @OPENSSL_free(i8* nonnull %87) #8
  br label %88

88:                                               ; preds = %86, %77
  %89 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %90 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %89, i64 0, i32 5, i32 0, i32 0, i32 0
  %91 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %90, align 8
  %92 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %93 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %92, align 8
  %94 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %93, i64 0, i32 7, i32 0, i32 0, i32 0
  %95 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %94, align 8
  %96 = call zeroext i1 @_ZN4bssl23SSLCipherPreferenceList4InitERKS0_(%"struct.bssl::SSLCipherPreferenceList"* %91, %"struct.bssl::SSLCipherPreferenceList"* dereferenceable(16) %95) #8
  br i1 %96, label %97, label %257

97:                                               ; preds = %66, %63, %88
  %98 = call i64 @sk_num(%struct.stack_st* %49) #8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %105, %97
  %101 = call %struct.stack_st_SSL_CIPHER* @SSL_get_ciphers(%struct.ssl_st* %0) #8
  %102 = bitcast %struct.stack_st_SSL_CIPHER* %101 to %struct.stack_st*
  %103 = call i64 @sk_num(%struct.stack_st* %102) #8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %257, label %114

105:                                              ; preds = %97, %105
  %106 = phi i64 [ %112, %105 ], [ 0, %97 ]
  %107 = call i8* @sk_value(%struct.stack_st* %49, i64 %106) #8
  %108 = bitcast i8* %107 to %struct.ssl_cipher_st*
  %109 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %110 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %109, i64 0, i32 5, i32 0, i32 0, i32 0
  %111 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %110, align 8
  call void @_ZN4bssl23SSLCipherPreferenceList6RemoveEPK13ssl_cipher_st(%"struct.bssl::SSLCipherPreferenceList"* %111, %struct.ssl_cipher_st* %108) #8
  %112 = add nuw i64 %106, 1
  %113 = icmp eq i64 %112, %98
  br i1 %113, label %100, label %105

114:                                              ; preds = %100
  %115 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #8
  %116 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 16, i1 false)
  %117 = call i32 @CBS_get_asn1(%struct.cbs_st* %1, %struct.cbs_st* nonnull %5, i32 4) #8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %255, label %119

119:                                              ; preds = %114
  %120 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #8
  %121 = lshr i64 %120, 1
  call void @OPENSSL_free(i8* null) #8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = and i64 %120, -2
  %125 = call i8* @OPENSSL_malloc(i64 %124) #8
  %126 = bitcast i8* %125 to i16*
  %127 = icmp eq i8* %125, null
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %252

129:                                              ; preds = %123, %119
  %130 = phi i8* [ null, %119 ], [ %125, %123 ]
  %131 = phi i16* [ null, %119 ], [ %126, %123 ]
  %132 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = bitcast i16* %6 to i8*
  br label %136

136:                                              ; preds = %134, %141
  %137 = phi i64 [ 0, %134 ], [ %143, %141 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %135) #8
  store i16 -21846, i16* %6, align 2
  %138 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %5, i16* nonnull %6) #8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %135) #8
  br label %252

141:                                              ; preds = %136
  %142 = load i16, i16* %6, align 2
  %143 = add i64 %137, 1
  %144 = getelementptr inbounds i16, i16* %131, i64 %137
  store i16 %142, i16* %144, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %135) #8
  %145 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %136

147:                                              ; preds = %141, %129
  %148 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %149 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %148, align 8
  %150 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %149, i64 0, i32 34, i32 0, i32 0, i32 0
  %151 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %150, align 8
  %152 = call { i16*, i64 } @_ZN4bssl18tls1_get_grouplistEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %151) #8
  %153 = extractvalue { i16*, i64 } %152, 0
  %154 = extractvalue { i16*, i64 } %152, 1
  call void @OPENSSL_free(i8* null) #8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %248, label %156

156:                                              ; preds = %147
  %157 = icmp slt i64 %154, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %156
  call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 319) #8
  br label %248

159:                                              ; preds = %156
  %160 = shl i64 %154, 1
  %161 = call i8* @OPENSSL_malloc(i64 %160) #8
  %162 = ptrtoint i8* %161 to i64
  %163 = icmp eq i8* %161, null
  br i1 %163, label %164, label %165

164:                                              ; preds = %159
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %248

165:                                              ; preds = %159
  %166 = getelementptr inbounds i16, i16* %153, i64 %154
  %167 = getelementptr inbounds i16, i16* %131, i64 %121
  %168 = bitcast i8* %161 to i16*
  br label %171

169:                                              ; preds = %190
  %170 = icmp eq i64 %191, 0
  br i1 %170, label %248, label %194

171:                                              ; preds = %165, %190
  %172 = phi i16* [ %153, %165 ], [ %192, %190 ]
  %173 = phi i64 [ 0, %165 ], [ %191, %190 ]
  %174 = load i16, i16* %172, align 2
  br i1 %122, label %190, label %175

175:                                              ; preds = %171, %175
  %176 = phi i16* [ %181, %175 ], [ %131, %171 ]
  %177 = phi i8 [ %180, %175 ], [ 0, %171 ]
  %178 = load i16, i16* %176, align 2
  %179 = icmp eq i16 %178, %174
  %180 = select i1 %179, i8 1, i8 %177
  %181 = getelementptr inbounds i16, i16* %176, i64 1
  %182 = icmp eq i16* %181, %167
  %183 = or i1 %179, %182
  br i1 %183, label %184, label %175

184:                                              ; preds = %175
  %185 = and i8 %180, 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %184
  %188 = add i64 %173, 1
  %189 = getelementptr inbounds i16, i16* %168, i64 %173
  store i16 %174, i16* %189, align 2
  br label %190

190:                                              ; preds = %171, %184, %187
  %191 = phi i64 [ %188, %187 ], [ %173, %184 ], [ %173, %171 ]
  %192 = getelementptr inbounds i16, i16* %172, i64 1
  %193 = icmp eq i16* %192, %166
  br i1 %193, label %169, label %171

194:                                              ; preds = %169
  %195 = icmp ult i64 %154, %191
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  call void @abort() #9
  unreachable

197:                                              ; preds = %194
  %198 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %199 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %198, i64 0, i32 14
  %200 = bitcast %"class.bssl::Array.56"* %199 to i8**
  %201 = load i8*, i8** %200, align 8
  call void @OPENSSL_free(i8* %201) #8
  %202 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %198, i64 0, i32 14, i32 1
  %203 = bitcast %"class.bssl::Array.56"* %199 to i64*
  store i64 %162, i64* %203, align 8
  store i64 %191, i64* %202, align 8
  %204 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #8
  %205 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %7, i8* null, i64 0) #8
  %206 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* %1, %struct.cbs_st* nonnull %7, i32* null, i32 -2147483648) #8
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %246, label %208

208:                                              ; preds = %197
  %209 = bitcast i16* %8 to i8*
  br label %210

210:                                              ; preds = %208, %217
  %211 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #8
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %220, label %213

213:                                              ; preds = %210
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %209) #8
  store i16 -21846, i16* %8, align 2
  %214 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %7, i16* nonnull %8) #8
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %209) #8
  br label %246

217:                                              ; preds = %213
  %218 = load i16, i16* %8, align 2
  %219 = icmp eq i16 %218, 17513
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %209) #8
  br i1 %219, label %246, label %210

220:                                              ; preds = %210
  %221 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %222 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %221, i64 0, i32 17, i32 0
  store i64 0, i64* %222, align 8
  %223 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %221, i64 0, i32 17, i32 1
  %224 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %221, i64 0, i32 17, i32 1, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = icmp eq i64 %225, 0
  %227 = getelementptr inbounds %"class.bssl::Array.83", %"class.bssl::Array.83"* %223, i64 0, i32 0
  br i1 %226, label %242, label %228

228:                                              ; preds = %220, %228
  %229 = phi i64 [ %239, %228 ], [ 0, %220 ]
  %230 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %227, align 8
  %231 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %230, i64 %229
  %232 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %230, i64 %229, i32 1
  %233 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %232, i64 0, i32 0
  %234 = load i8*, i8** %233, align 8
  call void @OPENSSL_free(i8* %234) #8
  %235 = bitcast %"class.bssl::Array"* %232 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 16, i1 false) #8
  %236 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %231, i64 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @OPENSSL_free(i8* %237) #8
  %238 = bitcast %"struct.bssl::ALPSConfig"* %231 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 16, i1 false) #8
  %239 = add nuw i64 %229, 1
  %240 = load i64, i64* %224, align 8
  %241 = icmp ult i64 %239, %240
  br i1 %241, label %228, label %242

242:                                              ; preds = %228, %220
  %243 = bitcast %"class.bssl::Array.83"* %223 to i8**
  %244 = load i8*, i8** %243, align 8
  call void @OPENSSL_free(i8* %244) #8
  %245 = bitcast %"class.bssl::Array.83"* %223 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 0, i64 16, i1 false) #8
  br label %246

246:                                              ; preds = %217, %216, %242, %197
  %247 = phi i1 [ false, %197 ], [ true, %242 ], [ false, %216 ], [ true, %217 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #8
  br label %248

248:                                              ; preds = %147, %164, %158, %169, %246
  %249 = phi i64 [ %162, %169 ], [ 0, %246 ], [ 0, %158 ], [ %162, %164 ], [ 0, %147 ]
  %250 = phi i1 [ false, %169 ], [ %247, %246 ], [ false, %158 ], [ false, %164 ], [ false, %147 ]
  %251 = inttoptr i64 %249 to i8*
  call void @OPENSSL_free(i8* %251) #8
  br label %252

252:                                              ; preds = %140, %128, %248
  %253 = phi i8* [ %130, %248 ], [ null, %128 ], [ %130, %140 ]
  %254 = phi i1 [ %250, %248 ], [ false, %128 ], [ false, %140 ]
  call void @OPENSSL_free(i8* %253) #8
  br label %255

255:                                              ; preds = %114, %252
  %256 = phi i1 [ %254, %252 ], [ false, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #8
  br label %257

257:                                              ; preds = %57, %100, %88, %255
  %258 = phi i1 [ %256, %255 ], [ false, %88 ], [ false, %100 ], [ false, %57 ]
  %259 = icmp eq %struct.stack_st* %49, null
  br i1 %259, label %261, label %260

260:                                              ; preds = %257
  call void @sk_free(%struct.stack_st* nonnull %49) #8
  br label %261

261:                                              ; preds = %260, %257, %30
  %262 = phi i1 [ false, %30 ], [ %258, %257 ], [ %258, %260 ]
  %263 = icmp eq %struct.stack_st* %14, null
  br i1 %263, label %265, label %264

264:                                              ; preds = %261
  call void @sk_free(%struct.stack_st* nonnull %14) #8
  br label %265

265:                                              ; preds = %264, %261, %2
  %266 = phi i1 [ false, %2 ], [ %262, %261 ], [ %262, %264 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i1 %266
}

declare void @SSL_set_accept_state(%struct.ssl_st*) local_unnamed_addr #2

declare %struct.buf_mem_st* @BUF_MEM_new() local_unnamed_addr #2

declare i32 @BUF_MEM_append(%struct.buf_mem_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl22SSL_serialize_handbackEPK6ssl_stP6cbb_st(%struct.ssl_st* nocapture readonly, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %357, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %15 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %15, i64 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %357

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %20, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %21, i64 0, i32 6, i32 0, i32 0, i32 0
  %23 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %22, align 8
  %24 = icmp eq %"struct.bssl::CERT"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %23, i64 0, i32 15, i32 0, i32 0, i32 0
  %27 = load %"struct.bssl::DC"*, %"struct.bssl::DC"** %26, align 8
  %28 = icmp eq %"struct.bssl::DC"* %27, null
  br i1 %28, label %29, label %357

29:                                               ; preds = %19, %25
  %30 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %21, i64 0, i32 18, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %357

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %35 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %34, align 8
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 34, i32 0, i32 0, i32 0
  %37 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -4
  %41 = lshr i32 %40, 1
  %42 = shl i32 %40, 31
  %43 = or i32 %41, %42
  switch i32 %43, label %357 [
    i32 5, label %50
    i32 3, label %44
    i32 8, label %45
    i32 0, label %46
  ]

44:                                               ; preds = %33
  br label %50

45:                                               ; preds = %33
  br label %50

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 7
  br i1 %49, label %50, label %357

50:                                               ; preds = %46, %33, %45, %44
  %51 = phi i32 [ 2, %45 ], [ 1, %44 ], [ 0, %33 ], [ 3, %46 ]
  %52 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 50, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  %56 = tail call i64 @strlen(i8* nonnull %53) #10
  br label %57

57:                                               ; preds = %50, %55
  %58 = phi i64 [ %56, %55 ], [ 0, %50 ]
  %59 = icmp eq i32 %51, 2
  br i1 %59, label %67, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %62 = load %struct.buf_mem_st*, %struct.buf_mem_st** %61, align 8
  %63 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %62, i64 0, i32 1
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %62, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  br label %67

67:                                               ; preds = %57, %60
  %68 = phi i64 [ 0, %57 ], [ %66, %60 ]
  %69 = phi i8* [ null, %57 ], [ %64, %60 ]
  %70 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #8
  store i64 0, i64* %3, align 8
  %71 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #8
  store i8* null, i8** %4, align 8
  %72 = and i32 %51, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 2
  %76 = load i16, i16* %75, align 8
  %77 = icmp eq i16 %76, 769
  br i1 %77, label %78, label %88

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 33, i32 0, i32 0, i32 0
  %80 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %79, align 8
  %81 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %80, i64 0, i32 0
  %82 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %81, align 8
  %83 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %82) #8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %78
  %86 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %79, align 8
  %87 = call zeroext i1 @_ZNK4bssl14SSLAEADContext5GetIVEPPKhPm(%"class.bssl::SSLAEADContext"* %86, i8** nonnull %4, i64* nonnull %3) #8
  br i1 %87, label %88, label %355

88:                                               ; preds = %78, %67, %85, %74
  %89 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #8
  store i64 0, i64* %5, align 8
  %90 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #8
  store i8* null, i8** %6, align 8
  br i1 %59, label %91, label %105

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 2
  %93 = load i16, i16* %92, align 8
  %94 = icmp eq i16 %93, 769
  br i1 %94, label %95, label %105

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 32, i32 0, i32 0, i32 0
  %97 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %96, align 8
  %98 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %97, i64 0, i32 0
  %99 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %98, align 8
  %100 = call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %99) #8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %95
  %103 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %96, align 8
  %104 = call zeroext i1 @_ZNK4bssl14SSLAEADContext5GetIVEPPKhPm(%"class.bssl::SSLAEADContext"* %103, i8** nonnull %6, i64* nonnull %5) #8
  br i1 %104, label %105, label %353

105:                                              ; preds = %95, %102, %91, %88
  %106 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 32, i1 false)
  %107 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 32, i1 false)
  %108 = icmp eq i32 %51, 3
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 40, i32 0, i32 0, i32 0
  br label %120

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 23
  %113 = load i16, i16* %112, align 1
  %114 = and i16 %113, 64
  %115 = icmp eq i16 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %120

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 40, i32 0, i32 0, i32 0
  br label %120

120:                                              ; preds = %116, %118, %109
  %121 = phi %struct.ssl_session_st** [ %110, %109 ], [ %117, %116 ], [ %119, %118 ]
  %122 = load %struct.ssl_session_st*, %struct.ssl_session_st** %121, align 8
  %123 = call i32 @CBB_add_asn1(%struct.cbb_st* %1, %struct.cbb_st* nonnull %7, i32 536870928) #8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %351, label %125

125:                                              ; preds = %120
  %126 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %7, i64 0) #8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %351, label %128

128:                                              ; preds = %125
  %129 = zext i32 %51 to i64
  %130 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %7, i64 %129) #8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %351, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 0, i64 0
  %134 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %133, i64 8) #8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %351, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 1, i64 0
  %138 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %137, i64 8) #8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %351, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 2, i64 0
  %142 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %141, i64 32) #8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %351, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 3, i64 0
  %146 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %145, i64 32) #8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %351, label %148

148:                                              ; preds = %144
  %149 = load i8*, i8** %6, align 8
  %150 = load i64, i64* %5, align 8
  %151 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %149, i64 %150) #8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %351, label %153

153:                                              ; preds = %148
  %154 = load i8*, i8** %4, align 8
  %155 = load i64, i64* %3, align 8
  %156 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %154, i64 %155) #8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %351, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 23
  %160 = load i16, i16* %159, align 1
  %161 = lshr i16 %160, 6
  %162 = and i16 %161, 1
  %163 = zext i16 %162 to i32
  %164 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %163) #8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %351, label %166

166:                                              ; preds = %158
  %167 = load i16, i16* %159, align 1
  %168 = lshr i16 %167, 9
  %169 = and i16 %168, 1
  %170 = zext i16 %169 to i32
  %171 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %170) #8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %351, label %173

173:                                              ; preds = %166
  %174 = call i32 @_ZN4bssl21ssl_session_serializeEPK14ssl_session_stP6cbb_st(%struct.ssl_session_st* %122, %struct.cbb_st* nonnull %7) #8
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %351, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 48, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 48, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %178, i64 %180) #8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %351, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 49, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 49, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %185, i64 %187) #8
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %351, label %190

190:                                              ; preds = %183
  %191 = load i8*, i8** %52, align 8
  %192 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %191, i64 %58) #8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %351, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 51, i64 0
  %196 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %195, i64 64) #8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %351, label %198

198:                                              ; preds = %194
  %199 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 0) #8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %351, label %201

201:                                              ; preds = %198
  %202 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %7, i64 0) #8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %351, label %204

204:                                              ; preds = %201
  %205 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %206 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %205, i64 0, i32 46
  %207 = load i32, i32* %206, align 8
  %208 = lshr i32 %207, 17
  %209 = and i32 %208, 1
  %210 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %209) #8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %351, label %212

212:                                              ; preds = %204
  %213 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %214 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %213, i64 0, i32 46
  %215 = load i32, i32* %214, align 8
  %216 = lshr i32 %215, 7
  %217 = and i32 %216, 1
  %218 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %217) #8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %351, label %220

220:                                              ; preds = %212
  %221 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %222 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %221, i64 0, i32 46
  %223 = load i32, i32* %222, align 8
  %224 = lshr i32 %223, 19
  %225 = and i32 %224, 1
  %226 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %225) #8
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %351, label %228

228:                                              ; preds = %220
  %229 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %230 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %229, i64 0, i32 46
  %231 = load i32, i32* %230, align 8
  %232 = lshr i32 %231, 18
  %233 = and i32 %232, 1
  %234 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %233) #8
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %351, label %236

236:                                              ; preds = %228
  %237 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %238 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %237, i64 0, i32 43
  %239 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %238, align 8
  %240 = call i32 @SSL_CIPHER_get_id(%struct.ssl_cipher_st* %239) #8
  %241 = zext i32 %240 to i64
  %242 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %7, i64 %241) #8
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %351, label %244

244:                                              ; preds = %236
  %245 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %69, i64 %68) #8
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %351, label %247

247:                                              ; preds = %244
  %248 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %8, i32 536870928) #8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %351, label %250

250:                                              ; preds = %247
  %251 = icmp eq i32 %51, 1
  br i1 %251, label %252, label %257

252:                                              ; preds = %250
  %253 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %254 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %253, i64 0, i32 19, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %254, align 8
  %256 = call zeroext i1 @_ZN4bssl11SSLKeyShare9SerializeEP6cbb_st(%"class.bssl::SSLKeyShare"* %255, %struct.cbb_st* nonnull %8) #8
  br i1 %256, label %257, label %351

257:                                              ; preds = %252, %250
  br i1 %108, label %258, label %348

258:                                              ; preds = %257
  %259 = load i8, i8* %9, align 4
  %260 = lshr i8 %259, 2
  %261 = and i8 %260, 1
  %262 = zext i8 %261 to i32
  %263 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 30
  %264 = load i32, i32* %263, align 8
  %265 = icmp eq i32 %264, 1
  %266 = zext i1 %265 to i32
  %267 = icmp eq i32 %262, %266
  br i1 %267, label %351, label %268

268:                                              ; preds = %258
  %269 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 46
  %270 = load i32, i32* %269, align 8
  %271 = and i32 %270, 16384
  %272 = icmp eq i32 %271, 0
  %273 = load i16, i16* %159, align 1
  %274 = and i16 %273, 4097
  br i1 %272, label %276, label %275

275:                                              ; preds = %268
  switch i16 %274, label %351 [
    i16 4096, label %280
    i16 0, label %278
    i16 1, label %279
  ]

276:                                              ; preds = %268
  %277 = icmp eq i16 %274, 0
  br i1 %277, label %280, label %351

278:                                              ; preds = %275
  br label %280

279:                                              ; preds = %275
  br label %280

280:                                              ; preds = %275, %279, %278, %276
  %281 = phi i32 [ 1, %275 ], [ 0, %276 ], [ 2, %278 ], [ 3, %279 ]
  %282 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 12, i64 0
  %283 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 7
  %284 = load i64, i64* %283, align 8
  %285 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %282, i64 %284) #8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %351, label %287

287:                                              ; preds = %280
  %288 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 13, i64 0
  %289 = load i64, i64* %283, align 8
  %290 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %288, i64 %289) #8
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %351, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 10, i64 0
  %294 = load i64, i64* %283, align 8
  %295 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %293, i64 %294) #8
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %351, label %297

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 11, i64 0
  %299 = load i64, i64* %283, align 8
  %300 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %298, i64 %299) #8
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %351, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 8, i64 0
  %304 = load i64, i64* %283, align 8
  %305 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %303, i64 %304) #8
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %351, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 37, i64 0
  %309 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 40
  %310 = load i8, i8* %309, align 2
  %311 = zext i8 %310 to i64
  %312 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %308, i64 %311) #8
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %351, label %314

314:                                              ; preds = %307
  %315 = load i16, i16* %159, align 1
  %316 = lshr i16 %315, 15
  %317 = zext i16 %316 to i32
  %318 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %317) #8
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %351, label %320

320:                                              ; preds = %314
  %321 = load i32, i32* %269, align 8
  %322 = lshr i32 %321, 6
  %323 = and i32 %322, 1
  %324 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %7, i32 %323) #8
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %351, label %326

326:                                              ; preds = %320
  %327 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 29
  %328 = load i32, i32* %327, align 4
  %329 = sext i32 %328 to i64
  %330 = call i32 @CBB_add_asn1_int64(%struct.cbb_st* nonnull %7, i64 %329) #8
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %351, label %332

332:                                              ; preds = %326
  %333 = load i32, i32* %263, align 8
  %334 = sext i32 %333 to i64
  %335 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %7, i64 %334) #8
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %351, label %337

337:                                              ; preds = %332
  %338 = zext i32 %281 to i64
  %339 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %7, i64 %338) #8
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %351, label %341

341:                                              ; preds = %337
  %342 = icmp eq i32 %281, 1
  br i1 %342, label %343, label %348

343:                                              ; preds = %341
  %344 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %37, i64 0, i32 9, i64 0
  %345 = load i64, i64* %283, align 8
  %346 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %7, i8* %344, i64 %345) #8
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %351, label %348

348:                                              ; preds = %341, %343, %257
  %349 = call i32 @CBB_flush(%struct.cbb_st* %1) #8
  %350 = icmp ne i32 %349, 0
  br label %351

351:                                              ; preds = %275, %280, %287, %292, %297, %302, %307, %314, %320, %326, %332, %258, %276, %337, %343, %252, %120, %125, %128, %132, %136, %140, %144, %148, %153, %158, %166, %173, %176, %183, %190, %194, %198, %201, %204, %212, %220, %228, %236, %244, %247, %348
  %352 = phi i1 [ %350, %348 ], [ false, %247 ], [ false, %244 ], [ false, %236 ], [ false, %228 ], [ false, %220 ], [ false, %212 ], [ false, %204 ], [ false, %201 ], [ false, %198 ], [ false, %194 ], [ false, %190 ], [ false, %183 ], [ false, %176 ], [ false, %173 ], [ false, %166 ], [ false, %158 ], [ false, %153 ], [ false, %148 ], [ false, %144 ], [ false, %140 ], [ false, %136 ], [ false, %132 ], [ false, %128 ], [ false, %125 ], [ false, %120 ], [ false, %252 ], [ false, %343 ], [ false, %337 ], [ false, %276 ], [ false, %258 ], [ false, %332 ], [ false, %326 ], [ false, %320 ], [ false, %314 ], [ false, %307 ], [ false, %302 ], [ false, %297 ], [ false, %292 ], [ false, %287 ], [ false, %280 ], [ false, %275 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #8
  br label %353

353:                                              ; preds = %102, %351
  %354 = phi i1 [ %352, %351 ], [ false, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #8
  br label %355

355:                                              ; preds = %85, %353
  %356 = phi i1 [ %354, %353 ], [ false, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  br label %357

357:                                              ; preds = %29, %13, %25, %355, %46, %33, %2
  %358 = phi i1 [ false, %2 ], [ false, %29 ], [ %356, %355 ], [ false, %46 ], [ false, %33 ], [ false, %25 ], [ false, %13 ]
  ret i1 %358
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4bssl14SSLAEADContext5GetIVEPPKhPm(%"class.bssl::SSLAEADContext"*, i8**, i64*) local_unnamed_addr #2

declare i32 @CBB_add_asn1_bool(%struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @_ZN4bssl21ssl_session_serializeEPK14ssl_session_stP6cbb_st(%struct.ssl_session_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @SSL_CIPHER_get_id(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl11SSLKeyShare9SerializeEP6cbb_st(%"class.bssl::SSLKeyShare"*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_asn1_int64(%struct.cbb_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl18SSL_apply_handbackEP6ssl_stNS_4SpanIKhEE(%struct.ssl_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca %struct.cbs_st, align 8
  %13 = alloca %struct.cbs_st, align 8
  %14 = alloca %struct.cbs_st, align 8
  %15 = alloca %struct.cbs_st, align 8
  %16 = alloca %struct.cbs_st, align 8
  %17 = alloca %struct.cbs_st, align 8
  %18 = alloca %struct.cbs_st, align 8
  %19 = alloca %struct.cbs_st, align 8
  %20 = alloca %struct.cbs_st, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %struct.cbs_st, align 8
  %29 = alloca %struct.cbs_st, align 8
  %30 = alloca %struct.cbs_st, align 8
  %31 = alloca %struct.cbs_st, align 8
  %32 = alloca %struct.cbs_st, align 8
  %33 = alloca %struct.cbs_st, align 8
  %34 = alloca %struct.cbs_st, align 8
  %35 = alloca %struct.cbs_st, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i8*, align 8
  %42 = alloca %"class.bssl::Array", align 8
  %43 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %44 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %43, align 8
  %45 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %44, null
  br i1 %45, label %46, label %679

46:                                               ; preds = %3
  %47 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %48 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %47, align 8
  %49 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %48, i64 0, i32 0
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %679

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %54 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %53, align 8
  %55 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  store i64 -6148914691236517206, i64* %4, align 8
  %56 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  store i64 -6148914691236517206, i64* %5, align 8
  %57 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  store i64 -6148914691236517206, i64* %6, align 8
  %58 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  store i64 -6148914691236517206, i64* %7, align 8
  %59 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #8
  %60 = bitcast %struct.cbs_st* %9 to i8*
  %61 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  %62 = bitcast %struct.cbs_st* %10 to i8*
  %63 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #8
  %64 = bitcast %struct.cbs_st* %11 to i8*
  %65 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #8
  %66 = bitcast %struct.cbs_st* %12 to i8*
  %67 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #8
  %68 = bitcast %struct.cbs_st* %13 to i8*
  %69 = bitcast %struct.cbs_st* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #8
  %70 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %13, i64 0, i32 0
  %71 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %13, i64 0, i32 1
  %72 = bitcast %struct.cbs_st* %14 to i8*
  %73 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #8
  %74 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %14, i64 0, i32 0
  %75 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %14, i64 0, i32 1
  %76 = bitcast %struct.cbs_st* %15 to i8*
  %77 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  %78 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %15, i64 0, i32 0
  %79 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %15, i64 0, i32 1
  %80 = bitcast %struct.cbs_st* %16 to i8*
  %81 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #8
  %82 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %16, i64 0, i32 0
  %83 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %16, i64 0, i32 1
  %84 = bitcast %struct.cbs_st* %17 to i8*
  %85 = bitcast %struct.cbs_st* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #8
  %86 = bitcast %struct.cbs_st* %18 to i8*
  %87 = bitcast %struct.cbs_st* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #8
  %88 = bitcast %struct.cbs_st* %19 to i8*
  %89 = bitcast %struct.cbs_st* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #8
  %90 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %19, i64 0, i32 0
  %91 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %19, i64 0, i32 1
  %92 = bitcast %struct.cbs_st* %20 to i8*
  %93 = bitcast %struct.cbs_st* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #8
  %94 = bitcast i32* %21 to i8*
  %95 = bitcast %struct.cbs_st* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #8
  store i32 -1431655766, i32* %21, align 4
  %96 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #8
  store i32 -1431655766, i32* %22, align 4
  %97 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #8
  store i32 -1431655766, i32* %23, align 4
  %98 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #8
  store i32 -1431655766, i32* %24, align 4
  %99 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #8
  store i32 -1431655766, i32* %25, align 4
  %100 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #8
  store i32 -1431655766, i32* %26, align 4
  %101 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #8
  store i32 -1431655766, i32* %27, align 4
  %102 = bitcast %struct.cbs_st* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #8
  %103 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %28, i64 0, i32 0
  %104 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %28, i64 0, i32 1
  store i8* %1, i8** %103, align 8
  store i64 %2, i64* %104, align 8
  %105 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %28, %struct.cbs_st* nonnull %8, i32 536870928) #8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %677, label %107

107:                                              ; preds = %52
  %108 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %4) #8
  %109 = icmp eq i32 %108, 0
  %110 = load i64, i64* %4, align 8
  %111 = icmp ne i64 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %677, label %113

113:                                              ; preds = %107
  %114 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %7) #8
  %115 = icmp eq i32 %114, 0
  %116 = load i64, i64* %7, align 8
  %117 = icmp ugt i64 %116, 3
  %118 = or i1 %115, %117
  br i1 %118, label %677, label %119

119:                                              ; preds = %113
  %120 = trunc i64 %116 to i32
  %121 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %9, i32 4) #8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %677, label %123

123:                                              ; preds = %119
  %124 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #8
  %125 = icmp eq i64 %124, 8
  br i1 %125, label %126, label %677

126:                                              ; preds = %123
  %127 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %10, i32 4) #8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %677, label %129

129:                                              ; preds = %126
  %130 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #8
  %131 = icmp eq i64 %130, 8
  br i1 %131, label %132, label %677

132:                                              ; preds = %129
  %133 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %11, i32 4) #8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %677, label %135

135:                                              ; preds = %132
  %136 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #8
  %137 = icmp eq i64 %136, 32
  br i1 %137, label %138, label %677

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 2, i64 0
  %140 = call i32 @CBS_copy_bytes(%struct.cbs_st* nonnull %11, i8* %139, i64 32) #8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %677, label %142

142:                                              ; preds = %138
  %143 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %12, i32 4) #8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %677, label %145

145:                                              ; preds = %142
  %146 = call i64 @CBS_len(%struct.cbs_st* nonnull %12) #8
  %147 = icmp eq i64 %146, 32
  br i1 %147, label %148, label %677

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 3, i64 0
  %150 = call i32 @CBS_copy_bytes(%struct.cbs_st* nonnull %12, i8* %149, i64 32) #8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %677, label %152

152:                                              ; preds = %148
  %153 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %13, i32 4) #8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %677, label %155

155:                                              ; preds = %152
  %156 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %14, i32 4) #8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %677, label %158

158:                                              ; preds = %155
  %159 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %21) #8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %677, label %161

161:                                              ; preds = %158
  %162 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %22) #8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %677, label %164

164:                                              ; preds = %161
  %165 = call %"struct.bssl::SSL_HANDSHAKE"* @_ZN4bssl17ssl_handshake_newEP6ssl_st(%struct.ssl_st* %0) #8
  %166 = ptrtoint %"struct.bssl::SSL_HANDSHAKE"* %165 to i64
  %167 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 34
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %168, align 8
  %170 = bitcast %"class.std::__1::unique_ptr.96"* %167 to i64*
  store i64 %166, i64* %170, align 8
  %171 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %169, null
  br i1 %171, label %175, label %172

172:                                              ; preds = %164
  call void @_ZN4bssl13SSL_HANDSHAKED1Ev(%"struct.bssl::SSL_HANDSHAKE"* nonnull %169) #8
  %173 = bitcast %"struct.bssl::SSL_HANDSHAKE"* %169 to i8*
  call void @OPENSSL_free(i8* nonnull %173) #8
  %174 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %168, align 8
  br label %175

175:                                              ; preds = %172, %164
  %176 = phi %"struct.bssl::SSL_HANDSHAKE"* [ %174, %172 ], [ %165, %164 ]
  %177 = load i32, i32* %21, align 4
  %178 = icmp eq i32 %177, 0
  %179 = icmp eq i32 %120, 3
  %180 = or i1 %179, %178
  %181 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %182 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %181, align 8
  %183 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %182, i64 0, i32 1
  %184 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %183, align 8
  %185 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %182, i64 0, i32 72
  %186 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %185, align 8
  %187 = call %struct.ssl_session_st* @_ZN4bssl17SSL_SESSION_parseEP6cbs_stPKNS_15SSL_X509_METHODEP21crypto_buffer_pool_st(%struct.cbs_st* nonnull %8, %"struct.bssl::SSL_X509_METHOD"* %184, %struct.crypto_buffer_pool_st* %186) #8
  %188 = ptrtoint %struct.ssl_session_st* %187 to i64
  br i1 %180, label %189, label %195

189:                                              ; preds = %175
  %190 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 40
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58"* %190, i64 0, i32 0, i32 0, i32 0
  %192 = load %struct.ssl_session_st*, %struct.ssl_session_st** %191, align 8
  %193 = bitcast %"class.std::__1::unique_ptr.58"* %190 to i64*
  store i64 %188, i64* %193, align 8
  %194 = icmp eq %struct.ssl_session_st* %192, null
  br i1 %194, label %205, label %201

195:                                              ; preds = %175
  %196 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58"* %196, i64 0, i32 0, i32 0, i32 0
  %198 = load %struct.ssl_session_st*, %struct.ssl_session_st** %197, align 8
  %199 = bitcast %"class.std::__1::unique_ptr.58"* %196 to i64*
  store i64 %188, i64* %199, align 8
  %200 = icmp eq %struct.ssl_session_st* %198, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %195, %189
  %202 = phi %struct.ssl_session_st* [ %192, %189 ], [ %198, %195 ]
  %203 = phi %struct.ssl_session_st** [ %191, %189 ], [ %197, %195 ]
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %202) #8
  %204 = load %struct.ssl_session_st*, %struct.ssl_session_st** %203, align 8
  br label %205

205:                                              ; preds = %201, %195, %189
  %206 = phi %struct.ssl_session_st* [ %204, %201 ], [ %187, %195 ], [ %187, %189 ]
  %207 = icmp eq %struct.ssl_session_st* %206, null
  br i1 %207, label %677, label %208

208:                                              ; preds = %205
  %209 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %15, i32 4) #8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %677, label %211

211:                                              ; preds = %208
  %212 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %16, i32 4) #8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %677, label %214

214:                                              ; preds = %211
  %215 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %17, i32 4) #8
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %677, label %217

217:                                              ; preds = %214
  %218 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %18, i32 4) #8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %677, label %220

220:                                              ; preds = %217
  %221 = call i64 @CBS_len(%struct.cbs_st* nonnull %18) #8
  %222 = icmp eq i64 %221, 64
  br i1 %222, label %223, label %677

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 51, i64 0
  %225 = call i32 @CBS_copy_bytes(%struct.cbs_st* nonnull %18, i8* %224, i64 64) #8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %677, label %227

227:                                              ; preds = %223
  %228 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %26) #8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %677, label %230

230:                                              ; preds = %227
  %231 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %5) #8
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %677, label %233

233:                                              ; preds = %230
  %234 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %27) #8
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %677, label %236

236:                                              ; preds = %233
  %237 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %23) #8
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %677, label %239

239:                                              ; preds = %236
  %240 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %24) #8
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %677, label %242

242:                                              ; preds = %239
  %243 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %25) #8
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %677, label %245

245:                                              ; preds = %242
  %246 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %6) #8
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %677, label %248

248:                                              ; preds = %245
  %249 = load i64, i64* %6, align 8
  %250 = trunc i64 %249 to i16
  %251 = call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %250) #8
  %252 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 43
  store %struct.ssl_cipher_st* %251, %struct.ssl_cipher_st** %252, align 8
  %253 = icmp eq %struct.ssl_cipher_st* %251, null
  br i1 %253, label %677, label %254

254:                                              ; preds = %248
  %255 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %19, i32 4) #8
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %677, label %257

257:                                              ; preds = %254
  %258 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %20, i32 536870928) #8
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %677, label %260

260:                                              ; preds = %257
  %261 = bitcast %struct.cbs_st* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %261) #8
  %262 = bitcast %struct.cbs_st* %30 to i8*
  %263 = bitcast %struct.cbs_st* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %262) #8
  %264 = bitcast %struct.cbs_st* %31 to i8*
  %265 = bitcast %struct.cbs_st* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %264) #8
  %266 = bitcast %struct.cbs_st* %32 to i8*
  %267 = bitcast %struct.cbs_st* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %267, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %266) #8
  %268 = bitcast %struct.cbs_st* %33 to i8*
  %269 = bitcast %struct.cbs_st* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #8
  %270 = bitcast %struct.cbs_st* %34 to i8*
  %271 = bitcast %struct.cbs_st* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %271, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #8
  %272 = bitcast %struct.cbs_st* %35 to i8*
  %273 = bitcast %struct.cbs_st* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %273, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %272) #8
  %274 = bitcast %struct.cbs_st* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 -86, i64 16, i1 false)
  br i1 %179, label %275, label %378

275:                                              ; preds = %260
  %276 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %276) #8
  store i32 -1431655766, i32* %36, align 4
  %277 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %277) #8
  store i32 -1431655766, i32* %37, align 4
  %278 = bitcast i64* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #8
  store i64 -6148914691236517206, i64* %38, align 8
  %279 = bitcast i64* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #8
  store i64 -6148914691236517206, i64* %39, align 8
  %280 = bitcast i64* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #8
  store i64 -6148914691236517206, i64* %40, align 8
  %281 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %31, i32 4) #8
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %672, label %283

283:                                              ; preds = %275
  %284 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %32, i32 4) #8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %671, label %286

286:                                              ; preds = %283
  %287 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %29, i32 4) #8
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %670, label %289

289:                                              ; preds = %286
  %290 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %30, i32 4) #8
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %669, label %292

292:                                              ; preds = %289
  %293 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %33, i32 4) #8
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %668, label %295

295:                                              ; preds = %292
  %296 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %34, i32 4) #8
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %667, label %298

298:                                              ; preds = %295
  %299 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %36) #8
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %666, label %301

301:                                              ; preds = %298
  %302 = call i32 @CBS_get_asn1_bool(%struct.cbs_st* nonnull %8, i32* nonnull %37) #8
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %665, label %304

304:                                              ; preds = %301
  %305 = call i32 @CBS_get_asn1_int64(%struct.cbs_st* nonnull %8, i64* nonnull %40) #8
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %664, label %307

307:                                              ; preds = %304
  %308 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %39) #8
  %309 = icmp eq i32 %308, 0
  %310 = load i64, i64* %39, align 8
  %311 = icmp ugt i64 %310, 14
  %312 = or i1 %309, %311
  br i1 %312, label %674, label %313

313:                                              ; preds = %307
  %314 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %38) #8
  %315 = icmp eq i32 %314, 0
  %316 = load i64, i64* %38, align 8
  %317 = icmp ugt i64 %316, 3
  %318 = or i1 %315, %317
  br i1 %318, label %673, label %319

319:                                              ; preds = %313
  %320 = trunc i64 %316 to i32
  %321 = icmp eq i32 %320, 1
  br i1 %321, label %322, label %325

322:                                              ; preds = %319
  %323 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %35, i32 4) #8
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %377, label %325

325:                                              ; preds = %322, %319
  %326 = load i64, i64* %40, align 8
  %327 = add i64 %326, 2147483648
  %328 = icmp ugt i64 %327, 4294967295
  br i1 %328, label %377, label %329

329:                                              ; preds = %325
  %330 = trunc i64 %326 to i32
  %331 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 29
  store i32 %330, i32* %331, align 4
  %332 = load i32, i32* %36, align 4
  %333 = icmp ne i32 %332, 0
  %334 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 23
  %335 = zext i1 %333 to i16
  %336 = load i16, i16* %334, align 1
  %337 = shl nuw i16 %335, 15
  %338 = and i16 %336, 32767
  %339 = or i16 %337, %338
  store i16 %339, i16* %334, align 1
  %340 = load i32, i32* %37, align 4
  %341 = icmp ne i32 %340, 0
  %342 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 46
  %343 = zext i1 %341 to i32
  %344 = load i32, i32* %342, align 8
  %345 = shl nuw nsw i32 %343, 6
  %346 = and i32 %344, -65
  %347 = or i32 %345, %346
  store i32 %347, i32* %342, align 8
  %348 = load i64, i64* %39, align 8
  %349 = trunc i64 %348 to i32
  %350 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 30
  store i32 %349, i32* %350, align 8
  %351 = icmp ne i32 %349, 1
  %352 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %353 = zext i1 %351 to i8
  %354 = load i8, i8* %352, align 4
  %355 = shl nuw nsw i8 %353, 2
  %356 = and i8 %354, -5
  %357 = or i8 %355, %356
  store i8 %357, i8* %352, align 4
  %358 = load i16, i16* %334, align 1
  %359 = and i16 %358, -4098
  store i16 %359, i16* %334, align 1
  %360 = load i32, i32* %342, align 8
  %361 = and i32 %360, -16385
  store i32 %361, i32* %342, align 8
  switch i32 %320, label %377 [
    i32 0, label %376
    i32 1, label %362
    i32 2, label %367
    i32 3, label %369
  ]

362:                                              ; preds = %329
  %363 = load i16, i16* %334, align 1
  %364 = or i16 %363, 4096
  store i16 %364, i16* %334, align 1
  %365 = load i32, i32* %342, align 8
  %366 = or i32 %365, 122880
  br label %374

367:                                              ; preds = %329
  %368 = or i32 %360, 16384
  br label %374

369:                                              ; preds = %329
  %370 = load i16, i16* %334, align 1
  %371 = or i16 %370, 1
  store i16 %371, i16* %334, align 1
  %372 = load i32, i32* %342, align 8
  %373 = or i32 %372, 16384
  br label %374

374:                                              ; preds = %362, %367, %369
  %375 = phi i32 [ %373, %369 ], [ %368, %367 ], [ %366, %362 ]
  store i32 %375, i32* %342, align 8
  br label %376

376:                                              ; preds = %374, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %380

377:                                              ; preds = %322, %325, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

378:                                              ; preds = %260
  %379 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 30
  store i32 3, i32* %379, align 8
  br label %380

380:                                              ; preds = %376, %378
  %381 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %206, i64 0, i32 1
  %382 = load i16, i16* %381, align 4
  %383 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 2
  store i16 %382, i16* %383, align 8
  %384 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 23
  %385 = load i16, i16* %384, align 1
  %386 = or i16 %385, 2
  store i16 %386, i16* %384, align 1
  %387 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %47, align 8
  %388 = load i16, i16* %383, align 8
  %389 = call zeroext i1 @_ZN4bssl27ssl_method_supports_versionEPKNS_19SSL_PROTOCOL_METHODEt(%"struct.bssl::SSL_PROTOCOL_METHOD"* %387, i16 zeroext %388) #8
  br i1 %389, label %390, label %675

390:                                              ; preds = %380
  %391 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %206, i64 0, i32 20
  %392 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %391, align 8
  %393 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %252, align 8
  %394 = icmp eq %struct.ssl_cipher_st* %392, %393
  br i1 %394, label %395, label %675

395:                                              ; preds = %390
  %396 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #8
  %397 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %391, align 8
  %398 = call zeroext i16 @SSL_CIPHER_get_min_version(%struct.ssl_cipher_st* %397) #8
  %399 = icmp ult i16 %396, %398
  br i1 %399, label %675, label %400

400:                                              ; preds = %395
  %401 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %391, align 8
  %402 = call zeroext i16 @SSL_CIPHER_get_max_version(%struct.ssl_cipher_st* %401) #8
  %403 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #8
  %404 = icmp ult i16 %402, %403
  br i1 %404, label %675, label %405

405:                                              ; preds = %400
  store i32 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bssl20ssl_server_handshakeEPNS_13SSL_HANDSHAKEE, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %43, align 8
  %406 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %407 = load i8, i8* %406, align 4
  %408 = or i8 %407, 1
  store i8 %408, i8* %406, align 4
  switch i32 %120, label %675 [
    i32 0, label %409
    i32 1, label %413
    i32 2, label %417
    i32 3, label %419
  ]

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 3
  store i32 14, i32* %410, align 4
  %411 = load i32, i32* %21, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %675, label %422

413:                                              ; preds = %405
  %414 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 3
  store i32 10, i32* %414, align 4
  %415 = load i32, i32* %21, align 4
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %422, label %675

417:                                              ; preds = %405
  %418 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 3
  store i32 20, i32* %418, align 4
  br label %422

419:                                              ; preds = %405
  %420 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 3
  store i32 4, i32* %420, align 4
  %421 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 4
  store i32 7, i32* %421, align 8
  br label %422

422:                                              ; preds = %409, %413, %419, %417
  %423 = load i32, i32* %21, align 4
  %424 = icmp ne i32 %423, 0
  %425 = zext i1 %424 to i16
  %426 = load i16, i16* %384, align 1
  %427 = shl nuw nsw i16 %425, 6
  %428 = and i16 %426, -577
  %429 = or i16 %427, %428
  %430 = load i32, i32* %22, align 4
  %431 = icmp ne i32 %430, 0
  %432 = zext i1 %431 to i16
  %433 = shl nuw nsw i16 %432, 9
  %434 = or i16 %433, %429
  store i16 %434, i16* %384, align 1
  %435 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 48
  %436 = load i8*, i8** %78, align 8
  %437 = load i64, i64* %79, align 8
  %438 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %435, i64 0, i32 0
  %439 = load i8*, i8** %438, align 8
  call void @OPENSSL_free(i8* %439) #8
  %440 = bitcast %"class.bssl::Array"* %435 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %440, i8 0, i64 16, i1 false) #8
  %441 = icmp eq i64 %437, 0
  br i1 %441, label %448, label %442

442:                                              ; preds = %422
  %443 = call i8* @OPENSSL_malloc(i64 %437) #8
  store i8* %443, i8** %438, align 8
  %444 = icmp eq i8* %443, null
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %448

446:                                              ; preds = %442
  %447 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 48, i32 1
  store i64 %437, i64* %447, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %443, i8* align 1 %436, i64 %437, i1 false) #8
  br label %448

448:                                              ; preds = %422, %445, %446
  %449 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 49
  %450 = load i8*, i8** %82, align 8
  %451 = load i64, i64* %83, align 8
  %452 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %449, i64 0, i32 0
  %453 = load i8*, i8** %452, align 8
  call void @OPENSSL_free(i8* %453) #8
  %454 = bitcast %"class.bssl::Array"* %449 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %454, i8 0, i64 16, i1 false) #8
  %455 = icmp eq i64 %451, 0
  br i1 %455, label %462, label %456

456:                                              ; preds = %448
  %457 = call i8* @OPENSSL_malloc(i64 %451) #8
  store i8* %457, i8** %452, align 8
  %458 = icmp eq i8* %457, null
  br i1 %458, label %459, label %460

459:                                              ; preds = %456
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %462

460:                                              ; preds = %456
  %461 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 49, i32 1
  store i64 %451, i64* %461, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %457, i8* align 1 %450, i64 %451, i1 false) #8
  br label %462

462:                                              ; preds = %448, %459, %460
  %463 = call i64 @CBS_len(%struct.cbs_st* nonnull %17) #8
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %465, label %470

465:                                              ; preds = %462
  %466 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 50, i32 0, i32 0, i32 0
  %467 = load i8*, i8** %466, align 8
  store i8* null, i8** %466, align 8
  %468 = icmp eq i8* %467, null
  br i1 %468, label %485, label %469

469:                                              ; preds = %465
  call void @OPENSSL_free(i8* nonnull %467) #8
  br label %485

470:                                              ; preds = %462
  %471 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %471) #8
  store i8* null, i8** %41, align 8
  %472 = call i32 @CBS_strdup(%struct.cbs_st* nonnull %17, i8** nonnull %41) #8
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %484, label %474

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 50
  %476 = bitcast i8** %41 to i64*
  %477 = load i64, i64* %476, align 8
  %478 = getelementptr inbounds %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29"* %475, i64 0, i32 0, i32 0, i32 0
  %479 = load i8*, i8** %478, align 8
  %480 = bitcast %"class.std::__1::unique_ptr.29"* %475 to i64*
  store i64 %477, i64* %480, align 8
  %481 = icmp eq i8* %479, null
  br i1 %481, label %483, label %482

482:                                              ; preds = %474
  call void @OPENSSL_free(i8* nonnull %479) #8
  br label %483

483:                                              ; preds = %474, %482
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %471) #8
  br label %485

484:                                              ; preds = %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %471) #8
  br label %675

485:                                              ; preds = %469, %465, %483
  %486 = load i32, i32* %27, align 4
  %487 = icmp ne i32 %486, 0
  %488 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 46
  %489 = zext i1 %487 to i32
  %490 = load i32, i32* %488, align 8
  %491 = shl nuw nsw i32 %489, 17
  %492 = and i32 %490, -917505
  %493 = or i32 %491, %492
  %494 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 2
  store i32 4, i32* %494, align 8
  %495 = load i32, i32* %24, align 4
  %496 = icmp ne i32 %495, 0
  %497 = zext i1 %496 to i32
  %498 = shl nuw nsw i32 %497, 19
  %499 = or i32 %498, %493
  %500 = load i32, i32* %25, align 4
  %501 = icmp ne i32 %500, 0
  %502 = zext i1 %501 to i32
  %503 = shl nuw nsw i32 %502, 18
  %504 = or i32 %499, %503
  store i32 %504, i32* %488, align 8
  %505 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 33, i32 0, i32 0, i32 0
  %506 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %505, align 8
  %507 = load i16, i16* %383, align 8
  call void @_ZN4bssl14SSLAEADContext22SetVersionIfNullCipherEt(%"class.bssl::SSLAEADContext"* %506, i16 zeroext %507) #8
  %508 = load i32, i32* %23, align 4
  %509 = icmp ne i32 %508, 0
  %510 = zext i1 %509 to i32
  %511 = load i32, i32* %488, align 8
  %512 = shl nuw nsw i32 %510, 7
  %513 = and i32 %511, -129
  %514 = or i32 %512, %513
  store i32 %514, i32* %488, align 8
  %515 = icmp eq i32 %120, 2
  br i1 %515, label %527, label %516

516:                                              ; preds = %485
  %517 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 20
  %518 = call zeroext i1 @_ZN4bssl13SSLTranscript4InitEv(%"class.bssl::SSLTranscript"* %517) #8
  br i1 %518, label %519, label %675

519:                                              ; preds = %516
  %520 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #8
  %521 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %252, align 8
  %522 = call zeroext i1 @_ZN4bssl13SSLTranscript8InitHashEtPK13ssl_cipher_st(%"class.bssl::SSLTranscript"* %517, i16 zeroext %520, %struct.ssl_cipher_st* %521) #8
  br i1 %522, label %523, label %675

523:                                              ; preds = %519
  %524 = load i8*, i8** %90, align 8
  %525 = load i64, i64* %91, align 8
  %526 = call zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"* %517, i8* %524, i64 %525) #8
  br i1 %526, label %527, label %675

527:                                              ; preds = %523, %485
  br i1 %179, label %528, label %608

528:                                              ; preds = %527
  %529 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 20
  %530 = call i64 @_ZNK4bssl13SSLTranscript9DigestLenEv(%"class.bssl::SSLTranscript"* %529) #8
  call void @_ZN4bssl13SSL_HANDSHAKE13ResizeSecretsEm(%"struct.bssl::SSL_HANDSHAKE"* %176, i64 %530) #8
  %531 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 12, i64 0
  %532 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 7
  %533 = load i64, i64* %532, align 8
  %534 = call i64 @CBS_len(%struct.cbs_st* nonnull %31) #8
  %535 = icmp eq i64 %534, %533
  br i1 %535, label %536, label %675

536:                                              ; preds = %528
  %537 = call i8* @CBS_data(%struct.cbs_st* nonnull %31) #8
  %538 = icmp eq i64 %533, 0
  br i1 %538, label %540, label %539

539:                                              ; preds = %536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %531, i8* align 1 %537, i64 %533, i1 false) #8
  br label %540

540:                                              ; preds = %536, %539
  %541 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 13, i64 0
  %542 = load i64, i64* %532, align 8
  %543 = call i64 @CBS_len(%struct.cbs_st* nonnull %32) #8
  %544 = icmp eq i64 %543, %542
  br i1 %544, label %545, label %675

545:                                              ; preds = %540
  %546 = call i8* @CBS_data(%struct.cbs_st* nonnull %32) #8
  %547 = icmp eq i64 %542, 0
  br i1 %547, label %549, label %548

548:                                              ; preds = %545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %541, i8* align 1 %546, i64 %542, i1 false) #8
  br label %549

549:                                              ; preds = %545, %548
  %550 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 10, i64 0
  %551 = load i64, i64* %532, align 8
  %552 = call i64 @CBS_len(%struct.cbs_st* nonnull %29) #8
  %553 = icmp eq i64 %552, %551
  br i1 %553, label %554, label %675

554:                                              ; preds = %549
  %555 = call i8* @CBS_data(%struct.cbs_st* nonnull %29) #8
  %556 = icmp eq i64 %551, 0
  br i1 %556, label %558, label %557

557:                                              ; preds = %554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %550, i8* align 1 %555, i64 %551, i1 false) #8
  br label %558

558:                                              ; preds = %554, %557
  %559 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 11, i64 0
  %560 = load i64, i64* %532, align 8
  %561 = call i64 @CBS_len(%struct.cbs_st* nonnull %30) #8
  %562 = icmp eq i64 %561, %560
  br i1 %562, label %563, label %675

563:                                              ; preds = %558
  %564 = call i8* @CBS_data(%struct.cbs_st* nonnull %30) #8
  %565 = icmp eq i64 %560, 0
  br i1 %565, label %567, label %566

566:                                              ; preds = %563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %559, i8* align 1 %564, i64 %560, i1 false) #8
  br label %567

567:                                              ; preds = %563, %566
  %568 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 8, i64 0
  %569 = load i64, i64* %532, align 8
  %570 = call i64 @CBS_len(%struct.cbs_st* nonnull %33) #8
  %571 = icmp eq i64 %570, %569
  br i1 %571, label %572, label %675

572:                                              ; preds = %567
  %573 = call i8* @CBS_data(%struct.cbs_st* nonnull %33) #8
  %574 = icmp eq i64 %569, 0
  br i1 %574, label %576, label %575

575:                                              ; preds = %572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %568, i8* align 1 %573, i64 %569, i1 false) #8
  br label %576

576:                                              ; preds = %572, %575
  %577 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 37, i64 0
  %578 = call i64 @_ZNK4bssl13SSLTranscript9DigestLenEv(%"class.bssl::SSLTranscript"* %529) #8
  %579 = call i64 @CBS_len(%struct.cbs_st* nonnull %34) #8
  %580 = icmp eq i64 %579, %578
  br i1 %580, label %581, label %675

581:                                              ; preds = %576
  %582 = call i8* @CBS_data(%struct.cbs_st* nonnull %34) #8
  %583 = icmp eq i64 %578, 0
  br i1 %583, label %585, label %584

584:                                              ; preds = %581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %577, i8* align 1 %582, i64 %578, i1 false) #8
  br label %585

585:                                              ; preds = %581, %584
  %586 = call i64 @CBS_len(%struct.cbs_st* nonnull %34) #8
  %587 = trunc i64 %586 to i8
  %588 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 40
  store i8 %587, i8* %588, align 2
  %589 = load i16, i16* %384, align 1
  %590 = and i16 %589, 4096
  %591 = icmp eq i16 %590, 0
  br i1 %591, label %601, label %592

592:                                              ; preds = %585
  %593 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 9, i64 0
  %594 = load i64, i64* %532, align 8
  %595 = call i64 @CBS_len(%struct.cbs_st* nonnull %35) #8
  %596 = icmp eq i64 %595, %594
  br i1 %596, label %597, label %675

597:                                              ; preds = %592
  %598 = call i8* @CBS_data(%struct.cbs_st* nonnull %35) #8
  %599 = icmp eq i64 %594, 0
  br i1 %599, label %601, label %600

600:                                              ; preds = %597
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %593, i8* align 1 %598, i64 %594, i1 false) #8
  br label %601

601:                                              ; preds = %585, %597, %600
  %602 = bitcast %"class.bssl::Array"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %602) #8
  %603 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %42, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %602, i8 0, i64 16, i1 false) #8
  %604 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 40, i32 0, i32 0, i32 0
  %605 = load %struct.ssl_session_st*, %struct.ssl_session_st** %604, align 8
  %606 = load i64, i64* %532, align 8
  %607 = call zeroext i1 @_ZN4bssl21tls13_set_traffic_keyEP6ssl_st22ssl_encryption_level_t20evp_aead_direction_tPK14ssl_session_stNS_4SpanIKhEE(%struct.ssl_st* %0, i32 3, i32 1, %struct.ssl_session_st* %605, i8* %541, i64 %606) #8
  br i1 %607, label %623, label %659

608:                                              ; preds = %527
  %609 = bitcast %"class.bssl::Array"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %609) #8
  %610 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %42, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %609, i8 0, i64 16, i1 false) #8
  switch i32 %120, label %623 [
    i32 0, label %611
    i32 2, label %615
  ]

611:                                              ; preds = %608
  %612 = load i8*, i8** %74, align 8
  %613 = load i64, i64* %75, align 8
  %614 = call zeroext i1 @_ZN4bssl19tls1_configure_aeadEP6ssl_st20evp_aead_direction_tPNS_5ArrayIhEEPK14ssl_session_stNS_4SpanIKhEE(%struct.ssl_st* %0, i32 1, %"class.bssl::Array"* nonnull %42, %struct.ssl_session_st* nonnull %206, i8* %612, i64 %613) #8
  br i1 %614, label %623, label %659

615:                                              ; preds = %608
  %616 = load i8*, i8** %74, align 8
  %617 = load i64, i64* %75, align 8
  %618 = call zeroext i1 @_ZN4bssl19tls1_configure_aeadEP6ssl_st20evp_aead_direction_tPNS_5ArrayIhEEPK14ssl_session_stNS_4SpanIKhEE(%struct.ssl_st* %0, i32 1, %"class.bssl::Array"* nonnull %42, %struct.ssl_session_st* nonnull %206, i8* %616, i64 %617) #8
  br i1 %618, label %619, label %659

619:                                              ; preds = %615
  %620 = load i8*, i8** %70, align 8
  %621 = load i64, i64* %71, align 8
  %622 = call zeroext i1 @_ZN4bssl19tls1_configure_aeadEP6ssl_st20evp_aead_direction_tPNS_5ArrayIhEEPK14ssl_session_stNS_4SpanIKhEE(%struct.ssl_st* %0, i32 0, %"class.bssl::Array"* nonnull %42, %struct.ssl_session_st* nonnull %206, i8* %620, i64 %621) #8
  br i1 %622, label %623, label %659

623:                                              ; preds = %611, %601, %619, %608
  %624 = phi i8** [ %610, %611 ], [ %603, %601 ], [ %610, %619 ], [ %610, %608 ]
  %625 = phi i8* [ %609, %611 ], [ %602, %601 ], [ %609, %619 ], [ %609, %608 ]
  %626 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #8
  %627 = icmp eq i64 %626, 8
  br i1 %627, label %628, label %659

628:                                              ; preds = %623
  %629 = call i8* @CBS_data(%struct.cbs_st* nonnull %9) #8
  %630 = bitcast i8* %629 to i64*
  %631 = bitcast %"struct.bssl::SSL3_STATE"* %54 to i64*
  %632 = load i64, i64* %630, align 1
  store i64 %632, i64* %631, align 1
  %633 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #8
  %634 = icmp eq i64 %633, 8
  br i1 %634, label %635, label %659

635:                                              ; preds = %628
  %636 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 1, i64 0
  %637 = call i8* @CBS_data(%struct.cbs_st* nonnull %10) #8
  %638 = bitcast i8* %637 to i64*
  %639 = bitcast i8* %636 to i64*
  %640 = load i64, i64* %638, align 1
  store i64 %640, i64* %639, align 1
  %641 = icmp eq i32 %120, 1
  br i1 %641, label %642, label %659

642:                                              ; preds = %635
  %643 = call %"class.bssl::SSLKeyShare"* @_ZN4bssl11SSLKeyShare6CreateEP6cbs_st(%struct.cbs_st* nonnull %20) #8
  %644 = ptrtoint %"class.bssl::SSLKeyShare"* %643 to i64
  %645 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %176, i64 0, i32 19, i64 0
  %646 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %645, i64 0, i32 0, i32 0, i32 0
  %647 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %646, align 8
  %648 = bitcast %"class.std::__1::unique_ptr.45"* %645 to i64*
  store i64 %644, i64* %648, align 8
  %649 = icmp eq %"class.bssl::SSLKeyShare"* %647, null
  br i1 %649, label %656, label %650

650:                                              ; preds = %642
  %651 = bitcast %"class.bssl::SSLKeyShare"* %647 to void (%"class.bssl::SSLKeyShare"*)***
  %652 = load void (%"class.bssl::SSLKeyShare"*)**, void (%"class.bssl::SSLKeyShare"*)*** %651, align 8
  %653 = load void (%"class.bssl::SSLKeyShare"*)*, void (%"class.bssl::SSLKeyShare"*)** %652, align 8
  call void %653(%"class.bssl::SSLKeyShare"* nonnull %647) #8
  %654 = bitcast %"class.bssl::SSLKeyShare"* %647 to i8*
  call void @OPENSSL_free(i8* nonnull %654) #8
  %655 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %646, align 8
  br label %656

656:                                              ; preds = %650, %642
  %657 = phi %"class.bssl::SSLKeyShare"* [ %655, %650 ], [ %643, %642 ]
  %658 = icmp ne %"class.bssl::SSLKeyShare"* %657, null
  br label %659

659:                                              ; preds = %656, %635, %628, %623, %601, %615, %619, %611
  %660 = phi i8** [ %610, %611 ], [ %610, %619 ], [ %610, %615 ], [ %603, %601 ], [ %624, %623 ], [ %624, %628 ], [ %624, %635 ], [ %624, %656 ]
  %661 = phi i8* [ %609, %611 ], [ %609, %619 ], [ %609, %615 ], [ %602, %601 ], [ %625, %623 ], [ %625, %628 ], [ %625, %635 ], [ %625, %656 ]
  %662 = phi i1 [ false, %611 ], [ false, %619 ], [ false, %615 ], [ false, %601 ], [ false, %623 ], [ false, %628 ], [ true, %635 ], [ %658, %656 ]
  %663 = load i8*, i8** %660, align 8
  call void @OPENSSL_free(i8* %663) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %661) #8
  br label %675

664:                                              ; preds = %304
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

665:                                              ; preds = %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

666:                                              ; preds = %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

667:                                              ; preds = %295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

668:                                              ; preds = %292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

669:                                              ; preds = %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

670:                                              ; preds = %286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

671:                                              ; preds = %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

672:                                              ; preds = %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

673:                                              ; preds = %313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

674:                                              ; preds = %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #8
  br label %675

675:                                              ; preds = %377, %674, %673, %672, %671, %670, %669, %668, %667, %666, %665, %664, %592, %576, %567, %558, %549, %540, %528, %659, %484, %523, %516, %519, %405, %413, %409, %380, %395, %400, %390
  %676 = phi i1 [ false, %377 ], [ false, %390 ], [ false, %400 ], [ false, %395 ], [ false, %380 ], [ false, %409 ], [ false, %413 ], [ false, %405 ], [ %662, %659 ], [ false, %484 ], [ false, %523 ], [ false, %516 ], [ false, %519 ], [ false, %528 ], [ false, %540 ], [ false, %549 ], [ false, %558 ], [ false, %567 ], [ false, %576 ], [ false, %592 ], [ false, %664 ], [ false, %665 ], [ false, %666 ], [ false, %667 ], [ false, %668 ], [ false, %669 ], [ false, %670 ], [ false, %671 ], [ false, %672 ], [ false, %673 ], [ false, %674 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %272) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %266) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %264) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %262) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %261) #8
  br label %677

677:                                              ; preds = %161, %158, %155, %152, %148, %145, %142, %138, %135, %132, %129, %126, %123, %119, %254, %257, %248, %205, %208, %211, %214, %217, %220, %223, %227, %230, %233, %236, %239, %242, %245, %675, %107, %113, %52
  %678 = phi i1 [ false, %52 ], [ false, %113 ], [ false, %107 ], [ false, %161 ], [ false, %158 ], [ false, %155 ], [ false, %152 ], [ false, %148 ], [ false, %145 ], [ false, %142 ], [ false, %138 ], [ false, %135 ], [ false, %132 ], [ false, %129 ], [ false, %126 ], [ false, %123 ], [ false, %119 ], [ %676, %675 ], [ false, %245 ], [ false, %242 ], [ false, %239 ], [ false, %236 ], [ false, %233 ], [ false, %230 ], [ false, %227 ], [ false, %223 ], [ false, %220 ], [ false, %217 ], [ false, %214 ], [ false, %211 ], [ false, %208 ], [ false, %205 ], [ false, %248 ], [ false, %257 ], [ false, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  br label %679

679:                                              ; preds = %3, %46, %677
  %680 = phi i1 [ %678, %677 ], [ false, %46 ], [ false, %3 ]
  ret i1 %680
}

declare i32 @CBS_copy_bytes(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBS_get_asn1_bool(%struct.cbs_st*, i32*) local_unnamed_addr #2

declare %"struct.bssl::SSL_HANDSHAKE"* @_ZN4bssl17ssl_handshake_newEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

declare %struct.ssl_session_st* @_ZN4bssl17SSL_SESSION_parseEP6cbs_stPKNS_15SSL_X509_METHODEP21crypto_buffer_pool_st(%struct.cbs_st*, %"struct.bssl::SSL_X509_METHOD"*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext) local_unnamed_addr #2

declare i32 @CBS_get_asn1_int64(%struct.cbs_st*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl27ssl_method_supports_versionEPKNS_19SSL_PROTOCOL_METHODEt(%"struct.bssl::SSL_PROTOCOL_METHOD"*, i16 zeroext) local_unnamed_addr #2

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

declare zeroext i16 @SSL_CIPHER_get_min_version(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare zeroext i16 @SSL_CIPHER_get_max_version(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare i32 @_ZN4bssl20ssl_server_handshakeEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) #2

declare i32 @CBS_strdup(%struct.cbs_st*, i8**) local_unnamed_addr #2

declare void @_ZN4bssl14SSLAEADContext22SetVersionIfNullCipherEt(%"class.bssl::SSLAEADContext"*, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl13SSLTranscript4InitEv(%"class.bssl::SSLTranscript"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl13SSLTranscript8InitHashEtPK13ssl_cipher_st(%"class.bssl::SSLTranscript"*, i16 zeroext, %struct.ssl_cipher_st*) local_unnamed_addr #2

declare void @_ZN4bssl13SSL_HANDSHAKE13ResizeSecretsEm(%"struct.bssl::SSL_HANDSHAKE"*, i64) local_unnamed_addr #2

declare i64 @_ZNK4bssl13SSLTranscript9DigestLenEv(%"class.bssl::SSLTranscript"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl19tls1_configure_aeadEP6ssl_st20evp_aead_direction_tPNS_5ArrayIhEEPK14ssl_session_stNS_4SpanIKhEE(%struct.ssl_st*, i32, %"class.bssl::Array"*, %struct.ssl_session_st*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl21tls13_set_traffic_keyEP6ssl_st22ssl_encryption_level_t20evp_aead_direction_tPK14ssl_session_stNS_4SpanIKhEE(%struct.ssl_st*, i32, i32, %struct.ssl_session_st*, i8*, i64) local_unnamed_addr #2

declare %"class.bssl::SSLKeyShare"* @_ZN4bssl11SSLKeyShare6CreateEP6cbs_st(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_serialize_capabilities(%struct.ssl_st* nocapture readnone, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = call i32 @CBB_add_asn1(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3, i32 536870928) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = call fastcc zeroext i1 @_ZN4bsslL18serialize_featuresEP6cbb_st(%struct.cbb_st* nonnull %3)
  br i1 %8, label %9, label %13

9:                                                ; preds = %7
  %10 = call i32 @CBB_flush(%struct.cbb_st* %1) #8
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i32
  br label %13

13:                                               ; preds = %9, %7, %2
  %14 = phi i32 [ 0, %2 ], [ 0, %7 ], [ %12, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_request_handshake_hints(%struct.ssl_st*, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %"class.bssl::Array", align 8
  %9 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %0) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 730) #8
  br label %147

14:                                               ; preds = %5
  %15 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = bitcast %struct.cbs_st* %7 to i8*
  %17 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %18 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %6, i8* %3, i64 %4) #8
  %19 = call i8* @OPENSSL_malloc(i64 136) #8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %14
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #8
  br label %145

22:                                               ; preds = %14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 136, i1 false) #8
  %23 = ptrtoint i8* %19 to i64
  %24 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %7, i32 536870928) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %112, label %26

26:                                               ; preds = %22
  %27 = call fastcc zeroext i1 @_ZN4bsslL21apply_remote_featuresEP6ssl_stP6cbs_st(%struct.ssl_st* %0, %struct.cbs_st* nonnull %7)
  br i1 %27, label %28, label %112

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %30 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %31 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 23
  %32 = load i16, i16* %31, align 1
  %33 = or i16 %32, 20
  store i16 %33, i16* %31, align 1
  %34 = bitcast %"class.bssl::Array"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %8, i64 0, i32 0
  %36 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #8
  %37 = bitcast %"class.bssl::internal::StackAllocated.118"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %9, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %38) #8
  %39 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 32, i1 false)
  %40 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %41 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %40, align 8
  %42 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %41, i64 0, i32 11
  %43 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %42, align 8
  %44 = call zeroext i1 %43(%struct.ssl_st* %0, %struct.cbb_st* nonnull %38, %struct.cbb_st* nonnull %10, i8 zeroext 1) #8
  br i1 %44, label %45, label %108

45:                                               ; preds = %28
  %46 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %10, i8* %1, i64 %2) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %108, label %48

48:                                               ; preds = %45
  %49 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %40, align 8
  %50 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %49, i64 0, i32 12
  %51 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)** %50, align 8
  %52 = call zeroext i1 %51(%struct.ssl_st* %0, %struct.cbb_st* nonnull %38, %"class.bssl::Array"* nonnull %8) #8
  br i1 %52, label %53, label %108

53:                                               ; preds = %48
  %54 = call %struct.buf_mem_st* @BUF_MEM_new() #8
  %55 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 25, i32 0, i32 0, i32 0
  %56 = load %struct.buf_mem_st*, %struct.buf_mem_st** %55, align 8
  store %struct.buf_mem_st* %54, %struct.buf_mem_st** %55, align 8
  %57 = icmp eq %struct.buf_mem_st* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %56) #8
  %59 = load %struct.buf_mem_st*, %struct.buf_mem_st** %55, align 8
  br label %60

60:                                               ; preds = %53, %58
  %61 = phi %struct.buf_mem_st* [ %54, %53 ], [ %59, %58 ]
  %62 = icmp eq %struct.buf_mem_st* %61, null
  br i1 %62, label %108, label %63

63:                                               ; preds = %60
  %64 = load i8*, i8** %35, align 8
  %65 = load i64, i64* %36, align 8
  %66 = call i32 @BUF_MEM_append(%struct.buf_mem_st* nonnull %61, i8* %64, i64 %65) #8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %108, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 34, i32 0, i32 0, i32 0
  %70 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %69, align 8
  %71 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %70, i64 0, i32 46
  %72 = load i32, i32* %71, align 8
  %73 = or i32 %72, 8388608
  store i32 %73, i32* %71, align 8
  %74 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %69, align 8
  %75 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %74, i64 0, i32 45
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.bssl::SSL_HANDSHAKE_HINTS"*, %"struct.bssl::SSL_HANDSHAKE_HINTS"** %76, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.70"* %75 to i64*
  store i64 %23, i64* %78, align 8
  %79 = icmp eq %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, null
  br i1 %79, label %108, label %80

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, i64 0, i32 10
  %82 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %81, i64 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @OPENSSL_free(i8* %83) #8
  %84 = bitcast %"class.bssl::Array"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #8
  %85 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, i64 0, i32 9
  %86 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %85, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @OPENSSL_free(i8* %87) #8
  %88 = bitcast %"class.bssl::Array"* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #8
  %89 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, i64 0, i32 8
  %90 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %89, i64 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @OPENSSL_free(i8* %91) #8
  %92 = bitcast %"class.bssl::Array"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #8
  %93 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, i64 0, i32 7
  %94 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %93, i64 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @OPENSSL_free(i8* %95) #8
  %96 = bitcast %"class.bssl::Array"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #8
  %97 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, i64 0, i32 4
  %98 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %97, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @OPENSSL_free(i8* %99) #8
  %100 = bitcast %"class.bssl::Array"* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #8
  %101 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, i64 0, i32 3
  %102 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %101, i64 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @OPENSSL_free(i8* %103) #8
  %104 = bitcast %"class.bssl::Array"* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #8
  %105 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77, i64 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @OPENSSL_free(i8* %106) #8
  %107 = bitcast %"struct.bssl::SSL_HANDSHAKE_HINTS"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 0, i64 16, i1 false) #8
  call void @OPENSSL_free(i8* nonnull %107) #8
  br label %108

108:                                              ; preds = %60, %80, %68, %63, %28, %48, %45
  %109 = phi i64 [ %23, %45 ], [ %23, %63 ], [ %23, %60 ], [ %23, %48 ], [ %23, %28 ], [ 0, %68 ], [ 0, %80 ]
  %110 = phi i32 [ 0, %45 ], [ 0, %63 ], [ 0, %60 ], [ 0, %48 ], [ 0, %28 ], [ 1, %68 ], [ 1, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #8
  call void @CBB_cleanup(%struct.cbb_st* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #8
  %111 = load i8*, i8** %35, align 8
  call void @OPENSSL_free(i8* %111) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8
  br label %112

112:                                              ; preds = %26, %22, %108
  %113 = phi i64 [ %23, %22 ], [ %109, %108 ], [ %23, %26 ]
  %114 = phi i32 [ 0, %22 ], [ %110, %108 ], [ 0, %26 ]
  %115 = inttoptr i64 %113 to %"struct.bssl::SSL_HANDSHAKE_HINTS"*
  %116 = icmp eq i64 %113, 0
  br i1 %116, label %145, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %115, i64 0, i32 10
  %119 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %118, i64 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void @OPENSSL_free(i8* %120) #8
  %121 = bitcast %"class.bssl::Array"* %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #8
  %122 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %115, i64 0, i32 9
  %123 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %122, i64 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @OPENSSL_free(i8* %124) #8
  %125 = bitcast %"class.bssl::Array"* %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false) #8
  %126 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %115, i64 0, i32 8
  %127 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  call void @OPENSSL_free(i8* %128) #8
  %129 = bitcast %"class.bssl::Array"* %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #8
  %130 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %115, i64 0, i32 7
  %131 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %130, i64 0, i32 0
  %132 = load i8*, i8** %131, align 8
  call void @OPENSSL_free(i8* %132) #8
  %133 = bitcast %"class.bssl::Array"* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 16, i1 false) #8
  %134 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %115, i64 0, i32 4
  %135 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %134, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @OPENSSL_free(i8* %136) #8
  %137 = bitcast %"class.bssl::Array"* %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false) #8
  %138 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %115, i64 0, i32 3
  %139 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %138, i64 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @OPENSSL_free(i8* %140) #8
  %141 = bitcast %"class.bssl::Array"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 16, i1 false) #8
  %142 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %115, i64 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @OPENSSL_free(i8* %143) #8
  %144 = inttoptr i64 %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 16, i1 false) #8
  call void @OPENSSL_free(i8* nonnull %144) #8
  br label %145

145:                                              ; preds = %21, %112, %117
  %146 = phi i32 [ 0, %21 ], [ %114, %112 ], [ %114, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  br label %147

147:                                              ; preds = %145, %13
  %148 = phi i32 [ 0, %13 ], [ %146, %145 ]
  ret i32 %148
}

declare i32 @SSL_is_dtls(%struct.ssl_st*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_serialize_handshake_hints(%struct.ssl_st* nocapture readonly, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 34, i32 0, i32 0, i32 0
  %12 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %14 = load i8, i8* %13, align 4
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %12, i64 0, i32 46
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 8388608
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17, %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 809) #8
  br label %142

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %12, i64 0, i32 45, i32 0, i32 0, i32 0
  %25 = load %"struct.bssl::SSL_HANDSHAKE_HINTS"*, %"struct.bssl::SSL_HANDSHAKE_HINTS"** %24, align 8
  %26 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  %27 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %28 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false)
  %29 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  %30 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = call i32 @CBB_add_asn1(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3, i32 536870928) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %140, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %34
  %39 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4, i32 -2147483648) #8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %140, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = load i64, i64* %35, align 8
  %45 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %43, i64 %44) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %140, label %47

47:                                               ; preds = %41, %34
  %48 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 1
  %49 = load i16, i16* %48, align 8
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %79, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 3, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 4, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %5, i32 -1610612735) #8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %140, label %62

62:                                               ; preds = %59
  %63 = load i16, i16* %48, align 8
  %64 = zext i16 %63 to i64
  %65 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %64) #8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %140, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 3, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = load i64, i64* %52, align 8
  %71 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %69, i64 %70) #8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %140, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 4, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = load i64, i64* %56, align 8
  %77 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %75, i64 %76) #8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %140, label %79

79:                                               ; preds = %73, %47, %55, %51
  %80 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 5
  %81 = load i16, i16* %80, align 8
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %118, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 7, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 9, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %118, label %91

91:                                               ; preds = %87
  %92 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %6, i32 -1610612734) #8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %140, label %94

94:                                               ; preds = %91
  %95 = load i16, i16* %80, align 8
  %96 = zext i16 %95 to i64
  %97 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %6, i64 %96) #8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %140, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 7, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = load i64, i64* %84, align 8
  %103 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %6, i8* %101, i64 %102) #8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %140, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 8, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 8, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %6, i8* %107, i64 %109) #8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %140, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 9, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = load i64, i64* %88, align 8
  %116 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %6, i8* %114, i64 %115) #8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %140, label %118

118:                                              ; preds = %112, %79, %87, %83
  %119 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 10, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %118
  %123 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %7, i32 -2147483645) #8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %140, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 10, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = load i64, i64* %119, align 8
  %129 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* %127, i64 %128) #8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %140, label %131

131:                                              ; preds = %125, %118
  %132 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %25, i64 0, i32 11
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %131
  %136 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %8, i32 -2147483644) #8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %135, %131
  %139 = call i32 @CBB_flush(%struct.cbb_st* %1) #8
  br label %140

140:                                              ; preds = %135, %122, %125, %91, %94, %99, %105, %112, %59, %62, %67, %73, %38, %41, %23, %138
  %141 = phi i32 [ %139, %138 ], [ 0, %23 ], [ 0, %41 ], [ 0, %38 ], [ 0, %73 ], [ 0, %67 ], [ 0, %62 ], [ 0, %59 ], [ 0, %112 ], [ 0, %105 ], [ 0, %99 ], [ 0, %94 ], [ 0, %91 ], [ 0, %125 ], [ 0, %122 ], [ 0, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #8
  br label %142

142:                                              ; preds = %140, %22
  %143 = phi i32 [ %141, %140 ], [ 0, %22 ]
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_handshake_hints(%struct.ssl_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca %struct.cbs_st, align 8
  %18 = alloca %struct.cbs_st, align 8
  %19 = alloca i64, align 8
  %20 = alloca %struct.cbs_st, align 8
  %21 = alloca %struct.cbs_st, align 8
  %22 = alloca %struct.cbs_st, align 8
  %23 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %0) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 876) #8
  br label %324

26:                                               ; preds = %3
  %27 = tail call i8* @OPENSSL_malloc(i64 136) #8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #8
  br label %324

30:                                               ; preds = %26
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 136, i1 false) #8
  %31 = ptrtoint i8* %27 to i64
  %32 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %33 = bitcast %struct.cbs_st* %5 to i8*
  %34 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #8
  %35 = bitcast %struct.cbs_st* %6 to i8*
  %36 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8
  %37 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 0
  %38 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 1
  %39 = bitcast %struct.cbs_st* %7 to i8*
  %40 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #8
  %41 = bitcast %struct.cbs_st* %8 to i8*
  %42 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #8
  %43 = bitcast %struct.cbs_st* %9 to i8*
  %44 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #8
  %45 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %9, i64 0, i32 0
  %46 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %9, i64 0, i32 1
  %47 = bitcast %struct.cbs_st* %10 to i8*
  %48 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #8
  %49 = bitcast i32* %11 to i8*
  %50 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #8
  store i32 -1431655766, i32* %11, align 4
  %51 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #8
  store i32 -1431655766, i32* %12, align 4
  %52 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #8
  store i32 -1431655766, i32* %13, align 4
  %53 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #8
  store i32 -1431655766, i32* %14, align 4
  %54 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #8
  store i32 -1431655766, i32* %15, align 4
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %1, i64 %2) #8
  %55 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5, i32 536870928) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %72, label %57

57:                                               ; preds = %30
  %58 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i32* nonnull %11, i32 -2147483648) #8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %57
  %61 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %7, i32* nonnull %12, i32 -1610612735) #8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %60
  %64 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %8, i32* nonnull %13, i32 -1610612734) #8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %9, i32* nonnull %14, i32 -2147483645) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %10, i32* nonnull %15, i32 -2147483644) #8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69, %66, %63, %60, %57, %30
  call void @ERR_put_error(i32 16, i32 0, i32 316, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 899) #8
  br label %291

73:                                               ; preds = %69
  %74 = load i32, i32* %11, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = load i8*, i8** %37, align 8
  %78 = load i64, i64* %38, align 8
  %79 = bitcast i8* %27 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @OPENSSL_free(i8* %80) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #8
  %81 = icmp eq i64 %78, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %76
  %83 = call i8* @OPENSSL_malloc(i64 %78) #8
  store i8* %83, i8** %79, align 8
  %84 = icmp eq i8* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds i8, i8* %27, i64 8
  %87 = bitcast i8* %86 to i64*
  store i64 %78, i64* %87, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %83, i8* align 1 %77, i64 %78, i1 false) #8
  br label %89

88:                                               ; preds = %82
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %291

89:                                               ; preds = %76, %85, %73
  %90 = load i32, i32* %12, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %148, label %92

92:                                               ; preds = %89
  %93 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  store i64 -6148914691236517206, i64* %16, align 8
  %94 = bitcast %struct.cbs_st* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #8
  %95 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %17, i64 0, i32 0
  %96 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %17, i64 0, i32 1
  %97 = bitcast %struct.cbs_st* %18 to i8*
  %98 = bitcast %struct.cbs_st* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #8
  %99 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %18, i64 0, i32 0
  %100 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %18, i64 0, i32 1
  %101 = bitcast %struct.cbs_st* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  %102 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %7, i64* nonnull %16) #8
  %103 = icmp eq i32 %102, 0
  %104 = load i64, i64* %16, align 8
  %105 = add i64 %104, -1
  %106 = icmp ugt i64 %105, 65534
  %107 = or i1 %103, %106
  br i1 %107, label %142, label %108

108:                                              ; preds = %92
  %109 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %17, i32 4) #8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %142, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds i8, i8* %27, i64 24
  %113 = load i8*, i8** %95, align 8
  %114 = load i64, i64* %96, align 8
  %115 = bitcast i8* %112 to i8**
  %116 = load i8*, i8** %115, align 8
  call void @OPENSSL_free(i8* %116) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #8
  %117 = icmp eq i64 %114, 0
  br i1 %117, label %125, label %118

118:                                              ; preds = %111
  %119 = call i8* @OPENSSL_malloc(i64 %114) #8
  store i8* %119, i8** %115, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds i8, i8* %27, i64 32
  %123 = bitcast i8* %122 to i64*
  store i64 %114, i64* %123, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %119, i8* align 1 %113, i64 %114, i1 false) #8
  br label %125

124:                                              ; preds = %118
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %142

125:                                              ; preds = %121, %111
  %126 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %18, i32 4) #8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %142, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds i8, i8* %27, i64 40
  %130 = load i8*, i8** %99, align 8
  %131 = load i64, i64* %100, align 8
  %132 = bitcast i8* %129 to i8**
  %133 = load i8*, i8** %132, align 8
  call void @OPENSSL_free(i8* %133) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #8
  %134 = icmp eq i64 %131, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %128
  %136 = call i8* @OPENSSL_malloc(i64 %131) #8
  store i8* %136, i8** %132, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds i8, i8* %27, i64 48
  %140 = bitcast i8* %139 to i64*
  store i64 %131, i64* %140, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %136, i8* align 1 %130, i64 %131, i1 false) #8
  br label %143

141:                                              ; preds = %135
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %142

142:                                              ; preds = %141, %124, %125, %108, %92
  call void @ERR_put_error(i32 16, i32 0, i32 316, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 916) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  br label %291

143:                                              ; preds = %138, %128
  %144 = load i64, i64* %16, align 8
  %145 = trunc i64 %144 to i16
  %146 = getelementptr inbounds i8, i8* %27, i64 16
  %147 = bitcast i8* %146 to i16*
  store i16 %145, i16* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  br label %148

148:                                              ; preds = %143, %89
  %149 = load i32, i32* %13, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %228, label %151

151:                                              ; preds = %148
  %152 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #8
  store i64 -6148914691236517206, i64* %19, align 8
  %153 = bitcast %struct.cbs_st* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #8
  %154 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %20, i64 0, i32 0
  %155 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %20, i64 0, i32 1
  %156 = bitcast %struct.cbs_st* %21 to i8*
  %157 = bitcast %struct.cbs_st* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #8
  %158 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %21, i64 0, i32 0
  %159 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %21, i64 0, i32 1
  %160 = bitcast %struct.cbs_st* %22 to i8*
  %161 = bitcast %struct.cbs_st* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #8
  %162 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %22, i64 0, i32 0
  %163 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %22, i64 0, i32 1
  %164 = bitcast %struct.cbs_st* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 -86, i64 16, i1 false)
  %165 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %19) #8
  %166 = icmp eq i32 %165, 0
  %167 = load i64, i64* %19, align 8
  %168 = add i64 %167, -1
  %169 = icmp ugt i64 %168, 65534
  %170 = or i1 %166, %169
  br i1 %170, label %222, label %171

171:                                              ; preds = %151
  %172 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %20, i32 4) #8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %222, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds i8, i8* %27, i64 64
  %176 = load i8*, i8** %154, align 8
  %177 = load i64, i64* %155, align 8
  %178 = bitcast i8* %175 to i8**
  %179 = load i8*, i8** %178, align 8
  call void @OPENSSL_free(i8* %179) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false) #8
  %180 = icmp eq i64 %177, 0
  br i1 %180, label %188, label %181

181:                                              ; preds = %174
  %182 = call i8* @OPENSSL_malloc(i64 %177) #8
  store i8* %182, i8** %178, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds i8, i8* %27, i64 72
  %186 = bitcast i8* %185 to i64*
  store i64 %177, i64* %186, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %182, i8* align 1 %176, i64 %177, i1 false) #8
  br label %188

187:                                              ; preds = %181
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %222

188:                                              ; preds = %184, %174
  %189 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %21, i32 4) #8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %222, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds i8, i8* %27, i64 80
  %193 = load i8*, i8** %158, align 8
  %194 = load i64, i64* %159, align 8
  %195 = bitcast i8* %192 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @OPENSSL_free(i8* %196) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 16, i1 false) #8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %205, label %198

198:                                              ; preds = %191
  %199 = call i8* @OPENSSL_malloc(i64 %194) #8
  store i8* %199, i8** %195, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds i8, i8* %27, i64 88
  %203 = bitcast i8* %202 to i64*
  store i64 %194, i64* %203, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %199, i8* align 1 %193, i64 %194, i1 false) #8
  br label %205

204:                                              ; preds = %198
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %222

205:                                              ; preds = %201, %191
  %206 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %22, i32 4) #8
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %222, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds i8, i8* %27, i64 96
  %210 = load i8*, i8** %162, align 8
  %211 = load i64, i64* %163, align 8
  %212 = bitcast i8* %209 to i8**
  %213 = load i8*, i8** %212, align 8
  call void @OPENSSL_free(i8* %213) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 16, i1 false) #8
  %214 = icmp eq i64 %211, 0
  br i1 %214, label %223, label %215

215:                                              ; preds = %208
  %216 = call i8* @OPENSSL_malloc(i64 %211) #8
  store i8* %216, i8** %212, align 8
  %217 = icmp eq i8* %216, null
  br i1 %217, label %221, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds i8, i8* %27, i64 104
  %220 = bitcast i8* %219 to i64*
  store i64 %211, i64* %220, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %216, i8* align 1 %210, i64 %211, i1 false) #8
  br label %223

221:                                              ; preds = %215
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %222

222:                                              ; preds = %221, %204, %187, %205, %188, %171, %151
  call void @ERR_put_error(i32 16, i32 0, i32 316, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 933) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #8
  br label %291

223:                                              ; preds = %218, %208
  %224 = load i64, i64* %19, align 8
  %225 = trunc i64 %224 to i16
  %226 = getelementptr inbounds i8, i8* %27, i64 56
  %227 = bitcast i8* %226 to i16*
  store i16 %225, i16* %227, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #8
  br label %228

228:                                              ; preds = %223, %148
  %229 = load i32, i32* %14, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %245, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds i8, i8* %27, i64 112
  %233 = load i8*, i8** %45, align 8
  %234 = load i64, i64* %46, align 8
  %235 = bitcast i8* %232 to i8**
  %236 = load i8*, i8** %235, align 8
  call void @OPENSSL_free(i8* %236) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 16, i1 false) #8
  %237 = icmp eq i64 %234, 0
  br i1 %237, label %245, label %238

238:                                              ; preds = %231
  %239 = call i8* @OPENSSL_malloc(i64 %234) #8
  store i8* %239, i8** %235, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds i8, i8* %27, i64 120
  %243 = bitcast i8* %242 to i64*
  store i64 %234, i64* %243, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %239, i8* align 1 %233, i64 %234, i1 false) #8
  br label %245

244:                                              ; preds = %238
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #8
  br label %291

245:                                              ; preds = %231, %241, %228
  %246 = load i32, i32* %15, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %253, label %248

248:                                              ; preds = %245
  %249 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #8
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %291

251:                                              ; preds = %248
  %252 = getelementptr inbounds i8, i8* %27, i64 128
  store i8 1, i8* %252, align 8
  br label %253

253:                                              ; preds = %245, %251
  %254 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %255 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %254, align 8
  %256 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %255, i64 0, i32 34, i32 0, i32 0, i32 0
  %257 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %256, align 8
  %258 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %257, i64 0, i32 45
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = load %"struct.bssl::SSL_HANDSHAKE_HINTS"*, %"struct.bssl::SSL_HANDSHAKE_HINTS"** %259, align 8
  %261 = bitcast %"class.std::__1::unique_ptr.70"* %258 to i64*
  store i64 %31, i64* %261, align 8
  %262 = icmp eq %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, null
  br i1 %262, label %291, label %263

263:                                              ; preds = %253
  %264 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, i64 0, i32 10
  %265 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %264, i64 0, i32 0
  %266 = load i8*, i8** %265, align 8
  call void @OPENSSL_free(i8* %266) #8
  %267 = bitcast %"class.bssl::Array"* %264 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 16, i1 false) #8
  %268 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, i64 0, i32 9
  %269 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %268, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  call void @OPENSSL_free(i8* %270) #8
  %271 = bitcast %"class.bssl::Array"* %268 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %271, i8 0, i64 16, i1 false) #8
  %272 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, i64 0, i32 8
  %273 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %272, i64 0, i32 0
  %274 = load i8*, i8** %273, align 8
  call void @OPENSSL_free(i8* %274) #8
  %275 = bitcast %"class.bssl::Array"* %272 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 16, i1 false) #8
  %276 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, i64 0, i32 7
  %277 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %276, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8
  call void @OPENSSL_free(i8* %278) #8
  %279 = bitcast %"class.bssl::Array"* %276 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 16, i1 false) #8
  %280 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, i64 0, i32 4
  %281 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %280, i64 0, i32 0
  %282 = load i8*, i8** %281, align 8
  call void @OPENSSL_free(i8* %282) #8
  %283 = bitcast %"class.bssl::Array"* %280 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %283, i8 0, i64 16, i1 false) #8
  %284 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, i64 0, i32 3
  %285 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %284, i64 0, i32 0
  %286 = load i8*, i8** %285, align 8
  call void @OPENSSL_free(i8* %286) #8
  %287 = bitcast %"class.bssl::Array"* %284 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %287, i8 0, i64 16, i1 false) #8
  %288 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260, i64 0, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  call void @OPENSSL_free(i8* %289) #8
  %290 = bitcast %"struct.bssl::SSL_HANDSHAKE_HINTS"* %260 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %290, i8 0, i64 16, i1 false) #8
  call void @OPENSSL_free(i8* nonnull %290) #8
  br label %291

291:                                              ; preds = %263, %253, %244, %88, %248, %222, %142, %72
  %292 = phi i64 [ %31, %72 ], [ %31, %248 ], [ %31, %244 ], [ %31, %222 ], [ %31, %142 ], [ %31, %88 ], [ 0, %253 ], [ 0, %263 ]
  %293 = phi i32 [ 0, %72 ], [ 0, %248 ], [ 0, %244 ], [ 0, %222 ], [ 0, %142 ], [ 0, %88 ], [ 1, %253 ], [ 1, %263 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  %294 = inttoptr i64 %292 to %"struct.bssl::SSL_HANDSHAKE_HINTS"*
  %295 = icmp eq i64 %292, 0
  br i1 %295, label %324, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %294, i64 0, i32 10
  %298 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %297, i64 0, i32 0
  %299 = load i8*, i8** %298, align 8
  call void @OPENSSL_free(i8* %299) #8
  %300 = bitcast %"class.bssl::Array"* %297 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %300, i8 0, i64 16, i1 false) #8
  %301 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %294, i64 0, i32 9
  %302 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %301, i64 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @OPENSSL_free(i8* %303) #8
  %304 = bitcast %"class.bssl::Array"* %301 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %304, i8 0, i64 16, i1 false) #8
  %305 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %294, i64 0, i32 8
  %306 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %305, i64 0, i32 0
  %307 = load i8*, i8** %306, align 8
  call void @OPENSSL_free(i8* %307) #8
  %308 = bitcast %"class.bssl::Array"* %305 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %308, i8 0, i64 16, i1 false) #8
  %309 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %294, i64 0, i32 7
  %310 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %309, i64 0, i32 0
  %311 = load i8*, i8** %310, align 8
  call void @OPENSSL_free(i8* %311) #8
  %312 = bitcast %"class.bssl::Array"* %309 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %312, i8 0, i64 16, i1 false) #8
  %313 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %294, i64 0, i32 4
  %314 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %313, i64 0, i32 0
  %315 = load i8*, i8** %314, align 8
  call void @OPENSSL_free(i8* %315) #8
  %316 = bitcast %"class.bssl::Array"* %313 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 16, i1 false) #8
  %317 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %294, i64 0, i32 3
  %318 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %317, i64 0, i32 0
  %319 = load i8*, i8** %318, align 8
  call void @OPENSSL_free(i8* %319) #8
  %320 = bitcast %"class.bssl::Array"* %317 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 16, i1 false) #8
  %321 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %294, i64 0, i32 0, i32 0
  %322 = load i8*, i8** %321, align 8
  call void @OPENSSL_free(i8* %322) #8
  %323 = inttoptr i64 %292 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %323, i8 0, i64 16, i1 false) #8
  call void @OPENSSL_free(i8* nonnull %323) #8
  br label %324

324:                                              ; preds = %296, %291, %29, %25
  %325 = phi i32 [ 0, %25 ], [ 0, %29 ], [ %293, %291 ], [ %293, %296 ]
  ret i32 %325
}

declare i32 @CBS_get_optional_asn1(%struct.cbs_st*, %struct.cbs_st*, i32*, i32) local_unnamed_addr #2

declare { %struct.ssl_cipher_st*, i64 } @_ZN4bssl10AllCiphersEv() local_unnamed_addr #2

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #2

declare { %"struct.bssl::NamedGroup"*, i64 } @_ZN4bssl11NamedGroupsEv() local_unnamed_addr #2

declare i32 @CBS_get_u16(%struct.cbs_st*, i16*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl23SSLCipherPreferenceList4InitERKS0_(%"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4bssl23SSLCipherPreferenceList6RemoveEPK13ssl_cipher_st(%"struct.bssl::SSLCipherPreferenceList"*, %struct.ssl_cipher_st*) local_unnamed_addr #2

declare %struct.stack_st_SSL_CIPHER* @SSL_get_ciphers(%struct.ssl_st*) local_unnamed_addr #2

declare { i16*, i64 } @_ZN4bssl18tls1_get_grouplistEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare i32 @sk_find(%struct.stack_st*, i64*, i8*, i32 (i32 (i8**, i8**)*, i8**, i8**)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @sk_SSL_CIPHER_call_cmp_func(i32 (i8**, i8**)*, i8**, i8**) #5 comdat {
  %4 = alloca %struct.ssl_cipher_st*, align 8
  %5 = alloca %struct.ssl_cipher_st*, align 8
  %6 = bitcast %struct.ssl_cipher_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = bitcast i8** %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.ssl_cipher_st** %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %struct.ssl_cipher_st** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.ssl_cipher_st** %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast i32 (i8**, i8**)* %0 to i32 (%struct.ssl_cipher_st**, %struct.ssl_cipher_st**)*
  %15 = call i32 %14(%struct.ssl_cipher_st** nonnull %4, %struct.ssl_cipher_st** nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret i32 %15
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4bssl23SSLCipherPreferenceListD1Ev(%"struct.bssl::SSLCipherPreferenceList"*) unnamed_addr #6

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #2

declare void @BUF_MEM_free(%struct.buf_mem_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4bssl13SSL_HANDSHAKED1Ev(%"struct.bssl::SSL_HANDSHAKE"*) unnamed_addr #6

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
