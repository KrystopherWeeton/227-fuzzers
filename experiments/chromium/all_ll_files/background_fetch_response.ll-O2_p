; ModuleID = '../../content/public/browser/background_fetch_response.cc'
source_filename = "../../content/public/browser/background_fetch_response.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::BackgroundFetchResponse" = type { %"class.std::__1::vector", %class.scoped_refptr }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.4" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector.9", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.11" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.content::BackgroundFetchResult" = type <{ %"class.std::__1::unique_ptr.16", %"class.base::Time", %"class.base::FilePath", %"class.absl::optional", i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.content::BackgroundFetchResponse"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.storage::BlobDataHandle" }
%"class.storage::BlobDataHandle" = type { %"class.base::SupportsUserData::Data", %class.scoped_refptr.23, %class.scoped_refptr.24 }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%class.scoped_refptr.24 = type { %"class.storage::BlobDataHandle::BlobDataHandleShared"* }
%"class.storage::BlobDataHandle::BlobDataHandleShared" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.25", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::WeakPtr" }
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.27", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN7content23BackgroundFetchResponseC1ERKNSt3__16vectorI4GURLNS1_9allocatorIS3_EEEERK13scoped_refptrIKN3net19HttpResponseHeadersEE = hidden unnamed_addr alias void (%"struct.content::BackgroundFetchResponse"*, %"class.std::__1::vector"*, %class.scoped_refptr*), void (%"struct.content::BackgroundFetchResponse"*, %"class.std::__1::vector"*, %class.scoped_refptr*)* @_ZN7content23BackgroundFetchResponseC2ERKNSt3__16vectorI4GURLNS1_9allocatorIS3_EEEERK13scoped_refptrIKN3net19HttpResponseHeadersEE
@_ZN7content23BackgroundFetchResponseD1Ev = hidden unnamed_addr alias void (%"struct.content::BackgroundFetchResponse"*), void (%"struct.content::BackgroundFetchResponse"*)* @_ZN7content23BackgroundFetchResponseD2Ev
@_ZN7content21BackgroundFetchResultC1ENSt3__110unique_ptrINS_23BackgroundFetchResponseENS1_14default_deleteIS3_EEEEN4base4TimeENS0_13FailureReasonE = hidden unnamed_addr alias void (%"struct.content::BackgroundFetchResult"*, %"struct.content::BackgroundFetchResponse"*, i64, i32), void (%"struct.content::BackgroundFetchResult"*, %"struct.content::BackgroundFetchResponse"*, i64, i32)* @_ZN7content21BackgroundFetchResultC2ENSt3__110unique_ptrINS_23BackgroundFetchResponseENS1_14default_deleteIS3_EEEEN4base4TimeENS0_13FailureReasonE
@_ZN7content21BackgroundFetchResultC1ENSt3__110unique_ptrINS_23BackgroundFetchResponseENS1_14default_deleteIS3_EEEEN4base4TimeERKNS7_8FilePathEN4absl8optionalIN7storage14BlobDataHandleEEEm = hidden unnamed_addr alias void (%"struct.content::BackgroundFetchResult"*, %"struct.content::BackgroundFetchResponse"*, i64, %"class.base::FilePath"*, %"class.absl::optional"*, i64), void (%"struct.content::BackgroundFetchResult"*, %"struct.content::BackgroundFetchResponse"*, i64, %"class.base::FilePath"*, %"class.absl::optional"*, i64)* @_ZN7content21BackgroundFetchResultC2ENSt3__110unique_ptrINS_23BackgroundFetchResponseENS1_14default_deleteIS3_EEEEN4base4TimeERKNS7_8FilePathEN4absl8optionalIN7storage14BlobDataHandleEEEm
@_ZN7content21BackgroundFetchResultD1Ev = hidden unnamed_addr alias void (%"struct.content::BackgroundFetchResult"*), void (%"struct.content::BackgroundFetchResult"*)* @_ZN7content21BackgroundFetchResultD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23BackgroundFetchResponseC2ERKNSt3__16vectorI4GURLNS1_9allocatorIS3_EEEERK13scoped_refptrIKN3net19HttpResponseHeadersEE(%"struct.content::BackgroundFetchResponse"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %class.scoped_refptr* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.content::BackgroundFetchResponse"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %class.GURL** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 120
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %3
  %14 = icmp ugt i64 %11, 153722867280912930
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"struct.content::BackgroundFetchResponse"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #8
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #9
  %19 = bitcast i8* %18 to %class.GURL*
  %20 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %class.GURL** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"struct.content::BackgroundFetchResponse"* %0 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %19, i64 %11
  %24 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %23, %class.GURL** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %26 = load %class.GURL*, %class.GURL** %25, align 8
  %27 = load %class.GURL*, %class.GURL** %5, align 8
  %28 = bitcast %class.GURL** %20 to i64*
  %29 = ptrtoint i8* %18 to i64
  %30 = icmp eq %class.GURL* %26, %27
  br i1 %30, label %39, label %31

31:                                               ; preds = %17, %31
  %32 = phi %class.GURL* [ %35, %31 ], [ %19, %17 ]
  %33 = phi %class.GURL* [ %34, %31 ], [ %26, %17 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %32, %class.GURL* dereferenceable(120) %33) #7
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 1
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %32, i64 1
  %36 = icmp eq %class.GURL* %34, %27
  br i1 %36, label %37, label %31

37:                                               ; preds = %31
  %38 = ptrtoint %class.GURL* %35 to i64
  br label %39

39:                                               ; preds = %37, %17
  %40 = phi i64 [ %29, %17 ], [ %38, %37 ]
  store i64 %40, i64* %28, align 8
  br label %41

41:                                               ; preds = %3, %39
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %43 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %42, align 8
  %44 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %0, i64 0, i32 1, i32 0
  store %"class.net::HttpResponseHeaders"* %43, %"class.net::HttpResponseHeaders"** %44, align 8
  %45 = icmp eq %"class.net::HttpResponseHeaders"* %43, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  br label %49

49:                                               ; preds = %41, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23BackgroundFetchResponseD2Ev(%"struct.content::BackgroundFetchResponse"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %2, align 8
  %4 = icmp eq %"class.net::HttpResponseHeaders"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %3) #7
  %10 = bitcast %"class.net::HttpResponseHeaders"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %5, %9
  %12 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.GURL*, %class.GURL** %12, align 8
  %14 = icmp eq %class.GURL* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GURL* %13 to i8*
  %17 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load %class.GURL*, %class.GURL** %17, align 8
  %19 = icmp eq %class.GURL* %18, %13
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %20
  %21 = phi %class.GURL* [ %22, %20 ], [ %18, %15 ]
  %22 = getelementptr inbounds %class.GURL, %class.GURL* %21, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %22) #7
  %23 = icmp eq %class.GURL* %22, %13
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = bitcast %"struct.content::BackgroundFetchResponse"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi i8* [ %26, %24 ], [ %16, %15 ]
  store %class.GURL* %13, %class.GURL** %17, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %11, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21BackgroundFetchResultC2ENSt3__110unique_ptrINS_23BackgroundFetchResponseENS1_14default_deleteIS3_EEEEN4base4TimeENS0_13FailureReasonE(%"struct.content::BackgroundFetchResult"*, %"struct.content::BackgroundFetchResponse"*, i64, i32) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"struct.content::BackgroundFetchResponse"* %1 to i64
  %6 = bitcast %"struct.content::BackgroundFetchResult"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %8) #7
  %9 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 5
  %12 = bitcast %union.anon.22* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  store i32 %3, i32* %11, align 8
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21BackgroundFetchResultC2ENSt3__110unique_ptrINS_23BackgroundFetchResponseENS1_14default_deleteIS3_EEEEN4base4TimeERKNS7_8FilePathEN4absl8optionalIN7storage14BlobDataHandleEEEm(%"struct.content::BackgroundFetchResult"*, %"struct.content::BackgroundFetchResponse"*, i64, %"class.base::FilePath"* dereferenceable(24), %"class.absl::optional"*, i64) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"struct.content::BackgroundFetchResponse"* %1 to i64
  %8 = bitcast %"struct.content::BackgroundFetchResult"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %10, %"class.base::FilePath"* dereferenceable(24) %3) #7
  %11 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #7
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN7storage14BlobDataHandleC1ERKS0_(%"class.storage::BlobDataHandle"* %17, %"class.storage::BlobDataHandle"* dereferenceable(24) %16) #7
  store i8 1, i8* %11, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 4
  store i64 %5, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 5
  store i32 0, i32* %20, align 8
  ret void
}

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21BackgroundFetchResultD2Ev(%"struct.content::BackgroundFetchResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN7storage14BlobDataHandleD1Ev(%"class.storage::BlobDataHandle"* %6) #7
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %8) #7
  %9 = getelementptr inbounds %"struct.content::BackgroundFetchResult", %"struct.content::BackgroundFetchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.content::BackgroundFetchResponse"*, %"struct.content::BackgroundFetchResponse"** %9, align 8
  store %"struct.content::BackgroundFetchResponse"* null, %"struct.content::BackgroundFetchResponse"** %9, align 8
  %11 = icmp eq %"struct.content::BackgroundFetchResponse"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %10, i64 0, i32 1, i32 0
  %14 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %13, align 8
  %15 = icmp eq %"class.net::HttpResponseHeaders"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %14) #7
  %21 = bitcast %"class.net::HttpResponseHeaders"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %20, %16, %12
  %23 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %10, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.GURL*, %class.GURL** %23, align 8
  %25 = icmp eq %class.GURL* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = bitcast %class.GURL* %24 to i8*
  %28 = getelementptr inbounds %"struct.content::BackgroundFetchResponse", %"struct.content::BackgroundFetchResponse"* %10, i64 0, i32 0, i32 0, i32 1
  %29 = load %class.GURL*, %class.GURL** %28, align 8
  %30 = icmp eq %class.GURL* %29, %24
  br i1 %30, label %38, label %31

31:                                               ; preds = %26, %31
  %32 = phi %class.GURL* [ %33, %31 ], [ %29, %26 ]
  %33 = getelementptr inbounds %class.GURL, %class.GURL* %32, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %33) #7
  %34 = icmp eq %class.GURL* %33, %24
  br i1 %34, label %35, label %31

35:                                               ; preds = %31
  %36 = bitcast %"struct.content::BackgroundFetchResponse"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %26
  %39 = phi i8* [ %37, %35 ], [ %27, %26 ]
  store %class.GURL* %24, %class.GURL** %28, align 8
  tail call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %22, %38
  %41 = bitcast %"struct.content::BackgroundFetchResponse"* %10 to i8*
  tail call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %7, %40
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN7storage14BlobDataHandleC1ERKS0_(%"class.storage::BlobDataHandle"*, %"class.storage::BlobDataHandle"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7storage14BlobDataHandleD1Ev(%"class.storage::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
