; ModuleID = '../../chrome/browser/renderer_context_menu/spelling_menu_observer.cc'
source_filename = "../../chrome/browser/renderer_context_menu/spelling_menu_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SpellingMenuObserver = type { %class.RenderViewContextMenuObserver, %class.RenderViewContextMenuProxy*, %"class.std::__1::vector", %"class.std::__1::basic_string", i64, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.base::RepeatingTimer", %class.PrefMember, %class.PrefMember, i8, %"class.base::WeakPtrFactory.85" }
%class.RenderViewContextMenuObserver = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.SpellingServiceClient* }
%class.SpellingServiceClient = type { %"class.std::__1::list", %class.scoped_refptr }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%class.scoped_refptr = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.14, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.17", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefMember = type { %"class.subtle::PrefMemberBase.base", %class.scoped_refptr.83 }
%"class.subtle::PrefMemberBase.base" = type <{ %class.PrefObserver, %"class.std::__1::basic_string.25", %"class.base::RepeatingCallback.34", %class.PrefService*, i8 }>
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::basic_string.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.28 }
%union.anon.28 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::RepeatingCallback.34" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %class.scoped_refptr.62, %"class.base::RepeatingCallback.63", %class.scoped_refptr.64, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback.34", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.53" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.44, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.44 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted.45", [4 x i8] }>
%"class.base::RefCounted.45" = type { %"class.base::subtle::RefCountedBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.62 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted.45" }>
%"class.base::RepeatingCallback.63" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.64 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.80", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { float }
%class.scoped_refptr.83 = type { %"class.PrefMember<bool>::Internal"* }
%"class.PrefMember<bool>::Internal" = type { %"class.subtle::PrefMemberBase::Internal.base", i8, [4 x i8] }
%"class.subtle::PrefMemberBase::Internal.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.84", [4 x i8], %class.scoped_refptr.14, i8, i8, i8 }>
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.85" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.RenderViewContextMenuProxy = type { i32 (...)** }
%"class.subtle::PrefMemberBase" = type <{ %class.PrefObserver, %"class.std::__1::basic_string.25", %"class.base::RepeatingCallback.34", %class.PrefService*, i8, [7 x i8] }>
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.97" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.86", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.86" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.103", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.109", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.112" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.29 }
%struct.anon.29 = type { i8 }
%"class.subtle::PrefMemberBase::Internal" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.84", [4 x i8], %class.scoped_refptr.14, i8, i8, i8, [5 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"struct.content::ContextMenuParams" = type { %"struct.blink::UntrustworthyContextMenuParams.base", %class.GURL, %class.GURL, %"class.std::__1::map.152" }
%"struct.blink::UntrustworthyContextMenuParams.base" = type <{ i32, i32, i32, [4 x i8], %class.GURL, %"class.std::__1::basic_string", %"class.absl::optional", %class.GURL, %class.GURL, i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string.25", i32, [4 x i8], %class.GURL, %"class.std::__1::vector.145", i32, i32, %"class.gfx::Rect", i32, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"struct.blink::Impression" }
%"struct.blink::Impression" = type { %"class.url::Origin", %"class.absl::optional.135", i64, %"class.absl::optional.140", i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.130" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25", i16, [6 x i8] }>
%"class.absl::optional.130" = type { %"class.absl::optional_internal::optional_data.131" }
%"class.absl::optional_internal::optional_data.131" = type { %"class.absl::optional_internal::optional_data_base.132" }
%"class.absl::optional_internal::optional_data_base.132" = type { %"class.absl::optional_internal::optional_data_dtor_base.133" }
%"class.absl::optional_internal::optional_data_dtor_base.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.135" = type { %"class.absl::optional_internal::optional_data.136" }
%"class.absl::optional_internal::optional_data.136" = type { %"class.absl::optional_internal::optional_data_base.137" }
%"class.absl::optional_internal::optional_data_base.137" = type { %"class.absl::optional_internal::optional_data_dtor_base.138" }
%"class.absl::optional_internal::optional_data_dtor_base.138" = type { i8, %union.anon.139 }
%union.anon.139 = type { %"class.url::Origin" }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"class.base::TimeDelta" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.147" }
%"class.mojo::StructPtr" = type opaque
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.mojo::StructPtr"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string.25", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.123" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GURL* }
%"class.std::__1::map.152" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.SpellcheckService = type { %class.KeyedService, %"class.content::NotificationObserver", %"class.SpellcheckCustomDictionary::Observer", %"class.SpellcheckHunspellDictionary::Observer", %"class.std::__1::unique_ptr.161", %class.PrefChangeRegistrar, %"class.content::NotificationRegistrar", %"class.content::BrowserContext"*, %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.210", %"class.std::__1::vector.248", i8, %"class.base::WeakPtrFactory.256" }
%class.KeyedService = type { i32 (...)** }
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.SpellcheckCustomDictionary::Observer" = type { i32 (...)** }
%"class.SpellcheckHunspellDictionary::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %class.PlatformSpellChecker* }
%class.PlatformSpellChecker = type { i32 (...)** }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.167", %class.PrefService* }
%"class.std::__1::map.167" = type { %"class.std::__1::__tree.168" }
%"class.std::__1::__tree.168" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector.176" }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair.178" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %class.SpellCheckHostMetrics* }
%class.SpellCheckHostMetrics = type { i32, i32, i32, i32, i32, i32, i32, i32, i64, %"class.base::TimeTicks", %"class.std::__1::unordered_set", %"class.base::RepeatingTimer" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.186" }
%"class.std::__1::__hash_table.186" = type <{ %"class.std::__1::unique_ptr.187", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.204", [4 x i8] }>
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189", %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::__hash_node_base.190"** }
%"struct.std::__1::__hash_node_base.190" = type { %"struct.std::__1::__hash_node_base.190"* }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.std::__1::__bucket_list_deallocator.192" }
%"class.std::__1::__bucket_list_deallocator.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::__hash_node_base.190" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %class.SpellcheckCustomDictionary* }
%class.SpellcheckCustomDictionary = type { %class.SpellcheckDictionary, %"class.syncer::SyncableService", %class.scoped_refptr.14, %"class.std::__1::set", %"class.base::FilePath", %"class.base::ObserverList.220", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", i8, %"class.base::OnceCallback", %"class.base::internal::CancelableCallbackImpl", %"class.base::WeakPtrFactory.244" }
%class.SpellcheckDictionary = type { i32 (...)** }
%"class.syncer::SyncableService" = type { i32 (...)**, %"class.base::SupportsWeakPtr" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.213" }
%"class.std::__1::__tree.213" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.25" }
%"class.base::ObserverList.220" = type <{ %"class.std::__1::vector.221", %"class.base::LinkedList.228", i64, i32, [4 x i8] }>
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.223" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.228" = type { %"class.base::LinkNode.229" }
%"class.base::LinkNode.229" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.syncer::SyncChangeProcessor"* }
%"class.syncer::SyncChangeProcessor" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.syncer::SyncErrorFactory"* }
%"class.syncer::SyncErrorFactory" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback", %"class.base::WeakPtrFactory.243" }
%"class.base::WeakPtrFactory.243" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.244" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"class.std::__1::unique_ptr.250"*, %"class.std::__1::unique_ptr.250"*, %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::unique_ptr.250" = type opaque
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::unique_ptr.250"* }
%"class.base::WeakPtrFactory.256" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.269" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.270" = type { %"class.base::internal::WeakPtrBase" }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.content::RenderViewHost" = type { i32 (...)** }
%"class.content::RenderWidgetHost" = type { i32 (...)** }
%"class.content::RenderWidgetHostView" = type { i32 (...)** }
%class.SpellingBubbleModel = type { %class.ConfirmBubbleModel, %"class.content::WebContentsObserver", %class.Profile* }
%class.ConfirmBubbleModel = type { i32 (...)** }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.aura::Window" = type opaque
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { %struct.SpellCheckResult*, %struct.SpellCheckResult*, %"class.std::__1::__compressed_pair.273" }
%struct.SpellCheckResult = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %struct.SpellCheckResult* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.280" }
%"union.absl::variant_internal::DestructibleUnionImpl.280" = type { %"union.absl::variant_internal::DestructibleUnionImpl.281" }
%"union.absl::variant_internal::DestructibleUnionImpl.281" = type { %"union.absl::variant_internal::DestructibleUnionImpl.282" }
%"union.absl::variant_internal::DestructibleUnionImpl.282" = type { %"union.absl::variant_internal::DestructibleUnionImpl.283" }
%"union.absl::variant_internal::DestructibleUnionImpl.283" = type { %"class.std::__1::basic_string.25" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.25", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN10PrefMemberIbED2Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN29RenderViewContextMenuObserver21CommandWillBeExecutedEi = comdat any

$_ZN29RenderViewContextMenuObserver12OnMenuClosedEv = comdat any

$_ZN29RenderViewContextMenuObserver18OnContextMenuShownERKN7content17ContextMenuParamsERKN3gfx4RectE = comdat any

$_ZN29RenderViewContextMenuObserver30OnContextMenuViewBoundsChangedERKN3gfx4RectE = comdat any

$_ZN10PrefMemberIbED0Ev = comdat any

$_ZNK10PrefMemberIbE14CreateInternalEv = comdat any

$_ZNK10PrefMemberIbE8internalEv = comdat any

$_ZN10PrefMemberIbE8InternalD0Ev = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEFvbSE_SK_EE7RunOnceEPNS0_13BindStateBaseEbSE_SK_ = comdat any

$_ZN4base8internal9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEERKNS5_6vectorI16SpellCheckResultNS9_ISF_EEEEEJNS_7WeakPtrIS2_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS2_EEiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7replaceEmmPKDsm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

$_ZTV10PrefMemberIbE = comdat any

$_ZTVN10PrefMemberIbE8InternalE = comdat any

@_ZTV20SpellingMenuObserver = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SpellingMenuObserver*)* @_ZN20SpellingMenuObserverD2Ev to i8*), i8* bitcast (void (%class.SpellingMenuObserver*)* @_ZN20SpellingMenuObserverD0Ev to i8*), i8* bitcast (void (%class.SpellingMenuObserver*, %"struct.content::ContextMenuParams"*)* @_ZN20SpellingMenuObserver8InitMenuERKN7content17ContextMenuParamsE to i8*), i8* bitcast (i1 (%class.SpellingMenuObserver*, i32)* @_ZN20SpellingMenuObserver20IsCommandIdSupportedEi to i8*), i8* bitcast (i1 (%class.SpellingMenuObserver*, i32)* @_ZN20SpellingMenuObserver18IsCommandIdCheckedEi to i8*), i8* bitcast (i1 (%class.SpellingMenuObserver*, i32)* @_ZN20SpellingMenuObserver18IsCommandIdEnabledEi to i8*), i8* bitcast (void (%class.SpellingMenuObserver*, i32)* @_ZN20SpellingMenuObserver14ExecuteCommandEi to i8*), i8* bitcast (void (%class.RenderViewContextMenuObserver*, i32)* @_ZN29RenderViewContextMenuObserver21CommandWillBeExecutedEi to i8*), i8* bitcast (void (%class.RenderViewContextMenuObserver*)* @_ZN29RenderViewContextMenuObserver12OnMenuClosedEv to i8*), i8* bitcast (void (%class.RenderViewContextMenuObserver*, %"struct.content::ContextMenuParams"*, %"class.gfx::Rect"*)* @_ZN29RenderViewContextMenuObserver18OnContextMenuShownERKN7content17ContextMenuParamsERKN3gfx4RectE to i8*), i8* bitcast (void (%class.RenderViewContextMenuObserver*, %"class.gfx::Rect"*)* @_ZN29RenderViewContextMenuObserver30OnContextMenuViewBoundsChangedERKN3gfx4RectE to i8*)] }, align 8
@_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE = external constant [0 x i8], align 1
@_ZN10spellcheck5prefs17kSpellCheckEnableE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [21 x i8] c"GetRemoteSuggestions\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"../../chrome/browser/renderer_context_menu/spelling_menu_observer.cc\00", align 1
@_ZTV10PrefMemberIbE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.subtle::PrefMemberBase"*, %class.PrefService*, %"class.std::__1::basic_string.25"*)* @_ZN6subtle14PrefMemberBase19OnPreferenceChangedEP11PrefServiceRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (void (%class.PrefMember*)* @_ZN10PrefMemberIbED2Ev to i8*), i8* bitcast (void (%class.PrefMember*)* @_ZN10PrefMemberIbED0Ev to i8*), i8* bitcast (void (%class.PrefMember*)* @_ZNK10PrefMemberIbE14CreateInternalEv to i8*), i8* bitcast (%"class.PrefMember<bool>::Internal"* (%class.PrefMember*)* @_ZNK10PrefMemberIbE8internalEv to i8*)] }, comdat, align 8
@_ZTVN10PrefMemberIbE8InternalE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.subtle::PrefMemberBase::Internal"*)* @_ZN6subtle14PrefMemberBase8InternalD2Ev to i8*), i8* bitcast (void (%"class.PrefMember<bool>::Internal"*)* @_ZN10PrefMemberIbE8InternalD0Ev to i8*), i8* bitcast (i1 (%"class.PrefMember<bool>::Internal"*, %"class.base::Value"*)* @_ZNK10PrefMemberIbE8Internal19UpdateValueInternalERKN4base5ValueE to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN20SpellingMenuObserverC1EP26RenderViewContextMenuProxy = hidden unnamed_addr alias void (%class.SpellingMenuObserver*, %class.RenderViewContextMenuProxy*), void (%class.SpellingMenuObserver*, %class.RenderViewContextMenuProxy*)* @_ZN20SpellingMenuObserverC2EP26RenderViewContextMenuProxy
@_ZN20SpellingMenuObserverD1Ev = hidden unnamed_addr alias void (%class.SpellingMenuObserver*), void (%class.SpellingMenuObserver*)* @_ZN20SpellingMenuObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserverC2EP26RenderViewContextMenuProxy(%class.SpellingMenuObserver*, %class.RenderViewContextMenuProxy*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.25", align 8
  %4 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV20SpellingMenuObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  store %class.RenderViewContextMenuProxy* %1, %class.RenderViewContextMenuProxy** %5, align 8
  %6 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6
  %8 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 8
  %9 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 57, i1 false)
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false)
  %11 = tail call i8* @_Znwm(i64 32) #11
  %12 = bitcast i8* %11 to %class.SpellingServiceClient*
  tail call void @_ZN21SpellingServiceClientC1Ev(%class.SpellingServiceClient* nonnull %12) #12
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 9
  tail call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* %15) #12
  %16 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10
  %17 = bitcast %class.PrefMember* %16 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseC2Ev(%"class.subtle::PrefMemberBase"* %17) #12
  %18 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %16, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10, i32 1, i32 0
  store %"class.PrefMember<bool>::Internal"* null, %"class.PrefMember<bool>::Internal"** %19, align 8
  %20 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 11
  %21 = bitcast %class.PrefMember* %20 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseC2Ev(%"class.subtle::PrefMemberBase"* %21) #12
  %22 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %20, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 11, i32 1, i32 0
  store %"class.PrefMember<bool>::Internal"* null, %"class.PrefMember<bool>::Internal"** %23, align 8
  %24 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 12
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 13, i32 0
  %26 = ptrtoint %class.SpellingMenuObserver* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %25, i64 %26) #12
  %27 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %5, align 8
  %28 = icmp eq %class.RenderViewContextMenuProxy* %27, null
  br i1 %28, label %84, label %29

29:                                               ; preds = %2
  %30 = bitcast %class.RenderViewContextMenuProxy* %27 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %31 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %30, align 8
  %32 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %31, i64 15
  %33 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %32, align 8
  %34 = tail call %"class.content::BrowserContext"* %33(%class.RenderViewContextMenuProxy* nonnull %27) #12
  %35 = icmp eq %"class.content::BrowserContext"* %34, null
  br i1 %35, label %84, label %36

36:                                               ; preds = %29
  %37 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %5, align 8
  %38 = bitcast %class.RenderViewContextMenuProxy* %37 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %39 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %38, align 8
  %40 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %39, i64 15
  %41 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %40, align 8
  %42 = tail call %"class.content::BrowserContext"* %41(%class.RenderViewContextMenuProxy* %37) #12
  %43 = tail call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %42) #12
  %44 = bitcast %"class.std::__1::basic_string.25"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %45 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE, i64 0, i64 0)) #12
  %46 = icmp ugt i64 %45, -17
  br i1 %46, label %47, label %49

47:                                               ; preds = %36
  %48 = bitcast %"class.std::__1::basic_string.25"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %48) #13
  unreachable

49:                                               ; preds = %36
  %50 = icmp ult i64 %45, 23
  br i1 %50, label %60, label %51

51:                                               ; preds = %49
  %52 = add nuw i64 %45, 16
  %53 = and i64 %52, -16
  %54 = tail call i8* @_Znwm(i64 %53) #11
  %55 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = or i64 %53, -9223372036854775808
  %57 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %58, align 8
  %59 = bitcast %"class.std::__1::basic_string.25"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %65

60:                                               ; preds = %49
  %61 = trunc i64 %45 to i8
  %62 = bitcast %"class.std::__1::basic_string.25"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 %61, i8* %63, align 1
  %64 = icmp eq i64 %45, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %60, %51
  %66 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %62, %60 ], [ %59, %51 ]
  %67 = phi i8* [ %44, %60 ], [ %54, %51 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %67, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE, i64 0, i64 0), i64 %45, i1 false) #12
  br label %68

68:                                               ; preds = %60, %65
  %69 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %62, %60 ], [ %66, %65 ]
  %70 = phi i8* [ %44, %60 ], [ %67, %65 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 %45
  store i8 0, i8* %71, align 1
  %72 = bitcast %class.Profile* %43 to %class.PrefService* (%class.Profile*)***
  %73 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %72, align 8
  %74 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %73, i64 46
  %75 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %74, align 8
  %76 = tail call %class.PrefService* %75(%class.Profile* %43) #12
  call void @_ZN6subtle14PrefMemberBase4InitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP11PrefService(%"class.subtle::PrefMemberBase"* %17, %"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %3, %class.PrefService* %76) #12
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #11
  br label %83

83:                                               ; preds = %68, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br label %84

84:                                               ; preds = %29, %2, %83
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN21SpellingServiceClientC1Ev(%class.SpellingServiceClient*) unnamed_addr #2

declare void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserverD2Ev(%class.SpellingMenuObserver*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV20SpellingMenuObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 13, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 11
  %5 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 11, i32 1, i32 0
  %7 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %6, align 8
  %8 = icmp eq %"class.PrefMember<bool>::Internal"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %7, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe.84"* %15 to %"class.subtle::PrefMemberBase::Internal"*
  %17 = bitcast %"class.base::RefCountedThreadSafe.84"* %15 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %18 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %18, i64 1
  %20 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %19, align 8
  tail call void %20(%"class.subtle::PrefMemberBase::Internal"* nonnull %16) #12
  br label %21

21:                                               ; preds = %1, %9, %14
  %22 = bitcast %class.PrefMember* %4 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %22) #12
  %23 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10
  %24 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %23, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10, i32 1, i32 0
  %26 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %25, align 8
  %27 = icmp eq %"class.PrefMember<bool>::Internal"* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %26, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.84"* %34 to %"class.subtle::PrefMemberBase::Internal"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.84"* %34 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %37 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %37, i64 1
  %39 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %38, align 8
  tail call void %39(%"class.subtle::PrefMemberBase::Internal"* nonnull %35) #12
  br label %40

40:                                               ; preds = %21, %28, %33
  %41 = bitcast %class.PrefMember* %23 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %41) #12
  %42 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 9
  tail call void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"* %42) #12
  %43 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %44 = load %class.SpellingServiceClient*, %class.SpellingServiceClient** %43, align 8
  store %class.SpellingServiceClient* null, %class.SpellingServiceClient** %43, align 8
  %45 = icmp eq %class.SpellingServiceClient* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %40
  tail call void @_ZN21SpellingServiceClientD1Ev(%class.SpellingServiceClient* nonnull %44) #12
  %47 = bitcast %class.SpellingServiceClient* %44 to i8*
  tail call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %40, %46
  %49 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::basic_string"* %49 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %48, %54
  %58 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::basic_string"* %58 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %57, %63
  %67 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 3
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %66
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %66, %72
  %76 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8
  %79 = icmp eq %"class.std::__1::basic_string"* %78, null
  br i1 %79, label %102, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %82 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2, i32 0, i32 1
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %78
  br i1 %84, label %100, label %85

85:                                               ; preds = %80, %95
  %86 = phi %"class.std::__1::basic_string"* [ %87, %95 ], [ %83, %80 ]
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 -1
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %88, i64 0, i32 1, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  %93 = bitcast %"class.std::__1::basic_string"* %87 to i8**
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %92, %85
  %96 = icmp eq %"class.std::__1::basic_string"* %87, %78
  br i1 %96, label %97, label %85

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector"* %76 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %80
  %101 = phi i8* [ %99, %97 ], [ %81, %80 ]
  store %"class.std::__1::basic_string"* %78, %"class.std::__1::basic_string"** %82, align 8
  tail call void @_ZdlPv(i8* %101) #11
  br label %102

102:                                              ; preds = %75, %100
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10PrefMemberIbED2Ev(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1, i32 0
  %4 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %3, align 8
  %5 = icmp eq %"class.PrefMember<bool>::Internal"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.84"* %12 to %"class.subtle::PrefMemberBase::Internal"*
  %14 = bitcast %"class.base::RefCountedThreadSafe.84"* %12 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %15 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %15, i64 1
  %17 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %16, align 8
  tail call void %17(%"class.subtle::PrefMemberBase::Internal"* nonnull %13) #12
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %class.PrefMember* %0 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %19) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserverD0Ev(%class.SpellingMenuObserver*) unnamed_addr #0 align 2 {
  tail call void @_ZN20SpellingMenuObserverD2Ev(%class.SpellingMenuObserver* %0) #12
  %2 = bitcast %class.SpellingMenuObserver* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserver8InitMenuERKN7content17ContextMenuParamsE(%class.SpellingMenuObserver*, %"struct.content::ContextMenuParams"* dereferenceable(1256)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %5 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %4, align 8
  %6 = bitcast %class.RenderViewContextMenuProxy* %5 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %7 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %6, align 8
  %8 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %7, i64 15
  %9 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %8, align 8
  %10 = tail call %"class.content::BrowserContext"* %9(%class.RenderViewContextMenuProxy* %5) #12
  %11 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %1, i64 0, i32 0, i32 19
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = icmp ne %"class.content::BrowserContext"* %10, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %134

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %1, i64 0, i32 0, i32 16
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %1, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %134, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %1, i64 0, i32 0, i32 17
  %29 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2
  %30 = icmp eq %"class.std::__1::vector"* %29, %28
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %1, i64 0, i32 0, i32 17, i32 0, i32 1
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %29, %"class.std::__1::basic_string"* %33, %"class.std::__1::basic_string"* %35) #12
  br label %36

36:                                               ; preds = %27, %31
  %37 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %37, %"class.std::__1::basic_string"* dereferenceable(24) %17)
  %39 = tail call zeroext i1 @_ZN21SpellingServiceClient11IsAvailableEPN7content14BrowserContextENS_11ServiceTypeE(%"class.content::BrowserContext"* nonnull %10, i32 1) #12
  %40 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 12
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2, i32 0, i32 1
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %46 = icmp eq %"class.std::__1::basic_string"* %43, %45
  %47 = xor i1 %39, true
  %48 = and i1 %46, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %36
  %50 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %4, align 8
  %51 = bitcast %class.RenderViewContextMenuProxy* %50 to void (%class.RenderViewContextMenuProxy*)***
  %52 = load void (%class.RenderViewContextMenuProxy*)**, void (%class.RenderViewContextMenuProxy*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.RenderViewContextMenuProxy*)*, void (%class.RenderViewContextMenuProxy*)** %52, i64 3
  %54 = load void (%class.RenderViewContextMenuProxy*)*, void (%class.RenderViewContextMenuProxy*)** %53, align 8
  tail call void %54(%class.RenderViewContextMenuProxy* %50) #12
  br label %55

55:                                               ; preds = %36, %49
  %56 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %1, i64 0, i32 0, i32 17, i32 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector"* %28 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = sdiv exact i64 %61, 24
  %63 = trunc i64 %62 to i32
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %74

65:                                               ; preds = %55
  %66 = icmp slt i32 %63, 3
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 0
  %68 = shl i64 %62, 32
  %69 = ashr exact i64 %68, 32
  %70 = select i1 %66, i64 %69, i64 3
  br label %71

71:                                               ; preds = %65, %77
  %72 = phi i64 [ 0, %65 ], [ %86, %77 ]
  %73 = icmp eq i64 %72, 5
  br i1 %73, label %74, label %77

74:                                               ; preds = %77, %71, %55
  %75 = load i8, i8* %40, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %89, label %88

77:                                               ; preds = %71
  %78 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %4, align 8
  %79 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 %72
  %81 = bitcast %class.RenderViewContextMenuProxy* %78 to void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)***
  %82 = load void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)**, void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)*** %81, align 8
  %83 = load void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)*, void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)** %82, align 8
  %84 = trunc i64 %72 to i32
  %85 = add i32 %84, 41000
  tail call void %83(%class.RenderViewContextMenuProxy* %78, i32 %85, %"class.std::__1::basic_string"* dereferenceable(24) %80) #12
  %86 = add nuw nsw i64 %72, 1
  %87 = icmp slt i64 %86, %70
  br i1 %87, label %71, label %74

88:                                               ; preds = %74
  tail call void @_ZN20SpellingMenuObserver20GetRemoteSuggestionsEv(%class.SpellingMenuObserver* %0)
  br label %89

89:                                               ; preds = %74, %88
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %90, align 8
  %92 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  %93 = icmp eq %"class.std::__1::basic_string"* %91, %92
  br i1 %93, label %108, label %94

94:                                               ; preds = %89
  %95 = tail call %class.SpellcheckService* @_ZN24SpellcheckServiceFactory13GetForContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* nonnull %10) #12
  %96 = icmp eq %class.SpellcheckService* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = tail call %class.SpellCheckHostMetrics* @_ZNK17SpellcheckService10GetMetricsEv(%class.SpellcheckService* nonnull %95) #12
  %99 = icmp eq %class.SpellCheckHostMetrics* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = tail call %class.SpellCheckHostMetrics* @_ZNK17SpellcheckService10GetMetricsEv(%class.SpellcheckService* nonnull %95) #12
  tail call void @_ZN21SpellCheckHostMetrics21RecordSuggestionStatsEi(%class.SpellCheckHostMetrics* %101, i32 1) #12
  br label %102

102:                                              ; preds = %97, %94, %100
  %103 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %4, align 8
  %104 = bitcast %class.RenderViewContextMenuProxy* %103 to void (%class.RenderViewContextMenuProxy*)***
  %105 = load void (%class.RenderViewContextMenuProxy*)**, void (%class.RenderViewContextMenuProxy*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.RenderViewContextMenuProxy*)*, void (%class.RenderViewContextMenuProxy*)** %105, i64 3
  %107 = load void (%class.RenderViewContextMenuProxy*)*, void (%class.RenderViewContextMenuProxy*)** %106, align 8
  tail call void %107(%class.RenderViewContextMenuProxy* %103) #12
  br label %108

108:                                              ; preds = %102, %89
  %109 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %4, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %3, i32 6647) #12
  %111 = bitcast %class.RenderViewContextMenuProxy* %109 to void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)***
  %112 = load void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)**, void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)*** %111, align 8
  %113 = load void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)*, void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)** %112, align 8
  call void %113(%class.RenderViewContextMenuProxy* %109, i32 41110, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %114 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %114, i64 0, i32 1, i32 1
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %108
  %119 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %120 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %120) #11
  br label %121

121:                                              ; preds = %108, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #12
  %122 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %4, align 8
  %123 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10
  %124 = bitcast %class.PrefMember* %123 to %"class.subtle::PrefMemberBase"*
  call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %124) #12
  %125 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10, i32 1, i32 0
  %126 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %125, align 8
  %127 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %126, i64 0, i32 1
  %128 = load i8, i8* %127, align 1, !range !2
  %129 = icmp ne i8 %128, 0
  %130 = bitcast %class.RenderViewContextMenuProxy* %122 to void (%class.RenderViewContextMenuProxy*, i1)***
  %131 = load void (%class.RenderViewContextMenuProxy*, i1)**, void (%class.RenderViewContextMenuProxy*, i1)*** %130, align 8
  %132 = getelementptr inbounds void (%class.RenderViewContextMenuProxy*, i1)*, void (%class.RenderViewContextMenuProxy*, i1)** %131, i64 11
  %133 = load void (%class.RenderViewContextMenuProxy*, i1)*, void (%class.RenderViewContextMenuProxy*, i1)** %132, align 8
  call void %133(%class.RenderViewContextMenuProxy* %122, i1 zeroext %129) #12
  br label %134

134:                                              ; preds = %16, %2, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !3
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !3
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !6, !noalias !3
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !6, !noalias !3
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !3
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !3
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !6, !noalias !3
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !6, !noalias !3
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !3
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !3
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !6, !noalias !3
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !6, !noalias !3
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !3
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !3
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !6, !noalias !3
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !6, !noalias !3
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !8

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !3
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !3
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !6, !noalias !3
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !6, !noalias !3
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !10

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !12

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !13

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !14
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !14
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !17, !noalias !14
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !17, !noalias !14
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !14
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !14
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !17, !noalias !14
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !17, !noalias !14
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !14
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !14
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !17, !noalias !14
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !17, !noalias !14
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !14
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !14
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !17, !noalias !14
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !17, !noalias !14
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !19

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !14
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !14
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !17, !noalias !14
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !17, !noalias !14
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !20

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !21

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !22

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !23
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !23
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !26, !noalias !23
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !26, !noalias !23
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !23
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !23
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !26, !noalias !23
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !26, !noalias !23
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !23
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !23
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !26, !noalias !23
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !26, !noalias !23
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !23
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !23
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !26, !noalias !23
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !26, !noalias !23
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !28

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !23
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !23
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !26, !noalias !23
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !26, !noalias !23
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !29

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !30

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !31

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare zeroext i1 @_ZN21SpellingServiceClient11IsAvailableEPN7content14BrowserContextENS_11ServiceTypeE(%"class.content::BrowserContext"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserver20GetRemoteSuggestionsEv(%class.SpellingMenuObserver*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::OnceCallback.269", align 8
  %6 = alloca %"class.base::WeakPtr.270", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::WeakPtr.270", align 8
  %10 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 5
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6
  %12 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %11)
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %4, i32 6655) #12
  %15 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 3
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %1
  %21 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %20, %1
  %24 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %14, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %25 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %26 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %25, align 8
  %27 = bitcast %class.RenderViewContextMenuProxy* %26 to void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)***
  %28 = load void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)**, void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)*** %27, align 8
  %29 = load void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)*, void (%class.RenderViewContextMenuProxy*, i32, %"class.std::__1::basic_string"*)** %28, align 8
  call void %29(%class.RenderViewContextMenuProxy* %26, i32 50156, %"class.std::__1::basic_string"* dereferenceable(24) %15) #12
  %30 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %25, align 8
  %31 = bitcast %class.RenderViewContextMenuProxy* %30 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %32 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %31, align 8
  %33 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %32, i64 15
  %34 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %33, align 8
  %35 = call %"class.content::BrowserContext"* %34(%class.RenderViewContextMenuProxy* %30) #12
  %36 = icmp eq %"class.content::BrowserContext"* %35, null
  br i1 %36, label %85, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %39 = load %class.SpellingServiceClient*, %class.SpellingServiceClient** %38, align 8
  %40 = bitcast %"class.base::WeakPtr.270"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #12
  %41 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12, !noalias !32
  %42 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 13, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %42) #12, !noalias !32
  %43 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 13, i32 0, i32 1
  %44 = load i64, i64* %43, align 8, !noalias !32
  %45 = getelementptr inbounds %"class.base::WeakPtr.270", %"class.base::WeakPtr.270"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %45, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %44) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12, !noalias !32
  %46 = call i8* @_Znwm(i64 72) #11, !noalias !35
  %47 = bitcast i8* %46 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %47, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector.271"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEFvbSE_SK_EE7RunOnceEPNS0_13BindStateBaseEbSE_SK_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEERKNS5_6vectorI16SpellCheckResultNS9_ISF_EEEEEJNS_7WeakPtrIS2_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE) #12, !noalias !35
  %48 = getelementptr inbounds i8, i8* %46, i64 32
  %49 = bitcast i8* %48 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.SpellingMenuObserver*, i32, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector.271"*)* @_ZN20SpellingMenuObserver30OnGetRemoteSuggestionsCompleteEN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKNS2_6vectorI16SpellCheckResultNS6_ISC_EEEE to i64), i64 0>, <2 x i64>* %49, align 8, !noalias !35
  %50 = getelementptr inbounds i8, i8* %46, i64 48
  %51 = bitcast i8* %50 to %"class.base::internal::WeakReference"*
  %52 = getelementptr inbounds %"class.base::WeakPtr.270", %"class.base::WeakPtr.270"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %51, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %52) #12, !noalias !35
  %53 = getelementptr inbounds i8, i8* %46, i64 56
  %54 = bitcast i8* %53 to i64*
  %55 = getelementptr inbounds %"class.base::WeakPtr.270", %"class.base::WeakPtr.270"* %6, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8, !noalias !35
  store i64 %56, i64* %54, align 8, !noalias !35
  %57 = getelementptr inbounds i8, i8* %46, i64 64
  %58 = bitcast i8* %57 to i32*
  store i32 1, i32* %58, align 4, !noalias !35
  %59 = bitcast %"class.base::OnceCallback.269"* %5 to i8**
  store i8* %46, i8** %59, align 8, !alias.scope !35
  %60 = call zeroext i1 @_ZN21SpellingServiceClient16RequestTextCheckEPN7content14BrowserContextENS_11ServiceTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEN4base12OnceCallbackIFvbSC_RKNS4_6vectorI16SpellCheckResultNS8_ISG_EEEEEEE(%class.SpellingServiceClient* %39, %"class.content::BrowserContext"* nonnull %35, i32 1, %"class.std::__1::basic_string"* dereferenceable(24) %11, %"class.base::OnceCallback.269"* nonnull %5) #12
  %61 = getelementptr inbounds %"class.base::OnceCallback.269", %"class.base::OnceCallback.269"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #12
  br i1 %60, label %62, label %85

62:                                               ; preds = %37
  %63 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 4
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 9
  %65 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 489) #12
  %66 = bitcast %"class.base::WeakPtr.270"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #12
  %67 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #12, !noalias !40
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %42) #12, !noalias !40
  %68 = load i64, i64* %43, align 8, !noalias !40
  %69 = getelementptr inbounds %"class.base::WeakPtr.270", %"class.base::WeakPtr.270"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %69, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %68) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #12, !noalias !40
  %70 = call i8* @_Znwm(i64 72) #11, !noalias !43
  %71 = bitcast i8* %70 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %71, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS2_EEiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE) #12, !noalias !43
  %72 = getelementptr inbounds i8, i8* %70, i64 32
  %73 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.SpellingMenuObserver*, i32)* @_ZN20SpellingMenuObserver23OnAnimationTimerExpiredEi to i64), i64 0>, <2 x i64>* %73, align 8, !noalias !43
  %74 = getelementptr inbounds i8, i8* %70, i64 48
  %75 = bitcast i8* %74 to %"class.base::internal::WeakReference"*
  %76 = getelementptr inbounds %"class.base::WeakPtr.270", %"class.base::WeakPtr.270"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %75, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %76) #12, !noalias !43
  %77 = getelementptr inbounds i8, i8* %70, i64 56
  %78 = bitcast i8* %77 to i64*
  %79 = getelementptr inbounds %"class.base::WeakPtr.270", %"class.base::WeakPtr.270"* %9, i64 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !43
  store i64 %80, i64* %78, align 8, !noalias !43
  %81 = getelementptr inbounds i8, i8* %70, i64 64
  %82 = bitcast i8* %81 to i32*
  store i32 50156, i32* %82, align 4, !noalias !43
  %83 = bitcast %"class.base::RepeatingCallback"* %8 to i8**
  store i8* %70, i8** %83, align 8, !alias.scope !43
  call void @_ZN4base14RepeatingTimer5StartERKNS_8LocationENS_9TimeDeltaENS_17RepeatingCallbackIFvvEEE(%"class.base::RepeatingTimer"* %64, %"class.base::Location"* nonnull dereferenceable(32) %7, i64 1000000, %"class.base::RepeatingCallback"* nonnull %8) #12
  %84 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %84) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %69) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #12
  br label %85

85:                                               ; preds = %37, %62, %23
  ret void
}

declare %class.SpellcheckService* @_ZN24SpellcheckServiceFactory13GetForContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #2

declare %class.SpellCheckHostMetrics* @_ZNK17SpellcheckService10GetMetricsEv(%class.SpellcheckService*) local_unnamed_addr #2

declare void @_ZN21SpellCheckHostMetrics21RecordSuggestionStatsEi(%class.SpellCheckHostMetrics*, i32) local_unnamed_addr #2

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN20SpellingMenuObserver20IsCommandIdSupportedEi(%class.SpellingMenuObserver* nocapture readnone, i32) unnamed_addr #6 align 2 {
  %3 = add i32 %1, -41000
  %4 = icmp ult i32 %3, 5
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  switch i32 %1, label %6 [
    i32 41110, label %7
    i32 50155, label %7
    i32 50156, label %7
    i32 50157, label %7
  ]

6:                                                ; preds = %5
  br label %7

7:                                                ; preds = %5, %5, %5, %5, %2, %6
  %8 = phi i1 [ false, %6 ], [ true, %2 ], [ true, %5 ], [ true, %5 ], [ true, %5 ], [ true, %5 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20SpellingMenuObserver18IsCommandIdCheckedEi(%class.SpellingMenuObserver*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %4 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %3, align 8
  %5 = bitcast %class.RenderViewContextMenuProxy* %4 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %6 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %6, i64 15
  %8 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %7, align 8
  %9 = tail call %"class.content::BrowserContext"* %8(%class.RenderViewContextMenuProxy* %4) #12
  %10 = tail call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %9) #12
  %11 = icmp eq i32 %1, 50157
  br i1 %11, label %12, label %27

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10
  %14 = bitcast %class.PrefMember* %13 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %14) #12
  %15 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10, i32 1, i32 0
  %16 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %15, align 8
  %17 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %16, i64 0, i32 1
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %12
  %21 = bitcast %class.Profile* %10 to i1 (%class.Profile*)***
  %22 = load i1 (%class.Profile*)**, i1 (%class.Profile*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%class.Profile*)*, i1 (%class.Profile*)** %22, i64 7
  %24 = load i1 (%class.Profile*)*, i1 (%class.Profile*)** %23, align 8
  %25 = tail call zeroext i1 %24(%class.Profile* %10) #12
  %26 = xor i1 %25, true
  br label %27

27:                                               ; preds = %12, %2, %20
  %28 = phi i1 [ false, %12 ], [ %26, %20 ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20SpellingMenuObserver18IsCommandIdEnabledEi(%class.SpellingMenuObserver*, i32) unnamed_addr #0 align 2 {
  %3 = add i32 %1, -41000
  %4 = icmp ult i32 %3, 5
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %7 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %6, align 8
  %8 = bitcast %class.RenderViewContextMenuProxy* %7 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %9 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %8, align 8
  %10 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %9, i64 15
  %11 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %10, align 8
  %12 = tail call %"class.content::BrowserContext"* %11(%class.RenderViewContextMenuProxy* %7) #12
  %13 = tail call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %12) #12
  switch i32 %1, label %48 [
    i32 41110, label %14
    i32 50157, label %32
    i32 50156, label %28
  ]

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %14
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp ne i64 %26, 0
  br label %48

28:                                               ; preds = %5
  %29 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 5
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp ne i8 %30, 0
  br label %48

32:                                               ; preds = %5
  %33 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10
  %34 = bitcast %class.PrefMember* %33 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %34) #12
  %35 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10, i32 1, i32 0
  %36 = bitcast %"class.PrefMember<bool>::Internal"** %35 to %"class.subtle::PrefMemberBase::Internal"**
  %37 = load %"class.subtle::PrefMemberBase::Internal"*, %"class.subtle::PrefMemberBase::Internal"** %36, align 8
  %38 = getelementptr inbounds %"class.subtle::PrefMemberBase::Internal", %"class.subtle::PrefMemberBase::Internal"* %37, i64 0, i32 5
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %32
  %42 = bitcast %class.Profile* %13 to i1 (%class.Profile*)***
  %43 = load i1 (%class.Profile*)**, i1 (%class.Profile*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%class.Profile*)*, i1 (%class.Profile*)** %43, i64 7
  %45 = load i1 (%class.Profile*)*, i1 (%class.Profile*)** %44, align 8
  %46 = tail call zeroext i1 %45(%class.Profile* %13) #12
  %47 = xor i1 %46, true
  br label %48

48:                                               ; preds = %32, %25, %28, %41, %5, %2
  %49 = phi i1 [ true, %2 ], [ %31, %28 ], [ %27, %25 ], [ false, %32 ], [ %47, %41 ], [ false, %5 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserver14ExecuteCommandEi(%class.SpellingMenuObserver*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.25", align 8
  %4 = alloca %"class.std::__1::basic_string.25", align 8
  %5 = alloca %"class.std::__1::basic_string.25", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.gfx::Point", align 4
  %9 = alloca %"class.std::__1::basic_string.25", align 8
  %10 = add i32 %1, -41000
  %11 = icmp ult i32 %10, 5
  br i1 %11, label %12, label %43

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %14 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %13, align 8
  %15 = bitcast %class.RenderViewContextMenuProxy* %14 to %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)***
  %16 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)**, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*** %15, align 8
  %17 = getelementptr inbounds %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %16, i64 14
  %18 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %17, align 8
  %19 = tail call %"class.content::WebContents"* %18(%class.RenderViewContextMenuProxy* %14) #12
  %20 = sext i32 %10 to i64
  %21 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 %20
  %24 = bitcast %"class.content::WebContents"* %19 to void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)***
  %25 = load void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)**, void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)*, void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)** %25, i64 108
  %27 = load void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)*, void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)** %26, align 8
  tail call void %27(%"class.content::WebContents"* %19, %"class.std::__1::basic_string"* dereferenceable(24) %23) #12
  %28 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %13, align 8
  %29 = bitcast %class.RenderViewContextMenuProxy* %28 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %30 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %29, align 8
  %31 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %30, i64 15
  %32 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %31, align 8
  %33 = tail call %"class.content::BrowserContext"* %32(%class.RenderViewContextMenuProxy* %28) #12
  %34 = icmp eq %"class.content::BrowserContext"* %33, null
  br i1 %34, label %322, label %35

35:                                               ; preds = %12
  %36 = tail call %class.SpellcheckService* @_ZN24SpellcheckServiceFactory13GetForContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* nonnull %33) #12
  %37 = icmp eq %class.SpellcheckService* %36, null
  br i1 %37, label %322, label %38

38:                                               ; preds = %35
  %39 = tail call %class.SpellCheckHostMetrics* @_ZNK17SpellcheckService10GetMetricsEv(%class.SpellcheckService* nonnull %36) #12
  %40 = icmp eq %class.SpellCheckHostMetrics* %39, null
  br i1 %40, label %322, label %41

41:                                               ; preds = %38
  %42 = tail call %class.SpellCheckHostMetrics* @_ZNK17SpellcheckService10GetMetricsEv(%class.SpellcheckService* nonnull %36) #12
  tail call void @_ZN21SpellCheckHostMetrics23RecordReplacedWordStatsEi(%class.SpellCheckHostMetrics* %42, i32 1) #12
  br label %322

43:                                               ; preds = %2
  switch i32 %1, label %96 [
    i32 50156, label %44
    i32 41110, label %59
  ]

44:                                               ; preds = %43
  %45 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %46 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %45, align 8
  %47 = bitcast %class.RenderViewContextMenuProxy* %46 to %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)***
  %48 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)**, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*** %47, align 8
  %49 = getelementptr inbounds %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %48, i64 14
  %50 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %49, align 8
  %51 = tail call %"class.content::WebContents"* %50(%class.RenderViewContextMenuProxy* %46) #12
  %52 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7
  %53 = bitcast %"class.content::WebContents"* %51 to void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)***
  %54 = load void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)**, void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)*, void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)** %54, i64 108
  %56 = load void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)*, void (%"class.content::WebContents"*, %"class.std::__1::basic_string"*)** %55, align 8
  tail call void %56(%"class.content::WebContents"* %51, %"class.std::__1::basic_string"* dereferenceable(24) %52) #12
  %57 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6
  %58 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %57, %"class.std::__1::basic_string"* dereferenceable(24) %52)
  br label %59

59:                                               ; preds = %44, %43
  %60 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %61 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %60, align 8
  %62 = bitcast %class.RenderViewContextMenuProxy* %61 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %63 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %62, align 8
  %64 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %63, i64 15
  %65 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %64, align 8
  %66 = tail call %"class.content::BrowserContext"* %65(%class.RenderViewContextMenuProxy* %61) #12
  %67 = icmp eq %"class.content::BrowserContext"* %66, null
  br i1 %67, label %96, label %68

68:                                               ; preds = %59
  %69 = tail call %class.SpellcheckService* @_ZN24SpellcheckServiceFactory13GetForContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* nonnull %66) #12
  %70 = icmp eq %class.SpellcheckService* %69, null
  br i1 %70, label %96, label %71

71:                                               ; preds = %68
  %72 = tail call %class.SpellcheckCustomDictionary* @_ZN17SpellcheckService19GetCustomDictionaryEv(%class.SpellcheckService* nonnull %69) #12
  %73 = bitcast %"class.std::__1::basic_string.25"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  %74 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i16*, i16** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %74 to i16*
  %82 = select i1 %78, i16* %80, i16* %81
  %83 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %77 to i64
  %86 = select i1 %78, i64 %84, i64 %85
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.25"* nonnull sret %3, i16* %82, i64 %86) #12
  %87 = call zeroext i1 @_ZN26SpellcheckCustomDictionary7AddWordERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SpellcheckCustomDictionary* %72, %"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %3) #12
  %88 = bitcast %"class.std::__1::basic_string.25"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %71
  %93 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %71, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  br label %96

96:                                               ; preds = %43, %59, %68, %95
  %97 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %98 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %97, align 8
  %99 = bitcast %class.RenderViewContextMenuProxy* %98 to %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)***
  %100 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)**, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*** %99, align 8
  %101 = getelementptr inbounds %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %100, i64 15
  %102 = load %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)*, %"class.content::BrowserContext"* (%class.RenderViewContextMenuProxy*)** %101, align 8
  %103 = call %"class.content::BrowserContext"* %102(%class.RenderViewContextMenuProxy* %98) #12
  %104 = call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %103) #12
  %105 = icmp eq i32 %1, 50157
  br i1 %105, label %106, label %322

106:                                              ; preds = %96
  %107 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10
  %108 = bitcast %class.PrefMember* %107 to %"class.subtle::PrefMemberBase"*
  call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %108) #12
  %109 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 10, i32 1, i32 0
  %110 = bitcast %"class.PrefMember<bool>::Internal"** %109 to %"class.subtle::PrefMemberBase::Internal"**
  %111 = load %"class.subtle::PrefMemberBase::Internal"*, %"class.subtle::PrefMemberBase::Internal"** %110, align 8
  %112 = getelementptr inbounds %"class.subtle::PrefMemberBase::Internal", %"class.subtle::PrefMemberBase::Internal"* %111, i64 0, i32 5
  %113 = load i8, i8* %112, align 1, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %322, label %115

115:                                              ; preds = %106
  %116 = icmp ne %class.Profile* %104, null
  br i1 %116, label %117, label %159

117:                                              ; preds = %115
  %118 = bitcast %class.Profile* %104 to %class.PrefService* (%class.Profile*)***
  %119 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %118, align 8
  %120 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %119, i64 46
  %121 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %120, align 8
  %122 = call %class.PrefService* %121(%class.Profile* nonnull %104) #12
  %123 = bitcast %"class.std::__1::basic_string.25"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #12
  %124 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs17kSpellCheckEnableE, i64 0, i64 0)) #12
  %125 = icmp ugt i64 %124, -17
  br i1 %125, label %126, label %128

126:                                              ; preds = %117
  %127 = bitcast %"class.std::__1::basic_string.25"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %127) #13
  unreachable

128:                                              ; preds = %117
  %129 = icmp ult i64 %124, 23
  br i1 %129, label %139, label %130

130:                                              ; preds = %128
  %131 = add nuw i64 %124, 16
  %132 = and i64 %131, -16
  %133 = call i8* @_Znwm(i64 %132) #11
  %134 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %133, i8** %134, align 8
  %135 = or i64 %132, -9223372036854775808
  %136 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %124, i64* %137, align 8
  %138 = bitcast %"class.std::__1::basic_string.25"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %144

139:                                              ; preds = %128
  %140 = trunc i64 %124 to i8
  %141 = bitcast %"class.std::__1::basic_string.25"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  store i8 %140, i8* %142, align 1
  %143 = icmp eq i64 %124, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %139, %130
  %145 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %141, %139 ], [ %138, %130 ]
  %146 = phi i8* [ %123, %139 ], [ %133, %130 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %146, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs17kSpellCheckEnableE, i64 0, i64 0), i64 %124, i1 false) #12
  br label %147

147:                                              ; preds = %144, %139
  %148 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %145, %144 ], [ %141, %139 ]
  %149 = phi i8* [ %146, %144 ], [ %123, %139 ]
  %150 = getelementptr inbounds i8, i8* %149, i64 %124
  store i8 0, i8* %150, align 1
  %151 = call zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %122, %"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %4) #12
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #11
  br label %158

158:                                              ; preds = %155, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #12
  br i1 %151, label %206, label %159

159:                                              ; preds = %115, %158
  call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %108) #12
  %160 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %109, align 8
  %161 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %160, i64 0, i32 1
  %162 = load i8, i8* %161, align 1, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %206, label %164

164:                                              ; preds = %159
  br i1 %116, label %165, label %322

165:                                              ; preds = %164
  %166 = bitcast %class.Profile* %104 to %class.PrefService* (%class.Profile*)***
  %167 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %166, align 8
  %168 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %167, i64 46
  %169 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %168, align 8
  %170 = call %class.PrefService* %169(%class.Profile* nonnull %104) #12
  %171 = bitcast %"class.std::__1::basic_string.25"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #12
  %172 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs17kSpellCheckEnableE, i64 0, i64 0)) #12
  %173 = icmp ugt i64 %172, -17
  br i1 %173, label %174, label %176

174:                                              ; preds = %165
  %175 = bitcast %"class.std::__1::basic_string.25"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %175) #13
  unreachable

176:                                              ; preds = %165
  %177 = icmp ult i64 %172, 23
  br i1 %177, label %187, label %178

178:                                              ; preds = %176
  %179 = add nuw i64 %172, 16
  %180 = and i64 %179, -16
  %181 = call i8* @_Znwm(i64 %180) #11
  %182 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %181, i8** %182, align 8
  %183 = or i64 %180, -9223372036854775808
  %184 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %172, i64* %185, align 8
  %186 = bitcast %"class.std::__1::basic_string.25"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %192

187:                                              ; preds = %176
  %188 = trunc i64 %172 to i8
  %189 = bitcast %"class.std::__1::basic_string.25"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  store i8 %188, i8* %190, align 1
  %191 = icmp eq i64 %172, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %187, %178
  %193 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %189, %187 ], [ %186, %178 ]
  %194 = phi i8* [ %171, %187 ], [ %181, %178 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %194, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs17kSpellCheckEnableE, i64 0, i64 0), i64 %172, i1 false) #12
  br label %195

195:                                              ; preds = %187, %192
  %196 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %189, %187 ], [ %193, %192 ]
  %197 = phi i8* [ %171, %187 ], [ %194, %192 ]
  %198 = getelementptr inbounds i8, i8* %197, i64 %172
  store i8 0, i8* %198, align 1
  call void @_ZN11PrefService10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefService* %170, %"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %5, i1 zeroext true) #12
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %204) #11
  br label %205

205:                                              ; preds = %195, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #12
  br label %322

206:                                              ; preds = %159, %158
  call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %108) #12
  %207 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %109, align 8
  %208 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %207, i64 0, i32 1
  %209 = load i8, i8* %208, align 1, !range !2
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %211, label %280

211:                                              ; preds = %206
  %212 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %97, align 8
  %213 = bitcast %class.RenderViewContextMenuProxy* %212 to %"class.content::RenderViewHost"* (%class.RenderViewContextMenuProxy*)***
  %214 = load %"class.content::RenderViewHost"* (%class.RenderViewContextMenuProxy*)**, %"class.content::RenderViewHost"* (%class.RenderViewContextMenuProxy*)*** %213, align 8
  %215 = getelementptr inbounds %"class.content::RenderViewHost"* (%class.RenderViewContextMenuProxy*)*, %"class.content::RenderViewHost"* (%class.RenderViewContextMenuProxy*)** %214, i64 13
  %216 = load %"class.content::RenderViewHost"* (%class.RenderViewContextMenuProxy*)*, %"class.content::RenderViewHost"* (%class.RenderViewContextMenuProxy*)** %215, align 8
  %217 = call %"class.content::RenderViewHost"* %216(%class.RenderViewContextMenuProxy* %212) #12
  %218 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %218) #12
  %219 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %220 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %221 = bitcast %"class.content::RenderViewHost"* %217 to %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)***
  %222 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 -86, i64 16, i1 false)
  %223 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)**, %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)*** %221, align 8
  %224 = getelementptr inbounds %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)** %223, i64 2
  %225 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)** %224, align 8
  %226 = call %"class.content::RenderWidgetHost"* %225(%"class.content::RenderViewHost"* %217) #12
  %227 = bitcast %"class.content::RenderWidgetHost"* %226 to %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)***
  %228 = load %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)**, %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)*** %227, align 8
  %229 = getelementptr inbounds %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)** %228, i64 16
  %230 = load %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)** %229, align 8
  %231 = call %"class.content::RenderWidgetHostView"* %230(%"class.content::RenderWidgetHost"* %226) #12
  %232 = bitcast %"class.content::RenderWidgetHostView"* %231 to { i64, i64 } (%"class.content::RenderWidgetHostView"*)***
  %233 = load { i64, i64 } (%"class.content::RenderWidgetHostView"*)**, { i64, i64 } (%"class.content::RenderWidgetHostView"*)*** %232, align 8
  %234 = getelementptr inbounds { i64, i64 } (%"class.content::RenderWidgetHostView"*)*, { i64, i64 } (%"class.content::RenderWidgetHostView"*)** %233, i64 21
  %235 = load { i64, i64 } (%"class.content::RenderWidgetHostView"*)*, { i64, i64 } (%"class.content::RenderWidgetHostView"*)** %234, align 8
  %236 = call { i64, i64 } %235(%"class.content::RenderWidgetHostView"* %231) #12
  %237 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %238 = extractvalue { i64, i64 } %236, 0
  store i64 %238, i64* %237, align 8
  %239 = extractvalue { i64, i64 } %236, 1
  store i64 %239, i64* %220, align 8
  %240 = call i8* @_Znwm(i64 32) #11
  %241 = bitcast i8* %240 to %class.SpellingBubbleModel*
  %242 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %97, align 8
  %243 = bitcast %class.RenderViewContextMenuProxy* %242 to %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)***
  %244 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)**, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*** %243, align 8
  %245 = getelementptr inbounds %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %244, i64 14
  %246 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %245, align 8
  %247 = call %"class.content::WebContents"* %246(%class.RenderViewContextMenuProxy* %242) #12
  call void @_ZN19SpellingBubbleModelC1EP7ProfilePN7content11WebContentsE(%class.SpellingBubbleModel* nonnull %241, %class.Profile* %104, %"class.content::WebContents"* %247) #12
  %248 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %97, align 8
  %249 = bitcast %class.RenderViewContextMenuProxy* %248 to %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)***
  %250 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)**, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*** %249, align 8
  %251 = getelementptr inbounds %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %250, i64 14
  %252 = load %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)*, %"class.content::WebContents"* (%class.RenderViewContextMenuProxy*)** %251, align 8
  %253 = call %"class.content::WebContents"* %252(%class.RenderViewContextMenuProxy* %248) #12
  %254 = bitcast %"class.content::WebContents"* %253 to %"class.aura::Window"* (%"class.content::WebContents"*)***
  %255 = load %"class.aura::Window"* (%"class.content::WebContents"*)**, %"class.aura::Window"* (%"class.content::WebContents"*)*** %254, align 8
  %256 = getelementptr inbounds %"class.aura::Window"* (%"class.content::WebContents"*)*, %"class.aura::Window"* (%"class.content::WebContents"*)** %255, i64 113
  %257 = load %"class.aura::Window"* (%"class.content::WebContents"*)*, %"class.aura::Window"* (%"class.content::WebContents"*)** %256, align 8
  %258 = call %"class.aura::Window"* %257(%"class.content::WebContents"* %253) #12
  %259 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)**, %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)*** %221, align 8
  %260 = getelementptr inbounds %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)** %259, i64 2
  %261 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderViewHost"*)** %260, align 8
  %262 = call %"class.content::RenderWidgetHost"* %261(%"class.content::RenderViewHost"* %217) #12
  %263 = bitcast %"class.content::RenderWidgetHost"* %262 to %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)***
  %264 = load %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)**, %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)*** %263, align 8
  %265 = getelementptr inbounds %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)** %264, i64 16
  %266 = load %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::RenderWidgetHost"*)** %265, align 8
  %267 = call %"class.content::RenderWidgetHostView"* %266(%"class.content::RenderWidgetHost"* %262) #12
  %268 = bitcast %"class.content::RenderWidgetHostView"* %267 to %"class.aura::Window"* (%"class.content::RenderWidgetHostView"*)***
  %269 = load %"class.aura::Window"* (%"class.content::RenderWidgetHostView"*)**, %"class.aura::Window"* (%"class.content::RenderWidgetHostView"*)*** %268, align 8
  %270 = getelementptr inbounds %"class.aura::Window"* (%"class.content::RenderWidgetHostView"*)*, %"class.aura::Window"* (%"class.content::RenderWidgetHostView"*)** %269, i64 11
  %271 = load %"class.aura::Window"* (%"class.content::RenderWidgetHostView"*)*, %"class.aura::Window"* (%"class.content::RenderWidgetHostView"*)** %270, align 8
  %272 = call %"class.aura::Window"* %271(%"class.content::RenderWidgetHostView"* %267) #12
  %273 = bitcast %"class.gfx::Point"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #12
  %274 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* nonnull %7) #12
  %275 = trunc i64 %274 to i32
  %276 = load i32, i32* %219, align 4
  %277 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %8, i64 0, i32 0
  store i32 %275, i32* %277, align 4
  %278 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %8, i64 0, i32 1
  store i32 %276, i32* %278, align 4
  %279 = bitcast i8* %240 to %class.ConfirmBubbleModel*
  call void @_ZN6chrome17ShowConfirmBubbleEPN4aura6WindowES2_RKN3gfx5PointENSt3__110unique_ptrI18ConfirmBubbleModelNS7_14default_deleteIS9_EEEE(%"class.aura::Window"* %258, %"class.aura::Window"* %272, %"class.gfx::Point"* nonnull dereferenceable(8) %8, %class.ConfirmBubbleModel* nonnull %279) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218) #12
  br label %322

280:                                              ; preds = %206
  br i1 %116, label %281, label %322

281:                                              ; preds = %280
  %282 = bitcast %class.Profile* %104 to %class.PrefService* (%class.Profile*)***
  %283 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %282, align 8
  %284 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %283, i64 46
  %285 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %284, align 8
  %286 = call %class.PrefService* %285(%class.Profile* nonnull %104) #12
  %287 = bitcast %"class.std::__1::basic_string.25"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %287) #12
  %288 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE, i64 0, i64 0)) #12
  %289 = icmp ugt i64 %288, -17
  br i1 %289, label %290, label %292

290:                                              ; preds = %281
  %291 = bitcast %"class.std::__1::basic_string.25"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %291) #13
  unreachable

292:                                              ; preds = %281
  %293 = icmp ult i64 %288, 23
  br i1 %293, label %303, label %294

294:                                              ; preds = %292
  %295 = add nuw i64 %288, 16
  %296 = and i64 %295, -16
  %297 = call i8* @_Znwm(i64 %296) #11
  %298 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %297, i8** %298, align 8
  %299 = or i64 %296, -9223372036854775808
  %300 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %288, i64* %301, align 8
  %302 = bitcast %"class.std::__1::basic_string.25"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %308

303:                                              ; preds = %292
  %304 = trunc i64 %288 to i8
  %305 = bitcast %"class.std::__1::basic_string.25"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %306 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %305, i64 0, i32 1, i32 0
  store i8 %304, i8* %306, align 1
  %307 = icmp eq i64 %288, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %303, %294
  %309 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %305, %303 ], [ %302, %294 ]
  %310 = phi i8* [ %287, %303 ], [ %297, %294 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %310, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5prefs29kSpellCheckUseSpellingServiceE, i64 0, i64 0), i64 %288, i1 false) #12
  br label %311

311:                                              ; preds = %303, %308
  %312 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %305, %303 ], [ %309, %308 ]
  %313 = phi i8* [ %287, %303 ], [ %310, %308 ]
  %314 = getelementptr inbounds i8, i8* %313, i64 %288
  store i8 0, i8* %314, align 1
  call void @_ZN11PrefService10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefService* %286, %"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %9, i1 zeroext false) #12
  %315 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %312, i64 0, i32 1, i32 0
  %316 = load i8, i8* %315, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %311
  %319 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %320) #11
  br label %321

321:                                              ; preds = %311, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %287) #12
  br label %322

322:                                              ; preds = %106, %96, %211, %321, %280, %164, %205, %12, %38, %35, %41
  ret void
}

declare void @_ZN21SpellCheckHostMetrics23RecordReplacedWordStatsEi(%class.SpellCheckHostMetrics*, i32) local_unnamed_addr #2

declare %class.SpellcheckCustomDictionary* @_ZN17SpellcheckService19GetCustomDictionaryEv(%class.SpellcheckService*) local_unnamed_addr #2

declare zeroext i1 @_ZN26SpellcheckCustomDictionary7AddWordERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SpellcheckCustomDictionary*, %"class.std::__1::basic_string.25"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.25"* sret, i16*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string.25"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN11PrefService10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefService*, %"class.std::__1::basic_string.25"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare void @_ZN19SpellingBubbleModelC1EP7ProfilePN7content11WebContentsE(%class.SpellingBubbleModel*, %class.Profile*, %"class.content::WebContents"*) unnamed_addr #2

declare void @_ZN6chrome17ShowConfirmBubbleEPN4aura6WindowES2_RKN3gfx5PointENSt3__110unique_ptrI18ConfirmBubbleModelNS7_14default_deleteIS9_EEEE(%"class.aura::Window"*, %"class.aura::Window"*, %"class.gfx::Point"* dereferenceable(8), %class.ConfirmBubbleModel*) local_unnamed_addr #2

declare i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"*) local_unnamed_addr #2

declare zeroext i1 @_ZN21SpellingServiceClient16RequestTextCheckEPN7content14BrowserContextENS_11ServiceTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEN4base12OnceCallbackIFvbSC_RKNS4_6vectorI16SpellCheckResultNS8_ISG_EEEEEEE(%class.SpellingServiceClient*, %"class.content::BrowserContext"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::OnceCallback.269"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserver30OnGetRemoteSuggestionsCompleteEN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKNS2_6vectorI16SpellCheckResultNS6_ISC_EEEE(%class.SpellingMenuObserver*, i32, i1 zeroext, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), %"class.std::__1::vector.271"* nocapture readonly) #0 align 2 {
  %6 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %6) #12
  tail call void @_ZN20SpellingMenuObserver22UpdateRemoteSuggestionEN21SpellingServiceClient11ServiceTypeEbRKNSt3__16vectorI16SpellCheckResultNS2_9allocatorIS4_EEEE(%class.SpellingMenuObserver* %0, i32 %1, i1 zeroext %2, %"class.std::__1::vector.271"* %4)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare void @_ZN4base14RepeatingTimer5StartERKNS_8LocationENS_9TimeDeltaENS_17RepeatingCallbackIFvvEEE(%"class.base::RepeatingTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::RepeatingCallback"*) unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserver23OnAnimationTimerExpiredEi(%class.SpellingMenuObserver*, i32) #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  %8 = and i64 %7, 3
  store i64 %8, i64* %5, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %13 = trunc i64 %8 to i8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  store i8 %13, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %17 = icmp eq i64 %8, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  store i16 46, i16* %16, align 8
  %19 = icmp eq i64 %8, 1
  br i1 %19, label %20, label %56

20:                                               ; preds = %18, %56, %59, %2
  %21 = getelementptr inbounds i16, i16* %16, i64 %8
  store i16 0, i16* %21, align 2
  %22 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1, !noalias !48
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8, !noalias !48
  %28 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !48
  %30 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %31 = zext i8 %24 to i64
  %32 = select i1 %25, i16* %27, i16* %30
  %33 = select i1 %25, i64 %29, i64 %31
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i16* %32, i64 %33) #12, !noalias !48
  %35 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %35, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #12, !noalias !48
  %36 = load i8, i8* %15, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %20
  %39 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %20, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %42 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %43 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %42, align 8
  %44 = bitcast %class.RenderViewContextMenuProxy* %43 to void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)***
  %45 = load void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)**, void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)*, void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)** %45, i64 6
  %47 = load void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)*, void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)** %46, align 8
  call void %47(%class.RenderViewContextMenuProxy* %43, i32 %1, i1 zeroext false, i1 zeroext false, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %48 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %41, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret void

56:                                               ; preds = %18
  %57 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 46, i16* %57, align 2
  %58 = icmp eq i64 %8, 2
  br i1 %58, label %20, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds i16, i16* %16, i64 2
  store i16 46, i16* %60, align 4
  br label %20
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SpellingMenuObserver22UpdateRemoteSuggestionEN21SpellingServiceClient11ServiceTypeEbRKNSt3__16vectorI16SpellCheckResultNS2_9allocatorIS4_EEEE(%class.SpellingMenuObserver*, i32, i1 zeroext, %"class.std::__1::vector.271"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = zext i1 %2 to i8
  %9 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 5
  store i8 %8, i8* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %3, i64 0, i32 0, i32 0
  %11 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.271", %"class.std::__1::vector.271"* %3, i64 0, i32 0, i32 1
  %13 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %12, align 8
  %14 = icmp eq %struct.SpellCheckResult* %11, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7
  br label %54

17:                                               ; preds = %4
  store i8 0, i8* %9, align 8
  br label %154

18:                                               ; preds = %87
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = load i8, i8* %24, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %31 = select i1 %27, i16* %29, i16* %30
  %32 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %31, i64 %35) #12
  %36 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  %38 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 2, i32 0, i32 1
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %40 = icmp eq %"class.std::__1::basic_string"* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %18
  %42 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %145

43:                                               ; preds = %18
  %44 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %52 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %53 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  br label %94

54:                                               ; preds = %15, %87
  %55 = phi %struct.SpellCheckResult* [ %13, %15 ], [ %88, %87 ]
  %56 = phi %struct.SpellCheckResult* [ %11, %15 ], [ %89, %87 ]
  %57 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %56, i64 0, i32 4
  %58 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %56, i64 0, i32 4, i32 0, i32 1
  %59 = bitcast %"class.std::__1::basic_string"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::vector"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = icmp eq i64 %63, 24
  %65 = inttoptr i64 %62 to %"class.std::__1::basic_string"*
  br i1 %64, label %66, label %87

66:                                               ; preds = %54
  %67 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %56, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %56, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = sext i32 %71 to i64
  %73 = inttoptr i64 %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i16*, i16** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = inttoptr i64 %62 to i16*
  %82 = zext i8 %75 to i64
  %83 = select i1 %76, i16* %78, i16* %81
  %84 = select i1 %76, i64 %80, i64 %82
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7replaceEmmPKDsm(%"class.std::__1::basic_string"* %16, i64 %69, i64 %72, i16* %83, i64 %84) #12
  %86 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %12, align 8
  br label %87

87:                                               ; preds = %54, %66
  %88 = phi %struct.SpellCheckResult* [ %55, %54 ], [ %86, %66 ]
  %89 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %56, i64 1
  %90 = icmp eq %struct.SpellCheckResult* %89, %88
  br i1 %90, label %18, label %54

91:                                               ; preds = %142
  %92 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %93 = icmp eq %"class.std::__1::basic_string"* %143, %92
  br i1 %93, label %145, label %94

94:                                               ; preds = %43, %91
  %95 = phi %"class.std::__1::basic_string"* [ %37, %43 ], [ %143, %91 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i16*, i16** %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %95 to i16*
  %103 = select i1 %99, i16* %101, i16* %102
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %98 to i64
  %107 = select i1 %99, i64 %105, i64 %106
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i16* %103, i64 %107) #12
  %108 = load i8, i8* %46, align 1
  %109 = icmp slt i8 %108, 0
  %110 = load i64, i64* %21, align 8
  %111 = zext i8 %108 to i64
  %112 = select i1 %109, i64 %110, i64 %111
  %113 = load i8, i8* %48, align 1
  %114 = icmp slt i8 %113, 0
  %115 = load i64, i64* %49, align 8
  %116 = zext i8 %113 to i64
  %117 = select i1 %114, i64 %115, i64 %116
  %118 = icmp eq i64 %112, %117
  br i1 %118, label %119, label %138

119:                                              ; preds = %94
  %120 = icmp eq i64 %112, 0
  br i1 %120, label %138, label %121

121:                                              ; preds = %119
  %122 = load i16*, i16** %50, align 8
  %123 = select i1 %114, i16* %122, i16* %51
  %124 = load i16*, i16** %20, align 8
  %125 = select i1 %109, i16* %124, i16* %52
  br label %126

126:                                              ; preds = %133, %121
  %127 = phi i64 [ %134, %133 ], [ %112, %121 ]
  %128 = phi i16* [ %136, %133 ], [ %123, %121 ]
  %129 = phi i16* [ %135, %133 ], [ %125, %121 ]
  %130 = load i16, i16* %129, align 2
  %131 = load i16, i16* %128, align 2
  %132 = icmp eq i16 %131, %130
  br i1 %132, label %133, label %138

133:                                              ; preds = %126
  %134 = add i64 %127, -1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = getelementptr inbounds i16, i16* %128, i64 1
  %137 = icmp eq i64 %134, 0
  br i1 %137, label %138, label %126

138:                                              ; preds = %126, %133, %94, %119
  %139 = phi i1 [ false, %94 ], [ true, %119 ], [ true, %133 ], [ false, %126 ]
  br i1 %114, label %140, label %142

140:                                              ; preds = %138
  %141 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %141) #11
  br label %142

142:                                              ; preds = %138, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 1
  br i1 %139, label %144, label %91

144:                                              ; preds = %142
  store i8 0, i8* %9, align 8
  br label %145

145:                                              ; preds = %91, %41, %144
  %146 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %42, %41 ], [ %45, %144 ], [ %45, %91 ]
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %145
  %151 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %145, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  br label %154

154:                                              ; preds = %153, %17
  %155 = icmp eq i32 %1, 2
  br i1 %155, label %182, label %156

156:                                              ; preds = %154
  %157 = load i8, i8* %9, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %173

159:                                              ; preds = %156
  %160 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %7, i32 6656) #12
  %161 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %162, i64 0, i32 1, i32 1
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %161 to i8**
  %168 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %168) #11
  br label %169

169:                                              ; preds = %166, %159
  %170 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* nonnull align 8 %160, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #12
  %171 = load i8, i8* %9, align 8, !range !2
  %172 = icmp ne i8 %171, 0
  br label %173

173:                                              ; preds = %156, %169
  %174 = phi i1 [ true, %156 ], [ %172, %169 ]
  %175 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 1
  %176 = load %class.RenderViewContextMenuProxy*, %class.RenderViewContextMenuProxy** %175, align 8
  %177 = getelementptr inbounds %class.SpellingMenuObserver, %class.SpellingMenuObserver* %0, i64 0, i32 7
  %178 = bitcast %class.RenderViewContextMenuProxy* %176 to void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)***
  %179 = load void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)**, void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)*** %178, align 8
  %180 = getelementptr inbounds void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)*, void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)** %179, i64 6
  %181 = load void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)*, void (%class.RenderViewContextMenuProxy*, i32, i1, i1, %"class.std::__1::basic_string"*)** %180, align 8
  call void %181(%class.RenderViewContextMenuProxy* %176, i32 50156, i1 zeroext %174, i1 zeroext false, %"class.std::__1::basic_string"* dereferenceable(24) %177) #12
  br label %182

182:                                              ; preds = %154, %173
  ret void
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29RenderViewContextMenuObserver21CommandWillBeExecutedEi(%class.RenderViewContextMenuObserver*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29RenderViewContextMenuObserver12OnMenuClosedEv(%class.RenderViewContextMenuObserver*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29RenderViewContextMenuObserver18OnContextMenuShownERKN7content17ContextMenuParamsERKN3gfx4RectE(%class.RenderViewContextMenuObserver*, %"struct.content::ContextMenuParams"* dereferenceable(1256), %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29RenderViewContextMenuObserver30OnContextMenuViewBoundsChangedERKN3gfx4RectE(%class.RenderViewContextMenuObserver*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN6subtle14PrefMemberBaseC2Ev(%"class.subtle::PrefMemberBase"*) unnamed_addr #2

declare void @_ZN6subtle14PrefMemberBase19OnPreferenceChangedEP11PrefServiceRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.subtle::PrefMemberBase"*, %class.PrefService*, %"class.std::__1::basic_string.25"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10PrefMemberIbED0Ev(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1, i32 0
  %4 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %3, align 8
  %5 = icmp eq %"class.PrefMember<bool>::Internal"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.84"* %12 to %"class.subtle::PrefMemberBase::Internal"*
  %14 = bitcast %"class.base::RefCountedThreadSafe.84"* %12 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %15 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %15, i64 1
  %17 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %16, align 8
  tail call void %17(%"class.subtle::PrefMemberBase::Internal"* nonnull %13) #12
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %class.PrefMember* %0 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %19) #12
  %20 = bitcast %class.PrefMember* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK10PrefMemberIbE14CreateInternalEv(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #11
  %3 = bitcast i8* %2 to %"class.subtle::PrefMemberBase::Internal"*
  tail call void @_ZN6subtle14PrefMemberBase8InternalC2Ev(%"class.subtle::PrefMemberBase::Internal"* nonnull %3) #12
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10PrefMemberIbE8InternalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 27
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = ptrtoint i8* %2 to i64
  %11 = bitcast %class.scoped_refptr.83* %6 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr.83, %class.scoped_refptr.83* %6, i64 0, i32 0
  %13 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.PrefMember<bool>::Internal"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %13, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.84", %"class.base::RefCountedThreadSafe.84"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.84"* %21 to %"class.subtle::PrefMemberBase::Internal"*
  %23 = bitcast %"class.base::RefCountedThreadSafe.84"* %21 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %24 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %24, i64 1
  %26 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %25, align 8
  tail call void %26(%"class.subtle::PrefMemberBase::Internal"* nonnull %22) #12
  br label %27

27:                                               ; preds = %1, %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.PrefMember<bool>::Internal"* @_ZNK10PrefMemberIbE8internalEv(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1, i32 0
  %3 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %2, align 8
  ret %"class.PrefMember<bool>::Internal"* %3
}

declare void @_ZN6subtle14PrefMemberBase8InternalC2Ev(%"class.subtle::PrefMemberBase::Internal"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6subtle14PrefMemberBase8InternalD2Ev(%"class.subtle::PrefMemberBase::Internal"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10PrefMemberIbE8InternalD0Ev(%"class.PrefMember<bool>::Internal"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.PrefMember<bool>::Internal"* %0 to %"class.subtle::PrefMemberBase::Internal"*
  tail call void @_ZN6subtle14PrefMemberBase8InternalD2Ev(%"class.subtle::PrefMemberBase::Internal"* %2) #12
  %3 = bitcast %"class.PrefMember<bool>::Internal"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

declare zeroext i1 @_ZNK10PrefMemberIbE8Internal19UpdateValueInternalERKN4base5ValueE(%"class.PrefMember<bool>::Internal"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN21SpellingServiceClientD1Ev(%class.SpellingServiceClient*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"*) unnamed_addr #4

declare void @_ZN6subtle14PrefMemberBase4InitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP11PrefService(%"class.subtle::PrefMemberBase"*, %"class.std::__1::basic_string.25"* dereferenceable(24), %class.PrefService*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %29) #12
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #12
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #13
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #13
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #11
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !51
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !51
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !54, !noalias !51
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !54, !noalias !51
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !51
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !51
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !54, !noalias !51
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !54, !noalias !51
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !51
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !51
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !54, !noalias !51
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !54, !noalias !51
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !51
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !51
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !54, !noalias !51
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !54, !noalias !51
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !56

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !51
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !51
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !54, !noalias !51
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !54, !noalias !51
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !57

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !58

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !59

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #11
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #11
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #11
  %275 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #12
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #13
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #11
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  %293 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 %289
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #12
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #13
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #13
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #11
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !60
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !60
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !63, !noalias !60
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !63, !noalias !60
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !60
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !60
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !63, !noalias !60
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !63, !noalias !60
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !60
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !60
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !63, !noalias !60
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !63, !noalias !60
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !60
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !60
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !63, !noalias !60
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !63, !noalias !60
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !65

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !60
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !60
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !63, !noalias !60
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !63, !noalias !60
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !66

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !67

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !68

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !69
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !69
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !72, !noalias !69
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !72, !noalias !69
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !69
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !69
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !72, !noalias !69
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !72, !noalias !69
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !69
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !69
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !72, !noalias !69
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !72, !noalias !69
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !69
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !69
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !72, !noalias !69
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !72, !noalias !69
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !74

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !69
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !69
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !72, !noalias !69
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !72, !noalias !69
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !75

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !76

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !77

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !78

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !79

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !80

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !82
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !82
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !85, !noalias !82
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !85, !noalias !82
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !82
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !82
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !85, !noalias !82
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !85, !noalias !82
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !82
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !82
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !85, !noalias !82
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !85, !noalias !82
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !82
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !82
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !85, !noalias !82
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !85, !noalias !82
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !87

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !82
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !82
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !85, !noalias !82
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !85, !noalias !82
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !88

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !89

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !90

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"*) local_unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEFvbSE_SK_EE7RunOnceEPNS0_13BindStateBaseEbSE_SK_(%"class.base::internal::BindStateBase"*, i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.271"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i32*
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #12
  br i1 %11, label %12, label %48

12:                                               ; preds = %4
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %7, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %class.SpellingMenuObserver**
  %15 = load %class.SpellingMenuObserver*, %class.SpellingMenuObserver** %14, align 8
  %16 = icmp eq %class.SpellingMenuObserver* %15, null
  br i1 %16, label %48, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %6 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #12
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #12
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %27

27:                                               ; preds = %24, %17
  %28 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #12
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = select i1 %28, i8* %30, i8* null
  %32 = getelementptr inbounds i8, i8* %31, i64 %22
  %33 = bitcast i8* %32 to %class.SpellingMenuObserver*
  %34 = and i64 %19, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = bitcast i8* %32 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = add i64 %19, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to void (%class.SpellingMenuObserver*, i32, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector.271"*)**
  %42 = load void (%class.SpellingMenuObserver*, i32, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector.271"*)*, void (%class.SpellingMenuObserver*, i32, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector.271"*)** %41, align 8
  br label %45

43:                                               ; preds = %27
  %44 = inttoptr i64 %19 to void (%class.SpellingMenuObserver*, i32, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector.271"*)*
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi void (%class.SpellingMenuObserver*, i32, i1, %"class.std::__1::basic_string"*, %"class.std::__1::vector.271"*)* [ %42, %36 ], [ %44, %43 ]
  %47 = load i32, i32* %9, align 4
  call void %46(%class.SpellingMenuObserver* %33, i32 %47, i1 zeroext %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::vector.271"* dereferenceable(24) %3) #12
  br label %48

48:                                               ; preds = %4, %12, %45
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEERKNS5_6vectorI16SpellCheckResultNS9_ISF_EEEEEJNS_7WeakPtrIS2_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.SpellingMenuObserver**
  %9 = load %class.SpellingMenuObserver*, %class.SpellingMenuObserver** %8, align 8
  %10 = icmp ne %class.SpellingMenuObserver* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %class.SpellingMenuObserver**
  %12 = load %class.SpellingMenuObserver*, %class.SpellingMenuObserver** %11, align 8
  %13 = icmp eq %class.SpellingMenuObserver* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #12
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %class.SpellingMenuObserver*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%class.SpellingMenuObserver*, i32)**
  %39 = load void (%class.SpellingMenuObserver*, i32)*, void (%class.SpellingMenuObserver*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%class.SpellingMenuObserver*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%class.SpellingMenuObserver*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%class.SpellingMenuObserver* %30, i32 %44) #12
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS2_EEiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.SpellingMenuObserver**
  %9 = load %class.SpellingMenuObserver*, %class.SpellingMenuObserver** %8, align 8
  %10 = icmp ne %class.SpellingMenuObserver* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7replaceEmmPKDsm(%"class.std::__1::basic_string"*, i64, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %5
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp ult i64 %16, %1
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %19) #13
  unreachable

20:                                               ; preds = %15
  %21 = sub i64 %16, %1
  %22 = icmp ult i64 %21, %2
  %23 = select i1 %22, i64 %21, i64 %2
  br i1 %9, label %24, label %29

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 9223372036854775807
  %28 = add nsw i64 %27, -1
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi i64 [ %28, %24 ], [ 10, %20 ]
  %31 = sub i64 %23, %16
  %32 = add i64 %31, %30
  %33 = icmp ult i64 %32, %4
  br i1 %33, label %1464, label %34

34:                                               ; preds = %29
  br i1 %9, label %35, label %38

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  br label %40

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i16* [ %37, %35 ], [ %39, %38 ]
  %42 = icmp eq i64 %23, %4
  br i1 %42, label %1155, label %43

43:                                               ; preds = %40
  %44 = sub i64 %21, %23
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %1155, label %46

46:                                               ; preds = %43
  %47 = icmp ugt i64 %23, %4
  %48 = getelementptr inbounds i16, i16* %41, i64 %1
  br i1 %47, label %49, label %659

49:                                               ; preds = %46
  %50 = icmp eq i64 %4, 0
  br i1 %50, label %340, label %51

51:                                               ; preds = %49
  %52 = icmp ult i16* %48, %3
  br i1 %52, label %53, label %197

53:                                               ; preds = %51
  %54 = icmp ult i64 %4, 16
  br i1 %54, label %144, label %55

55:                                               ; preds = %53
  %56 = add i64 %4, %1
  %57 = getelementptr i16, i16* %41, i64 %56
  %58 = getelementptr i16, i16* %3, i64 %4
  %59 = icmp ult i16* %48, %58
  %60 = icmp ugt i16* %57, %3
  %61 = and i1 %59, %60
  br i1 %61, label %144, label %62

62:                                               ; preds = %55
  %63 = and i64 %4, -16
  %64 = sub i64 %4, %63
  %65 = getelementptr i16, i16* %3, i64 %63
  %66 = getelementptr i16, i16* %48, i64 %63
  %67 = add i64 %63, -16
  %68 = lshr exact i64 %67, 4
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 3
  %71 = icmp ult i64 %67, 48
  br i1 %71, label %123, label %72

72:                                               ; preds = %62
  %73 = sub nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %120, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %121, %74 ]
  %77 = getelementptr i16, i16* %3, i64 %75
  %78 = getelementptr i16, i16* %48, i64 %75
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !91
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !91
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !94, !noalias !91
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !94, !noalias !91
  %87 = or i64 %75, 16
  %88 = getelementptr i16, i16* %3, i64 %87
  %89 = getelementptr i16, i16* %48, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !91
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !91
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !94, !noalias !91
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !94, !noalias !91
  %98 = or i64 %75, 32
  %99 = getelementptr i16, i16* %3, i64 %98
  %100 = getelementptr i16, i16* %48, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !91
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !91
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !94, !noalias !91
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !94, !noalias !91
  %109 = or i64 %75, 48
  %110 = getelementptr i16, i16* %3, i64 %109
  %111 = getelementptr i16, i16* %48, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !91
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !91
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !94, !noalias !91
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !94, !noalias !91
  %120 = add i64 %75, 64
  %121 = add i64 %76, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %74, !llvm.loop !96

123:                                              ; preds = %74, %62
  %124 = phi i64 [ 0, %62 ], [ %120, %74 ]
  %125 = icmp eq i64 %70, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123, %126
  %127 = phi i64 [ %139, %126 ], [ %124, %123 ]
  %128 = phi i64 [ %140, %126 ], [ %70, %123 ]
  %129 = getelementptr i16, i16* %3, i64 %127
  %130 = getelementptr i16, i16* %48, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !91
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !91
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !94, !noalias !91
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !94, !noalias !91
  %139 = add i64 %127, 16
  %140 = add i64 %128, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %126, !llvm.loop !97

142:                                              ; preds = %126, %123
  %143 = icmp eq i64 %63, %4
  br i1 %143, label %340, label %144

144:                                              ; preds = %142, %55, %53
  %145 = phi i64 [ %4, %55 ], [ %4, %53 ], [ %64, %142 ]
  %146 = phi i16* [ %3, %55 ], [ %3, %53 ], [ %65, %142 ]
  %147 = phi i16* [ %48, %55 ], [ %48, %53 ], [ %66, %142 ]
  %148 = add i64 %145, -1
  %149 = and i64 %145, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %157, %151 ], [ %145, %144 ]
  %153 = phi i16* [ %159, %151 ], [ %146, %144 ]
  %154 = phi i16* [ %158, %151 ], [ %147, %144 ]
  %155 = phi i64 [ %160, %151 ], [ %149, %144 ]
  %156 = load i16, i16* %153, align 2
  store i16 %156, i16* %154, align 2
  %157 = add i64 %152, -1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = getelementptr inbounds i16, i16* %153, i64 1
  %160 = add i64 %155, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !98

162:                                              ; preds = %151, %144
  %163 = phi i64 [ %145, %144 ], [ %157, %151 ]
  %164 = phi i16* [ %146, %144 ], [ %159, %151 ]
  %165 = phi i16* [ %147, %144 ], [ %158, %151 ]
  %166 = icmp ult i64 %148, 7
  br i1 %166, label %340, label %167

167:                                              ; preds = %162, %167
  %168 = phi i64 [ %193, %167 ], [ %163, %162 ]
  %169 = phi i16* [ %195, %167 ], [ %164, %162 ]
  %170 = phi i16* [ %194, %167 ], [ %165, %162 ]
  %171 = load i16, i16* %169, align 2
  store i16 %171, i16* %170, align 2
  %172 = getelementptr inbounds i16, i16* %170, i64 1
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %170, i64 2
  %176 = getelementptr inbounds i16, i16* %169, i64 2
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %170, i64 3
  %179 = getelementptr inbounds i16, i16* %169, i64 3
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %170, i64 4
  %182 = getelementptr inbounds i16, i16* %169, i64 4
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %170, i64 5
  %185 = getelementptr inbounds i16, i16* %169, i64 5
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %170, i64 6
  %188 = getelementptr inbounds i16, i16* %169, i64 6
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %170, i64 7
  %191 = getelementptr inbounds i16, i16* %169, i64 7
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = add i64 %168, -8
  %194 = getelementptr inbounds i16, i16* %170, i64 8
  %195 = getelementptr inbounds i16, i16* %169, i64 8
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %340, label %167, !llvm.loop !99

197:                                              ; preds = %51
  %198 = icmp ugt i16* %48, %3
  br i1 %198, label %199, label %340

199:                                              ; preds = %197
  %200 = getelementptr inbounds i16, i16* %3, i64 %4
  %201 = getelementptr inbounds i16, i16* %48, i64 %4
  %202 = icmp ult i64 %4, 16
  br i1 %202, label %287, label %203

203:                                              ; preds = %199
  %204 = icmp ult i16* %48, %200
  %205 = icmp ugt i16* %201, %3
  %206 = and i1 %204, %205
  br i1 %206, label %287, label %207

207:                                              ; preds = %203
  %208 = and i64 %4, -16
  %209 = sub i64 %4, %208
  %210 = sub i64 0, %208
  %211 = getelementptr i16, i16* %200, i64 %210
  %212 = sub i64 0, %208
  %213 = getelementptr i16, i16* %201, i64 %212
  %214 = add i64 %208, -16
  %215 = lshr exact i64 %214, 4
  %216 = add nuw nsw i64 %215, 1
  %217 = and i64 %216, 1
  %218 = icmp eq i64 %214, 0
  br i1 %218, label %263, label %219

219:                                              ; preds = %207
  %220 = sub nuw nsw i64 %216, %217
  %221 = getelementptr i16, i16* %200, i64 -1
  %222 = getelementptr i16, i16* %201, i64 -1
  %223 = getelementptr i16, i16* %200, i64 -1
  %224 = getelementptr i16, i16* %201, i64 -1
  br label %225

225:                                              ; preds = %225, %219
  %226 = phi i64 [ 0, %219 ], [ %260, %225 ]
  %227 = phi i64 [ %220, %219 ], [ %261, %225 ]
  %228 = sub i64 0, %226
  %229 = sub i64 0, %226
  %230 = getelementptr inbounds i16, i16* %222, i64 %229
  %231 = getelementptr inbounds i16, i16* %221, i64 %228
  %232 = getelementptr inbounds i16, i16* %231, i64 -7
  %233 = bitcast i16* %232 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2, !alias.scope !100
  %235 = getelementptr inbounds i16, i16* %231, i64 -8
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !100
  %239 = getelementptr inbounds i16, i16* %230, i64 -7
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %240, align 2, !alias.scope !103, !noalias !100
  %241 = getelementptr inbounds i16, i16* %230, i64 -8
  %242 = getelementptr inbounds i16, i16* %241, i64 -7
  %243 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %243, align 2, !alias.scope !103, !noalias !100
  %244 = sub nuw nsw i64 -16, %226
  %245 = sub nuw nsw i64 -16, %226
  %246 = getelementptr inbounds i16, i16* %224, i64 %245
  %247 = getelementptr inbounds i16, i16* %223, i64 %244
  %248 = getelementptr inbounds i16, i16* %247, i64 -7
  %249 = bitcast i16* %248 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 2, !alias.scope !100
  %251 = getelementptr inbounds i16, i16* %247, i64 -8
  %252 = getelementptr inbounds i16, i16* %251, i64 -7
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !100
  %255 = getelementptr inbounds i16, i16* %246, i64 -7
  %256 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %256, align 2, !alias.scope !103, !noalias !100
  %257 = getelementptr inbounds i16, i16* %246, i64 -8
  %258 = getelementptr inbounds i16, i16* %257, i64 -7
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %259, align 2, !alias.scope !103, !noalias !100
  %260 = add i64 %226, 32
  %261 = add i64 %227, -2
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %225, !llvm.loop !105

263:                                              ; preds = %225, %207
  %264 = phi i64 [ 0, %207 ], [ %260, %225 ]
  %265 = icmp eq i64 %217, 0
  br i1 %265, label %285, label %266

266:                                              ; preds = %263
  %267 = sub i64 0, %264
  %268 = getelementptr i16, i16* %200, i64 -1
  %269 = sub i64 0, %264
  %270 = getelementptr i16, i16* %201, i64 -1
  %271 = getelementptr inbounds i16, i16* %270, i64 %269
  %272 = getelementptr inbounds i16, i16* %268, i64 %267
  %273 = getelementptr inbounds i16, i16* %272, i64 -7
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !100
  %276 = getelementptr inbounds i16, i16* %272, i64 -8
  %277 = getelementptr inbounds i16, i16* %276, i64 -7
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !100
  %280 = getelementptr inbounds i16, i16* %271, i64 -7
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %281, align 2, !alias.scope !103, !noalias !100
  %282 = getelementptr inbounds i16, i16* %271, i64 -8
  %283 = getelementptr inbounds i16, i16* %282, i64 -7
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %284, align 2, !alias.scope !103, !noalias !100
  br label %285

285:                                              ; preds = %263, %266
  %286 = icmp eq i64 %208, %4
  br i1 %286, label %340, label %287

287:                                              ; preds = %285, %203, %199
  %288 = phi i64 [ %4, %203 ], [ %4, %199 ], [ %209, %285 ]
  %289 = phi i16* [ %200, %203 ], [ %200, %199 ], [ %211, %285 ]
  %290 = phi i16* [ %201, %203 ], [ %201, %199 ], [ %213, %285 ]
  %291 = add i64 %288, -1
  %292 = and i64 %288, 7
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %305, label %294

294:                                              ; preds = %287, %294
  %295 = phi i64 [ %302, %294 ], [ %288, %287 ]
  %296 = phi i16* [ %300, %294 ], [ %289, %287 ]
  %297 = phi i16* [ %299, %294 ], [ %290, %287 ]
  %298 = phi i64 [ %303, %294 ], [ %292, %287 ]
  %299 = getelementptr inbounds i16, i16* %297, i64 -1
  %300 = getelementptr inbounds i16, i16* %296, i64 -1
  %301 = load i16, i16* %300, align 2
  store i16 %301, i16* %299, align 2
  %302 = add i64 %295, -1
  %303 = add i64 %298, -1
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %294, !llvm.loop !106

305:                                              ; preds = %294, %287
  %306 = phi i64 [ %288, %287 ], [ %302, %294 ]
  %307 = phi i16* [ %289, %287 ], [ %300, %294 ]
  %308 = phi i16* [ %290, %287 ], [ %299, %294 ]
  %309 = icmp ult i64 %291, 7
  br i1 %309, label %340, label %310

310:                                              ; preds = %305, %310
  %311 = phi i64 [ %338, %310 ], [ %306, %305 ]
  %312 = phi i16* [ %336, %310 ], [ %307, %305 ]
  %313 = phi i16* [ %335, %310 ], [ %308, %305 ]
  %314 = getelementptr inbounds i16, i16* %313, i64 -1
  %315 = getelementptr inbounds i16, i16* %312, i64 -1
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %313, i64 -2
  %318 = getelementptr inbounds i16, i16* %312, i64 -2
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %313, i64 -3
  %321 = getelementptr inbounds i16, i16* %312, i64 -3
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %313, i64 -4
  %324 = getelementptr inbounds i16, i16* %312, i64 -4
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = getelementptr inbounds i16, i16* %313, i64 -5
  %327 = getelementptr inbounds i16, i16* %312, i64 -5
  %328 = load i16, i16* %327, align 2
  store i16 %328, i16* %326, align 2
  %329 = getelementptr inbounds i16, i16* %313, i64 -6
  %330 = getelementptr inbounds i16, i16* %312, i64 -6
  %331 = load i16, i16* %330, align 2
  store i16 %331, i16* %329, align 2
  %332 = getelementptr inbounds i16, i16* %313, i64 -7
  %333 = getelementptr inbounds i16, i16* %312, i64 -7
  %334 = load i16, i16* %333, align 2
  store i16 %334, i16* %332, align 2
  %335 = getelementptr inbounds i16, i16* %313, i64 -8
  %336 = getelementptr inbounds i16, i16* %312, i64 -8
  %337 = load i16, i16* %336, align 2
  store i16 %337, i16* %335, align 2
  %338 = add i64 %311, -8
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %310, !llvm.loop !107

340:                                              ; preds = %305, %310, %162, %167, %285, %142, %197, %49
  %341 = getelementptr inbounds i16, i16* %48, i64 %4
  %342 = getelementptr inbounds i16, i16* %48, i64 %23
  %343 = icmp sgt i64 %23, %4
  br i1 %343, label %344, label %489

344:                                              ; preds = %340
  %345 = icmp ult i64 %44, 16
  br i1 %345, label %436, label %346

346:                                              ; preds = %344
  %347 = add i64 %16, %4
  %348 = sub i64 %347, %23
  %349 = getelementptr i16, i16* %41, i64 %348
  %350 = getelementptr i16, i16* %41, i64 %16
  %351 = icmp ult i16* %341, %350
  %352 = icmp ult i16* %342, %349
  %353 = and i1 %351, %352
  br i1 %353, label %436, label %354

354:                                              ; preds = %346
  %355 = and i64 %44, -16
  %356 = sub i64 %44, %355
  %357 = getelementptr i16, i16* %342, i64 %355
  %358 = getelementptr i16, i16* %341, i64 %355
  %359 = add i64 %355, -16
  %360 = lshr exact i64 %359, 4
  %361 = add nuw nsw i64 %360, 1
  %362 = and i64 %361, 3
  %363 = icmp ult i64 %359, 48
  br i1 %363, label %415, label %364

364:                                              ; preds = %354
  %365 = sub nsw i64 %361, %362
  br label %366

366:                                              ; preds = %366, %364
  %367 = phi i64 [ 0, %364 ], [ %412, %366 ]
  %368 = phi i64 [ %365, %364 ], [ %413, %366 ]
  %369 = getelementptr i16, i16* %342, i64 %367
  %370 = getelementptr i16, i16* %341, i64 %367
  %371 = bitcast i16* %369 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !108
  %373 = getelementptr i16, i16* %369, i64 8
  %374 = bitcast i16* %373 to <8 x i16>*
  %375 = load <8 x i16>, <8 x i16>* %374, align 2, !alias.scope !108
  %376 = bitcast i16* %370 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %376, align 2, !alias.scope !111, !noalias !108
  %377 = getelementptr i16, i16* %370, i64 8
  %378 = bitcast i16* %377 to <8 x i16>*
  store <8 x i16> %375, <8 x i16>* %378, align 2, !alias.scope !111, !noalias !108
  %379 = or i64 %367, 16
  %380 = getelementptr i16, i16* %342, i64 %379
  %381 = getelementptr i16, i16* %341, i64 %379
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !108
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !108
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !111, !noalias !108
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !111, !noalias !108
  %390 = or i64 %367, 32
  %391 = getelementptr i16, i16* %342, i64 %390
  %392 = getelementptr i16, i16* %341, i64 %390
  %393 = bitcast i16* %391 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !108
  %395 = getelementptr i16, i16* %391, i64 8
  %396 = bitcast i16* %395 to <8 x i16>*
  %397 = load <8 x i16>, <8 x i16>* %396, align 2, !alias.scope !108
  %398 = bitcast i16* %392 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %398, align 2, !alias.scope !111, !noalias !108
  %399 = getelementptr i16, i16* %392, i64 8
  %400 = bitcast i16* %399 to <8 x i16>*
  store <8 x i16> %397, <8 x i16>* %400, align 2, !alias.scope !111, !noalias !108
  %401 = or i64 %367, 48
  %402 = getelementptr i16, i16* %342, i64 %401
  %403 = getelementptr i16, i16* %341, i64 %401
  %404 = bitcast i16* %402 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !108
  %406 = getelementptr i16, i16* %402, i64 8
  %407 = bitcast i16* %406 to <8 x i16>*
  %408 = load <8 x i16>, <8 x i16>* %407, align 2, !alias.scope !108
  %409 = bitcast i16* %403 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %409, align 2, !alias.scope !111, !noalias !108
  %410 = getelementptr i16, i16* %403, i64 8
  %411 = bitcast i16* %410 to <8 x i16>*
  store <8 x i16> %408, <8 x i16>* %411, align 2, !alias.scope !111, !noalias !108
  %412 = add i64 %367, 64
  %413 = add i64 %368, -4
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %366, !llvm.loop !113

415:                                              ; preds = %366, %354
  %416 = phi i64 [ 0, %354 ], [ %412, %366 ]
  %417 = icmp eq i64 %362, 0
  br i1 %417, label %434, label %418

418:                                              ; preds = %415, %418
  %419 = phi i64 [ %431, %418 ], [ %416, %415 ]
  %420 = phi i64 [ %432, %418 ], [ %362, %415 ]
  %421 = getelementptr i16, i16* %342, i64 %419
  %422 = getelementptr i16, i16* %341, i64 %419
  %423 = bitcast i16* %421 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !108
  %425 = getelementptr i16, i16* %421, i64 8
  %426 = bitcast i16* %425 to <8 x i16>*
  %427 = load <8 x i16>, <8 x i16>* %426, align 2, !alias.scope !108
  %428 = bitcast i16* %422 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %428, align 2, !alias.scope !111, !noalias !108
  %429 = getelementptr i16, i16* %422, i64 8
  %430 = bitcast i16* %429 to <8 x i16>*
  store <8 x i16> %427, <8 x i16>* %430, align 2, !alias.scope !111, !noalias !108
  %431 = add i64 %419, 16
  %432 = add i64 %420, -1
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %418, !llvm.loop !114

434:                                              ; preds = %418, %415
  %435 = icmp eq i64 %44, %355
  br i1 %435, label %1451, label %436

436:                                              ; preds = %434, %346, %344
  %437 = phi i64 [ %44, %346 ], [ %44, %344 ], [ %356, %434 ]
  %438 = phi i16* [ %342, %346 ], [ %342, %344 ], [ %357, %434 ]
  %439 = phi i16* [ %341, %346 ], [ %341, %344 ], [ %358, %434 ]
  %440 = add i64 %437, -1
  %441 = and i64 %437, 7
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %454, label %443

443:                                              ; preds = %436, %443
  %444 = phi i64 [ %449, %443 ], [ %437, %436 ]
  %445 = phi i16* [ %451, %443 ], [ %438, %436 ]
  %446 = phi i16* [ %450, %443 ], [ %439, %436 ]
  %447 = phi i64 [ %452, %443 ], [ %441, %436 ]
  %448 = load i16, i16* %445, align 2
  store i16 %448, i16* %446, align 2
  %449 = add i64 %444, -1
  %450 = getelementptr inbounds i16, i16* %446, i64 1
  %451 = getelementptr inbounds i16, i16* %445, i64 1
  %452 = add i64 %447, -1
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %443, !llvm.loop !115

454:                                              ; preds = %443, %436
  %455 = phi i64 [ %437, %436 ], [ %449, %443 ]
  %456 = phi i16* [ %438, %436 ], [ %451, %443 ]
  %457 = phi i16* [ %439, %436 ], [ %450, %443 ]
  %458 = icmp ult i64 %440, 7
  br i1 %458, label %1451, label %459

459:                                              ; preds = %454, %459
  %460 = phi i64 [ %485, %459 ], [ %455, %454 ]
  %461 = phi i16* [ %487, %459 ], [ %456, %454 ]
  %462 = phi i16* [ %486, %459 ], [ %457, %454 ]
  %463 = load i16, i16* %461, align 2
  store i16 %463, i16* %462, align 2
  %464 = getelementptr inbounds i16, i16* %462, i64 1
  %465 = getelementptr inbounds i16, i16* %461, i64 1
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %462, i64 2
  %468 = getelementptr inbounds i16, i16* %461, i64 2
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %462, i64 3
  %471 = getelementptr inbounds i16, i16* %461, i64 3
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %462, i64 4
  %474 = getelementptr inbounds i16, i16* %461, i64 4
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %462, i64 5
  %477 = getelementptr inbounds i16, i16* %461, i64 5
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %462, i64 6
  %480 = getelementptr inbounds i16, i16* %461, i64 6
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = getelementptr inbounds i16, i16* %462, i64 7
  %483 = getelementptr inbounds i16, i16* %461, i64 7
  %484 = load i16, i16* %483, align 2
  store i16 %484, i16* %482, align 2
  %485 = add i64 %460, -8
  %486 = getelementptr inbounds i16, i16* %462, i64 8
  %487 = getelementptr inbounds i16, i16* %461, i64 8
  %488 = icmp eq i64 %485, 0
  br i1 %488, label %1451, label %459, !llvm.loop !116

489:                                              ; preds = %340
  %490 = icmp slt i64 %23, %4
  br i1 %490, label %491, label %1451

491:                                              ; preds = %489
  %492 = getelementptr inbounds i16, i16* %342, i64 %44
  %493 = getelementptr inbounds i16, i16* %341, i64 %44
  %494 = icmp ult i64 %44, 16
  br i1 %494, label %606, label %495

495:                                              ; preds = %491
  %496 = xor i64 %1, -1
  %497 = add i64 %16, %496
  %498 = sub i64 %497, %23
  %499 = add i64 %16, %4
  %500 = xor i64 %23, -1
  %501 = add i64 %499, %500
  %502 = getelementptr i16, i16* %41, i64 %501
  %503 = ptrtoint i16* %502 to i64
  %504 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %498, i64 2)
  %505 = extractvalue { i64, i1 } %504, 0
  %506 = extractvalue { i64, i1 } %504, 1
  %507 = icmp ugt i64 %505, %503
  %508 = or i1 %507, %506
  %509 = add i64 %16, -1
  %510 = getelementptr i16, i16* %41, i64 %509
  %511 = ptrtoint i16* %510 to i64
  %512 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %498, i64 2)
  %513 = extractvalue { i64, i1 } %512, 0
  %514 = extractvalue { i64, i1 } %512, 1
  %515 = icmp ugt i64 %513, %511
  %516 = or i1 %515, %514
  %517 = or i1 %508, %516
  br i1 %517, label %606, label %518

518:                                              ; preds = %495
  %519 = add i64 %4, %1
  %520 = getelementptr i16, i16* %41, i64 %519
  %521 = add i64 %23, %1
  %522 = getelementptr i16, i16* %41, i64 %521
  %523 = icmp ult i16* %520, %492
  %524 = icmp ult i16* %522, %493
  %525 = and i1 %523, %524
  br i1 %525, label %606, label %526

526:                                              ; preds = %518
  %527 = and i64 %44, -16
  %528 = sub i64 %44, %527
  %529 = sub i64 0, %527
  %530 = getelementptr i16, i16* %492, i64 %529
  %531 = sub i64 0, %527
  %532 = getelementptr i16, i16* %493, i64 %531
  %533 = add i64 %527, -16
  %534 = lshr exact i64 %533, 4
  %535 = add nuw nsw i64 %534, 1
  %536 = and i64 %535, 1
  %537 = icmp eq i64 %533, 0
  br i1 %537, label %584, label %538

538:                                              ; preds = %526
  %539 = sub nuw nsw i64 %535, %536
  %540 = getelementptr i16, i16* %492, i64 -1
  %541 = getelementptr i16, i16* %493, i64 -1
  %542 = getelementptr i16, i16* %492, i64 -1
  %543 = getelementptr i16, i16* %493, i64 -1
  br label %544

544:                                              ; preds = %544, %538
  %545 = phi i64 [ 0, %538 ], [ %579, %544 ]
  %546 = phi i64 [ %539, %538 ], [ %580, %544 ]
  %547 = sub i64 0, %545
  %548 = sub i64 0, %545
  %549 = getelementptr inbounds i16, i16* %541, i64 %548
  %550 = getelementptr inbounds i16, i16* %540, i64 %547
  %551 = getelementptr inbounds i16, i16* %550, i64 -7
  %552 = bitcast i16* %551 to <8 x i16>*
  %553 = load <8 x i16>, <8 x i16>* %552, align 2, !alias.scope !117
  %554 = getelementptr inbounds i16, i16* %550, i64 -8
  %555 = getelementptr inbounds i16, i16* %554, i64 -7
  %556 = bitcast i16* %555 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !117
  %558 = getelementptr inbounds i16, i16* %549, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %553, <8 x i16>* %559, align 2, !alias.scope !120, !noalias !117
  %560 = getelementptr inbounds i16, i16* %549, i64 -8
  %561 = getelementptr inbounds i16, i16* %560, i64 -7
  %562 = bitcast i16* %561 to <8 x i16>*
  store <8 x i16> %557, <8 x i16>* %562, align 2, !alias.scope !120, !noalias !117
  %563 = sub nuw nsw i64 -16, %545
  %564 = sub nuw nsw i64 -16, %545
  %565 = getelementptr inbounds i16, i16* %543, i64 %564
  %566 = getelementptr inbounds i16, i16* %542, i64 %563
  %567 = getelementptr inbounds i16, i16* %566, i64 -7
  %568 = bitcast i16* %567 to <8 x i16>*
  %569 = load <8 x i16>, <8 x i16>* %568, align 2, !alias.scope !117
  %570 = getelementptr inbounds i16, i16* %566, i64 -8
  %571 = getelementptr inbounds i16, i16* %570, i64 -7
  %572 = bitcast i16* %571 to <8 x i16>*
  %573 = load <8 x i16>, <8 x i16>* %572, align 2, !alias.scope !117
  %574 = getelementptr inbounds i16, i16* %565, i64 -7
  %575 = bitcast i16* %574 to <8 x i16>*
  store <8 x i16> %569, <8 x i16>* %575, align 2, !alias.scope !120, !noalias !117
  %576 = getelementptr inbounds i16, i16* %565, i64 -8
  %577 = getelementptr inbounds i16, i16* %576, i64 -7
  %578 = bitcast i16* %577 to <8 x i16>*
  store <8 x i16> %573, <8 x i16>* %578, align 2, !alias.scope !120, !noalias !117
  %579 = add i64 %545, 32
  %580 = add i64 %546, -2
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %582, label %544, !llvm.loop !122

582:                                              ; preds = %544
  %583 = sub nuw nsw i64 -32, %545
  br label %584

584:                                              ; preds = %582, %526
  %585 = phi i64 [ 0, %526 ], [ %583, %582 ]
  %586 = icmp eq i64 %536, 0
  br i1 %586, label %604, label %587

587:                                              ; preds = %584
  %588 = getelementptr i16, i16* %492, i64 -1
  %589 = getelementptr i16, i16* %493, i64 -1
  %590 = getelementptr inbounds i16, i16* %589, i64 %585
  %591 = getelementptr inbounds i16, i16* %588, i64 %585
  %592 = getelementptr inbounds i16, i16* %591, i64 -7
  %593 = bitcast i16* %592 to <8 x i16>*
  %594 = load <8 x i16>, <8 x i16>* %593, align 2, !alias.scope !117
  %595 = getelementptr inbounds i16, i16* %591, i64 -8
  %596 = getelementptr inbounds i16, i16* %595, i64 -7
  %597 = bitcast i16* %596 to <8 x i16>*
  %598 = load <8 x i16>, <8 x i16>* %597, align 2, !alias.scope !117
  %599 = getelementptr inbounds i16, i16* %590, i64 -7
  %600 = bitcast i16* %599 to <8 x i16>*
  store <8 x i16> %594, <8 x i16>* %600, align 2, !alias.scope !120, !noalias !117
  %601 = getelementptr inbounds i16, i16* %590, i64 -8
  %602 = getelementptr inbounds i16, i16* %601, i64 -7
  %603 = bitcast i16* %602 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %603, align 2, !alias.scope !120, !noalias !117
  br label %604

604:                                              ; preds = %584, %587
  %605 = icmp eq i64 %44, %527
  br i1 %605, label %1451, label %606

606:                                              ; preds = %604, %518, %495, %491
  %607 = phi i64 [ %44, %518 ], [ %44, %495 ], [ %44, %491 ], [ %528, %604 ]
  %608 = phi i16* [ %492, %518 ], [ %492, %495 ], [ %492, %491 ], [ %530, %604 ]
  %609 = phi i16* [ %493, %518 ], [ %493, %495 ], [ %493, %491 ], [ %532, %604 ]
  %610 = add i64 %607, -1
  %611 = and i64 %607, 7
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %624, label %613

613:                                              ; preds = %606, %613
  %614 = phi i64 [ %621, %613 ], [ %607, %606 ]
  %615 = phi i16* [ %619, %613 ], [ %608, %606 ]
  %616 = phi i16* [ %618, %613 ], [ %609, %606 ]
  %617 = phi i64 [ %622, %613 ], [ %611, %606 ]
  %618 = getelementptr inbounds i16, i16* %616, i64 -1
  %619 = getelementptr inbounds i16, i16* %615, i64 -1
  %620 = load i16, i16* %619, align 2
  store i16 %620, i16* %618, align 2
  %621 = add i64 %614, -1
  %622 = add i64 %617, -1
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %613, !llvm.loop !123

624:                                              ; preds = %613, %606
  %625 = phi i64 [ %607, %606 ], [ %621, %613 ]
  %626 = phi i16* [ %608, %606 ], [ %619, %613 ]
  %627 = phi i16* [ %609, %606 ], [ %618, %613 ]
  %628 = icmp ult i64 %610, 7
  br i1 %628, label %1451, label %629

629:                                              ; preds = %624, %629
  %630 = phi i64 [ %657, %629 ], [ %625, %624 ]
  %631 = phi i16* [ %655, %629 ], [ %626, %624 ]
  %632 = phi i16* [ %654, %629 ], [ %627, %624 ]
  %633 = getelementptr inbounds i16, i16* %632, i64 -1
  %634 = getelementptr inbounds i16, i16* %631, i64 -1
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %632, i64 -2
  %637 = getelementptr inbounds i16, i16* %631, i64 -2
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %632, i64 -3
  %640 = getelementptr inbounds i16, i16* %631, i64 -3
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %632, i64 -4
  %643 = getelementptr inbounds i16, i16* %631, i64 -4
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %632, i64 -5
  %646 = getelementptr inbounds i16, i16* %631, i64 -5
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = getelementptr inbounds i16, i16* %632, i64 -6
  %649 = getelementptr inbounds i16, i16* %631, i64 -6
  %650 = load i16, i16* %649, align 2
  store i16 %650, i16* %648, align 2
  %651 = getelementptr inbounds i16, i16* %632, i64 -7
  %652 = getelementptr inbounds i16, i16* %631, i64 -7
  %653 = load i16, i16* %652, align 2
  store i16 %653, i16* %651, align 2
  %654 = getelementptr inbounds i16, i16* %632, i64 -8
  %655 = getelementptr inbounds i16, i16* %631, i64 -8
  %656 = load i16, i16* %655, align 2
  store i16 %656, i16* %654, align 2
  %657 = add i64 %630, -8
  %658 = icmp eq i64 %657, 0
  br i1 %658, label %1451, label %629, !llvm.loop !124

659:                                              ; preds = %46
  %660 = icmp ult i16* %48, %3
  %661 = getelementptr inbounds i16, i16* %41, i64 %16
  %662 = icmp ugt i16* %661, %3
  %663 = and i1 %660, %662
  br i1 %663, label %664, label %820

664:                                              ; preds = %659
  %665 = getelementptr inbounds i16, i16* %48, i64 %23
  %666 = icmp ugt i16* %665, %3
  br i1 %666, label %670, label %667

667:                                              ; preds = %664
  %668 = sub i64 %4, %23
  %669 = getelementptr inbounds i16, i16* %3, i64 %668
  br label %820

670:                                              ; preds = %664
  %671 = icmp eq i64 %23, 0
  br i1 %671, label %816, label %672

672:                                              ; preds = %670
  %673 = icmp ult i64 %23, 16
  br i1 %673, label %763, label %674

674:                                              ; preds = %672
  %675 = add i64 %23, %1
  %676 = getelementptr i16, i16* %41, i64 %675
  %677 = getelementptr i16, i16* %3, i64 %23
  %678 = icmp ult i16* %48, %677
  %679 = icmp ugt i16* %676, %3
  %680 = and i1 %678, %679
  br i1 %680, label %763, label %681

681:                                              ; preds = %674
  %682 = and i64 %23, -16
  %683 = sub i64 %23, %682
  %684 = getelementptr i16, i16* %3, i64 %682
  %685 = getelementptr i16, i16* %48, i64 %682
  %686 = add i64 %682, -16
  %687 = lshr exact i64 %686, 4
  %688 = add nuw nsw i64 %687, 1
  %689 = and i64 %688, 3
  %690 = icmp ult i64 %686, 48
  br i1 %690, label %742, label %691

691:                                              ; preds = %681
  %692 = sub nsw i64 %688, %689
  br label %693

693:                                              ; preds = %693, %691
  %694 = phi i64 [ 0, %691 ], [ %739, %693 ]
  %695 = phi i64 [ %692, %691 ], [ %740, %693 ]
  %696 = getelementptr i16, i16* %3, i64 %694
  %697 = getelementptr i16, i16* %48, i64 %694
  %698 = bitcast i16* %696 to <8 x i16>*
  %699 = load <8 x i16>, <8 x i16>* %698, align 2, !alias.scope !125
  %700 = getelementptr i16, i16* %696, i64 8
  %701 = bitcast i16* %700 to <8 x i16>*
  %702 = load <8 x i16>, <8 x i16>* %701, align 2, !alias.scope !125
  %703 = bitcast i16* %697 to <8 x i16>*
  store <8 x i16> %699, <8 x i16>* %703, align 2, !alias.scope !128, !noalias !125
  %704 = getelementptr i16, i16* %697, i64 8
  %705 = bitcast i16* %704 to <8 x i16>*
  store <8 x i16> %702, <8 x i16>* %705, align 2, !alias.scope !128, !noalias !125
  %706 = or i64 %694, 16
  %707 = getelementptr i16, i16* %3, i64 %706
  %708 = getelementptr i16, i16* %48, i64 %706
  %709 = bitcast i16* %707 to <8 x i16>*
  %710 = load <8 x i16>, <8 x i16>* %709, align 2, !alias.scope !125
  %711 = getelementptr i16, i16* %707, i64 8
  %712 = bitcast i16* %711 to <8 x i16>*
  %713 = load <8 x i16>, <8 x i16>* %712, align 2, !alias.scope !125
  %714 = bitcast i16* %708 to <8 x i16>*
  store <8 x i16> %710, <8 x i16>* %714, align 2, !alias.scope !128, !noalias !125
  %715 = getelementptr i16, i16* %708, i64 8
  %716 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> %713, <8 x i16>* %716, align 2, !alias.scope !128, !noalias !125
  %717 = or i64 %694, 32
  %718 = getelementptr i16, i16* %3, i64 %717
  %719 = getelementptr i16, i16* %48, i64 %717
  %720 = bitcast i16* %718 to <8 x i16>*
  %721 = load <8 x i16>, <8 x i16>* %720, align 2, !alias.scope !125
  %722 = getelementptr i16, i16* %718, i64 8
  %723 = bitcast i16* %722 to <8 x i16>*
  %724 = load <8 x i16>, <8 x i16>* %723, align 2, !alias.scope !125
  %725 = bitcast i16* %719 to <8 x i16>*
  store <8 x i16> %721, <8 x i16>* %725, align 2, !alias.scope !128, !noalias !125
  %726 = getelementptr i16, i16* %719, i64 8
  %727 = bitcast i16* %726 to <8 x i16>*
  store <8 x i16> %724, <8 x i16>* %727, align 2, !alias.scope !128, !noalias !125
  %728 = or i64 %694, 48
  %729 = getelementptr i16, i16* %3, i64 %728
  %730 = getelementptr i16, i16* %48, i64 %728
  %731 = bitcast i16* %729 to <8 x i16>*
  %732 = load <8 x i16>, <8 x i16>* %731, align 2, !alias.scope !125
  %733 = getelementptr i16, i16* %729, i64 8
  %734 = bitcast i16* %733 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !125
  %736 = bitcast i16* %730 to <8 x i16>*
  store <8 x i16> %732, <8 x i16>* %736, align 2, !alias.scope !128, !noalias !125
  %737 = getelementptr i16, i16* %730, i64 8
  %738 = bitcast i16* %737 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %738, align 2, !alias.scope !128, !noalias !125
  %739 = add i64 %694, 64
  %740 = add i64 %695, -4
  %741 = icmp eq i64 %740, 0
  br i1 %741, label %742, label %693, !llvm.loop !130

742:                                              ; preds = %693, %681
  %743 = phi i64 [ 0, %681 ], [ %739, %693 ]
  %744 = icmp eq i64 %689, 0
  br i1 %744, label %761, label %745

745:                                              ; preds = %742, %745
  %746 = phi i64 [ %758, %745 ], [ %743, %742 ]
  %747 = phi i64 [ %759, %745 ], [ %689, %742 ]
  %748 = getelementptr i16, i16* %3, i64 %746
  %749 = getelementptr i16, i16* %48, i64 %746
  %750 = bitcast i16* %748 to <8 x i16>*
  %751 = load <8 x i16>, <8 x i16>* %750, align 2, !alias.scope !125
  %752 = getelementptr i16, i16* %748, i64 8
  %753 = bitcast i16* %752 to <8 x i16>*
  %754 = load <8 x i16>, <8 x i16>* %753, align 2, !alias.scope !125
  %755 = bitcast i16* %749 to <8 x i16>*
  store <8 x i16> %751, <8 x i16>* %755, align 2, !alias.scope !128, !noalias !125
  %756 = getelementptr i16, i16* %749, i64 8
  %757 = bitcast i16* %756 to <8 x i16>*
  store <8 x i16> %754, <8 x i16>* %757, align 2, !alias.scope !128, !noalias !125
  %758 = add i64 %746, 16
  %759 = add i64 %747, -1
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %761, label %745, !llvm.loop !131

761:                                              ; preds = %745, %742
  %762 = icmp eq i64 %23, %682
  br i1 %762, label %816, label %763

763:                                              ; preds = %761, %674, %672
  %764 = phi i64 [ %23, %674 ], [ %23, %672 ], [ %683, %761 ]
  %765 = phi i16* [ %3, %674 ], [ %3, %672 ], [ %684, %761 ]
  %766 = phi i16* [ %48, %674 ], [ %48, %672 ], [ %685, %761 ]
  %767 = add i64 %764, -1
  %768 = and i64 %764, 7
  %769 = icmp eq i64 %768, 0
  br i1 %769, label %781, label %770

770:                                              ; preds = %763, %770
  %771 = phi i64 [ %776, %770 ], [ %764, %763 ]
  %772 = phi i16* [ %778, %770 ], [ %765, %763 ]
  %773 = phi i16* [ %777, %770 ], [ %766, %763 ]
  %774 = phi i64 [ %779, %770 ], [ %768, %763 ]
  %775 = load i16, i16* %772, align 2
  store i16 %775, i16* %773, align 2
  %776 = add i64 %771, -1
  %777 = getelementptr inbounds i16, i16* %773, i64 1
  %778 = getelementptr inbounds i16, i16* %772, i64 1
  %779 = add i64 %774, -1
  %780 = icmp eq i64 %779, 0
  br i1 %780, label %781, label %770, !llvm.loop !132

781:                                              ; preds = %770, %763
  %782 = phi i64 [ %764, %763 ], [ %776, %770 ]
  %783 = phi i16* [ %765, %763 ], [ %778, %770 ]
  %784 = phi i16* [ %766, %763 ], [ %777, %770 ]
  %785 = icmp ult i64 %767, 7
  br i1 %785, label %816, label %786

786:                                              ; preds = %781, %786
  %787 = phi i64 [ %812, %786 ], [ %782, %781 ]
  %788 = phi i16* [ %814, %786 ], [ %783, %781 ]
  %789 = phi i16* [ %813, %786 ], [ %784, %781 ]
  %790 = load i16, i16* %788, align 2
  store i16 %790, i16* %789, align 2
  %791 = getelementptr inbounds i16, i16* %789, i64 1
  %792 = getelementptr inbounds i16, i16* %788, i64 1
  %793 = load i16, i16* %792, align 2
  store i16 %793, i16* %791, align 2
  %794 = getelementptr inbounds i16, i16* %789, i64 2
  %795 = getelementptr inbounds i16, i16* %788, i64 2
  %796 = load i16, i16* %795, align 2
  store i16 %796, i16* %794, align 2
  %797 = getelementptr inbounds i16, i16* %789, i64 3
  %798 = getelementptr inbounds i16, i16* %788, i64 3
  %799 = load i16, i16* %798, align 2
  store i16 %799, i16* %797, align 2
  %800 = getelementptr inbounds i16, i16* %789, i64 4
  %801 = getelementptr inbounds i16, i16* %788, i64 4
  %802 = load i16, i16* %801, align 2
  store i16 %802, i16* %800, align 2
  %803 = getelementptr inbounds i16, i16* %789, i64 5
  %804 = getelementptr inbounds i16, i16* %788, i64 5
  %805 = load i16, i16* %804, align 2
  store i16 %805, i16* %803, align 2
  %806 = getelementptr inbounds i16, i16* %789, i64 6
  %807 = getelementptr inbounds i16, i16* %788, i64 6
  %808 = load i16, i16* %807, align 2
  store i16 %808, i16* %806, align 2
  %809 = getelementptr inbounds i16, i16* %789, i64 7
  %810 = getelementptr inbounds i16, i16* %788, i64 7
  %811 = load i16, i16* %810, align 2
  store i16 %811, i16* %809, align 2
  %812 = add i64 %787, -8
  %813 = getelementptr inbounds i16, i16* %789, i64 8
  %814 = getelementptr inbounds i16, i16* %788, i64 8
  %815 = icmp eq i64 %812, 0
  br i1 %815, label %816, label %786, !llvm.loop !133

816:                                              ; preds = %781, %786, %761, %670
  %817 = add i64 %23, %1
  %818 = getelementptr inbounds i16, i16* %3, i64 %4
  %819 = sub i64 %4, %23
  br label %820

820:                                              ; preds = %659, %816, %667
  %821 = phi i64 [ 0, %816 ], [ %23, %667 ], [ %23, %659 ]
  %822 = phi i64 [ %817, %816 ], [ %1, %667 ], [ %1, %659 ]
  %823 = phi i16* [ %818, %816 ], [ %669, %667 ], [ %3, %659 ]
  %824 = phi i64 [ %819, %816 ], [ %4, %667 ], [ %4, %659 ]
  %825 = getelementptr inbounds i16, i16* %41, i64 %822
  %826 = getelementptr inbounds i16, i16* %825, i64 %824
  %827 = getelementptr inbounds i16, i16* %825, i64 %821
  %828 = icmp slt i64 %824, %821
  br i1 %828, label %829, label %979

829:                                              ; preds = %820
  %830 = icmp ult i64 %44, 16
  br i1 %830, label %926, label %831

831:                                              ; preds = %829
  %832 = add i64 %824, %822
  %833 = add i64 %832, %16
  %834 = add i64 %23, %1
  %835 = sub i64 %833, %834
  %836 = getelementptr i16, i16* %41, i64 %835
  %837 = add i64 %822, %821
  %838 = add i64 %837, %16
  %839 = sub i64 %838, %834
  %840 = getelementptr i16, i16* %41, i64 %839
  %841 = icmp ult i16* %826, %840
  %842 = icmp ult i16* %827, %836
  %843 = and i1 %841, %842
  br i1 %843, label %926, label %844

844:                                              ; preds = %831
  %845 = and i64 %44, -16
  %846 = sub i64 %44, %845
  %847 = getelementptr i16, i16* %827, i64 %845
  %848 = getelementptr i16, i16* %826, i64 %845
  %849 = add i64 %845, -16
  %850 = lshr exact i64 %849, 4
  %851 = add nuw nsw i64 %850, 1
  %852 = and i64 %851, 3
  %853 = icmp ult i64 %849, 48
  br i1 %853, label %905, label %854

854:                                              ; preds = %844
  %855 = sub nsw i64 %851, %852
  br label %856

856:                                              ; preds = %856, %854
  %857 = phi i64 [ 0, %854 ], [ %902, %856 ]
  %858 = phi i64 [ %855, %854 ], [ %903, %856 ]
  %859 = getelementptr i16, i16* %827, i64 %857
  %860 = getelementptr i16, i16* %826, i64 %857
  %861 = bitcast i16* %859 to <8 x i16>*
  %862 = load <8 x i16>, <8 x i16>* %861, align 2, !alias.scope !134
  %863 = getelementptr i16, i16* %859, i64 8
  %864 = bitcast i16* %863 to <8 x i16>*
  %865 = load <8 x i16>, <8 x i16>* %864, align 2, !alias.scope !134
  %866 = bitcast i16* %860 to <8 x i16>*
  store <8 x i16> %862, <8 x i16>* %866, align 2, !alias.scope !137, !noalias !134
  %867 = getelementptr i16, i16* %860, i64 8
  %868 = bitcast i16* %867 to <8 x i16>*
  store <8 x i16> %865, <8 x i16>* %868, align 2, !alias.scope !137, !noalias !134
  %869 = or i64 %857, 16
  %870 = getelementptr i16, i16* %827, i64 %869
  %871 = getelementptr i16, i16* %826, i64 %869
  %872 = bitcast i16* %870 to <8 x i16>*
  %873 = load <8 x i16>, <8 x i16>* %872, align 2, !alias.scope !134
  %874 = getelementptr i16, i16* %870, i64 8
  %875 = bitcast i16* %874 to <8 x i16>*
  %876 = load <8 x i16>, <8 x i16>* %875, align 2, !alias.scope !134
  %877 = bitcast i16* %871 to <8 x i16>*
  store <8 x i16> %873, <8 x i16>* %877, align 2, !alias.scope !137, !noalias !134
  %878 = getelementptr i16, i16* %871, i64 8
  %879 = bitcast i16* %878 to <8 x i16>*
  store <8 x i16> %876, <8 x i16>* %879, align 2, !alias.scope !137, !noalias !134
  %880 = or i64 %857, 32
  %881 = getelementptr i16, i16* %827, i64 %880
  %882 = getelementptr i16, i16* %826, i64 %880
  %883 = bitcast i16* %881 to <8 x i16>*
  %884 = load <8 x i16>, <8 x i16>* %883, align 2, !alias.scope !134
  %885 = getelementptr i16, i16* %881, i64 8
  %886 = bitcast i16* %885 to <8 x i16>*
  %887 = load <8 x i16>, <8 x i16>* %886, align 2, !alias.scope !134
  %888 = bitcast i16* %882 to <8 x i16>*
  store <8 x i16> %884, <8 x i16>* %888, align 2, !alias.scope !137, !noalias !134
  %889 = getelementptr i16, i16* %882, i64 8
  %890 = bitcast i16* %889 to <8 x i16>*
  store <8 x i16> %887, <8 x i16>* %890, align 2, !alias.scope !137, !noalias !134
  %891 = or i64 %857, 48
  %892 = getelementptr i16, i16* %827, i64 %891
  %893 = getelementptr i16, i16* %826, i64 %891
  %894 = bitcast i16* %892 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !134
  %896 = getelementptr i16, i16* %892, i64 8
  %897 = bitcast i16* %896 to <8 x i16>*
  %898 = load <8 x i16>, <8 x i16>* %897, align 2, !alias.scope !134
  %899 = bitcast i16* %893 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %899, align 2, !alias.scope !137, !noalias !134
  %900 = getelementptr i16, i16* %893, i64 8
  %901 = bitcast i16* %900 to <8 x i16>*
  store <8 x i16> %898, <8 x i16>* %901, align 2, !alias.scope !137, !noalias !134
  %902 = add i64 %857, 64
  %903 = add i64 %858, -4
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %905, label %856, !llvm.loop !139

905:                                              ; preds = %856, %844
  %906 = phi i64 [ 0, %844 ], [ %902, %856 ]
  %907 = icmp eq i64 %852, 0
  br i1 %907, label %924, label %908

908:                                              ; preds = %905, %908
  %909 = phi i64 [ %921, %908 ], [ %906, %905 ]
  %910 = phi i64 [ %922, %908 ], [ %852, %905 ]
  %911 = getelementptr i16, i16* %827, i64 %909
  %912 = getelementptr i16, i16* %826, i64 %909
  %913 = bitcast i16* %911 to <8 x i16>*
  %914 = load <8 x i16>, <8 x i16>* %913, align 2, !alias.scope !134
  %915 = getelementptr i16, i16* %911, i64 8
  %916 = bitcast i16* %915 to <8 x i16>*
  %917 = load <8 x i16>, <8 x i16>* %916, align 2, !alias.scope !134
  %918 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %914, <8 x i16>* %918, align 2, !alias.scope !137, !noalias !134
  %919 = getelementptr i16, i16* %912, i64 8
  %920 = bitcast i16* %919 to <8 x i16>*
  store <8 x i16> %917, <8 x i16>* %920, align 2, !alias.scope !137, !noalias !134
  %921 = add i64 %909, 16
  %922 = add i64 %910, -1
  %923 = icmp eq i64 %922, 0
  br i1 %923, label %924, label %908, !llvm.loop !140

924:                                              ; preds = %908, %905
  %925 = icmp eq i64 %44, %845
  br i1 %925, label %1155, label %926

926:                                              ; preds = %924, %831, %829
  %927 = phi i64 [ %44, %831 ], [ %44, %829 ], [ %846, %924 ]
  %928 = phi i16* [ %827, %831 ], [ %827, %829 ], [ %847, %924 ]
  %929 = phi i16* [ %826, %831 ], [ %826, %829 ], [ %848, %924 ]
  %930 = add i64 %927, -1
  %931 = and i64 %927, 7
  %932 = icmp eq i64 %931, 0
  br i1 %932, label %944, label %933

933:                                              ; preds = %926, %933
  %934 = phi i64 [ %939, %933 ], [ %927, %926 ]
  %935 = phi i16* [ %941, %933 ], [ %928, %926 ]
  %936 = phi i16* [ %940, %933 ], [ %929, %926 ]
  %937 = phi i64 [ %942, %933 ], [ %931, %926 ]
  %938 = load i16, i16* %935, align 2
  store i16 %938, i16* %936, align 2
  %939 = add i64 %934, -1
  %940 = getelementptr inbounds i16, i16* %936, i64 1
  %941 = getelementptr inbounds i16, i16* %935, i64 1
  %942 = add i64 %937, -1
  %943 = icmp eq i64 %942, 0
  br i1 %943, label %944, label %933, !llvm.loop !141

944:                                              ; preds = %933, %926
  %945 = phi i64 [ %927, %926 ], [ %939, %933 ]
  %946 = phi i16* [ %928, %926 ], [ %941, %933 ]
  %947 = phi i16* [ %929, %926 ], [ %940, %933 ]
  %948 = icmp ult i64 %930, 7
  br i1 %948, label %1155, label %949

949:                                              ; preds = %944, %949
  %950 = phi i64 [ %975, %949 ], [ %945, %944 ]
  %951 = phi i16* [ %977, %949 ], [ %946, %944 ]
  %952 = phi i16* [ %976, %949 ], [ %947, %944 ]
  %953 = load i16, i16* %951, align 2
  store i16 %953, i16* %952, align 2
  %954 = getelementptr inbounds i16, i16* %952, i64 1
  %955 = getelementptr inbounds i16, i16* %951, i64 1
  %956 = load i16, i16* %955, align 2
  store i16 %956, i16* %954, align 2
  %957 = getelementptr inbounds i16, i16* %952, i64 2
  %958 = getelementptr inbounds i16, i16* %951, i64 2
  %959 = load i16, i16* %958, align 2
  store i16 %959, i16* %957, align 2
  %960 = getelementptr inbounds i16, i16* %952, i64 3
  %961 = getelementptr inbounds i16, i16* %951, i64 3
  %962 = load i16, i16* %961, align 2
  store i16 %962, i16* %960, align 2
  %963 = getelementptr inbounds i16, i16* %952, i64 4
  %964 = getelementptr inbounds i16, i16* %951, i64 4
  %965 = load i16, i16* %964, align 2
  store i16 %965, i16* %963, align 2
  %966 = getelementptr inbounds i16, i16* %952, i64 5
  %967 = getelementptr inbounds i16, i16* %951, i64 5
  %968 = load i16, i16* %967, align 2
  store i16 %968, i16* %966, align 2
  %969 = getelementptr inbounds i16, i16* %952, i64 6
  %970 = getelementptr inbounds i16, i16* %951, i64 6
  %971 = load i16, i16* %970, align 2
  store i16 %971, i16* %969, align 2
  %972 = getelementptr inbounds i16, i16* %952, i64 7
  %973 = getelementptr inbounds i16, i16* %951, i64 7
  %974 = load i16, i16* %973, align 2
  store i16 %974, i16* %972, align 2
  %975 = add i64 %950, -8
  %976 = getelementptr inbounds i16, i16* %952, i64 8
  %977 = getelementptr inbounds i16, i16* %951, i64 8
  %978 = icmp eq i64 %975, 0
  br i1 %978, label %1155, label %949, !llvm.loop !142

979:                                              ; preds = %820
  %980 = icmp slt i64 %821, %824
  br i1 %980, label %981, label %1155

981:                                              ; preds = %979
  %982 = getelementptr inbounds i16, i16* %827, i64 %44
  %983 = getelementptr inbounds i16, i16* %826, i64 %44
  %984 = icmp ult i64 %44, 16
  br i1 %984, label %1102, label %985

985:                                              ; preds = %981
  %986 = xor i64 %1, -1
  %987 = add i64 %16, %986
  %988 = sub i64 %987, %23
  %989 = add i64 %824, %822
  %990 = add i64 %989, %16
  %991 = xor i64 %1, -1
  %992 = add i64 %990, %991
  %993 = sub i64 %992, %23
  %994 = getelementptr i16, i16* %41, i64 %993
  %995 = ptrtoint i16* %994 to i64
  %996 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %988, i64 2)
  %997 = extractvalue { i64, i1 } %996, 0
  %998 = extractvalue { i64, i1 } %996, 1
  %999 = icmp ugt i64 %997, %995
  %1000 = or i1 %999, %998
  %1001 = add i64 %822, %821
  %1002 = add i64 %1001, %16
  %1003 = xor i64 %1, -1
  %1004 = add i64 %1002, %1003
  %1005 = sub i64 %1004, %23
  %1006 = getelementptr i16, i16* %41, i64 %1005
  %1007 = ptrtoint i16* %1006 to i64
  %1008 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %988, i64 2)
  %1009 = extractvalue { i64, i1 } %1008, 0
  %1010 = extractvalue { i64, i1 } %1008, 1
  %1011 = icmp ugt i64 %1009, %1007
  %1012 = or i1 %1011, %1010
  %1013 = or i1 %1000, %1012
  br i1 %1013, label %1102, label %1014

1014:                                             ; preds = %985
  %1015 = add i64 %824, %822
  %1016 = getelementptr i16, i16* %41, i64 %1015
  %1017 = add i64 %822, %821
  %1018 = getelementptr i16, i16* %41, i64 %1017
  %1019 = icmp ult i16* %1016, %982
  %1020 = icmp ult i16* %1018, %983
  %1021 = and i1 %1019, %1020
  br i1 %1021, label %1102, label %1022

1022:                                             ; preds = %1014
  %1023 = and i64 %44, -16
  %1024 = sub i64 %44, %1023
  %1025 = sub i64 0, %1023
  %1026 = getelementptr i16, i16* %982, i64 %1025
  %1027 = sub i64 0, %1023
  %1028 = getelementptr i16, i16* %983, i64 %1027
  %1029 = add i64 %1023, -16
  %1030 = lshr exact i64 %1029, 4
  %1031 = add nuw nsw i64 %1030, 1
  %1032 = and i64 %1031, 1
  %1033 = icmp eq i64 %1029, 0
  br i1 %1033, label %1078, label %1034

1034:                                             ; preds = %1022
  %1035 = sub nuw nsw i64 %1031, %1032
  %1036 = getelementptr i16, i16* %982, i64 -1
  %1037 = getelementptr i16, i16* %983, i64 -1
  %1038 = getelementptr i16, i16* %982, i64 -1
  %1039 = getelementptr i16, i16* %983, i64 -1
  br label %1040

1040:                                             ; preds = %1040, %1034
  %1041 = phi i64 [ 0, %1034 ], [ %1075, %1040 ]
  %1042 = phi i64 [ %1035, %1034 ], [ %1076, %1040 ]
  %1043 = sub i64 0, %1041
  %1044 = sub i64 0, %1041
  %1045 = getelementptr inbounds i16, i16* %1037, i64 %1044
  %1046 = getelementptr inbounds i16, i16* %1036, i64 %1043
  %1047 = getelementptr inbounds i16, i16* %1046, i64 -7
  %1048 = bitcast i16* %1047 to <8 x i16>*
  %1049 = load <8 x i16>, <8 x i16>* %1048, align 2, !alias.scope !143
  %1050 = getelementptr inbounds i16, i16* %1046, i64 -8
  %1051 = getelementptr inbounds i16, i16* %1050, i64 -7
  %1052 = bitcast i16* %1051 to <8 x i16>*
  %1053 = load <8 x i16>, <8 x i16>* %1052, align 2, !alias.scope !143
  %1054 = getelementptr inbounds i16, i16* %1045, i64 -7
  %1055 = bitcast i16* %1054 to <8 x i16>*
  store <8 x i16> %1049, <8 x i16>* %1055, align 2, !alias.scope !146, !noalias !143
  %1056 = getelementptr inbounds i16, i16* %1045, i64 -8
  %1057 = getelementptr inbounds i16, i16* %1056, i64 -7
  %1058 = bitcast i16* %1057 to <8 x i16>*
  store <8 x i16> %1053, <8 x i16>* %1058, align 2, !alias.scope !146, !noalias !143
  %1059 = sub nuw nsw i64 -16, %1041
  %1060 = sub nuw nsw i64 -16, %1041
  %1061 = getelementptr inbounds i16, i16* %1039, i64 %1060
  %1062 = getelementptr inbounds i16, i16* %1038, i64 %1059
  %1063 = getelementptr inbounds i16, i16* %1062, i64 -7
  %1064 = bitcast i16* %1063 to <8 x i16>*
  %1065 = load <8 x i16>, <8 x i16>* %1064, align 2, !alias.scope !143
  %1066 = getelementptr inbounds i16, i16* %1062, i64 -8
  %1067 = getelementptr inbounds i16, i16* %1066, i64 -7
  %1068 = bitcast i16* %1067 to <8 x i16>*
  %1069 = load <8 x i16>, <8 x i16>* %1068, align 2, !alias.scope !143
  %1070 = getelementptr inbounds i16, i16* %1061, i64 -7
  %1071 = bitcast i16* %1070 to <8 x i16>*
  store <8 x i16> %1065, <8 x i16>* %1071, align 2, !alias.scope !146, !noalias !143
  %1072 = getelementptr inbounds i16, i16* %1061, i64 -8
  %1073 = getelementptr inbounds i16, i16* %1072, i64 -7
  %1074 = bitcast i16* %1073 to <8 x i16>*
  store <8 x i16> %1069, <8 x i16>* %1074, align 2, !alias.scope !146, !noalias !143
  %1075 = add i64 %1041, 32
  %1076 = add i64 %1042, -2
  %1077 = icmp eq i64 %1076, 0
  br i1 %1077, label %1078, label %1040, !llvm.loop !148

1078:                                             ; preds = %1040, %1022
  %1079 = phi i64 [ 0, %1022 ], [ %1075, %1040 ]
  %1080 = icmp eq i64 %1032, 0
  br i1 %1080, label %1100, label %1081

1081:                                             ; preds = %1078
  %1082 = sub i64 0, %1079
  %1083 = getelementptr i16, i16* %982, i64 -1
  %1084 = sub i64 0, %1079
  %1085 = getelementptr i16, i16* %983, i64 -1
  %1086 = getelementptr inbounds i16, i16* %1085, i64 %1084
  %1087 = getelementptr inbounds i16, i16* %1083, i64 %1082
  %1088 = getelementptr inbounds i16, i16* %1087, i64 -7
  %1089 = bitcast i16* %1088 to <8 x i16>*
  %1090 = load <8 x i16>, <8 x i16>* %1089, align 2, !alias.scope !143
  %1091 = getelementptr inbounds i16, i16* %1087, i64 -8
  %1092 = getelementptr inbounds i16, i16* %1091, i64 -7
  %1093 = bitcast i16* %1092 to <8 x i16>*
  %1094 = load <8 x i16>, <8 x i16>* %1093, align 2, !alias.scope !143
  %1095 = getelementptr inbounds i16, i16* %1086, i64 -7
  %1096 = bitcast i16* %1095 to <8 x i16>*
  store <8 x i16> %1090, <8 x i16>* %1096, align 2, !alias.scope !146, !noalias !143
  %1097 = getelementptr inbounds i16, i16* %1086, i64 -8
  %1098 = getelementptr inbounds i16, i16* %1097, i64 -7
  %1099 = bitcast i16* %1098 to <8 x i16>*
  store <8 x i16> %1094, <8 x i16>* %1099, align 2, !alias.scope !146, !noalias !143
  br label %1100

1100:                                             ; preds = %1078, %1081
  %1101 = icmp eq i64 %44, %1023
  br i1 %1101, label %1155, label %1102

1102:                                             ; preds = %1100, %1014, %985, %981
  %1103 = phi i64 [ %44, %1014 ], [ %44, %985 ], [ %44, %981 ], [ %1024, %1100 ]
  %1104 = phi i16* [ %982, %1014 ], [ %982, %985 ], [ %982, %981 ], [ %1026, %1100 ]
  %1105 = phi i16* [ %983, %1014 ], [ %983, %985 ], [ %983, %981 ], [ %1028, %1100 ]
  %1106 = add i64 %1103, -1
  %1107 = and i64 %1103, 7
  %1108 = icmp eq i64 %1107, 0
  br i1 %1108, label %1120, label %1109

1109:                                             ; preds = %1102, %1109
  %1110 = phi i64 [ %1117, %1109 ], [ %1103, %1102 ]
  %1111 = phi i16* [ %1115, %1109 ], [ %1104, %1102 ]
  %1112 = phi i16* [ %1114, %1109 ], [ %1105, %1102 ]
  %1113 = phi i64 [ %1118, %1109 ], [ %1107, %1102 ]
  %1114 = getelementptr inbounds i16, i16* %1112, i64 -1
  %1115 = getelementptr inbounds i16, i16* %1111, i64 -1
  %1116 = load i16, i16* %1115, align 2
  store i16 %1116, i16* %1114, align 2
  %1117 = add i64 %1110, -1
  %1118 = add i64 %1113, -1
  %1119 = icmp eq i64 %1118, 0
  br i1 %1119, label %1120, label %1109, !llvm.loop !149

1120:                                             ; preds = %1109, %1102
  %1121 = phi i64 [ %1103, %1102 ], [ %1117, %1109 ]
  %1122 = phi i16* [ %1104, %1102 ], [ %1115, %1109 ]
  %1123 = phi i16* [ %1105, %1102 ], [ %1114, %1109 ]
  %1124 = icmp ult i64 %1106, 7
  br i1 %1124, label %1155, label %1125

1125:                                             ; preds = %1120, %1125
  %1126 = phi i64 [ %1153, %1125 ], [ %1121, %1120 ]
  %1127 = phi i16* [ %1151, %1125 ], [ %1122, %1120 ]
  %1128 = phi i16* [ %1150, %1125 ], [ %1123, %1120 ]
  %1129 = getelementptr inbounds i16, i16* %1128, i64 -1
  %1130 = getelementptr inbounds i16, i16* %1127, i64 -1
  %1131 = load i16, i16* %1130, align 2
  store i16 %1131, i16* %1129, align 2
  %1132 = getelementptr inbounds i16, i16* %1128, i64 -2
  %1133 = getelementptr inbounds i16, i16* %1127, i64 -2
  %1134 = load i16, i16* %1133, align 2
  store i16 %1134, i16* %1132, align 2
  %1135 = getelementptr inbounds i16, i16* %1128, i64 -3
  %1136 = getelementptr inbounds i16, i16* %1127, i64 -3
  %1137 = load i16, i16* %1136, align 2
  store i16 %1137, i16* %1135, align 2
  %1138 = getelementptr inbounds i16, i16* %1128, i64 -4
  %1139 = getelementptr inbounds i16, i16* %1127, i64 -4
  %1140 = load i16, i16* %1139, align 2
  store i16 %1140, i16* %1138, align 2
  %1141 = getelementptr inbounds i16, i16* %1128, i64 -5
  %1142 = getelementptr inbounds i16, i16* %1127, i64 -5
  %1143 = load i16, i16* %1142, align 2
  store i16 %1143, i16* %1141, align 2
  %1144 = getelementptr inbounds i16, i16* %1128, i64 -6
  %1145 = getelementptr inbounds i16, i16* %1127, i64 -6
  %1146 = load i16, i16* %1145, align 2
  store i16 %1146, i16* %1144, align 2
  %1147 = getelementptr inbounds i16, i16* %1128, i64 -7
  %1148 = getelementptr inbounds i16, i16* %1127, i64 -7
  %1149 = load i16, i16* %1148, align 2
  store i16 %1149, i16* %1147, align 2
  %1150 = getelementptr inbounds i16, i16* %1128, i64 -8
  %1151 = getelementptr inbounds i16, i16* %1127, i64 -8
  %1152 = load i16, i16* %1151, align 2
  store i16 %1152, i16* %1150, align 2
  %1153 = add i64 %1126, -8
  %1154 = icmp eq i64 %1153, 0
  br i1 %1154, label %1155, label %1125, !llvm.loop !150

1155:                                             ; preds = %1120, %1125, %944, %949, %1100, %924, %979, %43, %40
  %1156 = phi i64 [ %4, %40 ], [ %821, %979 ], [ %23, %43 ], [ %821, %924 ], [ %821, %1100 ], [ %821, %949 ], [ %821, %944 ], [ %821, %1125 ], [ %821, %1120 ]
  %1157 = phi i64 [ %1, %40 ], [ %822, %979 ], [ %1, %43 ], [ %822, %924 ], [ %822, %1100 ], [ %822, %949 ], [ %822, %944 ], [ %822, %1125 ], [ %822, %1120 ]
  %1158 = phi i16* [ %3, %40 ], [ %823, %979 ], [ %3, %43 ], [ %823, %924 ], [ %823, %1100 ], [ %823, %949 ], [ %823, %944 ], [ %823, %1125 ], [ %823, %1120 ]
  %1159 = phi i64 [ %4, %40 ], [ %824, %979 ], [ %4, %43 ], [ %824, %924 ], [ %824, %1100 ], [ %824, %949 ], [ %824, %944 ], [ %824, %1125 ], [ %824, %1120 ]
  %1160 = getelementptr inbounds i16, i16* %41, i64 %1157
  %1161 = icmp eq i64 %1159, 0
  br i1 %1161, label %1451, label %1162

1162:                                             ; preds = %1155
  %1163 = icmp ult i16* %1160, %1158
  br i1 %1163, label %1164, label %1308

1164:                                             ; preds = %1162
  %1165 = icmp ult i64 %1159, 16
  br i1 %1165, label %1255, label %1166

1166:                                             ; preds = %1164
  %1167 = add i64 %1159, %1157
  %1168 = getelementptr i16, i16* %41, i64 %1167
  %1169 = getelementptr i16, i16* %1158, i64 %1159
  %1170 = icmp ult i16* %1160, %1169
  %1171 = icmp ult i16* %1158, %1168
  %1172 = and i1 %1170, %1171
  br i1 %1172, label %1255, label %1173

1173:                                             ; preds = %1166
  %1174 = and i64 %1159, -16
  %1175 = sub i64 %1159, %1174
  %1176 = getelementptr i16, i16* %1158, i64 %1174
  %1177 = getelementptr i16, i16* %1160, i64 %1174
  %1178 = add i64 %1174, -16
  %1179 = lshr exact i64 %1178, 4
  %1180 = add nuw nsw i64 %1179, 1
  %1181 = and i64 %1180, 3
  %1182 = icmp ult i64 %1178, 48
  br i1 %1182, label %1234, label %1183

1183:                                             ; preds = %1173
  %1184 = sub nsw i64 %1180, %1181
  br label %1185

1185:                                             ; preds = %1185, %1183
  %1186 = phi i64 [ 0, %1183 ], [ %1231, %1185 ]
  %1187 = phi i64 [ %1184, %1183 ], [ %1232, %1185 ]
  %1188 = getelementptr i16, i16* %1158, i64 %1186
  %1189 = getelementptr i16, i16* %1160, i64 %1186
  %1190 = bitcast i16* %1188 to <8 x i16>*
  %1191 = load <8 x i16>, <8 x i16>* %1190, align 2, !alias.scope !151
  %1192 = getelementptr i16, i16* %1188, i64 8
  %1193 = bitcast i16* %1192 to <8 x i16>*
  %1194 = load <8 x i16>, <8 x i16>* %1193, align 2, !alias.scope !151
  %1195 = bitcast i16* %1189 to <8 x i16>*
  store <8 x i16> %1191, <8 x i16>* %1195, align 2, !alias.scope !154, !noalias !151
  %1196 = getelementptr i16, i16* %1189, i64 8
  %1197 = bitcast i16* %1196 to <8 x i16>*
  store <8 x i16> %1194, <8 x i16>* %1197, align 2, !alias.scope !154, !noalias !151
  %1198 = or i64 %1186, 16
  %1199 = getelementptr i16, i16* %1158, i64 %1198
  %1200 = getelementptr i16, i16* %1160, i64 %1198
  %1201 = bitcast i16* %1199 to <8 x i16>*
  %1202 = load <8 x i16>, <8 x i16>* %1201, align 2, !alias.scope !151
  %1203 = getelementptr i16, i16* %1199, i64 8
  %1204 = bitcast i16* %1203 to <8 x i16>*
  %1205 = load <8 x i16>, <8 x i16>* %1204, align 2, !alias.scope !151
  %1206 = bitcast i16* %1200 to <8 x i16>*
  store <8 x i16> %1202, <8 x i16>* %1206, align 2, !alias.scope !154, !noalias !151
  %1207 = getelementptr i16, i16* %1200, i64 8
  %1208 = bitcast i16* %1207 to <8 x i16>*
  store <8 x i16> %1205, <8 x i16>* %1208, align 2, !alias.scope !154, !noalias !151
  %1209 = or i64 %1186, 32
  %1210 = getelementptr i16, i16* %1158, i64 %1209
  %1211 = getelementptr i16, i16* %1160, i64 %1209
  %1212 = bitcast i16* %1210 to <8 x i16>*
  %1213 = load <8 x i16>, <8 x i16>* %1212, align 2, !alias.scope !151
  %1214 = getelementptr i16, i16* %1210, i64 8
  %1215 = bitcast i16* %1214 to <8 x i16>*
  %1216 = load <8 x i16>, <8 x i16>* %1215, align 2, !alias.scope !151
  %1217 = bitcast i16* %1211 to <8 x i16>*
  store <8 x i16> %1213, <8 x i16>* %1217, align 2, !alias.scope !154, !noalias !151
  %1218 = getelementptr i16, i16* %1211, i64 8
  %1219 = bitcast i16* %1218 to <8 x i16>*
  store <8 x i16> %1216, <8 x i16>* %1219, align 2, !alias.scope !154, !noalias !151
  %1220 = or i64 %1186, 48
  %1221 = getelementptr i16, i16* %1158, i64 %1220
  %1222 = getelementptr i16, i16* %1160, i64 %1220
  %1223 = bitcast i16* %1221 to <8 x i16>*
  %1224 = load <8 x i16>, <8 x i16>* %1223, align 2, !alias.scope !151
  %1225 = getelementptr i16, i16* %1221, i64 8
  %1226 = bitcast i16* %1225 to <8 x i16>*
  %1227 = load <8 x i16>, <8 x i16>* %1226, align 2, !alias.scope !151
  %1228 = bitcast i16* %1222 to <8 x i16>*
  store <8 x i16> %1224, <8 x i16>* %1228, align 2, !alias.scope !154, !noalias !151
  %1229 = getelementptr i16, i16* %1222, i64 8
  %1230 = bitcast i16* %1229 to <8 x i16>*
  store <8 x i16> %1227, <8 x i16>* %1230, align 2, !alias.scope !154, !noalias !151
  %1231 = add i64 %1186, 64
  %1232 = add i64 %1187, -4
  %1233 = icmp eq i64 %1232, 0
  br i1 %1233, label %1234, label %1185, !llvm.loop !156

1234:                                             ; preds = %1185, %1173
  %1235 = phi i64 [ 0, %1173 ], [ %1231, %1185 ]
  %1236 = icmp eq i64 %1181, 0
  br i1 %1236, label %1253, label %1237

1237:                                             ; preds = %1234, %1237
  %1238 = phi i64 [ %1250, %1237 ], [ %1235, %1234 ]
  %1239 = phi i64 [ %1251, %1237 ], [ %1181, %1234 ]
  %1240 = getelementptr i16, i16* %1158, i64 %1238
  %1241 = getelementptr i16, i16* %1160, i64 %1238
  %1242 = bitcast i16* %1240 to <8 x i16>*
  %1243 = load <8 x i16>, <8 x i16>* %1242, align 2, !alias.scope !151
  %1244 = getelementptr i16, i16* %1240, i64 8
  %1245 = bitcast i16* %1244 to <8 x i16>*
  %1246 = load <8 x i16>, <8 x i16>* %1245, align 2, !alias.scope !151
  %1247 = bitcast i16* %1241 to <8 x i16>*
  store <8 x i16> %1243, <8 x i16>* %1247, align 2, !alias.scope !154, !noalias !151
  %1248 = getelementptr i16, i16* %1241, i64 8
  %1249 = bitcast i16* %1248 to <8 x i16>*
  store <8 x i16> %1246, <8 x i16>* %1249, align 2, !alias.scope !154, !noalias !151
  %1250 = add i64 %1238, 16
  %1251 = add i64 %1239, -1
  %1252 = icmp eq i64 %1251, 0
  br i1 %1252, label %1253, label %1237, !llvm.loop !157

1253:                                             ; preds = %1237, %1234
  %1254 = icmp eq i64 %1159, %1174
  br i1 %1254, label %1451, label %1255

1255:                                             ; preds = %1253, %1166, %1164
  %1256 = phi i64 [ %1159, %1166 ], [ %1159, %1164 ], [ %1175, %1253 ]
  %1257 = phi i16* [ %1158, %1166 ], [ %1158, %1164 ], [ %1176, %1253 ]
  %1258 = phi i16* [ %1160, %1166 ], [ %1160, %1164 ], [ %1177, %1253 ]
  %1259 = add i64 %1256, -1
  %1260 = and i64 %1256, 7
  %1261 = icmp eq i64 %1260, 0
  br i1 %1261, label %1273, label %1262

1262:                                             ; preds = %1255, %1262
  %1263 = phi i64 [ %1268, %1262 ], [ %1256, %1255 ]
  %1264 = phi i16* [ %1270, %1262 ], [ %1257, %1255 ]
  %1265 = phi i16* [ %1269, %1262 ], [ %1258, %1255 ]
  %1266 = phi i64 [ %1271, %1262 ], [ %1260, %1255 ]
  %1267 = load i16, i16* %1264, align 2
  store i16 %1267, i16* %1265, align 2
  %1268 = add i64 %1263, -1
  %1269 = getelementptr inbounds i16, i16* %1265, i64 1
  %1270 = getelementptr inbounds i16, i16* %1264, i64 1
  %1271 = add i64 %1266, -1
  %1272 = icmp eq i64 %1271, 0
  br i1 %1272, label %1273, label %1262, !llvm.loop !158

1273:                                             ; preds = %1262, %1255
  %1274 = phi i64 [ %1256, %1255 ], [ %1268, %1262 ]
  %1275 = phi i16* [ %1257, %1255 ], [ %1270, %1262 ]
  %1276 = phi i16* [ %1258, %1255 ], [ %1269, %1262 ]
  %1277 = icmp ult i64 %1259, 7
  br i1 %1277, label %1451, label %1278

1278:                                             ; preds = %1273, %1278
  %1279 = phi i64 [ %1304, %1278 ], [ %1274, %1273 ]
  %1280 = phi i16* [ %1306, %1278 ], [ %1275, %1273 ]
  %1281 = phi i16* [ %1305, %1278 ], [ %1276, %1273 ]
  %1282 = load i16, i16* %1280, align 2
  store i16 %1282, i16* %1281, align 2
  %1283 = getelementptr inbounds i16, i16* %1281, i64 1
  %1284 = getelementptr inbounds i16, i16* %1280, i64 1
  %1285 = load i16, i16* %1284, align 2
  store i16 %1285, i16* %1283, align 2
  %1286 = getelementptr inbounds i16, i16* %1281, i64 2
  %1287 = getelementptr inbounds i16, i16* %1280, i64 2
  %1288 = load i16, i16* %1287, align 2
  store i16 %1288, i16* %1286, align 2
  %1289 = getelementptr inbounds i16, i16* %1281, i64 3
  %1290 = getelementptr inbounds i16, i16* %1280, i64 3
  %1291 = load i16, i16* %1290, align 2
  store i16 %1291, i16* %1289, align 2
  %1292 = getelementptr inbounds i16, i16* %1281, i64 4
  %1293 = getelementptr inbounds i16, i16* %1280, i64 4
  %1294 = load i16, i16* %1293, align 2
  store i16 %1294, i16* %1292, align 2
  %1295 = getelementptr inbounds i16, i16* %1281, i64 5
  %1296 = getelementptr inbounds i16, i16* %1280, i64 5
  %1297 = load i16, i16* %1296, align 2
  store i16 %1297, i16* %1295, align 2
  %1298 = getelementptr inbounds i16, i16* %1281, i64 6
  %1299 = getelementptr inbounds i16, i16* %1280, i64 6
  %1300 = load i16, i16* %1299, align 2
  store i16 %1300, i16* %1298, align 2
  %1301 = getelementptr inbounds i16, i16* %1281, i64 7
  %1302 = getelementptr inbounds i16, i16* %1280, i64 7
  %1303 = load i16, i16* %1302, align 2
  store i16 %1303, i16* %1301, align 2
  %1304 = add i64 %1279, -8
  %1305 = getelementptr inbounds i16, i16* %1281, i64 8
  %1306 = getelementptr inbounds i16, i16* %1280, i64 8
  %1307 = icmp eq i64 %1304, 0
  br i1 %1307, label %1451, label %1278, !llvm.loop !159

1308:                                             ; preds = %1162
  %1309 = icmp ult i16* %1158, %1160
  br i1 %1309, label %1310, label %1451

1310:                                             ; preds = %1308
  %1311 = getelementptr inbounds i16, i16* %1158, i64 %1159
  %1312 = getelementptr inbounds i16, i16* %1160, i64 %1159
  %1313 = icmp ult i64 %1159, 16
  br i1 %1313, label %1398, label %1314

1314:                                             ; preds = %1310
  %1315 = icmp ult i16* %1160, %1311
  %1316 = icmp ult i16* %1158, %1312
  %1317 = and i1 %1315, %1316
  br i1 %1317, label %1398, label %1318

1318:                                             ; preds = %1314
  %1319 = and i64 %1159, -16
  %1320 = sub i64 %1159, %1319
  %1321 = sub i64 0, %1319
  %1322 = getelementptr i16, i16* %1311, i64 %1321
  %1323 = sub i64 0, %1319
  %1324 = getelementptr i16, i16* %1312, i64 %1323
  %1325 = add i64 %1319, -16
  %1326 = lshr exact i64 %1325, 4
  %1327 = add nuw nsw i64 %1326, 1
  %1328 = and i64 %1327, 1
  %1329 = icmp eq i64 %1325, 0
  br i1 %1329, label %1376, label %1330

1330:                                             ; preds = %1318
  %1331 = sub nuw nsw i64 %1327, %1328
  %1332 = getelementptr i16, i16* %1311, i64 -1
  %1333 = getelementptr i16, i16* %1312, i64 -1
  %1334 = getelementptr i16, i16* %1311, i64 -1
  %1335 = getelementptr i16, i16* %1312, i64 -1
  br label %1336

1336:                                             ; preds = %1336, %1330
  %1337 = phi i64 [ 0, %1330 ], [ %1371, %1336 ]
  %1338 = phi i64 [ %1331, %1330 ], [ %1372, %1336 ]
  %1339 = sub i64 0, %1337
  %1340 = sub i64 0, %1337
  %1341 = getelementptr inbounds i16, i16* %1333, i64 %1340
  %1342 = getelementptr inbounds i16, i16* %1332, i64 %1339
  %1343 = getelementptr inbounds i16, i16* %1342, i64 -7
  %1344 = bitcast i16* %1343 to <8 x i16>*
  %1345 = load <8 x i16>, <8 x i16>* %1344, align 2, !alias.scope !160
  %1346 = getelementptr inbounds i16, i16* %1342, i64 -8
  %1347 = getelementptr inbounds i16, i16* %1346, i64 -7
  %1348 = bitcast i16* %1347 to <8 x i16>*
  %1349 = load <8 x i16>, <8 x i16>* %1348, align 2, !alias.scope !160
  %1350 = getelementptr inbounds i16, i16* %1341, i64 -7
  %1351 = bitcast i16* %1350 to <8 x i16>*
  store <8 x i16> %1345, <8 x i16>* %1351, align 2, !alias.scope !163, !noalias !160
  %1352 = getelementptr inbounds i16, i16* %1341, i64 -8
  %1353 = getelementptr inbounds i16, i16* %1352, i64 -7
  %1354 = bitcast i16* %1353 to <8 x i16>*
  store <8 x i16> %1349, <8 x i16>* %1354, align 2, !alias.scope !163, !noalias !160
  %1355 = sub nuw nsw i64 -16, %1337
  %1356 = sub nuw nsw i64 -16, %1337
  %1357 = getelementptr inbounds i16, i16* %1335, i64 %1356
  %1358 = getelementptr inbounds i16, i16* %1334, i64 %1355
  %1359 = getelementptr inbounds i16, i16* %1358, i64 -7
  %1360 = bitcast i16* %1359 to <8 x i16>*
  %1361 = load <8 x i16>, <8 x i16>* %1360, align 2, !alias.scope !160
  %1362 = getelementptr inbounds i16, i16* %1358, i64 -8
  %1363 = getelementptr inbounds i16, i16* %1362, i64 -7
  %1364 = bitcast i16* %1363 to <8 x i16>*
  %1365 = load <8 x i16>, <8 x i16>* %1364, align 2, !alias.scope !160
  %1366 = getelementptr inbounds i16, i16* %1357, i64 -7
  %1367 = bitcast i16* %1366 to <8 x i16>*
  store <8 x i16> %1361, <8 x i16>* %1367, align 2, !alias.scope !163, !noalias !160
  %1368 = getelementptr inbounds i16, i16* %1357, i64 -8
  %1369 = getelementptr inbounds i16, i16* %1368, i64 -7
  %1370 = bitcast i16* %1369 to <8 x i16>*
  store <8 x i16> %1365, <8 x i16>* %1370, align 2, !alias.scope !163, !noalias !160
  %1371 = add i64 %1337, 32
  %1372 = add i64 %1338, -2
  %1373 = icmp eq i64 %1372, 0
  br i1 %1373, label %1374, label %1336, !llvm.loop !165

1374:                                             ; preds = %1336
  %1375 = sub nuw nsw i64 -32, %1337
  br label %1376

1376:                                             ; preds = %1374, %1318
  %1377 = phi i64 [ 0, %1318 ], [ %1375, %1374 ]
  %1378 = icmp eq i64 %1328, 0
  br i1 %1378, label %1396, label %1379

1379:                                             ; preds = %1376
  %1380 = getelementptr i16, i16* %1311, i64 -1
  %1381 = getelementptr i16, i16* %1312, i64 -1
  %1382 = getelementptr inbounds i16, i16* %1381, i64 %1377
  %1383 = getelementptr inbounds i16, i16* %1380, i64 %1377
  %1384 = getelementptr inbounds i16, i16* %1383, i64 -7
  %1385 = bitcast i16* %1384 to <8 x i16>*
  %1386 = load <8 x i16>, <8 x i16>* %1385, align 2, !alias.scope !160
  %1387 = getelementptr inbounds i16, i16* %1383, i64 -8
  %1388 = getelementptr inbounds i16, i16* %1387, i64 -7
  %1389 = bitcast i16* %1388 to <8 x i16>*
  %1390 = load <8 x i16>, <8 x i16>* %1389, align 2, !alias.scope !160
  %1391 = getelementptr inbounds i16, i16* %1382, i64 -7
  %1392 = bitcast i16* %1391 to <8 x i16>*
  store <8 x i16> %1386, <8 x i16>* %1392, align 2, !alias.scope !163, !noalias !160
  %1393 = getelementptr inbounds i16, i16* %1382, i64 -8
  %1394 = getelementptr inbounds i16, i16* %1393, i64 -7
  %1395 = bitcast i16* %1394 to <8 x i16>*
  store <8 x i16> %1390, <8 x i16>* %1395, align 2, !alias.scope !163, !noalias !160
  br label %1396

1396:                                             ; preds = %1376, %1379
  %1397 = icmp eq i64 %1159, %1319
  br i1 %1397, label %1451, label %1398

1398:                                             ; preds = %1396, %1314, %1310
  %1399 = phi i64 [ %1159, %1314 ], [ %1159, %1310 ], [ %1320, %1396 ]
  %1400 = phi i16* [ %1311, %1314 ], [ %1311, %1310 ], [ %1322, %1396 ]
  %1401 = phi i16* [ %1312, %1314 ], [ %1312, %1310 ], [ %1324, %1396 ]
  %1402 = add i64 %1399, -1
  %1403 = and i64 %1399, 7
  %1404 = icmp eq i64 %1403, 0
  br i1 %1404, label %1416, label %1405

1405:                                             ; preds = %1398, %1405
  %1406 = phi i64 [ %1413, %1405 ], [ %1399, %1398 ]
  %1407 = phi i16* [ %1411, %1405 ], [ %1400, %1398 ]
  %1408 = phi i16* [ %1410, %1405 ], [ %1401, %1398 ]
  %1409 = phi i64 [ %1414, %1405 ], [ %1403, %1398 ]
  %1410 = getelementptr inbounds i16, i16* %1408, i64 -1
  %1411 = getelementptr inbounds i16, i16* %1407, i64 -1
  %1412 = load i16, i16* %1411, align 2
  store i16 %1412, i16* %1410, align 2
  %1413 = add i64 %1406, -1
  %1414 = add i64 %1409, -1
  %1415 = icmp eq i64 %1414, 0
  br i1 %1415, label %1416, label %1405, !llvm.loop !166

1416:                                             ; preds = %1405, %1398
  %1417 = phi i64 [ %1399, %1398 ], [ %1413, %1405 ]
  %1418 = phi i16* [ %1400, %1398 ], [ %1411, %1405 ]
  %1419 = phi i16* [ %1401, %1398 ], [ %1410, %1405 ]
  %1420 = icmp ult i64 %1402, 7
  br i1 %1420, label %1451, label %1421

1421:                                             ; preds = %1416, %1421
  %1422 = phi i64 [ %1449, %1421 ], [ %1417, %1416 ]
  %1423 = phi i16* [ %1447, %1421 ], [ %1418, %1416 ]
  %1424 = phi i16* [ %1446, %1421 ], [ %1419, %1416 ]
  %1425 = getelementptr inbounds i16, i16* %1424, i64 -1
  %1426 = getelementptr inbounds i16, i16* %1423, i64 -1
  %1427 = load i16, i16* %1426, align 2
  store i16 %1427, i16* %1425, align 2
  %1428 = getelementptr inbounds i16, i16* %1424, i64 -2
  %1429 = getelementptr inbounds i16, i16* %1423, i64 -2
  %1430 = load i16, i16* %1429, align 2
  store i16 %1430, i16* %1428, align 2
  %1431 = getelementptr inbounds i16, i16* %1424, i64 -3
  %1432 = getelementptr inbounds i16, i16* %1423, i64 -3
  %1433 = load i16, i16* %1432, align 2
  store i16 %1433, i16* %1431, align 2
  %1434 = getelementptr inbounds i16, i16* %1424, i64 -4
  %1435 = getelementptr inbounds i16, i16* %1423, i64 -4
  %1436 = load i16, i16* %1435, align 2
  store i16 %1436, i16* %1434, align 2
  %1437 = getelementptr inbounds i16, i16* %1424, i64 -5
  %1438 = getelementptr inbounds i16, i16* %1423, i64 -5
  %1439 = load i16, i16* %1438, align 2
  store i16 %1439, i16* %1437, align 2
  %1440 = getelementptr inbounds i16, i16* %1424, i64 -6
  %1441 = getelementptr inbounds i16, i16* %1423, i64 -6
  %1442 = load i16, i16* %1441, align 2
  store i16 %1442, i16* %1440, align 2
  %1443 = getelementptr inbounds i16, i16* %1424, i64 -7
  %1444 = getelementptr inbounds i16, i16* %1423, i64 -7
  %1445 = load i16, i16* %1444, align 2
  store i16 %1445, i16* %1443, align 2
  %1446 = getelementptr inbounds i16, i16* %1424, i64 -8
  %1447 = getelementptr inbounds i16, i16* %1423, i64 -8
  %1448 = load i16, i16* %1447, align 2
  store i16 %1448, i16* %1446, align 2
  %1449 = add i64 %1422, -8
  %1450 = icmp eq i64 %1449, 0
  br i1 %1450, label %1451, label %1421, !llvm.loop !167

1451:                                             ; preds = %624, %629, %454, %459, %1416, %1421, %1273, %1278, %604, %434, %1396, %1253, %1308, %1155, %489
  %1452 = phi i64 [ %23, %489 ], [ %1156, %1155 ], [ %1156, %1308 ], [ %1156, %1253 ], [ %1156, %1396 ], [ %23, %434 ], [ %23, %604 ], [ %1156, %1278 ], [ %1156, %1273 ], [ %1156, %1421 ], [ %1156, %1416 ], [ %23, %459 ], [ %23, %454 ], [ %23, %629 ], [ %23, %624 ]
  %1453 = phi i64 [ %4, %489 ], [ 0, %1155 ], [ %1159, %1308 ], [ %1159, %1253 ], [ %1159, %1396 ], [ %4, %434 ], [ %4, %604 ], [ %1159, %1278 ], [ %1159, %1273 ], [ %1159, %1421 ], [ %1159, %1416 ], [ %4, %459 ], [ %4, %454 ], [ %4, %629 ], [ %4, %624 ]
  %1454 = sub i64 %1453, %1452
  %1455 = add i64 %1454, %16
  %1456 = load i8, i8* %7, align 1
  %1457 = icmp slt i8 %1456, 0
  br i1 %1457, label %1458, label %1460

1458:                                             ; preds = %1451
  %1459 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1455, i64* %1459, align 8
  br label %1462

1460:                                             ; preds = %1451
  %1461 = trunc i64 %1455 to i8
  store i8 %1461, i8* %7, align 1
  br label %1462

1462:                                             ; preds = %1458, %1460
  %1463 = getelementptr inbounds i16, i16* %41, i64 %1455
  store i16 0, i16* %1463, align 2
  br label %1468

1464:                                             ; preds = %29
  %1465 = add i64 %16, %4
  %1466 = sub i64 %1465, %23
  %1467 = sub i64 %1466, %30
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %30, i64 %1467, i64 %16, i64 %1, i64 %23, i64 %4, i16* %3)
  br label %1468

1468:                                             ; preds = %1464, %1462
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #13
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !168
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !168
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !171, !noalias !168
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !171, !noalias !168
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !168
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !168
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !171, !noalias !168
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !171, !noalias !168
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !168
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !168
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !171, !noalias !168
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !171, !noalias !168
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !168
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !168
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !171, !noalias !168
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !171, !noalias !168
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !173

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !168
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !168
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !171, !noalias !168
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !171, !noalias !168
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !174

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !175

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !176

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !177
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !177
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !180, !noalias !177
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !180, !noalias !177
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !177
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !177
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !180, !noalias !177
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !180, !noalias !177
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !182

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !177
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !177
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !180, !noalias !177
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !180, !noalias !177
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !183

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !184

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !185
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !185
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !188, !noalias !185
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !188, !noalias !185
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !185
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !185
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !188, !noalias !185
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !188, !noalias !185
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !185
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !185
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !188, !noalias !185
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !188, !noalias !185
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !185
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !185
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !188, !noalias !185
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !188, !noalias !185
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !190

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !185
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !185
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !188, !noalias !185
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !188, !noalias !185
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !191

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !192

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !193

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !194
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !194
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !197, !noalias !194
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !197, !noalias !194
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !194
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !194
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !197, !noalias !194
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !197, !noalias !194
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !199

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !194
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !194
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !197, !noalias !194
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !197, !noalias !194
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !200

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !201

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base14WeakPtrFactoryI20SpellingMenuObserverE10GetWeakPtrEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base14WeakPtrFactoryI20SpellingMenuObserverE10GetWeakPtrEv"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERKNS6_6vectorI16SpellCheckResultNSA_ISG_EEEEEJNS_7WeakPtrIS3_EES5_EEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS1_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIM20SpellingMenuObserverFvN21SpellingServiceClient11ServiceTypeEbRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS1_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK4base14WeakPtrFactoryI20SpellingMenuObserverE10GetWeakPtrEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4base14WeakPtrFactoryI20SpellingMenuObserverE10GetWeakPtrEv"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEDcOT0_DpOT1_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM20SpellingMenuObserverFviEJNS_7WeakPtrIS3_EEiEEEDcOT0_DpOT1_"}
!46 = distinct !{!46, !47, !"_ZN4base13BindRepeatingIM20SpellingMenuObserverFviEJNS_7WeakPtrIS1_EEiEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!47 = distinct !{!47, !"_ZN4base13BindRepeatingIM20SpellingMenuObserverFviEJNS_7WeakPtrIS1_EEiEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !9}
!57 = distinct !{!57, !11}
!58 = distinct !{!58, !11}
!59 = distinct !{!59, !9}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !9}
!66 = distinct !{!66, !11}
!67 = distinct !{!67, !11}
!68 = distinct !{!68, !9}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !9}
!75 = distinct !{!75, !11}
!76 = distinct !{!76, !11}
!77 = distinct !{!77, !9}
!78 = distinct !{!78, !9}
!79 = distinct !{!79, !11}
!80 = distinct !{!80, !81, !9}
!81 = !{!"llvm.loop.unroll.runtime.disable"}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !9}
!88 = distinct !{!88, !11}
!89 = distinct !{!89, !11}
!90 = distinct !{!90, !9}
!91 = !{!92}
!92 = distinct !{!92, !93}
!93 = distinct !{!93, !"LVerDomain"}
!94 = !{!95}
!95 = distinct !{!95, !93}
!96 = distinct !{!96, !9}
!97 = distinct !{!97, !11}
!98 = distinct !{!98, !11}
!99 = distinct !{!99, !9}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !9}
!106 = distinct !{!106, !11}
!107 = distinct !{!107, !9}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !9}
!114 = distinct !{!114, !11}
!115 = distinct !{!115, !11}
!116 = distinct !{!116, !9}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !9}
!123 = distinct !{!123, !11}
!124 = distinct !{!124, !9}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !9}
!131 = distinct !{!131, !11}
!132 = distinct !{!132, !11}
!133 = distinct !{!133, !9}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !9}
!140 = distinct !{!140, !11}
!141 = distinct !{!141, !11}
!142 = distinct !{!142, !9}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !9}
!149 = distinct !{!149, !11}
!150 = distinct !{!150, !9}
!151 = !{!152}
!152 = distinct !{!152, !153}
!153 = distinct !{!153, !"LVerDomain"}
!154 = !{!155}
!155 = distinct !{!155, !153}
!156 = distinct !{!156, !9}
!157 = distinct !{!157, !11}
!158 = distinct !{!158, !11}
!159 = distinct !{!159, !9}
!160 = !{!161}
!161 = distinct !{!161, !162}
!162 = distinct !{!162, !"LVerDomain"}
!163 = !{!164}
!164 = distinct !{!164, !162}
!165 = distinct !{!165, !9}
!166 = distinct !{!166, !11}
!167 = distinct !{!167, !9}
!168 = !{!169}
!169 = distinct !{!169, !170}
!170 = distinct !{!170, !"LVerDomain"}
!171 = !{!172}
!172 = distinct !{!172, !170}
!173 = distinct !{!173, !9}
!174 = distinct !{!174, !11}
!175 = distinct !{!175, !11}
!176 = distinct !{!176, !9}
!177 = !{!178}
!178 = distinct !{!178, !179}
!179 = distinct !{!179, !"LVerDomain"}
!180 = !{!181}
!181 = distinct !{!181, !179}
!182 = distinct !{!182, !9}
!183 = distinct !{!183, !11}
!184 = distinct !{!184, !9}
!185 = !{!186}
!186 = distinct !{!186, !187}
!187 = distinct !{!187, !"LVerDomain"}
!188 = !{!189}
!189 = distinct !{!189, !187}
!190 = distinct !{!190, !9}
!191 = distinct !{!191, !11}
!192 = distinct !{!192, !11}
!193 = distinct !{!193, !9}
!194 = !{!195}
!195 = distinct !{!195, !196}
!196 = distinct !{!196, !"LVerDomain"}
!197 = !{!198}
!198 = distinct !{!198, !196}
!199 = distinct !{!199, !9}
!200 = distinct !{!200, !11}
!201 = distinct !{!201, !9}
