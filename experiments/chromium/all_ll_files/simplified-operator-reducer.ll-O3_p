; ModuleID = '../../v8/src/compiler/simplified-operator-reducer.cc'
source_filename = "../../v8/src/compiler/simplified-operator-reducer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorReducer" = type { %"class.v8::internal::compiler::AdvancedReducer", %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::AdvancedReducer" = type { %"class.v8::internal::compiler::Reducer", %"class.v8::internal::compiler::AdvancedReducer::Editor"* }
%"class.v8::internal::compiler::Reducer" = type { i32 (...)** }
%"class.v8::internal::compiler::AdvancedReducer::Editor" = type { i32 (...)** }
%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.18" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.21", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.21" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.38", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.38", %"class.v8::internal::compiler::NodeCache.38", %"class.v8::internal::compiler::NodeCache.38", %"class.v8::internal::compiler::NodeCache.38", %"class.v8::internal::compiler::NodeCache.38", %"class.v8::internal::compiler::NodeCache.65", %"class.v8::internal::compiler::NodeCache.92" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.35", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::internal::ZoneAllocator.28" }
%"class.v8::internal::ZoneAllocator.28" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.v8::internal::ZoneAllocator.32" }
%"class.v8::internal::ZoneAllocator.32" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { float }
%"class.v8::internal::compiler::NodeCache.38" = type { %"class.v8::internal::ZoneUnorderedMap.39" }
%"class.v8::internal::ZoneUnorderedMap.39" = type { %"class.std::__1::unordered_map.40" }
%"class.std::__1::unordered_map.40" = type { %"class.std::__1::__hash_table.41" }
%"class.std::__1::__hash_table.41" = type <{ %"class.std::__1::unique_ptr.42", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::__hash_node_base.45"** }
%"struct.std::__1::__hash_node_base.45" = type { %"struct.std::__1::__hash_node_base.45"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator.47" }
%"class.std::__1::__bucket_list_deallocator.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.v8::internal::ZoneAllocator.50" }
%"class.v8::internal::ZoneAllocator.50" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base.45" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.v8::internal::ZoneAllocator.54" }
%"class.v8::internal::ZoneAllocator.54" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::compiler::NodeCache.65" = type { %"class.v8::internal::ZoneUnorderedMap.66" }
%"class.v8::internal::ZoneUnorderedMap.66" = type { %"class.std::__1::unordered_map.67" }
%"class.std::__1::unordered_map.67" = type { %"class.std::__1::__hash_table.68" }
%"class.std::__1::__hash_table.68" = type <{ %"class.std::__1::unique_ptr.69", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86", [4 x i8] }>
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71", %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::__hash_node_base.72"** }
%"struct.std::__1::__hash_node_base.72" = type { %"struct.std::__1::__hash_node_base.72"* }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__bucket_list_deallocator.74" }
%"class.std::__1::__bucket_list_deallocator.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.v8::internal::ZoneAllocator.77" }
%"class.v8::internal::ZoneAllocator.77" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base.72" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.v8::internal::ZoneAllocator.81" }
%"class.v8::internal::ZoneAllocator.81" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::compiler::NodeCache.92" = type { %"class.v8::internal::ZoneUnorderedMap.93" }
%"class.v8::internal::ZoneUnorderedMap.93" = type { %"class.std::__1::unordered_map.94" }
%"class.std::__1::unordered_map.94" = type { %"class.std::__1::__hash_table.95" }
%"class.std::__1::__hash_table.95" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.99"** }
%"struct.std::__1::__hash_node_base.99" = type { %"struct.std::__1::__hash_node_base.99"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator.101" }
%"class.std::__1::__bucket_list_deallocator.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.v8::internal::ZoneAllocator.104" }
%"class.v8::internal::ZoneAllocator.104" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base.99" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.v8::internal::ZoneAllocator.108" }
%"class.v8::internal::ZoneAllocator.108" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.124", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.760", %"class.std::__1::unique_ptr.781", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.791", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.925", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.938", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.948", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.959", %"struct.std::__1::atomic.287", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1034", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1077"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1086", i32, i8, i8, i32, i32, %"class.std::__1::vector.1092", %"class.std::__1::vector.1092", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1099", i64, %"class.std::__1::unordered_map.1100", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.658", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.295", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1156", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1194", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1228", %"class.std::__1::vector.1232", %"class.std::__1::vector.1232", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.119", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__cxx_atomic_impl.121" }
%"struct.std::__1::__cxx_atomic_impl.121" = type { %"struct.std::__1::__cxx_atomic_base_impl.122" }
%"struct.std::__1::__cxx_atomic_base_impl.122" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.130", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.161", %"class.std::__1::vector.165", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.296", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.300", %"class.std::__1::vector.300", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.313", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.449", %"class.std::__1::unique_ptr.455", %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.563", %"class.std::__1::unique_ptr.569", %"class.std::__1::unique_ptr.579", %"class.std::__1::unique_ptr.585", %"class.std::__1::unique_ptr.585", %"class.std::__1::unique_ptr.591", %"class.std::__1::unique_ptr.597", %"class.std::__1::unique_ptr.597", %"class.std::__1::unique_ptr.603", %"class.std::__1::unique_ptr.609", %"class.std::__1::shared_ptr.615", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.620", %"class.std::__1::unique_ptr.646", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.652", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.665", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.465", i8, [7 x i8], %"class.std::__1::unordered_map.671", %"class.std::__1::unordered_map.697", %"class.std::__1::unordered_map.671", %"class.std::__1::unordered_map.721", %"class.std::__1::vector.747", i8, %"class.std::__1::unique_ptr.754", i32, i32 }
%"class.std::__1::unordered_map.130" = type { %"class.std::__1::__hash_table.131" }
%"class.std::__1::__hash_table.131" = type <{ %"class.std::__1::unique_ptr.132", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base.135"** }
%"struct.std::__1::__hash_node_base.135" = type { %"struct.std::__1::__hash_node_base.135"* }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__bucket_list_deallocator.137" }
%"class.std::__1::__bucket_list_deallocator.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base.135" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.156", %"struct.std::__1::atomic.156", %"struct.std::__1::atomic.156" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.167" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.238" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.232" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.172", %"class.std::__1::vector.172", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.174" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.179" }
%"class.std::__1::__hash_table.179" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.197", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base.183"** }
%"struct.std::__1::__hash_node_base.183" = type { %"struct.std::__1::__hash_node_base.183"* }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::__bucket_list_deallocator.185" }
%"class.std::__1::__bucket_list_deallocator.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::__hash_node_base.183" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.156", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.213"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.221", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.156", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.156", %"struct.std::__1::atomic.202", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__cxx_atomic_impl.204" }
%"struct.std::__1::__cxx_atomic_impl.204" = type { %"struct.std::__1::__cxx_atomic_base_impl.205" }
%"struct.std::__1::__cxx_atomic_base_impl.205" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.206" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.208" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.213" = type { %"class.std::__1::__tree.214" }
%"class.std::__1::__tree.214" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.215", %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.225", i8, [7 x i8] }>
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { i64*, i64*, %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"struct.std::__1::pair.240"*, %"struct.std::__1::pair.240"*, %"class.std::__1::__compressed_pair.241" }
%"struct.std::__1::pair.240" = type { i32, i64 }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::pair.240"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.246" }
%"class.std::__1::unordered_map.246" = type { %"class.std::__1::__hash_table.247" }
%"class.std::__1::__hash_table.247" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.268", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base.251"** }
%"struct.std::__1::__hash_node_base.251" = type { %"struct.std::__1::__hash_node_base.251"* }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::__bucket_list_deallocator.253" }
%"class.std::__1::__bucket_list_deallocator.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node_base.251" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.274", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.276" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1161", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1165", %"class.std::__1::unique_ptr.1171", %"class.std::__1::unique_ptr.609", %"class.std::__1::vector.1177", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1161" = type { %"struct.std::__1::__atomic_base.1162" }
%"struct.std::__1::__atomic_base.1162" = type { %"struct.std::__1::__cxx_atomic_impl.1163" }
%"struct.std::__1::__cxx_atomic_impl.1163" = type { %"struct.std::__1::__cxx_atomic_base_impl.1164" }
%"struct.std::__1::__cxx_atomic_base_impl.1164" = type { i32 }
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.918" }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { i64**, i64**, %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { i64** }
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.918", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1177" = type { %"class.std::__1::__vector_base.1178" }
%"class.std::__1::__vector_base.1178" = type { %"struct.std::__1::pair.1179"*, %"struct.std::__1::pair.1179"*, %"class.std::__1::__compressed_pair.1180" }
%"struct.std::__1::pair.1179" = type opaque
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"struct.std::__1::pair.1179"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.287", %"struct.std::__1::atomic.291", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.291" = type { %"struct.std::__1::__atomic_base.292" }
%"struct.std::__1::__atomic_base.292" = type { %"struct.std::__1::__cxx_atomic_impl.293" }
%"struct.std::__1::__cxx_atomic_impl.293" = type { %"struct.std::__1::__cxx_atomic_base_impl.294" }
%"struct.std::__1::__cxx_atomic_base_impl.294" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.295" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__cxx_atomic_impl.298" }
%"struct.std::__1::__cxx_atomic_impl.298" = type { %"struct.std::__1::__cxx_atomic_base_impl.299" }
%"struct.std::__1::__cxx_atomic_base_impl.299" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.302" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.415", %"class.std::__1::vector.415", %"class.std::__1::vector.415", %"class.std::__1::vector.422", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.316", %"class.std::__1::vector.317", %"class.std::__1::vector.324", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.316" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.319" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.std::__1::unique_ptr.326"*, %"class.std::__1::unique_ptr.326"*, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::unique_ptr.326" = type opaque
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::unique_ptr.326"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.332", %"class.v8::internal::Worklist.334", %"class.v8::internal::Worklist.334", %"class.v8::internal::Worklist.334", %"class.v8::internal::Worklist.336", %"class.v8::internal::Worklist.338", %"class.v8::internal::Worklist.340", %"class.v8::internal::Worklist.342", %"class.v8::internal::Worklist.344", %"class.v8::internal::Worklist.346" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.332" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.334" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.336" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.338" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.340" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.342" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.344" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.346" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.348", i8, i64 }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.364" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.316"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.364" = type { %"class.std::__1::__hash_table.365" }
%"class.std::__1::__hash_table.365" = type <{ %"class.std::__1::unique_ptr.366", %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.381", %"class.std::__1::__compressed_pair.384", [4 x i8] }>
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368", %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.369"** }
%"struct.std::__1::__hash_node_base.369" = type { %"struct.std::__1::__hash_node_base.369"* }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.std::__1::__bucket_list_deallocator.371" }
%"class.std::__1::__bucket_list_deallocator.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.369" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.391" }
%"class.std::__1::unordered_map.391" = type { %"class.std::__1::__hash_table.392" }
%"class.std::__1::__hash_table.392" = type <{ %"class.std::__1::unique_ptr.393", %"class.std::__1::__compressed_pair.403", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.411", [4 x i8] }>
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395", %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.396"** }
%"struct.std::__1::__hash_node_base.396" = type { %"struct.std::__1::__hash_node_base.396"* }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.std::__1::__bucket_list_deallocator.398" }
%"class.std::__1::__bucket_list_deallocator.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::__hash_node_base.396" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::vector.415" = type { %"class.std::__1::__vector_base.416" }
%"class.std::__1::__vector_base.416" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.422" = type { %"class.std::__1::__vector_base.423" }
%"class.std::__1::__vector_base.423" = type { %"struct.std::__1::pair.424"*, %"struct.std::__1::pair.424"*, %"class.std::__1::__compressed_pair.425" }
%"struct.std::__1::pair.424" = type opaque
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"struct.std::__1::pair.424"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.430", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.415"], [3 x %"class.std::__1::vector.415"], i8, %"struct.std::__1::atomic.287", [6 x i8], %"class.std::__1::vector.415", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.440"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.415", %"class.std::__1::vector.415", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.440" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.465", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.458"], %"class.std::__1::unique_ptr.430" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.497", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.501", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.506" }
%"struct.std::__1::atomic.497" = type { %"struct.std::__1::__atomic_base.498" }
%"struct.std::__1::__atomic_base.498" = type { %"struct.std::__1::__cxx_atomic_impl.499" }
%"struct.std::__1::__cxx_atomic_impl.499" = type { %"struct.std::__1::__cxx_atomic_base_impl.500" }
%"struct.std::__1::__cxx_atomic_base_impl.500" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.506" = type { %"class.std::__1::__hash_table.507" }
%"class.std::__1::__hash_table.507" = type <{ %"class.std::__1::unique_ptr.508", %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.526", [4 x i8] }>
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510", %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::__hash_node_base.511"** }
%"struct.std::__1::__hash_node_base.511" = type { %"struct.std::__1::__hash_node_base.511"* }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.std::__1::__bucket_list_deallocator.513" }
%"class.std::__1::__bucket_list_deallocator.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::__hash_node_base.511" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.430", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.287", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.536", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.536" = type { %"class.std::__1::__hash_table.537" }
%"class.std::__1::__hash_table.537" = type <{ %"class.std::__1::unique_ptr.538", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.556", [4 x i8] }>
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540", %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.541"** }
%"struct.std::__1::__hash_node_base.541" = type { %"struct.std::__1::__hash_node_base.541"* }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.std::__1::__bucket_list_deallocator.543" }
%"class.std::__1::__bucket_list_deallocator.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base.541" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.572" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.615" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.616", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.616" = type { %"struct.std::__1::__atomic_base.617" }
%"struct.std::__1::__atomic_base.617" = type { %"struct.std::__1::__cxx_atomic_impl.618" }
%"struct.std::__1::__cxx_atomic_impl.618" = type { %"struct.std::__1::__cxx_atomic_base_impl.619" }
%"struct.std::__1::__cxx_atomic_base_impl.619" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.620" = type { %"class.std::__1::__hash_table.621" }
%"class.std::__1::__hash_table.621" = type <{ %"class.std::__1::unique_ptr.622", %"class.std::__1::__compressed_pair.632", %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.640", [4 x i8] }>
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624", %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.625"** }
%"struct.std::__1::__hash_node_base.625" = type { %"struct.std::__1::__hash_node_base.625"* }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.std::__1::__bucket_list_deallocator.627" }
%"class.std::__1::__bucket_list_deallocator.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::__hash_node_base.625" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.658", %"class.std::__1::vector.658" }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.465" = type { %"class.std::__1::__hash_table.466" }
%"class.std::__1::__hash_table.466" = type <{ %"class.std::__1::unique_ptr.467", %"class.std::__1::__compressed_pair.477", %"class.std::__1::__compressed_pair.482", %"class.std::__1::__compressed_pair.486", [4 x i8] }>
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469", %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__hash_node_base.470"** }
%"struct.std::__1::__hash_node_base.470" = type { %"struct.std::__1::__hash_node_base.470"* }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.std::__1::__bucket_list_deallocator.472" }
%"class.std::__1::__bucket_list_deallocator.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.std::__1::__hash_node_base.470" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map.671" = type { %"class.std::__1::__hash_table.672" }
%"class.std::__1::__hash_table.672" = type <{ %"class.std::__1::unique_ptr.673", %"class.std::__1::__compressed_pair.683", %"class.std::__1::__compressed_pair.688", %"class.std::__1::__compressed_pair.691", [4 x i8] }>
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675", %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"struct.std::__1::__hash_node_base.676"** }
%"struct.std::__1::__hash_node_base.676" = type { %"struct.std::__1::__hash_node_base.676"* }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.std::__1::__bucket_list_deallocator.678" }
%"class.std::__1::__bucket_list_deallocator.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"struct.std::__1::__hash_node_base.676" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map.721" = type { %"class.std::__1::__hash_table.722" }
%"class.std::__1::__hash_table.722" = type <{ %"class.std::__1::unique_ptr.723", %"class.std::__1::__compressed_pair.733", %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.743", [4 x i8] }>
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725", %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"struct.std::__1::__hash_node_base.726"** }
%"struct.std::__1::__hash_node_base.726" = type { %"struct.std::__1::__hash_node_base.726"* }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.std::__1::__bucket_list_deallocator.728" }
%"class.std::__1::__bucket_list_deallocator.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"struct.std::__1::__hash_node_base.726" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::vector.747" = type { %"class.std::__1::__vector_base.748" }
%"class.std::__1::__vector_base.748" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.749" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.658" }
%"class.std::__1::shared_ptr.760" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.274", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.761", %"class.std::__1::unique_ptr.775" }
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.764" }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"class.std::__1::unique_ptr.766"*, %"class.std::__1::unique_ptr.766"*, %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.1382" }
%"class.std::__1::__compressed_pair.1382" = type { %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.std::__1::unique_ptr.766"* }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.784", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.784" = type { %"struct.std::__1::__atomic_base.785" }
%"struct.std::__1::__atomic_base.785" = type { %"struct.std::__1::__cxx_atomic_impl.786" }
%"struct.std::__1::__cxx_atomic_impl.786" = type { %"struct.std::__1::__cxx_atomic_base_impl.787" }
%"struct.std::__1::__cxx_atomic_base_impl.787" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.791" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.792", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.792" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.793", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"class.std::__1::unique_ptr.795"*, %"class.std::__1::unique_ptr.795"*, %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::unique_ptr.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.std::__1::unique_ptr.795"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.801", %"class.std::__1::unique_ptr.807", %"struct.std::__1::atomic.287", %"class.std::__1::unique_ptr.813", %"class.std::__1::unique_ptr.819", %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.831", %"class.std::__1::unique_ptr.837", %"class.std::__1::set.843", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.843" = type { %"class.std::__1::__tree.844" }
%"class.std::__1::__tree.844" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.845", %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.852" }
%"class.v8::internal::TaggedImpl.852" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.851" }
%"class.v8::internal::TaggedImpl.851" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.853", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash.856", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash.856" = type { i8 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.860", %"class.v8::internal::DetachableVector.861", %"class.v8::internal::DetachableVector.860", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.861" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.860" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.862", %"class.std::__1::vector.868", %"class.std::__1::unique_ptr.875", %"class.std::__1::vector.882", %"class.std::__1::unique_ptr.889", i64, %"class.std::__1::vector.895", %"class.std::__1::vector.903", %"class.std::__1::vector.911", i8, i8, i32 }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.868" = type { %"class.std::__1::__vector_base.869" }
%"class.std::__1::__vector_base.869" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.870" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::GlobalHandles::NodeSpace.878"* }
%"class.v8::internal::GlobalHandles::NodeSpace.878" = type opaque
%"class.std::__1::vector.882" = type { %"class.std::__1::__vector_base.883" }
%"class.std::__1::__vector_base.883" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.884" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.895" = type { %"class.std::__1::__vector_base.896" }
%"class.std::__1::__vector_base.896" = type { %"struct.std::__1::pair.897"*, %"struct.std::__1::pair.897"*, %"class.std::__1::__compressed_pair.898" }
%"struct.std::__1::pair.897" = type opaque
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::pair.897"* }
%"class.std::__1::vector.903" = type { %"class.std::__1::__vector_base.904" }
%"class.std::__1::__vector_base.904" = type { %"struct.std::__1::pair.905"*, %"struct.std::__1::pair.905"*, %"class.std::__1::__compressed_pair.906" }
%"struct.std::__1::pair.905" = type opaque
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"struct.std::__1::pair.905"* }
%"class.std::__1::vector.911" = type { %"class.std::__1::__vector_base.912" }
%"class.std::__1::__vector_base.912" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.913" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.918", %"class.std::__1::vector.925" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.932" }
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.925" = type { %"class.std::__1::__vector_base.926" }
%"class.std::__1::__vector_base.926" = type { i32*, i32*, %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { i32* }
%"class.v8::internal::DateCache" = type { i32 (...)**, %"class.v8::internal::Smi", [32 x %"struct.v8::internal::DateCache::DST"], i32, %"struct.v8::internal::DateCache::DST"*, %"struct.v8::internal::DateCache::DST"*, i32, i8, i32, i32, i32, i32, i8*, i8*, %"class.v8::base::TimezoneCache"* }
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"struct.v8::internal::DateCache::DST" = type { i32, i32, i32, i32 }
%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%"struct.std::__1::atomic.938" = type { %"struct.std::__1::__atomic_base.939" }
%"struct.std::__1::__atomic_base.939" = type { %"struct.std::__1::__cxx_atomic_impl.940" }
%"struct.std::__1::__cxx_atomic_impl.940" = type { %"struct.std::__1::__cxx_atomic_base_impl.941" }
%"struct.std::__1::__cxx_atomic_base_impl.941" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.948" = type { %"struct.std::__1::__atomic_base.949" }
%"struct.std::__1::__atomic_base.949" = type { %"struct.std::__1::__cxx_atomic_impl.950" }
%"struct.std::__1::__cxx_atomic_impl.950" = type { %"struct.std::__1::__cxx_atomic_base_impl.951" }
%"struct.std::__1::__cxx_atomic_base_impl.951" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.955 }
%union.anon.955 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.959" = type { %"class.std::__1::__hash_table.960" }
%"class.std::__1::__hash_table.960" = type <{ %"class.std::__1::unique_ptr.961", %"class.std::__1::__compressed_pair.971", %"class.std::__1::__compressed_pair.976", %"class.std::__1::__compressed_pair.979", [4 x i8] }>
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963", %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.std::__1::__hash_node_base.964"** }
%"struct.std::__1::__hash_node_base.964" = type { %"struct.std::__1::__hash_node_base.964"* }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.std::__1::__bucket_list_deallocator.966" }
%"class.std::__1::__bucket_list_deallocator.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::__hash_node_base.964" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__cxx_atomic_impl.289" }
%"struct.std::__1::__cxx_atomic_impl.289" = type { %"struct.std::__1::__cxx_atomic_base_impl.290" }
%"struct.std::__1::__cxx_atomic_base_impl.290" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.985", %"class.v8::internal::Handle.991", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.992", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.991" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.992" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.993", %"class.std::__1::vector.999", %"class.std::__1::unique_ptr.1007", %"class.std::__1::unique_ptr.1013", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1019", %"class.std::__1::vector.1025", %"struct.std::__1::pair.1033" }
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.999" = type { %"class.std::__1::__vector_base.1000" }
%"class.std::__1::__vector_base.1000" = type { %"class.std::__1::unique_ptr.1001"*, %"class.std::__1::unique_ptr.1001"*, %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::unique_ptr.1001" = type opaque
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.std::__1::unique_ptr.1001"* }
%"class.std::__1::unique_ptr.1007" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.1025" = type { %"class.std::__1::__vector_base.1026" }
%"class.std::__1::__vector_base.1026" = type { %"struct.std::__1::pair.1027"*, %"struct.std::__1::pair.1027"*, %"class.std::__1::__compressed_pair.1028" }
%"struct.std::__1::pair.1027" = type opaque
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"struct.std::__1::pair.1027"* }
%"struct.std::__1::pair.1033" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.123"*, i16, i8*)*, i8* }
%"class.v8::Local.123" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1037", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1037" = type { %"class.std::__1::__hash_table.1038" }
%"class.std::__1::__hash_table.1038" = type <{ %"class.std::__1::unique_ptr.1039", %"class.std::__1::__compressed_pair.1049", %"class.std::__1::__compressed_pair.1054", %"class.std::__1::__compressed_pair.1058", [4 x i8] }>
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041", %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"struct.std::__1::__hash_node_base.1042"** }
%"struct.std::__1::__hash_node_base.1042" = type { %"struct.std::__1::__hash_node_base.1042"* }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.std::__1::__bucket_list_deallocator.1044" }
%"class.std::__1::__bucket_list_deallocator.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"struct.std::__1::__hash_node_base.1042" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1066"**, %"struct.std::__1::pair.1066"**, %"struct.std::__1::pair.1066"**, %"class.std::__1::__compressed_pair.1067" }
%"struct.std::__1::pair.1066" = type opaque
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.std::__1::pair.1066"** }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1077" = type { %"class.std::__1::__vector_base.1078" }
%"class.std::__1::__vector_base.1078" = type { %"class.v8::internal::Handle.1079"*, %"class.v8::internal::Handle.1079"*, %"class.std::__1::__compressed_pair.1080" }
%"class.v8::internal::Handle.1079" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.v8::internal::Handle.1079"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.1085" }
%"class.v8::internal::PointerToIndexHashMap.1085" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.943", i32, %"class.v8::Local.123" }
%"class.v8::Local.943" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1092" = type { %"class.std::__1::__vector_base.1093" }
%"class.std::__1::__vector_base.1093" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1099" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1100" = type { %"class.std::__1::__hash_table.1101" }
%"class.std::__1::__hash_table.1101" = type <{ %"class.std::__1::unique_ptr.1102", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1117", %"class.std::__1::__compressed_pair.1120", [4 x i8] }>
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104", %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1105"** }
%"struct.std::__1::__hash_node_base.1105" = type { %"struct.std::__1::__hash_node_base.1105"* }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.std::__1::__bucket_list_deallocator.1107" }
%"class.std::__1::__bucket_list_deallocator.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"struct.std::__1::__hash_node_base.1105" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.658" = type { %"class.std::__1::__vector_base.659" }
%"class.std::__1::__vector_base.659" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.295" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1124", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1153", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1154", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1124" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1149, %union.anon.1151, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1149 = type { i64 }
%union.anon.1151 = type { i64 }
%"class.std::__1::weak_ptr.1153" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1154" = type { %"class.v8::PersistentBase.1155" }
%"class.v8::PersistentBase.1155" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1125", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1125" = type { %"class.std::__1::__hash_table.1126" }
%"class.std::__1::__hash_table.1126" = type <{ %"class.std::__1::unique_ptr.1127", %"class.std::__1::__compressed_pair.1137", %"class.std::__1::__compressed_pair.1142", %"class.std::__1::__compressed_pair.1145", [4 x i8] }>
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129", %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"struct.std::__1::__hash_node_base.1130"** }
%"struct.std::__1::__hash_node_base.1130" = type { %"struct.std::__1::__hash_node_base.1130"* }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.std::__1::__bucket_list_deallocator.1132" }
%"class.std::__1::__bucket_list_deallocator.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"struct.std::__1::__hash_node_base.1130" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1156" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1185", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.944", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.944" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1202" }
%"class.std::__1::unordered_map.1202" = type { %"class.std::__1::__hash_table.1203" }
%"class.std::__1::__hash_table.1203" = type <{ %"class.std::__1::unique_ptr.1204", %"class.std::__1::__compressed_pair.1214", %"class.std::__1::__compressed_pair.1219", %"class.std::__1::__compressed_pair.1222", [4 x i8] }>
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206", %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"struct.std::__1::__hash_node_base.1207"** }
%"struct.std::__1::__hash_node_base.1207" = type { %"struct.std::__1::__hash_node_base.1207"* }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.std::__1::__bucket_list_deallocator.1209" }
%"class.std::__1::__bucket_list_deallocator.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"struct.std::__1::__hash_node_base.1207" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::atomic.1228" = type { %"struct.std::__1::__atomic_base.1229" }
%"struct.std::__1::__atomic_base.1229" = type { %"struct.std::__1::__cxx_atomic_impl.1230" }
%"struct.std::__1::__cxx_atomic_impl.1230" = type { %"struct.std::__1::__cxx_atomic_base_impl.1231" }
%"struct.std::__1::__cxx_atomic_base_impl.1231" = type { %"class.std::__1::vector.1232"* }
%"class.std::__1::vector.1232" = type { %"class.std::__1::__vector_base.1233" }
%"class.std::__1::__vector_base.1233" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1234" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::compiler::JSHeapBroker" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::base::Optional.1239", %"class.v8::internal::compiler::RefsMap"*, %"class.v8::internal::RootIndexMap", %"class.v8::internal::ZoneUnorderedSet", i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::unique_ptr.1171", %"class.v8::internal::LocalIsolate"*, %"class.std::__1::unique_ptr.853", i32, [4 x i8], %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::ZoneUnorderedMap.1267", %"class.v8::internal::ZoneUnorderedMap.1290", %"class.v8::internal::ZoneUnorderedMap.1313", %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneMultimap", i32, [4 x i8] }>
%"class.v8::base::Optional.1239" = type { %"class.v8::base::internal::OptionalBase.1240" }
%"class.v8::base::internal::OptionalBase.1240" = type { %"struct.v8::base::internal::OptionalStorage.1241" }
%"struct.v8::base::internal::OptionalStorage.1241" = type { %"struct.v8::base::internal::OptionalStorageBase.1242" }
%"struct.v8::base::internal::OptionalStorageBase.1242" = type { i8, %union.anon.1243 }
%union.anon.1243 = type { %"class.v8::internal::compiler::NativeContextRef" }
%"class.v8::internal::compiler::NativeContextRef" = type { %"class.v8::internal::compiler::ContextRef" }
%"class.v8::internal::compiler::ContextRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::HeapObjectRef" = type { %"class.v8::internal::compiler::ObjectRef" }
%"class.v8::internal::compiler::ObjectRef" = type { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::ObjectData" = type opaque
%"class.v8::internal::compiler::RefsMap" = type { %"class.v8::base::TemplateHashMapImpl.1244" }
%"class.v8::base::TemplateHashMapImpl.1244" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1246"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1246" = type opaque
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.1247" }
%"class.std::__1::unordered_set.1247" = type { %"class.std::__1::__hash_table.1248" }
%"class.std::__1::__hash_table.1248" = type <{ %"class.std::__1::unique_ptr.1249", %"class.std::__1::__compressed_pair.1258", %"class.std::__1::__compressed_pair.1262", %"class.std::__1::__compressed_pair.1264", [4 x i8] }>
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251", %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"struct.std::__1::__hash_node_base.1252"** }
%"struct.std::__1::__hash_node_base.1252" = type { %"struct.std::__1::__hash_node_base.1252"* }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.std::__1::__bucket_list_deallocator.1254" }
%"class.std::__1::__bucket_list_deallocator.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.v8::internal::ZoneAllocator.1257" }
%"class.v8::internal::ZoneAllocator.1257" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.1259", %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"struct.std::__1::__hash_node_base.1252" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.v8::internal::ZoneAllocator.1261" }
%"class.v8::internal::ZoneAllocator.1261" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::ZoneUnorderedMap.1267" = type { %"class.std::__1::unordered_map.1268" }
%"class.std::__1::unordered_map.1268" = type { %"class.std::__1::__hash_table.1269" }
%"class.std::__1::__hash_table.1269" = type <{ %"class.std::__1::unique_ptr.1270", %"class.std::__1::__compressed_pair.1279", %"class.std::__1::__compressed_pair.1283", %"class.std::__1::__compressed_pair.1286", [4 x i8] }>
%"class.std::__1::unique_ptr.1270" = type { %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272", %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"struct.std::__1::__hash_node_base.1273"** }
%"struct.std::__1::__hash_node_base.1273" = type { %"struct.std::__1::__hash_node_base.1273"* }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"class.std::__1::__bucket_list_deallocator.1275" }
%"class.std::__1::__bucket_list_deallocator.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"class.v8::internal::ZoneAllocator.1278" }
%"class.v8::internal::ZoneAllocator.1278" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.1280", %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"struct.std::__1::__hash_node_base.1273" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.v8::internal::ZoneAllocator.1282" }
%"class.v8::internal::ZoneAllocator.1282" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::ZoneUnorderedMap.1290" = type { %"class.std::__1::unordered_map.1291" }
%"class.std::__1::unordered_map.1291" = type { %"class.std::__1::__hash_table.1292" }
%"class.std::__1::__hash_table.1292" = type <{ %"class.std::__1::unique_ptr.1293", %"class.std::__1::__compressed_pair.1302", %"class.std::__1::__compressed_pair.1306", %"class.std::__1::__compressed_pair.1309", [4 x i8] }>
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295", %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"struct.std::__1::__hash_node_base.1296"** }
%"struct.std::__1::__hash_node_base.1296" = type { %"struct.std::__1::__hash_node_base.1296"* }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"class.std::__1::__bucket_list_deallocator.1298" }
%"class.std::__1::__bucket_list_deallocator.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"class.v8::internal::ZoneAllocator.1301" }
%"class.v8::internal::ZoneAllocator.1301" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303", %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"struct.std::__1::__hash_node_base.1296" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.v8::internal::ZoneAllocator.1305" }
%"class.v8::internal::ZoneAllocator.1305" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::ZoneUnorderedMap.1313" = type { %"class.std::__1::unordered_map.1314" }
%"class.std::__1::unordered_map.1314" = type { %"class.std::__1::__hash_table.1315" }
%"class.std::__1::__hash_table.1315" = type <{ %"class.std::__1::unique_ptr.1316", %"class.std::__1::__compressed_pair.1325", %"class.std::__1::__compressed_pair.1329", %"class.std::__1::__compressed_pair.1332", [4 x i8] }>
%"class.std::__1::unique_ptr.1316" = type { %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318", %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.std::__1::__hash_node_base.1319"** }
%"struct.std::__1::__hash_node_base.1319" = type { %"struct.std::__1::__hash_node_base.1319"* }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.std::__1::__bucket_list_deallocator.1321" }
%"class.std::__1::__bucket_list_deallocator.1321" = type { %"class.std::__1::__compressed_pair.1322" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.v8::internal::ZoneAllocator.1324" }
%"class.v8::internal::ZoneAllocator.1324" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326", %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"struct.std::__1::__hash_node_base.1319" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.v8::internal::ZoneAllocator.1328" }
%"class.v8::internal::ZoneAllocator.1328" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.v8::internal::ZoneVector.1336" = type { %"class.std::__1::vector.1337" }
%"class.std::__1::vector.1337" = type { %"class.std::__1::__vector_base.1338" }
%"class.std::__1::__vector_base.1338" = type { %"class.v8::internal::compiler::ObjectData"**, %"class.v8::internal::compiler::ObjectData"**, %"class.std::__1::__compressed_pair.1339" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.1340", %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1340" = type { %"class.v8::internal::compiler::ObjectData"** }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.v8::internal::ZoneAllocator.1342" }
%"class.v8::internal::ZoneAllocator.1342" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMultimap" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1343" }
%"class.std::__1::__tree.1343" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1344", %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.v8::internal::ZoneAllocator.1346" }
%"class.v8::internal::ZoneAllocator.1346" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::Optional.1395" = type { %"class.v8::base::internal::OptionalBase.1396" }
%"class.v8::base::internal::OptionalBase.1396" = type { %"struct.v8::base::internal::OptionalStorage.1397" }
%"struct.v8::base::internal::OptionalStorage.1397" = type { %"struct.v8::base::internal::OptionalStorageBase.1398" }
%"struct.v8::base::internal::OptionalStorageBase.1398" = type { i8, %union.anon.1399 }
%union.anon.1399 = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"struct.v8::internal::compiler::BinopMatcher" = type { %"struct.v8::internal::compiler::NodeMatcher", %"struct.v8::internal::compiler::HeapObjectMatcherImpl", %"struct.v8::internal::compiler::HeapObjectMatcherImpl" }
%"struct.v8::internal::compiler::NodeMatcher" = type { %"class.v8::internal::compiler::Node"* }
%"struct.v8::internal::compiler::HeapObjectMatcherImpl" = type { %"struct.v8::internal::compiler::ValueMatcher.base", [7 x i8] }
%"struct.v8::internal::compiler::ValueMatcher.base" = type <{ %"struct.v8::internal::compiler::NodeMatcher", %"class.v8::internal::Handle.1079", i8 }>
%"struct.v8::internal::compiler::BinopMatcher.1381" = type { %"struct.v8::internal::compiler::NodeMatcher", %"struct.v8::internal::compiler::IntMatcher", %"struct.v8::internal::compiler::IntMatcher" }
%"struct.v8::internal::compiler::IntMatcher" = type { %"struct.v8::internal::compiler::ValueMatcher.base.1367", [3 x i8] }
%"struct.v8::internal::compiler::ValueMatcher.base.1367" = type <{ %"struct.v8::internal::compiler::NodeMatcher", i32, i8 }>
%"class.v8::internal::Factory" = type { i8 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.v8::internal::Brief" = type { i64 }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }

$_ZN2v88internal8compiler12BinopMatcherINS1_21HeapObjectMatcherImplILNS1_8IrOpcode5ValueE30EEES6_EC2EPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE = comdat any

$_ZNK2v88internal8compiler25SimplifiedOperatorReducer12reducer_nameEv = comdat any

$_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE = comdat any

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZN2v88internal8compiler12BinopMatcherINS1_21HeapObjectMatcherImplILNS1_8IrOpcode5ValueE30EEES6_E10SwapInputsEv = comdat any

$_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_E10SwapInputsEv = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZTVN2v88internal8compiler25SimplifiedOperatorReducerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*)* @_ZN2v88internal8compiler25SimplifiedOperatorReducerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*)* @_ZN2v88internal8compiler25SimplifiedOperatorReducerD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*)* @_ZNK2v88internal8compiler25SimplifiedOperatorReducer12reducer_nameEv to i8*), i8* bitcast (void (%"class.v8::internal::compiler::Reducer"*)* @_ZN2v88internal8compiler7Reducer8FinalizeEv to i8*), i8* bitcast (%"class.v8::internal::compiler::Node"* (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler25SimplifiedOperatorReducer6ReduceEPNS1_4NodeE to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"SimplifiedOperatorReducer\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"HasResolvedValue()\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"Missing \00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"ObjectData for \00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"../../v8/src/compiler/js-heap-broker.h\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [15 x i8] c"IsHeapObject()\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1

@_ZN2v88internal8compiler25SimplifiedOperatorReducerC1EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS1_12JSHeapBrokerE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSHeapBroker"*), void (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSHeapBroker"*)* @_ZN2v88internal8compiler25SimplifiedOperatorReducerC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS1_12JSHeapBrokerE
@_ZN2v88internal8compiler25SimplifiedOperatorReducerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*), void (%"class.v8::internal::compiler::SimplifiedOperatorReducer"*)* @_ZN2v88internal8compiler25SimplifiedOperatorReducerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler25SimplifiedOperatorReducerC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS1_12JSHeapBrokerE(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSHeapBroker"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler25SimplifiedOperatorReducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::JSGraph"* %2, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::JSHeapBroker"* %3, %"class.v8::internal::compiler::JSHeapBroker"** %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal8compiler25SimplifiedOperatorReducerD2Ev(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler25SimplifiedOperatorReducerD0Ev(%"class.v8::internal::compiler::SimplifiedOperatorReducer"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler25SimplifiedOperatorReducer6ReduceEPNS1_4NodeE(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* readonly, %"class.v8::internal::compiler::Node"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::base::Optional.1395", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = alloca %"struct.v8::internal::compiler::BinopMatcher", align 8
  %6 = alloca %"struct.v8::internal::compiler::BinopMatcher.1381", align 8
  %7 = alloca %"struct.v8::internal::compiler::BinopMatcher.1381", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 2
  %9 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 2
  %13 = load i16, i16* %12, align 8
  switch i16 %13, label %1992 [
    i16 201, label %14
    i16 79, label %118
    i16 78, label %214
    i16 76, label %322
    i16 71, label %413
    i16 72, label %413
    i16 69, label %504
    i16 83, label %504
    i16 64, label %687
    i16 66, label %687
    i16 68, label %868
    i16 74, label %1049
    i16 82, label %1119
    i16 102, label %1300
    i16 106, label %1387
    i16 105, label %1387
    i16 104, label %1387
    i16 208, label %1445
    i16 212, label %1552
    i16 207, label %1610
    i16 215, label %1647
    i16 260, label %1724
    i16 156, label %1748
    i16 118, label %1818
    i16 86, label %1830
  ]

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 251658240
  %18 = icmp eq i32 %17, 251658240
  %19 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %20 = add i64 %19, 32
  br i1 %18, label %21, label %25

21:                                               ; preds = %14
  %22 = inttoptr i64 %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 16
  br label %25

25:                                               ; preds = %14, %21
  %26 = phi i64 [ %24, %21 ], [ %20, %14 ]
  %27 = inttoptr i64 %26 to %"class.v8::internal::compiler::Node"**
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %29 = ptrtoint %"class.v8::internal::compiler::Node"* %28 to i64
  br label %30

30:                                               ; preds = %75, %25
  %31 = phi i64 [ %29, %25 ], [ %77, %75 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::compiler::Node"*
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 0
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %34, i64 0, i32 2
  %36 = load i16, i16* %35, align 8
  switch i16 %36, label %98 [
    i16 59, label %37
    i16 58, label %55
    i16 30, label %78
  ]

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %34, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 251658240
  %46 = icmp eq i32 %45, 251658240
  %47 = add i64 %31, 32
  br i1 %46, label %48, label %52

48:                                               ; preds = %42
  %49 = inttoptr i64 %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 16
  br label %52

52:                                               ; preds = %48, %42
  %53 = phi i64 [ %51, %48 ], [ %47, %42 ]
  %54 = inttoptr i64 %53 to i64*
  br label %75

55:                                               ; preds = %30
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %34, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, 1
  br i1 %58, label %60, label %59, !prof !2

59:                                               ; preds = %55
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 251658240
  %64 = icmp eq i32 %63, 251658240
  %65 = add i64 %31, 32
  br i1 %64, label %66, label %70

66:                                               ; preds = %60
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 16
  br label %70

70:                                               ; preds = %66, %60
  %71 = phi i64 [ %69, %66 ], [ %65, %60 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 1
  %74 = bitcast %"class.v8::internal::compiler::Node"** %73 to i64*
  br label %75

75:                                               ; preds = %70, %52
  %76 = phi i64* [ %74, %70 ], [ %54, %52 ]
  %77 = load i64, i64* %76, align 8
  br label %30

78:                                               ; preds = %30
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %34, i64 1
  %80 = bitcast %"class.v8::internal::compiler::Operator"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %83 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %83, i64 0, i32 1
  %85 = bitcast %"class.v8::internal::Isolate"** %84 to %"class.v8::internal::Factory"**
  %86 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %86, i64 184
  %88 = ptrtoint %"class.v8::internal::Factory"* %87 to i64
  %89 = icmp eq i64 %81, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %78
  %91 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %83) #14
  br label %1992

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %86, i64 192
  %94 = ptrtoint %"class.v8::internal::Factory"* %93 to i64
  %95 = icmp eq i64 %81, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %83) #14
  br label %1992

98:                                               ; preds = %30, %92
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %28, i64 0, i32 0
  %100 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %100, i64 0, i32 2
  %102 = load i16, i16* %101, align 8
  %103 = icmp eq i16 %102, 201
  br i1 %103, label %104, label %1992

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %28, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 251658240
  %108 = icmp eq i32 %107, 251658240
  %109 = add i64 %29, 32
  br i1 %108, label %110, label %114

110:                                              ; preds = %104
  %111 = inttoptr i64 %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 16
  br label %114

114:                                              ; preds = %104, %110
  %115 = phi i64 [ %113, %110 ], [ %109, %104 ]
  %116 = inttoptr i64 %115 to %"class.v8::internal::compiler::Node"**
  %117 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, align 8
  br label %1992

118:                                              ; preds = %2
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 251658240
  %122 = icmp eq i32 %121, 251658240
  %123 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %124 = add i64 %123, 32
  br i1 %122, label %125, label %129

125:                                              ; preds = %118
  %126 = inttoptr i64 %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 16
  br label %129

129:                                              ; preds = %118, %125
  %130 = phi i64 [ %128, %125 ], [ %124, %118 ]
  %131 = inttoptr i64 %130 to %"class.v8::internal::compiler::Node"**
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %131, align 8
  %133 = ptrtoint %"class.v8::internal::compiler::Node"* %132 to i64
  br label %134

134:                                              ; preds = %179, %129
  %135 = phi i64 [ %133, %129 ], [ %181, %179 ]
  %136 = inttoptr i64 %135 to %"class.v8::internal::compiler::Node"*
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %136, i64 0, i32 0
  %138 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %138, i64 0, i32 2
  %140 = load i16, i16* %139, align 8
  switch i16 %140, label %194 [
    i16 59, label %141
    i16 58, label %159
    i16 22, label %182
  ]

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %138, i64 0, i32 5
  %143 = load i32, i32* %142, align 4
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %146, label %145, !prof !2

145:                                              ; preds = %141
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %136, i64 0, i32 3
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 251658240
  %150 = icmp eq i32 %149, 251658240
  %151 = add i64 %135, 32
  br i1 %150, label %152, label %156

152:                                              ; preds = %146
  %153 = inttoptr i64 %151 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, 16
  br label %156

156:                                              ; preds = %152, %146
  %157 = phi i64 [ %155, %152 ], [ %151, %146 ]
  %158 = inttoptr i64 %157 to i64*
  br label %179

159:                                              ; preds = %134
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %138, i64 0, i32 5
  %161 = load i32, i32* %160, align 4
  %162 = icmp sgt i32 %161, 1
  br i1 %162, label %164, label %163, !prof !2

163:                                              ; preds = %159
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %136, i64 0, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, 251658240
  %168 = icmp eq i32 %167, 251658240
  %169 = add i64 %135, 32
  br i1 %168, label %170, label %174

170:                                              ; preds = %164
  %171 = inttoptr i64 %169 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, 16
  br label %174

174:                                              ; preds = %170, %164
  %175 = phi i64 [ %173, %170 ], [ %169, %164 ]
  %176 = inttoptr i64 %175 to %"class.v8::internal::compiler::Node"**
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, i64 1
  %178 = bitcast %"class.v8::internal::compiler::Node"** %177 to i64*
  br label %179

179:                                              ; preds = %174, %156
  %180 = phi i64* [ %178, %174 ], [ %158, %156 ]
  %181 = load i64, i64* %180, align 8
  br label %134

182:                                              ; preds = %134
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %138, i64 0, i32 12
  %184 = bitcast [4 x i8]* %183 to i32*
  %185 = load i32, i32* %184, align 4
  switch i32 %185, label %194 [
    i32 0, label %186
    i32 1, label %190
  ]

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %188 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %187, align 8
  %189 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %188) #14
  br label %1992

190:                                              ; preds = %182
  %191 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %192 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %191, align 8
  %193 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %192) #14
  br label %1992

194:                                              ; preds = %134, %182
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %132, i64 0, i32 0
  %196 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %195, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %196, i64 0, i32 2
  %198 = load i16, i16* %197, align 8
  %199 = icmp eq i16 %198, 78
  br i1 %199, label %200, label %1992

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %132, i64 0, i32 3
  %202 = load i32, i32* %201, align 4
  %203 = and i32 %202, 251658240
  %204 = icmp eq i32 %203, 251658240
  %205 = add i64 %133, 32
  br i1 %204, label %206, label %210

206:                                              ; preds = %200
  %207 = inttoptr i64 %205 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = add i64 %208, 16
  br label %210

210:                                              ; preds = %200, %206
  %211 = phi i64 [ %209, %206 ], [ %205, %200 ]
  %212 = inttoptr i64 %211 to %"class.v8::internal::compiler::Node"**
  %213 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, align 8
  br label %1992

214:                                              ; preds = %2
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = and i32 %216, 251658240
  %218 = icmp eq i32 %217, 251658240
  %219 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %220 = add i64 %219, 32
  br i1 %218, label %221, label %225

221:                                              ; preds = %214
  %222 = inttoptr i64 %220 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = add i64 %223, 16
  br label %225

225:                                              ; preds = %214, %221
  %226 = phi i64 [ %224, %221 ], [ %220, %214 ]
  %227 = inttoptr i64 %226 to %"class.v8::internal::compiler::Node"**
  %228 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %227, align 8
  %229 = ptrtoint %"class.v8::internal::compiler::Node"* %228 to i64
  br label %230

230:                                              ; preds = %275, %225
  %231 = phi i64 [ %229, %225 ], [ %277, %275 ]
  %232 = inttoptr i64 %231 to %"class.v8::internal::compiler::Node"*
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %232, i64 0, i32 0
  %234 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %233, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %234, i64 0, i32 2
  %236 = load i16, i16* %235, align 8
  switch i16 %236, label %302 [
    i16 59, label %237
    i16 58, label %255
    i16 30, label %278
  ]

237:                                              ; preds = %230
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %234, i64 0, i32 5
  %239 = load i32, i32* %238, align 4
  %240 = icmp sgt i32 %239, 0
  br i1 %240, label %242, label %241, !prof !2

241:                                              ; preds = %237
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %232, i64 0, i32 3
  %244 = load i32, i32* %243, align 4
  %245 = and i32 %244, 251658240
  %246 = icmp eq i32 %245, 251658240
  %247 = add i64 %231, 32
  br i1 %246, label %248, label %252

248:                                              ; preds = %242
  %249 = inttoptr i64 %247 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = add i64 %250, 16
  br label %252

252:                                              ; preds = %248, %242
  %253 = phi i64 [ %251, %248 ], [ %247, %242 ]
  %254 = inttoptr i64 %253 to i64*
  br label %275

255:                                              ; preds = %230
  %256 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %234, i64 0, i32 5
  %257 = load i32, i32* %256, align 4
  %258 = icmp sgt i32 %257, 1
  br i1 %258, label %260, label %259, !prof !2

259:                                              ; preds = %255
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %232, i64 0, i32 3
  %262 = load i32, i32* %261, align 4
  %263 = and i32 %262, 251658240
  %264 = icmp eq i32 %263, 251658240
  %265 = add i64 %231, 32
  br i1 %264, label %266, label %270

266:                                              ; preds = %260
  %267 = inttoptr i64 %265 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, 16
  br label %270

270:                                              ; preds = %266, %260
  %271 = phi i64 [ %269, %266 ], [ %265, %260 ]
  %272 = inttoptr i64 %271 to %"class.v8::internal::compiler::Node"**
  %273 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %272, i64 1
  %274 = bitcast %"class.v8::internal::compiler::Node"** %273 to i64*
  br label %275

275:                                              ; preds = %270, %252
  %276 = phi i64* [ %274, %270 ], [ %254, %252 ]
  %277 = load i64, i64* %276, align 8
  br label %230

278:                                              ; preds = %230
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %234, i64 1
  %280 = bitcast %"class.v8::internal::compiler::Operator"* %279 to i64**
  %281 = load i64*, i64** %280, align 8
  %282 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %282) #14
  %283 = getelementptr inbounds %"class.v8::base::Optional.1395", %"class.v8::base::Optional.1395"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %283) #14
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1395"* nonnull sret %3, %"class.v8::internal::compiler::JSHeapBroker"* %9, i64* %281, i32 3) #14
  %284 = load i8, i8* %283, align 8, !range !3
  %285 = icmp eq i8 %284, 1
  br i1 %285, label %287, label %286, !prof !2

286:                                              ; preds = %278
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #13
  unreachable

287:                                              ; preds = %278
  %288 = getelementptr inbounds %"class.v8::base::Optional.1395", %"class.v8::base::Optional.1395"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %289 = bitcast %"class.v8::internal::compiler::ObjectData"** %288 to <2 x i64>*
  %290 = load <2 x i64>, <2 x i64>* %289, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %283) #14
  store <2 x i64> %290, <2 x i64>* %4, align 16
  %291 = bitcast <2 x i64>* %4 to %"class.v8::internal::compiler::ObjectRef"*
  %292 = call i16 @_ZNK2v88internal8compiler9ObjectRef18TryGetBooleanValueEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %291) #14
  %293 = trunc i16 %292 to i8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %282) #14
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %302, label %295

295:                                              ; preds = %287
  %296 = lshr i16 %292, 8
  %297 = zext i16 %296 to i32
  %298 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %299 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %298, align 8
  %300 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %299, i64 0, i32 0
  %301 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"* %300, i32 %297) #14
  br label %1992

302:                                              ; preds = %230, %287
  %303 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %228, i64 0, i32 0
  %304 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %303, align 8
  %305 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %304, i64 0, i32 2
  %306 = load i16, i16* %305, align 8
  %307 = icmp eq i16 %306, 79
  br i1 %307, label %308, label %1992

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %228, i64 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = and i32 %310, 251658240
  %312 = icmp eq i32 %311, 251658240
  %313 = add i64 %229, 32
  br i1 %312, label %314, label %318

314:                                              ; preds = %308
  %315 = inttoptr i64 %313 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = add i64 %316, 16
  br label %318

318:                                              ; preds = %308, %314
  %319 = phi i64 [ %317, %314 ], [ %313, %308 ]
  %320 = inttoptr i64 %319 to %"class.v8::internal::compiler::Node"**
  %321 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %320, align 8
  br label %1992

322:                                              ; preds = %2
  %323 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %324 = load i32, i32* %323, align 4
  %325 = and i32 %324, 251658240
  %326 = icmp eq i32 %325, 251658240
  %327 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %328 = add i64 %327, 32
  br i1 %326, label %329, label %333

329:                                              ; preds = %322
  %330 = inttoptr i64 %328 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, 16
  br label %333

333:                                              ; preds = %322, %329
  %334 = phi i64 [ %332, %329 ], [ %328, %322 ]
  %335 = inttoptr i64 %334 to %"class.v8::internal::compiler::Node"**
  %336 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, align 8
  %337 = ptrtoint %"class.v8::internal::compiler::Node"* %336 to i64
  br label %338

338:                                              ; preds = %383, %333
  %339 = phi i64 [ %337, %333 ], [ %385, %383 ]
  %340 = inttoptr i64 %339 to %"class.v8::internal::compiler::Node"*
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %340, i64 0, i32 0
  %342 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %341, align 8
  %343 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %342, i64 0, i32 2
  %344 = load i16, i16* %343, align 8
  switch i16 %344, label %393 [
    i16 59, label %345
    i16 58, label %363
    i16 26, label %386
  ]

345:                                              ; preds = %338
  %346 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %342, i64 0, i32 5
  %347 = load i32, i32* %346, align 4
  %348 = icmp sgt i32 %347, 0
  br i1 %348, label %350, label %349, !prof !2

349:                                              ; preds = %345
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %340, i64 0, i32 3
  %352 = load i32, i32* %351, align 4
  %353 = and i32 %352, 251658240
  %354 = icmp eq i32 %353, 251658240
  %355 = add i64 %339, 32
  br i1 %354, label %356, label %360

356:                                              ; preds = %350
  %357 = inttoptr i64 %355 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = add i64 %358, 16
  br label %360

360:                                              ; preds = %356, %350
  %361 = phi i64 [ %359, %356 ], [ %355, %350 ]
  %362 = inttoptr i64 %361 to i64*
  br label %383

363:                                              ; preds = %338
  %364 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %342, i64 0, i32 5
  %365 = load i32, i32* %364, align 4
  %366 = icmp sgt i32 %365, 1
  br i1 %366, label %368, label %367, !prof !2

367:                                              ; preds = %363
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %340, i64 0, i32 3
  %370 = load i32, i32* %369, align 4
  %371 = and i32 %370, 251658240
  %372 = icmp eq i32 %371, 251658240
  %373 = add i64 %339, 32
  br i1 %372, label %374, label %378

374:                                              ; preds = %368
  %375 = inttoptr i64 %373 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = add i64 %376, 16
  br label %378

378:                                              ; preds = %374, %368
  %379 = phi i64 [ %377, %374 ], [ %373, %368 ]
  %380 = inttoptr i64 %379 to %"class.v8::internal::compiler::Node"**
  %381 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %380, i64 1
  %382 = bitcast %"class.v8::internal::compiler::Node"** %381 to i64*
  br label %383

383:                                              ; preds = %378, %360
  %384 = phi i64* [ %382, %378 ], [ %362, %360 ]
  %385 = load i64, i64* %384, align 8
  br label %338

386:                                              ; preds = %338
  %387 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %342, i64 1
  %388 = bitcast %"class.v8::internal::compiler::Operator"* %387 to double*
  %389 = load double, double* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %391 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %390, align 8
  %392 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %391, double %389) #14
  br label %1992

393:                                              ; preds = %338
  %394 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %336, i64 0, i32 0
  %395 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %394, align 8
  %396 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %395, i64 0, i32 2
  %397 = load i16, i16* %396, align 8
  %398 = icmp eq i16 %397, 69
  br i1 %398, label %399, label %1992

399:                                              ; preds = %393
  %400 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %336, i64 0, i32 3
  %401 = load i32, i32* %400, align 4
  %402 = and i32 %401, 251658240
  %403 = icmp eq i32 %402, 251658240
  %404 = add i64 %337, 32
  br i1 %403, label %405, label %409

405:                                              ; preds = %399
  %406 = inttoptr i64 %404 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = add i64 %407, 16
  br label %409

409:                                              ; preds = %399, %405
  %410 = phi i64 [ %408, %405 ], [ %404, %399 ]
  %411 = inttoptr i64 %410 to %"class.v8::internal::compiler::Node"**
  %412 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %411, align 8
  br label %1992

413:                                              ; preds = %2, %2
  %414 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %415 = load i32, i32* %414, align 4
  %416 = and i32 %415, 251658240
  %417 = icmp eq i32 %416, 251658240
  %418 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %419 = add i64 %418, 32
  br i1 %417, label %420, label %424

420:                                              ; preds = %413
  %421 = inttoptr i64 %419 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = add i64 %422, 16
  br label %424

424:                                              ; preds = %413, %420
  %425 = phi i64 [ %423, %420 ], [ %419, %413 ]
  %426 = inttoptr i64 %425 to %"class.v8::internal::compiler::Node"**
  %427 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %426, align 8
  %428 = ptrtoint %"class.v8::internal::compiler::Node"* %427 to i64
  br label %429

429:                                              ; preds = %474, %424
  %430 = phi i64 [ %428, %424 ], [ %476, %474 ]
  %431 = inttoptr i64 %430 to %"class.v8::internal::compiler::Node"*
  %432 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %431, i64 0, i32 0
  %433 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %432, align 8
  %434 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %433, i64 0, i32 2
  %435 = load i16, i16* %434, align 8
  switch i16 %435, label %485 [
    i16 59, label %436
    i16 58, label %454
    i16 22, label %477
  ]

436:                                              ; preds = %429
  %437 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %433, i64 0, i32 5
  %438 = load i32, i32* %437, align 4
  %439 = icmp sgt i32 %438, 0
  br i1 %439, label %441, label %440, !prof !2

440:                                              ; preds = %436
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %431, i64 0, i32 3
  %443 = load i32, i32* %442, align 4
  %444 = and i32 %443, 251658240
  %445 = icmp eq i32 %444, 251658240
  %446 = add i64 %430, 32
  br i1 %445, label %447, label %451

447:                                              ; preds = %441
  %448 = inttoptr i64 %446 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = add i64 %449, 16
  br label %451

451:                                              ; preds = %447, %441
  %452 = phi i64 [ %450, %447 ], [ %446, %441 ]
  %453 = inttoptr i64 %452 to i64*
  br label %474

454:                                              ; preds = %429
  %455 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %433, i64 0, i32 5
  %456 = load i32, i32* %455, align 4
  %457 = icmp sgt i32 %456, 1
  br i1 %457, label %459, label %458, !prof !2

458:                                              ; preds = %454
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %431, i64 0, i32 3
  %461 = load i32, i32* %460, align 4
  %462 = and i32 %461, 251658240
  %463 = icmp eq i32 %462, 251658240
  %464 = add i64 %430, 32
  br i1 %463, label %465, label %469

465:                                              ; preds = %459
  %466 = inttoptr i64 %464 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = add i64 %467, 16
  br label %469

469:                                              ; preds = %465, %459
  %470 = phi i64 [ %468, %465 ], [ %464, %459 ]
  %471 = inttoptr i64 %470 to %"class.v8::internal::compiler::Node"**
  %472 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %471, i64 1
  %473 = bitcast %"class.v8::internal::compiler::Node"** %472 to i64*
  br label %474

474:                                              ; preds = %469, %451
  %475 = phi i64* [ %473, %469 ], [ %453, %451 ]
  %476 = load i64, i64* %475, align 8
  br label %429

477:                                              ; preds = %429
  %478 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %433, i64 0, i32 12
  %479 = bitcast [4 x i8]* %478 to i32*
  %480 = load i32, i32* %479, align 4
  %481 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %482 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %481, align 8
  %483 = sitofp i32 %480 to double
  %484 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %482, double %483) #14
  br label %1992

485:                                              ; preds = %429
  %486 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %427, i64 0, i32 0
  %487 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %486, align 8
  %488 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %487, i64 0, i32 2
  %489 = load i16, i16* %488, align 8
  switch i16 %489, label %1992 [
    i16 66, label %490
    i16 64, label %490
  ]

490:                                              ; preds = %485, %485
  %491 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %427, i64 0, i32 3
  %492 = load i32, i32* %491, align 4
  %493 = and i32 %492, 251658240
  %494 = icmp eq i32 %493, 251658240
  %495 = add i64 %428, 32
  br i1 %494, label %496, label %500

496:                                              ; preds = %490
  %497 = inttoptr i64 %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = add i64 %498, 16
  br label %500

500:                                              ; preds = %490, %496
  %501 = phi i64 [ %499, %496 ], [ %495, %490 ]
  %502 = inttoptr i64 %501 to %"class.v8::internal::compiler::Node"**
  %503 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %502, align 8
  br label %1992

504:                                              ; preds = %2, %2
  %505 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %506 = load i32, i32* %505, align 4
  %507 = and i32 %506, 251658240
  %508 = icmp eq i32 %507, 251658240
  %509 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %510 = add i64 %509, 32
  br i1 %508, label %511, label %515

511:                                              ; preds = %504
  %512 = inttoptr i64 %510 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = add i64 %513, 16
  br label %515

515:                                              ; preds = %504, %511
  %516 = phi i64 [ %514, %511 ], [ %510, %504 ]
  %517 = inttoptr i64 %516 to %"class.v8::internal::compiler::Node"**
  %518 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, align 8
  %519 = ptrtoint %"class.v8::internal::compiler::Node"* %518 to i64
  br label %520

520:                                              ; preds = %565, %515
  %521 = phi i64 [ %519, %515 ], [ %567, %565 ]
  %522 = inttoptr i64 %521 to %"class.v8::internal::compiler::Node"*
  %523 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %522, i64 0, i32 0
  %524 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %523, align 8
  %525 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %524, i64 0, i32 2
  %526 = load i16, i16* %525, align 8
  switch i16 %526, label %576 [
    i16 59, label %527
    i16 58, label %545
    i16 28, label %568
  ]

527:                                              ; preds = %520
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %524, i64 0, i32 5
  %529 = load i32, i32* %528, align 4
  %530 = icmp sgt i32 %529, 0
  br i1 %530, label %532, label %531, !prof !2

531:                                              ; preds = %527
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

532:                                              ; preds = %527
  %533 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %522, i64 0, i32 3
  %534 = load i32, i32* %533, align 4
  %535 = and i32 %534, 251658240
  %536 = icmp eq i32 %535, 251658240
  %537 = add i64 %521, 32
  br i1 %536, label %538, label %542

538:                                              ; preds = %532
  %539 = inttoptr i64 %537 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = add i64 %540, 16
  br label %542

542:                                              ; preds = %538, %532
  %543 = phi i64 [ %541, %538 ], [ %537, %532 ]
  %544 = inttoptr i64 %543 to i64*
  br label %565

545:                                              ; preds = %520
  %546 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %524, i64 0, i32 5
  %547 = load i32, i32* %546, align 4
  %548 = icmp sgt i32 %547, 1
  br i1 %548, label %550, label %549, !prof !2

549:                                              ; preds = %545
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

550:                                              ; preds = %545
  %551 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %522, i64 0, i32 3
  %552 = load i32, i32* %551, align 4
  %553 = and i32 %552, 251658240
  %554 = icmp eq i32 %553, 251658240
  %555 = add i64 %521, 32
  br i1 %554, label %556, label %560

556:                                              ; preds = %550
  %557 = inttoptr i64 %555 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = add i64 %558, 16
  br label %560

560:                                              ; preds = %556, %550
  %561 = phi i64 [ %559, %556 ], [ %555, %550 ]
  %562 = inttoptr i64 %561 to %"class.v8::internal::compiler::Node"**
  %563 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %562, i64 1
  %564 = bitcast %"class.v8::internal::compiler::Node"** %563 to i64*
  br label %565

565:                                              ; preds = %560, %542
  %566 = phi i64* [ %564, %560 ], [ %544, %542 ]
  %567 = load i64, i64* %566, align 8
  br label %520

568:                                              ; preds = %520
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %524, i64 1
  %570 = bitcast %"class.v8::internal::compiler::Operator"* %569 to double*
  %571 = load double, double* %570, align 8
  %572 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %573 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %572, align 8
  %574 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %573, i64 0, i32 0
  %575 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph15Float64ConstantEd(%"class.v8::internal::compiler::MachineGraph"* %574, double %571) #14
  br label %1992

576:                                              ; preds = %520
  %577 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %518, i64 0, i32 0
  %578 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %577, align 8
  %579 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %578, i64 0, i32 2
  %580 = load i16, i16* %579, align 8
  switch i16 %580, label %1992 [
    i16 76, label %581
    i16 77, label %581
    i16 71, label %595
    i16 72, label %595
    i16 74, label %641
  ]

581:                                              ; preds = %576, %576
  %582 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %518, i64 0, i32 3
  %583 = load i32, i32* %582, align 4
  %584 = and i32 %583, 251658240
  %585 = icmp eq i32 %584, 251658240
  %586 = add i64 %519, 32
  br i1 %585, label %587, label %591

587:                                              ; preds = %581
  %588 = inttoptr i64 %586 to i64*
  %589 = load i64, i64* %588, align 8
  %590 = add i64 %589, 16
  br label %591

591:                                              ; preds = %581, %587
  %592 = phi i64 [ %590, %587 ], [ %586, %581 ]
  %593 = inttoptr i64 %592 to %"class.v8::internal::compiler::Node"**
  %594 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %593, align 8
  br label %1992

595:                                              ; preds = %576, %576
  %596 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %597 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %596, align 8
  %598 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %597, i64 0, i32 0, i32 2
  %599 = load %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"** %598, align 8
  %600 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder20ChangeInt32ToFloat64Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"* %599) #14
  %601 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %518, i64 0, i32 3
  %602 = load i32, i32* %601, align 4
  %603 = and i32 %602, 251658240
  %604 = icmp eq i32 %603, 251658240
  %605 = add i64 %519, 32
  br i1 %604, label %606, label %610

606:                                              ; preds = %595
  %607 = inttoptr i64 %605 to i64*
  %608 = load i64, i64* %607, align 8
  %609 = add i64 %608, 16
  br label %610

610:                                              ; preds = %595, %606
  %611 = phi i64 [ %609, %606 ], [ %605, %595 ]
  %612 = inttoptr i64 %611 to %"class.v8::internal::compiler::Node"**
  %613 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, align 8
  %614 = load i32, i32* %505, align 4
  %615 = and i32 %614, 251658240
  %616 = icmp eq i32 %615, 251658240
  br i1 %616, label %617, label %621

617:                                              ; preds = %610
  %618 = inttoptr i64 %510 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = add i64 %619, 16
  br label %621

621:                                              ; preds = %617, %610
  %622 = phi i64 [ %620, %617 ], [ %510, %610 ]
  %623 = inttoptr i64 %622 to %"class.v8::internal::compiler::Node"**
  %624 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %623, align 8
  %625 = icmp eq %"class.v8::internal::compiler::Node"* %624, %613
  br i1 %625, label %640, label %626

626:                                              ; preds = %621
  br i1 %616, label %629, label %627

627:                                              ; preds = %626
  %628 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %632

629:                                              ; preds = %626
  %630 = inttoptr i64 %510 to %"struct.v8::internal::compiler::Node::Use"**
  %631 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %630, align 8
  br label %632

632:                                              ; preds = %629, %627
  %633 = phi %"struct.v8::internal::compiler::Node::Use"* [ %628, %627 ], [ %631, %629 ]
  %634 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %633, i64 -1
  %635 = icmp eq %"class.v8::internal::compiler::Node"* %624, null
  br i1 %635, label %637, label %636

636:                                              ; preds = %632
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %624, %"struct.v8::internal::compiler::Node::Use"* %634) #14
  br label %637

637:                                              ; preds = %636, %632
  store %"class.v8::internal::compiler::Node"* %613, %"class.v8::internal::compiler::Node"** %623, align 8
  %638 = icmp eq %"class.v8::internal::compiler::Node"* %613, null
  br i1 %638, label %640, label %639

639:                                              ; preds = %637
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %613, %"struct.v8::internal::compiler::Node::Use"* %634) #14
  br label %640

640:                                              ; preds = %621, %637, %639
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %600) #14
  br label %1992

641:                                              ; preds = %576
  %642 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %643 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %642, align 8
  %644 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %643, i64 0, i32 0, i32 2
  %645 = load %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"** %644, align 8
  %646 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder21ChangeUint32ToFloat64Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"* %645) #14
  %647 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %518, i64 0, i32 3
  %648 = load i32, i32* %647, align 4
  %649 = and i32 %648, 251658240
  %650 = icmp eq i32 %649, 251658240
  %651 = add i64 %519, 32
  br i1 %650, label %652, label %656

652:                                              ; preds = %641
  %653 = inttoptr i64 %651 to i64*
  %654 = load i64, i64* %653, align 8
  %655 = add i64 %654, 16
  br label %656

656:                                              ; preds = %641, %652
  %657 = phi i64 [ %655, %652 ], [ %651, %641 ]
  %658 = inttoptr i64 %657 to %"class.v8::internal::compiler::Node"**
  %659 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %658, align 8
  %660 = load i32, i32* %505, align 4
  %661 = and i32 %660, 251658240
  %662 = icmp eq i32 %661, 251658240
  br i1 %662, label %663, label %667

663:                                              ; preds = %656
  %664 = inttoptr i64 %510 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = add i64 %665, 16
  br label %667

667:                                              ; preds = %663, %656
  %668 = phi i64 [ %666, %663 ], [ %510, %656 ]
  %669 = inttoptr i64 %668 to %"class.v8::internal::compiler::Node"**
  %670 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %669, align 8
  %671 = icmp eq %"class.v8::internal::compiler::Node"* %670, %659
  br i1 %671, label %686, label %672

672:                                              ; preds = %667
  br i1 %662, label %675, label %673

673:                                              ; preds = %672
  %674 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %678

675:                                              ; preds = %672
  %676 = inttoptr i64 %510 to %"struct.v8::internal::compiler::Node::Use"**
  %677 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %676, align 8
  br label %678

678:                                              ; preds = %675, %673
  %679 = phi %"struct.v8::internal::compiler::Node::Use"* [ %674, %673 ], [ %677, %675 ]
  %680 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %679, i64 -1
  %681 = icmp eq %"class.v8::internal::compiler::Node"* %670, null
  br i1 %681, label %683, label %682

682:                                              ; preds = %678
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %670, %"struct.v8::internal::compiler::Node::Use"* %680) #14
  br label %683

683:                                              ; preds = %682, %678
  store %"class.v8::internal::compiler::Node"* %659, %"class.v8::internal::compiler::Node"** %669, align 8
  %684 = icmp eq %"class.v8::internal::compiler::Node"* %659, null
  br i1 %684, label %686, label %685

685:                                              ; preds = %683
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %659, %"struct.v8::internal::compiler::Node::Use"* %680) #14
  br label %686

686:                                              ; preds = %667, %683, %685
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %646) #14
  br label %1992

687:                                              ; preds = %2, %2
  %688 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %689 = load i32, i32* %688, align 4
  %690 = and i32 %689, 251658240
  %691 = icmp eq i32 %690, 251658240
  %692 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %693 = add i64 %692, 32
  br i1 %691, label %694, label %698

694:                                              ; preds = %687
  %695 = inttoptr i64 %693 to i64*
  %696 = load i64, i64* %695, align 8
  %697 = add i64 %696, 16
  br label %698

698:                                              ; preds = %687, %694
  %699 = phi i64 [ %697, %694 ], [ %693, %687 ]
  %700 = inttoptr i64 %699 to %"class.v8::internal::compiler::Node"**
  %701 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %700, align 8
  %702 = ptrtoint %"class.v8::internal::compiler::Node"* %701 to i64
  br label %703

703:                                              ; preds = %748, %698
  %704 = phi i64 [ %702, %698 ], [ %750, %748 ]
  %705 = inttoptr i64 %704 to %"class.v8::internal::compiler::Node"*
  %706 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %705, i64 0, i32 0
  %707 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %706, align 8
  %708 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %707, i64 0, i32 2
  %709 = load i16, i16* %708, align 8
  switch i16 %709, label %803 [
    i16 59, label %710
    i16 58, label %728
    i16 28, label %751
  ]

710:                                              ; preds = %703
  %711 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %707, i64 0, i32 5
  %712 = load i32, i32* %711, align 4
  %713 = icmp sgt i32 %712, 0
  br i1 %713, label %715, label %714, !prof !2

714:                                              ; preds = %710
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

715:                                              ; preds = %710
  %716 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %705, i64 0, i32 3
  %717 = load i32, i32* %716, align 4
  %718 = and i32 %717, 251658240
  %719 = icmp eq i32 %718, 251658240
  %720 = add i64 %704, 32
  br i1 %719, label %721, label %725

721:                                              ; preds = %715
  %722 = inttoptr i64 %720 to i64*
  %723 = load i64, i64* %722, align 8
  %724 = add i64 %723, 16
  br label %725

725:                                              ; preds = %721, %715
  %726 = phi i64 [ %724, %721 ], [ %720, %715 ]
  %727 = inttoptr i64 %726 to i64*
  br label %748

728:                                              ; preds = %703
  %729 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %707, i64 0, i32 5
  %730 = load i32, i32* %729, align 4
  %731 = icmp sgt i32 %730, 1
  br i1 %731, label %733, label %732, !prof !2

732:                                              ; preds = %728
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

733:                                              ; preds = %728
  %734 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %705, i64 0, i32 3
  %735 = load i32, i32* %734, align 4
  %736 = and i32 %735, 251658240
  %737 = icmp eq i32 %736, 251658240
  %738 = add i64 %704, 32
  br i1 %737, label %739, label %743

739:                                              ; preds = %733
  %740 = inttoptr i64 %738 to i64*
  %741 = load i64, i64* %740, align 8
  %742 = add i64 %741, 16
  br label %743

743:                                              ; preds = %739, %733
  %744 = phi i64 [ %742, %739 ], [ %738, %733 ]
  %745 = inttoptr i64 %744 to %"class.v8::internal::compiler::Node"**
  %746 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 1
  %747 = bitcast %"class.v8::internal::compiler::Node"** %746 to i64*
  br label %748

748:                                              ; preds = %743, %725
  %749 = phi i64* [ %747, %743 ], [ %727, %725 ]
  %750 = load i64, i64* %749, align 8
  br label %703

751:                                              ; preds = %703
  %752 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %707, i64 1
  %753 = bitcast %"class.v8::internal::compiler::Operator"* %752 to i64*
  %754 = load i64, i64* %753, align 8
  %755 = bitcast i64 %754 to double
  %756 = tail call double @llvm.fabs.f64(double %755) #15
  %757 = fcmp one double %756, 0x7FF0000000000000
  %758 = fcmp ole double %755, 0x41DFFFFFFFC00000
  %759 = and i1 %758, %757
  %760 = fcmp oge double %755, 0xC1E0000000000000
  %761 = and i1 %760, %759
  br i1 %761, label %762, label %766

762:                                              ; preds = %751
  %763 = fptosi double %755 to i32
  %764 = sitofp i32 %763 to double
  %765 = fcmp une double %764, %755
  br i1 %765, label %766, label %797

766:                                              ; preds = %762, %751
  %767 = and i64 %754, 9218868437227405312
  %768 = icmp eq i64 %767, 0
  br i1 %768, label %797, label %769

769:                                              ; preds = %766
  %770 = lshr i64 %754, 52
  %771 = trunc i64 %770 to i32
  %772 = and i32 %771, 2047
  %773 = add nsw i32 %772, -1075
  %774 = icmp slt i32 %773, 0
  br i1 %774, label %775, label %783

775:                                              ; preds = %769
  %776 = icmp slt i32 %773, -52
  br i1 %776, label %797, label %777

777:                                              ; preds = %775
  %778 = and i64 %754, 4503599627370495
  %779 = or i64 %778, 4503599627370496
  %780 = sub nuw nsw i32 1075, %772
  %781 = zext i32 %780 to i64
  %782 = lshr i64 %779, %781
  br label %791

783:                                              ; preds = %769
  %784 = icmp sgt i32 %773, 31
  br i1 %784, label %797, label %785

785:                                              ; preds = %783
  %786 = and i64 %754, 4503599627370495
  %787 = or i64 %786, 4503599627370496
  %788 = zext i32 %773 to i64
  %789 = shl i64 %787, %788
  %790 = and i64 %789, 4294967295
  br label %791

791:                                              ; preds = %785, %777
  %792 = phi i64 [ %782, %777 ], [ %790, %785 ]
  %793 = icmp sgt i64 %754, -1
  %794 = select i1 %793, i32 1, i32 -1
  %795 = trunc i64 %792 to i32
  %796 = mul i32 %794, %795
  br label %797

797:                                              ; preds = %762, %766, %775, %783, %791
  %798 = phi i32 [ %763, %762 ], [ %796, %791 ], [ 0, %775 ], [ 0, %783 ], [ 0, %766 ]
  %799 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %800 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %799, align 8
  %801 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %800, i64 0, i32 0
  %802 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"* %801, i32 %798) #14
  br label %1992

803:                                              ; preds = %703
  %804 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %701, i64 0, i32 0
  %805 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %804, align 8
  %806 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %805, i64 0, i32 2
  %807 = load i16, i16* %806, align 8
  switch i16 %807, label %1992 [
    i16 76, label %808
    i16 77, label %808
    i16 71, label %854
    i16 72, label %854
  ]

808:                                              ; preds = %803, %803
  %809 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %810 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %809, align 8
  %811 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %810, i64 0, i32 0, i32 2
  %812 = load %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"** %811, align 8
  %813 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder20ChangeFloat64ToInt32Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"* %812) #14
  %814 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %701, i64 0, i32 3
  %815 = load i32, i32* %814, align 4
  %816 = and i32 %815, 251658240
  %817 = icmp eq i32 %816, 251658240
  %818 = add i64 %702, 32
  br i1 %817, label %819, label %823

819:                                              ; preds = %808
  %820 = inttoptr i64 %818 to i64*
  %821 = load i64, i64* %820, align 8
  %822 = add i64 %821, 16
  br label %823

823:                                              ; preds = %808, %819
  %824 = phi i64 [ %822, %819 ], [ %818, %808 ]
  %825 = inttoptr i64 %824 to %"class.v8::internal::compiler::Node"**
  %826 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %825, align 8
  %827 = load i32, i32* %688, align 4
  %828 = and i32 %827, 251658240
  %829 = icmp eq i32 %828, 251658240
  br i1 %829, label %830, label %834

830:                                              ; preds = %823
  %831 = inttoptr i64 %693 to i64*
  %832 = load i64, i64* %831, align 8
  %833 = add i64 %832, 16
  br label %834

834:                                              ; preds = %830, %823
  %835 = phi i64 [ %833, %830 ], [ %693, %823 ]
  %836 = inttoptr i64 %835 to %"class.v8::internal::compiler::Node"**
  %837 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %836, align 8
  %838 = icmp eq %"class.v8::internal::compiler::Node"* %837, %826
  br i1 %838, label %853, label %839

839:                                              ; preds = %834
  br i1 %829, label %842, label %840

840:                                              ; preds = %839
  %841 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %845

842:                                              ; preds = %839
  %843 = inttoptr i64 %693 to %"struct.v8::internal::compiler::Node::Use"**
  %844 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %843, align 8
  br label %845

845:                                              ; preds = %842, %840
  %846 = phi %"struct.v8::internal::compiler::Node::Use"* [ %841, %840 ], [ %844, %842 ]
  %847 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %846, i64 -1
  %848 = icmp eq %"class.v8::internal::compiler::Node"* %837, null
  br i1 %848, label %850, label %849

849:                                              ; preds = %845
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %837, %"struct.v8::internal::compiler::Node::Use"* %847) #14
  br label %850

850:                                              ; preds = %849, %845
  store %"class.v8::internal::compiler::Node"* %826, %"class.v8::internal::compiler::Node"** %836, align 8
  %851 = icmp eq %"class.v8::internal::compiler::Node"* %826, null
  br i1 %851, label %853, label %852

852:                                              ; preds = %850
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %826, %"struct.v8::internal::compiler::Node::Use"* %847) #14
  br label %853

853:                                              ; preds = %834, %850, %852
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %813) #14
  br label %1992

854:                                              ; preds = %803, %803
  %855 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %701, i64 0, i32 3
  %856 = load i32, i32* %855, align 4
  %857 = and i32 %856, 251658240
  %858 = icmp eq i32 %857, 251658240
  %859 = add i64 %702, 32
  br i1 %858, label %860, label %864

860:                                              ; preds = %854
  %861 = inttoptr i64 %859 to i64*
  %862 = load i64, i64* %861, align 8
  %863 = add i64 %862, 16
  br label %864

864:                                              ; preds = %854, %860
  %865 = phi i64 [ %863, %860 ], [ %859, %854 ]
  %866 = inttoptr i64 %865 to %"class.v8::internal::compiler::Node"**
  %867 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %866, align 8
  br label %1992

868:                                              ; preds = %2
  %869 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %870 = load i32, i32* %869, align 4
  %871 = and i32 %870, 251658240
  %872 = icmp eq i32 %871, 251658240
  %873 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %874 = add i64 %873, 32
  br i1 %872, label %875, label %879

875:                                              ; preds = %868
  %876 = inttoptr i64 %874 to i64*
  %877 = load i64, i64* %876, align 8
  %878 = add i64 %877, 16
  br label %879

879:                                              ; preds = %868, %875
  %880 = phi i64 [ %878, %875 ], [ %874, %868 ]
  %881 = inttoptr i64 %880 to %"class.v8::internal::compiler::Node"**
  %882 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %881, align 8
  %883 = ptrtoint %"class.v8::internal::compiler::Node"* %882 to i64
  br label %884

884:                                              ; preds = %929, %879
  %885 = phi i64 [ %883, %879 ], [ %931, %929 ]
  %886 = inttoptr i64 %885 to %"class.v8::internal::compiler::Node"*
  %887 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %886, i64 0, i32 0
  %888 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %887, align 8
  %889 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %888, i64 0, i32 2
  %890 = load i16, i16* %889, align 8
  switch i16 %890, label %984 [
    i16 59, label %891
    i16 58, label %909
    i16 28, label %932
  ]

891:                                              ; preds = %884
  %892 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %888, i64 0, i32 5
  %893 = load i32, i32* %892, align 4
  %894 = icmp sgt i32 %893, 0
  br i1 %894, label %896, label %895, !prof !2

895:                                              ; preds = %891
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

896:                                              ; preds = %891
  %897 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %886, i64 0, i32 3
  %898 = load i32, i32* %897, align 4
  %899 = and i32 %898, 251658240
  %900 = icmp eq i32 %899, 251658240
  %901 = add i64 %885, 32
  br i1 %900, label %902, label %906

902:                                              ; preds = %896
  %903 = inttoptr i64 %901 to i64*
  %904 = load i64, i64* %903, align 8
  %905 = add i64 %904, 16
  br label %906

906:                                              ; preds = %902, %896
  %907 = phi i64 [ %905, %902 ], [ %901, %896 ]
  %908 = inttoptr i64 %907 to i64*
  br label %929

909:                                              ; preds = %884
  %910 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %888, i64 0, i32 5
  %911 = load i32, i32* %910, align 4
  %912 = icmp sgt i32 %911, 1
  br i1 %912, label %914, label %913, !prof !2

913:                                              ; preds = %909
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

914:                                              ; preds = %909
  %915 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %886, i64 0, i32 3
  %916 = load i32, i32* %915, align 4
  %917 = and i32 %916, 251658240
  %918 = icmp eq i32 %917, 251658240
  %919 = add i64 %885, 32
  br i1 %918, label %920, label %924

920:                                              ; preds = %914
  %921 = inttoptr i64 %919 to i64*
  %922 = load i64, i64* %921, align 8
  %923 = add i64 %922, 16
  br label %924

924:                                              ; preds = %920, %914
  %925 = phi i64 [ %923, %920 ], [ %919, %914 ]
  %926 = inttoptr i64 %925 to %"class.v8::internal::compiler::Node"**
  %927 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %926, i64 1
  %928 = bitcast %"class.v8::internal::compiler::Node"** %927 to i64*
  br label %929

929:                                              ; preds = %924, %906
  %930 = phi i64* [ %928, %924 ], [ %908, %906 ]
  %931 = load i64, i64* %930, align 8
  br label %884

932:                                              ; preds = %884
  %933 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %888, i64 1
  %934 = bitcast %"class.v8::internal::compiler::Operator"* %933 to i64*
  %935 = load i64, i64* %934, align 8
  %936 = bitcast i64 %935 to double
  %937 = tail call double @llvm.fabs.f64(double %936) #15
  %938 = fcmp one double %937, 0x7FF0000000000000
  %939 = fcmp ole double %936, 0x41DFFFFFFFC00000
  %940 = and i1 %939, %938
  %941 = fcmp oge double %936, 0xC1E0000000000000
  %942 = and i1 %941, %940
  br i1 %942, label %943, label %947

943:                                              ; preds = %932
  %944 = fptosi double %936 to i32
  %945 = sitofp i32 %944 to double
  %946 = fcmp une double %945, %936
  br i1 %946, label %947, label %978

947:                                              ; preds = %943, %932
  %948 = and i64 %935, 9218868437227405312
  %949 = icmp eq i64 %948, 0
  br i1 %949, label %978, label %950

950:                                              ; preds = %947
  %951 = lshr i64 %935, 52
  %952 = trunc i64 %951 to i32
  %953 = and i32 %952, 2047
  %954 = add nsw i32 %953, -1075
  %955 = icmp slt i32 %954, 0
  br i1 %955, label %956, label %964

956:                                              ; preds = %950
  %957 = icmp slt i32 %954, -52
  br i1 %957, label %978, label %958

958:                                              ; preds = %956
  %959 = and i64 %935, 4503599627370495
  %960 = or i64 %959, 4503599627370496
  %961 = sub nuw nsw i32 1075, %953
  %962 = zext i32 %961 to i64
  %963 = lshr i64 %960, %962
  br label %972

964:                                              ; preds = %950
  %965 = icmp sgt i32 %954, 31
  br i1 %965, label %978, label %966

966:                                              ; preds = %964
  %967 = and i64 %935, 4503599627370495
  %968 = or i64 %967, 4503599627370496
  %969 = zext i32 %954 to i64
  %970 = shl i64 %968, %969
  %971 = and i64 %970, 4294967295
  br label %972

972:                                              ; preds = %966, %958
  %973 = phi i64 [ %963, %958 ], [ %971, %966 ]
  %974 = icmp sgt i64 %935, -1
  %975 = select i1 %974, i32 1, i32 -1
  %976 = trunc i64 %973 to i32
  %977 = mul i32 %975, %976
  br label %978

978:                                              ; preds = %943, %947, %956, %964, %972
  %979 = phi i32 [ %944, %943 ], [ %977, %972 ], [ 0, %956 ], [ 0, %964 ], [ 0, %947 ]
  %980 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %981 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %980, align 8
  %982 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %981, i64 0, i32 0
  %983 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"* %982, i32 %979) #14
  br label %1992

984:                                              ; preds = %884
  %985 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %882, i64 0, i32 0
  %986 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %985, align 8
  %987 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %986, i64 0, i32 2
  %988 = load i16, i16* %987, align 8
  switch i16 %988, label %1992 [
    i16 76, label %989
    i16 77, label %989
    i16 74, label %1035
  ]

989:                                              ; preds = %984, %984
  %990 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %991 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %990, align 8
  %992 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %991, i64 0, i32 0, i32 2
  %993 = load %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"** %992, align 8
  %994 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder21ChangeFloat64ToUint32Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"* %993) #14
  %995 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %882, i64 0, i32 3
  %996 = load i32, i32* %995, align 4
  %997 = and i32 %996, 251658240
  %998 = icmp eq i32 %997, 251658240
  %999 = add i64 %883, 32
  br i1 %998, label %1000, label %1004

1000:                                             ; preds = %989
  %1001 = inttoptr i64 %999 to i64*
  %1002 = load i64, i64* %1001, align 8
  %1003 = add i64 %1002, 16
  br label %1004

1004:                                             ; preds = %989, %1000
  %1005 = phi i64 [ %1003, %1000 ], [ %999, %989 ]
  %1006 = inttoptr i64 %1005 to %"class.v8::internal::compiler::Node"**
  %1007 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1006, align 8
  %1008 = load i32, i32* %869, align 4
  %1009 = and i32 %1008, 251658240
  %1010 = icmp eq i32 %1009, 251658240
  br i1 %1010, label %1011, label %1015

1011:                                             ; preds = %1004
  %1012 = inttoptr i64 %874 to i64*
  %1013 = load i64, i64* %1012, align 8
  %1014 = add i64 %1013, 16
  br label %1015

1015:                                             ; preds = %1011, %1004
  %1016 = phi i64 [ %1014, %1011 ], [ %874, %1004 ]
  %1017 = inttoptr i64 %1016 to %"class.v8::internal::compiler::Node"**
  %1018 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1017, align 8
  %1019 = icmp eq %"class.v8::internal::compiler::Node"* %1018, %1007
  br i1 %1019, label %1034, label %1020

1020:                                             ; preds = %1015
  br i1 %1010, label %1023, label %1021

1021:                                             ; preds = %1020
  %1022 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1026

1023:                                             ; preds = %1020
  %1024 = inttoptr i64 %874 to %"struct.v8::internal::compiler::Node::Use"**
  %1025 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1024, align 8
  br label %1026

1026:                                             ; preds = %1023, %1021
  %1027 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1022, %1021 ], [ %1025, %1023 ]
  %1028 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1027, i64 -1
  %1029 = icmp eq %"class.v8::internal::compiler::Node"* %1018, null
  br i1 %1029, label %1031, label %1030

1030:                                             ; preds = %1026
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1018, %"struct.v8::internal::compiler::Node::Use"* %1028) #14
  br label %1031

1031:                                             ; preds = %1030, %1026
  store %"class.v8::internal::compiler::Node"* %1007, %"class.v8::internal::compiler::Node"** %1017, align 8
  %1032 = icmp eq %"class.v8::internal::compiler::Node"* %1007, null
  br i1 %1032, label %1034, label %1033

1033:                                             ; preds = %1031
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1007, %"struct.v8::internal::compiler::Node::Use"* %1028) #14
  br label %1034

1034:                                             ; preds = %1015, %1031, %1033
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %994) #14
  br label %1992

1035:                                             ; preds = %984
  %1036 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %882, i64 0, i32 3
  %1037 = load i32, i32* %1036, align 4
  %1038 = and i32 %1037, 251658240
  %1039 = icmp eq i32 %1038, 251658240
  %1040 = add i64 %883, 32
  br i1 %1039, label %1041, label %1045

1041:                                             ; preds = %1035
  %1042 = inttoptr i64 %1040 to i64*
  %1043 = load i64, i64* %1042, align 8
  %1044 = add i64 %1043, 16
  br label %1045

1045:                                             ; preds = %1035, %1041
  %1046 = phi i64 [ %1044, %1041 ], [ %1040, %1035 ]
  %1047 = inttoptr i64 %1046 to %"class.v8::internal::compiler::Node"**
  %1048 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1047, align 8
  br label %1992

1049:                                             ; preds = %2
  %1050 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1051 = load i32, i32* %1050, align 4
  %1052 = and i32 %1051, 251658240
  %1053 = icmp eq i32 %1052, 251658240
  %1054 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1055 = add i64 %1054, 32
  br i1 %1053, label %1056, label %1060

1056:                                             ; preds = %1049
  %1057 = inttoptr i64 %1055 to i64*
  %1058 = load i64, i64* %1057, align 8
  %1059 = add i64 %1058, 16
  br label %1060

1060:                                             ; preds = %1049, %1056
  %1061 = phi i64 [ %1059, %1056 ], [ %1055, %1049 ]
  %1062 = inttoptr i64 %1061 to i64*
  br label %1063

1063:                                             ; preds = %1109, %1060
  %1064 = phi i64* [ %1062, %1060 ], [ %1110, %1109 ]
  %1065 = load i64, i64* %1064, align 8
  %1066 = inttoptr i64 %1065 to %"class.v8::internal::compiler::Node"*
  %1067 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1066, i64 0, i32 0
  %1068 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1067, align 8
  %1069 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1068, i64 0, i32 2
  %1070 = load i16, i16* %1069, align 8
  switch i16 %1070, label %1992 [
    i16 59, label %1071
    i16 58, label %1089
    i16 22, label %1111
  ]

1071:                                             ; preds = %1063
  %1072 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1068, i64 0, i32 5
  %1073 = load i32, i32* %1072, align 4
  %1074 = icmp sgt i32 %1073, 0
  br i1 %1074, label %1076, label %1075, !prof !2

1075:                                             ; preds = %1071
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1076:                                             ; preds = %1071
  %1077 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1066, i64 0, i32 3
  %1078 = load i32, i32* %1077, align 4
  %1079 = and i32 %1078, 251658240
  %1080 = icmp eq i32 %1079, 251658240
  %1081 = add i64 %1065, 32
  br i1 %1080, label %1082, label %1086

1082:                                             ; preds = %1076
  %1083 = inttoptr i64 %1081 to i64*
  %1084 = load i64, i64* %1083, align 8
  %1085 = add i64 %1084, 16
  br label %1086

1086:                                             ; preds = %1082, %1076
  %1087 = phi i64 [ %1085, %1082 ], [ %1081, %1076 ]
  %1088 = inttoptr i64 %1087 to i64*
  br label %1109

1089:                                             ; preds = %1063
  %1090 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1068, i64 0, i32 5
  %1091 = load i32, i32* %1090, align 4
  %1092 = icmp sgt i32 %1091, 1
  br i1 %1092, label %1094, label %1093, !prof !2

1093:                                             ; preds = %1089
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1094:                                             ; preds = %1089
  %1095 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1066, i64 0, i32 3
  %1096 = load i32, i32* %1095, align 4
  %1097 = and i32 %1096, 251658240
  %1098 = icmp eq i32 %1097, 251658240
  %1099 = add i64 %1065, 32
  br i1 %1098, label %1100, label %1104

1100:                                             ; preds = %1094
  %1101 = inttoptr i64 %1099 to i64*
  %1102 = load i64, i64* %1101, align 8
  %1103 = add i64 %1102, 16
  br label %1104

1104:                                             ; preds = %1100, %1094
  %1105 = phi i64 [ %1103, %1100 ], [ %1099, %1094 ]
  %1106 = inttoptr i64 %1105 to %"class.v8::internal::compiler::Node"**
  %1107 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1106, i64 1
  %1108 = bitcast %"class.v8::internal::compiler::Node"** %1107 to i64*
  br label %1109

1109:                                             ; preds = %1104, %1086
  %1110 = phi i64* [ %1108, %1104 ], [ %1088, %1086 ]
  br label %1063

1111:                                             ; preds = %1063
  %1112 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1068, i64 0, i32 12
  %1113 = bitcast [4 x i8]* %1112 to i32*
  %1114 = load i32, i32* %1113, align 4
  %1115 = uitofp i32 %1114 to double
  %1116 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1117 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1116, align 8
  %1118 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %1117, double %1115) #14
  br label %1992

1119:                                             ; preds = %2
  %1120 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1121 = load i32, i32* %1120, align 4
  %1122 = and i32 %1121, 251658240
  %1123 = icmp eq i32 %1122, 251658240
  %1124 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1125 = add i64 %1124, 32
  br i1 %1123, label %1126, label %1130

1126:                                             ; preds = %1119
  %1127 = inttoptr i64 %1125 to i64*
  %1128 = load i64, i64* %1127, align 8
  %1129 = add i64 %1128, 16
  br label %1130

1130:                                             ; preds = %1119, %1126
  %1131 = phi i64 [ %1129, %1126 ], [ %1125, %1119 ]
  %1132 = inttoptr i64 %1131 to %"class.v8::internal::compiler::Node"**
  %1133 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1132, align 8
  %1134 = ptrtoint %"class.v8::internal::compiler::Node"* %1133 to i64
  br label %1135

1135:                                             ; preds = %1180, %1130
  %1136 = phi i64 [ %1134, %1130 ], [ %1182, %1180 ]
  %1137 = inttoptr i64 %1136 to %"class.v8::internal::compiler::Node"*
  %1138 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1137, i64 0, i32 0
  %1139 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1138, align 8
  %1140 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1139, i64 0, i32 2
  %1141 = load i16, i16* %1140, align 8
  switch i16 %1141, label %1235 [
    i16 59, label %1142
    i16 58, label %1160
    i16 28, label %1183
  ]

1142:                                             ; preds = %1135
  %1143 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1139, i64 0, i32 5
  %1144 = load i32, i32* %1143, align 4
  %1145 = icmp sgt i32 %1144, 0
  br i1 %1145, label %1147, label %1146, !prof !2

1146:                                             ; preds = %1142
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1147:                                             ; preds = %1142
  %1148 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1137, i64 0, i32 3
  %1149 = load i32, i32* %1148, align 4
  %1150 = and i32 %1149, 251658240
  %1151 = icmp eq i32 %1150, 251658240
  %1152 = add i64 %1136, 32
  br i1 %1151, label %1153, label %1157

1153:                                             ; preds = %1147
  %1154 = inttoptr i64 %1152 to i64*
  %1155 = load i64, i64* %1154, align 8
  %1156 = add i64 %1155, 16
  br label %1157

1157:                                             ; preds = %1153, %1147
  %1158 = phi i64 [ %1156, %1153 ], [ %1152, %1147 ]
  %1159 = inttoptr i64 %1158 to i64*
  br label %1180

1160:                                             ; preds = %1135
  %1161 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1139, i64 0, i32 5
  %1162 = load i32, i32* %1161, align 4
  %1163 = icmp sgt i32 %1162, 1
  br i1 %1163, label %1165, label %1164, !prof !2

1164:                                             ; preds = %1160
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1165:                                             ; preds = %1160
  %1166 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1137, i64 0, i32 3
  %1167 = load i32, i32* %1166, align 4
  %1168 = and i32 %1167, 251658240
  %1169 = icmp eq i32 %1168, 251658240
  %1170 = add i64 %1136, 32
  br i1 %1169, label %1171, label %1175

1171:                                             ; preds = %1165
  %1172 = inttoptr i64 %1170 to i64*
  %1173 = load i64, i64* %1172, align 8
  %1174 = add i64 %1173, 16
  br label %1175

1175:                                             ; preds = %1171, %1165
  %1176 = phi i64 [ %1174, %1171 ], [ %1170, %1165 ]
  %1177 = inttoptr i64 %1176 to %"class.v8::internal::compiler::Node"**
  %1178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1177, i64 1
  %1179 = bitcast %"class.v8::internal::compiler::Node"** %1178 to i64*
  br label %1180

1180:                                             ; preds = %1175, %1157
  %1181 = phi i64* [ %1179, %1175 ], [ %1159, %1157 ]
  %1182 = load i64, i64* %1181, align 8
  br label %1135

1183:                                             ; preds = %1135
  %1184 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1139, i64 1
  %1185 = bitcast %"class.v8::internal::compiler::Operator"* %1184 to i64*
  %1186 = load i64, i64* %1185, align 8
  %1187 = bitcast i64 %1186 to double
  %1188 = tail call double @llvm.fabs.f64(double %1187) #15
  %1189 = fcmp one double %1188, 0x7FF0000000000000
  %1190 = fcmp ole double %1187, 0x41DFFFFFFFC00000
  %1191 = and i1 %1190, %1189
  %1192 = fcmp oge double %1187, 0xC1E0000000000000
  %1193 = and i1 %1192, %1191
  br i1 %1193, label %1194, label %1198

1194:                                             ; preds = %1183
  %1195 = fptosi double %1187 to i32
  %1196 = sitofp i32 %1195 to double
  %1197 = fcmp une double %1196, %1187
  br i1 %1197, label %1198, label %1229

1198:                                             ; preds = %1194, %1183
  %1199 = and i64 %1186, 9218868437227405312
  %1200 = icmp eq i64 %1199, 0
  br i1 %1200, label %1229, label %1201

1201:                                             ; preds = %1198
  %1202 = lshr i64 %1186, 52
  %1203 = trunc i64 %1202 to i32
  %1204 = and i32 %1203, 2047
  %1205 = add nsw i32 %1204, -1075
  %1206 = icmp slt i32 %1205, 0
  br i1 %1206, label %1207, label %1215

1207:                                             ; preds = %1201
  %1208 = icmp slt i32 %1205, -52
  br i1 %1208, label %1229, label %1209

1209:                                             ; preds = %1207
  %1210 = and i64 %1186, 4503599627370495
  %1211 = or i64 %1210, 4503599627370496
  %1212 = sub nuw nsw i32 1075, %1204
  %1213 = zext i32 %1212 to i64
  %1214 = lshr i64 %1211, %1213
  br label %1223

1215:                                             ; preds = %1201
  %1216 = icmp sgt i32 %1205, 31
  br i1 %1216, label %1229, label %1217

1217:                                             ; preds = %1215
  %1218 = and i64 %1186, 4503599627370495
  %1219 = or i64 %1218, 4503599627370496
  %1220 = zext i32 %1205 to i64
  %1221 = shl i64 %1219, %1220
  %1222 = and i64 %1221, 4294967295
  br label %1223

1223:                                             ; preds = %1217, %1209
  %1224 = phi i64 [ %1214, %1209 ], [ %1222, %1217 ]
  %1225 = icmp sgt i64 %1186, -1
  %1226 = select i1 %1225, i32 1, i32 -1
  %1227 = trunc i64 %1224 to i32
  %1228 = mul i32 %1226, %1227
  br label %1229

1229:                                             ; preds = %1194, %1198, %1207, %1215, %1223
  %1230 = phi i32 [ %1195, %1194 ], [ %1228, %1223 ], [ 0, %1207 ], [ 0, %1215 ], [ 0, %1198 ]
  %1231 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1232 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1231, align 8
  %1233 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1232, i64 0, i32 0
  %1234 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"* %1233, i32 %1230) #14
  br label %1992

1235:                                             ; preds = %1135
  %1236 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1133, i64 0, i32 0
  %1237 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1236, align 8
  %1238 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1237, i64 0, i32 2
  %1239 = load i16, i16* %1238, align 8
  switch i16 %1239, label %1992 [
    i16 71, label %1240
    i16 72, label %1240
    i16 74, label %1240
    i16 76, label %1254
    i16 77, label %1254
  ]

1240:                                             ; preds = %1235, %1235, %1235
  %1241 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1133, i64 0, i32 3
  %1242 = load i32, i32* %1241, align 4
  %1243 = and i32 %1242, 251658240
  %1244 = icmp eq i32 %1243, 251658240
  %1245 = add i64 %1134, 32
  br i1 %1244, label %1246, label %1250

1246:                                             ; preds = %1240
  %1247 = inttoptr i64 %1245 to i64*
  %1248 = load i64, i64* %1247, align 8
  %1249 = add i64 %1248, 16
  br label %1250

1250:                                             ; preds = %1240, %1246
  %1251 = phi i64 [ %1249, %1246 ], [ %1245, %1240 ]
  %1252 = inttoptr i64 %1251 to %"class.v8::internal::compiler::Node"**
  %1253 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1252, align 8
  br label %1992

1254:                                             ; preds = %1235, %1235
  %1255 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1256 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1255, align 8
  %1257 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1256, i64 0, i32 0, i32 2
  %1258 = load %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"** %1257, align 8
  %1259 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder23TruncateFloat64ToWord32Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"* %1258) #14
  %1260 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1133, i64 0, i32 3
  %1261 = load i32, i32* %1260, align 4
  %1262 = and i32 %1261, 251658240
  %1263 = icmp eq i32 %1262, 251658240
  %1264 = add i64 %1134, 32
  br i1 %1263, label %1265, label %1269

1265:                                             ; preds = %1254
  %1266 = inttoptr i64 %1264 to i64*
  %1267 = load i64, i64* %1266, align 8
  %1268 = add i64 %1267, 16
  br label %1269

1269:                                             ; preds = %1254, %1265
  %1270 = phi i64 [ %1268, %1265 ], [ %1264, %1254 ]
  %1271 = inttoptr i64 %1270 to %"class.v8::internal::compiler::Node"**
  %1272 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1271, align 8
  %1273 = load i32, i32* %1120, align 4
  %1274 = and i32 %1273, 251658240
  %1275 = icmp eq i32 %1274, 251658240
  br i1 %1275, label %1276, label %1280

1276:                                             ; preds = %1269
  %1277 = inttoptr i64 %1125 to i64*
  %1278 = load i64, i64* %1277, align 8
  %1279 = add i64 %1278, 16
  br label %1280

1280:                                             ; preds = %1276, %1269
  %1281 = phi i64 [ %1279, %1276 ], [ %1125, %1269 ]
  %1282 = inttoptr i64 %1281 to %"class.v8::internal::compiler::Node"**
  %1283 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1282, align 8
  %1284 = icmp eq %"class.v8::internal::compiler::Node"* %1283, %1272
  br i1 %1284, label %1299, label %1285

1285:                                             ; preds = %1280
  br i1 %1275, label %1288, label %1286

1286:                                             ; preds = %1285
  %1287 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1291

1288:                                             ; preds = %1285
  %1289 = inttoptr i64 %1125 to %"struct.v8::internal::compiler::Node::Use"**
  %1290 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1289, align 8
  br label %1291

1291:                                             ; preds = %1288, %1286
  %1292 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1287, %1286 ], [ %1290, %1288 ]
  %1293 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1292, i64 -1
  %1294 = icmp eq %"class.v8::internal::compiler::Node"* %1283, null
  br i1 %1294, label %1296, label %1295

1295:                                             ; preds = %1291
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1283, %"struct.v8::internal::compiler::Node::Use"* %1293) #14
  br label %1296

1296:                                             ; preds = %1295, %1291
  store %"class.v8::internal::compiler::Node"* %1272, %"class.v8::internal::compiler::Node"** %1282, align 8
  %1297 = icmp eq %"class.v8::internal::compiler::Node"* %1272, null
  br i1 %1297, label %1299, label %1298

1298:                                             ; preds = %1296
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1272, %"struct.v8::internal::compiler::Node::Use"* %1293) #14
  br label %1299

1299:                                             ; preds = %1280, %1296, %1298
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %1259) #14
  br label %1992

1300:                                             ; preds = %2
  %1301 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1302 = load i32, i32* %1301, align 4
  %1303 = and i32 %1302, 251658240
  %1304 = icmp eq i32 %1303, 251658240
  %1305 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1306 = add i64 %1305, 32
  br i1 %1304, label %1307, label %1311

1307:                                             ; preds = %1300
  %1308 = inttoptr i64 %1306 to i64*
  %1309 = load i64, i64* %1308, align 8
  %1310 = add i64 %1309, 16
  br label %1311

1311:                                             ; preds = %1300, %1307
  %1312 = phi i64 [ %1310, %1307 ], [ %1306, %1300 ]
  %1313 = inttoptr i64 %1312 to i64*
  br label %1314

1314:                                             ; preds = %1360, %1311
  %1315 = phi i64* [ %1313, %1311 ], [ %1361, %1360 ]
  %1316 = load i64, i64* %1315, align 8
  %1317 = inttoptr i64 %1316 to %"class.v8::internal::compiler::Node"*
  %1318 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1317, i64 0, i32 0
  %1319 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1318, align 8
  %1320 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1319, i64 0, i32 2
  %1321 = load i16, i16* %1320, align 8
  switch i16 %1321, label %1992 [
    i16 59, label %1322
    i16 58, label %1340
    i16 26, label %1362
  ]

1322:                                             ; preds = %1314
  %1323 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1319, i64 0, i32 5
  %1324 = load i32, i32* %1323, align 4
  %1325 = icmp sgt i32 %1324, 0
  br i1 %1325, label %1327, label %1326, !prof !2

1326:                                             ; preds = %1322
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1327:                                             ; preds = %1322
  %1328 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1317, i64 0, i32 3
  %1329 = load i32, i32* %1328, align 4
  %1330 = and i32 %1329, 251658240
  %1331 = icmp eq i32 %1330, 251658240
  %1332 = add i64 %1316, 32
  br i1 %1331, label %1333, label %1337

1333:                                             ; preds = %1327
  %1334 = inttoptr i64 %1332 to i64*
  %1335 = load i64, i64* %1334, align 8
  %1336 = add i64 %1335, 16
  br label %1337

1337:                                             ; preds = %1333, %1327
  %1338 = phi i64 [ %1336, %1333 ], [ %1332, %1327 ]
  %1339 = inttoptr i64 %1338 to i64*
  br label %1360

1340:                                             ; preds = %1314
  %1341 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1319, i64 0, i32 5
  %1342 = load i32, i32* %1341, align 4
  %1343 = icmp sgt i32 %1342, 1
  br i1 %1343, label %1345, label %1344, !prof !2

1344:                                             ; preds = %1340
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1345:                                             ; preds = %1340
  %1346 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1317, i64 0, i32 3
  %1347 = load i32, i32* %1346, align 4
  %1348 = and i32 %1347, 251658240
  %1349 = icmp eq i32 %1348, 251658240
  %1350 = add i64 %1316, 32
  br i1 %1349, label %1351, label %1355

1351:                                             ; preds = %1345
  %1352 = inttoptr i64 %1350 to i64*
  %1353 = load i64, i64* %1352, align 8
  %1354 = add i64 %1353, 16
  br label %1355

1355:                                             ; preds = %1351, %1345
  %1356 = phi i64 [ %1354, %1351 ], [ %1350, %1345 ]
  %1357 = inttoptr i64 %1356 to %"class.v8::internal::compiler::Node"**
  %1358 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1357, i64 1
  %1359 = bitcast %"class.v8::internal::compiler::Node"** %1358 to i64*
  br label %1360

1360:                                             ; preds = %1355, %1337
  %1361 = phi i64* [ %1359, %1355 ], [ %1339, %1337 ]
  br label %1314

1362:                                             ; preds = %1314
  %1363 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1319, i64 1
  %1364 = bitcast %"class.v8::internal::compiler::Operator"* %1363 to i64*
  %1365 = load i64, i64* %1364, align 8
  %1366 = bitcast i64 %1365 to double
  %1367 = fcmp ult double %1366, 0xC1E0000000000000
  %1368 = fcmp ugt double %1366, 0x41DFFFFFFFC00000
  %1369 = or i1 %1368, %1367
  %1370 = icmp eq i64 %1365, -9223372036854775808
  %1371 = or i1 %1370, %1369
  br i1 %1371, label %1992, label %1372

1372:                                             ; preds = %1362
  %1373 = fptosi double %1366 to i32
  %1374 = sitofp i32 %1373 to double
  %1375 = fcmp oeq double %1374, %1366
  br i1 %1375, label %1376, label %1992

1376:                                             ; preds = %1372
  %1377 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1378 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1377, align 8
  %1379 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1378, i64 0, i32 0
  %1380 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"* %1379, i32 %1373) #14
  %1381 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 1
  %1382 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1381, align 8
  %1383 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1382 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1384 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1383, align 8
  %1385 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1384, i64 4
  %1386 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1385, align 8
  tail call void %1386(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1382, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1380, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #14
  br label %1992

1387:                                             ; preds = %2, %2, %2
  %1388 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1389 = load i32, i32* %1388, align 4
  %1390 = and i32 %1389, 251658240
  %1391 = icmp eq i32 %1390, 251658240
  %1392 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1393 = add i64 %1392, 32
  br i1 %1391, label %1394, label %1398

1394:                                             ; preds = %1387
  %1395 = inttoptr i64 %1393 to i64*
  %1396 = load i64, i64* %1395, align 8
  %1397 = add i64 %1396, 16
  br label %1398

1398:                                             ; preds = %1387, %1394
  %1399 = phi i64 [ %1397, %1394 ], [ %1393, %1387 ]
  %1400 = inttoptr i64 %1399 to %"class.v8::internal::compiler::Node"**
  %1401 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1400, align 8
  %1402 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1401, i64 0, i32 0
  %1403 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1402, align 8
  %1404 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1403, i64 0, i32 2
  %1405 = load i16, i16* %1404, align 8
  %1406 = icmp eq i16 %1405, 220
  br i1 %1406, label %1407, label %1992

1407:                                             ; preds = %1398
  %1408 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1401, i64 0, i32 3
  %1409 = load i32, i32* %1408, align 4
  %1410 = and i32 %1409, 251658240
  %1411 = icmp eq i32 %1410, 251658240
  %1412 = ptrtoint %"class.v8::internal::compiler::Node"* %1401 to i64
  %1413 = add i64 %1412, 32
  br i1 %1411, label %1414, label %1418

1414:                                             ; preds = %1407
  %1415 = inttoptr i64 %1413 to i64*
  %1416 = load i64, i64* %1415, align 8
  %1417 = add i64 %1416, 16
  br label %1418

1418:                                             ; preds = %1407, %1414
  %1419 = phi i64 [ %1417, %1414 ], [ %1413, %1407 ]
  %1420 = inttoptr i64 %1419 to %"class.v8::internal::compiler::Node"**
  %1421 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1420, align 8
  br i1 %1391, label %1422, label %1426

1422:                                             ; preds = %1418
  %1423 = inttoptr i64 %1393 to i64*
  %1424 = load i64, i64* %1423, align 8
  %1425 = add i64 %1424, 16
  br label %1426

1426:                                             ; preds = %1418, %1422
  %1427 = phi i64 [ %1425, %1422 ], [ %1393, %1418 ]
  %1428 = inttoptr i64 %1427 to %"class.v8::internal::compiler::Node"**
  %1429 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1428, align 8
  %1430 = icmp eq %"class.v8::internal::compiler::Node"* %1429, %1421
  br i1 %1430, label %1992, label %1431

1431:                                             ; preds = %1426
  br i1 %1391, label %1434, label %1432

1432:                                             ; preds = %1431
  %1433 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1437

1434:                                             ; preds = %1431
  %1435 = inttoptr i64 %1393 to %"struct.v8::internal::compiler::Node::Use"**
  %1436 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1435, align 8
  br label %1437

1437:                                             ; preds = %1434, %1432
  %1438 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1433, %1432 ], [ %1436, %1434 ]
  %1439 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1438, i64 -1
  %1440 = icmp eq %"class.v8::internal::compiler::Node"* %1429, null
  br i1 %1440, label %1442, label %1441

1441:                                             ; preds = %1437
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1429, %"struct.v8::internal::compiler::Node::Use"* %1439) #14
  br label %1442

1442:                                             ; preds = %1441, %1437
  store %"class.v8::internal::compiler::Node"* %1421, %"class.v8::internal::compiler::Node"** %1428, align 8
  %1443 = icmp eq %"class.v8::internal::compiler::Node"* %1421, null
  br i1 %1443, label %1992, label %1444

1444:                                             ; preds = %1442
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1421, %"struct.v8::internal::compiler::Node::Use"* %1439) #14
  br label %1992

1445:                                             ; preds = %2
  %1446 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1447 = load i32, i32* %1446, align 4
  %1448 = and i32 %1447, 251658240
  %1449 = icmp eq i32 %1448, 251658240
  %1450 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1451 = add i64 %1450, 32
  br i1 %1449, label %1452, label %1456

1452:                                             ; preds = %1445
  %1453 = inttoptr i64 %1451 to i64*
  %1454 = load i64, i64* %1453, align 8
  %1455 = add i64 %1454, 16
  br label %1456

1456:                                             ; preds = %1445, %1452
  %1457 = phi i64 [ %1455, %1452 ], [ %1451, %1445 ]
  %1458 = inttoptr i64 %1457 to i64*
  br label %1459

1459:                                             ; preds = %1505, %1456
  %1460 = phi i64* [ %1458, %1456 ], [ %1506, %1505 ]
  %1461 = load i64, i64* %1460, align 8
  %1462 = inttoptr i64 %1461 to %"class.v8::internal::compiler::Node"*
  %1463 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1462, i64 0, i32 0
  %1464 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1463, align 8
  %1465 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1464, i64 0, i32 2
  %1466 = load i16, i16* %1465, align 8
  switch i16 %1466, label %1507 [
    i16 59, label %1467
    i16 58, label %1485
  ]

1467:                                             ; preds = %1459
  %1468 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1464, i64 0, i32 5
  %1469 = load i32, i32* %1468, align 4
  %1470 = icmp sgt i32 %1469, 0
  br i1 %1470, label %1472, label %1471, !prof !2

1471:                                             ; preds = %1467
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1472:                                             ; preds = %1467
  %1473 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1462, i64 0, i32 3
  %1474 = load i32, i32* %1473, align 4
  %1475 = and i32 %1474, 251658240
  %1476 = icmp eq i32 %1475, 251658240
  %1477 = add i64 %1461, 32
  br i1 %1476, label %1478, label %1482

1478:                                             ; preds = %1472
  %1479 = inttoptr i64 %1477 to i64*
  %1480 = load i64, i64* %1479, align 8
  %1481 = add i64 %1480, 16
  br label %1482

1482:                                             ; preds = %1478, %1472
  %1483 = phi i64 [ %1481, %1478 ], [ %1477, %1472 ]
  %1484 = inttoptr i64 %1483 to i64*
  br label %1505

1485:                                             ; preds = %1459
  %1486 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1464, i64 0, i32 5
  %1487 = load i32, i32* %1486, align 4
  %1488 = icmp sgt i32 %1487, 1
  br i1 %1488, label %1490, label %1489, !prof !2

1489:                                             ; preds = %1485
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1490:                                             ; preds = %1485
  %1491 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1462, i64 0, i32 3
  %1492 = load i32, i32* %1491, align 4
  %1493 = and i32 %1492, 251658240
  %1494 = icmp eq i32 %1493, 251658240
  %1495 = add i64 %1461, 32
  br i1 %1494, label %1496, label %1500

1496:                                             ; preds = %1490
  %1497 = inttoptr i64 %1495 to i64*
  %1498 = load i64, i64* %1497, align 8
  %1499 = add i64 %1498, 16
  br label %1500

1500:                                             ; preds = %1496, %1490
  %1501 = phi i64 [ %1499, %1496 ], [ %1495, %1490 ]
  %1502 = inttoptr i64 %1501 to %"class.v8::internal::compiler::Node"**
  %1503 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1502, i64 1
  %1504 = bitcast %"class.v8::internal::compiler::Node"** %1503 to i64*
  br label %1505

1505:                                             ; preds = %1500, %1482
  %1506 = phi i64* [ %1504, %1500 ], [ %1484, %1482 ]
  br label %1459

1507:                                             ; preds = %1459
  %1508 = icmp eq i16 %1466, 30
  br i1 %1508, label %1509, label %1513

1509:                                             ; preds = %1507
  %1510 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1464, i64 1
  %1511 = bitcast %"class.v8::internal::compiler::Operator"* %1510 to i64*
  %1512 = load i64, i64* %1511, align 8
  br label %1513

1513:                                             ; preds = %1507, %1509
  %1514 = phi i64 [ %1512, %1509 ], [ 0, %1507 ]
  %1515 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1516 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1515, align 8
  %1517 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1516, i64 0, i32 1
  %1518 = bitcast %"class.v8::internal::Isolate"** %1517 to %"class.v8::internal::Factory"**
  %1519 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %1518, align 8
  %1520 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1519, i64 184
  %1521 = ptrtoint %"class.v8::internal::Factory"* %1520 to i64
  %1522 = icmp eq i64 %1514, %1521
  %1523 = and i1 %1508, %1522
  br i1 %1523, label %1524, label %1992

1524:                                             ; preds = %1513
  %1525 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 6
  %1526 = load i32, i32* %1525, align 8
  %1527 = icmp sgt i32 %1526, 0
  br i1 %1527, label %1529, label %1528, !prof !2

1528:                                             ; preds = %1524
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

1529:                                             ; preds = %1524
  %1530 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 5
  %1531 = load i32, i32* %1530, align 4
  %1532 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %11) #14
  %1533 = zext i1 %1532 to i32
  %1534 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %1535 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1534) #14
  %1536 = zext i1 %1535 to i32
  %1537 = add i32 %1531, %1533
  %1538 = add i32 %1537, %1536
  %1539 = load i32, i32* %1446, align 4
  %1540 = and i32 %1539, 251658240
  %1541 = icmp eq i32 %1540, 251658240
  br i1 %1541, label %1542, label %1546

1542:                                             ; preds = %1529
  %1543 = inttoptr i64 %1451 to i64*
  %1544 = load i64, i64* %1543, align 8
  %1545 = add i64 %1544, 16
  br label %1546

1546:                                             ; preds = %1529, %1542
  %1547 = phi i64 [ %1545, %1542 ], [ %1451, %1529 ]
  %1548 = inttoptr i64 %1547 to %"class.v8::internal::compiler::Node"**
  %1549 = sext i32 %1538 to i64
  %1550 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1548, i64 %1549
  %1551 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1550, align 8
  br label %1992

1552:                                             ; preds = %2
  %1553 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1554 = load i32, i32* %1553, align 4
  %1555 = and i32 %1554, 251658240
  %1556 = icmp eq i32 %1555, 251658240
  %1557 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1558 = add i64 %1557, 32
  br i1 %1556, label %1559, label %1563

1559:                                             ; preds = %1552
  %1560 = inttoptr i64 %1558 to i64*
  %1561 = load i64, i64* %1560, align 8
  %1562 = add i64 %1561, 16
  br label %1563

1563:                                             ; preds = %1552, %1559
  %1564 = phi i64 [ %1562, %1559 ], [ %1558, %1552 ]
  %1565 = inttoptr i64 %1564 to %"class.v8::internal::compiler::Node"**
  %1566 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1565, align 8
  %1567 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1566, i64 0, i32 0
  %1568 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1567, align 8
  %1569 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1568, i64 0, i32 2
  %1570 = load i16, i16* %1569, align 8
  %1571 = icmp eq i16 %1570, 220
  br i1 %1571, label %1572, label %1992

1572:                                             ; preds = %1563
  %1573 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1566, i64 0, i32 3
  %1574 = load i32, i32* %1573, align 4
  %1575 = and i32 %1574, 251658240
  %1576 = icmp eq i32 %1575, 251658240
  %1577 = ptrtoint %"class.v8::internal::compiler::Node"* %1566 to i64
  %1578 = add i64 %1577, 32
  br i1 %1576, label %1579, label %1583

1579:                                             ; preds = %1572
  %1580 = inttoptr i64 %1578 to i64*
  %1581 = load i64, i64* %1580, align 8
  %1582 = add i64 %1581, 16
  br label %1583

1583:                                             ; preds = %1572, %1579
  %1584 = phi i64 [ %1582, %1579 ], [ %1578, %1572 ]
  %1585 = inttoptr i64 %1584 to %"class.v8::internal::compiler::Node"**
  %1586 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1585, align 8
  br i1 %1556, label %1587, label %1591

1587:                                             ; preds = %1583
  %1588 = inttoptr i64 %1558 to i64*
  %1589 = load i64, i64* %1588, align 8
  %1590 = add i64 %1589, 16
  br label %1591

1591:                                             ; preds = %1583, %1587
  %1592 = phi i64 [ %1590, %1587 ], [ %1558, %1583 ]
  %1593 = inttoptr i64 %1592 to %"class.v8::internal::compiler::Node"**
  %1594 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1593, align 8
  %1595 = icmp eq %"class.v8::internal::compiler::Node"* %1594, %1586
  br i1 %1595, label %1992, label %1596

1596:                                             ; preds = %1591
  br i1 %1556, label %1599, label %1597

1597:                                             ; preds = %1596
  %1598 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1602

1599:                                             ; preds = %1596
  %1600 = inttoptr i64 %1558 to %"struct.v8::internal::compiler::Node::Use"**
  %1601 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1600, align 8
  br label %1602

1602:                                             ; preds = %1599, %1597
  %1603 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1598, %1597 ], [ %1601, %1599 ]
  %1604 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1603, i64 -1
  %1605 = icmp eq %"class.v8::internal::compiler::Node"* %1594, null
  br i1 %1605, label %1607, label %1606

1606:                                             ; preds = %1602
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1594, %"struct.v8::internal::compiler::Node::Use"* %1604) #14
  br label %1607

1607:                                             ; preds = %1606, %1602
  store %"class.v8::internal::compiler::Node"* %1586, %"class.v8::internal::compiler::Node"** %1593, align 8
  %1608 = icmp eq %"class.v8::internal::compiler::Node"* %1586, null
  br i1 %1608, label %1992, label %1609

1609:                                             ; preds = %1607
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1586, %"struct.v8::internal::compiler::Node::Use"* %1604) #14
  br label %1992

1610:                                             ; preds = %2
  %1611 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1612 = load i32, i32* %1611, align 4
  %1613 = and i32 %1612, 251658240
  %1614 = icmp eq i32 %1613, 251658240
  %1615 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1616 = add i64 %1615, 32
  br i1 %1614, label %1617, label %1621

1617:                                             ; preds = %1610
  %1618 = inttoptr i64 %1616 to i64*
  %1619 = load i64, i64* %1618, align 8
  %1620 = add i64 %1619, 16
  br label %1621

1621:                                             ; preds = %1610, %1617
  %1622 = phi i64 [ %1620, %1617 ], [ %1616, %1610 ]
  %1623 = inttoptr i64 %1622 to %"class.v8::internal::compiler::Node"**
  %1624 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1623, align 8
  %1625 = tail call fastcc zeroext i8 @_ZN2v88internal8compiler12_GLOBAL__N_117DecideObjectIsSmiEPNS1_4NodeE(%"class.v8::internal::compiler::Node"* %1624)
  %1626 = icmp eq i8 %1625, 2
  br i1 %1626, label %1627, label %1634

1627:                                             ; preds = %1621
  %1628 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 1
  %1629 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1628, align 8
  %1630 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1629 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1631 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1630, align 8
  %1632 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1631, i64 4
  %1633 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1632, align 8
  tail call void %1633(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1629, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1624, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #14
  br label %1992

1634:                                             ; preds = %1621
  %1635 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1624, i64 0, i32 0
  %1636 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1635, align 8
  %1637 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1636, i64 0, i32 2
  %1638 = load i16, i16* %1637, align 8
  %1639 = icmp eq i16 %1638, 207
  br i1 %1639, label %1640, label %1992

1640:                                             ; preds = %1634
  %1641 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 1
  %1642 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1641, align 8
  %1643 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1642 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1644 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1643, align 8
  %1645 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1644, i64 4
  %1646 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1645, align 8
  tail call void %1646(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1642, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1624, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #14
  br label %1992

1647:                                             ; preds = %2
  %1648 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1649 = load i32, i32* %1648, align 4
  %1650 = and i32 %1649, 251658240
  %1651 = icmp eq i32 %1650, 251658240
  %1652 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1653 = add i64 %1652, 32
  br i1 %1651, label %1654, label %1658

1654:                                             ; preds = %1647
  %1655 = inttoptr i64 %1653 to i64*
  %1656 = load i64, i64* %1655, align 8
  %1657 = add i64 %1656, 16
  br label %1658

1658:                                             ; preds = %1647, %1654
  %1659 = phi i64 [ %1657, %1654 ], [ %1653, %1647 ]
  %1660 = inttoptr i64 %1659 to %"class.v8::internal::compiler::Node"**
  %1661 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1660, align 8
  %1662 = tail call fastcc zeroext i8 @_ZN2v88internal8compiler12_GLOBAL__N_117DecideObjectIsSmiEPNS1_4NodeE(%"class.v8::internal::compiler::Node"* %1661)
  %1663 = icmp eq i8 %1662, 1
  br i1 %1663, label %1664, label %1671

1664:                                             ; preds = %1658
  %1665 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 1
  %1666 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1665, align 8
  %1667 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1666 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1668 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1667, align 8
  %1669 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1668, i64 4
  %1670 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1669, align 8
  tail call void %1670(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1666, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1661, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #14
  br label %1992

1671:                                             ; preds = %1658
  %1672 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1661, i64 0, i32 0
  %1673 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1672, align 8
  %1674 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1673, i64 0, i32 2
  %1675 = load i16, i16* %1674, align 8
  switch i16 %1675, label %1992 [
    i16 215, label %1676
    i16 220, label %1683
  ]

1676:                                             ; preds = %1671
  %1677 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 1
  %1678 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1677, align 8
  %1679 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1678 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1680 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1679, align 8
  %1681 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1680, i64 4
  %1682 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1681, align 8
  tail call void %1682(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1678, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1661, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #14
  br label %1992

1683:                                             ; preds = %1671
  %1684 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1661, i64 0, i32 3
  %1685 = load i32, i32* %1684, align 4
  %1686 = and i32 %1685, 251658240
  %1687 = icmp eq i32 %1686, 251658240
  %1688 = ptrtoint %"class.v8::internal::compiler::Node"* %1661 to i64
  %1689 = add i64 %1688, 32
  br i1 %1687, label %1690, label %1694

1690:                                             ; preds = %1683
  %1691 = inttoptr i64 %1689 to i64*
  %1692 = load i64, i64* %1691, align 8
  %1693 = add i64 %1692, 16
  br label %1694

1694:                                             ; preds = %1683, %1690
  %1695 = phi i64 [ %1693, %1690 ], [ %1689, %1683 ]
  %1696 = inttoptr i64 %1695 to %"class.v8::internal::compiler::Node"**
  %1697 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1696, align 8
  %1698 = load i32, i32* %1648, align 4
  %1699 = and i32 %1698, 251658240
  %1700 = icmp eq i32 %1699, 251658240
  br i1 %1700, label %1701, label %1705

1701:                                             ; preds = %1694
  %1702 = inttoptr i64 %1653 to i64*
  %1703 = load i64, i64* %1702, align 8
  %1704 = add i64 %1703, 16
  br label %1705

1705:                                             ; preds = %1694, %1701
  %1706 = phi i64 [ %1704, %1701 ], [ %1653, %1694 ]
  %1707 = inttoptr i64 %1706 to %"class.v8::internal::compiler::Node"**
  %1708 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1707, align 8
  %1709 = icmp eq %"class.v8::internal::compiler::Node"* %1708, %1697
  br i1 %1709, label %1992, label %1710

1710:                                             ; preds = %1705
  br i1 %1700, label %1713, label %1711

1711:                                             ; preds = %1710
  %1712 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1716

1713:                                             ; preds = %1710
  %1714 = inttoptr i64 %1653 to %"struct.v8::internal::compiler::Node::Use"**
  %1715 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1714, align 8
  br label %1716

1716:                                             ; preds = %1713, %1711
  %1717 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1712, %1711 ], [ %1715, %1713 ]
  %1718 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1717, i64 -1
  %1719 = icmp eq %"class.v8::internal::compiler::Node"* %1708, null
  br i1 %1719, label %1721, label %1720

1720:                                             ; preds = %1716
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1708, %"struct.v8::internal::compiler::Node::Use"* %1718) #14
  br label %1721

1721:                                             ; preds = %1720, %1716
  store %"class.v8::internal::compiler::Node"* %1697, %"class.v8::internal::compiler::Node"** %1707, align 8
  %1722 = icmp eq %"class.v8::internal::compiler::Node"* %1697, null
  br i1 %1722, label %1992, label %1723

1723:                                             ; preds = %1721
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1697, %"struct.v8::internal::compiler::Node::Use"* %1718) #14
  br label %1992

1724:                                             ; preds = %2
  %1725 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1726 = load i32, i32* %1725, align 4
  %1727 = and i32 %1726, 251658240
  %1728 = icmp eq i32 %1727, 251658240
  %1729 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1730 = add i64 %1729, 32
  br i1 %1728, label %1731, label %1735

1731:                                             ; preds = %1724
  %1732 = inttoptr i64 %1730 to i64*
  %1733 = load i64, i64* %1732, align 8
  %1734 = add i64 %1733, 16
  br label %1735

1735:                                             ; preds = %1724, %1731
  %1736 = phi i64 [ %1734, %1731 ], [ %1730, %1724 ]
  %1737 = inttoptr i64 %1736 to %"class.v8::internal::compiler::Node"**
  %1738 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1737, align 8
  %1739 = tail call fastcc zeroext i8 @_ZN2v88internal8compiler12_GLOBAL__N_117DecideObjectIsSmiEPNS1_4NodeE(%"class.v8::internal::compiler::Node"* %1738)
  switch i8 %1739, label %1992 [
    i8 1, label %1740
    i8 2, label %1744
  ]

1740:                                             ; preds = %1735
  %1741 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1742 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1741, align 8
  %1743 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %1742) #14
  br label %1992

1744:                                             ; preds = %1735
  %1745 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1746 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1745, align 8
  %1747 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %1746) #14
  br label %1992

1748:                                             ; preds = %2
  %1749 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1750 = load i32, i32* %1749, align 4
  %1751 = and i32 %1750, 251658240
  %1752 = icmp eq i32 %1751, 251658240
  %1753 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1754 = add i64 %1753, 32
  br i1 %1752, label %1755, label %1759

1755:                                             ; preds = %1748
  %1756 = inttoptr i64 %1754 to i64*
  %1757 = load i64, i64* %1756, align 8
  %1758 = add i64 %1757, 16
  br label %1759

1759:                                             ; preds = %1748, %1755
  %1760 = phi i64 [ %1758, %1755 ], [ %1754, %1748 ]
  %1761 = inttoptr i64 %1760 to i64*
  br label %1762

1762:                                             ; preds = %1808, %1759
  %1763 = phi i64* [ %1761, %1759 ], [ %1809, %1808 ]
  %1764 = load i64, i64* %1763, align 8
  %1765 = inttoptr i64 %1764 to %"class.v8::internal::compiler::Node"*
  %1766 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1765, i64 0, i32 0
  %1767 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1766, align 8
  %1768 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1767, i64 0, i32 2
  %1769 = load i16, i16* %1768, align 8
  switch i16 %1769, label %1992 [
    i16 59, label %1770
    i16 58, label %1788
    i16 28, label %1810
  ]

1770:                                             ; preds = %1762
  %1771 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1767, i64 0, i32 5
  %1772 = load i32, i32* %1771, align 4
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1775, label %1774, !prof !2

1774:                                             ; preds = %1770
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1775:                                             ; preds = %1770
  %1776 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1765, i64 0, i32 3
  %1777 = load i32, i32* %1776, align 4
  %1778 = and i32 %1777, 251658240
  %1779 = icmp eq i32 %1778, 251658240
  %1780 = add i64 %1764, 32
  br i1 %1779, label %1781, label %1785

1781:                                             ; preds = %1775
  %1782 = inttoptr i64 %1780 to i64*
  %1783 = load i64, i64* %1782, align 8
  %1784 = add i64 %1783, 16
  br label %1785

1785:                                             ; preds = %1781, %1775
  %1786 = phi i64 [ %1784, %1781 ], [ %1780, %1775 ]
  %1787 = inttoptr i64 %1786 to i64*
  br label %1808

1788:                                             ; preds = %1762
  %1789 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1767, i64 0, i32 5
  %1790 = load i32, i32* %1789, align 4
  %1791 = icmp sgt i32 %1790, 1
  br i1 %1791, label %1793, label %1792, !prof !2

1792:                                             ; preds = %1788
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1793:                                             ; preds = %1788
  %1794 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1765, i64 0, i32 3
  %1795 = load i32, i32* %1794, align 4
  %1796 = and i32 %1795, 251658240
  %1797 = icmp eq i32 %1796, 251658240
  %1798 = add i64 %1764, 32
  br i1 %1797, label %1799, label %1803

1799:                                             ; preds = %1793
  %1800 = inttoptr i64 %1798 to i64*
  %1801 = load i64, i64* %1800, align 8
  %1802 = add i64 %1801, 16
  br label %1803

1803:                                             ; preds = %1799, %1793
  %1804 = phi i64 [ %1802, %1799 ], [ %1798, %1793 ]
  %1805 = inttoptr i64 %1804 to %"class.v8::internal::compiler::Node"**
  %1806 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1805, i64 1
  %1807 = bitcast %"class.v8::internal::compiler::Node"** %1806 to i64*
  br label %1808

1808:                                             ; preds = %1803, %1785
  %1809 = phi i64* [ %1807, %1803 ], [ %1787, %1785 ]
  br label %1762

1810:                                             ; preds = %1762
  %1811 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1767, i64 1
  %1812 = bitcast %"class.v8::internal::compiler::Operator"* %1811 to double*
  %1813 = load double, double* %1812, align 8
  %1814 = tail call double @llvm.fabs.f64(double %1813)
  %1815 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1816 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1815, align 8
  %1817 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %1816, double %1814) #14
  br label %1992

1818:                                             ; preds = %2
  %1819 = bitcast %"struct.v8::internal::compiler::BinopMatcher"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1819) #14
  call void @_ZN2v88internal8compiler12BinopMatcherINS1_21HeapObjectMatcherImplILNS1_8IrOpcode5ValueE30EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher"* nonnull %5, %"class.v8::internal::compiler::Node"* %1)
  %1820 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %1821 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1820, align 8
  %1822 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %1823 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1822, align 8
  %1824 = icmp eq %"class.v8::internal::compiler::Node"* %1821, %1823
  br i1 %1824, label %1826, label %1825

1825:                                             ; preds = %1818
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1819) #14
  br label %1992

1826:                                             ; preds = %1818
  %1827 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1828 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1827, align 8
  %1829 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %1828) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1819) #14
  br label %1992

1830:                                             ; preds = %2
  %1831 = bitcast %"struct.v8::internal::compiler::BinopMatcher.1381"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1831) #14
  call void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher.1381"* nonnull %6, %"class.v8::internal::compiler::Node"* %1)
  %1832 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %6, i64 0, i32 2, i32 0, i32 2
  %1833 = load i8, i8* %1832, align 4, !range !3
  %1834 = icmp eq i8 %1833, 0
  br i1 %1834, label %1984, label %1835

1835:                                             ; preds = %1830
  %1836 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %1837 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1836, align 8
  %1838 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1837, i64 0, i32 0
  %1839 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1838, align 8
  %1840 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1839, i64 0, i32 2
  %1841 = load i16, i16* %1840, align 8
  %1842 = icmp eq i16 %1841, 86
  br i1 %1842, label %1843, label %1984

1843:                                             ; preds = %1835
  %1844 = bitcast %"struct.v8::internal::compiler::BinopMatcher.1381"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1844) #14
  call void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher.1381"* nonnull %7, %"class.v8::internal::compiler::Node"* %1837)
  %1845 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %7, i64 0, i32 2, i32 0, i32 2
  %1846 = load i8, i8* %1845, align 4, !range !3
  %1847 = icmp eq i8 %1846, 0
  br i1 %1847, label %1983, label %1848

1848:                                             ; preds = %1843
  %1849 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %7, i64 0, i32 2, i32 0, i32 1
  %1850 = load i32, i32* %1849, align 8
  %1851 = load i8, i8* %1832, align 4, !range !3
  %1852 = icmp eq i8 %1851, 0
  br i1 %1852, label %1853, label %1854, !prof !4

1853:                                             ; preds = %1848
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

1854:                                             ; preds = %1848
  %1855 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %6, i64 0, i32 2, i32 0, i32 1
  %1856 = load i32, i32* %1855, align 8
  %1857 = xor i32 %1856, %1850
  %1858 = icmp sgt i32 %1857, -1
  br i1 %1858, label %1859, label %1983

1859:                                             ; preds = %1854
  %1860 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1850, i32 %1856) #14
  %1861 = extractvalue { i32, i1 } %1860, 1
  %1862 = extractvalue { i32, i1 } %1860, 0
  br i1 %1861, label %1983, label %1863

1863:                                             ; preds = %1859
  %1864 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1837, i64 0, i32 4
  %1865 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1864, align 8
  %1866 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %1865, null
  br i1 %1866, label %1919, label %1867

1867:                                             ; preds = %1863, %1917
  %1868 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1870, %1917 ], [ %1865, %1863 ]
  %1869 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1868, i64 0, i32 0
  %1870 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1869, align 8
  %1871 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1868, i64 0, i32 2
  %1872 = load i32, i32* %1871, align 8
  %1873 = lshr i32 %1872, 1
  %1874 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1868, i64 1
  %1875 = zext i32 %1873 to i64
  %1876 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1874, i64 %1875
  %1877 = and i32 %1872, 1
  %1878 = icmp eq i32 %1877, 0
  br i1 %1878, label %1881, label %1879

1879:                                             ; preds = %1867
  %1880 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1876 to %"class.v8::internal::compiler::Node"*
  br label %1884

1881:                                             ; preds = %1867
  %1882 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1876 to %"class.v8::internal::compiler::Node"**
  %1883 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1882, align 8
  br label %1884

1884:                                             ; preds = %1879, %1881
  %1885 = phi %"class.v8::internal::compiler::Node"* [ %1880, %1879 ], [ %1883, %1881 ]
  %1886 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1885, i64 0, i32 3
  %1887 = load i32, i32* %1886, align 4
  %1888 = lshr i32 %1887, 24
  %1889 = and i32 %1888, 15
  %1890 = icmp eq i32 %1889, 15
  %1891 = ptrtoint %"class.v8::internal::compiler::Node"* %1885 to i64
  %1892 = add i64 %1891, 32
  br i1 %1890, label %1893, label %1900

1893:                                             ; preds = %1884
  %1894 = inttoptr i64 %1892 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %1895 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %1894, align 8
  %1896 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %1895 to i64
  %1897 = add i64 %1896, 16
  %1898 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %1895, i64 0, i32 1
  %1899 = load i32, i32* %1898, align 8
  br label %1900

1900:                                             ; preds = %1893, %1884
  %1901 = phi i32 [ %1899, %1893 ], [ %1889, %1884 ]
  %1902 = phi i64 [ %1897, %1893 ], [ %1892, %1884 ]
  %1903 = icmp sgt i32 %1901, 0
  br i1 %1903, label %1904, label %1908

1904:                                             ; preds = %1900
  %1905 = inttoptr i64 %1902 to %"class.v8::internal::compiler::Node"**
  %1906 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1905, align 8
  %1907 = icmp eq %"class.v8::internal::compiler::Node"* %1906, null
  br i1 %1907, label %1917, label %1908

1908:                                             ; preds = %1900, %1904
  br i1 %1878, label %1911, label %1909

1909:                                             ; preds = %1908
  %1910 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1876 to %"class.v8::internal::compiler::Node"*
  br label %1914

1911:                                             ; preds = %1908
  %1912 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1876 to %"class.v8::internal::compiler::Node"**
  %1913 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1912, align 8
  br label %1914

1914:                                             ; preds = %1909, %1911
  %1915 = phi %"class.v8::internal::compiler::Node"* [ %1910, %1909 ], [ %1913, %1911 ]
  %1916 = icmp eq %"class.v8::internal::compiler::Node"* %1915, %1
  br i1 %1916, label %1917, label %1983

1917:                                             ; preds = %1904, %1914
  %1918 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %1870, null
  br i1 %1918, label %1919, label %1867

1919:                                             ; preds = %1917, %1863
  %1920 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %1921 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1920, align 8
  %1922 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %1923 = load i32, i32* %1922, align 4
  %1924 = and i32 %1923, 251658240
  %1925 = icmp eq i32 %1924, 251658240
  %1926 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1927 = add i64 %1926, 32
  br i1 %1925, label %1928, label %1932

1928:                                             ; preds = %1919
  %1929 = inttoptr i64 %1927 to i64*
  %1930 = load i64, i64* %1929, align 8
  %1931 = add i64 %1930, 16
  br label %1932

1932:                                             ; preds = %1919, %1928
  %1933 = phi i64 [ %1931, %1928 ], [ %1927, %1919 ]
  %1934 = inttoptr i64 %1933 to %"class.v8::internal::compiler::Node"**
  %1935 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1934, align 8
  %1936 = icmp eq %"class.v8::internal::compiler::Node"* %1935, %1921
  br i1 %1936, label %1951, label %1937

1937:                                             ; preds = %1932
  br i1 %1925, label %1940, label %1938

1938:                                             ; preds = %1937
  %1939 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1943

1940:                                             ; preds = %1937
  %1941 = inttoptr i64 %1927 to %"struct.v8::internal::compiler::Node::Use"**
  %1942 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1941, align 8
  br label %1943

1943:                                             ; preds = %1940, %1938
  %1944 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1939, %1938 ], [ %1942, %1940 ]
  %1945 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1944, i64 -1
  %1946 = icmp eq %"class.v8::internal::compiler::Node"* %1935, null
  br i1 %1946, label %1948, label %1947

1947:                                             ; preds = %1943
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1935, %"struct.v8::internal::compiler::Node::Use"* %1945) #14
  br label %1948

1948:                                             ; preds = %1947, %1943
  store %"class.v8::internal::compiler::Node"* %1921, %"class.v8::internal::compiler::Node"** %1934, align 8
  %1949 = icmp eq %"class.v8::internal::compiler::Node"* %1921, null
  br i1 %1949, label %1951, label %1950

1950:                                             ; preds = %1948
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1921, %"struct.v8::internal::compiler::Node::Use"* %1945) #14
  br label %1951

1951:                                             ; preds = %1932, %1948, %1950
  %1952 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %1953 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1952, align 8
  %1954 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1953, i64 0, i32 0
  %1955 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"* %1954, i32 %1862) #14
  %1956 = load i32, i32* %1922, align 4
  %1957 = and i32 %1956, 251658240
  %1958 = icmp eq i32 %1957, 251658240
  br i1 %1958, label %1959, label %1963

1959:                                             ; preds = %1951
  %1960 = inttoptr i64 %1927 to i64*
  %1961 = load i64, i64* %1960, align 8
  %1962 = add i64 %1961, 16
  br label %1963

1963:                                             ; preds = %1951, %1959
  %1964 = phi i64 [ %1962, %1959 ], [ %1927, %1951 ]
  %1965 = inttoptr i64 %1964 to %"class.v8::internal::compiler::Node"**
  %1966 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1965, i64 1
  %1967 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1966, align 8
  %1968 = icmp eq %"class.v8::internal::compiler::Node"* %1967, %1955
  br i1 %1968, label %1985, label %1969

1969:                                             ; preds = %1963
  br i1 %1958, label %1972, label %1970

1970:                                             ; preds = %1969
  %1971 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1975

1972:                                             ; preds = %1969
  %1973 = inttoptr i64 %1927 to %"struct.v8::internal::compiler::Node::Use"**
  %1974 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1973, align 8
  br label %1975

1975:                                             ; preds = %1972, %1970
  %1976 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1971, %1970 ], [ %1974, %1972 ]
  %1977 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1976, i64 -2
  %1978 = icmp eq %"class.v8::internal::compiler::Node"* %1967, null
  br i1 %1978, label %1980, label %1979

1979:                                             ; preds = %1975
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1967, %"struct.v8::internal::compiler::Node::Use"* %1977) #14
  br label %1980

1980:                                             ; preds = %1979, %1975
  store %"class.v8::internal::compiler::Node"* %1955, %"class.v8::internal::compiler::Node"** %1966, align 8
  %1981 = icmp eq %"class.v8::internal::compiler::Node"* %1955, null
  br i1 %1981, label %1985, label %1982

1982:                                             ; preds = %1980
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1955, %"struct.v8::internal::compiler::Node::Use"* %1977) #14
  br label %1985

1983:                                             ; preds = %1914, %1843, %1854, %1859
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1844) #14
  br label %1984

1984:                                             ; preds = %1830, %1983, %1835
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1831) #14
  br label %1992

1985:                                             ; preds = %1982, %1980, %1963
  %1986 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 0, i32 1
  %1987 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1986, align 8
  %1988 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1987 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1989 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1988, align 8
  %1990 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1989, i64 4
  %1991 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1990, align 8
  call void %1991(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1987, %"class.v8::internal::compiler::Node"* %1837, %"class.v8::internal::compiler::Node"* %1837, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1844) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1831) #14
  br label %1992

1992:                                             ; preds = %1762, %1314, %1063, %1671, %1513, %1235, %984, %803, %576, %485, %1740, %1744, %1723, %1721, %1705, %1676, %1664, %1640, %1627, %1609, %1607, %1591, %1444, %1442, %1426, %1362, %1372, %1299, %1250, %1229, %1045, %1034, %978, %864, %853, %797, %686, %640, %591, %568, %500, %477, %409, %386, %295, %318, %210, %190, %186, %114, %96, %90, %2, %98, %194, %302, %393, %1398, %1563, %1634, %1735, %1825, %1984, %1985, %1826, %1810, %1546, %1376, %1111
  %1993 = phi %"class.v8::internal::compiler::Node"* [ %1, %1985 ], [ %1829, %1826 ], [ %1817, %1810 ], [ %1551, %1546 ], [ %1380, %1376 ], [ %1118, %1111 ], [ null, %1984 ], [ null, %1825 ], [ null, %1735 ], [ null, %1634 ], [ null, %1563 ], [ null, %1398 ], [ null, %393 ], [ null, %302 ], [ null, %194 ], [ null, %98 ], [ null, %2 ], [ %117, %114 ], [ %97, %96 ], [ %91, %90 ], [ %213, %210 ], [ %193, %190 ], [ %189, %186 ], [ %301, %295 ], [ %321, %318 ], [ %412, %409 ], [ %392, %386 ], [ %503, %500 ], [ %484, %477 ], [ %1, %686 ], [ %1, %640 ], [ %594, %591 ], [ %575, %568 ], [ %867, %864 ], [ %1, %853 ], [ %802, %797 ], [ %1048, %1045 ], [ %1, %1034 ], [ %983, %978 ], [ %1, %1299 ], [ %1253, %1250 ], [ %1234, %1229 ], [ null, %1372 ], [ null, %1362 ], [ %1, %1426 ], [ %1, %1442 ], [ %1, %1444 ], [ null, %1513 ], [ %1, %1591 ], [ %1, %1607 ], [ %1, %1609 ], [ %1624, %1627 ], [ %1624, %1640 ], [ %1, %1723 ], [ %1, %1721 ], [ %1, %1705 ], [ %1661, %1676 ], [ %1661, %1664 ], [ %1743, %1740 ], [ %1747, %1744 ], [ null, %485 ], [ null, %576 ], [ null, %803 ], [ null, %984 ], [ null, %1235 ], [ null, %1671 ], [ null, %1063 ], [ null, %1314 ], [ null, %1762 ]
  ret %"class.v8::internal::compiler::Node"* %1993
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Factory"* @_ZNK2v88internal8compiler25SimplifiedOperatorReducer7factoryEv(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 1
  %5 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %6 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %5, align 8
  ret %"class.v8::internal::Factory"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler25SimplifiedOperatorReducer14ReplaceBooleanEb(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %3, align 8
  br i1 %1, label %5, label %7

5:                                                ; preds = %2
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %4) #14
  br label %9

7:                                                ; preds = %2
  %8 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %4) #14
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi %"class.v8::internal::compiler::Node"* [ %6, %5 ], [ %8, %7 ]
  ret %"class.v8::internal::compiler::Node"* %10
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #6

declare i16 @_ZNK2v88internal8compiler9ObjectRef18TryGetBooleanValueEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler25SimplifiedOperatorReducer12ReplaceInt32Ei(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %4, i64 0, i32 0
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"* %5, i32 %1) #14
  ret %"class.v8::internal::compiler::Node"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler25SimplifiedOperatorReducer13ReplaceNumberEd(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly, double) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %3, align 8
  %5 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %4, double %1) #14
  ret %"class.v8::internal::compiler::Node"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler25SimplifiedOperatorReducer13ReplaceNumberEi(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %3, align 8
  %5 = sitofp i32 %1 to double
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %4, double %5) #14
  ret %"class.v8::internal::compiler::Node"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler25SimplifiedOperatorReducer14ReplaceFloat64Ed(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly, double) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %4, i64 0, i32 0
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph15Float64ConstantEd(%"class.v8::internal::compiler::MachineGraph"* %5, double %1) #14
  ret %"class.v8::internal::compiler::Node"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler25SimplifiedOperatorReducer6ChangeEPNS1_4NodeEPKNS1_8OperatorES4_(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readnone, %"class.v8::internal::compiler::Node"* returned, %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 251658240
  %8 = icmp eq i32 %7, 251658240
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %10 = add i64 %9, 32
  br i1 %8, label %11, label %15

11:                                               ; preds = %4
  %12 = inttoptr i64 %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 16
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi i64 [ %14, %11 ], [ %10, %4 ]
  %17 = inttoptr i64 %16 to %"class.v8::internal::compiler::Node"**
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::Node"* %18, %3
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  br i1 %8, label %23, label %21

21:                                               ; preds = %20
  %22 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %26

23:                                               ; preds = %20
  %24 = inttoptr i64 %10 to %"struct.v8::internal::compiler::Node::Use"**
  %25 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %24, align 8
  br label %26

26:                                               ; preds = %23, %21
  %27 = phi %"struct.v8::internal::compiler::Node::Use"* [ %22, %21 ], [ %25, %23 ]
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %27, i64 -1
  %29 = icmp eq %"class.v8::internal::compiler::Node"* %18, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %18, %"struct.v8::internal::compiler::Node::Use"* %28) #14
  br label %31

31:                                               ; preds = %30, %26
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %17, align 8
  %32 = icmp eq %"class.v8::internal::compiler::Node"* %3, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %3, %"struct.v8::internal::compiler::Node::Use"* %28) #14
  br label %34

34:                                               ; preds = %15, %31, %33
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %2) #14
  ret %"class.v8::internal::compiler::Node"* %1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::MachineOperatorBuilder"* @_ZNK2v88internal8compiler25SimplifiedOperatorReducer7machineEv(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 2
  %5 = load %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"** %4, align 8
  ret %"class.v8::internal::compiler::MachineOperatorBuilder"* %5
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder20ChangeInt32ToFloat64Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder21ChangeUint32ToFloat64Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder20ChangeFloat64ToInt32Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder21ChangeFloat64ToUint32Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder23TruncateFloat64ToWord32Ev(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph13Int32ConstantEi(%"class.v8::internal::compiler::MachineGraph"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i8 @_ZN2v88internal8compiler12_GLOBAL__N_117DecideObjectIsSmiEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) unnamed_addr #2 {
  %2 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  br label %3

3:                                                ; preds = %48, %1
  %4 = phi i64 [ %2, %1 ], [ %50, %48 ]
  %5 = inttoptr i64 %4 to %"class.v8::internal::compiler::Node"*
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 2
  %9 = load i16, i16* %8, align 8
  switch i16 %9, label %66 [
    i16 59, label %10
    i16 58, label %28
    i16 28, label %51
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 251658240
  %19 = icmp eq i32 %18, 251658240
  %20 = add i64 %4, 32
  br i1 %19, label %21, label %25

21:                                               ; preds = %15
  %22 = inttoptr i64 %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 16
  br label %25

25:                                               ; preds = %21, %15
  %26 = phi i64 [ %24, %21 ], [ %20, %15 ]
  %27 = inttoptr i64 %26 to i64*
  br label %48

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 1
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %28
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 251658240
  %37 = icmp eq i32 %36, 251658240
  %38 = add i64 %4, 32
  br i1 %37, label %39, label %43

39:                                               ; preds = %33
  %40 = inttoptr i64 %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 16
  br label %43

43:                                               ; preds = %39, %33
  %44 = phi i64 [ %42, %39 ], [ %38, %33 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, i64 1
  %47 = bitcast %"class.v8::internal::compiler::Node"** %46 to i64*
  br label %48

48:                                               ; preds = %43, %25
  %49 = phi i64* [ %47, %43 ], [ %27, %25 ]
  %50 = load i64, i64* %49, align 8
  br label %3

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 1
  %53 = bitcast %"class.v8::internal::compiler::Operator"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i64 %54 to double
  %56 = fcmp ult double %55, 0xC1D0000000000000
  %57 = fcmp ugt double %55, 0x41CFFFFFFF800000
  %58 = or i1 %57, %56
  %59 = icmp eq i64 %54, -9223372036854775808
  %60 = or i1 %59, %58
  br i1 %60, label %75, label %61

61:                                               ; preds = %51
  %62 = fptosi double %55 to i32
  %63 = sitofp i32 %62 to double
  %64 = fcmp oeq double %63, %55
  br i1 %64, label %65, label %75

65:                                               ; preds = %61
  br label %75

66:                                               ; preds = %3
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %68 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %68, i64 0, i32 2
  %70 = load i16, i16* %69, align 8
  switch i16 %70, label %71 [
    i16 197, label %75
    i16 79, label %75
    i16 71, label %74
  ]

71:                                               ; preds = %66
  %72 = icmp eq i16 %70, 30
  %73 = select i1 %72, i8 2, i8 0
  br label %75

74:                                               ; preds = %66
  br label %75

75:                                               ; preds = %66, %66, %74, %51, %65, %61, %71
  %76 = phi i8 [ 2, %66 ], [ %73, %71 ], [ 1, %65 ], [ 2, %61 ], [ 2, %51 ], [ 2, %66 ], [ 1, %74 ]
  ret i8 %76
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler12BinopMatcherINS1_21HeapObjectMatcherImplILNS1_8IrOpcode5ValueE30EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 251658240
  %7 = icmp eq i32 %6, 251658240
  %8 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %9 = add i64 %8, 32
  br i1 %7, label %10, label %14

10:                                               ; preds = %2
  %11 = inttoptr i64 %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 16
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i64 [ %13, %10 ], [ %9, %2 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::compiler::Node"**
  %17 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %17, %"class.v8::internal::compiler::Node"** %18, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::Handle.1079", %"class.v8::internal::Handle.1079"* %19, i64 0, i32 0, i32 0
  store i64* null, i64** %20, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %21, align 8
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %17 to i64
  br label %23

23:                                               ; preds = %68, %14
  %24 = phi i64 [ %22, %14 ], [ %70, %68 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"*
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 2
  %29 = load i16, i16* %28, align 8
  switch i16 %29, label %71 [
    i16 59, label %30
    i16 58, label %48
  ]

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %30
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 251658240
  %39 = icmp eq i32 %38, 251658240
  %40 = add i64 %24, 32
  br i1 %39, label %41, label %45

41:                                               ; preds = %35
  %42 = inttoptr i64 %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 16
  br label %45

45:                                               ; preds = %41, %35
  %46 = phi i64 [ %44, %41 ], [ %40, %35 ]
  %47 = inttoptr i64 %46 to i64*
  br label %68

48:                                               ; preds = %23
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 1
  br i1 %51, label %53, label %52, !prof !2

52:                                               ; preds = %48
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 251658240
  %57 = icmp eq i32 %56, 251658240
  %58 = add i64 %24, 32
  br i1 %57, label %59, label %63

59:                                               ; preds = %53
  %60 = inttoptr i64 %58 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 16
  br label %63

63:                                               ; preds = %59, %53
  %64 = phi i64 [ %62, %59 ], [ %58, %53 ]
  %65 = inttoptr i64 %64 to %"class.v8::internal::compiler::Node"**
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, i64 1
  %67 = bitcast %"class.v8::internal::compiler::Node"** %66 to i64*
  br label %68

68:                                               ; preds = %63, %45
  %69 = phi i64* [ %67, %63 ], [ %47, %45 ]
  %70 = load i64, i64* %69, align 8
  br label %23

71:                                               ; preds = %23
  %72 = icmp eq i16 %29, 30
  %73 = zext i1 %72 to i8
  store i8 %73, i8* %21, align 8
  br i1 %72, label %74, label %82

74:                                               ; preds = %71
  %75 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"*
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %77, i64 1
  %79 = bitcast %"class.v8::internal::compiler::Operator"* %78 to i64*
  %80 = bitcast %"class.v8::internal::Handle.1079"* %19 to i64*
  %81 = load i64, i64* %79, align 8
  store i64 %81, i64* %80, align 8
  br label %82

82:                                               ; preds = %71, %74
  %83 = load i32, i32* %4, align 4
  %84 = and i32 %83, 251658240
  %85 = icmp eq i32 %84, 251658240
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = inttoptr i64 %9 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 16
  br label %90

90:                                               ; preds = %82, %86
  %91 = phi i64 [ %89, %86 ], [ %9, %82 ]
  %92 = inttoptr i64 %91 to %"class.v8::internal::compiler::Node"**
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %92, i64 1
  %94 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %93, align 8
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %94, %"class.v8::internal::compiler::Node"** %95, align 8
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2, i32 0, i32 1
  %97 = getelementptr inbounds %"class.v8::internal::Handle.1079", %"class.v8::internal::Handle.1079"* %96, i64 0, i32 0, i32 0
  store i64* null, i64** %97, align 8
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2, i32 0, i32 2
  store i8 0, i8* %98, align 8
  %99 = ptrtoint %"class.v8::internal::compiler::Node"* %94 to i64
  br label %100

100:                                              ; preds = %145, %90
  %101 = phi i64 [ %99, %90 ], [ %147, %145 ]
  %102 = inttoptr i64 %101 to %"class.v8::internal::compiler::Node"*
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 0
  %104 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %104, i64 0, i32 2
  %106 = load i16, i16* %105, align 8
  switch i16 %106, label %148 [
    i16 59, label %107
    i16 58, label %125
  ]

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %104, i64 0, i32 5
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %112, label %111, !prof !2

111:                                              ; preds = %107
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 251658240
  %116 = icmp eq i32 %115, 251658240
  %117 = add i64 %101, 32
  br i1 %116, label %118, label %122

118:                                              ; preds = %112
  %119 = inttoptr i64 %117 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 16
  br label %122

122:                                              ; preds = %118, %112
  %123 = phi i64 [ %121, %118 ], [ %117, %112 ]
  %124 = inttoptr i64 %123 to i64*
  br label %145

125:                                              ; preds = %100
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %104, i64 0, i32 5
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, 1
  br i1 %128, label %130, label %129, !prof !2

129:                                              ; preds = %125
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 251658240
  %134 = icmp eq i32 %133, 251658240
  %135 = add i64 %101, 32
  br i1 %134, label %136, label %140

136:                                              ; preds = %130
  %137 = inttoptr i64 %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 16
  br label %140

140:                                              ; preds = %136, %130
  %141 = phi i64 [ %139, %136 ], [ %135, %130 ]
  %142 = inttoptr i64 %141 to %"class.v8::internal::compiler::Node"**
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 1
  %144 = bitcast %"class.v8::internal::compiler::Node"** %143 to i64*
  br label %145

145:                                              ; preds = %140, %122
  %146 = phi i64* [ %144, %140 ], [ %124, %122 ]
  %147 = load i64, i64* %146, align 8
  br label %100

148:                                              ; preds = %100
  %149 = icmp eq i16 %106, 30
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %98, align 8
  br i1 %149, label %151, label %159

151:                                              ; preds = %148
  %152 = inttoptr i64 %101 to %"class.v8::internal::compiler::Node"*
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %152, i64 0, i32 0
  %154 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %154, i64 1
  %156 = bitcast %"class.v8::internal::compiler::Operator"* %155 to i64*
  %157 = bitcast %"class.v8::internal::Handle.1079"* %96 to i64*
  %158 = load i64, i64* %156, align 8
  store i64 %158, i64* %157, align 8
  br label %159

159:                                              ; preds = %148, %151
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %161 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %161, i64 0, i32 3, i32 0
  %163 = load i8, i8* %162, align 2
  %164 = and i8 %163, 1
  %165 = icmp eq i8 %164, 0
  %166 = xor i1 %72, true
  %167 = or i1 %165, %166
  %168 = or i1 %167, %149
  br i1 %168, label %170, label %169

169:                                              ; preds = %159
  tail call void @_ZN2v88internal8compiler12BinopMatcherINS1_21HeapObjectMatcherImplILNS1_8IrOpcode5ValueE30EEES6_E10SwapInputsEv(%"struct.v8::internal::compiler::BinopMatcher"* %0) #14
  br label %170

170:                                              ; preds = %159, %169
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher.1381"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 251658240
  %7 = icmp eq i32 %6, 251658240
  %8 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %9 = add i64 %8, 32
  br i1 %7, label %10, label %14

10:                                               ; preds = %2
  %11 = inttoptr i64 %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 16
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i64 [ %13, %10 ], [ %9, %2 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::compiler::Node"**
  %17 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %17, %"class.v8::internal::compiler::Node"** %18, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %20, align 4
  %21 = ptrtoint %"class.v8::internal::compiler::Node"* %17 to i64
  br label %22

22:                                               ; preds = %67, %14
  %23 = phi i64 [ %21, %14 ], [ %69, %67 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"*
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 2
  %28 = load i16, i16* %27, align 8
  switch i16 %28, label %70 [
    i16 59, label %29
    i16 58, label %47
  ]

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 251658240
  %38 = icmp eq i32 %37, 251658240
  %39 = add i64 %23, 32
  br i1 %38, label %40, label %44

40:                                               ; preds = %34
  %41 = inttoptr i64 %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 16
  br label %44

44:                                               ; preds = %40, %34
  %45 = phi i64 [ %43, %40 ], [ %39, %34 ]
  %46 = inttoptr i64 %45 to i64*
  br label %67

47:                                               ; preds = %22
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, 1
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %47
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 251658240
  %56 = icmp eq i32 %55, 251658240
  %57 = add i64 %23, 32
  br i1 %56, label %58, label %62

58:                                               ; preds = %52
  %59 = inttoptr i64 %57 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 16
  br label %62

62:                                               ; preds = %58, %52
  %63 = phi i64 [ %61, %58 ], [ %57, %52 ]
  %64 = inttoptr i64 %63 to %"class.v8::internal::compiler::Node"**
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, i64 1
  %66 = bitcast %"class.v8::internal::compiler::Node"** %65 to i64*
  br label %67

67:                                               ; preds = %62, %44
  %68 = phi i64* [ %66, %62 ], [ %46, %44 ]
  %69 = load i64, i64* %68, align 8
  br label %22

70:                                               ; preds = %22
  %71 = icmp eq i16 %28, 22
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %20, align 4
  br i1 %71, label %73, label %80

73:                                               ; preds = %70
  %74 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"*
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 0
  %76 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %76, i64 0, i32 12
  %78 = bitcast [4 x i8]* %77 to i32*
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %19, align 8
  br label %80

80:                                               ; preds = %70, %73
  %81 = load i32, i32* %4, align 4
  %82 = and i32 %81, 251658240
  %83 = icmp eq i32 %82, 251658240
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = inttoptr i64 %9 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 16
  br label %88

88:                                               ; preds = %80, %84
  %89 = phi i64 [ %87, %84 ], [ %9, %80 ]
  %90 = inttoptr i64 %89 to %"class.v8::internal::compiler::Node"**
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, i64 1
  %92 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, align 8
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %92, %"class.v8::internal::compiler::Node"** %93, align 8
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 2, i32 0, i32 2
  store i8 0, i8* %95, align 4
  %96 = ptrtoint %"class.v8::internal::compiler::Node"* %92 to i64
  br label %97

97:                                               ; preds = %142, %88
  %98 = phi i64 [ %96, %88 ], [ %144, %142 ]
  %99 = inttoptr i64 %98 to %"class.v8::internal::compiler::Node"*
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 0
  %101 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %101, i64 0, i32 2
  %103 = load i16, i16* %102, align 8
  switch i16 %103, label %145 [
    i16 59, label %104
    i16 58, label %122
  ]

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %101, i64 0, i32 5
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %109, label %108, !prof !2

108:                                              ; preds = %104
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, 251658240
  %113 = icmp eq i32 %112, 251658240
  %114 = add i64 %98, 32
  br i1 %113, label %115, label %119

115:                                              ; preds = %109
  %116 = inttoptr i64 %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 16
  br label %119

119:                                              ; preds = %115, %109
  %120 = phi i64 [ %118, %115 ], [ %114, %109 ]
  %121 = inttoptr i64 %120 to i64*
  br label %142

122:                                              ; preds = %97
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %101, i64 0, i32 5
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, 1
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %122
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = and i32 %129, 251658240
  %131 = icmp eq i32 %130, 251658240
  %132 = add i64 %98, 32
  br i1 %131, label %133, label %137

133:                                              ; preds = %127
  %134 = inttoptr i64 %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 16
  br label %137

137:                                              ; preds = %133, %127
  %138 = phi i64 [ %136, %133 ], [ %132, %127 ]
  %139 = inttoptr i64 %138 to %"class.v8::internal::compiler::Node"**
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i64*
  br label %142

142:                                              ; preds = %137, %119
  %143 = phi i64* [ %141, %137 ], [ %121, %119 ]
  %144 = load i64, i64* %143, align 8
  br label %97

145:                                              ; preds = %97
  %146 = icmp eq i16 %103, 22
  %147 = zext i1 %146 to i8
  store i8 %147, i8* %95, align 4
  br i1 %146, label %148, label %155

148:                                              ; preds = %145
  %149 = inttoptr i64 %98 to %"class.v8::internal::compiler::Node"*
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %149, i64 0, i32 0
  %151 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %151, i64 0, i32 12
  %153 = bitcast [4 x i8]* %152 to i32*
  %154 = load i32, i32* %153, align 4
  store i32 %154, i32* %94, align 8
  br label %155

155:                                              ; preds = %145, %148
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %157 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 3, i32 0
  %159 = load i8, i8* %158, align 2
  %160 = and i8 %159, 1
  %161 = icmp eq i8 %160, 0
  %162 = xor i1 %71, true
  %163 = or i1 %161, %162
  %164 = or i1 %163, %146
  br i1 %164, label %166, label %165

165:                                              ; preds = %155
  tail call void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_E10SwapInputsEv(%"struct.v8::internal::compiler::BinopMatcher.1381"* %0) #14
  br label %166

166:                                              ; preds = %155, %165
  ret void
}

declare void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12MachineGraph15Float64ConstantEd(%"class.v8::internal::compiler::MachineGraph"*, double) local_unnamed_addr #6

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"*, double) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Graph"* @_ZNK2v88internal8compiler25SimplifiedOperatorReducer5graphEv(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %4, align 8
  ret %"class.v8::internal::compiler::Graph"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::SimplifiedOperatorBuilder"* @_ZNK2v88internal8compiler25SimplifiedOperatorReducer10simplifiedEv(%"class.v8::internal::compiler::SimplifiedOperatorReducer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SimplifiedOperatorReducer", %"class.v8::internal::compiler::SimplifiedOperatorReducer"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %4, align 8
  ret %"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal8compiler25SimplifiedOperatorReducer12reducer_nameEv(%"class.v8::internal::compiler::SimplifiedOperatorReducer"*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)
}

declare void @_ZN2v88internal8compiler7Reducer8FinalizeEv(%"class.v8::internal::compiler::Reducer"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #6

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #8

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #6

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1395"* noalias sret, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #2 comdat {
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.v8::internal::StdoutStream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.v8::internal::Brief", align 8
  %9 = alloca %"class.v8::internal::compiler::HeapObjectRef", align 8
  %10 = tail call %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %2, i32 %3) #14
  %11 = icmp eq %"class.v8::internal::compiler::ObjectData"* %10, null
  br i1 %11, label %12, label %79

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 7
  %14 = load i8, i8* %13, align 4, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.v8::internal::OFStream"*
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %19, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %20) #14
  %21 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  %22 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #14
  %23 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %22, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %22) #14
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  call void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.v8::internal::compiler::JSHeapBroker"* %1) #14
  %25 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.std::__1::basic_ostream"*
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i8* %31, i8* %24
  %36 = select i1 %29, i64 %33, i64 %34
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* %35, i64 %36) #14
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #14
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i64 15) #14
  %40 = bitcast %"struct.v8::internal::Brief"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  %41 = load i64, i64* %2, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %8, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %8) #14
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 2) #14
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0), i64 38) #14
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #14
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %25, i32 598) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #14
  %49 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 %53
  %55 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #14
  %56 = bitcast i8* %54 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %56) #14
  %57 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %58 = bitcast %"class.std::__1::locale::facet"* %57 to %"class.std::__1::ctype"*
  %59 = bitcast %"class.std::__1::locale::facet"* %57 to i8 (%"class.std::__1::ctype"*, i8)***
  %60 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %59, align 8
  %61 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %60, i64 7
  %62 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %61, align 8
  %63 = call signext i8 %62(%"class.std::__1::ctype"* %58, i8 signext 10) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #14
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %25, i8 signext %63) #14
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  %66 = load i8, i8* %27, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %16
  %69 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %16, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %71 = bitcast %"class.v8::internal::StdoutStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ios.base"* %72 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %74 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %74) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %75) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %25, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %76 = bitcast %"class.std::__1::basic_ios.base"* %72 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %76) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %17) #14
  br label %77

77:                                               ; preds = %12, %70
  %78 = getelementptr inbounds %"class.v8::base::Optional.1395", %"class.v8::base::Optional.1395"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false)
  br label %90

79:                                               ; preds = %4
  %80 = bitcast %"class.v8::internal::compiler::HeapObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #14
  %81 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ObjectData"* %10, %"class.v8::internal::compiler::ObjectData"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %1, %"class.v8::internal::compiler::JSHeapBroker"** %83, align 8
  %84 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsHeapObjectEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %81) #14
  br i1 %84, label %86, label %85, !prof !2

85:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0)) #13
  unreachable

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.v8::base::Optional.1395", %"class.v8::base::Optional.1395"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"class.v8::base::Optional.1395", %"class.v8::base::Optional.1395"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.v8::internal::compiler::HeapObjectRef"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %80, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #14
  br label %90

90:                                               ; preds = %86, %77
  ret void
}

declare %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #6

declare void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* sret, %"class.v8::internal::compiler::JSHeapBroker"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #14
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #14
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #6

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #14
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #14
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #14
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #14
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #14
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #14
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #2 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #2 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #14
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #14
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #14
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #14
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #14
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #10

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #6

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsHeapObjectEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler12BinopMatcherINS1_21HeapObjectMatcherImplILNS1_8IrOpcode5ValueE30EEES6_E10SwapInputsEv(%"struct.v8::internal::compiler::BinopMatcher"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca [24 x i8], align 8
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2
  %5 = getelementptr inbounds [24 x i8], [24 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = bitcast %"struct.v8::internal::compiler::HeapObjectMatcherImpl"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 24, i1 false) #14
  %7 = bitcast %"struct.v8::internal::compiler::HeapObjectMatcherImpl"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 17, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %5, i64 17, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::HeapObjectMatcherImpl", %"struct.v8::internal::compiler::HeapObjectMatcherImpl"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 251658240
  %15 = icmp eq i32 %14, 251658240
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %9 to i64
  %17 = add i64 %16, 32
  br i1 %15, label %18, label %22

18:                                               ; preds = %1
  %19 = inttoptr i64 %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 16
  br label %22

22:                                               ; preds = %1, %18
  %23 = phi i64 [ %21, %18 ], [ %17, %1 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"**
  %25 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"* %25, %11
  br i1 %26, label %41, label %27

27:                                               ; preds = %22
  br i1 %15, label %30, label %28

28:                                               ; preds = %27
  %29 = bitcast %"class.v8::internal::compiler::Node"* %9 to %"struct.v8::internal::compiler::Node::Use"*
  br label %33

30:                                               ; preds = %27
  %31 = inttoptr i64 %17 to %"struct.v8::internal::compiler::Node::Use"**
  %32 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %31, align 8
  br label %33

33:                                               ; preds = %30, %28
  %34 = phi %"struct.v8::internal::compiler::Node::Use"* [ %29, %28 ], [ %32, %30 ]
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %34, i64 -1
  %36 = icmp eq %"class.v8::internal::compiler::Node"* %25, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %25, %"struct.v8::internal::compiler::Node::Use"* %35) #14
  br label %38

38:                                               ; preds = %37, %33
  store %"class.v8::internal::compiler::Node"* %11, %"class.v8::internal::compiler::Node"** %24, align 8
  %39 = icmp eq %"class.v8::internal::compiler::Node"* %11, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %11, %"struct.v8::internal::compiler::Node::Use"* %35) #14
  br label %41

41:                                               ; preds = %22, %38, %40
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::HeapObjectMatcherImpl", %"struct.v8::internal::compiler::HeapObjectMatcherImpl"* %4, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 251658240
  %48 = icmp eq i32 %47, 251658240
  %49 = ptrtoint %"class.v8::internal::compiler::Node"* %42 to i64
  %50 = add i64 %49, 32
  br i1 %48, label %51, label %55

51:                                               ; preds = %41
  %52 = inttoptr i64 %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 16
  br label %55

55:                                               ; preds = %41, %51
  %56 = phi i64 [ %54, %51 ], [ %50, %41 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"**
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 1
  %59 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %60 = icmp eq %"class.v8::internal::compiler::Node"* %59, %44
  br i1 %60, label %75, label %61

61:                                               ; preds = %55
  br i1 %48, label %64, label %62

62:                                               ; preds = %61
  %63 = bitcast %"class.v8::internal::compiler::Node"* %42 to %"struct.v8::internal::compiler::Node::Use"*
  br label %67

64:                                               ; preds = %61
  %65 = inttoptr i64 %50 to %"struct.v8::internal::compiler::Node::Use"**
  %66 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %65, align 8
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi %"struct.v8::internal::compiler::Node::Use"* [ %63, %62 ], [ %66, %64 ]
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %68, i64 -2
  %70 = icmp eq %"class.v8::internal::compiler::Node"* %59, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %59, %"struct.v8::internal::compiler::Node::Use"* %69) #14
  br label %72

72:                                               ; preds = %71, %67
  store %"class.v8::internal::compiler::Node"* %44, %"class.v8::internal::compiler::Node"** %58, align 8
  %73 = icmp eq %"class.v8::internal::compiler::Node"* %44, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %72
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %44, %"struct.v8::internal::compiler::Node::Use"* %69) #14
  br label %75

75:                                               ; preds = %55, %72, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_E10SwapInputsEv(%"struct.v8::internal::compiler::BinopMatcher.1381"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca [16 x i8], align 8
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 2
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5)
  %6 = bitcast %"struct.v8::internal::compiler::IntMatcher"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 16, i1 false) #14
  %7 = bitcast %"struct.v8::internal::compiler::IntMatcher"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 13, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %5, i64 13, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5)
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher.1381", %"struct.v8::internal::compiler::BinopMatcher.1381"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::IntMatcher", %"struct.v8::internal::compiler::IntMatcher"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 251658240
  %15 = icmp eq i32 %14, 251658240
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %9 to i64
  %17 = add i64 %16, 32
  br i1 %15, label %18, label %22

18:                                               ; preds = %1
  %19 = inttoptr i64 %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 16
  br label %22

22:                                               ; preds = %1, %18
  %23 = phi i64 [ %21, %18 ], [ %17, %1 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"**
  %25 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"* %25, %11
  br i1 %26, label %41, label %27

27:                                               ; preds = %22
  br i1 %15, label %30, label %28

28:                                               ; preds = %27
  %29 = bitcast %"class.v8::internal::compiler::Node"* %9 to %"struct.v8::internal::compiler::Node::Use"*
  br label %33

30:                                               ; preds = %27
  %31 = inttoptr i64 %17 to %"struct.v8::internal::compiler::Node::Use"**
  %32 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %31, align 8
  br label %33

33:                                               ; preds = %30, %28
  %34 = phi %"struct.v8::internal::compiler::Node::Use"* [ %29, %28 ], [ %32, %30 ]
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %34, i64 -1
  %36 = icmp eq %"class.v8::internal::compiler::Node"* %25, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %25, %"struct.v8::internal::compiler::Node::Use"* %35) #14
  br label %38

38:                                               ; preds = %37, %33
  store %"class.v8::internal::compiler::Node"* %11, %"class.v8::internal::compiler::Node"** %24, align 8
  %39 = icmp eq %"class.v8::internal::compiler::Node"* %11, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %11, %"struct.v8::internal::compiler::Node::Use"* %35) #14
  br label %41

41:                                               ; preds = %22, %38, %40
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::IntMatcher", %"struct.v8::internal::compiler::IntMatcher"* %4, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 251658240
  %48 = icmp eq i32 %47, 251658240
  %49 = ptrtoint %"class.v8::internal::compiler::Node"* %42 to i64
  %50 = add i64 %49, 32
  br i1 %48, label %51, label %55

51:                                               ; preds = %41
  %52 = inttoptr i64 %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 16
  br label %55

55:                                               ; preds = %41, %51
  %56 = phi i64 [ %54, %51 ], [ %50, %41 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"**
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 1
  %59 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %60 = icmp eq %"class.v8::internal::compiler::Node"* %59, %44
  br i1 %60, label %75, label %61

61:                                               ; preds = %55
  br i1 %48, label %64, label %62

62:                                               ; preds = %61
  %63 = bitcast %"class.v8::internal::compiler::Node"* %42 to %"struct.v8::internal::compiler::Node::Use"*
  br label %67

64:                                               ; preds = %61
  %65 = inttoptr i64 %50 to %"struct.v8::internal::compiler::Node::Use"**
  %66 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %65, align 8
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi %"struct.v8::internal::compiler::Node::Use"* [ %63, %62 ], [ %66, %64 ]
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %68, i64 -2
  %70 = icmp eq %"class.v8::internal::compiler::Node"* %59, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %59, %"struct.v8::internal::compiler::Node::Use"* %69) #14
  br label %72

72:                                               ; preds = %71, %67
  store %"class.v8::internal::compiler::Node"* %44, %"class.v8::internal::compiler::Node"** %58, align 8
  %73 = icmp eq %"class.v8::internal::compiler::Node"* %44, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %72
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %44, %"struct.v8::internal::compiler::Node::Use"* %69) #14
  br label %75

75:                                               ; preds = %55, %72, %74
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
