; ModuleID = '../../chrome/browser/notifications/muted_notification_handler.cc'
source_filename = "../../chrome/browser/notifications/muted_notification_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.MutedNotificationHandler = type { %class.NotificationHandler, %"class.MutedNotificationHandler::Delegate"* }
%class.NotificationHandler = type { i32 (...)** }
%"class.MutedNotificationHandler::Delegate" = type { i32 (...)** }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.35" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GURL* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.41 }
%union.anon.41 = type { i32 }
%"class.absl::optional.42" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZTV24MutedNotificationHandler = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.MutedNotificationHandler*)* @_ZN24MutedNotificationHandlerD2Ev to i8*), i8* bitcast (void (%class.MutedNotificationHandler*)* @_ZN24MutedNotificationHandlerD0Ev to i8*), i8* bitcast (void (%class.NotificationHandler*, %class.Profile*, %"class.std::__1::basic_string"*)* @_ZN19NotificationHandler6OnShowEP7ProfileRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%class.MutedNotificationHandler*, %class.Profile*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.base::OnceCallback"*)* @_ZN24MutedNotificationHandler7OnCloseEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%class.MutedNotificationHandler*, %class.Profile*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, %"class.absl::optional.42"*, %"class.base::OnceCallback"*)* @_ZN24MutedNotificationHandler7OnClickEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKN4absl8optionalIiEERKNSF_INS6_IDsNS7_IDsEENS9_IDsEEEEEEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%class.NotificationHandler*, %class.Profile*, %class.GURL*)* @_ZN19NotificationHandler20DisableNotificationsEP7ProfileRK4GURL to i8*), i8* bitcast (void (%class.MutedNotificationHandler*, %class.Profile*, %class.GURL*)* @_ZN24MutedNotificationHandler12OpenSettingsEP7ProfileRK4GURL to i8*)] }, align 8

@_ZN24MutedNotificationHandlerC1EPNS_8DelegateE = hidden unnamed_addr alias void (%class.MutedNotificationHandler*, %"class.MutedNotificationHandler::Delegate"*), void (%class.MutedNotificationHandler*, %"class.MutedNotificationHandler::Delegate"*)* @_ZN24MutedNotificationHandlerC2EPNS_8DelegateE
@_ZN24MutedNotificationHandlerD1Ev = hidden unnamed_addr alias void (%class.MutedNotificationHandler*), void (%class.MutedNotificationHandler*)* @_ZN24MutedNotificationHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN24MutedNotificationHandlerC2EPNS_8DelegateE(%class.MutedNotificationHandler* nocapture, %"class.MutedNotificationHandler::Delegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.MutedNotificationHandler, %class.MutedNotificationHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV24MutedNotificationHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.MutedNotificationHandler, %class.MutedNotificationHandler* %0, i64 0, i32 1
  store %"class.MutedNotificationHandler::Delegate"* %1, %"class.MutedNotificationHandler::Delegate"** %4, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19NotificationHandlerD2Ev(%class.NotificationHandler*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MutedNotificationHandlerD2Ev(%class.MutedNotificationHandler*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.MutedNotificationHandler, %class.MutedNotificationHandler* %0, i64 0, i32 0
  tail call void @_ZN19NotificationHandlerD2Ev(%class.NotificationHandler* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MutedNotificationHandlerD0Ev(%class.MutedNotificationHandler*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.MutedNotificationHandler, %class.MutedNotificationHandler* %0, i64 0, i32 0
  tail call void @_ZN19NotificationHandlerD2Ev(%class.NotificationHandler* %2) #7
  %3 = bitcast %class.MutedNotificationHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MutedNotificationHandler7OnClickEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKN4absl8optionalIiEERKNSF_INS6_IDsNS7_IDsEENS9_IDsEEEEEEN4base12OnceCallbackIFvvEEE(%class.MutedNotificationHandler* nocapture readonly, %class.Profile* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), %"class.absl::optional"* nocapture readonly dereferenceable(8), %"class.absl::optional.42"* nocapture readnone, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.MutedNotificationHandler, %class.MutedNotificationHandler* %0, i64 0, i32 1
  %14 = load %"class.MutedNotificationHandler::Delegate"*, %"class.MutedNotificationHandler::Delegate"** %13, align 8
  %15 = bitcast %"class.MutedNotificationHandler::Delegate"* %14 to void (%"class.MutedNotificationHandler::Delegate"*, i32)***
  %16 = load void (%"class.MutedNotificationHandler::Delegate"*, i32)**, void (%"class.MutedNotificationHandler::Delegate"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.MutedNotificationHandler::Delegate"*, i32)*, void (%"class.MutedNotificationHandler::Delegate"*, i32)** %16, i64 2
  %18 = load void (%"class.MutedNotificationHandler::Delegate"*, i32)*, void (%"class.MutedNotificationHandler::Delegate"*, i32)** %17, align 8
  tail call void %18(%"class.MutedNotificationHandler::Delegate"* %14, i32 1) #7
  br label %30

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.MutedNotificationHandler, %class.MutedNotificationHandler* %0, i64 0, i32 1
  %25 = load %"class.MutedNotificationHandler::Delegate"*, %"class.MutedNotificationHandler::Delegate"** %24, align 8
  %26 = bitcast %"class.MutedNotificationHandler::Delegate"* %25 to void (%"class.MutedNotificationHandler::Delegate"*, i32)***
  %27 = load void (%"class.MutedNotificationHandler::Delegate"*, i32)**, void (%"class.MutedNotificationHandler::Delegate"*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.MutedNotificationHandler::Delegate"*, i32)*, void (%"class.MutedNotificationHandler::Delegate"*, i32)** %27, i64 2
  %29 = load void (%"class.MutedNotificationHandler::Delegate"*, i32)*, void (%"class.MutedNotificationHandler::Delegate"*, i32)** %28, align 8
  tail call void %29(%"class.MutedNotificationHandler::Delegate"* %25, i32 2) #7
  br label %30

30:                                               ; preds = %23, %19, %12
  %31 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %34, i64* %35, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %37 = inttoptr i64 %34 to %"class.base::internal::BindStateBase"*
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %37, i64 0, i32 1
  %39 = bitcast void ()** %38 to void (%"class.base::internal::BindStateBase"*)**
  %40 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %39, align 8
  tail call void %40(%"class.base::internal::BindStateBase"* %37) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24MutedNotificationHandler7OnCloseEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbN4base12OnceCallbackIFvvEEE(%class.MutedNotificationHandler* nocapture readonly, %class.Profile* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  br i1 %4, label %8, label %15

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.MutedNotificationHandler, %class.MutedNotificationHandler* %0, i64 0, i32 1
  %10 = load %"class.MutedNotificationHandler::Delegate"*, %"class.MutedNotificationHandler::Delegate"** %9, align 8
  %11 = bitcast %"class.MutedNotificationHandler::Delegate"* %10 to void (%"class.MutedNotificationHandler::Delegate"*, i32)***
  %12 = load void (%"class.MutedNotificationHandler::Delegate"*, i32)**, void (%"class.MutedNotificationHandler::Delegate"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.MutedNotificationHandler::Delegate"*, i32)*, void (%"class.MutedNotificationHandler::Delegate"*, i32)** %12, i64 2
  %14 = load void (%"class.MutedNotificationHandler::Delegate"*, i32)*, void (%"class.MutedNotificationHandler::Delegate"*, i32)** %13, align 8
  tail call void %14(%"class.MutedNotificationHandler::Delegate"* %10, i32 0) #7
  br label %15

15:                                               ; preds = %8, %6
  %16 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %22 = inttoptr i64 %19 to %"class.base::internal::BindStateBase"*
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %22, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %24, align 8
  tail call void %25(%"class.base::internal::BindStateBase"* %22) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN24MutedNotificationHandler12OpenSettingsEP7ProfileRK4GURL(%class.MutedNotificationHandler* nocapture, %class.Profile* nocapture, %class.GURL* nocapture dereferenceable(120)) unnamed_addr #4 align 2 {
  ret void
}

declare void @_ZN19NotificationHandler6OnShowEP7ProfileRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%class.NotificationHandler*, %class.Profile*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #5

declare void @_ZN19NotificationHandler20DisableNotificationsEP7ProfileRK4GURL(%class.NotificationHandler*, %class.Profile*, %class.GURL* dereferenceable(120)) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
