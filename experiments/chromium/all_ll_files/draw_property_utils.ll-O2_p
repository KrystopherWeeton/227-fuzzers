; ModuleID = '../../cc/trees/draw_property_utils.cc'
source_filename = "../../cc/trees/draw_property_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1214", i8, [7 x i8] }>
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.999", %class.scoped_refptr.1000, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.1006, %"class.std::__1::vector.1010", %"class.std::__1::unordered_map.1023", %"class.base::internal::flat_tree.1047", %"class.std::__1::unordered_map.1055", %"class.std::__1::unordered_map.1079", %"class.std::__1::unordered_map.1103", %"class.std::__1::unordered_map.1103", %"class.base::flat_map.1127", %"class.std::__1::vector.1137", %"class.base::internal::flat_tree.1144", %"class.base::internal::flat_tree.598", %"class.std::__1::vector.1145", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.114", %"class.std::__1::vector.114", %"class.std::__1::vector.1152", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1159, %class.scoped_refptr.1159, %"class.std::__1::unique_ptr.1164", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.633", %"class.std::__1::vector.756", %"class.std::__1::unique_ptr.1170", %"class.std::__1::vector.1176" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.102", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.gfx::Vector2dF", %"class.std::__1::vector.114", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.406", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.463", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::set.481", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.491", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.532", %"class.base::RepeatingCallback.328", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.538", i8, i8, i8, i32, %"class.std::__1::unique_ptr.548", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.554", %"class.std::__1::vector.560", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.592", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.598", %"class.absl::optional.611", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.82", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.686", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.764", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.807", %"class.base::WeakPtrFactory.814" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.42, %class.scoped_refptr.43, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.44", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.42 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.43 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.51", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.82", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.90" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.72"*, i64 }
%"class.std::__1::unique_ptr.72" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.97" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.97" = type { %"class.base::internal::VectorBuffer.98", i64, i64 }
%"class.base::internal::VectorBuffer.98" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.122", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.128", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.355", %"class.std::__1::vector.210", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.393", %"class.base::WeakPtrFactory.393" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.128" = type { %"class.std::__1::__hash_table.129" }
%"class.std::__1::__hash_table.129" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.133"** }
%"struct.std::__1::__hash_node_base.133" = type { %"struct.std::__1::__hash_node_base.133"* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::__bucket_list_deallocator.135" }
%"class.std::__1::__bucket_list_deallocator.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.133" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.155, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.157", %"class.base::flat_map.187", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.197", %"class.std::__1::map.197", i8, %"class.std::__1::vector.206", %"class.base::WeakPtrFactory.222" }
%class.scoped_refptr.155 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.182" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.177", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.160, %"class.gfx::Rect", i32, %class.sk_sp.165, %class.sk_sp.173, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.174 }
%class.sk_sp.160 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.161", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { i8* }
%class.sk_sp.165 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.166" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.159, i32, i32 }
%class.sk_sp.159 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.52" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.168" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.173 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.174 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.175", [4 x i8] }>
%"class.base::RefCountedThreadSafe.175" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.176 }
%union.anon.176 = type { i64 }
%"class.absl::optional.177" = type { %"class.absl::optional_internal::optional_data.178" }
%"class.absl::optional_internal::optional_data.178" = type { %"class.absl::optional_internal::optional_data_base.179" }
%"class.absl::optional_internal::optional_data_base.179" = type { %"class.absl::optional_internal::optional_data_dtor_base.180" }
%"class.absl::optional_internal::optional_data_dtor_base.180" = type { i8, %union.anon.181 }
%union.anon.181 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.187" = type { %"class.base::internal::flat_tree.188" }
%"class.base::internal::flat_tree.188" = type { %"class.std::__1::vector.189" }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.217" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.208, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.86", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.208 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.210", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.209", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.209" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.223", i8, %class.scoped_refptr.155, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.233" }
%"class.base::flat_map.223" = type { %"class.base::internal::flat_tree.224" }
%"class.base::internal::flat_tree.224" = type { %"class.std::__1::vector.225" }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.std::__1::pair.227"*, %"struct.std::__1::pair.227"*, %"class.std::__1::__compressed_pair.228" }
%"struct.std::__1::pair.227" = type { i32, %"class.std::__1::unique_ptr.1515" }
%"class.std::__1::unique_ptr.1515" = type { %"class.std::__1::__compressed_pair.1516" }
%"class.std::__1::__compressed_pair.1516" = type { %"struct.std::__1::__compressed_pair_elem.1517" }
%"struct.std::__1::__compressed_pair_elem.1517" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::pair.227"* }
%"class.base::WeakPtrFactory.233" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.234", %"class.base::internal::flat_tree.234", %"class.std::__1::vector.242", i32, %"class.absl::optional.249", %"class.std::__1::unordered_map.254", %"class.std::__1::unordered_map.278", %"class.base::flat_map.302", %"class.base::WeakPtrFactory.312" }
%"class.base::internal::flat_tree.234" = type { %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { i32*, i32*, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { i32* }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.244" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.254" = type { %"class.std::__1::__hash_table.255" }
%"class.std::__1::__hash_table.255" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.259"** }
%"struct.std::__1::__hash_node_base.259" = type { %"struct.std::__1::__hash_node_base.259"* }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__bucket_list_deallocator.261" }
%"class.std::__1::__bucket_list_deallocator.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.259" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::flat_map.302" = type { %"class.base::internal::flat_tree.303" }
%"class.base::internal::flat_tree.303" = type { %"class.std::__1::vector.304" }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"*, %"class.std::__1::__compressed_pair.307" }
%"struct.std::__1::pair.306" = type { i32, i32 }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::pair.306"* }
%"class.base::WeakPtrFactory.312" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.313", %"class.std::__1::vector.321" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.316" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.315, i16, i16, i32 }
%class.scoped_refptr.315 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.323" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.328", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.329" }
%"class.base::WeakPtrFactory.329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.330" }
%"class.std::__1::__hash_table.330" = type <{ %"class.std::__1::unique_ptr.331", %"class.std::__1::__compressed_pair.341", %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.350", [4 x i8] }>
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333", %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base.334"** }
%"struct.std::__1::__hash_node_base.334" = type { %"struct.std::__1::__hash_node_base.334"* }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.std::__1::__bucket_list_deallocator.336" }
%"class.std::__1::__bucket_list_deallocator.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::__hash_node_base.334" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.355" = type { %"class.std::__1::__hash_table.356" }
%"class.std::__1::__hash_table.356" = type <{ %"class.std::__1::unique_ptr.357", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.375", [4 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359", %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.360"** }
%"struct.std::__1::__hash_node_base.360" = type { %"struct.std::__1::__hash_node_base.360"* }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::__bucket_list_deallocator.362" }
%"class.std::__1::__bucket_list_deallocator.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.360" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %class.scoped_refptr.208*, %class.scoped_refptr.208*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.scoped_refptr.208* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.379" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.385", %"class.base::WeakPtrFactory.386" }
%"class.base::OnceCallback.385" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.386" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.387, i8, [7 x i8] }>
%class.scoped_refptr.387 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.388", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.388" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.389" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::WeakPtrFactory.393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.397", %"class.absl::optional.397", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.397" = type { %"class.absl::optional_internal::optional_data.398" }
%"class.absl::optional_internal::optional_data.398" = type { %"class.absl::optional_internal::optional_data_base.399" }
%"class.absl::optional_internal::optional_data_base.399" = type { %"class.absl::optional_internal::optional_data_dtor_base.400" }
%"class.absl::optional_internal::optional_data_dtor_base.400" = type { i8, %union.anon.401 }
%union.anon.401 = type { %"struct.std::__1::pair.402" }
%"struct.std::__1::pair.402" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.422", %"class.absl::optional.422", %"class.absl::optional.422", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.441, %"class.absl::optional.442", %"class.std::__1::map.447" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.418" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.412"**, %"struct.std::__1::pair.412"**, %"struct.std::__1::pair.412"**, %"class.std::__1::__compressed_pair.413" }
%"struct.std::__1::pair.412" = type opaque
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::pair.412"** }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.427", %"class.base::circular_deque.428", %"class.std::__1::map.430", %"class.absl::optional" }
%"class.base::RepeatingCallback.427" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.428" = type { %"class.base::internal::VectorBuffer.429", i64, i64 }
%"class.base::internal::VectorBuffer.429" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.430" = type { %"class.std::__1::__tree.431" }
%"class.std::__1::__tree.431" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%struct.anon.441 = type { double, double }
%"class.absl::optional.442" = type { %"class.absl::optional_internal::optional_data.443" }
%"class.absl::optional_internal::optional_data.443" = type { %"class.absl::optional_internal::optional_data_base.444" }
%"class.absl::optional_internal::optional_data_base.444" = type { %"class.absl::optional_internal::optional_data_dtor_base.445" }
%"class.absl::optional_internal::optional_data_dtor_base.445" = type { i8, %union.anon.446 }
%union.anon.446 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.447" = type { %"class.std::__1::__tree.448" }
%"class.std::__1::__tree.448" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.459" }
%"class.base::RingBuffer.459" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.491" = type { %"class.std::__1::__hash_table.492" }
%"class.std::__1::__hash_table.492" = type <{ %"class.std::__1::unique_ptr.493", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.511", [4 x i8] }>
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495", %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.std::__1::__hash_node_base.496"** }
%"struct.std::__1::__hash_node_base.496" = type { %"struct.std::__1::__hash_node_base.496"* }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::__bucket_list_deallocator.498" }
%"class.std::__1::__bucket_list_deallocator.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.std::__1::__hash_node_base.496" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.517" }
%"class.std::__1::vector.517" = type { %"class.std::__1::__vector_base.518" }
%"class.std::__1::__vector_base.518" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.524" }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.std::__1::unique_ptr.526"*, %"class.std::__1::unique_ptr.526"*, %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::unique_ptr.526" = type opaque
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.std::__1::unique_ptr.526"* }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.328" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.538" = type { %"class.std::__1::__tree.539" }
%"class.std::__1::__tree.539" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.560" = type { %"class.std::__1::__vector_base.561" }
%"class.std::__1::__vector_base.561" = type { %"struct.std::__1::pair.562"*, %"struct.std::__1::pair.562"*, %"class.std::__1::__compressed_pair.563" }
%"struct.std::__1::pair.562" = type opaque
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.std::__1::pair.562"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.568", %"class.base::internal::flat_tree.234", %"class.base::internal::flat_tree.234", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.568" = type { %"class.base::internal::flat_tree.569" }
%"class.base::internal::flat_tree.569" = type { %"class.std::__1::vector.570" }
%"class.std::__1::vector.570" = type { %"class.std::__1::__vector_base.571" }
%"class.std::__1::__vector_base.571" = type { %"struct.std::__1::pair.572"*, %"struct.std::__1::pair.572"*, %"class.std::__1::__compressed_pair.573" }
%"struct.std::__1::pair.572" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.166", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1521", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1521" = type { %"class.std::__1::vector.1522" }
%"class.std::__1::vector.1522" = type { %"class.std::__1::__vector_base.1523" }
%"class.std::__1::__vector_base.1523" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1524" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::pair.572"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.578", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.579" }
%"class.base::RepeatingCallback.578" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.579" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.583" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.611" = type { %"class.absl::optional_internal::optional_data.612" }
%"class.absl::optional_internal::optional_data.612" = type { %"class.absl::optional_internal::optional_data_base.613" }
%"class.absl::optional_internal::optional_data_base.613" = type { %"class.absl::optional_internal::optional_data_dtor_base.614" }
%"class.absl::optional_internal::optional_data_dtor_base.614" = type { i8, [7 x i8], %union.anon.615 }
%union.anon.615 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.616", %"struct.viz::Selection", i8, %"class.absl::optional.621", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.626", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.616" = type { %"class.absl::optional_internal::optional_data.617" }
%"class.absl::optional_internal::optional_data.617" = type { %"class.absl::optional_internal::optional_data_base.618" }
%"class.absl::optional_internal::optional_data_base.618" = type { %"class.absl::optional_internal::optional_data_dtor_base.619" }
%"class.absl::optional_internal::optional_data_dtor_base.619" = type { i8, %union.anon.620 }
%union.anon.620 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional.621" = type { %"class.absl::optional_internal::optional_data.622" }
%"class.absl::optional_internal::optional_data.622" = type { %"class.absl::optional_internal::optional_data_base.623" }
%"class.absl::optional_internal::optional_data_base.623" = type { %"class.absl::optional_internal::optional_data_dtor_base.624" }
%"class.absl::optional_internal::optional_data_dtor_base.624" = type { i8, %union.anon.625 }
%union.anon.625 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.626" = type { %"class.absl::optional_internal::optional_data.627" }
%"class.absl::optional_internal::optional_data.627" = type { %"class.absl::optional_internal::optional_data_base.628" }
%"class.absl::optional_internal::optional_data_base.628" = type { %"class.absl::optional_internal::optional_data_dtor_base.629" }
%"class.absl::optional_internal::optional_data_dtor_base.629" = type { i8, %union.anon.630 }
%union.anon.630 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.631" }
%"class.base::circular_deque.631" = type { %"class.base::internal::VectorBuffer.632", i64, i64 }
%"class.base::internal::VectorBuffer.632" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.633", %"class.std::__1::vector.633" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.641", %"class.base::flat_map.647", %"class.base::flat_map.657", %"class.base::RepeatingCallback.667", %"class.std::__1::vector.668", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.676", i64, i64 }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.647" = type { %"class.base::internal::flat_tree.648" }
%"class.base::internal::flat_tree.648" = type { %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"struct.std::__1::pair.651"*, %"struct.std::__1::pair.651"*, %"class.std::__1::__compressed_pair.652" }
%"struct.std::__1::pair.651" = type opaque
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"struct.std::__1::pair.651"* }
%"class.base::flat_map.657" = type { %"class.base::internal::flat_tree.658" }
%"class.base::internal::flat_tree.658" = type { %"class.std::__1::vector.659" }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"struct.std::__1::pair.661"*, %"struct.std::__1::pair.661"*, %"class.std::__1::__compressed_pair.662" }
%"struct.std::__1::pair.661" = type opaque
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"struct.std::__1::pair.661"* }
%"class.base::RepeatingCallback.667" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.668" = type { %"class.std::__1::__vector_base.669" }
%"class.std::__1::__vector_base.669" = type { %"class.std::__1::unique_ptr.670"*, %"class.std::__1::unique_ptr.670"*, %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::unique_ptr.670" = type opaque
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.std::__1::unique_ptr.670"* }
%"class.base::flat_map.676" = type { %"class.base::internal::flat_tree.677" }
%"class.base::internal::flat_tree.677" = type { %"class.std::__1::vector.678" }
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"struct.std::__1::pair.680"*, %"struct.std::__1::pair.680"*, %"class.std::__1::__compressed_pair.681" }
%"struct.std::__1::pair.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"struct.std::__1::pair.680"* }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.692", %"class.base::internal::flat_tree.702" }
%"class.base::flat_map.692" = type { %"class.base::internal::flat_tree.693" }
%"class.base::internal::flat_tree.693" = type { %"class.std::__1::vector.694" }
%"class.std::__1::vector.694" = type { %"class.std::__1::__vector_base.695" }
%"class.std::__1::__vector_base.695" = type { %"struct.std::__1::pair.696"*, %"struct.std::__1::pair.696"*, %"class.std::__1::__compressed_pair.697" }
%"struct.std::__1::pair.696" = type opaque
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.std::__1::pair.696"* }
%"class.base::internal::flat_tree.702" = type { %"class.std::__1::vector.703" }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.715" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.705", %"class.absl::optional.710", %"struct.cc::ElementId" }
%"class.absl::optional.705" = type { %"class.absl::optional_internal::optional_data.706" }
%"class.absl::optional_internal::optional_data.706" = type { %"class.absl::optional_internal::optional_data_base.707" }
%"class.absl::optional_internal::optional_data_base.707" = type { %"class.absl::optional_internal::optional_data_dtor_base.708" }
%"class.absl::optional_internal::optional_data_dtor_base.708" = type { i8, %union.anon.709 }
%union.anon.709 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.710" = type { %"class.absl::optional_internal::optional_data.711" }
%"class.absl::optional_internal::optional_data.711" = type { %"class.absl::optional_internal::optional_data_base.712" }
%"class.absl::optional_internal::optional_data_base.712" = type { %"class.absl::optional_internal::optional_data_dtor_base.713" }
%"class.absl::optional_internal::optional_data_dtor_base.713" = type { i8, %union.anon.714 }
%union.anon.714 = type { i32 }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.732" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.720", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.720" = type { %"class.std::__1::__deque_base.721" }
%"class.std::__1::__deque_base.721" = type { %"struct.std::__1::__split_buffer.722", i64, %"class.std::__1::__compressed_pair.728" }
%"struct.std::__1::__split_buffer.722" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.723" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::circular_deque.732" = type { %"class.base::internal::VectorBuffer.733", i64, i64 }
%"class.base::internal::VectorBuffer.733" = type { %"struct.std::__1::pair.734"*, i64 }
%"struct.std::__1::pair.734" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.735", %"class.std::__1::map.740", %"class.std::__1::map.740" }
%"class.absl::optional.735" = type { %"class.absl::optional_internal::optional_data.736" }
%"class.absl::optional_internal::optional_data.736" = type { %"class.absl::optional_internal::optional_data_base.737" }
%"class.absl::optional_internal::optional_data_base.737" = type { %"class.absl::optional_internal::optional_data_dtor_base.738" }
%"class.absl::optional_internal::optional_data_dtor_base.738" = type { i8, [3 x i8], %union.anon.739 }
%union.anon.739 = type { %"class.gfx::Transform" }
%"class.std::__1::map.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.749", %"class.std::__1::vector.756" }
%"class.std::__1::vector.749" = type { %"class.std::__1::__vector_base.750" }
%"class.std::__1::__vector_base.750" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.751" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.328", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.770" }
%"class.base::WeakPtrFactory.770" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.771", %"class.std::__1::map.778", i64 }
%"class.std::__1::list.771" = type { %"class.std::__1::__list_imp.772" }
%"class.std::__1::__list_imp.772" = type { %"struct.std::__1::__list_node_base.773", %"class.std::__1::__compressed_pair.774" }
%"struct.std::__1::__list_node_base.773" = type { %"struct.std::__1::__list_node_base.773"*, %"struct.std::__1::__list_node_base.773"* }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map.778" = type { %"class.std::__1::__tree.779" }
%"class.std::__1::__tree.779" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.780", %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.789", %"class.base::internal::flat_tree.799", %"class.base::internal::flat_tree.799" }
%"class.base::flat_map.789" = type { %"class.base::internal::flat_tree.790" }
%"class.base::internal::flat_tree.790" = type { %"class.std::__1::vector.791" }
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { %"struct.std::__1::pair.793"*, %"struct.std::__1::pair.793"*, %"class.std::__1::__compressed_pair.794" }
%"struct.std::__1::pair.793" = type opaque
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.std::__1::pair.793"* }
%"class.base::internal::flat_tree.799" = type { %"class.std::__1::vector.800" }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.802" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { i32*, i32*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { i32* }
%"class.base::WeakPtrFactory.814" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.815", %"class.base::flat_map.815", %"class.base::flat_map.815", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.815" = type { %"class.base::internal::flat_tree.816" }
%"class.base::internal::flat_tree.816" = type { %"class.std::__1::vector.817" }
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { %"struct.std::__1::pair.819"*, %"struct.std::__1::pair.819"*, %"class.std::__1::__compressed_pair.820" }
%"struct.std::__1::pair.819" = type opaque
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::pair.819"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.235", %"class.std::__1::vector.832", %"class.std::__1::vector.839" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.825", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.827" }
%"struct.cc::TransformNode" = type { i32, i32, i32, %"struct.cc::ElementId", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.gfx::Vector2dF", %"class.gfx::Transform", i32, i32, i24, %"class.gfx::ScrollOffset", %"class.gfx::Vector2dF", float, %"struct.cc::ElementId" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.834" }
%"struct.cc::TransformCachedNodeData" = type { %"class.gfx::Transform", %"class.gfx::Transform", i8, [3 x i8] }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.841" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.846", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.904" }
%"class.cc::PropertyTree.846" = type { i32 (...)**, %"class.std::__1::vector.847", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.876" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.870", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.849" }
%"class.std::__1::vector.849" = type { %"class.std::__1::__vector_base.850" }
%"class.std::__1::__vector_base.850" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.865" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.851, [20 x float], i32, [4 x i8], %"class.std::__1::vector.858", i32, [4 x i8] }>
%class.sk_sp.851 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.852, i32, %"class.absl::optional.853", i8, i32 }
%class.sk_sp.852 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.853" = type { %"class.absl::optional_internal::optional_data.854" }
%"class.absl::optional_internal::optional_data.854" = type { %"class.absl::optional_internal::optional_data_base.855" }
%"class.absl::optional_internal::optional_data_base.855" = type { %"class.absl::optional_internal::optional_data_dtor_base.856" }
%"class.absl::optional_internal::optional_data_dtor_base.856" = type { i8, %union.anon.857 }
%union.anon.857 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.870" = type { %"class.absl::optional_internal::optional_data.871" }
%"class.absl::optional_internal::optional_data.871" = type { %"class.absl::optional_internal::optional_data_base.872" }
%"class.absl::optional_internal::optional_data_base.872" = type { %"class.absl::optional_internal::optional_data_dtor_base.873" }
%"class.absl::optional_internal::optional_data_dtor_base.873" = type { i8, %union.anon.874 }
%union.anon.874 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.875" }
%"class.base::internal::flat_tree.875" = type { %"class.std::__1::vector.807" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.881" }
%"class.std::__1::__hash_table.881" = type <{ %"class.std::__1::unique_ptr.882", %"class.std::__1::__compressed_pair.892", %"class.std::__1::__compressed_pair.897", %"class.std::__1::__compressed_pair.900", [4 x i8] }>
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884", %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"struct.std::__1::__hash_node_base.885"** }
%"struct.std::__1::__hash_node_base.885" = type { %"struct.std::__1::__hash_node_base.885"* }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.std::__1::__bucket_list_deallocator.887" }
%"class.std::__1::__bucket_list_deallocator.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"struct.std::__1::__hash_node_base.885" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.904" = type { %"class.std::__1::__vector_base.905" }
%"class.std::__1::__vector_base.905" = type { %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"*, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.909" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.std::__1::unique_ptr.906"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.923" }
%"class.cc::PropertyTree.923" = type { i32 (...)**, %"class.std::__1::vector.924", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.924" = type { %"class.std::__1::__vector_base.925" }
%"class.std::__1::__vector_base.925" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.938" }
%"struct.cc::ClipNode" = type <{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], %"class.base::StackVector", %"class.gfx::RectF", %"class.absl::optional.933", i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.928" }
%"struct.base::StackAllocator<cc::ClipRectData, 3>::Source" = type { [72 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* }
%"class.std::__1::vector.928" = type { %"class.std::__1::__vector_base.929" }
%"class.std::__1::__vector_base.929" = type { %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"*, %"class.std::__1::__compressed_pair.930" }
%"struct.cc::ClipRectData" = type { i32, %"struct.cc::ConditionalClip" }
%"struct.cc::ConditionalClip" = type { i8, %"class.gfx::RectF" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.cc::ClipRectData"* }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.base::StackAllocator" }
%"class.absl::optional.933" = type { %"class.absl::optional_internal::optional_data.934" }
%"class.absl::optional_internal::optional_data.934" = type { %"class.absl::optional_internal::optional_data_base.935" }
%"class.absl::optional_internal::optional_data_base.935" = type { %"class.absl::optional_internal::optional_data_dtor_base.936" }
%"class.absl::optional_internal::optional_data_dtor_base.936" = type { i8, %union.anon.937 }
%union.anon.937 = type { %"class.cc::ClipExpander" }
%"class.cc::ClipExpander" = type { i32 }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.943", i32, %"class.base::flat_map.963", %"class.base::flat_map.973", %"class.base::WeakPtr.983" }
%"class.cc::PropertyTree.943" = type { i32 (...)**, %"class.std::__1::vector.944", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.944" = type { %"class.std::__1::__vector_base.945" }
%"class.std::__1::__vector_base.945" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.958" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.946", i8, [7 x i8] }>
%"class.absl::optional.946" = type { %"class.absl::optional_internal::optional_data.947" }
%"class.absl::optional_internal::optional_data.947" = type { %"class.absl::optional_internal::optional_data_base.948" }
%"class.absl::optional_internal::optional_data_base.948" = type { %"class.absl::optional_internal::optional_data_dtor_base.949" }
%"class.absl::optional_internal::optional_data_dtor_base.949" = type { i8, %union.anon.950 }
%union.anon.950 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.951", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.std::__1::vector.951" = type { %"class.std::__1::__vector_base.952" }
%"class.std::__1::__vector_base.952" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.953" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.963" = type { %"class.base::internal::flat_tree.964" }
%"class.base::internal::flat_tree.964" = type { %"class.std::__1::vector.965" }
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"* }
%"class.base::flat_map.973" = type { %"class.base::internal::flat_tree.974" }
%"class.base::internal::flat_tree.974" = type { %"class.std::__1::vector.975" }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"struct.std::__1::pair.977"*, %"struct.std::__1::pair.977"*, %"class.std::__1::__compressed_pair.978" }
%"struct.std::__1::pair.977" = type opaque
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.std::__1::pair.977"* }
%"class.base::WeakPtr.983" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.984", %"class.std::__1::vector.991" }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.986" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.991" = type { %"class.std::__1::__vector_base.992" }
%"class.std::__1::__vector_base.992" = type { %"class.std::__1::vector.993"*, %"class.std::__1::vector.993"*, %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::vector.993" = type opaque
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::vector.993"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.999" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.1000 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.1001" }
%"class.absl::optional.1001" = type { %"class.absl::optional_internal::optional_data.1002" }
%"class.absl::optional_internal::optional_data.1002" = type { %"class.absl::optional_internal::optional_data_base.1003" }
%"class.absl::optional_internal::optional_data_base.1003" = type { %"class.absl::optional_internal::optional_data_dtor_base.1004" }
%"class.absl::optional_internal::optional_data_dtor_base.1004" = type { i8, %union.anon.1005 }
%union.anon.1005 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.1006 = type { %"class.cc::SyncedProperty.1007"* }
%"class.cc::SyncedProperty.1007" = type <{ %"class.base::RefCounted.1008", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.1008" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.cc::LayerImpl"* }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::unique_ptr.1012"* }
%"class.std::__1::unordered_map.1023" = type { %"class.std::__1::__hash_table.1024" }
%"class.std::__1::__hash_table.1024" = type <{ %"class.std::__1::unique_ptr.1025", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1040", %"class.std::__1::__compressed_pair.1043", [4 x i8] }>
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027", %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1028"** }
%"struct.std::__1::__hash_node_base.1028" = type { %"struct.std::__1::__hash_node_base.1028"* }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.std::__1::__bucket_list_deallocator.1030" }
%"class.std::__1::__bucket_list_deallocator.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"struct.std::__1::__hash_node_base.1028" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::internal::flat_tree.1047" = type { %"class.std::__1::vector.1048" }
%"class.std::__1::vector.1048" = type { %"class.std::__1::__vector_base.1049" }
%"class.std::__1::__vector_base.1049" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1055" = type { %"class.std::__1::__hash_table.1056" }
%"class.std::__1::__hash_table.1056" = type <{ %"class.std::__1::unique_ptr.1057", %"class.std::__1::__compressed_pair.1067", %"class.std::__1::__compressed_pair.1072", %"class.std::__1::__compressed_pair.1075", [4 x i8] }>
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059", %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.std::__1::__hash_node_base.1060"** }
%"struct.std::__1::__hash_node_base.1060" = type { %"struct.std::__1::__hash_node_base.1060"* }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.std::__1::__bucket_list_deallocator.1062" }
%"class.std::__1::__bucket_list_deallocator.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.std::__1::__hash_node_base.1060" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.1079" = type { %"class.std::__1::__hash_table.1080" }
%"class.std::__1::__hash_table.1080" = type <{ %"class.std::__1::unique_ptr.1081", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1096", %"class.std::__1::__compressed_pair.1099", [4 x i8] }>
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083", %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::__hash_node_base.1084"** }
%"struct.std::__1::__hash_node_base.1084" = type { %"struct.std::__1::__hash_node_base.1084"* }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.std::__1::__bucket_list_deallocator.1086" }
%"class.std::__1::__bucket_list_deallocator.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"struct.std::__1::__hash_node_base.1084" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.1103" = type { %"class.std::__1::__hash_table.1104" }
%"class.std::__1::__hash_table.1104" = type <{ %"class.std::__1::unique_ptr.1105", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1120", %"class.std::__1::__compressed_pair.1123", [4 x i8] }>
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107", %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1108"** }
%"struct.std::__1::__hash_node_base.1108" = type { %"struct.std::__1::__hash_node_base.1108"* }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.std::__1::__bucket_list_deallocator.1110" }
%"class.std::__1::__bucket_list_deallocator.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::__hash_node_base.1108" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::flat_map.1127" = type { %"class.base::internal::flat_tree.1128" }
%"class.base::internal::flat_tree.1128" = type { %"class.std::__1::vector.1129" }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"*, %"class.std::__1::__compressed_pair.1132" }
%"struct.std::__1::pair.1131" = type opaque
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::pair.1131"* }
%"class.std::__1::vector.1137" = type { %"class.std::__1::__vector_base.1138" }
%"class.std::__1::__vector_base.1138" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1139" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1220", %class.scoped_refptr.1228, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1280", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1285", %"class.base::flat_map.1292", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1214", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1223", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1265", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1228, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1223" = type { %"class.std::__1::__vector_base.1224" }
%"class.std::__1::__vector_base.1224" = type { %"class.std::__1::unique_ptr.1225"*, %"class.std::__1::unique_ptr.1225"*, %"class.std::__1::__compressed_pair.1260" }
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1228, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1231", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1231" = type { %"class.std::__1::__hash_table.1232" }
%"class.std::__1::__hash_table.1232" = type <{ %"class.std::__1::unique_ptr.1233", %"class.std::__1::__compressed_pair.1243", %"class.std::__1::__compressed_pair.1248", %"class.std::__1::__compressed_pair.1251", [4 x i8] }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235", %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::__hash_node_base.1236"** }
%"struct.std::__1::__hash_node_base.1236" = type { %"struct.std::__1::__hash_node_base.1236"* }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.std::__1::__bucket_list_deallocator.1238" }
%"class.std::__1::__bucket_list_deallocator.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"struct.std::__1::__hash_node_base.1236" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"class.std::__1::unique_ptr.1225"* }
%"class.std::__1::deque.1265" = type { %"class.std::__1::__deque_base.1266" }
%"class.std::__1::__deque_base.1266" = type { %"struct.std::__1::__split_buffer.1267", i64, %"class.std::__1::__compressed_pair.1273" }
%"struct.std::__1::__split_buffer.1267" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1268" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1228 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1229", [4 x i8], i64, %class.scoped_refptr.1230, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1229" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1230 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1280" = type { %"class.absl::optional_internal::optional_data.1281" }
%"class.absl::optional_internal::optional_data.1281" = type { %"class.absl::optional_internal::optional_data_base.1282" }
%"class.absl::optional_internal::optional_data_base.1282" = type { %"class.absl::optional_internal::optional_data_dtor_base.1283" }
%"class.absl::optional_internal::optional_data_dtor_base.1283" = type { i8, %union.anon.1284 }
%union.anon.1284 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1285" = type { %"class.std::__1::__vector_base.1286" }
%"class.std::__1::__vector_base.1286" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1292" = type { %"class.base::internal::flat_tree.1293" }
%"class.base::internal::flat_tree.1293" = type { %"class.std::__1::vector.1294" }
%"class.std::__1::vector.1294" = type { %"class.std::__1::__vector_base.1295" }
%"class.std::__1::__vector_base.1295" = type { %"struct.std::__1::pair.1296"*, %"struct.std::__1::pair.1296"*, %"class.std::__1::__compressed_pair.1297" }
%"struct.std::__1::pair.1296" = type opaque
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"struct.std::__1::pair.1296"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1144" = type { %"class.std::__1::vector.1137" }
%"class.base::internal::flat_tree.598" = type { %"class.std::__1::vector.599" }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.606" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.601", %"class.viz::SurfaceId" }
%"class.absl::optional.601" = type { %"class.absl::optional_internal::optional_data.602" }
%"class.absl::optional_internal::optional_data.602" = type { %"class.absl::optional_internal::optional_data_base.603" }
%"class.absl::optional_internal::optional_data_base.603" = type { %"class.absl::optional_internal::optional_data_dtor_base.604" }
%"class.absl::optional_internal::optional_data_dtor_base.604" = type { i8, %union.anon.605 }
%union.anon.605 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1145" = type { %"class.std::__1::__vector_base.1146" }
%"class.std::__1::__vector_base.1146" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::unique_ptr.116"*, %"class.std::__1::unique_ptr.116"*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::unique_ptr.116"* }
%"class.std::__1::vector.1152" = type { %"class.std::__1::__vector_base.1153" }
%"class.std::__1::__vector_base.1153" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1154" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1159 = type { %"class.cc::SyncedProperty.1160"* }
%"class.cc::SyncedProperty.1160" = type <{ %"class.base::RefCounted.1161", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", i8, [3 x i8] }>
%"class.base::RefCounted.1161" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1162" = type { float }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.base::OnceCallback.635"*, %"class.base::OnceCallback.635"*, %"class.std::__1::__compressed_pair.636" }
%"class.base::OnceCallback.635" = type opaque
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.base::OnceCallback.635"* }
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %"class.std::__1::unique_ptr.758"*, %"class.std::__1::unique_ptr.758"*, %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.1500" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.1501" }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1502", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1502" = type { %"class.absl::optional_internal::optional_data.1503" }
%"class.absl::optional_internal::optional_data.1503" = type { %"class.absl::optional_internal::optional_data_base.1504" }
%"class.absl::optional_internal::optional_data_base.1504" = type { %"class.absl::optional_internal::optional_data_dtor_base.1505" }
%"class.absl::optional_internal::optional_data_dtor_base.1505" = type { i8, %union.anon.1506 }
%union.anon.1506 = type { i32 }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.std::__1::unique_ptr.758"* }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { %"class.std::__1::unique_ptr.1178"*, %"class.std::__1::unique_ptr.1178"*, %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::unique_ptr.1178" = type opaque
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.std::__1::unique_ptr.1178"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.1184" }
%"class.base::flat_map.1184" = type { %"class.base::internal::flat_tree.1185" }
%"class.base::internal::flat_tree.1185" = type { %"class.std::__1::vector.1186" }
%"class.std::__1::vector.1186" = type { %"class.std::__1::__vector_base.1187" }
%"class.std::__1::__vector_base.1187" = type { %"struct.std::__1::pair.1188"*, %"struct.std::__1::pair.1188"*, %"class.std::__1::__compressed_pair.1189" }
%"struct.std::__1::pair.1188" = type opaque
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"struct.std::__1::pair.1188"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1197", %"class.std::__1::vector.1197", %"class.std::__1::vector.1204" }
%"class.std::__1::vector.1197" = type { %"class.std::__1::__vector_base.1198" }
%"class.std::__1::__vector_base.1198" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { i8** }
%"class.std::__1::vector.1204" = type { %"class.std::__1::__vector_base.1205" }
%"class.std::__1::__vector_base.1205" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1206" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.cc::Region"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.1302", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.1472", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.1194" }>
%"class.base::RefCounted.1302" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.1311", %class.scoped_refptr.155, %"class.std::__1::unique_ptr.1312", i32, %"class.std::__1::unique_ptr.1318", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1330", i32, %"class.std::__1::unique_ptr.1336", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.1342", %"class.std::__1::unique_ptr.1342", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.1348, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection.999", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.1164", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.1349, %"class.base::flat_map.1350", %"class.base::internal::flat_tree.1360", %"class.std::__1::unordered_map.1368", %"class.std::__1::unordered_map.1392", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.1416", %"class.std::__1::unordered_map.1424", %"class.std::__1::vector.633", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.1448", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.1170", %"class.std::__1::vector.1176", %"class.base::flat_map.1454", %"class.base::WeakPtrFactory.1464" }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.1303", %class.scoped_refptr }
%"class.std::__1::vector.1303" = type { %"class.std::__1::__vector_base.1304" }
%"class.std::__1::__vector_base.1304" = type { %"class.std::__1::unique_ptr.1305"*, %"class.std::__1::unique_ptr.1305"*, %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::unique_ptr.1305" = type opaque
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.std::__1::unique_ptr.1305"* }
%"class.base::WeakPtr.1311" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1330" = type { %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { %"class.cc::TaskRunnerProvider"* }
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.114", %"class.std::__1::set.538" }
%"class.std::__1::unique_ptr.1342" = type { %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%class.scoped_refptr.1348 = type { %"class.cc::Layer"* }
%class.scoped_refptr.1349 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.1350" = type { %"class.base::internal::flat_tree.1351" }
%"class.base::internal::flat_tree.1351" = type { %"class.std::__1::vector.1352" }
%"class.std::__1::vector.1352" = type { %"class.std::__1::__vector_base.1353" }
%"class.std::__1::__vector_base.1353" = type { %"struct.std::__1::pair.1354"*, %"struct.std::__1::pair.1354"*, %"class.std::__1::__compressed_pair.1355" }
%"struct.std::__1::pair.1354" = type opaque
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"struct.std::__1::pair.1354"* }
%"class.base::internal::flat_tree.1360" = type { %"class.std::__1::vector.1361" }
%"class.std::__1::vector.1361" = type { %"class.std::__1::__vector_base.1362" }
%"class.std::__1::__vector_base.1362" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map.1368" = type { %"class.std::__1::__hash_table.1369" }
%"class.std::__1::__hash_table.1369" = type <{ %"class.std::__1::unique_ptr.1370", %"class.std::__1::__compressed_pair.1380", %"class.std::__1::__compressed_pair.1385", %"class.std::__1::__compressed_pair.1388", [4 x i8] }>
%"class.std::__1::unique_ptr.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372", %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"struct.std::__1::__hash_node_base.1373"** }
%"struct.std::__1::__hash_node_base.1373" = type { %"struct.std::__1::__hash_node_base.1373"* }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.std::__1::__bucket_list_deallocator.1375" }
%"class.std::__1::__bucket_list_deallocator.1375" = type { %"class.std::__1::__compressed_pair.1376" }
%"class.std::__1::__compressed_pair.1376" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"struct.std::__1::__hash_node_base.1373" }
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.1392" = type { %"class.std::__1::__hash_table.1393" }
%"class.std::__1::__hash_table.1393" = type <{ %"class.std::__1::unique_ptr.1394", %"class.std::__1::__compressed_pair.1404", %"class.std::__1::__compressed_pair.1409", %"class.std::__1::__compressed_pair.1412", [4 x i8] }>
%"class.std::__1::unique_ptr.1394" = type { %"class.std::__1::__compressed_pair.1395" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396", %"struct.std::__1::__compressed_pair_elem.1398" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"struct.std::__1::__hash_node_base.1397"** }
%"struct.std::__1::__hash_node_base.1397" = type { %"struct.std::__1::__hash_node_base.1397"* }
%"struct.std::__1::__compressed_pair_elem.1398" = type { %"class.std::__1::__bucket_list_deallocator.1399" }
%"class.std::__1::__bucket_list_deallocator.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1404" = type { %"struct.std::__1::__compressed_pair_elem.1405" }
%"struct.std::__1::__compressed_pair_elem.1405" = type { %"struct.std::__1::__hash_node_base.1397" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.1416" = type { %"class.std::__1::__vector_base.1417" }
%"class.std::__1::__vector_base.1417" = type { %"struct.std::__1::pair.1418"*, %"struct.std::__1::pair.1418"*, %"class.std::__1::__compressed_pair.1419" }
%"struct.std::__1::pair.1418" = type opaque
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"struct.std::__1::pair.1418"* }
%"class.std::__1::unordered_map.1424" = type { %"class.std::__1::__hash_table.1425" }
%"class.std::__1::__hash_table.1425" = type <{ %"class.std::__1::unique_ptr.1426", %"class.std::__1::__compressed_pair.1436", %"class.std::__1::__compressed_pair.1441", %"class.std::__1::__compressed_pair.1444", [4 x i8] }>
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428", %"struct.std::__1::__compressed_pair_elem.1430" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.std::__1::__hash_node_base.1429"** }
%"struct.std::__1::__hash_node_base.1429" = type { %"struct.std::__1::__hash_node_base.1429"* }
%"struct.std::__1::__compressed_pair_elem.1430" = type { %"class.std::__1::__bucket_list_deallocator.1431" }
%"class.std::__1::__bucket_list_deallocator.1431" = type { %"class.std::__1::__compressed_pair.1432" }
%"class.std::__1::__compressed_pair.1432" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"struct.std::__1::__hash_node_base.1429" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.385" }
%"class.std::__1::unique_ptr.1448" = type { %"class.std::__1::__compressed_pair.1449" }
%"class.std::__1::__compressed_pair.1449" = type { %"struct.std::__1::__compressed_pair_elem.1450" }
%"struct.std::__1::__compressed_pair_elem.1450" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::flat_map.1454" = type { %"class.base::internal::flat_tree.1455" }
%"class.base::internal::flat_tree.1455" = type { %"class.std::__1::vector.1456" }
%"class.std::__1::vector.1456" = type { %"class.std::__1::__vector_base.1457" }
%"class.std::__1::__vector_base.1457" = type { %"struct.std::__1::pair.1458"*, %"struct.std::__1::pair.1458"*, %"class.std::__1::__compressed_pair.1459" }
%"struct.std::__1::pair.1458" = type opaque
%"class.std::__1::__compressed_pair.1459" = type { %"struct.std::__1::__compressed_pair_elem.1460" }
%"struct.std::__1::__compressed_pair_elem.1460" = type { %"struct.std::__1::pair.1458"* }
%"class.base::WeakPtrFactory.1464" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.1465", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.1465" = type { %"class.std::__1::__vector_base.1466" }
%"class.std::__1::__vector_base.1466" = type { %class.scoped_refptr.1348*, %class.scoped_refptr.1348*, %"class.std::__1::__compressed_pair.1467" }
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.1468" }
%"struct.std::__1::__compressed_pair_elem.1468" = type { %class.scoped_refptr.1348* }
%"class.std::__1::unique_ptr.1472" = type { %"class.std::__1::__compressed_pair.1473" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1474" }
%"struct.std::__1::__compressed_pair_elem.1474" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.870", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.1475", %"class.std::__1::vector.1476" }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.1487", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.1230, %"class.absl::optional.1280", [4 x i8] }>
%"class.cc::ContentLayerClient" = type opaque
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type { i32 (...)**, %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i8, i32, i32, %class.scoped_refptr.1230, float, %"class.cc::InvalidationRegion" }
%"class.cc::InvalidationRegion" = type { %"class.cc::Region", %"class.std::__1::vector.858" }
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.1475" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1476" = type { %"class.std::__1::__vector_base.1477" }
%"class.std::__1::__vector_base.1477" = type { %"class.std::__1::unique_ptr.1478"*, %"class.std::__1::unique_ptr.1478"*, %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::unique_ptr.1478" = type opaque
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.std::__1::unique_ptr.1478"* }
%"class.cc::LayerListIterator" = type { i32 (...)**, %"class.cc::Layer"*, %"class.std::__1::vector.1493" }
%"class.std::__1::vector.1493" = type { %"class.std::__1::__vector_base.1494" }
%"class.std::__1::__vector_base.1494" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { i64* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1573", [4 x i8] }>
%"struct.std::__1::atomic.1573" = type { %"struct.std::__1::__atomic_base.1574" }
%"struct.std::__1::__atomic_base.1574" = type { %"struct.std::__1::__atomic_base.1575" }
%"struct.std::__1::__atomic_base.1575" = type { %"struct.std::__1::__cxx_atomic_impl.1576" }
%"struct.std::__1::__cxx_atomic_impl.1576" = type { %"struct.std::__1::__cxx_atomic_base_impl.1577" }
%"struct.std::__1::__cxx_atomic_base_impl.1577" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.1550" = type <{ %"class.gfx::MaskFilterInfo", i8, [3 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1529", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1529" = type { %"class.std::__1::__vector_base.1530" }
%"class.std::__1::__vector_base.1530" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1537" }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1531", i64, i64 }
%"class.std::__1::unique_ptr.1531" = type { %"class.std::__1::__compressed_pair.1532" }
%"class.std::__1::__compressed_pair.1532" = type { %"struct.std::__1::__compressed_pair_elem.1533" }
%"struct.std::__1::__compressed_pair_elem.1533" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.1542" }
%"class.std::__1::list.1542" = type { %"class.std::__1::__list_imp.1543" }
%"class.std::__1::__list_imp.1543" = type { %"struct.std::__1::__list_node_base.1544", %"class.std::__1::__compressed_pair.1545" }
%"struct.std::__1::__list_node_base.1544" = type { %"struct.std::__1::__list_node_base.1544"*, %"struct.std::__1::__list_node_base.1544"* }
%"class.std::__1::__compressed_pair.1545" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::stack" = type { %"class.std::__1::vector.1551" }
%"class.std::__1::vector.1551" = type { %"class.std::__1::__vector_base.1552" }
%"class.std::__1::__vector_base.1552" = type { %"struct.cc::ClipNode"**, %"struct.cc::ClipNode"**, %"class.std::__1::__compressed_pair.1553" }
%"class.std::__1::__compressed_pair.1553" = type { %"struct.std::__1::__compressed_pair_elem.1554" }
%"struct.std::__1::__compressed_pair_elem.1554" = type { %"struct.cc::ClipNode"** }

$_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZNSt3__15stackIPKN2cc8ClipNodeENS_6vectorIS4_NS_9allocatorIS4_EEEEE4pushERKS4_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN2cc5LayerEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [47 x i8] c"draw_property_utils::FindLayersThatNeedUpdates\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"draw_property_utils::ComputeDrawPropertiesOfVisibleLayers\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"visible_layers\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"CalculateRenderSurfaceLayerList\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect = private unnamed_addr constant { i8, [3 x i8], %"class.gfx::RectF" } { i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } }, align 4
@_ZZN2cc19draw_property_utils12_GLOBAL__N_136RecordRenderSurfaceReasonsForTracingEPKNS_13PropertyTreesEPKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEEE15tracing_enabled = internal unnamed_addr global i8* null, align 8
@_ZGVZN2cc19draw_property_utils12_GLOBAL__N_136RecordRenderSurfaceReasonsForTracingEPKNS_13PropertyTreesEPKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEEE15tracing_enabled = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [3 x i8] c"cc\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"RenderSurfaceReasonCount\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.8 = private unnamed_addr constant [53 x i8] c"Compositing.Renderer.LayerUpdateSkippedDueToBackface\00", align 1
@__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_5LayerEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc19draw_property_utils48LayerShouldBeSkippedForDrawPropertiesComputationEPNS_9LayerImplEPKNS_13PropertyTreesE(%"class.cc::LayerImpl"*, %"class.cc::PropertyTrees"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %9 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %9, i64 %7
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"struct.cc::EffectNode"* [ %10, %6 ], [ null, %2 ]
  %13 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %12, i64 0, i32 17
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %12, i64 0, i32 16
  %17 = bitcast [3 x i8]* %16 to i24*
  %18 = load i24, i24* %17, align 4
  %19 = and i24 %18, 65536
  %20 = icmp eq i24 %19, 0
  %21 = or i1 %15, %20
  br i1 %21, label %22, label %67

22:                                               ; preds = %11
  %23 = and i24 %18, 129
  %24 = icmp eq i24 %23, 128
  br i1 %24, label %25, label %29

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %12, i64 0, i32 14, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %67, label %29

29:                                               ; preds = %25, %22
  %30 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %33, label %38

33:                                               ; preds = %29
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %36 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %35, align 8
  %37 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %36, i64 %34
  br label %38

38:                                               ; preds = %29, %33
  %39 = phi %"struct.cc::TransformNode"* [ %37, %33 ], [ null, %29 ]
  %40 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %39, i64 0, i32 10
  %41 = bitcast i24* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = and i24 %18, 32
  %46 = icmp eq i24 %45, 0
  %47 = or i1 %46, %44
  br i1 %47, label %67, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %50 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %49, align 8
  %51 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %50) #12
  %52 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %51, i64 0, i32 76
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %57 = load i16, i16* %56, align 4
  %58 = and i16 %57, 64
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %55
  %61 = load i32, i32* %30, align 8
  %62 = tail call zeroext i1 @_ZN2cc19draw_property_utils22IsLayerBackFaceVisibleEPNS_9LayerImplEiPKNS_13PropertyTreesE(%"class.cc::LayerImpl"* %0, i32 %61, %"class.cc::PropertyTrees"* %1)
  br label %67

63:                                               ; preds = %48
  %64 = load i24, i24* %17, align 4
  %65 = and i24 %64, 4
  %66 = icmp ne i24 %65, 0
  br label %67

67:                                               ; preds = %11, %25, %55, %63, %38, %60
  %68 = phi i1 [ true, %25 ], [ %66, %63 ], [ true, %38 ], [ false, %55 ], [ %62, %60 ], [ false, %11 ]
  ret i1 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc19draw_property_utils22IsLayerBackFaceVisibleEPNS_9LayerImplEiPKNS_13PropertyTreesE(%"class.cc::LayerImpl"*, i32, %"class.cc::PropertyTrees"*) local_unnamed_addr #0 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %7 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %6, align 8
  %8 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %7) #12
  %9 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %8, i64 0, i32 76
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %66, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 3
  %14 = icmp sgt i32 %1, -1
  br i1 %14, label %15, label %20

15:                                               ; preds = %12
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %18 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %17, align 8
  %19 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %18, i64 %16
  br label %20

20:                                               ; preds = %15, %12
  %21 = phi %"struct.cc::TransformNode"* [ %19, %15 ], [ null, %12 ]
  %22 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 10
  %23 = bitcast i24* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16384
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %34 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %33, align 8
  %35 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %34, i64 %32
  br label %36

36:                                               ; preds = %31, %27, %20
  %37 = phi i32 [ %1, %20 ], [ %29, %27 ], [ %29, %31 ]
  %38 = phi %"struct.cc::TransformNode"* [ %21, %20 ], [ null, %27 ], [ %35, %31 ]
  %39 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 0, i32 9
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br label %42

42:                                               ; preds = %54, %36
  %43 = phi %"struct.cc::TransformNode"* [ %38, %36 ], [ %55, %54 ]
  %44 = phi i32 [ %37, %36 ], [ %48, %54 ]
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %59

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %43, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = sext i32 %48 to i64
  %52 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %41, align 8
  %53 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %52, i64 %51
  br label %54

54:                                               ; preds = %50, %46
  %55 = phi %"struct.cc::TransformNode"* [ %53, %50 ], [ null, %46 ]
  %56 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %55, i64 0, i32 9
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, %40
  br i1 %58, label %42, label %59

59:                                               ; preds = %54, %42
  %60 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %60) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %61 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  store i8 0, i8* %61, align 4
  %62 = icmp eq i32 %37, %44
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  call void @_ZNK2cc13TransformTree24CombineTransformsBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"* %13, i32 %37, i32 %44, %"class.gfx::Transform"* nonnull %4) #12
  br label %64

64:                                               ; preds = %59, %63
  %65 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %43, i64 0, i32 7
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* dereferenceable(68) %65) #12
  br label %89

66:                                               ; preds = %3
  %67 = icmp sgt i32 %1, -1
  br i1 %67, label %68, label %73

68:                                               ; preds = %66
  %69 = sext i32 %1 to i64
  %70 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %71 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %70, align 8
  %72 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %71, i64 %69
  br label %73

73:                                               ; preds = %68, %66
  %74 = phi %"struct.cc::TransformNode"* [ %72, %68 ], [ null, %66 ]
  %75 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %74, i64 0, i32 10
  %76 = bitcast i24* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 16384
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %74, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %73, %80
  %84 = phi i32 [ %82, %80 ], [ %1, %73 ]
  %85 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %85) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %86 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %86, align 4
  %87 = tail call i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"* %0) #12
  %88 = call zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %2, i32 %84, i32 %87, %"class.gfx::Transform"* nonnull %5) #12
  br label %89

89:                                               ; preds = %83, %64
  %90 = phi %"class.gfx::Transform"* [ %5, %83 ], [ %4, %64 ]
  %91 = phi i8* [ %85, %83 ], [ %60, %64 ]
  %92 = call zeroext i1 @_ZNK3gfx9Transform17IsBackFaceVisibleEv(%"class.gfx::Transform"* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %91) #12
  ret i1 %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc19draw_property_utils22IsLayerBackFaceVisibleEPNS_5LayerEiPKNS_13PropertyTreesE(%"class.cc::Layer"* nocapture readonly, i32, %"class.cc::PropertyTrees"* nocapture readnone) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 4
  %5 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %4, align 8
  %6 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeHost11GetSettingsEv(%"class.cc::LayerTreeHost"* %5) #12
  ret i1 false
}

declare dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeHost11GetSettingsEv(%"class.cc::LayerTreeHost"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils33ConcatInverseSurfaceContentsScaleEPKNS_10EffectNodeEPN3gfx9TransformE(%"struct.cc::EffectNode"* nocapture readonly, %"class.gfx::Transform"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 13, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %0, i64 0, i32 13, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp une float %8, 0.000000e+00
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = fdiv float 1.000000e+00, %4
  %12 = fdiv float 1.000000e+00, %8
  tail call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* %1, float %11, float %12) #12
  br label %13

13:                                               ; preds = %10, %6, %2
  ret void
}

declare void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils25FindLayersThatNeedUpdatesEPNS_13LayerTreeHostEPNSt3__16vectorI13scoped_refptrINS_5LayerEENS3_9allocatorIS7_EEEE(%"class.cc::LayerTreeHost"*, %"class.std::__1::vector.1465"*) local_unnamed_addr #0 {
  %3 = alloca %"class.cc::LayerListIterator", align 8
  %4 = alloca %"class.cc::LayerListIterator", align 8
  %5 = alloca %class.scoped_refptr.1348, align 8
  %6 = bitcast %"class.cc::LayerListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %3, i64 0, i32 1
  %8 = bitcast %"class.cc::LayerListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc13LayerTreeHost5beginEv(%"class.cc::LayerListIterator"* nonnull sret %3, %"class.cc::LayerTreeHost"* %0) #12
  %9 = bitcast %"class.cc::LayerListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %4, i64 0, i32 1
  %11 = bitcast %"class.cc::LayerListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc13LayerTreeHost3endEv(%"class.cc::LayerListIterator"* nonnull sret %4, %"class.cc::LayerTreeHost"* %0) #12
  %12 = load %"class.cc::Layer"*, %"class.cc::Layer"** %7, align 8
  %13 = load %"class.cc::Layer"*, %"class.cc::Layer"** %10, align 8
  %14 = icmp eq %"class.cc::Layer"* %12, %13
  br i1 %14, label %24, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %class.scoped_refptr.1348* %5 to i8*
  %19 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.1465", %"class.std::__1::vector.1465"* %1, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.1465", %"class.std::__1::vector.1465"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %class.scoped_refptr.1348* %5 to i64*
  %23 = bitcast %class.scoped_refptr.1348** %20 to i64*
  br label %25

24:                                               ; preds = %165, %2
  call void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #12
  call void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #12
  ret void

25:                                               ; preds = %15, %165
  %26 = phi %"class.cc::Layer"* [ %12, %15 ], [ %167, %165 ]
  %27 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %26, i64 0, i32 3
  %28 = load %"class.cc::Layer"*, %"class.cc::Layer"** %27, align 8
  %29 = icmp eq %"class.cc::Layer"* %28, null
  br i1 %29, label %68, label %30

30:                                               ; preds = %25
  %31 = call i32 @_ZNK2cc5Layer17effect_tree_indexEv(%"class.cc::Layer"* %26) #12
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = sext i32 %31 to i64
  %35 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %16, align 8
  %36 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %35, i64 %34
  br label %37

37:                                               ; preds = %33, %30
  %38 = phi %"struct.cc::EffectNode"* [ %36, %33 ], [ null, %30 ]
  %39 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %38, i64 0, i32 17
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %38, i64 0, i32 16
  %44 = bitcast [3 x i8]* %43 to i24*
  %45 = load i24, i24* %44, align 4
  %46 = and i24 %45, 65536
  %47 = icmp eq i24 %46, 0
  br i1 %47, label %48, label %68

48:                                               ; preds = %42, %37
  %49 = call i32 @_ZNK2cc5Layer20transform_tree_indexEv(%"class.cc::Layer"* %26) #12
  %50 = icmp sgt i32 %49, -1
  br i1 %50, label %51, label %55

51:                                               ; preds = %48
  %52 = sext i32 %49 to i64
  %53 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %17, align 8
  %54 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %53, i64 %52
  br label %55

55:                                               ; preds = %51, %48
  %56 = phi %"struct.cc::TransformNode"* [ %54, %51 ], [ null, %48 ]
  %57 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %56, i64 0, i32 10
  %58 = bitcast i24* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %165, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %38, i64 0, i32 16
  %64 = bitcast [3 x i8]* %63 to i24*
  %65 = load i24, i24* %64, align 4
  %66 = and i24 %65, 32
  %67 = icmp eq i24 %66, 0
  br i1 %67, label %165, label %68

68:                                               ; preds = %42, %62, %25
  %69 = call i32 @_ZNK2cc5Layer17effect_tree_indexEv(%"class.cc::Layer"* %26) #12
  %70 = icmp sgt i32 %69, -1
  br i1 %70, label %71, label %75

71:                                               ; preds = %68
  %72 = sext i32 %69 to i64
  %73 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %16, align 8
  %74 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %73, i64 %72
  br label %75

75:                                               ; preds = %68, %71
  %76 = phi %"struct.cc::EffectNode"* [ %74, %71 ], [ null, %68 ]
  %77 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %76, i64 0, i32 16
  %78 = bitcast [3 x i8]* %77 to i24*
  %79 = load i24, i24* %78, align 4
  %80 = and i24 %79, 32
  %81 = icmp eq i24 %80, 0
  br i1 %81, label %165, label %82

82:                                               ; preds = %75
  %83 = call zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"* %26) #12
  br i1 %83, label %84, label %165

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %26, i64 0, i32 5, i32 2, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %165, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %26, i64 0, i32 5, i32 2, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %165, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %26, i64 0, i32 15
  %94 = load i16, i16* %93, align 1
  %95 = and i16 %94, 2
  %96 = icmp eq i16 %95, 0
  br i1 %96, label %127, label %97

97:                                               ; preds = %92
  %98 = call i32 @_ZNK2cc5Layer20transform_tree_indexEv(%"class.cc::Layer"* %26) #12
  %99 = icmp sgt i32 %98, -1
  br i1 %99, label %100, label %104

100:                                              ; preds = %97
  %101 = sext i32 %98 to i64
  %102 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %17, align 8
  %103 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %102, i64 %101
  br label %104

104:                                              ; preds = %100, %97
  %105 = phi %"struct.cc::TransformNode"* [ %103, %100 ], [ null, %97 ]
  %106 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %105, i64 0, i32 10
  %107 = bitcast i24* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 64
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %127

111:                                              ; preds = %104
  br i1 %99, label %112, label %116

112:                                              ; preds = %111
  %113 = sext i32 %98 to i64
  %114 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %17, align 8
  %115 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %114, i64 %113
  br label %116

116:                                              ; preds = %112, %111
  %117 = phi %"struct.cc::TransformNode"* [ %115, %112 ], [ null, %111 ]
  %118 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %117, i64 0, i32 10
  %119 = bitcast i24* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 12
  %122 = icmp eq i32 %121, 12
  br i1 %122, label %123, label %127

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %26, i64 0, i32 4
  %125 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %124, align 8
  %126 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeHost11GetSettingsEv(%"class.cc::LayerTreeHost"* %125) #12
  br label %127

127:                                              ; preds = %123, %116, %104, %92
  %128 = load atomic i64, i64* @_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_5LayerEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %129 = inttoptr i64 %128 to %"class.base::HistogramBase"*
  %130 = icmp eq i64 %128, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %127
  %132 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 1) #12
  %133 = ptrtoint %"class.base::HistogramBase"* %132 to i64
  store atomic i64 %133, i64* @_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_5LayerEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %134

134:                                              ; preds = %131, %127
  %135 = phi %"class.base::HistogramBase"* [ %129, %127 ], [ %132, %131 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %135, i1 zeroext false) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store %"class.cc::Layer"* %26, %"class.cc::Layer"** %19, align 8
  %136 = icmp eq %"class.cc::Layer"* %26, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %26, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %138) #12
  br label %139

139:                                              ; preds = %134, %137
  %140 = load %class.scoped_refptr.1348*, %class.scoped_refptr.1348** %20, align 8
  %141 = load %class.scoped_refptr.1348*, %class.scoped_refptr.1348** %21, align 8
  %142 = icmp ult %class.scoped_refptr.1348* %140, %141
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = load i64, i64* %22, align 8
  %145 = bitcast %class.scoped_refptr.1348* %140 to i64*
  store i64 %144, i64* %145, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %19, align 8
  %146 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %140, i64 1
  %147 = ptrtoint %class.scoped_refptr.1348* %146 to i64
  store i64 %147, i64* %23, align 8
  br label %164

148:                                              ; preds = %139
  call void @_ZNSt3__16vectorI13scoped_refptrIN2cc5LayerEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1465"* %1, %class.scoped_refptr.1348* nonnull dereferenceable(8) %5) #12
  %149 = load %"class.cc::Layer"*, %"class.cc::Layer"** %19, align 8
  %150 = icmp eq %"class.cc::Layer"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %149, i64 0, i32 1
  %153 = getelementptr inbounds %"class.base::RefCounted.1302", %"class.base::RefCounted.1302"* %152, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %153) #12
  %154 = getelementptr inbounds %"class.base::RefCounted.1302", %"class.base::RefCounted.1302"* %152, i64 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %164

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"class.base::RefCounted.1302", %"class.base::RefCounted.1302"* %152, i64 -2
  %159 = bitcast %"class.base::RefCounted.1302"* %158 to %"class.cc::Layer"*
  %160 = bitcast %"class.base::RefCounted.1302"* %158 to void (%"class.cc::Layer"*)***
  %161 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %161, i64 15
  %163 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %162, align 8
  call void %163(%"class.cc::Layer"* nonnull %159) #12
  br label %164

164:                                              ; preds = %143, %148, %151, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %165

165:                                              ; preds = %75, %84, %82, %88, %55, %164, %62
  %166 = call dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc17LayerListIteratorppEv(%"class.cc::LayerListIterator"* nonnull %3) #12
  %167 = load %"class.cc::Layer"*, %"class.cc::Layer"** %7, align 8
  %168 = load %"class.cc::Layer"*, %"class.cc::Layer"** %10, align 8
  %169 = icmp eq %"class.cc::Layer"* %167, %168
  br i1 %169, label %24, label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK2cc13LayerTreeHost5beginEv(%"class.cc::LayerListIterator"* sret, %"class.cc::LayerTreeHost"*) local_unnamed_addr #2

declare void @_ZNK2cc13LayerTreeHost3endEv(%"class.cc::LayerListIterator"* sret, %"class.cc::LayerTreeHost"*) local_unnamed_addr #2

declare i32 @_ZNK2cc5Layer17effect_tree_indexEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc17LayerListIteratorppEv(%"class.cc::LayerListIterator"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils25FindLayersThatNeedUpdatesEPNS_13LayerTreeImplEPNSt3__16vectorIPNS_9LayerImplENS3_9allocatorIS6_EEEE(%"class.cc::LayerTreeImpl"*, %"class.std::__1::vector.1048"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 22, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 22, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.1012"* %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %1, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.cc::LayerImpl"*** %11 to i64*
  %14 = bitcast %"class.std::__1::vector.1048"* %1 to i64*
  %15 = bitcast %"class.cc::LayerImpl"*** %12 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %1, i64 0, i32 0, i32 0
  br label %18

17:                                               ; preds = %106, %2
  ret void

18:                                               ; preds = %9, %106
  %19 = phi %"class.std::__1::unique_ptr.1012"* [ %5, %9 ], [ %107, %106 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1012"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %20, align 8
  %22 = ptrtoint %"class.cc::LayerImpl"* %21 to i64
  tail call void @_ZNK2cc9LayerImpl30EnsureValidPropertyTreeIndicesEv(%"class.cc::LayerImpl"* %21) #12
  %23 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %21, i64 0, i32 3
  %24 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %23, align 8
  %25 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl11IsRootLayerEPKNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %24, %"class.cc::LayerImpl"* %21) #12
  br i1 %25, label %28, label %26

26:                                               ; preds = %18
  %27 = tail call zeroext i1 @_ZN2cc19draw_property_utils48LayerShouldBeSkippedForDrawPropertiesComputationEPNS_9LayerImplEPKNS_13PropertyTreesE(%"class.cc::LayerImpl"* %21, %"class.cc::PropertyTrees"* %3)
  br i1 %27, label %106, label %28

28:                                               ; preds = %26, %18
  %29 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %21, i64 0, i32 18
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = sext i32 %30 to i64
  %34 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %10, align 8
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %34, i64 %33
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi %"struct.cc::EffectNode"* [ %35, %32 ], [ null, %28 ]
  %38 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %37, i64 0, i32 16
  %39 = bitcast [3 x i8]* %38 to i24*
  %40 = load i24, i24* %39, align 4
  %41 = and i24 %40, 32
  %42 = icmp ne i24 %41, 0
  %43 = tail call fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesE(%"class.cc::LayerImpl"* %21, i1 zeroext %42, %"class.cc::PropertyTrees"* %3)
  br i1 %43, label %44, label %106

44:                                               ; preds = %36
  %45 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %11, align 8
  %46 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %12, align 8
  %47 = icmp eq %"class.cc::LayerImpl"** %45, %46
  %48 = ptrtoint %"class.cc::LayerImpl"** %46 to i64
  br i1 %47, label %53, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.cc::LayerImpl"** %45 to i64*
  store i64 %22, i64* %50, align 8
  %51 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %45, i64 1
  %52 = ptrtoint %"class.cc::LayerImpl"** %51 to i64
  store i64 %52, i64* %13, align 8
  br label %106

53:                                               ; preds = %44
  %54 = ptrtoint %"class.cc::LayerImpl"** %45 to i64
  %55 = load i64, i64* %14, align 8
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = icmp ugt i64 %58, 2305843009213693951
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = bitcast %"class.std::__1::vector.1048"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #13
  unreachable

62:                                               ; preds = %53
  %63 = sub i64 %48, %55
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 1152921504606846975
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %58
  %69 = select i1 %68, i64 %58, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @abort() #13
  unreachable

74:                                               ; preds = %71, %62
  %75 = phi i64 [ %69, %71 ], [ 2305843009213693951, %62 ]
  %76 = shl i64 %75, 3
  %77 = tail call i8* @_Znwm(i64 %76) #14
  %78 = bitcast i8* %77 to %"class.cc::LayerImpl"**
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi %"class.cc::LayerImpl"** [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %81, i64 %57
  %83 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %81, i64 %80
  %84 = ptrtoint %"class.cc::LayerImpl"** %83 to i64
  %85 = bitcast %"class.cc::LayerImpl"** %82 to i64*
  store i64 %22, i64* %85, align 8
  %86 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %82, i64 1
  %87 = ptrtoint %"class.cc::LayerImpl"** %86 to i64
  %88 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %16, align 8
  %89 = load i64, i64* %13, align 8
  %90 = ptrtoint %"class.cc::LayerImpl"** %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %82, i64 %93
  %95 = ptrtoint %"class.cc::LayerImpl"** %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %79
  %98 = bitcast %"class.cc::LayerImpl"** %94 to i8*
  %99 = bitcast %"class.cc::LayerImpl"** %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #12
  %100 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %16, align 8
  br label %101

101:                                              ; preds = %97, %79
  %102 = phi %"class.cc::LayerImpl"** [ %88, %79 ], [ %100, %97 ]
  store i64 %95, i64* %14, align 8
  store i64 %87, i64* %13, align 8
  store i64 %84, i64* %15, align 8
  %103 = icmp eq %"class.cc::LayerImpl"** %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.cc::LayerImpl"** %102 to i8*
  tail call void @_ZdlPv(i8* %105) #14
  br label %106

106:                                              ; preds = %104, %101, %49, %36, %26
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1012"* %19, i64 1
  %108 = icmp eq %"class.std::__1::unique_ptr.1012"* %107, %7
  br i1 %108, label %17, label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK2cc9LayerImpl30EnsureValidPropertyTreeIndicesEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesE(%"class.cc::LayerImpl"*, i1 zeroext, %"class.cc::PropertyTrees"*) unnamed_addr #0 {
  br i1 %1, label %4, label %55

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %6 = load i16, i16* %5, align 4
  %7 = trunc i16 %6 to i8
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %55

9:                                                ; preds = %4
  %10 = tail call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %0) #12
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  %13 = icmp ult i64 %10, 4294967296
  %14 = or i1 %13, %12
  br i1 %14, label %55, label %15

15:                                               ; preds = %9
  %16 = load i16, i16* %5, align 4
  %17 = and i16 %16, 64
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %26 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %25, align 8
  %27 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %26, i64 %24
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi %"struct.cc::TransformNode"* [ %27, %23 ], [ null, %19 ]
  %30 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %29, i64 0, i32 10
  %31 = bitcast i24* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 12
  %34 = icmp eq i32 %33, 12
  br i1 %34, label %35, label %46

35:                                               ; preds = %28
  %36 = tail call zeroext i1 @_ZN2cc19draw_property_utils22IsLayerBackFaceVisibleEPNS_9LayerImplEiPKNS_13PropertyTreesE(%"class.cc::LayerImpl"* %0, i32 %21, %"class.cc::PropertyTrees"* %2)
  br i1 %36, label %37, label %46

37:                                               ; preds = %35
  %38 = load atomic i64, i64* @_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %39 = inttoptr i64 %38 to %"class.base::HistogramBase"*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 1) #12
  %43 = ptrtoint %"class.base::HistogramBase"* %42 to i64
  store atomic i64 %43, i64* @_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi %"class.base::HistogramBase"* [ %39, %37 ], [ %42, %41 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %45, i1 zeroext true) #12
  br label %55

46:                                               ; preds = %28, %15, %35
  %47 = load atomic i64, i64* @_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %48 = inttoptr i64 %47 to %"class.base::HistogramBase"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 1) #12
  %52 = ptrtoint %"class.base::HistogramBase"* %51 to i64
  store atomic i64 %52, i64* @_ZZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi %"class.base::HistogramBase"* [ %48, %46 ], [ %51, %50 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %54, i1 zeroext false) #12
  br label %55

55:                                               ; preds = %9, %4, %53, %44, %3
  %56 = phi i1 [ false, %3 ], [ true, %53 ], [ false, %44 ], [ false, %4 ], [ false, %9 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils17ComputeTransformsEPNS_13TransformTreeE(%"class.cc::TransformTree"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.cc::TransformNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.825"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 224
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %17, %5
  tail call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %0, i1 zeroext false) #12
  br label %26

17:                                               ; preds = %5, %17
  %18 = phi i32 [ %19, %17 ], [ 1, %5 ]
  tail call void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"* %0, i32 %18) #12
  %19 = add nuw nsw i32 %18, 1
  %20 = load i64, i64* %8, align 8
  %21 = load i64, i64* %10, align 8
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 224
  %24 = trunc i64 %23 to i32
  %25 = icmp slt i32 %19, %24
  br i1 %25, label %17, label %16

26:                                               ; preds = %1, %16
  ret void
}

declare void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #2

declare void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils14ComputeEffectsEPNS_10EffectTreeE(%"class.cc::EffectTree"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.cc::EffectTree", %"class.cc::EffectTree"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.cc::EffectNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.847"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 288
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %17, %5
  store i8 0, i8* %2, align 8
  br label %26

17:                                               ; preds = %5, %17
  %18 = phi i32 [ %19, %17 ], [ 1, %5 ]
  tail call void @_ZN2cc10EffectTree13UpdateEffectsEi(%"class.cc::EffectTree"* %0, i32 %18) #12
  %19 = add nuw nsw i32 %18, 1
  %20 = load i64, i64* %8, align 8
  %21 = load i64, i64* %10, align 8
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 288
  %24 = trunc i64 %23 to i32
  %25 = icmp slt i32 %19, %24
  br i1 %25, label %17, label %16

26:                                               ; preds = %1, %16
  ret void
}

declare void @_ZN2cc10EffectTree13UpdateEffectsEi(%"class.cc::EffectTree"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils19UpdatePropertyTreesEPNS_13LayerTreeHostE(%"class.cc::LayerTreeHost"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60
  %3 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3
  %4 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 5, i32 0, i32 2
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 2
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 0, i32 1
  %11 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 3, i32 0, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.cc::TransformNode"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.825"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 224
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %18, 1
  br i1 %19, label %21, label %20

20:                                               ; preds = %21, %7
  tail call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %3, i1 zeroext false) #12
  br label %30

21:                                               ; preds = %7, %21
  %22 = phi i32 [ %23, %21 ], [ 1, %7 ]
  tail call void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"* %3, i32 %22) #12
  %23 = add nuw nsw i32 %22, 1
  %24 = load i64, i64* %12, align 8
  %25 = load i64, i64* %14, align 8
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 224
  %28 = trunc i64 %27 to i32
  %29 = icmp slt i32 %23, %28
  br i1 %29, label %21, label %20

30:                                               ; preds = %1, %20
  %31 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4
  %32 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 2
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %56, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 1
  %37 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %0, i64 0, i32 60, i32 4, i32 0, i32 1, i32 0, i32 1
  %38 = bitcast %"struct.cc::EffectNode"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.847"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = sdiv exact i64 %42, 288
  %44 = trunc i64 %43 to i32
  %45 = icmp sgt i32 %44, 1
  br i1 %45, label %47, label %46

46:                                               ; preds = %47, %35
  store i8 0, i8* %32, align 8
  br label %56

47:                                               ; preds = %35, %47
  %48 = phi i32 [ %49, %47 ], [ 1, %35 ]
  tail call void @_ZN2cc10EffectTree13UpdateEffectsEi(%"class.cc::EffectTree"* %31, i32 %48) #12
  %49 = add nuw nsw i32 %48, 1
  %50 = load i64, i64* %38, align 8
  %51 = load i64, i64* %40, align 8
  %52 = sub i64 %50, %51
  %53 = sdiv exact i64 %52, 288
  %54 = trunc i64 %53 to i32
  %55 = icmp slt i32 %49, %54
  br i1 %55, label %47, label %46

56:                                               ; preds = %30, %46
  tail call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_112ComputeClipsEPNS_13PropertyTreesE(%"class.cc::PropertyTrees"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_112ComputeClipsEPNS_13PropertyTreesE(%"class.cc::PropertyTrees"*) unnamed_addr #0 {
  %2 = alloca %"class.gfx::RectF", align 4
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.cc::ClipNode"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.924"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 184
  %15 = trunc i64 %14 to i32
  %16 = icmp sgt i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.gfx::RectF"* %2 to i8*
  br label %21

20:                                               ; preds = %54, %6
  store i8 0, i8* %3, align 8
  br label %63

21:                                               ; preds = %17, %54
  %22 = phi i64 [ %12, %17 ], [ %57, %54 ]
  %23 = phi i64 [ 1, %17 ], [ %55, %54 ]
  %24 = inttoptr i64 %22 to %"struct.cc::ClipNode"*
  %25 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 %23
  %26 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 %23, i32 5, i32 0, i32 2
  %27 = bitcast %"class.std::__1::vector.928"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 %23, i32 5, i32 0, i32 2, i32 0, i32 1
  %30 = bitcast %"struct.cc::ClipRectData"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %25, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %39

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 %23, i32 3
  %36 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 %23, i32 6
  %37 = bitcast %"class.gfx::RectF"* %36 to i8*
  %38 = bitcast %"class.gfx::RectF"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 16, i1 false)
  br label %54

39:                                               ; preds = %21
  %40 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 %23, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, -1
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = sext i32 %41 to i64
  %45 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %18, align 8
  %46 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %45, i64 %44
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi %"struct.cc::ClipNode"* [ %46, %43 ], [ null, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %49 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %48, i64 0, i32 6
  %50 = bitcast %"class.gfx::RectF"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 8 %50, i64 16, i1 false)
  %51 = call fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_130ApplyClipNodeToAccumulatedClipEPKNS_13PropertyTreesEbiiPKNS_8ClipNodeEPN3gfx5RectFE(%"class.cc::PropertyTrees"* %0, i1 zeroext true, i32 1, i32 0, %"struct.cc::ClipNode"* %25, %"class.gfx::RectF"* nonnull %2)
  %52 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %24, i64 %23, i32 6
  %53 = bitcast %"class.gfx::RectF"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 4 %19, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  br label %54

54:                                               ; preds = %47, %34
  %55 = add nuw nsw i64 %23, 1
  %56 = load i64, i64* %9, align 8
  %57 = load i64, i64* %11, align 8
  %58 = sub i64 %56, %57
  %59 = sdiv exact i64 %58, 184
  %60 = shl i64 %59, 32
  %61 = ashr exact i64 %60, 32
  %62 = icmp slt i64 %55, %61
  br i1 %62, label %21, label %20

63:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils36UpdatePropertyTreesAndRenderSurfacesEPNS_9LayerImplEPNS_13PropertyTreesE(%"class.cc::LayerImpl"* nocapture readnone, %"class.cc::PropertyTrees"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 5, i32 0, i32 2
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %9, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4
  %12 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1
  %13 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.cc::EffectNode"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.847"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 288
  %20 = trunc i64 %19 to i32
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %25, label %119

22:                                               ; preds = %59
  %23 = inttoptr i64 %64 to %"struct.cc::EffectNode"*
  %24 = icmp eq i32 %60, 0
  br i1 %24, label %119, label %70

25:                                               ; preds = %10, %59
  %26 = phi i64 [ %64, %59 ], [ %17, %10 ]
  %27 = phi i64 [ %62, %59 ], [ 1, %10 ]
  %28 = phi i32 [ %60, %59 ], [ 0, %10 ]
  %29 = inttoptr i64 %26 to %"struct.cc::EffectNode"*
  %30 = icmp eq i64 %27, 1
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 %27, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, -1
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 %35
  %37 = select i1 %34, %"struct.cc::EffectNode"* %36, %"struct.cc::EffectNode"* null
  %38 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %37, i64 0, i32 17
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %37, i64 0, i32 20
  %43 = load i32, i32* %42, align 8
  br label %44

44:                                               ; preds = %31, %25, %41
  %45 = phi i64 [ %27, %41 ], [ 1, %25 ], [ %27, %31 ]
  %46 = phi i32 [ %43, %41 ], [ 1, %25 ], [ %33, %31 ]
  %47 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 %45, i32 20
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 %27, i32 6
  %49 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %48) #12
  %50 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 %27, i32 16
  %51 = bitcast [3 x i8]* %50 to i24*
  %52 = load i24, i24* %51, align 4
  %53 = and i24 %52, 512
  %54 = icmp eq i24 %53, 0
  %55 = and i1 %49, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 %27, i32 0
  %58 = load i32, i32* %57, align 8
  br label %59

59:                                               ; preds = %56, %44
  %60 = phi i32 [ %58, %56 ], [ %28, %44 ]
  %61 = and i24 %52, -524289
  store i24 %61, i24* %51, align 4
  %62 = add nuw nsw i64 %27, 1
  %63 = load i64, i64* %14, align 8
  %64 = load i64, i64* %16, align 8
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 288
  %67 = shl i64 %66, 32
  %68 = ashr exact i64 %67, 32
  %69 = icmp slt i64 %62, %68
  br i1 %69, label %25, label %22

70:                                               ; preds = %22
  %71 = add i32 %60, -1
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %119

73:                                               ; preds = %70
  %74 = icmp sgt i32 %60, -1
  %75 = sext i32 %60 to i64
  %76 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %23, i64 %75
  %77 = select i1 %74, %"struct.cc::EffectNode"* %76, %"struct.cc::EffectNode"* null
  %78 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %77, i64 0, i32 20
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %81 = sext i32 %71 to i64
  br label %82

82:                                               ; preds = %116, %73
  %83 = phi %"struct.cc::EffectNode"* [ %23, %73 ], [ %118, %116 ]
  %84 = phi i64 [ %81, %73 ], [ %114, %116 ]
  %85 = phi i32 [ %60, %73 ], [ %117, %116 ]
  %86 = phi i32 [ %79, %73 ], [ %113, %116 ]
  %87 = icmp slt i32 %86, %85
  %88 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %83, i64 %84, i32 16
  %89 = bitcast [3 x i8]* %88 to i24*
  %90 = zext i1 %87 to i24
  %91 = load i24, i24* %89, align 4
  %92 = shl nuw nsw i24 %90, 19
  %93 = and i24 %91, -524289
  %94 = or i24 %92, %93
  store i24 %94, i24* %89, align 4
  %95 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %83, i64 %84, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, %86
  %98 = select i1 %97, i32 0, i32 %86
  %99 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %83, i64 %84, i32 6
  %100 = tail call zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"* %99) #12
  br i1 %100, label %101, label %107

101:                                              ; preds = %82
  %102 = load i24, i24* %89, align 4
  %103 = and i24 %102, 512
  %104 = icmp ne i24 %103, 0
  %105 = icmp eq i32 %98, 0
  %106 = and i1 %105, %104
  br i1 %106, label %109, label %112

107:                                              ; preds = %82
  %108 = icmp eq i32 %98, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %107, %101
  %110 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %83, i64 %84, i32 20
  %111 = load i32, i32* %110, align 8
  br label %112

112:                                              ; preds = %109, %107, %101
  %113 = phi i32 [ %111, %109 ], [ %98, %107 ], [ %98, %101 ]
  %114 = add nsw i64 %84, -1
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %112
  %117 = trunc i64 %84 to i32
  %118 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %80, align 8
  br label %82

119:                                              ; preds = %112, %10, %22, %70
  %120 = load i8, i8* %4, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %143, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 1
  %124 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %125 = bitcast %"struct.cc::TransformNode"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.std::__1::vector.825"* %123 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %126, %128
  %130 = sdiv exact i64 %129, 224
  %131 = trunc i64 %130 to i32
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %134, label %133

133:                                              ; preds = %134, %122
  tail call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %3, i1 zeroext false) #12
  br label %143

134:                                              ; preds = %122, %134
  %135 = phi i32 [ %136, %134 ], [ 1, %122 ]
  tail call void @_ZN2cc13TransformTree16UpdateTransformsEi(%"class.cc::TransformTree"* %3, i32 %135) #12
  %136 = add nuw nsw i32 %135, 1
  %137 = load i64, i64* %125, align 8
  %138 = load i64, i64* %127, align 8
  %139 = sub i64 %137, %138
  %140 = sdiv exact i64 %139, 224
  %141 = trunc i64 %140 to i32
  %142 = icmp slt i32 %136, %141
  br i1 %142, label %134, label %133

143:                                              ; preds = %119, %133
  %144 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 2
  %145 = load i8, i8* %144, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %164, label %147

147:                                              ; preds = %143
  %148 = load i64, i64* %14, align 8
  %149 = load i64, i64* %16, align 8
  %150 = sub i64 %148, %149
  %151 = sdiv exact i64 %150, 288
  %152 = trunc i64 %151 to i32
  %153 = icmp sgt i32 %152, 1
  br i1 %153, label %155, label %154

154:                                              ; preds = %155, %147
  store i8 0, i8* %144, align 8
  br label %164

155:                                              ; preds = %147, %155
  %156 = phi i32 [ %157, %155 ], [ 1, %147 ]
  tail call void @_ZN2cc10EffectTree13UpdateEffectsEi(%"class.cc::EffectTree"* %11, i32 %156) #12
  %157 = add nuw nsw i32 %156, 1
  %158 = load i64, i64* %14, align 8
  %159 = load i64, i64* %16, align 8
  %160 = sub i64 %158, %159
  %161 = sdiv exact i64 %160, 288
  %162 = trunc i64 %161 to i32
  %163 = icmp slt i32 %157, %162
  br i1 %163, label %155, label %154

164:                                              ; preds = %143, %154
  tail call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_112ComputeClipsEPNS_13PropertyTreesE(%"class.cc::PropertyTrees"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils13DrawTransformEPKNS_9LayerImplERKNS_13TransformTreeERKNS_10EffectTreeE(%"class.gfx::Transform"* noalias sret, %"class.cc::LayerImpl"*, %"class.cc::TransformTree"* nocapture readonly dereferenceable(136), %"class.cc::EffectTree"* nocapture readnone dereferenceable(112)) local_unnamed_addr #4 {
  %5 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.cc::TransformTree", %"class.cc::TransformTree"* %2, i64 0, i32 0, i32 3
  %8 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 17
  %10 = load i32, i32* %9, align 8
  %11 = tail call i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"* %1) #12
  %12 = tail call zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %8, i32 %10, i32 %11, %"class.gfx::Transform"* %0) #12
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 7
  %14 = bitcast %"class.gfx::Vector2dF"* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = extractelement <2 x float> %15, i32 0
  %17 = extractelement <2 x float> %15, i32 1
  tail call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* %0, float %16, float %17) #12
  ret void
}

declare zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"*, i32, i32, %"class.gfx::Transform"*) local_unnamed_addr #2

declare i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

declare void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_5LayerERKNS_13TransformTreeE(%"class.gfx::Transform"* noalias sret, %"class.cc::Layer"*, %"class.cc::TransformTree"* dereferenceable(136)) local_unnamed_addr #4 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  %6 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %1, i64 0, i32 13
  %7 = bitcast %"class.gfx::Vector2dF"* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 8, !noalias !3
  %9 = extractelement <2 x float> %8, i32 0
  %10 = extractelement <2 x float> %8, i32 1
  tail call void @_ZN3gfx9TransformC1Effffff(%"class.gfx::Transform"* %0, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float %9, float %10) #12
  %11 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %11) #12, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  %12 = tail call i32 @_ZNK2cc5Layer20transform_tree_indexEv(%"class.cc::Layer"* %1) #12
  %13 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree8ToScreenEi(%"class.cc::TransformTree"* %2, i32 %12) #12
  %14 = bitcast %"class.gfx::Transform"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %14, i64 68, i1 false) #12
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %0, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %11) #12, !noalias !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_9LayerImplERKNS_13TransformTreeE(%"class.gfx::Transform"* noalias sret, %"class.cc::LayerImpl"* nocapture readonly, %"class.cc::TransformTree"* dereferenceable(136)) local_unnamed_addr #4 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 7
  %7 = bitcast %"class.gfx::Vector2dF"* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4, !noalias !6
  %9 = extractelement <2 x float> %8, i32 0
  %10 = extractelement <2 x float> %8, i32 1
  tail call void @_ZN3gfx9TransformC1Effffff(%"class.gfx::Transform"* %0, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float %9, float %10) #12
  %11 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %11) #12, !noalias !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  %12 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 17
  %13 = load i32, i32* %12, align 8, !noalias !6
  %14 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree8ToScreenEi(%"class.cc::TransformTree"* %2, i32 %13) #12
  %15 = bitcast %"class.gfx::Transform"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %15, i64 68, i1 false) #12
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %0, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %11) #12, !noalias !6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils21UpdatePageScaleFactorEPNS_13PropertyTreesEPNS_13TransformNodeEf(%"class.cc::PropertyTrees"*, %"struct.cc::TransformNode"*, float) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3, i32 1
  %5 = load float, float* %4, align 8
  %6 = fcmp une float %5, %2
  %7 = icmp ne %"struct.cc::TransformNode"* %1, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 3
  store float %2, float* %4, align 8
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 4
  %12 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %11, i64 0, i32 0
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %12) #12
  tail call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* %11, float %2, float %2) #12
  %13 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 10
  %14 = bitcast i24* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, 1
  store i32 %16, i32* %14, align 4
  tail call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %10, i1 zeroext true) #12
  br label %17

17:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19draw_property_utils23CalculateDrawPropertiesEPNS_13LayerTreeImplEPNSt3__16vectorIPNS_17RenderSurfaceImplENS3_9allocatorIS6_EEEEPNS4_IPNS_9LayerImplENS7_ISC_EEEE(%"class.cc::LayerTreeImpl"*, %"class.std::__1::vector.1145"*, %"class.std::__1::vector.1048"*) local_unnamed_addr #4 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.std::__1::vector.1145", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.gfx::Rect"*
  %12 = alloca %"struct.cc::ConditionalClip", align 4
  %13 = alloca %"class.gfx::RectF", align 8
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to { i64, i64 }*
  %16 = alloca %"class.gfx::Transform", align 4
  %17 = alloca %"class.gfx::Transform", align 4
  %18 = alloca %"struct.std::__1::pair.1550", align 4
  %19 = alloca %"struct.cc::ConditionalClip", align 4
  %20 = alloca <2 x i64>, align 16
  %21 = bitcast <2 x i64>* %20 to { i64, i64 }*
  %22 = alloca { i64, i64 }, align 8
  %23 = alloca %"class.base::TimeTicks", align 8
  %24 = alloca i64, align 8
  %25 = alloca <2 x float>, align 8
  %26 = alloca i64, align 8
  %27 = alloca <2 x float>, align 8
  %28 = alloca i64, align 8
  %29 = alloca <2 x float>, align 8
  %30 = alloca i64, align 8
  %31 = alloca [22 x i32], align 16
  %32 = alloca %"class.std::__1::vector.1048", align 16
  %33 = alloca i64, align 8
  %34 = bitcast %"class.std::__1::vector.1145"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 1
  %37 = bitcast %"class.cc::RenderSurfaceImpl"*** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.std::__1::vector.1048"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %32, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %32, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %32, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 24, i1 false) #12
  %42 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5
  %43 = tail call %"struct.cc::TransformNode"* @_ZNK2cc13LayerTreeImpl22PageScaleTransformNodeEv(%"class.cc::LayerTreeImpl"* %0) #12
  %44 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %0) #12
  %45 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %0) #12
  br i1 %45, label %46, label %50

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %44, i64 0, i32 3, i32 0
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %44, i64 0, i32 2, i32 0
  br label %63

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %44, i64 0, i32 6
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %44, i64 0, i32 5, i32 0
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %44, i64 0, i32 3, i32 0
  %58 = load float, float* %57, align 4
  %59 = fdiv float %58, %56
  br label %60

60:                                               ; preds = %54, %50
  %61 = phi float [ %59, %54 ], [ 1.000000e+00, %50 ]
  %62 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %44, i64 0, i32 1, i32 0
  br label %63

63:                                               ; preds = %46, %60
  %64 = phi float* [ %49, %46 ], [ %62, %60 ]
  %65 = phi float [ %48, %46 ], [ %61, %60 ]
  %66 = load float, float* %64, align 4
  %67 = fmul float %65, %66
  %68 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 3, i32 1
  %69 = load float, float* %68, align 8
  %70 = fcmp une float %69, %67
  %71 = icmp ne %"struct.cc::TransformNode"* %43, null
  %72 = and i1 %71, %70
  br i1 %72, label %73, label %81

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 3
  store float %67, float* %68, align 8
  %75 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %43, i64 0, i32 4
  %76 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %75, i64 0, i32 0
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %76) #12
  tail call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* %75, float %67, float %67) #12
  %77 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %43, i64 0, i32 10
  %78 = bitcast i24* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = or i32 %79, 1
  store i32 %80, i32* %78, align 4
  tail call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %74, i1 zeroext true) #12
  br label %81

81:                                               ; preds = %63, %73
  %82 = tail call %"struct.cc::TransformNode"* @_ZNK2cc13LayerTreeImpl33OverscrollElasticityTransformNodeEv(%"class.cc::LayerTreeImpl"* %0) #12
  %83 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 21, i32 0
  %84 = load %"class.cc::SyncedProperty.1007"*, %"class.cc::SyncedProperty.1007"** %83, align 8
  %85 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %0) #12
  br i1 %85, label %86, label %98

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.cc::SyncedProperty.1007", %"class.cc::SyncedProperty.1007"* %84, i64 0, i32 2
  %88 = getelementptr inbounds %"class.cc::SyncedProperty.1007", %"class.cc::SyncedProperty.1007"* %84, i64 0, i32 3
  %89 = bitcast %"class.cc::AdditionGroup"* %88 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = bitcast <2 x float>* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  %92 = bitcast <2 x float>* %29 to %"class.gfx::Vector2dF"*
  %93 = bitcast <2 x float>* %29 to i64*
  store i64 %90, i64* %93, align 8
  %94 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #12
  %95 = bitcast i64* %28 to %"class.gfx::Vector2dF"*
  %96 = bitcast %"class.cc::AdditionGroup"* %87 to i64*
  %97 = load i64, i64* %96, align 4
  store i64 %97, i64* %28, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %95, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %92) #12
  br label %125

98:                                               ; preds = %81
  %99 = getelementptr inbounds %"class.cc::SyncedProperty.1007", %"class.cc::SyncedProperty.1007"* %84, i64 0, i32 1
  %100 = getelementptr inbounds %"class.cc::SyncedProperty.1007", %"class.cc::SyncedProperty.1007"* %84, i64 0, i32 6
  %101 = load i8, i8* %100, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %117

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.cc::SyncedProperty.1007", %"class.cc::SyncedProperty.1007"* %84, i64 0, i32 3
  %105 = getelementptr inbounds %"class.cc::SyncedProperty.1007", %"class.cc::SyncedProperty.1007"* %84, i64 0, i32 5
  %106 = bitcast %"class.cc::AdditionGroup"* %105 to <2 x float>*
  %107 = load <2 x float>, <2 x float>* %106, align 4
  %108 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #12
  %109 = bitcast i64* %24 to %"class.gfx::Vector2dF"*
  %110 = bitcast <2 x float>* %25 to %"class.gfx::Vector2dF"*
  %111 = bitcast %"class.cc::AdditionGroup"* %104 to i64*
  %112 = load i64, i64* %111, align 4
  store i64 %112, i64* %24, align 8
  %113 = bitcast <2 x float>* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #12
  %114 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %107
  store <2 x float> %114, <2 x float>* %25, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %109, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %110) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #12
  %115 = bitcast i64* %24 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #12
  br label %117

117:                                              ; preds = %103, %98
  %118 = phi <2 x float> [ %116, %103 ], [ zeroinitializer, %98 ]
  %119 = bitcast <2 x float>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #12
  %120 = bitcast <2 x float>* %27 to %"class.gfx::Vector2dF"*
  store <2 x float> %118, <2 x float>* %27, align 8
  %121 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #12
  %122 = bitcast i64* %26 to %"class.gfx::Vector2dF"*
  %123 = bitcast %"class.cc::AdditionGroup"* %99 to i64*
  %124 = load i64, i64* %123, align 4
  store i64 %124, i64* %26, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %122, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %120) #12
  br label %125

125:                                              ; preds = %86, %117
  %126 = phi i64* [ %28, %86 ], [ %26, %117 ]
  %127 = phi i8* [ %94, %86 ], [ %121, %117 ]
  %128 = phi i8* [ %91, %86 ], [ %119, %117 ]
  %129 = bitcast i64* %126 to <2 x float>*
  %130 = load <2 x float>, <2 x float>* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #12
  %131 = icmp eq %"struct.cc::TransformNode"* %82, null
  br i1 %131, label %156, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %82, i64 0, i32 11
  %134 = extractelement <2 x float> %130, i32 0
  %135 = bitcast float %134 to i32
  %136 = extractelement <2 x float> %130, i32 1
  %137 = bitcast float %136 to i32
  %138 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %133, i64 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = fcmp oeq float %139, %134
  br i1 %140, label %141, label %145

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %82, i64 0, i32 11, i32 1
  %143 = load float, float* %142, align 4
  %144 = fcmp oeq float %143, %136
  br i1 %144, label %156, label %145

145:                                              ; preds = %141, %132
  %146 = bitcast %"class.gfx::ScrollOffset"* %133 to i64*
  %147 = zext i32 %137 to i64
  %148 = shl nuw i64 %147, 32
  %149 = zext i32 %135 to i64
  %150 = or i64 %148, %149
  store i64 %150, i64* %146, align 8
  %151 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %82, i64 0, i32 10
  %152 = bitcast i24* %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = or i32 %153, 1
  store i32 %154, i32* %152, align 4
  %155 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 3
  call void @_ZN2cc13TransformTree16set_needs_updateEb(%"class.cc::TransformTree"* %155, i1 zeroext true) #12
  br label %156

156:                                              ; preds = %125, %141, %145
  %157 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 5
  %158 = call { i64, i64 } @_ZNK2cc13LayerTreeImpl17GetDeviceViewportEv(%"class.cc::LayerTreeImpl"* %0) #12
  %159 = extractvalue { i64, i64 } %158, 0
  %160 = trunc i64 %159 to i32
  %161 = lshr i64 %159, 32
  %162 = trunc i64 %161 to i32
  %163 = extractvalue { i64, i64 } %158, 1
  %164 = sitofp i32 %160 to float
  %165 = sitofp i32 %162 to float
  %166 = trunc i64 %163 to i32
  %167 = lshr i64 %163, 32
  %168 = trunc i64 %167 to i32
  %169 = insertelement <2 x float> undef, float %164, i32 0
  %170 = insertelement <2 x float> %169, float %165, i32 1
  %171 = icmp sgt i32 %166, 0
  %172 = select i1 %171, i32 %166, i32 0
  %173 = sitofp i32 %172 to float
  %174 = insertelement <2 x float> undef, float %173, i32 0
  %175 = icmp sgt i32 %168, 0
  %176 = select i1 %175, i32 %168, i32 0
  %177 = sitofp i32 %176 to float
  %178 = insertelement <2 x float> %174, float %177, i32 1
  call void @_ZN2cc8ClipTree15SetViewportClipEN3gfx5RectFE(%"class.cc::ClipTree"* %157, <2 x float> %170, <2 x float> %178) #12
  %179 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 3
  %180 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 14
  %181 = load float, float* %180, align 4
  %182 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 1
  %183 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %182, align 8
  %184 = call dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc17LayerTreeHostImpl13DrawTransformEv(%"class.cc::LayerTreeHostImpl"* %183) #12
  call void @_ZN2cc13TransformTree24SetRootScaleAndTransformEfRKN3gfx9TransformE(%"class.cc::TransformTree"* %179, float %181, %"class.gfx::Transform"* dereferenceable(68) %184) #12
  %185 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 22, i32 0, i32 0
  %186 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 22, i32 0, i32 1
  call void @_ZN2cc19draw_property_utils36UpdatePropertyTreesAndRenderSurfacesEPNS_9LayerImplEPNS_13PropertyTreesE(%"class.cc::LayerImpl"* undef, %"class.cc::PropertyTrees"* %42)
  %187 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %188 = and i8 %187, 25
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %191, !prof !9

190:                                              ; preds = %156
  call void @_ZN2cc19draw_property_utils25FindLayersThatNeedUpdatesEPNS_13LayerTreeImplEPNSt3__16vectorIPNS_9LayerImplENS3_9allocatorIS6_EEEE(%"class.cc::LayerTreeImpl"* %0, %"class.std::__1::vector.1048"* nonnull %32)
  br label %200

191:                                              ; preds = %156
  %192 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %193 = bitcast %"class.base::TimeTicks"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #12
  %194 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %23, i64 0, i32 0, i32 0
  %195 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %195, i64* %194, align 8
  %196 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %192, %"class.base::TimeTicks"* nonnull dereferenceable(8) %23, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #12
  call void @_ZN2cc19draw_property_utils25FindLayersThatNeedUpdatesEPNS_13LayerTreeImplEPNSt3__16vectorIPNS_9LayerImplENS3_9allocatorIS6_EEEE(%"class.cc::LayerTreeImpl"* %0, %"class.std::__1::vector.1048"* nonnull %32)
  %197 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %200, label %199

199:                                              ; preds = %191
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i64 %196) #12
  br label %200

200:                                              ; preds = %190, %191, %199
  %201 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %202 = and i8 %201, 25
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %213, label %204, !prof !9

204:                                              ; preds = %200
  %205 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #12
  %206 = bitcast %"class.cc::LayerImpl"*** %40 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.std::__1::vector.1048"* %32 to i64*
  %209 = load i64, i64* %208, align 16
  %210 = sub i64 %207, %209
  %211 = ashr exact i64 %210, 3
  store i64 %211, i64* %33, align 8
  %212 = call i64 @_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64* nonnull dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #12
  br label %213

213:                                              ; preds = %200, %204
  %214 = phi i64 [ -6148914691236517206, %200 ], [ %212, %204 ]
  %215 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %200 ], [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), %204 ]
  %216 = phi i8* [ null, %200 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %204 ]
  %217 = bitcast <2 x i64>* %20 to %"class.gfx::Rect"*
  %218 = bitcast { i64, i64 }* %22 to %"class.gfx::Rect"*
  %219 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %39, align 16
  %220 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %40, align 8
  %221 = icmp eq %"class.cc::LayerImpl"** %219, %220
  br i1 %221, label %677, label %222

222:                                              ; preds = %213
  %223 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %224 = bitcast %"class.gfx::Transform"* %16 to i8*
  %225 = bitcast %"class.gfx::Transform"* %7 to i8*
  %226 = bitcast %"class.gfx::Transform"* %17 to i8*
  %227 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0, i32 1
  %228 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 3, i32 0, i32 3
  %229 = bitcast %"struct.std::__1::pair.1550"* %18 to i8*
  %230 = getelementptr inbounds %"struct.std::__1::pair.1550", %"struct.std::__1::pair.1550"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %231 = getelementptr inbounds %"struct.std::__1::pair.1550", %"struct.std::__1::pair.1550"* %18, i64 0, i32 1
  %232 = bitcast i32* %230 to i64*
  br label %242

233:                                              ; preds = %252
  %234 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %39, align 16
  %235 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %40, align 8
  %236 = icmp eq %"class.cc::LayerImpl"** %234, %235
  br i1 %236, label %677, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4
  %239 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %240 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 5, i32 0, i32 1, i32 0, i32 0
  %241 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  br label %319

242:                                              ; preds = %252, %222
  %243 = phi %"class.cc::LayerImpl"** [ %219, %222 ], [ %286, %252 ]
  %244 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %243, align 8
  %245 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 17
  %246 = load i32, i32* %245, align 8
  %247 = icmp sgt i32 %246, -1
  br i1 %247, label %248, label %252

248:                                              ; preds = %242
  %249 = sext i32 %246 to i64
  %250 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %223, align 8
  %251 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %250, i64 %249
  br label %252

252:                                              ; preds = %248, %242
  %253 = phi %"struct.cc::TransformNode"* [ %251, %248 ], [ null, %242 ]
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %224) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %224, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  %254 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 7
  %255 = bitcast %"class.gfx::Vector2dF"* %254 to <2 x float>*
  %256 = load <2 x float>, <2 x float>* %255, align 4, !noalias !10
  %257 = extractelement <2 x float> %256, i32 0
  %258 = extractelement <2 x float> %256, i32 1
  call void @_ZN3gfx9TransformC1Effffff(%"class.gfx::Transform"* nonnull %16, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float %257, float %258) #12
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %225) #12, !noalias !10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %225, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  %259 = load i32, i32* %245, align 8, !noalias !10
  %260 = call dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree8ToScreenEi(%"class.cc::TransformTree"* %179, i32 %259) #12
  %261 = bitcast %"class.gfx::Transform"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %225, i8* align 4 %261, i64 68, i1 false) #12
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* nonnull %16, %"class.gfx::Transform"* nonnull dereferenceable(68) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %225) #12, !noalias !10
  %262 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 25
  %263 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 25, i32 1
  %264 = bitcast %"class.gfx::Transform"* %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %264, i8* nonnull align 4 %224, i64 68, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %224) #12
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %226) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %226, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %226, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  store i8 0, i8* %227, align 4, !alias.scope !13
  %265 = load %"class.cc::PropertyTrees"*, %"class.cc::PropertyTrees"** %228, align 8, !noalias !13
  %266 = load i32, i32* %245, align 8, !noalias !13
  %267 = call i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"* %244) #12, !noalias !13
  %268 = call zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %265, i32 %266, i32 %267, %"class.gfx::Transform"* nonnull %17) #12
  %269 = load <2 x float>, <2 x float>* %255, align 4, !noalias !13
  %270 = extractelement <2 x float> %269, i32 0
  %271 = extractelement <2 x float> %269, i32 1
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* nonnull %17, float %270, float %271) #12
  %272 = bitcast %"struct.cc::DrawProperties"* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %272, i8* nonnull align 4 %226, i64 68, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %226) #12
  %273 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %253, i64 0, i32 10
  %274 = bitcast i24* %273 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 25, i32 4
  %277 = lshr i32 %275, 6
  %278 = trunc i32 %277 to i8
  %279 = and i8 %278, 1
  store i8 %279, i8* %276, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %229) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %229, i8 -1, i64 48, i1 false) #12
  %280 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 18
  store i64 -6148914691236517206, i64* %232, align 4
  %281 = load i32, i32* %280, align 4
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_121GetMaskFilterInfoPairEPKNS_13PropertyTreesEib(%"struct.std::__1::pair.1550"* nonnull sret %18, %"class.cc::PropertyTrees"* %42, i32 %281, i1 zeroext false) #12
  %282 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 25, i32 10
  %283 = bitcast %"class.gfx::MaskFilterInfo"* %282 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %283, i8* nonnull align 4 %229, i64 52, i1 false) #12
  %284 = load i8, i8* %231, align 4, !range !2
  %285 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %244, i64 0, i32 25, i32 6
  store i8 %284, i8* %285, align 2
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %229) #12
  %286 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %243, i64 1
  %287 = icmp eq %"class.cc::LayerImpl"** %286, %220
  br i1 %287, label %233, label %242

288:                                              ; preds = %452
  %289 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %39, align 16
  %290 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %40, align 8
  %291 = icmp eq %"class.cc::LayerImpl"** %289, %290
  br i1 %291, label %677, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %19, i64 0, i32 0
  %294 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %19, i64 0, i32 1
  %295 = bitcast <2 x i64>* %14 to %"class.gfx::Rect"*
  %296 = bitcast <2 x i64>* %10 to i8*
  %297 = bitcast <2 x i64>* %10 to i32*
  %298 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  %299 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1
  %300 = bitcast %"class.gfx::Size"* %299 to i64*
  %301 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %12, i64 0, i32 0
  %302 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %12, i64 0, i32 1
  %303 = bitcast %"class.gfx::RectF"* %302 to <2 x float>*
  %304 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %12, i64 0, i32 1, i32 1
  %305 = bitcast %"class.gfx::SizeF"* %304 to <2 x float>*
  %306 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  %307 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.gfx::RectF"*
  %308 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %309 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %310 = bitcast %"class.gfx::Transform"* %9 to i8*
  %311 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0, i32 1
  %312 = bitcast %"class.gfx::RectF"* %13 to i8*
  %313 = bitcast %"class.gfx::RectF"* %13 to <2 x float>*
  %314 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 1
  %315 = bitcast %"class.gfx::SizeF"* %314 to <2 x float>*
  %316 = bitcast <2 x i64>* %14 to i8*
  %317 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %318 = getelementptr inbounds <2 x i64>, <2 x i64>* %14, i64 0, i64 0
  br label %468

319:                                              ; preds = %452, %237
  %320 = phi %"class.cc::LayerImpl"** [ %234, %237 ], [ %453, %452 ]
  %321 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %320, align 8
  %322 = call %"class.cc::RenderSurfaceImpl"* @_ZNK2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %321) #12
  %323 = icmp eq %"class.cc::RenderSurfaceImpl"* %322, null
  br i1 %323, label %357, label %324

324:                                              ; preds = %319
  %325 = call %"class.cc::RenderSurfaceImpl"* @_ZNK2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %321) #12
  %326 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %325) #12
  %327 = icmp sgt i32 %326, -1
  br i1 %327, label %330, label %328

328:                                              ; preds = %324
  %329 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  br label %334

330:                                              ; preds = %324
  %331 = sext i32 %326 to i64
  %332 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  %333 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %332, i64 %331
  br label %334

334:                                              ; preds = %330, %328
  %335 = phi %"struct.cc::EffectNode"* [ %332, %330 ], [ %329, %328 ]
  %336 = phi %"struct.cc::EffectNode"* [ %333, %330 ], [ null, %328 ]
  %337 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %321, i64 0, i32 18
  %338 = load i32, i32* %337, align 4
  %339 = icmp sgt i32 %338, -1
  %340 = sext i32 %338 to i64
  %341 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %335, i64 %340
  %342 = select i1 %339, %"struct.cc::EffectNode"* %341, %"struct.cc::EffectNode"* null
  %343 = icmp eq %"struct.cc::EffectNode"* %342, %336
  br i1 %343, label %357, label %344

344:                                              ; preds = %334, %344
  %345 = phi float [ %348, %344 ], [ 1.000000e+00, %334 ]
  %346 = phi %"struct.cc::EffectNode"* [ %355, %344 ], [ %342, %334 ]
  %347 = call float @_ZNK2cc10EffectTree16EffectiveOpacityEPKNS_10EffectNodeE(%"class.cc::EffectTree"* %238, %"struct.cc::EffectNode"* %346) #12
  %348 = fmul float %345, %347
  %349 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %346, i64 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = icmp sgt i32 %350, -1
  %352 = sext i32 %350 to i64
  %353 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  %354 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %353, i64 %352
  %355 = select i1 %351, %"struct.cc::EffectNode"* %354, %"struct.cc::EffectNode"* null
  %356 = icmp eq %"struct.cc::EffectNode"* %355, %336
  br i1 %356, label %357, label %344

357:                                              ; preds = %344, %334, %319
  %358 = phi float [ 0.000000e+00, %319 ], [ 1.000000e+00, %334 ], [ %348, %344 ]
  %359 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %321, i64 0, i32 25, i32 3
  store float %358, float* %359, align 4
  %360 = call %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %321) #12
  %361 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %321, i64 0, i32 19
  %362 = load i32, i32* %361, align 8
  %363 = call i32 @_ZNK2cc17RenderSurfaceImpl13ClipTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %360) #12
  %364 = icmp sgt i32 %362, -1
  br i1 %364, label %365, label %369

365:                                              ; preds = %357
  %366 = sext i32 %362 to i64
  %367 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %240, align 8
  %368 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %367, i64 %366
  br label %369

369:                                              ; preds = %365, %357
  %370 = phi %"struct.cc::ClipNode"* [ %368, %365 ], [ null, %357 ]
  %371 = icmp sgt i32 %363, -1
  br i1 %371, label %372, label %376

372:                                              ; preds = %369
  %373 = sext i32 %363 to i64
  %374 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %240, align 8
  %375 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %374, i64 %373
  br label %376

376:                                              ; preds = %372, %369
  %377 = phi %"struct.cc::ClipNode"* [ %375, %372 ], [ null, %369 ]
  %378 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %370, i64 0, i32 0
  %379 = load i32, i32* %378, align 8
  %380 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %377, i64 0, i32 0
  %381 = load i32, i32* %380, align 8
  %382 = icmp eq i32 %379, %381
  br i1 %382, label %413, label %383

383:                                              ; preds = %376, %405
  %384 = phi i32 [ %411, %405 ], [ %381, %376 ]
  %385 = phi i32 [ %409, %405 ], [ %379, %376 ]
  %386 = phi %"struct.cc::ClipNode"* [ %407, %405 ], [ %377, %376 ]
  %387 = phi %"struct.cc::ClipNode"* [ %406, %405 ], [ %370, %376 ]
  %388 = icmp slt i32 %385, %384
  br i1 %388, label %389, label %397

389:                                              ; preds = %383
  %390 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %386, i64 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = icmp sgt i32 %391, -1
  br i1 %392, label %393, label %405

393:                                              ; preds = %389
  %394 = sext i32 %391 to i64
  %395 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %240, align 8
  %396 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %395, i64 %394
  br label %405

397:                                              ; preds = %383
  %398 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %387, i64 0, i32 1
  %399 = load i32, i32* %398, align 4
  %400 = icmp sgt i32 %399, -1
  br i1 %400, label %401, label %405

401:                                              ; preds = %397
  %402 = sext i32 %399 to i64
  %403 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %240, align 8
  %404 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %403, i64 %402
  br label %405

405:                                              ; preds = %401, %397, %393, %389
  %406 = phi %"struct.cc::ClipNode"* [ %387, %389 ], [ %387, %393 ], [ %404, %401 ], [ null, %397 ]
  %407 = phi %"struct.cc::ClipNode"* [ null, %389 ], [ %396, %393 ], [ %386, %401 ], [ %386, %397 ]
  %408 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %406, i64 0, i32 0
  %409 = load i32, i32* %408, align 8
  %410 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %407, i64 0, i32 0
  %411 = load i32, i32* %410, align 8
  %412 = icmp eq i32 %409, %411
  br i1 %412, label %413, label %383

413:                                              ; preds = %405, %376
  %414 = phi i32 [ %379, %376 ], [ %409, %405 ]
  %415 = call i32 @_ZNK2cc17RenderSurfaceImpl13ClipTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %360) #12
  %416 = icmp eq i32 %414, %415
  br i1 %416, label %452, label %417

417:                                              ; preds = %413
  %418 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %360) #12
  %419 = icmp sgt i32 %418, -1
  br i1 %419, label %420, label %424

420:                                              ; preds = %417
  %421 = sext i32 %418 to i64
  %422 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  %423 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %422, i64 %421
  br label %424

424:                                              ; preds = %420, %417
  %425 = phi %"struct.cc::EffectNode"* [ %423, %420 ], [ null, %417 ]
  %426 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %425, i64 0, i32 19
  %427 = load i32, i32* %426, align 4
  %428 = icmp sgt i32 %427, %414
  br i1 %428, label %429, label %452

429:                                              ; preds = %424, %447
  %430 = phi %"struct.cc::EffectNode"* [ %448, %447 ], [ %425, %424 ]
  %431 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %430, i64 0, i32 0
  %432 = load i32, i32* %431, align 8
  %433 = sext i32 %432 to i64
  %434 = load %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"** %241, align 8
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %434, i64 %433, i32 0, i32 0, i32 0
  %436 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %435, align 8
  %437 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %436, i64 0, i32 7
  %438 = load i8, i8* %437, align 4
  %439 = or i8 %438, 1
  store i8 %439, i8* %437, align 4
  %440 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %430, i64 0, i32 20
  %441 = load i32, i32* %440, align 8
  %442 = icmp sgt i32 %441, -1
  br i1 %442, label %443, label %447

443:                                              ; preds = %429
  %444 = sext i32 %441 to i64
  %445 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  %446 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %445, i64 %444
  br label %447

447:                                              ; preds = %443, %429
  %448 = phi %"struct.cc::EffectNode"* [ %446, %443 ], [ null, %429 ]
  %449 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %448, i64 0, i32 19
  %450 = load i32, i32* %449, align 4
  %451 = icmp sgt i32 %450, %414
  br i1 %451, label %429, label %452

452:                                              ; preds = %447, %424, %413
  %453 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %320, i64 1
  %454 = icmp eq %"class.cc::LayerImpl"** %453, %235
  br i1 %454, label %288, label %319

455:                                              ; preds = %627
  %456 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %39, align 16
  %457 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %40, align 8
  %458 = icmp eq %"class.cc::LayerImpl"** %456, %457
  br i1 %458, label %677, label %459

459:                                              ; preds = %455
  %460 = bitcast <2 x i64>* %20 to i8*
  %461 = bitcast <2 x i64>* %20 to i32*
  %462 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  %463 = getelementptr inbounds i8, i8* %460, i64 4
  %464 = bitcast i8* %463 to i32*
  %465 = bitcast { i64, i64 }* %22 to i8*
  %466 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  %467 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 0
  br label %633

468:                                              ; preds = %627, %292
  %469 = phi %"class.cc::LayerImpl"** [ %289, %292 ], [ %631, %627 ]
  %470 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %469, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %293) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %293, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 0), i64 20, i1 false) #12
  %471 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 18
  %472 = load i32, i32* %471, align 4, !noalias !16
  %473 = icmp sgt i32 %472, -1
  br i1 %473, label %474, label %478

474:                                              ; preds = %468
  %475 = sext i32 %472 to i64
  %476 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8, !noalias !16
  %477 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %476, i64 %475
  br label %478

478:                                              ; preds = %474, %468
  %479 = phi %"struct.cc::EffectNode"* [ %477, %474 ], [ null, %468 ]
  %480 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %479, i64 0, i32 17
  %481 = load i8, i8* %480, align 1, !noalias !16
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %483, label %491

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %479, i64 0, i32 20
  %485 = load i32, i32* %484, align 8, !noalias !16
  %486 = icmp sgt i32 %485, -1
  br i1 %486, label %487, label %491

487:                                              ; preds = %483
  %488 = sext i32 %485 to i64
  %489 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8, !noalias !16
  %490 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %489, i64 %488
  br label %491

491:                                              ; preds = %487, %483, %478
  %492 = phi %"struct.cc::EffectNode"* [ %479, %478 ], [ %490, %487 ], [ null, %483 ]
  %493 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 19
  %494 = load i32, i32* %493, align 8, !noalias !16
  %495 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %492, i64 0, i32 0
  %496 = load i32, i32* %495, align 8, !noalias !16
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_122ComputeAccumulatedClipEPNS_13PropertyTreesEbii(%"struct.cc::ConditionalClip"* nonnull sret %19, %"class.cc::PropertyTrees"* %42, i1 zeroext false, i32 %494, i32 %496) #12
  %497 = load i8, i8* %293, align 4, !range !2
  %498 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 25, i32 5
  store i8 %497, i8* %498, align 1
  %499 = call { i64, i64 } @_ZN3gfx28ToEnclosingRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16) %294, float 0x3EE4F8B580000000) #12
  %500 = extractvalue { i64, i64 } %499, 0
  %501 = extractvalue { i64, i64 } %499, 1
  %502 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 25, i32 9
  %503 = bitcast %"class.gfx::Rect"* %502 to i64*
  store i64 %500, i64* %503, align 4
  %504 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 25, i32 9, i32 1
  %505 = bitcast %"class.gfx::Size"* %504 to i64*
  store i64 %501, i64* %505, align 4
  %506 = load i32, i32* %471, align 4
  %507 = icmp sgt i32 %506, -1
  br i1 %507, label %508, label %512

508:                                              ; preds = %491
  %509 = sext i32 %506 to i64
  %510 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  %511 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %510, i64 %509
  br label %512

512:                                              ; preds = %508, %491
  %513 = phi %"struct.cc::EffectNode"* [ %511, %508 ], [ null, %491 ]
  %514 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %513, i64 0, i32 21
  %515 = load i32, i32* %514, align 4
  %516 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %513, i64 0, i32 22
  %517 = load i32, i32* %516, align 4
  %518 = icmp slt i32 %515, %517
  %519 = select i1 %518, i32 %517, i32 %515
  %520 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %513, i64 0, i32 23
  %521 = load i32, i32* %520, align 4
  %522 = icmp slt i32 %519, %521
  %523 = select i1 %522, i32 %521, i32 %519
  %524 = icmp sgt i32 %523, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %296) #12
  %525 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %470) #12
  store i32 0, i32* %297, align 16
  store i32 0, i32* %298, align 4
  store i64 %525, i64* %300, align 8
  br i1 %524, label %526, label %532

526:                                              ; preds = %512
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %301) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %301, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 0), i64 20, i1 false) #12
  %527 = load i32, i32* %493, align 8
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_122ComputeAccumulatedClipEPNS_13PropertyTreesEbii(%"struct.cc::ConditionalClip"* nonnull sret %12, %"class.cc::PropertyTrees"* %42, i1 zeroext true, i32 %527, i32 %523) #12
  %528 = load i8, i8* %301, align 4, !range !2
  %529 = icmp eq i8 %528, 0
  br i1 %529, label %530, label %539

530:                                              ; preds = %526
  %531 = load <2 x i64>, <2 x i64>* %10, align 16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %301) #12
  br label %627

532:                                              ; preds = %512
  %533 = load i32, i32* %493, align 8
  %534 = icmp sgt i32 %533, -1
  br i1 %534, label %535, label %543

535:                                              ; preds = %532
  %536 = sext i32 %533 to i64
  %537 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %240, align 8
  %538 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %537, i64 %536
  br label %543

539:                                              ; preds = %526
  %540 = load <2 x float>, <2 x float>* %303, align 4
  %541 = load <2 x float>, <2 x float>* %305, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %301) #12
  %542 = sext i32 %523 to i64
  br label %551

543:                                              ; preds = %535, %532
  %544 = phi %"struct.cc::ClipNode"* [ %538, %535 ], [ null, %532 ]
  %545 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %544, i64 0, i32 6
  %546 = bitcast %"class.gfx::RectF"* %545 to <2 x float>*
  %547 = load <2 x float>, <2 x float>* %546, align 4
  %548 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %544, i64 0, i32 6, i32 1
  %549 = bitcast %"class.gfx::SizeF"* %548 to <2 x float>*
  %550 = load <2 x float>, <2 x float>* %549, align 4
  br label %551

551:                                              ; preds = %543, %539
  %552 = phi i64 [ 1, %543 ], [ %542, %539 ]
  %553 = phi <2 x float> [ %550, %543 ], [ %541, %539 ]
  %554 = phi <2 x float> [ %547, %543 ], [ %540, %539 ]
  %555 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  %556 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %555, i64 %552, i32 18
  %557 = load i32, i32* %556, align 8
  %558 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 17
  %559 = load i32, i32* %558, align 8
  %560 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %555, i64 %552, i32 0
  %561 = load i32, i32* %560, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %306) #12
  store <2 x float> %554, <2 x float>* %308, align 8, !noalias !19
  store <2 x float> %553, <2 x float>* %309, align 8, !noalias !19
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %310) #12, !noalias !19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %310, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12, !noalias !19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %310, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12, !noalias !19
  store i8 0, i8* %311, align 4, !noalias !19
  %562 = call zeroext i1 @_ZNK2cc13PropertyTrees13GetFromTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %42, i32 %559, i32 %561, %"class.gfx::Transform"* nonnull %9) #12, !noalias !19
  br i1 %562, label %563, label %569

563:                                              ; preds = %551
  %564 = icmp sgt i32 %557, %559
  br i1 %564, label %565, label %567

565:                                              ; preds = %563
  %566 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.gfx::RectF"* nonnull dereferenceable(16) %307) #12, !noalias !19
  br label %571

567:                                              ; preds = %563
  %568 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil18ProjectClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.gfx::RectF"* nonnull dereferenceable(16) %307) #12, !noalias !19
  br label %571

569:                                              ; preds = %551
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %310) #12, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %306) #12
  %570 = load <2 x i64>, <2 x i64>* %10, align 16
  br label %627

571:                                              ; preds = %567, %565
  %572 = phi { <2 x float>, <2 x float> } [ %568, %567 ], [ %566, %565 ]
  %573 = extractvalue { <2 x float>, <2 x float> } %572, 0
  %574 = extractvalue { <2 x float>, <2 x float> } %572, 1
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %310) #12, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %306) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %312) #12
  store <2 x float> %573, <2 x float>* %313, align 8
  store <2 x float> %574, <2 x float>* %315, align 8
  %575 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 7
  %576 = bitcast %"class.gfx::Vector2dF"* %575 to <2 x float>*
  %577 = load <2 x float>, <2 x float>* %576, align 4
  %578 = extractelement <2 x float> %577, i32 0
  %579 = fsub float -0.000000e+00, %578
  %580 = extractelement <2 x float> %577, i32 1
  %581 = fsub float -0.000000e+00, %580
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* nonnull %13, float %579, float %581) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %316) #12
  %582 = call { i64, i64 } @_ZN3gfx28ToEnclosingRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* nonnull dereferenceable(16) %13, float 0x3EE4F8B580000000) #12
  %583 = extractvalue { i64, i64 } %582, 0
  store i64 %583, i64* %318, align 16
  %584 = extractvalue { i64, i64 } %582, 1
  store i64 %584, i64* %317, align 8
  %585 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 3
  %586 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %585, align 8
  %587 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %586) #12
  %588 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %587, i64 0, i32 74
  %589 = load i8, i8* %588, align 2, !range !2
  %590 = icmp eq i8 %589, 0
  br i1 %590, label %625, label %591

591:                                              ; preds = %571
  %592 = call float @_ZN3viz16MaxDeJellyHeightEv() #12
  %593 = call zeroext i1 @_ZNK2cc9LayerImpl21IsAffectedByPageScaleEv(%"class.cc::LayerImpl"* %470) #12
  br i1 %593, label %594, label %621

594:                                              ; preds = %591
  %595 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %585, align 8
  %596 = call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %595) #12
  %597 = call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %595) #12
  br i1 %597, label %598, label %602

598:                                              ; preds = %594
  %599 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %596, i64 0, i32 3, i32 0
  %600 = load float, float* %599, align 4
  %601 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %596, i64 0, i32 2, i32 0
  br label %615

602:                                              ; preds = %594
  %603 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %596, i64 0, i32 6
  %604 = load i8, i8* %603, align 4, !range !2
  %605 = icmp eq i8 %604, 0
  br i1 %605, label %606, label %612

606:                                              ; preds = %602
  %607 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %596, i64 0, i32 5, i32 0
  %608 = load float, float* %607, align 4
  %609 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %596, i64 0, i32 3, i32 0
  %610 = load float, float* %609, align 4
  %611 = fdiv float %610, %608
  br label %612

612:                                              ; preds = %606, %602
  %613 = phi float [ %611, %606 ], [ 1.000000e+00, %602 ]
  %614 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %596, i64 0, i32 1, i32 0
  br label %615

615:                                              ; preds = %612, %598
  %616 = phi float* [ %614, %612 ], [ %601, %598 ]
  %617 = phi float [ %613, %612 ], [ %600, %598 ]
  %618 = load float, float* %616, align 4
  %619 = fmul float %617, %618
  %620 = fdiv float %592, %619
  br label %621

621:                                              ; preds = %615, %591
  %622 = phi float [ %620, %615 ], [ %592, %591 ]
  %623 = fsub float -0.000000e+00, %622
  %624 = fptosi float %623 to i32
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %295, i32 0, i32 %624, i32 0, i32 %624) #12
  br label %625

625:                                              ; preds = %621, %571
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %295, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #12
  %626 = load <2 x i64>, <2 x i64>* %14, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %316) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %312) #12
  br label %627

627:                                              ; preds = %625, %569, %530
  %628 = phi <2 x i64> [ %531, %530 ], [ %626, %625 ], [ %570, %569 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %296) #12
  %629 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %470, i64 0, i32 25, i32 7
  %630 = bitcast %"class.gfx::Rect"* %629 to <2 x i64>*
  store <2 x i64> %628, <2 x i64>* %630, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %293) #12
  %631 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %469, i64 1
  %632 = icmp eq %"class.cc::LayerImpl"** %631, %290
  br i1 %632, label %455, label %468

633:                                              ; preds = %668, %459
  %634 = phi %"class.cc::LayerImpl"** [ %456, %459 ], [ %675, %668 ]
  %635 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %634, align 8
  %636 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %635, i64 0, i32 18
  %637 = load i32, i32* %636, align 4
  %638 = icmp sgt i32 %637, -1
  br i1 %638, label %639, label %643

639:                                              ; preds = %633
  %640 = sext i32 %637 to i64
  %641 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %239, align 8
  %642 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %641, i64 %640
  br label %643

643:                                              ; preds = %639, %633
  %644 = phi %"struct.cc::EffectNode"* [ %642, %639 ], [ null, %633 ]
  %645 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %644, i64 0, i32 16
  %646 = bitcast [3 x i8]* %645 to i24*
  %647 = load i24, i24* %646, align 4
  %648 = and i24 %647, 64
  %649 = icmp eq i24 %648, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %460) #12
  %650 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %635, i64 0, i32 25, i32 7
  %651 = bitcast %"class.gfx::Rect"* %650 to <2 x i64>*
  %652 = load <2 x i64>, <2 x i64>* %651, align 4
  store <2 x i64> %652, <2 x i64>* %20, align 16
  br i1 %649, label %653, label %655

653:                                              ; preds = %643
  %654 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %635) #12
  store i32 0, i32* %461, align 16
  store i32 0, i32* %464, align 4
  store i64 %654, i64* %462, align 8
  br label %655

655:                                              ; preds = %653, %643
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %465) #12
  %656 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %635, i64 0, i32 25, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %465, i8 -86, i64 16, i1 false) #12
  %657 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %656, %"class.gfx::Rect"* nonnull dereferenceable(16) %217) #12
  %658 = extractvalue { i64, i64 } %657, 0
  store i64 %658, i64* %467, align 8
  %659 = extractvalue { i64, i64 } %657, 1
  store i64 %659, i64* %466, align 8
  %660 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %635, i64 0, i32 25, i32 5
  %661 = load i8, i8* %660, align 1, !range !2
  %662 = icmp eq i8 %661, 0
  br i1 %662, label %668, label %663

663:                                              ; preds = %655
  %664 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %635, i64 0, i32 25, i32 9
  %665 = call { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* nonnull dereferenceable(16) %218, %"class.gfx::Rect"* dereferenceable(16) %664) #12
  %666 = extractvalue { i64, i64 } %665, 0
  %667 = extractvalue { i64, i64 } %665, 1
  br label %668

668:                                              ; preds = %663, %655
  %669 = phi i64 [ %666, %663 ], [ %658, %655 ]
  %670 = phi i64 [ %667, %663 ], [ %659, %655 ]
  %671 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %635, i64 0, i32 25, i32 8
  %672 = bitcast %"class.gfx::Rect"* %671 to i64*
  store i64 %669, i64* %672, align 4
  %673 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %635, i64 0, i32 25, i32 8, i32 1
  %674 = bitcast %"class.gfx::Size"* %673 to i64*
  store i64 %670, i64* %674, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %465) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %460) #12
  %675 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %634, i64 1
  %676 = icmp eq %"class.cc::LayerImpl"** %675, %457
  br i1 %676, label %677, label %633

677:                                              ; preds = %668, %213, %233, %288, %455
  %678 = icmp eq i8* %216, null
  br i1 %678, label %683, label %679

679:                                              ; preds = %677
  %680 = load i8, i8* %216, align 1
  %681 = icmp eq i8 %680, 0
  br i1 %681, label %683, label %682

682:                                              ; preds = %679
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %216, i8* %215, i64 %214) #12
  br label %683

683:                                              ; preds = %677, %679, %682
  %684 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %685 = and i8 %684, 25
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %693, label %687, !prof !9

687:                                              ; preds = %683
  %688 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %689 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %689) #12
  %690 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %691 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %691, i64* %690, align 8
  %692 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %688, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %689) #12
  br label %693

693:                                              ; preds = %683, %687
  %694 = phi i64 [ -6148914691236517206, %683 ], [ %692, %687 ]
  %695 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %683 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), %687 ]
  %696 = phi i8* [ null, %683 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %687 ]
  %697 = call i32 @_ZNK2cc13LayerTreeImpl16max_texture_sizeEv(%"class.cc::LayerTreeImpl"* %0) #12
  %698 = bitcast %"class.std::__1::vector.1145"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %698) #12
  %699 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %5, i64 0, i32 0, i32 0
  %700 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %698, i8 0, i64 24, i1 false) #12
  %701 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 0, i32 1
  %702 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 1
  %703 = bitcast %"struct.cc::EffectNode"** %702 to i64*
  %704 = load i64, i64* %703, align 8
  %705 = bitcast %"class.std::__1::vector.847"* %701 to i64*
  %706 = load i64, i64* %705, align 8
  %707 = sub i64 %704, %706
  %708 = sdiv exact i64 %707, 288
  %709 = trunc i64 %708 to i32
  %710 = icmp sgt i32 %709, 1
  br i1 %710, label %711, label %713

711:                                              ; preds = %693
  %712 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  br label %726

713:                                              ; preds = %741, %693
  %714 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  %715 = load %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"** %714, align 8
  %716 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %715, i64 1, i32 0, i32 0, i32 0
  %717 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %716, align 8
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_129AddSurfaceToRenderSurfaceListEPNS_17RenderSurfaceImplEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPNS_13PropertyTreesE(%"class.cc::RenderSurfaceImpl"* %717, %"class.std::__1::vector.1145"* nonnull %5, %"class.cc::PropertyTrees"* %42) #12
  %718 = load %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"** %185, align 8
  %719 = load %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"** %186, align 8
  %720 = icmp eq %"class.std::__1::unique_ptr.1012"* %718, %719
  br i1 %720, label %852, label %721

721:                                              ; preds = %713
  %722 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %723 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %724 = bitcast %"class.gfx::Transform"* %4 to i8*
  %725 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  br label %750

726:                                              ; preds = %741, %711
  %727 = phi i64 [ %706, %711 ], [ %742, %741 ]
  %728 = phi i64 [ %704, %711 ], [ %743, %741 ]
  %729 = phi i64 [ 1, %711 ], [ %744, %741 ]
  %730 = load %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"** %712, align 8
  %731 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %730, i64 %729, i32 0, i32 0, i32 0
  %732 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %731, align 8
  %733 = icmp eq %"class.cc::RenderSurfaceImpl"* %732, null
  br i1 %733, label %741, label %734

734:                                              ; preds = %726
  %735 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %732, i64 0, i32 7
  %736 = load i8, i8* %735, align 4
  %737 = and i8 %736, -17
  store i8 %737, i8* %735, align 4
  %738 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %732, i64 0, i32 6
  store i32 0, i32* %738, align 8
  %739 = load i64, i64* %703, align 8
  %740 = load i64, i64* %705, align 8
  br label %741

741:                                              ; preds = %734, %726
  %742 = phi i64 [ %727, %726 ], [ %740, %734 ]
  %743 = phi i64 [ %728, %726 ], [ %739, %734 ]
  %744 = add nuw nsw i64 %729, 1
  %745 = sub i64 %743, %742
  %746 = sdiv exact i64 %745, 288
  %747 = shl i64 %746, 32
  %748 = ashr exact i64 %747, 32
  %749 = icmp slt i64 %744, %748
  br i1 %749, label %726, label %713

750:                                              ; preds = %849, %721
  %751 = phi %"class.std::__1::unique_ptr.1012"* [ %718, %721 ], [ %850, %849 ]
  %752 = getelementptr inbounds %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1012"* %751, i64 0, i32 0, i32 0, i32 0
  %753 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %752, align 8
  call void @_ZNK2cc9LayerImpl30EnsureValidPropertyTreeIndicesEv(%"class.cc::LayerImpl"* %753) #12
  %754 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %753, i64 0, i32 10
  %755 = load i16, i16* %754, align 4
  %756 = and i16 %755, -257
  store i16 %756, i16* %754, align 4
  %757 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %753, i64 0, i32 30
  %758 = load i8, i8* %757, align 8
  %759 = and i8 %758, -5
  store i8 %759, i8* %757, align 8
  %760 = call zeroext i1 @_ZNK2cc13LayerTreeImpl11IsRootLayerEPKNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %0, %"class.cc::LayerImpl"* %753) #12
  %761 = call zeroext i1 @_ZN2cc19draw_property_utils48LayerShouldBeSkippedForDrawPropertiesComputationEPNS_9LayerImplEPKNS_13PropertyTreesE(%"class.cc::LayerImpl"* %753, %"class.cc::PropertyTrees"* %42) #12
  %762 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %753, i64 0, i32 17
  %763 = load i32, i32* %762, align 8
  %764 = icmp sgt i32 %763, -1
  br i1 %764, label %765, label %769

765:                                              ; preds = %750
  %766 = sext i32 %763 to i64
  %767 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %722, align 8
  %768 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %767, i64 %766
  br label %769

769:                                              ; preds = %765, %750
  %770 = phi %"struct.cc::TransformNode"* [ %768, %765 ], [ null, %750 ]
  %771 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %753, i64 0, i32 18
  %772 = load i32, i32* %771, align 4
  %773 = icmp sgt i32 %772, -1
  br i1 %773, label %774, label %778

774:                                              ; preds = %769
  %775 = sext i32 %772 to i64
  %776 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %723, align 8
  %777 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %776, i64 %775
  br label %778

778:                                              ; preds = %774, %769
  %779 = phi %"struct.cc::EffectNode"* [ %777, %774 ], [ null, %769 ]
  %780 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %779, i64 0, i32 22
  %781 = load i32, i32* %780, align 8
  %782 = icmp sgt i32 %781, 1
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %724) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %724, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %724, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  store i8 0, i8* %725, align 4
  br i1 %782, label %783, label %787

783:                                              ; preds = %778
  %784 = call zeroext i1 @_ZNK2cc13PropertyTrees13GetFromTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %42, i32 %763, i32 %781, %"class.gfx::Transform"* nonnull %4) #12
  %785 = xor i1 %784, true
  %786 = load i32, i32* %762, align 8
  br label %793

787:                                              ; preds = %778
  %788 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %770, i64 0, i32 10
  %789 = bitcast i24* %788 to i32*
  %790 = load i32, i32* %789, align 4
  %791 = and i32 %790, 8
  %792 = icmp eq i32 %791, 0
  br label %793

793:                                              ; preds = %787, %783
  %794 = phi i32 [ %786, %783 ], [ %763, %787 ]
  %795 = phi i1 [ %785, %783 ], [ %792, %787 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %724) #12
  %796 = or i1 %761, %795
  %797 = xor i1 %760, true
  %798 = and i1 %796, %797
  %799 = icmp sgt i32 %794, -1
  br i1 %799, label %800, label %811

800:                                              ; preds = %793
  %801 = sext i32 %794 to i64
  %802 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %722, align 8
  %803 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %802, i64 %801
  %804 = icmp eq %"struct.cc::TransformNode"* %803, null
  br i1 %804, label %811, label %805

805:                                              ; preds = %800
  %806 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %802, i64 %801, i32 10
  %807 = bitcast i24* %806 to i32*
  %808 = load i32, i32* %807, align 4
  %809 = trunc i32 %808 to i16
  %810 = icmp slt i16 %809, 0
  br label %811

811:                                              ; preds = %805, %800, %793
  %812 = phi i1 [ false, %800 ], [ %810, %805 ], [ false, %793 ]
  %813 = xor i1 %761, true
  %814 = and i1 %795, %813
  %815 = or i1 %814, %812
  %816 = zext i1 %815 to i8
  %817 = load i8, i8* %757, align 8
  %818 = shl nuw nsw i8 %816, 2
  %819 = and i8 %817, -5
  %820 = or i8 %818, %819
  store i8 %820, i8* %757, align 8
  br i1 %798, label %849, label %821

821:                                              ; preds = %811
  %822 = load i32, i32* %771, align 4
  %823 = icmp sgt i32 %822, -1
  br i1 %823, label %824, label %828

824:                                              ; preds = %821
  %825 = sext i32 %822 to i64
  %826 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %723, align 8
  %827 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %826, i64 %825
  br label %828

828:                                              ; preds = %824, %821
  %829 = phi %"struct.cc::EffectNode"* [ %827, %824 ], [ null, %821 ]
  %830 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %829, i64 0, i32 16
  %831 = bitcast [3 x i8]* %830 to i24*
  %832 = load i24, i24* %831, align 4
  %833 = and i24 %832, 32
  %834 = icmp ne i24 %833, 0
  %835 = call fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_116LayerNeedsUpdateINS_9LayerImplEEEbPT_bPKNS_13PropertyTreesE(%"class.cc::LayerImpl"* %753, i1 zeroext %834, %"class.cc::PropertyTrees"* %42) #12
  br i1 %835, label %836, label %849

836:                                              ; preds = %828
  %837 = call %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %753) #12
  %838 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %837, i64 0, i32 7
  %839 = load i8, i8* %838, align 4
  %840 = and i8 %839, 16
  %841 = icmp eq i8 %840, 0
  br i1 %841, label %842, label %843

842:                                              ; preds = %836
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_129AddSurfaceToRenderSurfaceListEPNS_17RenderSurfaceImplEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPNS_13PropertyTreesE(%"class.cc::RenderSurfaceImpl"* %837, %"class.std::__1::vector.1145"* nonnull %5, %"class.cc::PropertyTrees"* %42) #12
  br label %843

843:                                              ; preds = %842, %836
  %844 = load i16, i16* %754, align 4
  %845 = or i16 %844, 256
  store i16 %845, i16* %754, align 4
  call void @_ZN2cc17RenderSurfaceImpl42AccumulateContentRectFromContributingLayerEPNS_9LayerImplE(%"class.cc::RenderSurfaceImpl"* %837, %"class.cc::LayerImpl"* %753) #12
  %846 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %837, i64 0, i32 6
  %847 = load i32, i32* %846, align 8
  %848 = add nsw i32 %847, 1
  store i32 %848, i32* %846, align 8
  br label %849

849:                                              ; preds = %843, %828, %811
  %850 = getelementptr inbounds %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1012"* %751, i64 1
  %851 = icmp eq %"class.std::__1::unique_ptr.1012"* %850, %719
  br i1 %851, label %852, label %750

852:                                              ; preds = %849, %713
  %853 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %700, align 8
  %854 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %699, align 8
  %855 = icmp eq %"class.cc::RenderSurfaceImpl"** %853, %854
  br i1 %855, label %1004, label %856

856:                                              ; preds = %852, %868
  %857 = phi %"class.cc::RenderSurfaceImpl"** [ %858, %868 ], [ %853, %852 ]
  %858 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %857, i64 -1
  %859 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %858, align 8
  %860 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %859) #12
  %861 = icmp eq i32 %860, 1
  br i1 %861, label %862, label %863

862:                                              ; preds = %856
  call void @_ZN2cc17RenderSurfaceImpl24SetContentRectToViewportEv(%"class.cc::RenderSurfaceImpl"* %859) #12
  br label %868

863:                                              ; preds = %856
  call void @_ZN2cc17RenderSurfaceImpl46CalculateContentRectFromAccumulatedContentRectEi(%"class.cc::RenderSurfaceImpl"* %859, i32 %697) #12
  %864 = call %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %859) #12
  call void @_ZN2cc17RenderSurfaceImpl50AccumulateContentRectFromContributingRenderSurfaceEPS0_(%"class.cc::RenderSurfaceImpl"* %864, %"class.cc::RenderSurfaceImpl"* %859) #12
  %865 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %864, i64 0, i32 6
  %866 = load i32, i32* %865, align 8
  %867 = add nsw i32 %866, 1
  store i32 %867, i32* %865, align 8
  br label %868

868:                                              ; preds = %863, %862
  %869 = icmp eq %"class.cc::RenderSurfaceImpl"** %858, %854
  br i1 %869, label %870, label %856

870:                                              ; preds = %868
  %871 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %699, align 8
  %872 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %700, align 8
  %873 = icmp eq %"class.cc::RenderSurfaceImpl"** %871, %872
  br i1 %873, label %1004, label %874

874:                                              ; preds = %870
  %875 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %876 = bitcast %"class.cc::RenderSurfaceImpl"*** %875 to i64*
  %877 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 0
  br label %881

878:                                              ; preds = %971
  %879 = and i8 %972, 1
  %880 = icmp eq i8 %879, 0
  br i1 %880, label %1002, label %975

881:                                              ; preds = %971, %874
  %882 = phi i8 [ 0, %874 ], [ %972, %971 ]
  %883 = phi %"class.cc::RenderSurfaceImpl"** [ %871, %874 ], [ %973, %971 ]
  %884 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %883, align 8
  %885 = ptrtoint %"class.cc::RenderSurfaceImpl"* %884 to i64
  %886 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %884) #12
  %887 = icmp eq i32 %886, 1
  %888 = call %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %884) #12
  br i1 %887, label %909, label %889

889:                                              ; preds = %881
  %890 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %884, i64 0, i32 4, i32 3, i32 1
  %891 = bitcast %"class.gfx::Size"* %890 to i64*
  %892 = load i64, i64* %891, align 4
  %893 = trunc i64 %892 to i32
  %894 = icmp eq i32 %893, 0
  %895 = icmp ult i64 %892, 4294967296
  %896 = or i1 %895, %894
  br i1 %896, label %902, label %897

897:                                              ; preds = %889
  %898 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %888, i64 0, i32 7
  %899 = load i8, i8* %898, align 4
  %900 = and i8 %899, 16
  %901 = icmp eq i8 %900, 0
  br i1 %901, label %902, label %909

902:                                              ; preds = %897, %889
  %903 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %884, i64 0, i32 7
  %904 = load i8, i8* %903, align 4
  %905 = and i8 %904, -17
  store i8 %905, i8* %903, align 4
  %906 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %888, i64 0, i32 6
  %907 = load i32, i32* %906, align 8
  %908 = add nsw i32 %907, -1
  store i32 %908, i32* %906, align 8
  br label %971

909:                                              ; preds = %897, %881
  %910 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %36, align 8
  %911 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %875, align 8
  %912 = icmp eq %"class.cc::RenderSurfaceImpl"** %910, %911
  %913 = ptrtoint %"class.cc::RenderSurfaceImpl"** %911 to i64
  br i1 %912, label %918, label %914

914:                                              ; preds = %909
  %915 = bitcast %"class.cc::RenderSurfaceImpl"** %910 to i64*
  store i64 %885, i64* %915, align 8
  %916 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %910, i64 1
  %917 = ptrtoint %"class.cc::RenderSurfaceImpl"** %916 to i64
  store i64 %917, i64* %37, align 8
  br label %971

918:                                              ; preds = %909
  %919 = ptrtoint %"class.cc::RenderSurfaceImpl"** %910 to i64
  %920 = load i64, i64* %34, align 8
  %921 = sub i64 %919, %920
  %922 = ashr exact i64 %921, 3
  %923 = add nsw i64 %922, 1
  %924 = icmp ugt i64 %923, 2305843009213693951
  br i1 %924, label %925, label %927

925:                                              ; preds = %918
  %926 = bitcast %"class.std::__1::vector.1145"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %926) #13
  unreachable

927:                                              ; preds = %918
  %928 = sub i64 %913, %920
  %929 = ashr exact i64 %928, 3
  %930 = icmp ult i64 %929, 1152921504606846975
  br i1 %930, label %931, label %939

931:                                              ; preds = %927
  %932 = ashr exact i64 %928, 2
  %933 = icmp ult i64 %932, %923
  %934 = select i1 %933, i64 %923, i64 %932
  %935 = icmp eq i64 %934, 0
  br i1 %935, label %944, label %936

936:                                              ; preds = %931
  %937 = icmp ugt i64 %934, 2305843009213693951
  br i1 %937, label %938, label %939

938:                                              ; preds = %936
  call void @abort() #13
  unreachable

939:                                              ; preds = %936, %927
  %940 = phi i64 [ %934, %936 ], [ 2305843009213693951, %927 ]
  %941 = shl i64 %940, 3
  %942 = call i8* @_Znwm(i64 %941) #14
  %943 = bitcast i8* %942 to %"class.cc::RenderSurfaceImpl"**
  br label %944

944:                                              ; preds = %939, %931
  %945 = phi i64 [ %940, %939 ], [ 0, %931 ]
  %946 = phi %"class.cc::RenderSurfaceImpl"** [ %943, %939 ], [ null, %931 ]
  %947 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %946, i64 %922
  %948 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %946, i64 %945
  %949 = ptrtoint %"class.cc::RenderSurfaceImpl"** %948 to i64
  %950 = bitcast %"class.cc::RenderSurfaceImpl"** %947 to i64*
  store i64 %885, i64* %950, align 8
  %951 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %947, i64 1
  %952 = ptrtoint %"class.cc::RenderSurfaceImpl"** %951 to i64
  %953 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %877, align 8
  %954 = load i64, i64* %37, align 8
  %955 = ptrtoint %"class.cc::RenderSurfaceImpl"** %953 to i64
  %956 = sub i64 %954, %955
  %957 = ashr exact i64 %956, 3
  %958 = sub nsw i64 0, %957
  %959 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %947, i64 %958
  %960 = ptrtoint %"class.cc::RenderSurfaceImpl"** %959 to i64
  %961 = icmp sgt i64 %956, 0
  br i1 %961, label %962, label %966

962:                                              ; preds = %944
  %963 = bitcast %"class.cc::RenderSurfaceImpl"** %959 to i8*
  %964 = bitcast %"class.cc::RenderSurfaceImpl"** %953 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %963, i8* align 8 %964, i64 %956, i1 false) #12
  %965 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %877, align 8
  br label %966

966:                                              ; preds = %962, %944
  %967 = phi %"class.cc::RenderSurfaceImpl"** [ %953, %944 ], [ %965, %962 ]
  store i64 %960, i64* %34, align 8
  store i64 %952, i64* %37, align 8
  store i64 %949, i64* %876, align 8
  %968 = icmp eq %"class.cc::RenderSurfaceImpl"** %967, null
  br i1 %968, label %971, label %969

969:                                              ; preds = %966
  %970 = bitcast %"class.cc::RenderSurfaceImpl"** %967 to i8*
  call void @_ZdlPv(i8* %970) #14
  br label %971

971:                                              ; preds = %969, %966, %914, %902
  %972 = phi i8 [ 1, %902 ], [ %882, %914 ], [ %882, %966 ], [ %882, %969 ]
  %973 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %883, i64 1
  %974 = icmp eq %"class.cc::RenderSurfaceImpl"** %973, %872
  br i1 %974, label %878, label %881

975:                                              ; preds = %878
  %976 = load %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"** %185, align 8
  %977 = load %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"** %186, align 8
  %978 = icmp eq %"class.std::__1::unique_ptr.1012"* %976, %977
  br i1 %978, label %1002, label %979

979:                                              ; preds = %975, %999
  %980 = phi %"class.std::__1::unique_ptr.1012"* [ %1000, %999 ], [ %976, %975 ]
  %981 = getelementptr inbounds %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1012"* %980, i64 0, i32 0, i32 0, i32 0
  %982 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %981, align 8
  %983 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %982, i64 0, i32 10
  %984 = load i16, i16* %983, align 4
  %985 = and i16 %984, 256
  %986 = icmp eq i16 %985, 0
  br i1 %986, label %999, label %987

987:                                              ; preds = %979
  %988 = call %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %982) #12
  %989 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %988, i64 0, i32 7
  %990 = load i8, i8* %989, align 4
  %991 = and i8 %990, 16
  %992 = icmp eq i8 %991, 0
  br i1 %992, label %993, label %999

993:                                              ; preds = %987
  %994 = load i16, i16* %983, align 4
  %995 = and i16 %994, -257
  store i16 %995, i16* %983, align 4
  %996 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %988, i64 0, i32 6
  %997 = load i32, i32* %996, align 8
  %998 = add nsw i32 %997, -1
  store i32 %998, i32* %996, align 8
  br label %999

999:                                              ; preds = %993, %987, %979
  %1000 = getelementptr inbounds %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1012"* %980, i64 1
  %1001 = icmp eq %"class.std::__1::unique_ptr.1012"* %1000, %977
  br i1 %1001, label %1002, label %979

1002:                                             ; preds = %999, %975, %878
  %1003 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %699, align 8
  br label %1004

1004:                                             ; preds = %1002, %870, %852
  %1005 = phi %"class.cc::RenderSurfaceImpl"** [ %1003, %1002 ], [ %871, %870 ], [ %853, %852 ]
  %1006 = icmp eq %"class.cc::RenderSurfaceImpl"** %1005, null
  br i1 %1006, label %1011, label %1007

1007:                                             ; preds = %1004
  %1008 = ptrtoint %"class.cc::RenderSurfaceImpl"** %1005 to i64
  %1009 = bitcast %"class.cc::RenderSurfaceImpl"*** %700 to i64*
  store i64 %1008, i64* %1009, align 8
  %1010 = bitcast %"class.cc::RenderSurfaceImpl"** %1005 to i8*
  call void @_ZdlPv(i8* %1010) #14
  br label %1011

1011:                                             ; preds = %1004, %1007
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %698) #12
  %1012 = icmp eq i8* %696, null
  br i1 %1012, label %1017, label %1013

1013:                                             ; preds = %1011
  %1014 = load i8, i8* %696, align 1
  %1015 = icmp eq i8 %1014, 0
  br i1 %1015, label %1017, label %1016

1016:                                             ; preds = %1013
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %696, i8* %695, i64 %694) #12
  br label %1017

1017:                                             ; preds = %1011, %1013, %1016
  %1018 = load atomic i8, i8* bitcast (i64* @_ZGVZN2cc19draw_property_utils12_GLOBAL__N_136RecordRenderSurfaceReasonsForTracingEPKNS_13PropertyTreesEPKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEEE15tracing_enabled to i8*) acquire, align 8
  %1019 = icmp eq i8 %1018, 0
  br i1 %1019, label %1020, label %1025, !prof !22

1020:                                             ; preds = %1017
  %1021 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2cc19draw_property_utils12_GLOBAL__N_136RecordRenderSurfaceReasonsForTracingEPKNS_13PropertyTreesEPKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEEE15tracing_enabled) #12
  %1022 = icmp eq i32 %1021, 0
  br i1 %1022, label %1025, label %1023

1023:                                             ; preds = %1020
  %1024 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #12
  store i8* %1024, i8** @_ZZN2cc19draw_property_utils12_GLOBAL__N_136RecordRenderSurfaceReasonsForTracingEPKNS_13PropertyTreesEPKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEEE15tracing_enabled, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2cc19draw_property_utils12_GLOBAL__N_136RecordRenderSurfaceReasonsForTracingEPKNS_13PropertyTreesEPKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEEE15tracing_enabled) #12
  br label %1025

1025:                                             ; preds = %1023, %1020, %1017
  %1026 = load i8*, i8** @_ZZN2cc19draw_property_utils12_GLOBAL__N_136RecordRenderSurfaceReasonsForTracingEPKNS_13PropertyTreesEPKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEEE15tracing_enabled, align 8
  %1027 = load i8, i8* %1026, align 1
  %1028 = icmp eq i8 %1027, 0
  br i1 %1028, label %1091, label %1029

1029:                                             ; preds = %1025
  %1030 = load i64, i64* %37, align 8
  %1031 = load i64, i64* %34, align 8
  %1032 = sub i64 %1030, %1031
  %1033 = ashr exact i64 %1032, 3
  %1034 = icmp ult i64 %1033, 2
  br i1 %1034, label %1091, label %1035

1035:                                             ; preds = %1029
  %1036 = inttoptr i64 %1030 to %"class.cc::RenderSurfaceImpl"**
  %1037 = inttoptr i64 %1031 to %"class.cc::RenderSurfaceImpl"**
  %1038 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %1039 = and i8 %1038, 25
  %1040 = icmp eq i8 %1039, 0
  br i1 %1040, label %1047, label %1041, !prof !9

1041:                                             ; preds = %1035
  %1042 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1042) #12
  store i64 %1033, i64* %30, align 8
  %1043 = call i64 @_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64* nonnull dereferenceable(8) %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1042) #12
  %1044 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 0
  %1045 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %1044, align 8
  %1046 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %36, align 8
  br label %1047

1047:                                             ; preds = %1041, %1035
  %1048 = phi %"class.cc::RenderSurfaceImpl"** [ %1036, %1035 ], [ %1046, %1041 ]
  %1049 = phi %"class.cc::RenderSurfaceImpl"** [ %1037, %1035 ], [ %1045, %1041 ]
  %1050 = bitcast [22 x i32]* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1050) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1050, i8 0, i64 88, i1 false) #12
  %1051 = icmp eq %"class.cc::RenderSurfaceImpl"** %1049, %1048
  br i1 %1051, label %1052, label %1053

1052:                                             ; preds = %1064, %1047
  br label %1075

1053:                                             ; preds = %1047
  %1054 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %0, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  br label %1055

1055:                                             ; preds = %1064, %1053
  %1056 = phi %"class.cc::RenderSurfaceImpl"** [ %1049, %1053 ], [ %1072, %1064 ]
  %1057 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %1056, align 8
  %1058 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %1057) #12
  %1059 = icmp sgt i32 %1058, -1
  br i1 %1059, label %1060, label %1064

1060:                                             ; preds = %1055
  %1061 = sext i32 %1058 to i64
  %1062 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %1054, align 8
  %1063 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1062, i64 %1061
  br label %1064

1064:                                             ; preds = %1060, %1055
  %1065 = phi %"struct.cc::EffectNode"* [ %1063, %1060 ], [ null, %1055 ]
  %1066 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %1065, i64 0, i32 17
  %1067 = load i8, i8* %1066, align 1
  %1068 = zext i8 %1067 to i64
  %1069 = getelementptr inbounds [22 x i32], [22 x i32]* %31, i64 0, i64 %1068
  %1070 = load i32, i32* %1069, align 4
  %1071 = add nsw i32 %1070, 1
  store i32 %1071, i32* %1069, align 4
  %1072 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %1056, i64 1
  %1073 = icmp eq %"class.cc::RenderSurfaceImpl"** %1072, %1048
  br i1 %1073, label %1052, label %1055

1074:                                             ; preds = %1088
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1050) #12
  br label %1091

1075:                                             ; preds = %1052, %1088
  %1076 = phi i64 [ %1089, %1088 ], [ 0, %1052 ]
  %1077 = getelementptr inbounds [22 x i32], [22 x i32]* %31, i64 0, i64 %1076
  %1078 = load i32, i32* %1077, align 4
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1088, label %1080

1080:                                             ; preds = %1075
  %1081 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %1082 = and i8 %1081, 25
  %1083 = icmp eq i8 %1082, 0
  br i1 %1083, label %1088, label %1084, !prof !9

1084:                                             ; preds = %1080
  %1085 = trunc i64 %1076 to i8
  %1086 = call i8* @_ZN2cc27RenderSurfaceReasonToStringENS_19RenderSurfaceReasonE(i8 zeroext %1085) #12
  %1087 = call i64 @_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* %1086, i32* dereferenceable(4) %1077) #12
  br label %1088

1088:                                             ; preds = %1084, %1080, %1075
  %1089 = add nuw nsw i64 %1076, 1
  %1090 = icmp eq i64 %1089, 22
  br i1 %1090, label %1074, label %1075

1091:                                             ; preds = %1025, %1029, %1074
  %1092 = icmp eq %"class.std::__1::vector.1048"* %2, null
  br i1 %1092, label %1111, label %1093

1093:                                             ; preds = %1091
  %1094 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %2, i64 0, i32 0, i32 0
  %1095 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %1094, align 8
  %1096 = icmp eq %"class.cc::LayerImpl"** %1095, null
  br i1 %1096, label %1103, label %1097

1097:                                             ; preds = %1093
  %1098 = ptrtoint %"class.cc::LayerImpl"** %1095 to i64
  %1099 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %2, i64 0, i32 0, i32 1
  %1100 = bitcast %"class.cc::LayerImpl"*** %1099 to i64*
  store i64 %1098, i64* %1100, align 8
  %1101 = bitcast %"class.cc::LayerImpl"** %1095 to i8*
  call void @_ZdlPv(i8* %1101) #14
  %1102 = bitcast %"class.std::__1::vector.1048"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1102, i8 0, i64 24, i1 false) #12
  br label %1103

1103:                                             ; preds = %1097, %1093
  %1104 = bitcast %"class.std::__1::vector.1048"* %32 to <2 x i64>*
  %1105 = load <2 x i64>, <2 x i64>* %1104, align 16
  %1106 = bitcast %"class.std::__1::vector.1048"* %2 to <2 x i64>*
  store <2 x i64> %1105, <2 x i64>* %1106, align 8
  %1107 = bitcast %"class.cc::LayerImpl"*** %41 to i64*
  %1108 = load i64, i64* %1107, align 16
  %1109 = getelementptr inbounds %"class.std::__1::vector.1048", %"class.std::__1::vector.1048"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %1110 = bitcast %"class.cc::LayerImpl"*** %1109 to i64*
  store i64 %1108, i64* %1110, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 24, i1 false) #12
  br label %1118

1111:                                             ; preds = %1091
  %1112 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %39, align 16
  %1113 = icmp eq %"class.cc::LayerImpl"** %1112, null
  br i1 %1113, label %1118, label %1114

1114:                                             ; preds = %1111
  %1115 = bitcast %"class.cc::LayerImpl"** %1112 to i8*
  %1116 = ptrtoint %"class.cc::LayerImpl"** %1112 to i64
  %1117 = bitcast %"class.cc::LayerImpl"*** %40 to i64*
  store i64 %1116, i64* %1117, align 8
  call void @_ZdlPv(i8* %1115) #14
  br label %1118

1118:                                             ; preds = %1103, %1111, %1114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  ret void
}

declare void @_ZN2cc8ClipTree15SetViewportClipEN3gfx5RectFE(%"class.cc::ClipTree"*, <2 x float>, <2 x float>) local_unnamed_addr #2

declare { i64, i64 } @_ZNK2cc13LayerTreeImpl17GetDeviceViewportEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

declare void @_ZN2cc13TransformTree24SetRootScaleAndTransformEfRKN3gfx9TransformE(%"class.cc::TransformTree"*, float, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %22 = load i8, i8* %16, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %9, %53
  %25 = phi i64 [ %54, %53 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %31 = bitcast %"union.base::trace_event::TraceValue"* %30 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %32 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %31, align 8
  %33 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %32 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %36 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, i64 1
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, align 8
  call void %38(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %32) #12
  %39 = load i8, i8* %26, align 1
  br label %40

40:                                               ; preds = %34, %24
  %41 = phi i8 [ %27, %24 ], [ %39, %34 ]
  %42 = icmp eq i8 %41, 9
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.protozero::HeapBuffered"**
  %46 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %45, align 8
  %47 = icmp eq %"class.protozero::HeapBuffered"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %49) #12
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %50) #12
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %51) #12
  %52 = bitcast %"class.protozero::HeapBuffered"* %46 to i8*
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %48, %43, %40, %29
  %54 = add nuw nsw i64 %25, 1
  %55 = load i8, i8* %16, align 8
  %56 = zext i8 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %24, label %58

58:                                               ; preds = %53, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %21
}

declare i32 @_ZNK2cc13LayerTreeImpl16max_texture_sizeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

declare void @_ZNK2cc13TransformTree24CombineTransformsBetweenEiiPN3gfx9TransformE(%"class.cc::TransformTree"*, i32, i32, %"class.gfx::Transform"*) local_unnamed_addr #2

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform17IsBackFaceVisibleEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare i32 @_ZNK2cc5Layer20transform_tree_indexEv(%"class.cc::Layer"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc13LayerTreeImpl11IsRootLayerEPKNS_9LayerImplE(%"class.cc::LayerTreeImpl"*, %"class.cc::LayerImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_130ApplyClipNodeToAccumulatedClipEPKNS_13PropertyTreesEbiiPKNS_8ClipNodeEPN3gfx5RectFE(%"class.cc::PropertyTrees"*, i1 zeroext, i32, i32, %"struct.cc::ClipNode"*, %"class.gfx::RectF"*) unnamed_addr #4 {
  %7 = alloca %"struct.cc::ConditionalClip", align 4
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %90 [
    i32 0, label %13
    i32 1, label %27
  ]

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %14) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 0), i64 20, i1 false)
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_118ComputeCurrentClipEPKNS_8ClipNodeEPKNS_13PropertyTreesEii(%"struct.cc::ConditionalClip"* nonnull sret %7, %"struct.cc::ClipNode"* %4, %"class.cc::PropertyTrees"* %0, i32 %3, i32 %2)
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %7, i64 0, i32 1
  %19 = call { <2 x float>, <2 x float> } @_ZN3gfx14IntersectRectsERKNS_5RectFES2_(%"class.gfx::RectF"* dereferenceable(16) %5, %"class.gfx::RectF"* dereferenceable(16) %18) #12
  %20 = extractvalue { <2 x float>, <2 x float> } %19, 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 1
  %22 = bitcast %"class.gfx::RectF"* %5 to <2 x float>*
  store <2 x float> %20, <2 x float>* %22, align 4
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1
  %24 = bitcast %"class.gfx::SizeF"* %23 to <2 x float>*
  store <2 x float> %21, <2 x float>* %24, align 4
  br label %25

25:                                               ; preds = %13, %17
  %26 = phi i1 [ true, %17 ], [ false, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %14) #12
  br label %90

27:                                               ; preds = %6
  br i1 %1, label %28, label %90

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %33, !prof !23

32:                                               ; preds = %28
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.cc::ClipExpander", %"class.cc::ClipExpander"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %43

38:                                               ; preds = %33
  %39 = sext i32 %36 to i64
  %40 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %41 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %40, align 8
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %41, i64 %39
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %"struct.cc::EffectNode"* [ %42, %38 ], [ null, %33 ]
  %45 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 0, i64 16, i1 false) #12
  %46 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %44, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"class.gfx::RectF"* %5 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1
  %51 = bitcast %"class.gfx::SizeF"* %50 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4
  %53 = call fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_131ConvertRectBetweenSurfaceSpacesEPKNS_13PropertyTreesEiiN3gfx5RectFEPS6_(%"class.cc::PropertyTrees"* %0, i32 %2, i32 %47, <2 x float> %49, <2 x float> %52, %"class.gfx::RectF"* nonnull %8)
  br i1 %53, label %54, label %88

54:                                               ; preds = %43
  %55 = load i8, i8* %29, align 4, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %58, !prof !23

57:                                               ; preds = %54
  tail call void @llvm.trap() #12
  unreachable

58:                                               ; preds = %54
  %59 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #12
  %60 = call { i64, i64 } @_ZN3gfx28ToEnclosingRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* nonnull dereferenceable(16) %8, float 0x3EE4F8B580000000) #12
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %62 = extractvalue { i64, i64 } %60, 0
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %64 = extractvalue { i64, i64 } %60, 1
  store i64 %64, i64* %63, align 8
  %65 = call { i64, i64 } @_ZNK2cc12ClipExpander7MapRectERKN3gfx4RectEPKNS_13PropertyTreesE(%"class.cc::ClipExpander"* %34, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.cc::PropertyTrees"* %0) #12
  %66 = extractvalue { i64, i64 } %65, 0
  %67 = trunc i64 %66 to i32
  %68 = lshr i64 %66, 32
  %69 = trunc i64 %68 to i32
  %70 = extractvalue { i64, i64 } %65, 1
  %71 = sitofp i32 %67 to float
  %72 = sitofp i32 %69 to float
  %73 = trunc i64 %70 to i32
  %74 = lshr i64 %70, 32
  %75 = trunc i64 %74 to i32
  %76 = insertelement <2 x float> undef, float %71, i32 0
  %77 = insertelement <2 x float> %76, float %72, i32 1
  %78 = icmp sgt i32 %73, 0
  %79 = select i1 %78, i32 %73, i32 0
  %80 = sitofp i32 %79 to float
  %81 = insertelement <2 x float> undef, float %80, i32 0
  %82 = icmp sgt i32 %75, 0
  %83 = select i1 %82, i32 %75, i32 0
  %84 = sitofp i32 %83 to float
  %85 = insertelement <2 x float> %81, float %84, i32 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #12
  %86 = load i32, i32* %46, align 8
  %87 = call fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_131ConvertRectBetweenSurfaceSpacesEPKNS_13PropertyTreesEiiN3gfx5RectFEPS6_(%"class.cc::PropertyTrees"* %0, i32 %86, i32 %2, <2 x float> %77, <2 x float> %85, %"class.gfx::RectF"* %5)
  br label %88

88:                                               ; preds = %43, %58
  %89 = phi i1 [ %87, %58 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #12
  br label %90

90:                                               ; preds = %6, %27, %88, %25
  %91 = phi i1 [ %89, %88 ], [ %26, %25 ], [ true, %27 ], [ true, %6 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_118ComputeCurrentClipEPKNS_8ClipNodeEPKNS_13PropertyTreesEii(%"struct.cc::ConditionalClip"* noalias nocapture sret, %"struct.cc::ClipNode"* nocapture readonly, %"class.cc::PropertyTrees"*, i32, i32) unnamed_addr #4 {
  %6 = alloca <2 x i64>, align 16
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::RectF", align 8
  %9 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %3
  br i1 %11, label %44, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 3
  %14 = bitcast %"class.gfx::RectF"* %13 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 4
  %16 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %17 = bitcast <2 x i64>* %6 to %"class.gfx::RectF"*
  store <2 x i64> %15, <2 x i64>* %6, align 16, !noalias !24
  %18 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %18) #12, !noalias !24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12, !noalias !24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12, !noalias !24
  %19 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %19, align 4, !noalias !24
  %20 = call zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %2, i32 %10, i32 %4, %"class.gfx::Transform"* nonnull %7) #12, !noalias !24
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 0, i8* %22, align 4, !alias.scope !24
  %23 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 1
  %24 = bitcast %"class.gfx::RectF"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 16, i1 false) #12, !alias.scope !24
  br label %43

25:                                               ; preds = %12
  %26 = icmp sgt i32 %10, %3
  %27 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 1, i8* %27, align 4, !alias.scope !24
  %28 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 1
  br i1 %26, label %29, label %36

29:                                               ; preds = %25
  %30 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* nonnull dereferenceable(68) %7, %"class.gfx::RectF"* nonnull dereferenceable(16) %17) #12, !noalias !24
  %31 = bitcast %"class.gfx::RectF"* %28 to <2 x float>*
  %32 = extractvalue { <2 x float>, <2 x float> } %30, 0
  store <2 x float> %32, <2 x float>* %31, align 4, !alias.scope !24
  %33 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 1, i32 1
  %34 = bitcast %"class.gfx::SizeF"* %33 to <2 x float>*
  %35 = extractvalue { <2 x float>, <2 x float> } %30, 1
  store <2 x float> %35, <2 x float>* %34, align 4, !alias.scope !24
  br label %43

36:                                               ; preds = %25
  %37 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil18ProjectClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* nonnull dereferenceable(68) %7, %"class.gfx::RectF"* nonnull dereferenceable(16) %17) #12, !noalias !24
  %38 = bitcast %"class.gfx::RectF"* %28 to <2 x float>*
  %39 = extractvalue { <2 x float>, <2 x float> } %37, 0
  store <2 x float> %39, <2 x float>* %38, align 4, !alias.scope !24
  %40 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 1, i32 1
  %41 = bitcast %"class.gfx::SizeF"* %40 to <2 x float>*
  %42 = extractvalue { <2 x float>, <2 x float> } %37, 1
  store <2 x float> %42, <2 x float>* %41, align 4, !alias.scope !24
  br label %43

43:                                               ; preds = %21, %29, %36
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %18) #12, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  br label %76

44:                                               ; preds = %5
  %45 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #12
  %46 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 3
  %47 = bitcast %"class.gfx::RectF"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 4 %47, i64 16, i1 false)
  %48 = icmp sgt i32 %4, -1
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = sext i32 %4 to i64
  %51 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %52 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %51, align 8
  %53 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %52, i64 %50
  br label %54

54:                                               ; preds = %44, %49
  %55 = phi %"struct.cc::EffectNode"* [ %53, %49 ], [ null, %44 ]
  %56 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %55, i64 0, i32 13, i32 0
  %57 = load float, float* %56, align 8
  %58 = fcmp ogt float %57, 0.000000e+00
  br i1 %58, label %59, label %72

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %55, i64 0, i32 13, i32 1
  %61 = load float, float* %60, align 4
  %62 = fcmp ule float %61, 0.000000e+00
  %63 = icmp eq i32 %3, 0
  %64 = or i1 %63, %62
  br i1 %64, label %72, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0
  %67 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %66, float %57, float %61) #12
  %68 = bitcast %"class.gfx::RectF"* %8 to <2 x float>*
  store <2 x float> %67, <2 x float>* %68, align 8
  %69 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1
  %70 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8) %69, float %57, float %61) #12
  %71 = bitcast %"class.gfx::SizeF"* %69 to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 8
  br label %72

72:                                               ; preds = %59, %65, %54
  %73 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 1, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 1
  %75 = bitcast %"class.gfx::RectF"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* nonnull align 8 %45, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #12
  br label %76

76:                                               ; preds = %72, %43
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN3gfx14IntersectRectsERKNS_5RectFES2_(%"class.gfx::RectF"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_131ConvertRectBetweenSurfaceSpacesEPKNS_13PropertyTreesEiiN3gfx5RectFEPS6_(%"class.cc::PropertyTrees"*, i32, i32, <2 x float>, <2 x float>, %"class.gfx::RectF"* nocapture) unnamed_addr #4 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::RectF"*
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %3, <2 x float>* %10, align 8
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %4, <2 x float>* %11, align 8
  %12 = icmp sgt i32 %1, -1
  br i1 %12, label %13, label %18

13:                                               ; preds = %6
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %16 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %15, align 8
  %17 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %16, i64 %14
  br label %18

18:                                               ; preds = %6, %13
  %19 = phi %"struct.cc::EffectNode"* [ %17, %13 ], [ null, %6 ]
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %19, i64 0, i32 18
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %2, -1
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = sext i32 %2 to i64
  %25 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %26 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %25, align 8
  %27 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %26, i64 %24
  br label %28

28:                                               ; preds = %18, %23
  %29 = phi %"struct.cc::EffectNode"* [ %27, %23 ], [ null, %18 ]
  %30 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 18
  %31 = load i32, i32* %30, align 8
  %32 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %32) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %33 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0, i32 1
  store i8 0, i8* %33, align 4
  %34 = icmp sgt i32 %21, %31
  br i1 %34, label %35, label %55

35:                                               ; preds = %28
  %36 = call zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %0, i32 %21, i32 %2, %"class.gfx::Transform"* nonnull %9) #12
  br i1 %36, label %37, label %73

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %19, i64 0, i32 13, i32 0
  %39 = load float, float* %38, align 4
  %40 = fcmp une float %39, 0.000000e+00
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %19, i64 0, i32 13, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp une float %43, 0.000000e+00
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = fdiv float 1.000000e+00, %39
  %47 = fdiv float 1.000000e+00, %43
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %9, float %46, float %47) #12
  br label %48

48:                                               ; preds = %37, %41, %45
  %49 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.gfx::RectF"* nonnull dereferenceable(16) %8) #12
  %50 = extractvalue { <2 x float>, <2 x float> } %49, 0
  %51 = extractvalue { <2 x float>, <2 x float> } %49, 1
  %52 = bitcast %"class.gfx::RectF"* %5 to <2 x float>*
  store <2 x float> %50, <2 x float>* %52, align 4
  %53 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1
  %54 = bitcast %"class.gfx::SizeF"* %53 to <2 x float>*
  store <2 x float> %51, <2 x float>* %54, align 4
  br label %73

55:                                               ; preds = %28
  %56 = call zeroext i1 @_ZNK2cc13PropertyTrees13GetFromTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %0, i32 %31, i32 %1, %"class.gfx::Transform"* nonnull %9) #12
  br i1 %56, label %57, label %73

57:                                               ; preds = %55
  %58 = icmp eq %"struct.cc::EffectNode"* %29, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0
  %61 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 13, i32 0
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %29, i64 0, i32 13, i32 1
  %64 = load float, float* %63, align 4
  %65 = call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix449postScaleEfff(%class.SkMatrix44* nonnull %60, float %62, float %64, float 1.000000e+00) #12
  br label %66

66:                                               ; preds = %57, %59
  %67 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil18ProjectClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.gfx::RectF"* nonnull dereferenceable(16) %8) #12
  %68 = extractvalue { <2 x float>, <2 x float> } %67, 0
  %69 = extractvalue { <2 x float>, <2 x float> } %67, 1
  %70 = bitcast %"class.gfx::RectF"* %5 to <2 x float>*
  store <2 x float> %68, <2 x float>* %70, align 4
  %71 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1
  %72 = bitcast %"class.gfx::SizeF"* %71 to <2 x float>*
  store <2 x float> %69, <2 x float>* %72, align 4
  br label %73

73:                                               ; preds = %48, %66, %55, %35
  %74 = phi i1 [ false, %35 ], [ false, %55 ], [ true, %66 ], [ true, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %32) #12
  ret i1 %74
}

declare { i64, i64 } @_ZNK2cc12ClipExpander7MapRectERKN3gfx4RectEPKNS_13PropertyTreesE(%"class.cc::ClipExpander"*, %"class.gfx::Rect"* dereferenceable(16), %"class.cc::PropertyTrees"*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN2cc8MathUtil18ProjectClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #2

declare <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8), float, float) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZNK2cc13PropertyTrees13GetFromTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"*, i32, i32, %"class.gfx::Transform"*) local_unnamed_addr #2

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix449postScaleEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #2

declare { i64, i64 } @_ZN3gfx28ToEnclosingRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16), float) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations7IsEmptyEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #2

declare %"struct.cc::TransformNode"* @_ZNK2cc13LayerTreeImpl22PageScaleTransformNodeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

declare %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

declare %"struct.cc::TransformNode"* @_ZNK2cc13LayerTreeImpl33OverscrollElasticityTransformNodeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #2

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc17LayerTreeHostImpl13DrawTransformEv(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_121GetMaskFilterInfoPairEPKNS_13PropertyTreesEib(%"struct.std::__1::pair.1550"* noalias nocapture sret, %"class.cc::PropertyTrees"*, i32, i1 zeroext) unnamed_addr #0 {
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"struct.std::__1::pair.1550", align 4
  %7 = icmp sgt i32 %2, -1
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %10, align 8
  %12 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %11, i64 %9
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi %"struct.cc::EffectNode"* [ %12, %8 ], [ null, %4 ]
  %15 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %14, i64 0, i32 20
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %14, i64 0, i32 17
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  %20 = or i1 %19, %3
  br i1 %20, label %21, label %25

21:                                               ; preds = %13
  %22 = icmp eq %"struct.cc::EffectNode"* %14, null
  br i1 %22, label %55, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  br label %27

25:                                               ; preds = %13
  %26 = bitcast %"struct.std::__1::pair.1550"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 56, i1 false)
  br label %85

27:                                               ; preds = %50, %23
  %28 = phi %"struct.cc::EffectNode"* [ %14, %23 ], [ %53, %50 ]
  %29 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 11, i32 0
  %30 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %29) #12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %29) #12
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %57

35:                                               ; preds = %32, %27
  %36 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 17
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  %39 = icmp eq %"struct.cc::EffectNode"* %14, %28
  %40 = and i1 %39, %3
  %41 = or i1 %40, %38
  br i1 %41, label %42, label %55

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, %16
  br i1 %45, label %55, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = sext i32 %48 to i64
  %52 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %24, align 8
  %53 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %52, i64 %51
  %54 = icmp eq %"struct.cc::EffectNode"* %53, null
  br i1 %54, label %55, label %27

55:                                               ; preds = %46, %42, %35, %50, %21
  %56 = bitcast %"struct.std::__1::pair.1550"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 56, i1 false)
  br label %85

57:                                               ; preds = %32
  %58 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %58) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %58, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %58, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %59 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 18
  %61 = load i32, i32* %60, align 8
  %62 = call zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %1, i32 %61, i32 %16, %"class.gfx::Transform"* nonnull %5) #12
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = bitcast %"struct.std::__1::pair.1550"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 56, i1 false)
  br label %84

65:                                               ; preds = %57
  %66 = bitcast %"struct.std::__1::pair.1550"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %66) #12
  %67 = getelementptr inbounds %"struct.std::__1::pair.1550", %"struct.std::__1::pair.1550"* %6, i64 0, i32 0
  %68 = getelementptr inbounds %"struct.std::__1::pair.1550", %"struct.std::__1::pair.1550"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %69 = getelementptr inbounds %"struct.std::__1::pair.1550", %"struct.std::__1::pair.1550"* %6, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 11
  %71 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %28, i64 0, i32 16
  %72 = bitcast [3 x i8]* %71 to i24*
  %73 = bitcast i32* %68 to i64*
  store i64 -6148914691236517206, i64* %73, align 4
  %74 = load i24, i24* %72, align 4
  %75 = lshr i24 %74, 17
  %76 = trunc i24 %75 to i8
  %77 = and i8 %76, 1
  %78 = bitcast %"class.gfx::MaskFilterInfo"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %78, i64 52, i1 false) #12
  store i8 %77, i8* %69, align 4, !alias.scope !27
  %79 = call zeroext i1 @_ZN3gfx14MaskFilterInfo9TransformERKNS_9TransformE(%"class.gfx::MaskFilterInfo"* nonnull %67, %"class.gfx::Transform"* nonnull dereferenceable(68) %5) #12
  %80 = bitcast %"struct.std::__1::pair.1550"* %0 to i8*
  br i1 %79, label %82, label %81

81:                                               ; preds = %65
  call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 56, i1 false)
  br label %83

82:                                               ; preds = %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %66, i64 56, i1 false)
  br label %83

83:                                               ; preds = %82, %81
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %66) #12
  br label %84

84:                                               ; preds = %83, %63
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %58) #12
  br label %85

85:                                               ; preds = %55, %84, %25
  ret void
}

declare %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

declare i32 @_ZNK2cc17RenderSurfaceImpl13ClipTreeIndexEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx9TransformC1Effffff(%"class.gfx::Transform"*, float, float, float, float, float, float) unnamed_addr #2

declare dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree8ToScreenEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx14MaskFilterInfo9TransformERKNS_9TransformE(%"class.gfx::MaskFilterInfo"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #2

declare %"class.cc::RenderSurfaceImpl"* @_ZNK2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

declare float @_ZNK2cc10EffectTree16EffectiveOpacityEPKNS_10EffectNodeE(%"class.cc::EffectTree"*, %"struct.cc::EffectNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_122ComputeAccumulatedClipEPNS_13PropertyTreesEbii(%"struct.cc::ConditionalClip"* noalias nocapture sret, %"class.cc::PropertyTrees"*, i1 zeroext, i32, i32) unnamed_addr #0 {
  %6 = alloca %"struct.cc::ClipNode"*, align 8
  %7 = alloca [19 x i8], align 1
  %8 = alloca [19 x i8], align 1
  %9 = alloca %"class.std::__1::stack", align 8
  %10 = alloca %"class.gfx::RectF", align 4
  %11 = alloca %"struct.cc::ConditionalClip", align 4
  %12 = alloca [19 x i8], align 1
  %13 = tail call %"struct.cc::ClipRectData"* @_ZN2cc13PropertyTrees22FetchClipRectFromCacheEii(%"class.cc::PropertyTrees"* %1, i32 %3, i32 %4) #12
  %14 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %20, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 20, i1 false)
  br label %248

20:                                               ; preds = %5
  store i32 %4, i32* %14, align 4
  %21 = bitcast %"struct.cc::ClipNode"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  store %"struct.cc::ClipNode"* inttoptr (i64 -6148914691236517206 to %"struct.cc::ClipNode"*), %"struct.cc::ClipNode"** %6, align 8
  %22 = icmp sgt i32 %3, -1
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = sext i32 %3 to i64
  %25 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %26 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %25, align 8
  %27 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %26, i64 %24
  br label %28

28:                                               ; preds = %20, %23
  %29 = phi %"struct.cc::ClipNode"* [ %27, %23 ], [ null, %20 ]
  store %"struct.cc::ClipNode"* %29, %"struct.cc::ClipNode"** %6, align 8
  %30 = icmp sgt i32 %4, -1
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = sext i32 %4 to i64
  %33 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %34 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %33, align 8
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %34, i64 %32
  br label %36

36:                                               ; preds = %28, %31
  %37 = phi %"struct.cc::EffectNode"* [ %35, %31 ], [ null, %28 ]
  %38 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %37, i64 0, i32 18
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds [19 x i8], [19 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %40)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 1, i64 0), i64 3, i1 false)
  %41 = getelementptr inbounds [19 x i8], [19 x i8]* %7, i64 0, i64 3
  %42 = getelementptr inbounds [19 x i8], [19 x i8]* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %42)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 1, i64 0), i64 3, i1 false)
  %43 = getelementptr inbounds [19 x i8], [19 x i8]* %8, i64 0, i64 3
  %44 = bitcast %"class.std::__1::stack"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %45 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %9, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %9, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #12
  %47 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %29, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  br label %51

51:                                               ; preds = %78, %36
  %52 = phi %"struct.cc::EffectNode"* [ %37, %36 ], [ %79, %78 ]
  %53 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %52, i64 0, i32 19
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, %48
  br i1 %55, label %74, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %52, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = load %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %60, i64 %59, i32 0, i32 0, i32 0
  %62 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %62, i64 0, i32 7
  %64 = load i8, i8* %63, align 4
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %52, i64 0, i32 19
  %69 = icmp slt i32 %54, %48
  %70 = bitcast %"struct.cc::ClipNode"*** %46 to i64*
  %71 = bitcast %"class.std::__1::stack"* %9 to i64*
  br i1 %69, label %72, label %140

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %1, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  br label %84

74:                                               ; preds = %56, %51
  %75 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %52, i64 0, i32 20
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %80, label %78

78:                                               ; preds = %74, %80
  %79 = phi %"struct.cc::EffectNode"* [ %83, %80 ], [ null, %74 ]
  br label %51

80:                                               ; preds = %74
  %81 = sext i32 %76 to i64
  %82 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %50, align 8
  %83 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %82, i64 %81
  br label %78

84:                                               ; preds = %72, %130
  %85 = phi i1 [ true, %72 ], [ %138, %130 ]
  %86 = phi %"struct.cc::ClipNode"* [ %29, %72 ], [ %131, %130 ]
  %87 = phi i8 [ 0, %72 ], [ %121, %130 ]
  %88 = phi i8 [ 0, %72 ], [ %120, %130 ]
  br i1 %85, label %119, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %86, i64 0, i32 5, i32 0, i32 2
  %91 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %86, i64 0, i32 5, i32 0, i32 2, i32 0, i32 1
  %92 = bitcast %"struct.cc::ClipRectData"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.928"* %90 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %93, %95
  %97 = inttoptr i64 %95 to %"struct.cc::ClipRectData"*
  br i1 %96, label %119, label %98

98:                                               ; preds = %89
  %99 = sub i64 %93, %95
  %100 = sdiv exact i64 %99, 24
  br label %101

101:                                              ; preds = %98, %114
  %102 = phi i64 [ 0, %98 ], [ %117, %114 ]
  %103 = phi i8 [ %87, %98 ], [ %116, %114 ]
  %104 = phi i8 [ %88, %98 ], [ %115, %114 ]
  %105 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %97, i64 %102
  %106 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %4
  br i1 %108, label %109, label %114

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %97, i64 %102, i32 1, i32 0
  %111 = load i8, i8* %110, align 4
  %112 = bitcast %"struct.cc::ClipRectData"* %105 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 %113, i64 19, i1 false)
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i8 [ %111, %109 ], [ %104, %101 ]
  %116 = phi i8 [ 1, %109 ], [ %103, %101 ]
  %117 = add nuw i64 %102, 1
  %118 = icmp ult i64 %117, %100
  br i1 %118, label %101, label %119

119:                                              ; preds = %114, %89, %84
  %120 = phi i8 [ %88, %84 ], [ %88, %89 ], [ %115, %114 ]
  %121 = phi i8 [ %87, %84 ], [ %87, %89 ], [ %116, %114 ]
  call void @_ZNSt3__15stackIPKN2cc8ClipNodeENS_6vectorIS4_NS_9allocatorIS4_EEEEE4pushERKS4_(%"class.std::__1::stack"* nonnull %9, %"struct.cc::ClipNode"** nonnull dereferenceable(8) %6)
  %122 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %6, align 8
  %123 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %122, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, -1
  br i1 %125, label %126, label %130

126:                                              ; preds = %119
  %127 = sext i32 %124 to i64
  %128 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %73, align 8
  %129 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %128, i64 %127
  br label %130

130:                                              ; preds = %119, %126
  %131 = phi %"struct.cc::ClipNode"* [ %129, %126 ], [ null, %119 ]
  store %"struct.cc::ClipNode"* %131, %"struct.cc::ClipNode"** %6, align 8
  %132 = load i32, i32* %68, align 4
  %133 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %131, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp slt i32 %132, %134
  %136 = load i64, i64* %70, align 8
  %137 = load i64, i64* %71, align 8
  %138 = icmp eq i64 %136, %137
  br i1 %135, label %84, label %139

139:                                              ; preds = %130
  br i1 %138, label %140, label %146

140:                                              ; preds = %67, %139
  %141 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %141, align 4
  %142 = bitcast %"struct.cc::ClipRectData"* %13 to i8*
  %143 = getelementptr inbounds i8, i8* %142, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %143, i8* nonnull align 1 %42, i64 19, i1 false)
  %144 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 0, i8* %144, align 4
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* nonnull align 1 %42, i64 19, i1 false)
  br label %241

146:                                              ; preds = %139
  %147 = inttoptr i64 %136 to %"struct.cc::ClipNode"**
  %148 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %147, i64 -1
  %149 = bitcast %"struct.cc::ClipNode"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.cc::ClipNode"** %6 to i64*
  store i64 %150, i64* %151, align 8
  store %"struct.cc::ClipNode"** %148, %"struct.cc::ClipNode"*** %46, align 8
  %152 = bitcast %"class.gfx::RectF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #12
  %153 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 0
  %154 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %152, i8 0, i64 16, i1 false) #12
  %155 = and i8 %121, 1
  %156 = icmp eq i8 %155, 0
  %157 = icmp eq i8 %120, 0
  %158 = or i1 %157, %156
  %159 = inttoptr i64 %150 to %"struct.cc::ClipNode"*
  br i1 %158, label %160, label %164

160:                                              ; preds = %146
  %161 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %159, i64 0, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %192, label %172

164:                                              ; preds = %146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %152, i8* align 1 %41, i64 16, i1 false)
  %165 = call fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_130ApplyClipNodeToAccumulatedClipEPKNS_13PropertyTreesEbiiPKNS_8ClipNodeEPN3gfx5RectFE(%"class.cc::PropertyTrees"* %1, i1 zeroext %2, i32 %4, i32 %39, %"struct.cc::ClipNode"* %159, %"class.gfx::RectF"* nonnull %10)
  br i1 %165, label %206, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %167, align 4
  %168 = bitcast %"struct.cc::ClipRectData"* %13 to i8*
  %169 = getelementptr inbounds i8, i8* %168, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* nonnull align 1 %42, i64 19, i1 false)
  %170 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 0, i8* %170, align 4
  %171 = getelementptr inbounds i8, i8* %170, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %171, i8* nonnull align 1 %42, i64 19, i1 false)
  br label %240

172:                                              ; preds = %160, %176
  %173 = phi %"struct.cc::ClipNode"** [ %177, %176 ], [ %148, %160 ]
  %174 = ptrtoint %"struct.cc::ClipNode"** %173 to i64
  %175 = icmp eq i64 %137, %174
  br i1 %175, label %184, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %173, i64 -1
  %178 = bitcast %"struct.cc::ClipNode"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  store i64 %179, i64* %151, align 8
  store %"struct.cc::ClipNode"** %177, %"struct.cc::ClipNode"*** %46, align 8
  %180 = inttoptr i64 %179 to %"struct.cc::ClipNode"*
  %181 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %180, i64 0, i32 2
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %190, label %172

184:                                              ; preds = %172
  %185 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %185, align 4
  %186 = bitcast %"struct.cc::ClipRectData"* %13 to i8*
  %187 = getelementptr inbounds i8, i8* %186, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* nonnull align 1 %42, i64 19, i1 false)
  %188 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 0, i8* %188, align 4
  %189 = getelementptr inbounds i8, i8* %188, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %189, i8* nonnull align 1 %42, i64 19, i1 false)
  br label %240

190:                                              ; preds = %176
  %191 = inttoptr i64 %179 to %"struct.cc::ClipNode"*
  br label %192

192:                                              ; preds = %190, %160
  %193 = phi %"struct.cc::ClipNode"* [ %159, %160 ], [ %191, %190 ]
  %194 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %194) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %194, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 0), i64 20, i1 false)
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_118ComputeCurrentClipEPKNS_8ClipNodeEPKNS_13PropertyTreesEii(%"struct.cc::ConditionalClip"* nonnull sret %11, %"struct.cc::ClipNode"* %193, %"class.cc::PropertyTrees"* %1, i32 %39, i32 %4)
  %195 = load i8, i8* %194, align 4, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %203

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %198, align 4
  %199 = bitcast %"struct.cc::ClipRectData"* %13 to i8*
  %200 = getelementptr inbounds i8, i8* %199, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %200, i8* nonnull align 1 %42, i64 19, i1 false)
  %201 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 0, i8* %201, align 4
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %202, i8* nonnull align 1 %42, i64 19, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %194) #12
  br label %240

203:                                              ; preds = %192
  %204 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %11, i64 0, i32 1
  %205 = bitcast %"class.gfx::RectF"* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %152, i8* align 4 %205, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %194) #12
  br label %206

206:                                              ; preds = %203, %164
  br label %207

207:                                              ; preds = %206, %211
  %208 = load i64, i64* %70, align 8
  %209 = load i64, i64* %71, align 8
  %210 = icmp eq i64 %208, %209
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = inttoptr i64 %208 to %"struct.cc::ClipNode"**
  %213 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %212, i64 -1
  %214 = bitcast %"struct.cc::ClipNode"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %151, align 8
  store %"struct.cc::ClipNode"** %213, %"struct.cc::ClipNode"*** %46, align 8
  %216 = inttoptr i64 %215 to %"struct.cc::ClipNode"*
  %217 = call fastcc zeroext i1 @_ZN2cc19draw_property_utils12_GLOBAL__N_130ApplyClipNodeToAccumulatedClipEPKNS_13PropertyTreesEbiiPKNS_8ClipNodeEPN3gfx5RectFE(%"class.cc::PropertyTrees"* %1, i1 zeroext %2, i32 %4, i32 %39, %"struct.cc::ClipNode"* %216, %"class.gfx::RectF"* nonnull %10)
  br i1 %217, label %207, label %218

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %219, align 4
  %220 = bitcast %"struct.cc::ClipRectData"* %13 to i8*
  %221 = getelementptr inbounds i8, i8* %220, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %221, i8* nonnull align 1 %42, i64 19, i1 false)
  %222 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 0, i8* %222, align 4
  %223 = getelementptr inbounds i8, i8* %222, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %223, i8* nonnull align 1 %42, i64 19, i1 false)
  br label %240

224:                                              ; preds = %207
  %225 = getelementptr inbounds [19 x i8], [19 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %225)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %225, i8* align 1 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 1, i64 0), i64 19, i1 false)
  %226 = load float, float* %153, align 4
  %227 = fcmp oeq float %226, 0.000000e+00
  %228 = load float, float* %154, align 4
  %229 = fcmp oeq float %228, 0.000000e+00
  %230 = or i1 %227, %229
  %231 = getelementptr inbounds [19 x i8], [19 x i8]* %12, i64 0, i64 3
  br i1 %230, label %232, label %233

232:                                              ; preds = %224
  call void @llvm.memset.p0i8.i64(i8* align 1 %231, i8 0, i64 16, i1 false)
  br label %234

233:                                              ; preds = %224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %231, i8* nonnull align 4 %152, i64 16, i1 false)
  br label %234

234:                                              ; preds = %233, %232
  %235 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %13, i64 0, i32 1, i32 0
  store i8 1, i8* %235, align 4
  %236 = bitcast %"struct.cc::ClipRectData"* %13 to i8*
  %237 = getelementptr inbounds i8, i8* %236, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* nonnull align 1 %225, i64 19, i1 false)
  %238 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %0, i64 0, i32 0
  store i8 1, i8* %238, align 4
  %239 = getelementptr inbounds i8, i8* %238, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %239, i8* nonnull align 1 %225, i64 19, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %225)
  br label %240

240:                                              ; preds = %218, %197, %166, %234, %184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #12
  br label %241

241:                                              ; preds = %240, %140
  %242 = load %"struct.cc::ClipNode"**, %"struct.cc::ClipNode"*** %45, align 8
  %243 = icmp eq %"struct.cc::ClipNode"** %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %241
  %245 = ptrtoint %"struct.cc::ClipNode"** %242 to i64
  store i64 %245, i64* %70, align 8
  %246 = bitcast %"struct.cc::ClipNode"** %242 to i8*
  call void @_ZdlPv(i8* %246) #14
  br label %247

247:                                              ; preds = %241, %244
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %42)
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %248

248:                                              ; preds = %247, %17
  ret void
}

declare %"struct.cc::ClipRectData"* @_ZN2cc13PropertyTrees22FetchClipRectFromCacheEii(%"class.cc::PropertyTrees"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15stackIPKN2cc8ClipNodeENS_6vectorIS4_NS_9allocatorIS4_EEEEE4pushERKS4_(%"class.std::__1::stack"*, %"struct.cc::ClipNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"struct.cc::ClipNode"**, %"struct.cc::ClipNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"struct.cc::ClipNode"**, %"struct.cc::ClipNode"*** %5, align 8
  %7 = icmp eq %"struct.cc::ClipNode"** %4, %6
  %8 = ptrtoint %"struct.cc::ClipNode"** %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2
  %10 = bitcast %"struct.cc::ClipNode"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.cc::ClipNode"** %4 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %4, i64 1
  %14 = ptrtoint %"struct.cc::ClipNode"** %13 to i64
  %15 = bitcast %"struct.cc::ClipNode"*** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %75

16:                                               ; preds = %2
  %17 = ptrtoint %"struct.cc::ClipNode"** %4 to i64
  %18 = bitcast %"struct.cc::ClipNode"*** %3 to i64*
  %19 = bitcast %"class.std::__1::stack"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::stack"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #13
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"struct.cc::ClipNode"*** %5 to i64*
  %29 = sub i64 %8, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to %"struct.cc::ClipNode"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"struct.cc::ClipNode"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %47, i64 %22
  %49 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %47, i64 %46
  %50 = ptrtoint %"struct.cc::ClipNode"** %49 to i64
  %51 = bitcast %"struct.cc::ClipNode"** %1 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"struct.cc::ClipNode"** %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %48, i64 1
  %55 = ptrtoint %"struct.cc::ClipNode"** %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"struct.cc::ClipNode"**, %"struct.cc::ClipNode"*** %56, align 8
  %58 = load i64, i64* %18, align 8
  %59 = ptrtoint %"struct.cc::ClipNode"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %48, i64 %62
  %64 = ptrtoint %"struct.cc::ClipNode"** %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %45
  %67 = bitcast %"struct.cc::ClipNode"** %63 to i8*
  %68 = bitcast %"struct.cc::ClipNode"** %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #12
  %69 = load %"struct.cc::ClipNode"**, %"struct.cc::ClipNode"*** %56, align 8
  br label %70

70:                                               ; preds = %66, %45
  %71 = phi %"struct.cc::ClipNode"** [ %57, %45 ], [ %69, %66 ]
  store i64 %64, i64* %19, align 8
  store i64 %55, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %72 = icmp eq %"struct.cc::ClipNode"** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"struct.cc::ClipNode"** %71 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %9, %70, %73
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare float @_ZN3viz16MaxDeJellyHeightEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc9LayerImpl21IsAffectedByPageScaleEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"*, float, float) local_unnamed_addr #2

declare void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_129AddSurfaceToRenderSurfaceListEPNS_17RenderSurfaceImplEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPNS_13PropertyTreesE(%"class.cc::RenderSurfaceImpl"*, %"class.std::__1::vector.1145"*, %"class.cc::PropertyTrees"*) unnamed_addr #0 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"struct.cc::ConditionalClip", align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = alloca %"struct.std::__1::pair.1550", align 4
  %10 = alloca %"class.gfx::Transform", align 4
  %11 = ptrtoint %"class.cc::RenderSurfaceImpl"* %0 to i64
  %12 = tail call %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %13 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %90, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %12, i64 0, i32 7
  %17 = load i8, i8* %16, align 4
  %18 = and i8 %17, 16
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_129AddSurfaceToRenderSurfaceListEPNS_17RenderSurfaceImplEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPNS_13PropertyTreesE(%"class.cc::RenderSurfaceImpl"* %12, %"class.std::__1::vector.1145"* %1, %"class.cc::PropertyTrees"* %2)
  br label %21

21:                                               ; preds = %15, %20
  tail call void @_ZN2cc17RenderSurfaceImpl27ClearAccumulatedContentRectEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %22 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 1
  %23 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %24, align 8
  %26 = icmp eq %"class.cc::RenderSurfaceImpl"** %23, %25
  %27 = ptrtoint %"class.cc::RenderSurfaceImpl"** %25 to i64
  br i1 %26, label %33, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.cc::RenderSurfaceImpl"** %23 to i64*
  store i64 %11, i64* %29, align 8
  %30 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %23, i64 1
  %31 = ptrtoint %"class.cc::RenderSurfaceImpl"** %30 to i64
  %32 = bitcast %"class.cc::RenderSurfaceImpl"*** %22 to i64*
  store i64 %31, i64* %32, align 8
  br label %163

33:                                               ; preds = %21
  %34 = ptrtoint %"class.cc::RenderSurfaceImpl"** %23 to i64
  %35 = bitcast %"class.cc::RenderSurfaceImpl"*** %22 to i64*
  %36 = bitcast %"class.std::__1::vector.1145"* %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = ashr exact i64 %38, 3
  %40 = add nsw i64 %39, 1
  %41 = icmp ugt i64 %40, 2305843009213693951
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::vector.1145"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #13
  unreachable

44:                                               ; preds = %33
  %45 = bitcast %"class.cc::RenderSurfaceImpl"*** %24 to i64*
  %46 = sub i64 %27, %37
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, 1152921504606846975
  br i1 %48, label %49, label %57

49:                                               ; preds = %44
  %50 = ashr exact i64 %46, 2
  %51 = icmp ult i64 %50, %40
  %52 = select i1 %51, i64 %40, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @abort() #13
  unreachable

57:                                               ; preds = %54, %44
  %58 = phi i64 [ %52, %54 ], [ 2305843009213693951, %44 ]
  %59 = shl i64 %58, 3
  %60 = tail call i8* @_Znwm(i64 %59) #14
  %61 = bitcast i8* %60 to %"class.cc::RenderSurfaceImpl"**
  br label %62

62:                                               ; preds = %57, %49
  %63 = phi i64 [ %58, %57 ], [ 0, %49 ]
  %64 = phi %"class.cc::RenderSurfaceImpl"** [ %61, %57 ], [ null, %49 ]
  %65 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %64, i64 %39
  %66 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %64, i64 %63
  %67 = ptrtoint %"class.cc::RenderSurfaceImpl"** %66 to i64
  %68 = bitcast %"class.cc::RenderSurfaceImpl"** %65 to i64*
  store i64 %11, i64* %68, align 8
  %69 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %65, i64 1
  %70 = ptrtoint %"class.cc::RenderSurfaceImpl"** %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 0
  %72 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %71, align 8
  %73 = load i64, i64* %35, align 8
  %74 = ptrtoint %"class.cc::RenderSurfaceImpl"** %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 3
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %65, i64 %77
  %79 = ptrtoint %"class.cc::RenderSurfaceImpl"** %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %62
  %82 = bitcast %"class.cc::RenderSurfaceImpl"** %78 to i8*
  %83 = bitcast %"class.cc::RenderSurfaceImpl"** %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 %75, i1 false) #12
  %84 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %71, align 8
  br label %85

85:                                               ; preds = %81, %62
  %86 = phi %"class.cc::RenderSurfaceImpl"** [ %72, %62 ], [ %84, %81 ]
  store i64 %79, i64* %36, align 8
  store i64 %70, i64* %35, align 8
  store i64 %67, i64* %45, align 8
  %87 = icmp eq %"class.cc::RenderSurfaceImpl"** %86, null
  br i1 %87, label %163, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.cc::RenderSurfaceImpl"** %86 to i8*
  tail call void @_ZdlPv(i8* %89) #14
  br label %163

90:                                               ; preds = %3
  tail call void @_ZN2cc17RenderSurfaceImpl27ClearAccumulatedContentRectEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %91 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 1
  %92 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %93, align 8
  %95 = icmp eq %"class.cc::RenderSurfaceImpl"** %92, %94
  %96 = ptrtoint %"class.cc::RenderSurfaceImpl"** %94 to i64
  br i1 %95, label %102, label %97

97:                                               ; preds = %90
  %98 = bitcast %"class.cc::RenderSurfaceImpl"** %92 to i64*
  store i64 %11, i64* %98, align 8
  %99 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %92, i64 1
  %100 = ptrtoint %"class.cc::RenderSurfaceImpl"** %99 to i64
  %101 = bitcast %"class.cc::RenderSurfaceImpl"*** %91 to i64*
  store i64 %100, i64* %101, align 8
  br label %159

102:                                              ; preds = %90
  %103 = ptrtoint %"class.cc::RenderSurfaceImpl"** %92 to i64
  %104 = bitcast %"class.cc::RenderSurfaceImpl"*** %91 to i64*
  %105 = bitcast %"class.std::__1::vector.1145"* %1 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = ashr exact i64 %107, 3
  %109 = add nsw i64 %108, 1
  %110 = icmp ugt i64 %109, 2305843009213693951
  br i1 %110, label %111, label %113

111:                                              ; preds = %102
  %112 = bitcast %"class.std::__1::vector.1145"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #13
  unreachable

113:                                              ; preds = %102
  %114 = bitcast %"class.cc::RenderSurfaceImpl"*** %93 to i64*
  %115 = sub i64 %96, %106
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %113
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %109
  %121 = select i1 %120, i64 %109, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  tail call void @abort() #13
  unreachable

126:                                              ; preds = %123, %113
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %113 ]
  %128 = shl i64 %127, 3
  %129 = tail call i8* @_Znwm(i64 %128) #14
  %130 = bitcast i8* %129 to %"class.cc::RenderSurfaceImpl"**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi %"class.cc::RenderSurfaceImpl"** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %133, i64 %108
  %135 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %133, i64 %132
  %136 = ptrtoint %"class.cc::RenderSurfaceImpl"** %135 to i64
  %137 = bitcast %"class.cc::RenderSurfaceImpl"** %134 to i64*
  store i64 %11, i64* %137, align 8
  %138 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %134, i64 1
  %139 = ptrtoint %"class.cc::RenderSurfaceImpl"** %138 to i64
  %140 = getelementptr inbounds %"class.std::__1::vector.1145", %"class.std::__1::vector.1145"* %1, i64 0, i32 0, i32 0
  %141 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %140, align 8
  %142 = load i64, i64* %104, align 8
  %143 = ptrtoint %"class.cc::RenderSurfaceImpl"** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %134, i64 %146
  %148 = ptrtoint %"class.cc::RenderSurfaceImpl"** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %131
  %151 = bitcast %"class.cc::RenderSurfaceImpl"** %147 to i8*
  %152 = bitcast %"class.cc::RenderSurfaceImpl"** %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #12
  %153 = load %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"*** %140, align 8
  br label %154

154:                                              ; preds = %150, %131
  %155 = phi %"class.cc::RenderSurfaceImpl"** [ %141, %131 ], [ %153, %150 ]
  store i64 %148, i64* %105, align 8
  store i64 %139, i64* %104, align 8
  store i64 %136, i64* %114, align 8
  %156 = icmp eq %"class.cc::RenderSurfaceImpl"** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.cc::RenderSurfaceImpl"** %155 to i8*
  tail call void @_ZdlPv(i8* %158) #14
  br label %159

159:                                              ; preds = %157, %154, %97
  %160 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 7
  %161 = load i8, i8* %160, align 4
  %162 = and i8 %161, -25
  br label %174

163:                                              ; preds = %88, %85, %28
  %164 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 7
  %165 = load i8, i8* %164, align 4
  %166 = or i8 %165, 16
  store i8 %166, i8* %164, align 4
  %167 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 4
  %168 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %169 = tail call zeroext i1 @_ZN2cc10EffectTree25ContributesToDrawnSurfaceEi(%"class.cc::EffectTree"* %167, i32 %168) #12
  %170 = zext i1 %169 to i8
  %171 = load i8, i8* %164, align 4
  %172 = shl nuw nsw i8 %170, 3
  %173 = and i8 %171, -9
  br label %174

174:                                              ; preds = %163, %159
  %175 = phi i8 [ %172, %163 ], [ 16, %159 ]
  %176 = phi i8 [ %173, %163 ], [ %162, %159 ]
  %177 = phi i8* [ %164, %163 ], [ %160, %159 ]
  %178 = or i8 %176, %175
  store i8 %178, i8* %177, align 4
  %179 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %205, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 7
  %183 = load i8, i8* %182, align 4
  %184 = and i8 %183, 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %205

186:                                              ; preds = %181
  %187 = tail call i32 @_ZNK2cc17RenderSurfaceImpl13ClipTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %188 = tail call %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %189 = tail call i32 @_ZNK2cc17RenderSurfaceImpl13ClipTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %188) #12
  %190 = icmp eq i32 %187, %189
  br i1 %190, label %205, label %191

191:                                              ; preds = %186
  %192 = tail call i32 @_ZNK2cc17RenderSurfaceImpl13ClipTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %193 = icmp sgt i32 %192, -1
  br i1 %193, label %194, label %199

194:                                              ; preds = %191
  %195 = sext i32 %192 to i64
  %196 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %197 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %196, align 8
  %198 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %197, i64 %195
  br label %199

199:                                              ; preds = %194, %191
  %200 = phi %"struct.cc::ClipNode"* [ %198, %194 ], [ null, %191 ]
  %201 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %200, i64 0, i32 2
  %202 = load i32, i32* %201, align 8
  %203 = icmp ne i32 %202, 1
  %204 = zext i1 %203 to i8
  br label %205

205:                                              ; preds = %199, %186, %181, %174
  %206 = phi i8 [ %204, %199 ], [ 1, %174 ], [ 0, %181 ], [ 0, %186 ]
  %207 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 5
  %208 = load i8, i8* %207, align 4
  %209 = and i8 %208, -2
  %210 = or i8 %209, %206
  store i8 %210, i8* %207, align 4
  %211 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 4
  %212 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %213 = icmp sgt i32 %212, -1
  br i1 %213, label %214, label %219

214:                                              ; preds = %205
  %215 = sext i32 %212 to i64
  %216 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %217 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %216, align 8
  %218 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %217, i64 %215
  br label %219

219:                                              ; preds = %214, %205
  %220 = phi %"struct.cc::EffectNode"* [ %218, %214 ], [ null, %205 ]
  %221 = tail call float @_ZNK2cc10EffectTree16EffectiveOpacityEPKNS_10EffectNodeE(%"class.cc::EffectTree"* %211, %"struct.cc::EffectNode"* %220) #12
  %222 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %220, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp slt i32 %223, 0
  %225 = sext i32 %223 to i64
  %226 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %227 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %226, align 8
  %228 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %227, i64 %225
  %229 = icmp eq %"struct.cc::EffectNode"* %228, null
  %230 = or i1 %224, %229
  br i1 %230, label %248, label %231

231:                                              ; preds = %219, %237
  %232 = phi float [ %239, %237 ], [ %221, %219 ]
  %233 = phi %"struct.cc::EffectNode"* [ %245, %237 ], [ %228, %219 ]
  %234 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %233, i64 0, i32 17
  %235 = load i8, i8* %234, align 1
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %248

237:                                              ; preds = %231
  %238 = tail call float @_ZNK2cc10EffectTree16EffectiveOpacityEPKNS_10EffectNodeE(%"class.cc::EffectTree"* %211, %"struct.cc::EffectNode"* nonnull %233) #12
  %239 = fmul float %232, %238
  %240 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %233, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = icmp slt i32 %241, 0
  %243 = sext i32 %241 to i64
  %244 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %226, align 8
  %245 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %244, i64 %243
  %246 = icmp eq %"struct.cc::EffectNode"* %245, null
  %247 = or i1 %242, %246
  br i1 %247, label %248, label %231

248:                                              ; preds = %237, %231, %219
  %249 = phi float [ %221, %219 ], [ %232, %231 ], [ %239, %237 ]
  %250 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 0
  store float %249, float* %250, align 4
  %251 = tail call i32 @_ZNK2cc17RenderSurfaceImpl18TransformTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %252 = icmp sgt i32 %251, -1
  br i1 %252, label %253, label %258

253:                                              ; preds = %248
  %254 = sext i32 %251 to i64
  %255 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %256 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %255, align 8
  %257 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %256, i64 %254
  br label %258

258:                                              ; preds = %253, %248
  %259 = phi %"struct.cc::TransformNode"* [ %257, %253 ], [ null, %248 ]
  %260 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %261 = icmp sgt i32 %260, -1
  br i1 %261, label %262, label %266

262:                                              ; preds = %258
  %263 = sext i32 %260 to i64
  %264 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %226, align 8
  %265 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %264, i64 %263
  br label %266

266:                                              ; preds = %262, %258
  %267 = phi %"struct.cc::EffectNode"* [ %265, %262 ], [ null, %258 ]
  %268 = tail call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %269 = icmp eq i32 %268, 1
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 1
  %272 = bitcast %"class.gfx::Transform"* %271 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %272, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %273 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  store i8 0, i8* %273, align 4
  br label %304

274:                                              ; preds = %266
  %275 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %275) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %275, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE.ssxform to i8*), i64 68, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %275, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %276 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %8, i64 0, i32 0, i32 1
  store i8 0, i8* %276, align 4
  %277 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %267, i64 0, i32 20
  %278 = load i32, i32* %277, align 8
  %279 = icmp sgt i32 %278, -1
  br i1 %279, label %280, label %284

280:                                              ; preds = %274
  %281 = sext i32 %278 to i64
  %282 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %226, align 8
  %283 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %282, i64 %281
  br label %284

284:                                              ; preds = %280, %274
  %285 = phi %"struct.cc::EffectNode"* [ %283, %280 ], [ null, %274 ]
  %286 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %259, i64 0, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %285, i64 0, i32 0
  %289 = load i32, i32* %288, align 8
  %290 = call zeroext i1 @_ZNK2cc13PropertyTrees11GetToTargetEiiPN3gfx9TransformE(%"class.cc::PropertyTrees"* %2, i32 %287, i32 %289, %"class.gfx::Transform"* nonnull %8) #12
  %291 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %267, i64 0, i32 13, i32 0
  %292 = load float, float* %291, align 4
  %293 = fcmp une float %292, 0.000000e+00
  br i1 %293, label %294, label %301

294:                                              ; preds = %284
  %295 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %267, i64 0, i32 13, i32 1
  %296 = load float, float* %295, align 4
  %297 = fcmp une float %296, 0.000000e+00
  br i1 %297, label %298, label %301

298:                                              ; preds = %294
  %299 = fdiv float 1.000000e+00, %292
  %300 = fdiv float 1.000000e+00, %296
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %8, float %299, float %300) #12
  br label %301

301:                                              ; preds = %298, %294, %284
  %302 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 1
  %303 = bitcast %"class.gfx::Transform"* %302 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %303, i8* nonnull align 4 %275, i64 68, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %275) #12
  br label %304

304:                                              ; preds = %301, %270
  %305 = bitcast %"struct.std::__1::pair.1550"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %305) #12
  %306 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_121GetMaskFilterInfoPairEPKNS_13PropertyTreesEib(%"struct.std::__1::pair.1550"* nonnull sret %9, %"class.cc::PropertyTrees"* %2, i32 %306, i1 zeroext true) #12
  %307 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 6
  %308 = bitcast %"class.gfx::MaskFilterInfo"* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %308, i8* nonnull align 4 %305, i64 52, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %305) #12
  %309 = bitcast %"class.gfx::Transform"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %309) #12
  %310 = call i32 @_ZNK2cc17RenderSurfaceImpl18TransformTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %311 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  call void @_ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii(%"class.gfx::Transform"* nonnull sret %10, %"class.cc::PropertyTrees"* %2, i32 %310, i32 %311) #12
  %312 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 2
  %313 = bitcast %"class.gfx::Transform"* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %313, i8* nonnull align 4 %309, i64 68, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %309) #12
  %314 = call i32 @_ZNK2cc17RenderSurfaceImpl13ClipTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %315 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %316 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %317 = load i8, i8* %207, align 4
  %318 = and i8 %317, 1
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %322

320:                                              ; preds = %304
  %321 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %321) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %321, i8 0, i64 16, i1 false) #12
  call void @_ZN2cc17RenderSurfaceImpl11SetClipRectERKN3gfx4RectE(%"class.cc::RenderSurfaceImpl"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %321) #12
  br label %373

322:                                              ; preds = %304
  %323 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %324 = icmp sgt i32 %323, -1
  br i1 %324, label %325, label %329

325:                                              ; preds = %322
  %326 = sext i32 %323 to i64
  %327 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %226, align 8
  %328 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %327, i64 %326
  br label %329

329:                                              ; preds = %325, %322
  %330 = phi %"struct.cc::EffectNode"* [ %328, %325 ], [ null, %322 ]
  %331 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %330, i64 0, i32 20
  %332 = load i32, i32* %331, align 8
  %333 = icmp sgt i32 %332, -1
  br i1 %333, label %334, label %338

334:                                              ; preds = %329
  %335 = sext i32 %332 to i64
  %336 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %226, align 8
  %337 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %336, i64 %335
  br label %338

338:                                              ; preds = %334, %329
  %339 = phi %"struct.cc::EffectNode"* [ %337, %334 ], [ null, %329 ]
  %340 = call i32 @_ZNK2cc17RenderSurfaceImpl15EffectTreeIndexEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %341 = icmp eq i32 %340, 1
  br i1 %341, label %342, label %360

342:                                              ; preds = %338
  %343 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %343) #12
  %344 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %330, i64 0, i32 19
  %345 = load i32, i32* %344, align 4
  %346 = icmp sgt i32 %345, -1
  br i1 %346, label %347, label %352

347:                                              ; preds = %342
  %348 = sext i32 %345 to i64
  %349 = getelementptr inbounds %"class.cc::PropertyTrees", %"class.cc::PropertyTrees"* %2, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %350 = load %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"** %349, align 8
  %351 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %350, i64 %348
  br label %352

352:                                              ; preds = %347, %342
  %353 = phi %"struct.cc::ClipNode"* [ %351, %347 ], [ null, %342 ]
  %354 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %353, i64 0, i32 3
  %355 = call { i64, i64 } @_ZN3gfx28ToEnclosingRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16) %354, float 0x3EE4F8B580000000) #12
  %356 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %357 = extractvalue { i64, i64 } %355, 0
  store i64 %357, i64* %356, align 8
  %358 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %359 = extractvalue { i64, i64 } %355, 1
  store i64 %359, i64* %358, align 8
  call void @_ZN2cc17RenderSurfaceImpl11SetClipRectERKN3gfx4RectE(%"class.cc::RenderSurfaceImpl"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %315) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #12
  br label %373

360:                                              ; preds = %338
  %361 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %361) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %361, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %"class.gfx::RectF" }, { i8, [3 x i8], %"class.gfx::RectF" }* @__const._ZN2cc19draw_property_utils12_GLOBAL__N_118SetSurfaceClipRectEPKNS_8ClipNodeEPNS_13PropertyTreesEPNS_17RenderSurfaceImplE.accumulated_clip_rect, i64 0, i32 0), i64 20, i1 false) #12
  %362 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %330, i64 0, i32 19
  %363 = load i32, i32* %362, align 4
  %364 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %339, i64 0, i32 0
  %365 = load i32, i32* %364, align 8
  call fastcc void @_ZN2cc19draw_property_utils12_GLOBAL__N_122ComputeAccumulatedClipEPNS_13PropertyTreesEbii(%"struct.cc::ConditionalClip"* nonnull sret %6, %"class.cc::PropertyTrees"* %2, i1 zeroext false, i32 %363, i32 %365) #12
  %366 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %366) #12
  %367 = getelementptr inbounds %"struct.cc::ConditionalClip", %"struct.cc::ConditionalClip"* %6, i64 0, i32 1
  %368 = call { i64, i64 } @_ZN3gfx28ToEnclosingRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16) %367, float 0x3EE4F8B580000000) #12
  %369 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %370 = extractvalue { i64, i64 } %368, 0
  store i64 %370, i64* %369, align 8
  %371 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %372 = extractvalue { i64, i64 } %368, 1
  store i64 %372, i64* %371, align 8
  call void @_ZN2cc17RenderSurfaceImpl11SetClipRectERKN3gfx4RectE(%"class.cc::RenderSurfaceImpl"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %316) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %366) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %361) #12
  br label %373

373:                                              ; preds = %320, %352, %360
  %374 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl7FiltersEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %375 = call zeroext i1 @_ZNK2cc17RenderSurfaceImpl20CopyOfOutputRequiredEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  br i1 %375, label %380, label %376

376:                                              ; preds = %373
  %377 = call zeroext i1 @_ZNK2cc16FilterOperations18HasReferenceFilterEv(%"class.cc::FilterOperations"* %374) #12
  br i1 %377, label %380, label %378

378:                                              ; preds = %376
  %379 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %374) #12
  br i1 %379, label %380, label %382

380:                                              ; preds = %373, %376, %378
  %381 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 9
  store %"class.cc::RenderSurfaceImpl"* %0, %"class.cc::RenderSurfaceImpl"** %381, align 8
  br label %392

382:                                              ; preds = %378
  br i1 %14, label %383, label %385

383:                                              ; preds = %382
  %384 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 9
  store %"class.cc::RenderSurfaceImpl"* null, %"class.cc::RenderSurfaceImpl"** %384, align 8
  br label %392

385:                                              ; preds = %382
  %386 = call %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %0) #12
  %387 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %386, i64 0, i32 9
  %388 = bitcast %"class.cc::RenderSurfaceImpl"** %387 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 9
  %391 = bitcast %"class.cc::RenderSurfaceImpl"** %390 to i64*
  store i64 %389, i64* %391, align 8
  br label %392

392:                                              ; preds = %383, %385, %380
  ret void
}

declare void @_ZN2cc17RenderSurfaceImpl42AccumulateContentRectFromContributingLayerEPNS_9LayerImplE(%"class.cc::RenderSurfaceImpl"*, %"class.cc::LayerImpl"*) local_unnamed_addr #2

declare %"class.cc::RenderSurfaceImpl"* @_ZN2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare void @_ZN2cc17RenderSurfaceImpl27ClearAccumulatedContentRectEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2cc10EffectTree25ContributesToDrawnSurfaceEi(%"class.cc::EffectTree"*, i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl7FiltersEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc17RenderSurfaceImpl20CopyOfOutputRequiredEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations18HasReferenceFilterEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare void @_ZNK2cc13PropertyTrees49ToScreenSpaceTransformWithoutSurfaceContentsScaleEii(%"class.gfx::Transform"* sret, %"class.cc::PropertyTrees"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK2cc17RenderSurfaceImpl18TransformTreeIndexEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare void @_ZN2cc17RenderSurfaceImpl11SetClipRectERKN3gfx4RectE(%"class.cc::RenderSurfaceImpl"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2cc17RenderSurfaceImpl24SetContentRectToViewportEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare void @_ZN2cc17RenderSurfaceImpl46CalculateContentRectFromAccumulatedContentRectEi(%"class.cc::RenderSurfaceImpl"*, i32) local_unnamed_addr #2

declare void @_ZN2cc17RenderSurfaceImpl50AccumulateContentRectFromContributingRenderSurfaceEPS0_(%"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #11

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRiEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #12
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #12
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #12
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #12
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %22
}

declare i8* @_ZN2cc27RenderSurfaceReasonToStringENS_19RenderSurfaceReasonE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN2cc5LayerEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.1465"*, %class.scoped_refptr.1348* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1465", %"class.std::__1::vector.1465"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr.1348** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1465"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1465"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1465", %"class.std::__1::vector.1465"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr.1348** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %class.scoped_refptr.1348*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr.1348* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr.1348* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %1, i64 0, i32 0
  %41 = bitcast %class.scoped_refptr.1348* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.scoped_refptr.1348* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %40, align 8
  %44 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %37, i64 1
  %45 = ptrtoint %class.scoped_refptr.1348* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1465", %"class.std::__1::vector.1465"* %0, i64 0, i32 0, i32 0
  %47 = load %class.scoped_refptr.1348*, %class.scoped_refptr.1348** %46, align 8
  %48 = ptrtoint %class.scoped_refptr.1348* %47 to i64
  %49 = load %class.scoped_refptr.1348*, %class.scoped_refptr.1348** %3, align 8
  %50 = icmp eq %class.scoped_refptr.1348* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.scoped_refptr.1348, %class.scoped_refptr.1348* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.cc::Layer"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.scoped_refptr.1348* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.scoped_refptr.1348* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %60, i64 -1
  %64 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %61, i64 -1
  %65 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr.1348* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr.1348* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !30

71:                                               ; preds = %59, %51
  %72 = phi %class.scoped_refptr.1348* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.scoped_refptr.1348* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.scoped_refptr.1348* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.scoped_refptr.1348* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.scoped_refptr.1348* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -1
  %80 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -1
  %81 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %80, i64 0, i32 0
  %82 = bitcast %class.scoped_refptr.1348* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.scoped_refptr.1348* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %81, align 8
  %85 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -2
  %86 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -2
  %87 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %86, i64 0, i32 0
  %88 = bitcast %class.scoped_refptr.1348* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %class.scoped_refptr.1348* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %87, align 8
  %91 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -3
  %92 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -3
  %93 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr.1348* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr.1348* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %93, align 8
  %97 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -4
  %98 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -4
  %99 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %98, i64 0, i32 0
  %100 = bitcast %class.scoped_refptr.1348* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %class.scoped_refptr.1348* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %99, align 8
  %103 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -5
  %104 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -5
  %105 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %104, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.1348* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.1348* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %105, align 8
  %109 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -6
  %110 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -6
  %111 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %110, i64 0, i32 0
  %112 = bitcast %class.scoped_refptr.1348* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %class.scoped_refptr.1348* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %111, align 8
  %115 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -7
  %116 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -7
  %117 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %116, i64 0, i32 0
  %118 = bitcast %class.scoped_refptr.1348* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %class.scoped_refptr.1348* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %117, align 8
  %121 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %77, i64 -8
  %122 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %78, i64 -8
  %123 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %122, i64 0, i32 0
  %124 = bitcast %class.scoped_refptr.1348* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %class.scoped_refptr.1348* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %123, align 8
  %127 = icmp eq %class.scoped_refptr.1348* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.scoped_refptr.1348* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.scoped_refptr.1348*, %class.scoped_refptr.1348** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.scoped_refptr.1348* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.scoped_refptr.1348* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.scoped_refptr.1348* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.scoped_refptr.1348*
  %138 = icmp eq %class.scoped_refptr.1348* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %class.scoped_refptr.1348* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %140, i64 -1
  %142 = getelementptr inbounds %class.scoped_refptr.1348, %class.scoped_refptr.1348* %141, i64 0, i32 0
  %143 = load %"class.cc::Layer"*, %"class.cc::Layer"** %142, align 8
  %144 = icmp eq %"class.cc::Layer"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %143, i64 0, i32 1
  %147 = getelementptr inbounds %"class.base::RefCounted.1302", %"class.base::RefCounted.1302"* %146, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %147) #12
  %148 = getelementptr inbounds %"class.base::RefCounted.1302", %"class.base::RefCounted.1302"* %146, i64 0, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %158

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.base::RefCounted.1302", %"class.base::RefCounted.1302"* %146, i64 -2
  %153 = bitcast %"class.base::RefCounted.1302"* %152 to %"class.cc::Layer"*
  %154 = bitcast %"class.base::RefCounted.1302"* %152 to void (%"class.cc::Layer"*)***
  %155 = load void (%"class.cc::Layer"*)**, void (%"class.cc::Layer"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %155, i64 15
  %157 = load void (%"class.cc::Layer"*)*, void (%"class.cc::Layer"*)** %156, align 8
  tail call void %157(%"class.cc::Layer"* nonnull %153) #12
  br label %158

158:                                              ; preds = %151, %145, %139
  %159 = icmp eq %class.scoped_refptr.1348* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #14
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_5LayerEEEN3gfx9TransformEPT_RKNS_13TransformTreeE: argument 0"}
!5 = distinct !{!5, !"_ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_5LayerEEEN3gfx9TransformEPT_RKNS_13TransformTreeE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE: argument 0"}
!8 = distinct !{!8, !"_ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalIKNS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalINS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE: argument 0"}
!12 = distinct !{!12, !"_ZN2cc19draw_property_utils12_GLOBAL__N_128ScreenSpaceTransformInternalINS_9LayerImplEEEN3gfx9TransformEPT_RKNS_13TransformTreeE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN2cc19draw_property_utils13DrawTransformEPKNS_9LayerImplERKNS_13TransformTreeERKNS_10EffectTreeE: argument 0"}
!15 = distinct !{!15, !"_ZN2cc19draw_property_utils13DrawTransformEPKNS_9LayerImplERKNS_13TransformTreeERKNS_10EffectTreeE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN2cc19draw_property_utils12_GLOBAL__N_113LayerClipRectEPNS_13PropertyTreesEPNS_9LayerImplE: argument 0"}
!18 = distinct !{!18, !"_ZN2cc19draw_property_utils12_GLOBAL__N_113LayerClipRectEPNS_13PropertyTreesEPNS_9LayerImplE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN2cc19draw_property_utils12_GLOBAL__N_129ComputeTargetRectInLocalSpaceEN3gfx5RectFEPKNS_13PropertyTreesEiii: argument 0"}
!21 = distinct !{!21, !"_ZN2cc19draw_property_utils12_GLOBAL__N_129ComputeTargetRectInLocalSpaceEN3gfx5RectFEPKNS_13PropertyTreesEiii"}
!22 = !{!"branch_weights", i32 1, i32 1048575}
!23 = !{!"branch_weights", i32 1, i32 2000}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN2cc19draw_property_utils12_GLOBAL__N_129ComputeLocalRectInTargetSpaceEN3gfx5RectFEPKNS_13PropertyTreesEiii: argument 0"}
!26 = distinct !{!26, !"_ZN2cc19draw_property_utils12_GLOBAL__N_129ComputeLocalRectInTargetSpaceEN3gfx5RectFEPKNS_13PropertyTreesEiii"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__19make_pairIRKN3gfx14MaskFilterInfoERKbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__19make_pairIRKN3gfx14MaskFilterInfoERKbEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.disable"}
