; ModuleID = '../../chrome/browser/google/google_brand.cc'
source_filename = "../../chrome/browser/google/google_brand.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.google_brand::BrandForTesting" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN12_GLOBAL__N_119g_brand_for_testingE = internal unnamed_addr global i8* null, align 8
@_ZZN12google_brand9IsOrganicERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE14kOrganicBrands = internal constant [62 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [5 x i8] c"CHCA\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"CHCB\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"CHCG\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"CHCH\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"CHCI\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"CHCJ\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"CHCK\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"CHCL\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"CHFO\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"CHFT\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"CHHS\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"CHHM\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"CHMA\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"CHMB\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"CHME\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"CHMF\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"CHMG\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"CHMH\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"CHMI\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"CHMQ\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"CHMV\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"CHNB\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"CHNC\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"CHNG\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"CHNH\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"CHNI\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"CHOA\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"CHOB\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"CHOC\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"CHON\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"CHOO\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"CHOP\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"CHOQ\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"CHOR\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"CHOS\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"CHOT\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"CHOU\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"CHOX\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"CHOY\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"CHOZ\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"CHPD\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"CHPE\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"CHPF\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"CHPG\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"ECBA\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"ECBB\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"ECDA\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"ECDB\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"ECSA\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"ECSB\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"ECVA\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"ECVB\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"ECWA\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"ECWB\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"ECWC\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"ECWD\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"ECWE\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"ECWF\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"EUBB\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"EUBC\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"GGLA\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"GGLS\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"GGRV\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"EUB\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"EUC\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"GGR\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"GG\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"EU\00", align 1
@_ZZN12google_brand23IsInternetCafeBrandCodeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE7kBrands = internal constant [15 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0)], align 16
@.str.68 = private unnamed_addr constant [5 x i8] c"CHIQ\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"CHSG\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"HLJY\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"NTMO\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"OOBA\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"OOBB\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"OOBC\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"OOBD\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"OOBE\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"OOBF\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"OOBG\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"OOBH\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"OOBI\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"OOBJ\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"IDCM\00", align 1
@.str.83 = private unnamed_addr constant [4 x i8] c"GCE\00", align 1

@_ZN12google_brand15BrandForTestingC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.google_brand::BrandForTesting"*, %"class.std::__1::basic_string"*), void (%"class.google_brand::BrandForTesting"*, %"class.std::__1::basic_string"*)* @_ZN12google_brand15BrandForTestingC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN12google_brand15BrandForTestingD1Ev = hidden unnamed_addr alias void (%"class.google_brand::BrandForTesting"*), void (%"class.google_brand::BrandForTesting"*)* @_ZN12google_brand15BrandForTestingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12google_brand8GetBrandEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %2 = load i8*, i8** @_ZN12_GLOBAL__N_119g_brand_for_testingE, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %1
  %5 = load i8, i8* %2, align 1
  %6 = tail call i1 @llvm.is.constant.i8(i8 %5) #8
  br i1 %6, label %7, label %30

7:                                                ; preds = %4
  %8 = tail call i64 @strlen(i8* nonnull %2) #8
  %9 = icmp ult i64 %8, 23
  br i1 %9, label %10, label %28

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %22

19:                                               ; preds = %10
  %20 = trunc i64 %8 to i8
  store i8 %20, i8* %12, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 1 %2, i64 %8, i1 false) #8
  br label %26

26:                                               ; preds = %25, %22
  %27 = getelementptr inbounds i8, i8* %23, i64 %8
  store i8 0, i8* %27, align 1
  br label %43

28:                                               ; preds = %7
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %2, i64 %8) #8
  br label %43

30:                                               ; preds = %4
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %0, i8* nonnull %2) #8
  br label %43

32:                                               ; preds = %1
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %40, align 8
  br label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %42, align 1
  store i8 0, i8* %34, align 1
  br label %43

43:                                               ; preds = %41, %37, %30, %28, %26
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN12google_brand20GetReactivationBrandEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nocapture) local_unnamed_addr #1 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %9, align 8
  br label %12

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %11, align 1
  store i8 0, i8* %3, align 1
  br label %12

12:                                               ; preds = %6, %10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12google_brand11GetRlzBrandEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %2 = load i8*, i8** @_ZN12_GLOBAL__N_119g_brand_for_testingE, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %1
  %5 = load i8, i8* %2, align 1
  %6 = tail call i1 @llvm.is.constant.i8(i8 %5) #8
  br i1 %6, label %7, label %30

7:                                                ; preds = %4
  %8 = tail call i64 @strlen(i8* nonnull %2) #8
  %9 = icmp ult i64 %8, 23
  br i1 %9, label %10, label %28

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %22

19:                                               ; preds = %10
  %20 = trunc i64 %8 to i8
  store i8 %20, i8* %12, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 1 %2, i64 %8, i1 false) #8
  br label %26

26:                                               ; preds = %25, %22
  %27 = getelementptr inbounds i8, i8* %23, i64 %8
  store i8 0, i8* %27, align 1
  br label %43

28:                                               ; preds = %7
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %2, i64 %8) #8
  br label %43

30:                                               ; preds = %4
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %0, i8* nonnull %2) #8
  br label %43

32:                                               ; preds = %1
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %40, align 8
  br label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %42, align 1
  store i8 0, i8* %34, align 1
  br label %43

43:                                               ; preds = %26, %28, %30, %37, %41
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12google_brand9IsOrganicERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %74, label %11

11:                                               ; preds = %1, %11
  %12 = phi i64 [ %23, %11 ], [ 62, %1 ]
  %13 = phi i8** [ %22, %11 ], [ getelementptr inbounds ([62 x i8*], [62 x i8*]* @_ZZN12google_brand9IsOrganicERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE14kOrganicBrands, i64 0, i64 0), %1 ]
  %14 = lshr i64 %12, 1
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %0, i8* %16) #8
  %18 = icmp sgt i32 %17, 0
  %19 = getelementptr inbounds i8*, i8** %15, i64 1
  %20 = xor i64 %14, -1
  %21 = add i64 %12, %20
  %22 = select i1 %18, i8** %19, i8** %13
  %23 = select i1 %18, i64 %21, i64 %14
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %11

25:                                               ; preds = %11
  %26 = icmp eq i8** %22, getelementptr inbounds ([62 x i8*], [62 x i8*]* @_ZZN12google_brand9IsOrganicERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE14kOrganicBrands, i64 1, i64 0)
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = load i8*, i8** %22, align 8
  %29 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %0, i8* %28) #8
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %74, label %31

31:                                               ; preds = %25, %27
  %32 = load i8, i8* %3, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %6, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp eq i64 %36, 4
  br i1 %37, label %38, label %45

38:                                               ; preds = %31
  %39 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 4) #8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %74, label %41

41:                                               ; preds = %38
  %42 = load i8, i8* %3, align 1
  %43 = load i64, i64* %6, align 8
  %44 = zext i8 %42 to i64
  br label %45

45:                                               ; preds = %41, %31
  %46 = phi i64 [ %44, %41 ], [ %35, %31 ]
  %47 = phi i64 [ %43, %41 ], [ %34, %31 ]
  %48 = phi i8 [ %42, %41 ], [ %32, %31 ]
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %53 = select i1 %49, i8* %51, i8* %52
  %54 = select i1 %49, i64 %47, i64 %46
  %55 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %53, i64 %54, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i64 3, i32 0) #8
  br i1 %55, label %74, label %56

56:                                               ; preds = %45
  %57 = load i8, i8* %3, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i8*, i8** %50, align 8
  %60 = select i1 %58, i8* %59, i8* %52
  %61 = load i64, i64* %6, align 8
  %62 = zext i8 %57 to i64
  %63 = select i1 %58, i64 %61, i64 %62
  %64 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %60, i64 %63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), i64 3, i32 0) #8
  br i1 %64, label %74, label %65

65:                                               ; preds = %56
  %66 = load i8, i8* %3, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %50, align 8
  %69 = select i1 %67, i8* %68, i8* %52
  %70 = load i64, i64* %6, align 8
  %71 = zext i8 %66 to i64
  %72 = select i1 %67, i64 %70, i64 %71
  %73 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %69, i64 %72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0), i64 3, i32 0) #8
  br label %74

74:                                               ; preds = %27, %38, %65, %56, %45, %1
  %75 = phi i1 [ true, %1 ], [ true, %27 ], [ false, %38 ], [ true, %56 ], [ true, %45 ], [ %73, %65 ]
  ret i1 %75
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12google_brand17IsOrganicFirstRunERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = select i1 %5, i8* %13, i8* %14
  %16 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %15, i64 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0), i64 2, i32 0) #8
  br i1 %16, label %26, label %17

17:                                               ; preds = %11
  %18 = load i8, i8* %3, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %12, align 8
  %21 = select i1 %19, i8* %20, i8* %14
  %22 = load i64, i64* %6, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  %25 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %21, i64 %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0), i64 2, i32 0) #8
  br label %26

26:                                               ; preds = %11, %17, %1
  %27 = phi i1 [ true, %1 ], [ true, %11 ], [ %25, %17 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12google_brand23IsInternetCafeBrandCodeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %5

5:                                                ; preds = %18, %1
  %6 = phi i8** [ getelementptr inbounds ([15 x i8*], [15 x i8*]* @_ZZN12google_brand23IsInternetCafeBrandCodeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE7kBrands, i64 0, i64 0), %1 ], [ %19, %18 ]
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i64 @strlen(i8* %7) #8
  %9 = load i8, i8* %3, align 1
  %10 = icmp slt i8 %9, 0
  %11 = load i64, i64* %4, align 8
  %12 = zext i8 %9 to i64
  %13 = select i1 %10, i64 %11, i64 %12
  %14 = icmp eq i64 %8, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %5
  %16 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* %7, i64 %8) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15, %5
  %19 = getelementptr inbounds i8*, i8** %6, i64 1
  %20 = icmp eq i8** %19, getelementptr inbounds ([15 x i8*], [15 x i8*]* @_ZZN12google_brand23IsInternetCafeBrandCodeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE7kBrands, i64 1, i64 0)
  br i1 %20, label %21, label %5

21:                                               ; preds = %15, %18
  %22 = phi i8** [ getelementptr inbounds ([15 x i8*], [15 x i8*]* @_ZZN12google_brand23IsInternetCafeBrandCodeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE7kBrands, i64 1, i64 0), %18 ], [ %6, %15 ]
  %23 = icmp ne i8** %22, getelementptr inbounds ([15 x i8*], [15 x i8*]* @_ZZN12google_brand23IsInternetCafeBrandCodeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE7kBrands, i64 1, i64 0)
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12google_brand12IsEnterpriseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 4) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %29, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %4, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %26 = select i1 %22, i8* %24, i8* %25
  %27 = select i1 %22, i64 %20, i64 %19
  %28 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %26, i64 %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83, i64 0, i64 0), i64 3, i32 0) #8
  br label %29

29:                                               ; preds = %18, %11
  %30 = phi i1 [ true, %11 ], [ %28, %18 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12google_brand15BrandForTestingC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.google_brand::BrandForTesting"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.google_brand::BrandForTesting"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #8
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.google_brand::BrandForTesting", %"class.google_brand::BrandForTesting"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #8
  br label %16

16:                                               ; preds = %7, %10
  %17 = bitcast %"class.google_brand::BrandForTesting"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.google_brand::BrandForTesting", %"class.google_brand::BrandForTesting"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.google_brand::BrandForTesting"* %0 to i8*
  br label %26

26:                                               ; preds = %21, %24
  %27 = phi i8* [ %23, %21 ], [ %25, %24 ]
  store i8* %27, i8** @_ZN12_GLOBAL__N_119g_brand_for_testingE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12google_brand15BrandForTestingD2Ev(%"class.google_brand::BrandForTesting"* nocapture readonly) unnamed_addr #0 align 2 {
  store i8* null, i8** @_ZN12_GLOBAL__N_119g_brand_for_testingE, align 8
  %2 = bitcast %"class.google_brand::BrandForTesting"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.google_brand::BrandForTesting", %"class.google_brand::BrandForTesting"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
