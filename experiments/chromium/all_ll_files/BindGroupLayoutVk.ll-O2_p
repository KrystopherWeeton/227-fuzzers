; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/BindGroupLayoutVk.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/BindGroupLayoutVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::vulkan::BindGroupLayout" = type { %"class.dawn_native::BindGroupLayoutBase", %"class.dawn_native::vulkan::detail::VkHandle.327", %class.SlabAllocator, %"class.std::__1::unique_ptr.328" }
%"class.dawn_native::BindGroupLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"struct.dawn_native::BindingCounts", %"class.ityp::vector", %"class.std::__1::map" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"struct.dawn_native::BindingCounts" = type { i32, i32, i32, i32, i32, %"class.dawn_native::PerStage" }
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [3 x %"struct.dawn_native::PerStageBindingCounts"] }
%"struct.dawn_native::PerStageBindingCounts" = type { i32, i32, i32, i32, i32 }
%"class.ityp::vector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"*, %"class.std::__1::__compressed_pair.10" }
%"struct.dawn_native::BindingInfo" = type { i32, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"struct.dawn_native::BufferBindingLayout" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i64 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::SamplerBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::TextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::StorageTextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.dawn_native::BindingInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.dawn_native::vulkan::detail::VkHandle.327" = type { %struct.VkDescriptorSetLayout_T* }
%struct.VkDescriptorSetLayout_T = type opaque
%class.SlabAllocator = type { %class.SlabAllocatorImpl }
%class.SlabAllocatorImpl = type { i32, i32, i32, i32, i16, i64, %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab" }
%"struct.SlabAllocatorImpl::SentinelSlab" = type { %"struct.SlabAllocatorImpl::Slab.base", [6 x i8] }
%"struct.SlabAllocatorImpl::Slab.base" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16 }>
%"struct.SlabAllocatorImpl::IndexLinkNode" = type { i16, i16 }
%"struct.SlabAllocatorImpl::Slab" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16, [6 x i8] }>
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.dawn_native::vulkan::DescriptorSetAllocator"* }
%"class.dawn_native::vulkan::DescriptorSetAllocator" = type { %"class.dawn_native::vulkan::BindGroupLayout"*, %"class.std::__1::vector.331", i16, %"class.std::__1::vector.338", %"class.std::__1::vector.345", %class.SerialQueue.368, i64 }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.333" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %struct.VkDescriptorPoolSize* }
%"class.std::__1::vector.338" = type { %"class.std::__1::__vector_base.339" }
%"class.std::__1::__vector_base.339" = type { i32*, i32*, %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { i32* }
%"class.std::__1::vector.345" = type { %"class.std::__1::__vector_base.346" }
%"class.std::__1::__vector_base.346" = type { %"struct.dawn_native::vulkan::DescriptorSetAllocator::DescriptorPool"*, %"struct.dawn_native::vulkan::DescriptorSetAllocator::DescriptorPool"*, %"class.std::__1::__compressed_pair.363" }
%"struct.dawn_native::vulkan::DescriptorSetAllocator::DescriptorPool" = type { %"class.dawn_native::vulkan::detail::VkHandle.347", %"class.std::__1::vector.348", %"class.std::__1::vector.356" }
%"class.dawn_native::vulkan::detail::VkHandle.347" = type { %struct.VkDescriptorPool_T* }
%struct.VkDescriptorPool_T = type opaque
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"class.dawn_native::vulkan::detail::VkHandle.350"*, %"class.dawn_native::vulkan::detail::VkHandle.350"*, %"class.std::__1::__compressed_pair.351" }
%"class.dawn_native::vulkan::detail::VkHandle.350" = type { %struct.VkDescriptorSet_T* }
%struct.VkDescriptorSet_T = type opaque
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.dawn_native::vulkan::detail::VkHandle.350"* }
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { i16*, i16*, %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { i16* }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.dawn_native::vulkan::DescriptorSetAllocator::DescriptorPool"* }
%class.SerialQueue.368 = type { %class.SerialStorage.369 }
%class.SerialStorage.369 = type { %"class.std::__1::vector.370" }
%"class.std::__1::vector.370" = type { %"class.std::__1::__vector_base.371" }
%"class.std::__1::__vector_base.371" = type { %"struct.std::__1::pair.372"*, %"struct.std::__1::pair.372"*, %"class.std::__1::__compressed_pair.373" }
%"struct.std::__1::pair.372" = type opaque
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::pair.372"* }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %class.Ref.33, %"class.std::__1::unique_ptr.35", i32, %"struct.std::__1::array.41", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.33 = type { %class.RefBase.34 }
%class.RefBase.34 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array.41" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.42" }
%"struct.std::__1::array.42" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.43" }
%"class.std::__1::bitset.43" = type { %"class.std::__1::__bitset.44" }
%"class.std::__1::__bitset.44" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"struct.dawn_native::BindGroupLayoutDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, %"struct.dawn_native::BindGroupLayoutEntry"* }
%"struct.dawn_native::BindGroupLayoutEntry" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%class.Result = type { i64 }
%"class.dawn_native::vulkan::Device" = type { %"class.dawn_native::DeviceBase", %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanDeviceInfo", %struct.VkDevice_T*, i32, %struct.VkQueue_T*, i32, %class.SerialQueue, %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.std::__1::queue", %"class.std::__1::vector.284", %class.SerialQueue.291, %"class.std::__1::vector.301", %"struct.dawn_native::vulkan::CommandRecordingContext" }
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstance_T = type opaque
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector.59", %"class.std::__1::vector.66", %"class.std::__1::vector.73", %"class.std::__1::vector.80" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.57" }
%"class.std::__1::bitset.57" = type { %"class.std::__1::__bitset.58" }
%"class.std::__1::__bitset.58" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %struct.VkLayerProperties* }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.87" }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.89" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.dawn_native::vulkan::FencedDeleter"* }
%"class.dawn_native::vulkan::FencedDeleter" = type { %"class.dawn_native::vulkan::Device"*, %class.SerialQueue.97, %class.SerialQueue.107, %class.SerialQueue.117, %class.SerialQueue.127, %class.SerialQueue.137, %class.SerialQueue.147, %class.SerialQueue.157, %class.SerialQueue.167, %class.SerialQueue.177, %class.SerialQueue.187, %class.SerialQueue.197, %class.SerialQueue.207, %class.SerialQueue.217, %class.SerialQueue.227, %class.SerialQueue.237 }
%class.SerialQueue.97 = type { %class.SerialStorage.98 }
%class.SerialStorage.98 = type { %"class.std::__1::vector.99" }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.std::__1::pair.101"*, %"struct.std::__1::pair.101"*, %"class.std::__1::__compressed_pair.102" }
%"struct.std::__1::pair.101" = type opaque
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::pair.101"* }
%class.SerialQueue.107 = type { %class.SerialStorage.108 }
%class.SerialStorage.108 = type { %"class.std::__1::vector.109" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.std::__1::pair.111"*, %"struct.std::__1::pair.111"*, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::pair.111" = type opaque
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::pair.111"* }
%class.SerialQueue.117 = type { %class.SerialStorage.118 }
%class.SerialStorage.118 = type { %"class.std::__1::vector.119" }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.std::__1::pair.121"*, %"struct.std::__1::pair.121"*, %"class.std::__1::__compressed_pair.122" }
%"struct.std::__1::pair.121" = type opaque
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::pair.121"* }
%class.SerialQueue.127 = type { %class.SerialStorage.128 }
%class.SerialStorage.128 = type { %"class.std::__1::vector.129" }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.std::__1::pair.131"*, %"struct.std::__1::pair.131"*, %"class.std::__1::__compressed_pair.132" }
%"struct.std::__1::pair.131" = type opaque
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::pair.131"* }
%class.SerialQueue.137 = type { %class.SerialStorage.138 }
%class.SerialStorage.138 = type { %"class.std::__1::vector.139" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.std::__1::pair.141"*, %"struct.std::__1::pair.141"*, %"class.std::__1::__compressed_pair.142" }
%"struct.std::__1::pair.141" = type opaque
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::pair.141"* }
%class.SerialQueue.147 = type { %class.SerialStorage.148 }
%class.SerialStorage.148 = type { %"class.std::__1::vector.149" }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"struct.std::__1::pair.151"*, %"struct.std::__1::pair.151"*, %"class.std::__1::__compressed_pair.152" }
%"struct.std::__1::pair.151" = type opaque
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::pair.151"* }
%class.SerialQueue.157 = type { %class.SerialStorage.158 }
%class.SerialStorage.158 = type { %"class.std::__1::vector.159" }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"*, %"class.std::__1::__compressed_pair.162" }
%"struct.std::__1::pair.161" = type opaque
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::pair.161"* }
%class.SerialQueue.167 = type { %class.SerialStorage.168 }
%class.SerialStorage.168 = type { %"class.std::__1::vector.169" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.std::__1::pair.171"*, %"struct.std::__1::pair.171"*, %"class.std::__1::__compressed_pair.172" }
%"struct.std::__1::pair.171" = type opaque
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::pair.171"* }
%class.SerialQueue.177 = type { %class.SerialStorage.178 }
%class.SerialStorage.178 = type { %"class.std::__1::vector.179" }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.std::__1::pair.181"*, %"struct.std::__1::pair.181"*, %"class.std::__1::__compressed_pair.182" }
%"struct.std::__1::pair.181" = type opaque
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::pair.181"* }
%class.SerialQueue.187 = type { %class.SerialStorage.188 }
%class.SerialStorage.188 = type { %"class.std::__1::vector.189" }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%class.SerialQueue.197 = type { %class.SerialStorage.198 }
%class.SerialStorage.198 = type { %"class.std::__1::vector.199" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.std::__1::pair.201"*, %"struct.std::__1::pair.201"*, %"class.std::__1::__compressed_pair.202" }
%"struct.std::__1::pair.201" = type opaque
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::pair.201"* }
%class.SerialQueue.207 = type { %class.SerialStorage.208 }
%class.SerialStorage.208 = type { %"class.std::__1::vector.209" }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.std::__1::pair.211"*, %"struct.std::__1::pair.211"*, %"class.std::__1::__compressed_pair.212" }
%"struct.std::__1::pair.211" = type opaque
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.std::__1::pair.211"* }
%class.SerialQueue.217 = type { %class.SerialStorage.218 }
%class.SerialStorage.218 = type { %"class.std::__1::vector.219" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"struct.std::__1::pair.221"*, %"struct.std::__1::pair.221"*, %"class.std::__1::__compressed_pair.222" }
%"struct.std::__1::pair.221" = type opaque
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::pair.221"* }
%class.SerialQueue.227 = type { %class.SerialStorage.228 }
%class.SerialStorage.228 = type { %"class.std::__1::vector.229" }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"*, %"class.std::__1::__compressed_pair.232" }
%"struct.std::__1::pair.231" = type opaque
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::pair.231"* }
%class.SerialQueue.237 = type { %class.SerialStorage.238 }
%class.SerialStorage.238 = type { %"class.std::__1::vector.239" }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { %"struct.std::__1::pair.241"*, %"struct.std::__1::pair.241"*, %"class.std::__1::__compressed_pair.242" }
%"struct.std::__1::pair.241" = type opaque
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::pair.241"* }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.dawn_native::vulkan::ResourceMemoryAllocator"* }
%"class.dawn_native::vulkan::ResourceMemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.dawn_native::vulkan::RenderPassCache"* }
%"class.dawn_native::vulkan::RenderPassCache" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.dawn_native::vulkan::external_memory::Service"* }
%"class.dawn_native::vulkan::external_memory::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.dawn_native::vulkan::external_semaphore::Service"* }
%"class.dawn_native::vulkan::external_semaphore::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.280" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.274"**, %"struct.std::__1::pair.274"**, %"struct.std::__1::pair.274"**, %"class.std::__1::__compressed_pair.275" }
%"struct.std::__1::pair.274" = type opaque
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::pair.274"** }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.std::__1::__compressed_pair.286" }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.dawn_native::vulkan::detail::VkHandle"* }
%class.SerialQueue.291 = type { %class.SerialStorage.292 }
%class.SerialStorage.292 = type { %"class.std::__1::vector.293" }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"*, %"class.std::__1::__compressed_pair.296" }
%"struct.std::__1::pair.295" = type opaque
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::pair.295"* }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"class.std::__1::__compressed_pair.304" }
%"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer" = type { %"class.dawn_native::vulkan::detail::VkHandle.303", %struct.VkCommandBuffer_T* }
%"class.dawn_native::vulkan::detail::VkHandle.303" = type { %struct.VkCommandPool_T* }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"* }
%"struct.dawn_native::vulkan::CommandRecordingContext" = type <{ %struct.VkCommandBuffer_T*, %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.std::__1::vector.317", %"class.dawn_native::vulkan::detail::VkHandle.303", i8, [7 x i8] }>
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"class.dawn_native::vulkan::detail::VkHandle.311"*, %"class.dawn_native::vulkan::detail::VkHandle.311"*, %"class.std::__1::__compressed_pair.312" }
%"class.dawn_native::vulkan::detail::VkHandle.311" = type { %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.dawn_native::vulkan::detail::VkHandle.311"* }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %class.Ref.319*, %class.Ref.319*, %"class.std::__1::__compressed_pair.320" }
%class.Ref.319 = type opaque
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %class.Ref.319* }
%class.Result.381 = type { %"class.std::__1::unique_ptr.382" }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.390" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.390" = type { %"class.std::__1::__vector_base.391" }
%"class.std::__1::__vector_base.391" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.392" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.std::__1::map.409" = type { %"class.std::__1::__tree.410" }
%"class.std::__1::__tree.410" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.411", %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.ityp::vector.400" = type { %"class.std::__1::vector.401" }
%"class.std::__1::vector.401" = type { %"class.std::__1::__vector_base.402" }
%"class.std::__1::__vector_base.402" = type { %struct.VkDescriptorSetLayoutBinding*, %struct.VkDescriptorSetLayoutBinding*, %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %struct.VkDescriptorSetLayoutBinding* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.408" }
%"struct.std::__1::pair.408" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.446" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.447", [4 x i8] }
%"struct.std::__1::__value_type.447" = type { %"struct.std::__1::pair.448" }
%"struct.std::__1::pair.448" = type { i32, i32 }
%class.Result.433 = type { i64 }
%"struct.dawn_native::BindGroupDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::BindGroupLayoutBase"*, i32, %"struct.dawn_native::BindGroupEntry"* }
%"struct.dawn_native::BindGroupEntry" = type { i32, %"class.dawn_native::BufferBase"*, i64, i64, %"class.dawn_native::SamplerBase"*, %"class.dawn_native::TextureViewBase"* }
%"class.dawn_native::BufferBase" = type { %"class.dawn_native::ObjectBase", i64, i32, i32, i8, %"class.std::__1::unique_ptr.420", void (i32, i8*)*, i8*, i64, i32, i64, i64 }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.dawn_native::StagingBufferBase"* }
%"class.dawn_native::StagingBufferBase" = type opaque
%"class.dawn_native::SamplerBase" = type opaque
%"class.dawn_native::TextureViewBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.426, %"struct.dawn_native::Format"*, i32, %"struct.dawn_native::SubresourceRange" }
%class.Ref.426 = type { %class.RefBase.427 }
%class.RefBase.427 = type { %"class.dawn_native::TextureBase"* }
%"class.dawn_native::TextureBase" = type { %"class.dawn_native::ObjectBase", i32, %"struct.dawn_native::Format"*, %"struct.dawn_native::Extent3D", i32, i32, i32, i32, %"class.std::__1::vector.428" }
%"struct.dawn_native::Extent3D" = type { i32, i32, i32 }
%"class.std::__1::vector.428" = type { i64*, i64, %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.dawn_native::SubresourceRange" = type { i8, i32, i32, i32, i32 }
%class.Result.434 = type { i32, %"class.std::__1::unique_ptr.382", %"struct.dawn_native::vulkan::DescriptorSetAllocation" }
%"struct.dawn_native::vulkan::DescriptorSetAllocation" = type <{ %"class.dawn_native::vulkan::detail::VkHandle.350", i32, i16, [2 x i8] }>
%"class.dawn_native::vulkan::BindGroup" = type { %"class.dawn_native::BindGroupBase", %"struct.dawn_native::vulkan::DescriptorSetAllocation" }
%"class.dawn_native::BindGroupBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.8, %"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" }
%"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" = type { %"class.ityp::span", %"class.ityp::span.437", %"class.ityp::span.441" }
%"class.ityp::span" = type <{ %"struct.dawn_native::BindGroupLayoutBase::BufferBindingData"*, i32, [4 x i8] }>
%"struct.dawn_native::BindGroupLayoutBase::BufferBindingData" = type { i64, i64 }
%"class.ityp::span.437" = type <{ %class.Ref.438*, i32, [4 x i8] }>
%class.Ref.438 = type { %class.RefBase.439 }
%class.RefBase.439 = type { %"class.dawn_native::ObjectBase"* }
%"class.ityp::span.441" = type <{ i64*, i32, [4 x i8] }>

$_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [68 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/BindGroupLayoutVk.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan15BindGroupLayout6CreateEPNS0_6DeviceEPKNS_25BindGroupLayoutDescriptorE = private unnamed_addr constant [7 x i8] c"Create\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"CreateDescriptorSetLayout\00", align 1
@__func__._ZN11dawn_native6vulkan15BindGroupLayout10InitializeEv = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@_ZTVN11dawn_native6vulkan15BindGroupLayoutE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::vulkan::BindGroupLayout"*)* @_ZN11dawn_native6vulkan15BindGroupLayoutD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::vulkan::BindGroupLayout"*)* @_ZN11dawn_native6vulkan15BindGroupLayoutD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (i64 (%"class.dawn_native::BindGroupLayoutBase"*)* @_ZN11dawn_native19BindGroupLayoutBase18ComputeContentHashEv to i8*)] }, align 8
@__func__._ZN11dawn_native6vulkan15BindGroupLayout17AllocateBindGroupEPNS0_6DeviceEPKNS_19BindGroupDescriptorE = private unnamed_addr constant [18 x i8] c"AllocateBindGroup\00", align 1

@_ZN11dawn_native6vulkan15BindGroupLayoutC1EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::BindGroupLayout"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*), void (%"class.dawn_native::vulkan::BindGroupLayout"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*)* @_ZN11dawn_native6vulkan15BindGroupLayoutC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE
@_ZN11dawn_native6vulkan15BindGroupLayoutD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::BindGroupLayout"*), void (%"class.dawn_native::vulkan::BindGroupLayout"*)* @_ZN11dawn_native6vulkan15BindGroupLayoutD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN11dawn_native6vulkan20VulkanDescriptorTypeERKNS_11BindingInfoE(%"struct.dawn_native::BindingInfo"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %19 [
    i32 0, label %4
    i32 1, label %20
    i32 2, label %17
    i32 3, label %18
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %0, i64 0, i32 3, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %20 [
    i32 1, label %7
    i32 2, label %12
    i32 3, label %12
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %0, i64 0, i32 3, i32 2
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 6, i32 8
  br label %20

12:                                               ; preds = %4, %4
  %13 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %0, i64 0, i32 3, i32 2
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 7, i32 9
  br label %20

17:                                               ; preds = %1
  br label %20

18:                                               ; preds = %1
  br label %20

19:                                               ; preds = %1
  unreachable

20:                                               ; preds = %1, %4, %12, %7, %18, %17
  %21 = phi i32 [ %3, %18 ], [ %3, %17 ], [ %11, %7 ], [ %16, %12 ], [ 0, %4 ], [ 0, %1 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayout6CreateEPNS0_6DeviceEPKNS_25BindGroupLayoutDescriptorE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Device"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %class.Result.381, align 8
  %5 = tail call i8* @_Znwm(i64 344) #8
  %6 = bitcast i8* %5 to %"class.dawn_native::vulkan::BindGroupLayout"*
  %7 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %1, i64 0, i32 0
  %8 = bitcast i8* %5 to %"class.dawn_native::BindGroupLayoutBase"*
  tail call void @_ZN11dawn_native19BindGroupLayoutBaseC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::BindGroupLayoutBase"* nonnull %8, %"class.dawn_native::DeviceBase"* %7, %"struct.dawn_native::BindGroupLayoutDescriptor"* %2) #9
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan15BindGroupLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 176
  %11 = bitcast i8* %10 to %struct.VkDescriptorSetLayout_T**
  store %struct.VkDescriptorSetLayout_T* null, %struct.VkDescriptorSetLayout_T** %11, align 8
  %12 = tail call i64 @_ZNK11dawn_native19BindGroupLayoutBase18GetBindingDataSizeEv(%"class.dawn_native::BindGroupLayoutBase"* nonnull %8) #9, !noalias !3
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, 96
  %15 = getelementptr inbounds i8, i8* %5, i64 184
  %16 = bitcast i8* %15 to %class.SlabAllocatorImpl*
  %17 = udiv i32 4096, %14
  %18 = trunc i32 %17 to i16
  tail call void @_ZN17SlabAllocatorImplC2Etjj(%class.SlabAllocatorImpl* %16, i16 zeroext %18, i32 %14, i32 8) #9
  %19 = getelementptr inbounds i8, i8* %5, i64 336
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = bitcast %class.Result.381* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %class.Result.381, %class.Result.381* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %22, align 8
  call void @_ZN11dawn_native6vulkan15BindGroupLayout10InitializeEv(%class.Result.381* nonnull sret %4, %"class.dawn_native::vulkan::BindGroupLayout"* nonnull %6)
  %23 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %22, align 8
  %24 = icmp eq %"class.dawn_native::ErrorData"* %23, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %22, align 8
  br i1 %24, label %25, label %27, !prof !6

25:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %26 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %5, i32 0) #9
  br label %31

27:                                               ; preds = %3
  tail call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %23, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__func__._ZN11dawn_native6vulkan15BindGroupLayout6CreateEPNS0_6DeviceEPKNS_25BindGroupLayoutDescriptorE, i64 0, i64 0), i32 81) #9
  %28 = bitcast %"class.dawn_native::ErrorData"* %23 to i8*
  %29 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %28, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %30 = bitcast i8* %5 to %class.RefCounted*
  tail call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* nonnull %30) #9
  br label %31

31:                                               ; preds = %25, %27
  %32 = phi i64 [ %26, %25 ], [ %29, %27 ]
  %33 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i64 %32, i64* %33, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayout10InitializeEv(%class.Result.381* noalias nocapture sret, %"class.dawn_native::vulkan::BindGroupLayout"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::map.409", align 8
  %4 = alloca %"class.ityp::vector.400", align 8
  %5 = alloca %struct.VkDescriptorSetLayoutCreateInfo, align 8
  %6 = alloca %class.Result.381, align 8
  %7 = alloca %"class.std::__1::map.409", align 8
  %8 = bitcast %"class.ityp::vector.400"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.ityp::vector.400", %"class.ityp::vector.400"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.ityp::vector.400", %"class.ityp::vector.400"* %4, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.ityp::vector.400", %"class.ityp::vector.400"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  %12 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 0
  %13 = tail call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingCountEv(%"class.dawn_native::BindGroupLayoutBase"* %12) #9
  %14 = zext i32 %13 to i64
  %15 = bitcast %struct.VkDescriptorSetLayoutBinding** %11 to i64*
  %16 = bitcast %"class.ityp::vector.400"* %4 to i64*
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %2
  %19 = bitcast %struct.VkDescriptorSetLayoutBinding** %10 to i64*
  %20 = mul nuw nsw i64 %14, 24
  %21 = tail call i8* @_Znwm(i64 %20) #8
  %22 = bitcast i8* %21 to %struct.VkDescriptorSetLayoutBinding*
  %23 = ptrtoint i8* %21 to i64
  %24 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %22, i64 %14
  %25 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %24 to i64
  store i64 %23, i64* %16, align 8
  store i64 %23, i64* %19, align 8
  store i64 %25, i64* %15, align 8
  br label %26

26:                                               ; preds = %18, %2
  %27 = phi i64 [ 0, %2 ], [ %23, %18 ]
  %28 = phi %struct.VkDescriptorSetLayoutBinding* [ null, %2 ], [ %22, %18 ]
  %29 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %29) #9
  %31 = tail call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %30, i32 24) #9
  %32 = tail call dereferenceable(24) %"class.std::__1::map"* @_ZNK11dawn_native19BindGroupLayoutBase13GetBindingMapEv(%"class.dawn_native::BindGroupLayoutBase"* %12) #9
  %33 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = icmp eq %"class.std::__1::__tree_end_node"* %34, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %26
  %38 = bitcast %struct.VkDescriptorSetLayoutBinding** %10 to i64*
  br label %44

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %41 = bitcast %struct.VkDescriptorSetLayoutBinding** %10 to i64*
  br label %71

42:                                               ; preds = %201
  %43 = load i64, i64* %16, align 8
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i64* [ %38, %37 ], [ %41, %42 ]
  %46 = phi i64 [ %27, %37 ], [ %43, %42 ]
  %47 = phi i64 [ %27, %37 ], [ %172, %42 ]
  %48 = bitcast %struct.VkDescriptorSetLayoutCreateInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #9
  %49 = bitcast %struct.VkDescriptorSetLayoutCreateInfo* %5 to i64*
  store i64 -6148914691236517206, i64* %49, align 8
  %50 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %5, i64 0, i32 0
  store i32 32, i32* %50, align 8
  %51 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %5, i64 0, i32 1
  store i8* null, i8** %51, align 8
  %52 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %5, i64 0, i32 2
  store i32 0, i32* %52, align 8
  %53 = sub i64 %47, %46
  %54 = sdiv exact i64 %53, 24
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %5, i64 0, i32 3
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %5, i64 0, i32 4
  %58 = bitcast %struct.VkDescriptorSetLayoutBinding** %57 to i64*
  store i64 %46, i64* %58, align 8
  %59 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %29) #9
  %60 = bitcast %"class.dawn_native::DeviceBase"* %59 to %"class.dawn_native::vulkan::Device"*
  %61 = bitcast %class.Result.381* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  %62 = getelementptr inbounds %class.Result.381, %class.Result.381* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %62, align 8
  %63 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %59, i64 1, i32 18, i32 0, i64 8, i32 1
  %64 = bitcast i8* %63 to i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)**
  %65 = load i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)** %64, align 8
  %66 = tail call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %60) #9
  %67 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 1, i32 0
  %68 = call i32 %65(%struct.VkDevice_T* %66, %struct.VkDescriptorSetLayoutCreateInfo* nonnull %5, %struct.VkAllocationCallbacks* null, %struct.VkDescriptorSetLayout_T** %67) #9
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.381* nonnull sret %6, i32 %68, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #9
  %69 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %62, align 8
  %70 = icmp eq %"class.dawn_native::ErrorData"* %69, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %62, align 8
  br i1 %70, label %230, label %204, !prof !6

71:                                               ; preds = %39, %201
  %72 = phi i64 [ %27, %39 ], [ %172, %201 ]
  %73 = phi %struct.VkDescriptorSetLayoutBinding* [ %28, %39 ], [ %173, %201 ]
  %74 = phi %"class.std::__1::__tree_end_node"* [ %34, %39 ], [ %202, %201 ]
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node"*
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %75, i64 0, i32 1, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 4
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = load %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"** %40, align 8
  %83 = select i1 %31, i32 %80, i32 %77
  %84 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %82, i64 %81, i32 2
  %85 = load i32, i32* %84, align 8
  switch i32 %85, label %101 [
    i32 0, label %86
    i32 1, label %102
    i32 2, label %99
    i32 3, label %100
  ]

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %82, i64 %81, i32 3, i32 1
  %88 = load i32, i32* %87, align 8
  switch i32 %88, label %102 [
    i32 1, label %89
    i32 2, label %94
    i32 3, label %94
  ]

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %82, i64 %81, i32 3, i32 2
  %91 = load i8, i8* %90, align 4, !range !2
  %92 = icmp eq i8 %91, 0
  %93 = select i1 %92, i32 6, i32 8
  br label %102

94:                                               ; preds = %86, %86
  %95 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %82, i64 %81, i32 3, i32 2
  %96 = load i8, i8* %95, align 4, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 7, i32 9
  br label %102

99:                                               ; preds = %71
  br label %102

100:                                              ; preds = %71
  br label %102

101:                                              ; preds = %71
  unreachable

102:                                              ; preds = %71, %86, %89, %94, %99, %100
  %103 = phi i32 [ %85, %100 ], [ %85, %99 ], [ %93, %89 ], [ %98, %94 ], [ 0, %86 ], [ 0, %71 ]
  %104 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %82, i64 %81, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 1
  %107 = shl i32 %105, 3
  %108 = and i32 %107, 16
  %109 = or i32 %108, %106
  %110 = and i32 %107, 32
  %111 = or i32 %109, %110
  %112 = load %struct.VkDescriptorSetLayoutBinding*, %struct.VkDescriptorSetLayoutBinding** %11, align 8
  %113 = icmp ult %struct.VkDescriptorSetLayoutBinding* %73, %112
  %114 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %112 to i64
  br i1 %113, label %115, label %123

115:                                              ; preds = %102
  %116 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %73, i64 0, i32 0
  store i32 %83, i32* %116, align 8
  %117 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %73, i64 0, i32 1
  store i32 %103, i32* %117, align 4
  %118 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %73, i64 0, i32 2
  store i32 1, i32* %118, align 8
  %119 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %73, i64 0, i32 3
  store i32 %111, i32* %119, align 4
  %120 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %73, i64 0, i32 4
  store %struct.VkSampler_T** null, %struct.VkSampler_T*** %120, align 8
  %121 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %73, i64 1
  %122 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %121 to i64
  store i64 %122, i64* %41, align 8
  br label %171

123:                                              ; preds = %102
  %124 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %73 to i64
  %125 = load i64, i64* %16, align 8
  %126 = sub i64 %124, %125
  %127 = sdiv exact i64 %126, 24
  %128 = add nsw i64 %127, 1
  %129 = icmp ugt i64 %128, 768614336404564650
  br i1 %129, label %130, label %132

130:                                              ; preds = %123
  %131 = bitcast %"class.ityp::vector.400"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %131) #10
  unreachable

132:                                              ; preds = %123
  %133 = sub i64 %114, %125
  %134 = sdiv exact i64 %133, 24
  %135 = icmp ult i64 %134, 384307168202282325
  br i1 %135, label %136, label %141

136:                                              ; preds = %132
  %137 = shl nsw i64 %134, 1
  %138 = icmp ult i64 %137, %128
  %139 = select i1 %138, i64 %128, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %146, label %141

141:                                              ; preds = %136, %132
  %142 = phi i64 [ %139, %136 ], [ 768614336404564650, %132 ]
  %143 = mul i64 %142, 24
  %144 = tail call i8* @_Znwm(i64 %143) #8
  %145 = bitcast i8* %144 to %struct.VkDescriptorSetLayoutBinding*
  br label %146

146:                                              ; preds = %141, %136
  %147 = phi i64 [ %142, %141 ], [ 0, %136 ]
  %148 = phi %struct.VkDescriptorSetLayoutBinding* [ %145, %141 ], [ null, %136 ]
  %149 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %148, i64 %127
  %150 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %148, i64 %147
  %151 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %150 to i64
  %152 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %149, i64 0, i32 0
  store i32 %83, i32* %152, align 8
  %153 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %148, i64 %127, i32 1
  store i32 %103, i32* %153, align 4
  %154 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %148, i64 %127, i32 2
  store i32 1, i32* %154, align 8
  %155 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %148, i64 %127, i32 3
  store i32 %111, i32* %155, align 4
  %156 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %148, i64 %127, i32 4
  store %struct.VkSampler_T** null, %struct.VkSampler_T*** %156, align 8
  %157 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %149, i64 1
  %158 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %157 to i64
  %159 = sub i64 %72, %125
  %160 = sdiv exact i64 %159, -24
  %161 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %149, i64 %160
  %162 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %161 to i64
  %163 = icmp sgt i64 %159, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %146
  %165 = bitcast %struct.VkDescriptorSetLayoutBinding* %161 to i8*
  %166 = inttoptr i64 %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 %159, i1 false) #9
  br label %167

167:                                              ; preds = %164, %146
  store i64 %162, i64* %16, align 8
  store i64 %158, i64* %41, align 8
  store i64 %151, i64* %15, align 8
  %168 = icmp eq i64 %125, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = inttoptr i64 %125 to i8*
  tail call void @_ZdlPv(i8* %170) #8
  br label %171

171:                                              ; preds = %115, %167, %169
  %172 = phi i64 [ %122, %115 ], [ %158, %167 ], [ %158, %169 ]
  %173 = phi %struct.VkDescriptorSetLayoutBinding* [ %121, %115 ], [ %157, %167 ], [ %157, %169 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 1, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %185

177:                                              ; preds = %171
  %178 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node_base"*
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 2
  %180 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.std::__1::__tree_end_node"**
  %181 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %181, i64 0, i32 0
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %182, align 8
  %184 = icmp eq %"class.std::__1::__tree_node_base"* %183, %178
  br i1 %184, label %201, label %192

185:                                              ; preds = %171, %185
  %186 = phi %"class.std::__1::__tree_node_base"* [ %188, %185 ], [ %175, %171 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %185

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 0
  br label %201

192:                                              ; preds = %177, %192
  %193 = phi %"class.std::__1::__tree_end_node"** [ %196, %192 ], [ %180, %177 ]
  %194 = bitcast %"class.std::__1::__tree_end_node"** %193 to %"class.std::__1::__tree_node_base"**
  %195 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %194, align 8
  %196 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %195, i64 0, i32 2
  %197 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %196, align 8
  %198 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %197, i64 0, i32 0
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node_base"* %199, %195
  br i1 %200, label %201, label %192

201:                                              ; preds = %192, %177, %190
  %202 = phi %"class.std::__1::__tree_end_node"* [ %191, %190 ], [ %181, %177 ], [ %197, %192 ]
  %203 = icmp eq %"class.std::__1::__tree_end_node"* %202, %35
  br i1 %203, label %42, label %71

204:                                              ; preds = %44
  %205 = ptrtoint %"class.dawn_native::ErrorData"* %69 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %69, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan15BindGroupLayout10InitializeEv, i64 0, i64 0), i32 120) #9
  %206 = bitcast %class.Result.381* %0 to i64*
  store i64 %205, i64* %206, align 8
  %207 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %62, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %62, align 8
  %208 = icmp eq %"class.dawn_native::ErrorData"* %207, null
  br i1 %208, label %229, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %207, i64 0, i32 2, i32 0, i32 0
  %211 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %210, align 8
  %212 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %211, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %209
  %214 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %211 to i64
  %215 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %207, i64 0, i32 2, i32 0, i32 1
  %216 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %215 to i64*
  store i64 %214, i64* %216, align 8
  %217 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %211 to i8*
  call void @_ZdlPv(i8* %217) #8
  br label %218

218:                                              ; preds = %213, %209
  %219 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %207, i64 0, i32 1
  %220 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %227

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %226) #8
  br label %227

227:                                              ; preds = %224, %218
  %228 = bitcast %"class.dawn_native::ErrorData"* %207 to i8*
  call void @_ZdlPv(i8* %228) #8
  br label %229

229:                                              ; preds = %204, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  br label %374

230:                                              ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  %231 = bitcast %"class.std::__1::map.409"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #9
  %232 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %7, i64 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %235 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %236 = bitcast %"class.std::__1::__tree_node_base"** %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %236, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %235, %"class.std::__1::__tree_end_node"** %232, align 8
  %237 = call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingCountEv(%"class.dawn_native::BindGroupLayoutBase"* %12) #9
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %230
  %240 = bitcast %"class.std::__1::map.409"* %7 to i64*
  br label %246

241:                                              ; preds = %230
  %242 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %243 = bitcast %"class.std::__1::__tree_end_node"* %235 to %"class.std::__1::__tree_node.446"**
  %244 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %245 = bitcast %"class.std::__1::map.409"* %7 to i64*
  br label %285

246:                                              ; preds = %365, %239
  %247 = phi i64* [ %240, %239 ], [ %245, %365 ]
  %248 = bitcast %"class.std::__1::map.409"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248)
  %249 = call i8* @_Znwm(i64 120) #8
  %250 = bitcast i8* %249 to %"class.dawn_native::vulkan::DescriptorSetAllocator"*
  %251 = load i64, i64* %247, align 8
  %252 = bitcast %"class.std::__1::map.409"* %3 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %3, i64 0, i32 0, i32 1
  %254 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %7, i64 0, i32 0, i32 1
  %255 = bitcast %"class.std::__1::__compressed_pair.411"* %254 to i64*
  %256 = bitcast %"class.std::__1::__compressed_pair.411"* %253 to i64*
  %257 = load i64, i64* %255, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %259 = load i64, i64* %234, align 8
  store i64 %259, i64* %258, align 8
  %260 = icmp eq i64 %259, 0
  %261 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %260, label %262, label %264

262:                                              ; preds = %246
  %263 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %3, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %261, %"class.std::__1::__tree_end_node"** %263, align 8
  br label %268

264:                                              ; preds = %246
  %265 = inttoptr i64 %257 to %"class.std::__1::__tree_node_base"*
  %266 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %265, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %261, %"class.std::__1::__tree_end_node"** %266, align 8
  store %"class.std::__1::__tree_end_node"* %235, %"class.std::__1::__tree_end_node"** %232, align 8
  %267 = bitcast %"class.std::__1::__tree_end_node"* %235 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 16, i1 false) #9
  br label %268

268:                                              ; preds = %262, %264
  call void @_ZN11dawn_native6vulkan22DescriptorSetAllocatorC1EPNS0_15BindGroupLayoutENSt3__13mapI16VkDescriptorTypejNS4_4lessIS6_EENS4_9allocatorINS4_4pairIKS6_jEEEEEE(%"class.dawn_native::vulkan::DescriptorSetAllocator"* nonnull %250, %"class.dawn_native::vulkan::BindGroupLayout"* %1, %"class.std::__1::map.409"* nonnull %3) #9
  %269 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %3, i64 0, i32 0
  %270 = bitcast %"class.std::__1::__tree_end_node"* %261 to %"class.std::__1::__tree_node.446"**
  %271 = load %"class.std::__1::__tree_node.446"*, %"class.std::__1::__tree_node.446"** %270, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.410"* nonnull %269, %"class.std::__1::__tree_node.446"* %271) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248)
  %272 = ptrtoint i8* %249 to i64
  %273 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 3
  %274 = getelementptr inbounds %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.328"* %273, i64 0, i32 0, i32 0, i32 0
  %275 = load %"class.dawn_native::vulkan::DescriptorSetAllocator"*, %"class.dawn_native::vulkan::DescriptorSetAllocator"** %274, align 8
  %276 = bitcast %"class.std::__1::unique_ptr.328"* %273 to i64*
  store i64 %272, i64* %276, align 8
  %277 = icmp eq %"class.dawn_native::vulkan::DescriptorSetAllocator"* %275, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %268
  call void @_ZN11dawn_native6vulkan22DescriptorSetAllocatorD1Ev(%"class.dawn_native::vulkan::DescriptorSetAllocator"* nonnull %275) #9
  %279 = bitcast %"class.dawn_native::vulkan::DescriptorSetAllocator"* %275 to i8*
  call void @_ZdlPv(i8* %279) #8
  br label %280

280:                                              ; preds = %278, %268
  %281 = bitcast %class.Result.381* %0 to i64*
  store i64 0, i64* %281, align 8
  %282 = getelementptr inbounds %"class.std::__1::map.409", %"class.std::__1::map.409"* %7, i64 0, i32 0
  %283 = bitcast %"class.std::__1::__tree_end_node"* %235 to %"class.std::__1::__tree_node.446"**
  %284 = load %"class.std::__1::__tree_node.446"*, %"class.std::__1::__tree_node.446"** %283, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.410"* nonnull %282, %"class.std::__1::__tree_node.446"* %284) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #9
  br label %374

285:                                              ; preds = %241, %365
  %286 = phi i64 [ 0, %241 ], [ %370, %365 ]
  %287 = load %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"** %242, align 8
  %288 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %287, i64 %286, i32 2
  %289 = load i32, i32* %288, align 8
  switch i32 %289, label %305 [
    i32 0, label %290
    i32 1, label %306
    i32 2, label %303
    i32 3, label %304
  ]

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %287, i64 %286, i32 3, i32 1
  %292 = load i32, i32* %291, align 8
  switch i32 %292, label %306 [
    i32 1, label %293
    i32 2, label %298
    i32 3, label %298
  ]

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %287, i64 %286, i32 3, i32 2
  %295 = load i8, i8* %294, align 4, !range !2
  %296 = icmp eq i8 %295, 0
  %297 = select i1 %296, i32 6, i32 8
  br label %306

298:                                              ; preds = %290, %290
  %299 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %287, i64 %286, i32 3, i32 2
  %300 = load i8, i8* %299, align 4, !range !2
  %301 = icmp eq i8 %300, 0
  %302 = select i1 %301, i32 7, i32 9
  br label %306

303:                                              ; preds = %285
  br label %306

304:                                              ; preds = %285
  br label %306

305:                                              ; preds = %285
  unreachable

306:                                              ; preds = %285, %290, %293, %298, %303, %304
  %307 = phi i32 [ %289, %304 ], [ %289, %303 ], [ %297, %293 ], [ %302, %298 ], [ 0, %290 ], [ 0, %285 ]
  %308 = load %"class.std::__1::__tree_node.446"*, %"class.std::__1::__tree_node.446"** %243, align 8
  %309 = icmp eq %"class.std::__1::__tree_node.446"* %308, null
  br i1 %309, label %336, label %310

310:                                              ; preds = %306, %332
  %311 = phi %"class.std::__1::__tree_node.446"* [ %335, %332 ], [ %308, %306 ]
  %312 = phi %"class.std::__1::__tree_node_base"** [ %334, %332 ], [ %233, %306 ]
  %313 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %311, i64 0, i32 1, i32 0, i32 0
  %314 = load i32, i32* %313, align 4
  %315 = icmp slt i32 %307, %314
  br i1 %315, label %316, label %322

316:                                              ; preds = %310
  %317 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %311, i64 0, i32 0, i32 0, i32 0
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %317, align 8
  %319 = icmp eq %"class.std::__1::__tree_node_base"* %318, null
  br i1 %319, label %320, label %332

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %311, i64 0, i32 0, i32 0
  br label %336

322:                                              ; preds = %310
  %323 = icmp slt i32 %314, %307
  br i1 %323, label %324, label %330

324:                                              ; preds = %322
  %325 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %311, i64 0, i32 0, i32 1
  %326 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %325, align 8
  %327 = icmp eq %"class.std::__1::__tree_node_base"* %326, null
  br i1 %327, label %328, label %332

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %311, i64 0, i32 0, i32 0
  br label %336

330:                                              ; preds = %322
  %331 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %311, i64 0, i32 0, i32 0
  br label %336

332:                                              ; preds = %324, %316
  %333 = phi %"class.std::__1::__tree_node_base"* [ %318, %316 ], [ %326, %324 ]
  %334 = phi %"class.std::__1::__tree_node_base"** [ %317, %316 ], [ %325, %324 ]
  %335 = bitcast %"class.std::__1::__tree_node_base"* %333 to %"class.std::__1::__tree_node.446"*
  br label %310

336:                                              ; preds = %306, %330, %328, %320
  %337 = phi %"class.std::__1::__tree_end_node"* [ %321, %320 ], [ %329, %328 ], [ %331, %330 ], [ %235, %306 ]
  %338 = phi %"class.std::__1::__tree_node_base"** [ %317, %320 ], [ %325, %328 ], [ %312, %330 ], [ %244, %306 ]
  %339 = bitcast %"class.std::__1::__tree_node_base"** %338 to %"class.std::__1::__tree_node.446"**
  %340 = load %"class.std::__1::__tree_node.446"*, %"class.std::__1::__tree_node.446"** %339, align 8
  %341 = icmp eq %"class.std::__1::__tree_node.446"* %340, null
  br i1 %341, label %342, label %365

342:                                              ; preds = %336
  %343 = call i8* @_Znwm(i64 40) #8, !noalias !7
  %344 = getelementptr inbounds i8, i8* %343, i64 28
  %345 = bitcast i8* %344 to i32*
  store i32 %307, i32* %345, align 4, !noalias !7
  %346 = getelementptr inbounds i8, i8* %343, i64 32
  %347 = bitcast i8* %346 to i32*
  store i32 0, i32* %347, align 4, !noalias !7
  %348 = bitcast i8* %343 to %"class.std::__1::__tree_node.446"*
  %349 = bitcast i8* %343 to %"class.std::__1::__tree_node_base"*
  %350 = getelementptr inbounds i8, i8* %343, i64 16
  %351 = bitcast i8* %350 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %343, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %351, align 8
  %352 = bitcast %"class.std::__1::__tree_node_base"** %338 to i8**
  store i8* %343, i8** %352, align 8
  %353 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %232, align 8
  %354 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %353, i64 0, i32 0
  %355 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %354, align 8
  %356 = icmp eq %"class.std::__1::__tree_node_base"* %355, null
  br i1 %356, label %360, label %357

357:                                              ; preds = %342
  %358 = ptrtoint %"class.std::__1::__tree_node_base"* %355 to i64
  store i64 %358, i64* %245, align 8
  %359 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %338, align 8
  br label %360

360:                                              ; preds = %357, %342
  %361 = phi %"class.std::__1::__tree_node_base"* [ %349, %342 ], [ %359, %357 ]
  %362 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %233, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %362, %"class.std::__1::__tree_node_base"* %361) #9
  %363 = load i64, i64* %234, align 8
  %364 = add i64 %363, 1
  store i64 %364, i64* %234, align 8
  br label %365

365:                                              ; preds = %336, %360
  %366 = phi %"class.std::__1::__tree_node.446"* [ %348, %360 ], [ %340, %336 ]
  %367 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %366, i64 0, i32 1, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = add i32 %368, 1
  store i32 %369, i32* %367, align 4
  %370 = add nuw nsw i64 %286, 1
  %371 = call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingCountEv(%"class.dawn_native::BindGroupLayoutBase"* %12) #9
  %372 = zext i32 %371 to i64
  %373 = icmp ult i64 %370, %372
  br i1 %373, label %285, label %246

374:                                              ; preds = %229, %280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #9
  %375 = load %struct.VkDescriptorSetLayoutBinding*, %struct.VkDescriptorSetLayoutBinding** %9, align 8
  %376 = icmp eq %struct.VkDescriptorSetLayoutBinding* %375, null
  br i1 %376, label %380, label %377

377:                                              ; preds = %374
  %378 = ptrtoint %struct.VkDescriptorSetLayoutBinding* %375 to i64
  store i64 %378, i64* %45, align 8
  %379 = bitcast %struct.VkDescriptorSetLayoutBinding* %375 to i8*
  call void @_ZdlPv(i8* %379) #8
  br label %380

380:                                              ; preds = %374, %377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingCountEv(%"class.dawn_native::BindGroupLayoutBase"*) local_unnamed_addr #4

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::map"* @_ZNK11dawn_native19BindGroupLayoutBase13GetBindingMapEv(%"class.dawn_native::BindGroupLayoutBase"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.381* sret, i32, i8*) local_unnamed_addr #4

declare %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayoutC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::vulkan::BindGroupLayout"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native19BindGroupLayoutBaseC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::BindGroupLayoutBase"* %4, %"class.dawn_native::DeviceBase"* %1, %"struct.dawn_native::BindGroupLayoutDescriptor"* %2) #9
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan15BindGroupLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 1, i32 0
  store %struct.VkDescriptorSetLayout_T* null, %struct.VkDescriptorSetLayout_T** %6, align 8
  %7 = tail call i64 @_ZNK11dawn_native19BindGroupLayoutBase18GetBindingDataSizeEv(%"class.dawn_native::BindGroupLayoutBase"* %4) #9, !noalias !10
  %8 = trunc i64 %7 to i32
  %9 = add i32 %8, 96
  %10 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 2, i32 0
  %11 = udiv i32 4096, %9
  %12 = trunc i32 %11 to i16
  tail call void @_ZN17SlabAllocatorImplC2Etjj(%class.SlabAllocatorImpl* %10, i16 zeroext %12, i32 %9, i32 8) #9
  %13 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 3
  %14 = bitcast %"class.std::__1::unique_ptr.328"* %13 to i64*
  store i64 0, i64* %14, align 8
  ret void
}

declare void @_ZN11dawn_native19BindGroupLayoutBaseC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::BindGroupLayoutBase"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayoutD2Ev(%"class.dawn_native::vulkan::BindGroupLayout"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan15BindGroupLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %3) #9
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.327", %"class.dawn_native::vulkan::detail::VkHandle.327"* %5, i64 0, i32 0
  %7 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %6, align 8
  %8 = icmp eq %struct.VkDescriptorSetLayout_T* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.dawn_native::DeviceBase"* %4 to %"class.dawn_native::vulkan::Device"*
  %11 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %4, i64 1, i32 18, i32 0, i64 9, i32 6, i32 0, i64 2, i32 0, i32 1
  %12 = bitcast i32* %11 to void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)**
  %13 = load void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)** %12, align 8
  %14 = tail call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %10) #9
  %15 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %6, align 8
  tail call void %13(%struct.VkDevice_T* %14, %struct.VkDescriptorSetLayout_T* %15, %struct.VkAllocationCallbacks* null) #9
  %16 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.327"* %5 to i64*
  store i64 0, i64* %16, align 8
  br label %17

17:                                               ; preds = %1, %9
  %18 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.dawn_native::vulkan::DescriptorSetAllocator"*, %"class.dawn_native::vulkan::DescriptorSetAllocator"** %18, align 8
  store %"class.dawn_native::vulkan::DescriptorSetAllocator"* null, %"class.dawn_native::vulkan::DescriptorSetAllocator"** %18, align 8
  %20 = icmp eq %"class.dawn_native::vulkan::DescriptorSetAllocator"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN11dawn_native6vulkan22DescriptorSetAllocatorD1Ev(%"class.dawn_native::vulkan::DescriptorSetAllocator"* nonnull %19) #9
  %22 = bitcast %"class.dawn_native::vulkan::DescriptorSetAllocator"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #8
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN17SlabAllocatorImplD2Ev(%class.SlabAllocatorImpl* %24) #9
  %25 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native19BindGroupLayoutBaseD2Ev(%"class.dawn_native::BindGroupLayoutBase"* %25) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17SlabAllocatorImplD2Ev(%class.SlabAllocatorImpl*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN11dawn_native19BindGroupLayoutBaseD2Ev(%"class.dawn_native::BindGroupLayoutBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayoutD0Ev(%"class.dawn_native::vulkan::BindGroupLayout"*) unnamed_addr #1 align 2 {
  tail call void @_ZN11dawn_native6vulkan15BindGroupLayoutD2Ev(%"class.dawn_native::vulkan::BindGroupLayout"* %0) #9
  %2 = bitcast %"class.dawn_native::vulkan::BindGroupLayout"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkDescriptorSetLayout_T* @_ZNK11dawn_native6vulkan15BindGroupLayout9GetHandleEv(%"class.dawn_native::vulkan::BindGroupLayout"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 1, i32 0
  %3 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %2, align 8
  ret %struct.VkDescriptorSetLayout_T* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayout17AllocateBindGroupEPNS0_6DeviceEPKNS_19BindGroupDescriptorE(%class.Result.433* noalias nocapture sret, %"class.dawn_native::vulkan::BindGroupLayout"*, %"class.dawn_native::vulkan::Device"*, %"struct.dawn_native::BindGroupDescriptor"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.Result.434, align 8
  %6 = bitcast %class.Result.434* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.dawn_native::vulkan::DescriptorSetAllocator"*, %"class.dawn_native::vulkan::DescriptorSetAllocator"** %7, align 8
  call void @_ZN11dawn_native6vulkan22DescriptorSetAllocator8AllocateEv(%class.Result.434* nonnull sret %5, %"class.dawn_native::vulkan::DescriptorSetAllocator"* %8) #9
  %9 = getelementptr inbounds %class.Result.434, %class.Result.434* %5, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  store i32 2, i32* %9, align 8
  br i1 %11, label %12, label %41, !prof !13

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.Result.434, %class.Result.434* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %13, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %13, align 8
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %14, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6vulkan15BindGroupLayout17AllocateBindGroupEPNS0_6DeviceEPKNS_19BindGroupDescriptorE, i64 0, i64 0), i32 168) #9
  %15 = getelementptr inbounds %class.Result.433, %class.Result.433* %0, i64 0, i32 0
  %16 = bitcast %"class.dawn_native::ErrorData"* %14 to i8*
  %17 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* %16, i32 1) #9
  store i64 %17, i64* %15, align 8
  %18 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %13, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %13, align 8
  %19 = icmp eq %"class.dawn_native::ErrorData"* %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %18, i64 0, i32 2, i32 0, i32 0
  %22 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %21, align 8
  %23 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %22 to i64
  %26 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %18, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %22 to i8*
  call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %18, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #8
  br label %38

38:                                               ; preds = %35, %29
  %39 = bitcast %"class.dawn_native::ErrorData"* %18 to i8*
  call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %12, %38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  br label %78

41:                                               ; preds = %4
  %42 = getelementptr inbounds %class.Result.434, %class.Result.434* %5, i64 0, i32 2, i32 0, i32 0
  %43 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %42, align 8
  %44 = getelementptr inbounds %class.Result.434, %class.Result.434* %5, i64 0, i32 2, i32 1
  %45 = bitcast i32* %44 to i48*
  %46 = load i48, i48* %45, align 8
  %47 = zext i48 %46 to i64
  %48 = or i64 %47, -6149102341220990976
  %49 = getelementptr inbounds %class.Result.434, %class.Result.434* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %49, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %49, align 8
  %51 = icmp eq %"class.dawn_native::ErrorData"* %50, null
  br i1 %51, label %72, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %50, i64 0, i32 2, i32 0, i32 0
  %54 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %53, align 8
  %55 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %54 to i64
  %58 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %50, i64 0, i32 2, i32 0, i32 1
  %59 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %54 to i8*
  call void @_ZdlPv(i8* %60) #8
  br label %61

61:                                               ; preds = %56, %52
  %62 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %50, i64 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #8
  br label %70

70:                                               ; preds = %67, %61
  %71 = bitcast %"class.dawn_native::ErrorData"* %50 to i8*
  call void @_ZdlPv(i8* %71) #8
  br label %72

72:                                               ; preds = %70, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  %73 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %1, i64 0, i32 2, i32 0
  %74 = call i8* @_ZN17SlabAllocatorImpl8AllocateEv(%class.SlabAllocatorImpl* %73) #9
  %75 = bitcast i8* %74 to %"class.dawn_native::vulkan::BindGroup"*
  call void @_ZN11dawn_native6vulkan9BindGroupC1EPNS0_6DeviceEPKNS_19BindGroupDescriptorENS0_23DescriptorSetAllocationE(%"class.dawn_native::vulkan::BindGroup"* %75, %"class.dawn_native::vulkan::Device"* %2, %"struct.dawn_native::BindGroupDescriptor"* %3, %struct.VkDescriptorSet_T* %43, i64 %48) #9
  %76 = getelementptr inbounds %class.Result.433, %class.Result.433* %0, i64 0, i32 0
  %77 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* %74, i32 0) #9
  store i64 %77, i64* %76, align 8
  br label %78

78:                                               ; preds = %40, %72
  ret void
}

declare void @_ZN11dawn_native6vulkan22DescriptorSetAllocator8AllocateEv(%class.Result.434* sret, %"class.dawn_native::vulkan::DescriptorSetAllocator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayout19DeallocateBindGroupEPNS0_9BindGroupEPNS0_23DescriptorSetAllocationE(%"class.dawn_native::vulkan::BindGroupLayout"*, %"class.dawn_native::vulkan::BindGroup"*, %"struct.dawn_native::vulkan::DescriptorSetAllocation"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.dawn_native::vulkan::DescriptorSetAllocator"*, %"class.dawn_native::vulkan::DescriptorSetAllocator"** %4, align 8
  tail call void @_ZN11dawn_native6vulkan22DescriptorSetAllocator10DeallocateEPNS0_23DescriptorSetAllocationE(%"class.dawn_native::vulkan::DescriptorSetAllocator"* %5, %"struct.dawn_native::vulkan::DescriptorSetAllocation"* %2) #9
  %6 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 2, i32 0
  %7 = bitcast %"class.dawn_native::vulkan::BindGroup"* %1 to i8*
  tail call void @_ZN17SlabAllocatorImpl10DeallocateEPv(%class.SlabAllocatorImpl* %6, i8* %7) #9
  ret void
}

declare void @_ZN11dawn_native6vulkan22DescriptorSetAllocator10DeallocateEPNS0_23DescriptorSetAllocationE(%"class.dawn_native::vulkan::DescriptorSetAllocator"*, %"struct.dawn_native::vulkan::DescriptorSetAllocation"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15BindGroupLayout18FinishDeallocationEm(%"class.dawn_native::vulkan::BindGroupLayout"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::BindGroupLayout", %"class.dawn_native::vulkan::BindGroupLayout"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.dawn_native::vulkan::DescriptorSetAllocator"*, %"class.dawn_native::vulkan::DescriptorSetAllocator"** %3, align 8
  tail call void @_ZN11dawn_native6vulkan22DescriptorSetAllocator18FinishDeallocationEm(%"class.dawn_native::vulkan::DescriptorSetAllocator"* %4, i64 %1) #9
  ret void
}

declare void @_ZN11dawn_native6vulkan22DescriptorSetAllocator18FinishDeallocationEm(%"class.dawn_native::vulkan::DescriptorSetAllocator"*, i64) local_unnamed_addr #4

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #4

declare i64 @_ZN11dawn_native19BindGroupLayoutBase18ComputeContentHashEv(%"class.dawn_native::BindGroupLayoutBase"*) unnamed_addr #4

declare void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #4

declare i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.410"*, %"class.std::__1::__tree_node.446"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.446"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.446"* %1 to %"class.std::__1::__tree_node.446"**
  %6 = load %"class.std::__1::__tree_node.446"*, %"class.std::__1::__tree_node.446"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.410"* %0, %"class.std::__1::__tree_node.446"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.446", %"class.std::__1::__tree_node.446"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.446"**
  %9 = load %"class.std::__1::__tree_node.446"*, %"class.std::__1::__tree_node.446"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.410"* %0, %"class.std::__1::__tree_node.446"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node.446"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN11dawn_native6vulkan22DescriptorSetAllocatorC1EPNS0_15BindGroupLayoutENSt3__13mapI16VkDescriptorTypejNS4_4lessIS6_EENS4_9allocatorINS4_4pairIKS6_jEEEEEE(%"class.dawn_native::vulkan::DescriptorSetAllocator"*, %"class.dawn_native::vulkan::BindGroupLayout"*, %"class.std::__1::map.409"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11dawn_native6vulkan22DescriptorSetAllocatorD1Ev(%"class.dawn_native::vulkan::DescriptorSetAllocator"*) unnamed_addr #5

declare i64 @_ZNK11dawn_native19BindGroupLayoutBase18GetBindingDataSizeEv(%"class.dawn_native::BindGroupLayoutBase"*) local_unnamed_addr #4

declare void @_ZN17SlabAllocatorImplC2Etjj(%class.SlabAllocatorImpl*, i16 zeroext, i32, i32) unnamed_addr #4

declare i8* @_ZN17SlabAllocatorImpl8AllocateEv(%class.SlabAllocatorImpl*) local_unnamed_addr #4

declare void @_ZN11dawn_native6vulkan9BindGroupC1EPNS0_6DeviceEPKNS_19BindGroupDescriptorENS0_23DescriptorSetAllocationE(%"class.dawn_native::vulkan::BindGroup"*, %"class.dawn_native::vulkan::Device"*, %"struct.dawn_native::BindGroupDescriptor"*, %struct.VkDescriptorSet_T*, i64) unnamed_addr #4

declare void @_ZN17SlabAllocatorImpl10DeallocateEPv(%class.SlabAllocatorImpl*, i8*) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN11dawn_native19BindGroupLayoutBase30MakeFrontendBindGroupAllocatorINS_6vulkan9BindGroupEEE13SlabAllocatorIT_Em: argument 0"}
!5 = distinct !{!5, !"_ZN11dawn_native19BindGroupLayoutBase30MakeFrontendBindGroupAllocatorINS_6vulkan9BindGroupEEE13SlabAllocatorIT_Em"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeI16VkDescriptorTypejEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN11dawn_native19BindGroupLayoutBase30MakeFrontendBindGroupAllocatorINS_6vulkan9BindGroupEEE13SlabAllocatorIT_Em: argument 0"}
!12 = distinct !{!12, !"_ZN11dawn_native19BindGroupLayoutBase30MakeFrontendBindGroupAllocatorINS_6vulkan9BindGroupEEE13SlabAllocatorIT_Em"}
!13 = !{!"branch_weights", i32 1, i32 2000}
