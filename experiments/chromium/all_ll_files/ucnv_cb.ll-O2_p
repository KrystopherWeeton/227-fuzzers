; ModuleID = '../../third_party/icu/source/common/ucnv_cb.cpp'
source_filename = "../../third_party/icu/source/common/ucnv_cb.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%struct.UConverter = type { void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, i8*, i8*, i8*, i8*, %struct.UConverterSharedData*, i32, i8, i8, i8, i8, i8, [7 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [32 x i8], [2 x i16], [2 x i16], [32 x i16], i32, [19 x i16], [31 x i8], i8, i8, i8, i32 }
%struct.UConverterToUnicodeArgs = type { i16, i8, %struct.UConverter*, i8*, i8*, i16*, i16*, i32* }
%struct.UConverterSharedData = type { i32, i32, i8*, %struct.UConverterStaticData*, i8, i8, %struct.UConverterImpl*, i32, %struct.UConverterMBCSTable }
%struct.UConverterStaticData = type { i32, [60 x i8], i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }
%struct.UConverterImpl = type { i32, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)*, void (%struct.UConverterSharedData*)*, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)*, void (%struct.UConverter*)*, void (%struct.UConverter*, i32)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, i32 (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverter*, i8*, i32*)*, i8* (%struct.UConverter*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* }
%struct.UConverterLoadArgs = type { i32, i32, i8, i8, i16, i32, i8*, i8*, i8* }
%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.UConverterMBCSTable = type { i8, i8, i8, i32, [256 x i32]*, [256 x i32]*, i16*, %struct._MBCSToUFallback*, i16*, i16*, [64 x i16], i8*, i8*, i32, i8, i8, i8, i16, i32, i8*, i8*, %struct.UConverterSharedData*, i32* }
%struct._MBCSToUFallback = type { i32, i32 }

@_ZZ21ucnv_cbToUWriteSub_69E16kSubstituteChar1 = internal constant i16 26, align 2
@_ZZ21ucnv_cbToUWriteSub_69E15kSubstituteChar = internal constant i16 -3, align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_cbFromUWriteBytes_69(%struct.UConverterFromUnicodeArgs*, i8*, i32, i32, i32*) local_unnamed_addr #0 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 2
  %10 = load %struct.UConverter*, %struct.UConverter** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 5
  %12 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 6
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 7
  tail call void @ucnv_fromUWriteBytes_69(%struct.UConverter* %10, i8* %1, i32 %2, i8** %11, i8* %13, i32** %14, i32 %3, i32* %4) #3
  br label %15

15:                                               ; preds = %5, %8
  ret void
}

declare void @ucnv_fromUWriteBytes_69(%struct.UConverter*, i8*, i32, i8**, i8*, i32**, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_cbFromUWriteUChars_69(%struct.UConverterFromUnicodeArgs*, i16**, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %66

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 5
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 2
  %14 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %15 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 6
  %16 = load i8*, i8** %15, align 8
  tail call void @ucnv_fromUnicode_69(%struct.UConverter* %14, i8** %11, i8* %16, i16** %1, i16* %2, i32* null, i8 signext 0, i32* %4) #3
  %17 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 7
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %35, label %20

20:                                               ; preds = %10
  %21 = load i8*, i8** %11, align 8
  %22 = icmp eq i8* %21, %12
  br i1 %22, label %35, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds i32, i32* %18, i64 1
  store i32* %24, i32** %17, align 8
  store i32 %3, i32* %18, align 4
  %25 = getelementptr inbounds i8, i8* %12, i64 1
  %26 = load i8*, i8** %11, align 8
  %27 = icmp eq i8* %26, %25
  br i1 %27, label %35, label %28

28:                                               ; preds = %23, %28
  %29 = phi i8* [ %32, %28 ], [ %25, %23 ]
  %30 = load i32*, i32** %17, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  store i32* %31, i32** %17, align 8
  store i32 %3, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %29, i64 1
  %33 = load i8*, i8** %11, align 8
  %34 = icmp eq i8* %33, %32
  br i1 %34, label %35, label %28

35:                                               ; preds = %28, %23, %20, %10
  %36 = load i32, i32* %4, align 4
  %37 = icmp eq i32 %36, 15
  br i1 %37, label %38, label %66

38:                                               ; preds = %35
  %39 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #3
  %40 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #3
  store i32 0, i32* %7, align 4
  %41 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %42 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %41, i64 0, i32 21
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i64
  %45 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %41, i64 0, i32 27, i64 %44
  store i8* %45, i8** %6, align 8
  %46 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %41, i64 0, i32 27, i64 32
  %47 = icmp sgt i8 %43, 31
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  store i32 5, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #3
  br label %66

49:                                               ; preds = %38
  store i8 0, i8* %42, align 1
  %50 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  call void @ucnv_fromUnicode_69(%struct.UConverter* %50, i8** nonnull %6, i8* %46, i16** %1, i16* %2, i32* null, i8 signext 0, i32* nonnull %7) #3
  %51 = bitcast i8** %6 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %54 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 27, i64 0
  %55 = ptrtoint i8* %54 to i64
  %56 = sub i64 %52, %55
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %53, i64 0, i32 21
  store i8 %57, i8* %58, align 1
  %59 = inttoptr i64 %52 to i8*
  %60 = icmp ule i8* %46, %59
  %61 = load i32, i32* %7, align 4
  %62 = icmp eq i32 %61, 15
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %49
  store i32 5, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #3
  br label %66

65:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #3
  br label %66

66:                                               ; preds = %35, %65, %64, %48, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @ucnv_fromUnicode_69(%struct.UConverter*, i8**, i8*, i16**, i16*, i32*, i8 signext, i32*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_cbFromUWriteSub_69(%struct.UConverterFromUnicodeArgs*, i32, i32*) local_unnamed_addr #0 {
  %4 = alloca i16*, align 8
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 2
  %9 = load %struct.UConverter*, %struct.UConverter** %8, align 8
  %10 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %9, i64 0, i32 19
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp eq i8 %11, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %7
  %15 = icmp slt i8 %11, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #3
  %18 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %9, i64 0, i32 5
  %19 = bitcast i8** %18 to i16**
  %20 = load i16*, i16** %19, align 8
  store i16* %20, i16** %4, align 8
  %21 = sext i8 %11 to i64
  %22 = sub nsw i64 0, %21
  %23 = getelementptr inbounds i16, i16* %20, i64 %22
  call void @ucnv_cbFromUWriteUChars_69(%struct.UConverterFromUnicodeArgs* %0, i16** nonnull %4, i16* %23, i32 %1, i32* %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #3
  br label %53

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %9, i64 0, i32 6
  %26 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %25, align 8
  %27 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %26, i64 0, i32 6
  %28 = load %struct.UConverterImpl*, %struct.UConverterImpl** %27, align 8
  %29 = getelementptr inbounds %struct.UConverterImpl, %struct.UConverterImpl* %28, i64 0, i32 13
  %30 = load void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)** %29, align 8
  %31 = icmp eq void (%struct.UConverterFromUnicodeArgs*, i32, i32*)* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %24
  tail call void %30(%struct.UConverterFromUnicodeArgs* %0, i32 %1, i32* %2) #3
  br label %53

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %9, i64 0, i32 24
  %35 = load i8, i8* %34, align 2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %9, i64 0, i32 29, i64 0
  %39 = load i16, i16* %38, align 4
  %40 = icmp ult i16 %39, 256
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 5
  %43 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 6
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 7
  tail call void @ucnv_fromUWriteBytes_69(%struct.UConverter* %9, i8* %34, i32 1, i8** %42, i8* %44, i32** %45, i32 %1, i32* %2) #3
  br label %53

46:                                               ; preds = %37, %33
  %47 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %9, i64 0, i32 5
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 5
  %50 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 6
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 7
  tail call void @ucnv_fromUWriteBytes_69(%struct.UConverter* %9, i8* %48, i32 %12, i8** %49, i8* %51, i32** %52, i32 %1, i32* %2) #3
  br label %53

53:                                               ; preds = %46, %41, %32, %7, %3, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_cbToUWriteUChars_69(%struct.UConverterToUnicodeArgs*, i16*, i32, i32, i32*) local_unnamed_addr #0 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 2
  %10 = load %struct.UConverter*, %struct.UConverter** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 5
  %12 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 6
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 7
  tail call void @ucnv_toUWriteUChars_69(%struct.UConverter* %10, i16* %1, i32 %2, i16** %11, i16* %13, i32** %14, i32 %3, i32* %4) #3
  br label %15

15:                                               ; preds = %5, %8
  ret void
}

declare void @ucnv_toUWriteUChars_69(%struct.UConverter*, i16*, i32, i16**, i16*, i32**, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_cbToUWriteSub_69(%struct.UConverterToUnicodeArgs*, i32, i32*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 2
  %5 = load %struct.UConverter*, %struct.UConverter** %4, align 8
  %6 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %5, i64 0, i32 20
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %5, i64 0, i32 24
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = load i32, i32* %2, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 5
  %18 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 6
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 7
  tail call void @ucnv_toUWriteUChars_69(%struct.UConverter* %5, i16* nonnull @_ZZ21ucnv_cbToUWriteSub_69E16kSubstituteChar1, i32 1, i16** %17, i16* %19, i32** %20, i32 %1, i32* %2) #3
  br label %29

21:                                               ; preds = %9, %3
  %22 = load i32, i32* %2, align 4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 5
  %26 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 6
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 7
  tail call void @ucnv_toUWriteUChars_69(%struct.UConverter* %5, i16* nonnull @_ZZ21ucnv_cbToUWriteSub_69E15kSubstituteChar, i32 1, i16** %25, i16* %27, i32** %28, i32 %1, i32* %2) #3
  br label %29

29:                                               ; preds = %24, %21, %16, %13
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
