; ModuleID = '../../ui/aura/env.cc'
source_filename = "../../ui/aura/env.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.aura::Env" = type { %"class.ui::EventTarget", %"class.base::SupportsUserData.base", [7 x i8], %"class.base::ObserverList", %"class.base::ObserverList.23", %"class.base::ObserverList.27", %"class.std::__1::set", %"class.std::__1::unique_ptr", i32, %"class.gfx::Point", i8, %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.ui::ContextFactory"*, i8, %"class.std::__1::unique_ptr.92", %"class.std::__1::vector.147" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.ui::EventHandler"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.16", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.18" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.23" = type <{ %"class.std::__1::vector.16", %"class.base::LinkedList.24", i64, i32, [4 x i8] }>
%"class.base::LinkedList.24" = type { %"class.base::LinkNode.25" }
%"class.base::LinkNode.25" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.27" = type <{ %"class.std::__1::vector.28", %"class.base::LinkedList.41", i64, i32, [4 x i8] }>
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.36" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i8 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.41" = type { %"class.base::LinkNode.42" }
%"class.base::LinkNode.42" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.aura::EnvInputStateController"* }
%"class.aura::EnvInputStateController" = type <{ %"class.aura::Env"*, i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.ui::GestureRecognizer"* }
%"class.ui::GestureRecognizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.ui::CursorFactory"* }
%"class.ui::CursorFactory" = type { i32 (...)**, %"class.base::ObserverList.65" }
%"class.base::ObserverList.65" = type <{ %"class.std::__1::vector.16", %"class.base::LinkedList.66", i64, i32, [4 x i8] }>
%"class.base::LinkedList.66" = type { %"class.base::LinkNode.67" }
%"class.base::LinkNode.67" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.aura::InputStateLookup"* }
%"class.aura::InputStateLookup" = type { i32 (...)** }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList.81", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.85" }
%"class.base::ObserverList.81" = type <{ %"class.std::__1::vector.16", %"class.base::LinkedList.82", i64, i32, [4 x i8] }>
%"class.base::LinkedList.82" = type { %"class.base::LinkNode.83" }
%"class.base::LinkNode.83" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.85" = type <{ %"class.std::__1::vector.16", %"class.base::LinkedList.86", i64, i32, [4 x i8] }>
%"class.base::LinkedList.86" = type { %"class.base::LinkNode.87" }
%"class.base::LinkNode.87" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::ContextFactory" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.aura::WindowOcclusionTracker"* }
%"class.aura::WindowOcclusionTracker" = type { %"class.ui::LayerAnimationObserver", %"class.aura::WindowObserver", %"class.aura::WindowTreeHostObserver", %"class.base::flat_map", %"class.base::flat_map.113", %"class.base::internal::flat_tree.123", %"class.base::internal::flat_tree.123", %"class.base::flat_map.131", i32, i32, i32, %"class.base::ScopedMultiSourceObservation", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.143", %"class.aura::Window"*, %"class.aura::NativeWindowOcclusionTracker" }
%"class.ui::LayerAnimationObserver" = type { i32 (...)**, %"class.std::__1::set.95" }
%"class.std::__1::set.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.aura::WindowTreeHostObserver" = type { i32 (...)** }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.106" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.113" = type { %"class.base::internal::flat_tree.114" }
%"class.base::internal::flat_tree.114" = type { %"class.std::__1::vector.115" }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"struct.std::__1::pair.117"*, %"struct.std::__1::pair.117"*, %"class.std::__1::__compressed_pair.118" }
%"struct.std::__1::pair.117" = type opaque
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::pair.117"* }
%"class.base::internal::flat_tree.123" = type { %"class.std::__1::vector.124" }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.aura::Window"** }
%"class.base::flat_map.131" = type { %"class.base::internal::flat_tree.132" }
%"class.base::internal::flat_tree.132" = type { %"class.std::__1::vector.133" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair.135"*, %"struct.std::__1::pair.135"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair.135" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair.135"* }
%"class.base::ScopedMultiSourceObservation" = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.124" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.141 }
%class.scoped_refptr.141 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.142", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.143" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.124", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.std::__1::vector.194", i32, i32, i32, [4 x i8], %"class.base::ObserverList.201", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.205", %"class.base::WeakPtr.211" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.154", %"class.ui::Layer"*, %"class.base::ObserverList.160" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.160" = type <{ %"class.std::__1::vector.16", %"class.base::LinkedList.161", i64, i32, [4 x i8] }>
%"class.base::LinkedList.161" = type { %"class.base::LinkNode.162" }
%"class.base::LinkNode.162" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.164" }
%"class.std::__1::map.164" = type { %"class.std::__1::__tree.165" }
%"class.std::__1::__tree.165" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.173" }
%"class.std::__1::map.173" = type { %"class.std::__1::__tree.174" }
%"class.std::__1::__tree.174" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.201" = type <{ %"class.std::__1::vector.28", %"class.base::LinkedList.202", i64, i32, [4 x i8] }>
%"class.base::LinkedList.202" = type { %"class.base::LinkNode.203" }
%"class.base::LinkNode.203" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.211" = type { %"class.base::internal::WeakPtrBase" }
%"class.aura::NativeWindowOcclusionTracker" = type { i32 (...)** }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"**, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.aura::WindowTreeHost"** }
%"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.aura::EnvObserver" = type { i32 (...)** }
%"class.std::__1::__tree_node.356" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::unique_ptr.228" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.aura::EventObserverAdapter"* }
%"class.aura::EventObserverAdapter" = type { %"class.ui::EventHandler", %"class.base::CheckedObserver", %"class.ui::EventObserver"*, %"class.ui::EventTarget"*, %"class.std::__1::set.218" }
%"class.ui::EventObserver" = type { i32 (...)** }
%"class.std::__1::set.218" = type { %"class.std::__1::__tree.219" }
%"class.std::__1::__tree.219" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"struct.ui::OzonePlatform::InitParams" = type { i8, i8, i8 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.326", %"class.std::__1::map.338", i64 }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.338" = type { %"class.std::__1::__tree.339" }
%"class.std::__1::__tree.339" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.aura::WindowEventDispatcherObserver" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.245" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.235", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.235" = type { %"class.base::internal::flat_tree.236" }
%"class.base::internal::flat_tree.236" = type { %"class.std::__1::vector.237" }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"struct.std::__1::pair.239"*, %"struct.std::__1::pair.239"*, %"class.std::__1::__compressed_pair.240" }
%"struct.std::__1::pair.239" = type opaque
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.std::__1::pair.239"* }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.base::flat_map.248"* }
%"class.base::flat_map.248" = type opaque
%"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode.252", i64, i64 }
%"class.base::internal::WeakLinkNode.252" = type { %"class.base::LinkNode.42", %"class.base::ObserverList.27"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.ui::GestureRecognizerImpl" = type { %"class.ui::GestureRecognizer", %"class.ui::GestureProviderAuraClient", %"class.std::__1::map.256", %"class.std::__1::map.267", %"class.std::__1::map.278", %"class.std::__1::vector.289" }
%"class.ui::GestureProviderAuraClient" = type { i32 (...)** }
%"class.std::__1::map.256" = type { %"class.std::__1::__tree.257" }
%"class.std::__1::__tree.257" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::map.267" = type { %"class.std::__1::__tree.268" }
%"class.std::__1::__tree.268" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::map.278" = type { %"class.std::__1::__tree.279" }
%"class.std::__1::__tree.279" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"class.ui::GestureEventHelper"**, %"class.ui::GestureEventHelper"**, %"class.std::__1::__compressed_pair.291" }
%"class.ui::GestureEventHelper" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.ui::GestureEventHelper"** }
%"class.ui::X11CursorFactory" = type { %"class.ui::CursorFactory", %"class.ui::CursorThemeManagerObserver", %"class.std::__1::unique_ptr.302", %"class.std::__1::map.308", %"class.base::ScopedObservation" }
%"class.ui::CursorThemeManagerObserver" = type { %"class.base::CheckedObserver" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.ui::XCursorLoader"* }
%"class.ui::XCursorLoader" = type opaque
%"class.std::__1::map.308" = type { %"class.std::__1::__tree.309" }
%"class.std::__1::__tree.309" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.base::ScopedObservation" = type { %"class.ui::CursorThemeManagerObserver"*, %"class.ui::CursorThemeManager"* }
%"class.ui::CursorThemeManager" = type { i32 (...)**, %"class.base::ObserverList.319" }
%"class.base::ObserverList.319" = type <{ %"class.std::__1::vector.28", %"class.base::LinkedList.320", i64, i32, [4 x i8] }>
%"class.base::LinkedList.320" = type { %"class.base::LinkNode.321" }
%"class.base::LinkNode.321" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTargetIterator" = type { i32 (...)** }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.ui::ScrollEvent" = type <{ %"class.ui::MouseEvent", float, float, float, float, i32, i32, i32, [4 x i8] }>
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"class.ui::GestureEvent" = type <{ %"class.ui::LocatedEvent", %"struct.ui::GestureEventDetails", i32, [4 x i8] }>
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon.369 }
%struct.anon.369 = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.ui::CancelModeEvent" = type { %"class.ui::Event" }

$_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_ = comdat any

$_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_ = comdat any

$_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN4aura20EventObserverAdapterC2EPN2ui13EventObserverEPNS1_11EventTargetERKNSt3__13setINS1_9EventTypeENS6_4lessIS8_EENS6_9allocatorIS8_EEEE = comdat any

$_ZN4aura20EventObserverAdapterD2Ev = comdat any

$_ZN4aura20EventObserverAdapterD0Ev = comdat any

$_ZN4aura20EventObserverAdapter7OnEventEPN2ui5EventE = comdat any

$_ZThn40_N4aura20EventObserverAdapterD1Ev = comdat any

$_ZThn40_N4aura20EventObserverAdapterD0Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE14__erase_uniqueIS6_EEmRKT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN4aura20EventObserverAdapterELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_ = comdat any

$_ZTVN4aura20EventObserverAdapterE = comdat any

@_ZTVN4aura3EnvE = hidden unnamed_addr constant { [10 x i8*], [4 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::Env"*)* @_ZN4aura3EnvD2Ev to i8*), i8* bitcast (void (%"class.aura::Env"*)* @_ZN4aura3EnvD0Ev to i8*), i8* bitcast (i1 (%"class.aura::Env"*, %"class.ui::Event"*)* @_ZN4aura3Env14CanAcceptEventERKN2ui5EventE to i8*), i8* bitcast (%"class.ui::EventTarget"* (%"class.aura::Env"*)* @_ZN4aura3Env15GetParentTargetEv to i8*), i8* bitcast (%"class.ui::EventTargetIterator"* (%"class.aura::Env"*)* @_ZNK4aura3Env16GetChildIteratorEv to i8*), i8* bitcast (%"class.ui::EventTargeter"* (%"class.aura::Env"*)* @_ZN4aura3Env16GetEventTargeterEv to i8*), i8* bitcast (void (%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)* @_ZNK2ui11EventTarget20ConvertEventToTargetEPKS0_PNS_12LocatedEventE to i8*), i8* bitcast (<2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)* @_ZNK2ui11EventTarget18GetScreenLocationFERKNS_12LocatedEventE to i8*)], [4 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%"class.aura::Env"*)* @_ZThn64_N4aura3EnvD1Ev to i8*), i8* bitcast (void (%"class.aura::Env"*)* @_ZThn64_N4aura3EnvD0Ev to i8*)] }, align 8
@_ZN4aura12_GLOBAL__N_118g_primary_instanceE = internal unnamed_addr global %"class.aura::Env"* null, align 8
@_ZN4aura3Env33initial_throttle_input_on_resize_E = hidden local_unnamed_addr global i8 1, align 1
@.str = private unnamed_addr constant [15 x i8] c"single-process\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"in-process-gpu\00", align 1
@_ZTVN4aura20EventObserverAdapterE = linkonce_odr hidden unnamed_addr constant { [12 x i8*], [4 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::EventObserverAdapter"*)* @_ZN4aura20EventObserverAdapterD2Ev to i8*), i8* bitcast (void (%"class.aura::EventObserverAdapter"*)* @_ZN4aura20EventObserverAdapterD0Ev to i8*), i8* bitcast (void (%"class.aura::EventObserverAdapter"*, %"class.ui::Event"*)* @_ZN4aura20EventObserverAdapter7OnEventEPN2ui5EventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)* @_ZN2ui12EventHandler10OnKeyEventEPNS_8KeyEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)* @_ZN2ui12EventHandler12OnMouseEventEPNS_10MouseEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*)* @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)* @_ZN2ui12EventHandler12OnTouchEventEPNS_10TouchEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)* @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*)* @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE to i8*), i8* bitcast ({ i8*, i64 } (%"class.ui::EventHandler"*)* @_ZNK2ui12EventHandler13GetLogContextEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.aura::EventObserverAdapter"*)* @_ZThn40_N4aura20EventObserverAdapterD1Ev to i8*), i8* bitcast (void (%"class.aura::EventObserverAdapter"*)* @_ZThn40_N4aura20EventObserverAdapterD0Ev to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1

@_ZN4aura3EnvD1Ev = hidden unnamed_addr alias void (%"class.aura::Env"*), void (%"class.aura::Env"*)* @_ZN4aura3EnvD2Ev
@_ZN4aura3EnvC1Ev = hidden unnamed_addr alias void (%"class.aura::Env"*), void (%"class.aura::Env"*)* @_ZN4aura3EnvC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3EnvD2Ev(%"class.aura::Env"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [4 x i8*] }, { [10 x i8*], [4 x i8*] }* @_ZTVN4aura3EnvE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::SupportsUserData.base", %"class.base::SupportsUserData.base"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [4 x i8*] }, { [10 x i8*], [4 x i8*] }* @_ZTVN4aura3EnvE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3
  %8 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %15, align 8, !noalias !2
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %14, %16
  %18 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %18) #13
  br i1 %17, label %19, label %21

19:                                               ; preds = %1
  %20 = bitcast %"class.base::ObserverList"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13, !alias.scope !2
  br label %61

21:                                               ; preds = %1
  store %"class.base::ObserverList"* %7, %"class.base::ObserverList"** %9, align 8, !alias.scope !2
  %22 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %18, %"class.base::internal::LinkNodeBase"* %22) #13
  store i64 0, i64* %10, align 8, !alias.scope !2
  %23 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 3
  %24 = load i32, i32* %23, align 8, !noalias !2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !2
  %29 = bitcast %"class.base::ObserverList"* %7 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !2
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  br label %33

33:                                               ; preds = %26, %21
  %34 = phi i64 [ %32, %26 ], [ -1, %21 ]
  store i64 %34, i64* %11, align 8, !alias.scope !2
  %35 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8, !alias.scope !2
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %35, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::ObserverList"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, %34
  %44 = select i1 %43, i64 %42, i64 %34
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %33
  %47 = inttoptr i64 %40 to %"class.base::internal::UncheckedObserverAdapter"*
  %48 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %35, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %47, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %46, %56
  %53 = phi i64 [ %54, %56 ], [ 0, %46 ]
  %54 = add nuw i64 %53, 1
  store i64 %54, i64* %10, align 8, !alias.scope !2
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %48, align 8
  %58 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %57, i64 %54, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %52, label %61

61:                                               ; preds = %52, %56, %19, %33, %46
  %62 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #13
  %63 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %66 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %66) #13
  %68 = bitcast %"class.base::ObserverList"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #13, !alias.scope !5
  %69 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  br label %70

70:                                               ; preds = %312, %61
  %71 = phi %"class.base::ObserverList"* [ %69, %61 ], [ %310, %312 ]
  %72 = icmp eq %"class.base::ObserverList"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %70
  %74 = load i64, i64* %10, align 8
  %75 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.base::ObserverList"* %71 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = ashr exact i64 %80, 3
  %82 = load i64, i64* %11, align 8
  %83 = icmp ult i64 %81, %82
  %84 = select i1 %83, i64 %81, i64 %82
  %85 = icmp eq i64 %74, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %73
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  br label %104

88:                                               ; preds = %73, %70
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %90 = icmp eq %"class.base::ObserverList"* %89, null
  br i1 %90, label %204, label %91

91:                                               ; preds = %88
  %92 = load i64, i64* %64, align 8
  %93 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %89, i64 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::ObserverList"* %89 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 3
  %100 = load i64, i64* %65, align 8
  %101 = icmp ult i64 %99, %100
  %102 = select i1 %101, i64 %99, i64 %100
  %103 = icmp eq i64 %92, %102
  br i1 %103, label %113, label %104

104:                                              ; preds = %91, %86
  %105 = phi %"class.base::ObserverList"* [ %87, %86 ], [ %89, %91 ]
  %106 = icmp eq %"class.base::ObserverList"* %71, %105
  %107 = load i64, i64* %10, align 8
  %108 = load i64, i64* %64, align 8
  %109 = icmp eq i64 %107, %108
  %110 = and i1 %106, %109
  br i1 %110, label %111, label %300

111:                                              ; preds = %104
  %112 = icmp eq %"class.base::ObserverList"* %71, null
  br i1 %112, label %204, label %113

113:                                              ; preds = %91, %111
  %114 = phi %"class.base::ObserverList"* [ %71, %111 ], [ %89, %91 ]
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 1
  %116 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 1, i32 0, i32 0, i32 1
  %117 = bitcast %"class.base::internal::LinkNodeBase"** %116 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = bitcast %"class.base::LinkedList"* %115 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = icmp eq %"class.base::LinkNode"* %118, %120
  br i1 %121, label %122, label %200

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %114, i64 0, i32 0, i32 0, i32 1
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %124, %126
  br i1 %127, label %136, label %128

128:                                              ; preds = %122, %133
  %129 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %133 ], [ %124, %122 ]
  %130 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %129, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %129, i64 1
  %135 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %126
  br i1 %135, label %200, label %128

136:                                              ; preds = %128, %122
  %137 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %122 ], [ %129, %128 ]
  %138 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %137 to i64
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %137, %126
  br i1 %139, label %200, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 1
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %141, %126
  br i1 %142, label %195, label %143

143:                                              ; preds = %140
  %144 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 -2, i32 0
  %145 = ptrtoint i8** %144 to i64
  %146 = sub i64 %145, %138
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 3
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %169, label %151

151:                                              ; preds = %143, %164
  %152 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %164 ], [ %141, %143 ]
  %153 = phi i64 [ %165, %164 ], [ %138, %143 ]
  %154 = phi i64 [ %167, %164 ], [ %149, %143 ]
  %155 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %151
  %159 = ptrtoint i8* %156 to i64
  %160 = inttoptr i64 %153 to %"class.base::internal::UncheckedObserverAdapter"*
  %161 = inttoptr i64 %153 to i64*
  store i64 %159, i64* %161, align 8
  %162 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %163 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %162 to i64
  br label %164

164:                                              ; preds = %158, %151
  %165 = phi i64 [ %153, %151 ], [ %163, %158 ]
  %166 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 1
  %167 = add i64 %154, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %151, !llvm.loop !8

169:                                              ; preds = %164, %143
  %170 = phi i64 [ undef, %143 ], [ %165, %164 ]
  %171 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %143 ], [ %166, %164 ]
  %172 = phi i64 [ %138, %143 ], [ %165, %164 ]
  %173 = icmp ult i64 %146, 24
  br i1 %173, label %191, label %174

174:                                              ; preds = %169, %559
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %561, %559 ], [ %171, %169 ]
  %176 = phi i64 [ %560, %559 ], [ %172, %169 ]
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %174
  %181 = ptrtoint i8* %178 to i64
  %182 = inttoptr i64 %176 to %"class.base::internal::UncheckedObserverAdapter"*
  %183 = inttoptr i64 %176 to i64*
  store i64 %181, i64* %183, align 8
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 1
  %185 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %184 to i64
  br label %186

186:                                              ; preds = %180, %174
  %187 = phi i64 [ %176, %174 ], [ %185, %180 ]
  %188 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %537, label %531

191:                                              ; preds = %559, %169
  %192 = phi i64 [ %170, %169 ], [ %560, %559 ]
  %193 = inttoptr i64 %192 to %"class.base::internal::UncheckedObserverAdapter"*
  %194 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  br label %195

195:                                              ; preds = %191, %140
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %140 ], [ %194, %191 ]
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %137, %140 ], [ %193, %191 ]
  %198 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %197, %196
  br i1 %198, label %200, label %199

199:                                              ; preds = %195
  store %"class.base::internal::UncheckedObserverAdapter"* %197, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  br label %200

200:                                              ; preds = %133, %199, %195, %136, %113
  %201 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %63, align 8
  %202 = icmp eq %"class.base::ObserverList"* %201, null
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %63, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %66) #13
  br label %204

204:                                              ; preds = %88, %111, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #13
  %205 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %206 = icmp eq %"class.base::ObserverList"* %205, null
  br i1 %206, label %297, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 1
  %209 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 1, i32 0, i32 0, i32 1
  %210 = bitcast %"class.base::internal::LinkNodeBase"** %209 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = bitcast %"class.base::LinkedList"* %208 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = icmp eq %"class.base::LinkNode"* %211, %213
  br i1 %214, label %215, label %293

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %205, i64 0, i32 0, i32 0, i32 1
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %217, %219
  br i1 %220, label %229, label %221

221:                                              ; preds = %215, %226
  %222 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %226 ], [ %217, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 1
  %228 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %219
  br i1 %228, label %293, label %221

229:                                              ; preds = %221, %215
  %230 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %215 ], [ %222, %221 ]
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %230, %219
  br i1 %232, label %293, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 1
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %234, %219
  br i1 %235, label %288, label %236

236:                                              ; preds = %233
  %237 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 -2, i32 0
  %238 = ptrtoint i8** %237 to i64
  %239 = sub i64 %238, %231
  %240 = lshr i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %262, label %244

244:                                              ; preds = %236, %257
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %257 ], [ %234, %236 ]
  %246 = phi i64 [ %258, %257 ], [ %231, %236 ]
  %247 = phi i64 [ %260, %257 ], [ %242, %236 ]
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = icmp eq i8* %249, null
  br i1 %250, label %257, label %251

251:                                              ; preds = %244
  %252 = ptrtoint i8* %249 to i64
  %253 = inttoptr i64 %246 to %"class.base::internal::UncheckedObserverAdapter"*
  %254 = inttoptr i64 %246 to i64*
  store i64 %252, i64* %254, align 8
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %256 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %255 to i64
  br label %257

257:                                              ; preds = %251, %244
  %258 = phi i64 [ %246, %244 ], [ %256, %251 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %260 = add i64 %247, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %244, !llvm.loop !10

262:                                              ; preds = %257, %236
  %263 = phi i64 [ undef, %236 ], [ %258, %257 ]
  %264 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %236 ], [ %259, %257 ]
  %265 = phi i64 [ %231, %236 ], [ %258, %257 ]
  %266 = icmp ult i64 %239, 24
  br i1 %266, label %284, label %267

267:                                              ; preds = %262, %527
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %529, %527 ], [ %264, %262 ]
  %269 = phi i64 [ %528, %527 ], [ %265, %262 ]
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %279, label %273

273:                                              ; preds = %267
  %274 = ptrtoint i8* %271 to i64
  %275 = inttoptr i64 %269 to %"class.base::internal::UncheckedObserverAdapter"*
  %276 = inttoptr i64 %269 to i64*
  store i64 %274, i64* %276, align 8
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 1
  %278 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %277 to i64
  br label %279

279:                                              ; preds = %273, %267
  %280 = phi i64 [ %269, %267 ], [ %278, %273 ]
  %281 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %505, label %499

284:                                              ; preds = %527, %262
  %285 = phi i64 [ %263, %262 ], [ %528, %527 ]
  %286 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %287 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %288

288:                                              ; preds = %284, %233
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %233 ], [ %287, %284 ]
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %233 ], [ %286, %284 ]
  %291 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %290, %289
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  store %"class.base::internal::UncheckedObserverAdapter"* %290, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %293

293:                                              ; preds = %226, %292, %288, %229, %207
  %294 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %295 = icmp eq %"class.base::ObserverList"* %294, null
  br i1 %295, label %297, label %296

296:                                              ; preds = %293
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %9, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %18) #13
  br label %297

297:                                              ; preds = %204, %293, %296
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #13
  %298 = load %"class.aura::Env"*, %"class.aura::Env"** @_ZN4aura12_GLOBAL__N_118g_primary_instanceE, align 8
  %299 = icmp eq %"class.aura::Env"* %298, %0
  br i1 %299, label %342, label %343

300:                                              ; preds = %104
  %301 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 %107
  %304 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %303 to %"class.aura::EnvObserver"**
  %305 = load %"class.aura::EnvObserver"*, %"class.aura::EnvObserver"** %304, align 8
  %306 = bitcast %"class.aura::EnvObserver"* %305 to void (%"class.aura::EnvObserver"*)***
  %307 = load void (%"class.aura::EnvObserver"*)**, void (%"class.aura::EnvObserver"*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.aura::EnvObserver"*)*, void (%"class.aura::EnvObserver"*)** %307, i64 3
  %309 = load void (%"class.aura::EnvObserver"*)*, void (%"class.aura::EnvObserver"*)** %308, align 8
  call void %309(%"class.aura::EnvObserver"* %305) #13
  %310 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %9, align 8
  %311 = icmp eq %"class.base::ObserverList"* %310, null
  br i1 %311, label %312, label %313

312:                                              ; preds = %337, %333, %300, %313, %327
  br label %70

313:                                              ; preds = %300
  %314 = load i64, i64* %10, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %10, align 8
  %316 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 1
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.base::ObserverList"* %310 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  %323 = load i64, i64* %11, align 8
  %324 = icmp ult i64 %322, %323
  %325 = select i1 %324, i64 %322, i64 %323
  %326 = icmp ult i64 %315, %325
  br i1 %326, label %327, label %312

327:                                              ; preds = %313
  %328 = inttoptr i64 %320 to %"class.base::internal::UncheckedObserverAdapter"*
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %310, i64 0, i32 0, i32 0, i32 0
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 %315, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %312

333:                                              ; preds = %327, %337
  %334 = phi i64 [ %335, %337 ], [ %315, %327 ]
  %335 = add nuw i64 %334, 1
  store i64 %335, i64* %10, align 8
  %336 = icmp ult i64 %335, %325
  br i1 %336, label %337, label %312

337:                                              ; preds = %333
  %338 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %335, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %333, label %312

342:                                              ; preds = %297
  store %"class.aura::Env"* null, %"class.aura::Env"** @_ZN4aura12_GLOBAL__N_118g_primary_instanceE, align 8
  br label %343

343:                                              ; preds = %342, %297
  %344 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 18, i32 0, i32 0
  %345 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %344, align 8
  %346 = icmp eq %"class.aura::WindowTreeHost"** %345, null
  br i1 %346, label %352, label %347

347:                                              ; preds = %343
  %348 = ptrtoint %"class.aura::WindowTreeHost"** %345 to i64
  %349 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 18, i32 0, i32 1
  %350 = bitcast %"class.aura::WindowTreeHost"*** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = bitcast %"class.aura::WindowTreeHost"** %345 to i8*
  call void @_ZdlPv(i8* %351) #14
  br label %352

352:                                              ; preds = %343, %347
  %353 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %354 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %353, align 8
  store %"class.aura::WindowOcclusionTracker"* null, %"class.aura::WindowOcclusionTracker"** %353, align 8
  %355 = icmp eq %"class.aura::WindowOcclusionTracker"* %354, null
  br i1 %355, label %361, label %356

356:                                              ; preds = %352
  %357 = bitcast %"class.aura::WindowOcclusionTracker"* %354 to void (%"class.aura::WindowOcclusionTracker"*)***
  %358 = load void (%"class.aura::WindowOcclusionTracker"*)**, void (%"class.aura::WindowOcclusionTracker"*)*** %357, align 8
  %359 = getelementptr inbounds void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %358, i64 6
  %360 = load void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %359, align 8
  call void %360(%"class.aura::WindowOcclusionTracker"* nonnull %354) #13
  br label %361

361:                                              ; preds = %352, %356
  %362 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %363 = load %"class.ui::PlatformEventSource"*, %"class.ui::PlatformEventSource"** %362, align 8
  store %"class.ui::PlatformEventSource"* null, %"class.ui::PlatformEventSource"** %362, align 8
  %364 = icmp eq %"class.ui::PlatformEventSource"* %363, null
  br i1 %364, label %370, label %365

365:                                              ; preds = %361
  %366 = bitcast %"class.ui::PlatformEventSource"* %363 to void (%"class.ui::PlatformEventSource"*)***
  %367 = load void (%"class.ui::PlatformEventSource"*)**, void (%"class.ui::PlatformEventSource"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.ui::PlatformEventSource"*)*, void (%"class.ui::PlatformEventSource"*)** %367, i64 1
  %369 = load void (%"class.ui::PlatformEventSource"*)*, void (%"class.ui::PlatformEventSource"*)** %368, align 8
  call void %369(%"class.ui::PlatformEventSource"* nonnull %363) #13
  br label %370

370:                                              ; preds = %361, %365
  %371 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %372 = load %"class.aura::InputStateLookup"*, %"class.aura::InputStateLookup"** %371, align 8
  store %"class.aura::InputStateLookup"* null, %"class.aura::InputStateLookup"** %371, align 8
  %373 = icmp eq %"class.aura::InputStateLookup"* %372, null
  br i1 %373, label %379, label %374

374:                                              ; preds = %370
  %375 = bitcast %"class.aura::InputStateLookup"* %372 to void (%"class.aura::InputStateLookup"*)***
  %376 = load void (%"class.aura::InputStateLookup"*)**, void (%"class.aura::InputStateLookup"*)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.aura::InputStateLookup"*)*, void (%"class.aura::InputStateLookup"*)** %376, i64 1
  %378 = load void (%"class.aura::InputStateLookup"*)*, void (%"class.aura::InputStateLookup"*)** %377, align 8
  call void %378(%"class.aura::InputStateLookup"* nonnull %372) #13
  br label %379

379:                                              ; preds = %370, %374
  %380 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %381 = load %"class.ui::CursorFactory"*, %"class.ui::CursorFactory"** %380, align 8
  store %"class.ui::CursorFactory"* null, %"class.ui::CursorFactory"** %380, align 8
  %382 = icmp eq %"class.ui::CursorFactory"* %381, null
  br i1 %382, label %388, label %383

383:                                              ; preds = %379
  %384 = bitcast %"class.ui::CursorFactory"* %381 to void (%"class.ui::CursorFactory"*)***
  %385 = load void (%"class.ui::CursorFactory"*)**, void (%"class.ui::CursorFactory"*)*** %384, align 8
  %386 = getelementptr inbounds void (%"class.ui::CursorFactory"*)*, void (%"class.ui::CursorFactory"*)** %385, i64 1
  %387 = load void (%"class.ui::CursorFactory"*)*, void (%"class.ui::CursorFactory"*)** %386, align 8
  call void %387(%"class.ui::CursorFactory"* nonnull %381) #13
  br label %388

388:                                              ; preds = %379, %383
  %389 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %390 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %389, align 8
  store %"class.ui::GestureRecognizer"* null, %"class.ui::GestureRecognizer"** %389, align 8
  %391 = icmp eq %"class.ui::GestureRecognizer"* %390, null
  br i1 %391, label %397, label %392

392:                                              ; preds = %388
  %393 = bitcast %"class.ui::GestureRecognizer"* %390 to void (%"class.ui::GestureRecognizer"*)***
  %394 = load void (%"class.ui::GestureRecognizer"*)**, void (%"class.ui::GestureRecognizer"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.ui::GestureRecognizer"*)*, void (%"class.ui::GestureRecognizer"*)** %394, i64 1
  %396 = load void (%"class.ui::GestureRecognizer"*)*, void (%"class.ui::GestureRecognizer"*)** %395, align 8
  call void %396(%"class.ui::GestureRecognizer"* nonnull %390) #13
  br label %397

397:                                              ; preds = %388, %392
  %398 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %399 = load %"class.aura::EnvInputStateController"*, %"class.aura::EnvInputStateController"** %398, align 8
  store %"class.aura::EnvInputStateController"* null, %"class.aura::EnvInputStateController"** %398, align 8
  %400 = icmp eq %"class.aura::EnvInputStateController"* %399, null
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  call void @_ZN4aura23EnvInputStateControllerD1Ev(%"class.aura::EnvInputStateController"* nonnull %399) #13
  %402 = bitcast %"class.aura::EnvInputStateController"* %399 to i8*
  call void @_ZdlPv(i8* %402) #14
  br label %403

403:                                              ; preds = %397, %401
  %404 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0
  %405 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %406 = bitcast %"class.std::__1::__tree_end_node"* %405 to %"class.std::__1::__tree_node.356"**
  %407 = load %"class.std::__1::__tree_node.356"*, %"class.std::__1::__tree_node.356"** %406, align 8
  call void @_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.44"* %404, %"class.std::__1::__tree_node.356"* %407) #13
  %408 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5
  %409 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %410 = bitcast %"class.base::internal::LinkNodeBase"** %409 to %"class.base::LinkNode.42"**
  %411 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 1, i32 0
  %412 = load %"class.base::LinkNode.42"*, %"class.base::LinkNode.42"** %410, align 8
  %413 = icmp eq %"class.base::LinkNode.42"* %412, %411
  br i1 %413, label %426, label %414

414:                                              ; preds = %403, %423
  %415 = phi %"class.base::LinkNode.42"* [ %424, %423 ], [ %412, %403 ]
  %416 = getelementptr inbounds %"class.base::LinkNode.42", %"class.base::LinkNode.42"* %415, i64 1
  %417 = bitcast %"class.base::LinkNode.42"* %416 to %"class.base::ObserverList.27"**
  %418 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %417, align 8
  %419 = icmp eq %"class.base::ObserverList.27"* %418, null
  br i1 %419, label %423, label %420

420:                                              ; preds = %414
  store %"class.base::ObserverList.27"* null, %"class.base::ObserverList.27"** %417, align 8
  %421 = getelementptr inbounds %"class.base::LinkNode.42", %"class.base::LinkNode.42"* %415, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %421) #13
  %422 = load %"class.base::LinkNode.42"*, %"class.base::LinkNode.42"** %410, align 8
  br label %423

423:                                              ; preds = %420, %414
  %424 = phi %"class.base::LinkNode.42"* [ %415, %414 ], [ %422, %420 ]
  %425 = icmp eq %"class.base::LinkNode.42"* %424, %411
  br i1 %425, label %426, label %414

426:                                              ; preds = %423, %403
  %427 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %408, i64 0, i32 0, i32 0, i32 0
  %428 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %427, align 8
  %429 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %428, null
  br i1 %429, label %444, label %430

430:                                              ; preds = %426
  %431 = bitcast %"class.base::internal::CheckedObserverAdapter"* %428 to i8*
  %432 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %433 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %432, align 8
  %434 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %433, %428
  br i1 %434, label %442, label %435

435:                                              ; preds = %430, %435
  %436 = phi %"class.base::internal::CheckedObserverAdapter"* [ %437, %435 ], [ %433, %430 ]
  %437 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %436, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %437) #13
  %438 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %437, %428
  br i1 %438, label %439, label %435

439:                                              ; preds = %435
  %440 = bitcast %"class.base::ObserverList.27"* %408 to i8**
  %441 = load i8*, i8** %440, align 8
  br label %442

442:                                              ; preds = %439, %430
  %443 = phi i8* [ %441, %439 ], [ %431, %430 ]
  store %"class.base::internal::CheckedObserverAdapter"* %428, %"class.base::internal::CheckedObserverAdapter"** %432, align 8
  call void @_ZdlPv(i8* %443) #14
  br label %444

444:                                              ; preds = %426, %442
  %445 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %446 = bitcast %"class.base::internal::LinkNodeBase"** %445 to %"class.base::LinkNode.25"**
  %447 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 1, i32 0
  %448 = load %"class.base::LinkNode.25"*, %"class.base::LinkNode.25"** %446, align 8
  %449 = icmp eq %"class.base::LinkNode.25"* %448, %447
  br i1 %449, label %462, label %450

450:                                              ; preds = %444, %459
  %451 = phi %"class.base::LinkNode.25"* [ %460, %459 ], [ %448, %444 ]
  %452 = getelementptr inbounds %"class.base::LinkNode.25", %"class.base::LinkNode.25"* %451, i64 1
  %453 = bitcast %"class.base::LinkNode.25"* %452 to %"class.base::ObserverList.23"**
  %454 = load %"class.base::ObserverList.23"*, %"class.base::ObserverList.23"** %453, align 8
  %455 = icmp eq %"class.base::ObserverList.23"* %454, null
  br i1 %455, label %459, label %456

456:                                              ; preds = %450
  store %"class.base::ObserverList.23"* null, %"class.base::ObserverList.23"** %453, align 8
  %457 = getelementptr inbounds %"class.base::LinkNode.25", %"class.base::LinkNode.25"* %451, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %457) #13
  %458 = load %"class.base::LinkNode.25"*, %"class.base::LinkNode.25"** %446, align 8
  br label %459

459:                                              ; preds = %456, %450
  %460 = phi %"class.base::LinkNode.25"* [ %451, %450 ], [ %458, %456 ]
  %461 = icmp eq %"class.base::LinkNode.25"* %460, %447
  br i1 %461, label %462, label %450

462:                                              ; preds = %459, %444
  %463 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %464 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %463, align 8
  %465 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %464, null
  br i1 %465, label %471, label %466

466:                                              ; preds = %462
  %467 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %464 to i64
  %468 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %469 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %468 to i64*
  store i64 %467, i64* %469, align 8
  %470 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %464 to i8*
  call void @_ZdlPv(i8* %470) #14
  br label %471

471:                                              ; preds = %462, %466
  %472 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %473 = bitcast %"class.base::internal::LinkNodeBase"** %472 to %"class.base::LinkNode"**
  %474 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0
  %475 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %473, align 8
  %476 = icmp eq %"class.base::LinkNode"* %475, %474
  br i1 %476, label %489, label %477

477:                                              ; preds = %471, %486
  %478 = phi %"class.base::LinkNode"* [ %487, %486 ], [ %475, %471 ]
  %479 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %478, i64 1
  %480 = bitcast %"class.base::LinkNode"* %479 to %"class.base::ObserverList"**
  %481 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %480, align 8
  %482 = icmp eq %"class.base::ObserverList"* %481, null
  br i1 %482, label %486, label %483

483:                                              ; preds = %477
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %480, align 8
  %484 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %478, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %484) #13
  %485 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %473, align 8
  br label %486

486:                                              ; preds = %483, %477
  %487 = phi %"class.base::LinkNode"* [ %478, %477 ], [ %485, %483 ]
  %488 = icmp eq %"class.base::LinkNode"* %487, %474
  br i1 %488, label %489, label %477

489:                                              ; preds = %486, %471
  %490 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  %491 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %490, null
  br i1 %491, label %496, label %492

492:                                              ; preds = %489
  %493 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %490 to i64
  %494 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to i64*
  store i64 %493, i64* %494, align 8
  %495 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %490 to i8*
  call void @_ZdlPv(i8* %495) #14
  br label %496

496:                                              ; preds = %489, %492
  %497 = bitcast %"class.base::SupportsUserData.base"* %5 to %"class.base::SupportsUserData"*
  call void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"* %497) #13
  %498 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 0
  call void @_ZN2ui11EventTargetD2Ev(%"class.ui::EventTarget"* %498) #13
  ret void

499:                                              ; preds = %279
  %500 = ptrtoint i8* %282 to i64
  %501 = inttoptr i64 %280 to %"class.base::internal::UncheckedObserverAdapter"*
  %502 = inttoptr i64 %280 to i64*
  store i64 %500, i64* %502, align 8
  %503 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %501, i64 1
  %504 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %503 to i64
  br label %505

505:                                              ; preds = %499, %279
  %506 = phi i64 [ %280, %279 ], [ %504, %499 ]
  %507 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 2, i32 0
  %508 = load i8*, i8** %507, align 8
  %509 = icmp eq i8* %508, null
  br i1 %509, label %516, label %510

510:                                              ; preds = %505
  %511 = ptrtoint i8* %508 to i64
  %512 = inttoptr i64 %506 to %"class.base::internal::UncheckedObserverAdapter"*
  %513 = inttoptr i64 %506 to i64*
  store i64 %511, i64* %513, align 8
  %514 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %512, i64 1
  %515 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %514 to i64
  br label %516

516:                                              ; preds = %510, %505
  %517 = phi i64 [ %506, %505 ], [ %515, %510 ]
  %518 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 3, i32 0
  %519 = load i8*, i8** %518, align 8
  %520 = icmp eq i8* %519, null
  br i1 %520, label %527, label %521

521:                                              ; preds = %516
  %522 = ptrtoint i8* %519 to i64
  %523 = inttoptr i64 %517 to %"class.base::internal::UncheckedObserverAdapter"*
  %524 = inttoptr i64 %517 to i64*
  store i64 %522, i64* %524, align 8
  %525 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %523, i64 1
  %526 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %525 to i64
  br label %527

527:                                              ; preds = %521, %516
  %528 = phi i64 [ %517, %516 ], [ %526, %521 ]
  %529 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 4
  %530 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %529, %219
  br i1 %530, label %284, label %267

531:                                              ; preds = %186
  %532 = ptrtoint i8* %189 to i64
  %533 = inttoptr i64 %187 to %"class.base::internal::UncheckedObserverAdapter"*
  %534 = inttoptr i64 %187 to i64*
  store i64 %532, i64* %534, align 8
  %535 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %533, i64 1
  %536 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %535 to i64
  br label %537

537:                                              ; preds = %531, %186
  %538 = phi i64 [ %187, %186 ], [ %536, %531 ]
  %539 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 2, i32 0
  %540 = load i8*, i8** %539, align 8
  %541 = icmp eq i8* %540, null
  br i1 %541, label %548, label %542

542:                                              ; preds = %537
  %543 = ptrtoint i8* %540 to i64
  %544 = inttoptr i64 %538 to %"class.base::internal::UncheckedObserverAdapter"*
  %545 = inttoptr i64 %538 to i64*
  store i64 %543, i64* %545, align 8
  %546 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %544, i64 1
  %547 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %546 to i64
  br label %548

548:                                              ; preds = %542, %537
  %549 = phi i64 [ %538, %537 ], [ %547, %542 ]
  %550 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 3, i32 0
  %551 = load i8*, i8** %550, align 8
  %552 = icmp eq i8* %551, null
  br i1 %552, label %559, label %553

553:                                              ; preds = %548
  %554 = ptrtoint i8* %551 to i64
  %555 = inttoptr i64 %549 to %"class.base::internal::UncheckedObserverAdapter"*
  %556 = inttoptr i64 %549 to i64*
  store i64 %554, i64* %556, align 8
  %557 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %555, i64 1
  %558 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %557 to i64
  br label %559

559:                                              ; preds = %553, %548
  %560 = phi i64 [ %549, %548 ], [ %558, %553 ]
  %561 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 4
  %562 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %561, %126
  br i1 %562, label %191, label %174
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui11EventTargetD2Ev(%"class.ui::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N4aura3EnvD1Ev(%"class.aura::Env"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 -1, i32 13
  %3 = bitcast %"class.std::__1::unique_ptr.72"* %2 to %"class.aura::Env"*
  tail call void @_ZN4aura3EnvD2Ev(%"class.aura::Env"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3EnvD0Ev(%"class.aura::Env"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4aura3EnvD2Ev(%"class.aura::Env"* %0) #13
  %2 = bitcast %"class.aura::Env"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N4aura3EnvD0Ev(%"class.aura::Env"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 -1, i32 13
  %3 = bitcast %"class.std::__1::unique_ptr.72"* %2 to %"class.aura::Env"*
  tail call void @_ZN4aura3EnvD2Ev(%"class.aura::Env"* %3) #13
  %4 = bitcast %"class.std::__1::unique_ptr.72"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Env"* @_ZN4aura3Env14CreateInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 400) #14
  %2 = bitcast i8* %1 to %"class.aura::Env"*
  tail call void @_ZN4aura3EnvC2Ev(%"class.aura::Env"* nonnull %2)
  store i8* %1, i8** bitcast (%"class.aura::Env"** @_ZN4aura12_GLOBAL__N_118g_primary_instanceE to i8**), align 8
  tail call void @_ZN4aura3Env4InitEv(%"class.aura::Env"* nonnull %2)
  ret %"class.aura::Env"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env4InitEv(%"class.aura::Env"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::OzonePlatform::InitParams", align 1
  %3 = tail call zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() #13
  br i1 %3, label %4, label %15

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.ui::OzonePlatform::InitParams", %"struct.ui::OzonePlatform::InitParams"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"struct.ui::OzonePlatform::InitParams", %"struct.ui::OzonePlatform::InitParams"* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.ui::OzonePlatform::InitParams", %"struct.ui::OzonePlatform::InitParams"* %2, i64 0, i32 2
  store i8 0, i8* %5, align 1
  store i8 0, i8* %6, align 1
  store i8 0, i8* %7, align 1
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #13
  %9 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)) #13
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #13
  %12 = zext i1 %11 to i8
  br label %13

13:                                               ; preds = %10, %4
  %14 = phi i8 [ 1, %4 ], [ %12, %10 ]
  store i8 %14, i8* %5, align 1
  call void @_ZN2ui13OzonePlatform15InitializeForUIERKNS0_10InitParamsE(%"struct.ui::OzonePlatform::InitParams"* nonnull dereferenceable(3) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %5) #13
  br label %15

15:                                               ; preds = %13, %1
  %16 = call %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() #13
  %17 = icmp eq %"class.ui::PlatformEventSource"* %16, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = call %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource13CreateDefaultEv() #13
  %20 = ptrtoint %"class.ui::PlatformEventSource"* %19 to i64
  %21 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 14
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.ui::PlatformEventSource"*, %"class.ui::PlatformEventSource"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.78"* %21 to i64*
  store i64 %20, i64* %24, align 8
  %25 = icmp eq %"class.ui::PlatformEventSource"* %23, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.ui::PlatformEventSource"* %23 to void (%"class.ui::PlatformEventSource"*)***
  %28 = load void (%"class.ui::PlatformEventSource"*)**, void (%"class.ui::PlatformEventSource"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.ui::PlatformEventSource"*)*, void (%"class.ui::PlatformEventSource"*)** %28, i64 1
  %30 = load void (%"class.ui::PlatformEventSource"*)*, void (%"class.ui::PlatformEventSource"*)** %29, align 8
  call void %30(%"class.ui::PlatformEventSource"* nonnull %23) #13
  br label %31

31:                                               ; preds = %18, %26, %15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() local_unnamed_addr #5 align 2 {
  %1 = load %"class.aura::Env"*, %"class.aura::Env"** @_ZN4aura12_GLOBAL__N_118g_primary_instanceE, align 8
  ret %"class.aura::Env"* %1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4aura3Env11HasInstanceEv() local_unnamed_addr #5 align 2 {
  %1 = load %"class.aura::Env"*, %"class.aura::Env"** @_ZN4aura12_GLOBAL__N_118g_primary_instanceE, align 8
  %2 = icmp ne %"class.aura::Env"* %1, null
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env11AddObserverEPNS_11EnvObserverE(%"class.aura::Env"*, %"class.aura::EnvObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3
  %4 = icmp eq %"class.aura::EnvObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.aura::EnvObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.aura::EnvObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #15
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #15
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #14
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #13
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env14RemoveObserverEPNS_11EnvObserverE(%"class.aura::Env"*, %"class.aura::EnvObserver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.aura::EnvObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env32AddWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"*, %"class.aura::WindowEventDispatcherObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4
  %4 = icmp eq %"class.aura::WindowEventDispatcherObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.23", %"class.base::ObserverList.23"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.aura::WindowEventDispatcherObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.aura::WindowEventDispatcherObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.23"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.23"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #15
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #15
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #14
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.23", %"class.base::ObserverList.23"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #13
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env35RemoveWindowEventDispatcherObserverEPNS_29WindowEventDispatcherObserverE(%"class.aura::Env"*, %"class.aura::WindowEventDispatcherObserver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.aura::WindowEventDispatcherObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.25"**
  %32 = load %"class.base::LinkNode.25"*, %"class.base::LinkNode.25"** %31, align 8
  %33 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.25"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura3Env17IsMouseButtonDownEv(%"class.aura::Env"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load %"class.aura::InputStateLookup"*, %"class.aura::InputStateLookup"** %2, align 8
  %4 = icmp eq %"class.aura::InputStateLookup"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.aura::InputStateLookup"* %3 to i1 (%"class.aura::InputStateLookup"*)***
  %7 = load i1 (%"class.aura::InputStateLookup"*)**, i1 (%"class.aura::InputStateLookup"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.aura::InputStateLookup"*)*, i1 (%"class.aura::InputStateLookup"*)** %7, i64 2
  %9 = load i1 (%"class.aura::InputStateLookup"*)*, i1 (%"class.aura::InputStateLookup"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.aura::InputStateLookup"* nonnull %3) #13
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi i1 [ %10, %5 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4aura3Env20SetLastMouseLocationERKN3gfx5PointE(%"class.aura::Env"* nocapture, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 9
  %4 = bitcast %"class.gfx::Point"* %1 to i64*
  %5 = bitcast %"class.gfx::Point"* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env20SetGestureRecognizerENSt3__110unique_ptrIN2ui17GestureRecognizerENS1_14default_deleteIS4_EEEE(%"class.aura::Env"* nocapture, %"class.ui::GestureRecognizer"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.ui::GestureRecognizer"* %1 to i64
  %4 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 11
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.ui::GestureRecognizer"*, %"class.ui::GestureRecognizer"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.56"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.ui::GestureRecognizer"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.ui::GestureRecognizer"* %6 to void (%"class.ui::GestureRecognizer"*)***
  %11 = load void (%"class.ui::GestureRecognizer"*)**, void (%"class.ui::GestureRecognizer"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::GestureRecognizer"*)*, void (%"class.ui::GestureRecognizer"*)** %11, i64 1
  %13 = load void (%"class.ui::GestureRecognizer"*)*, void (%"class.ui::GestureRecognizer"*)** %12, align 8
  tail call void %13(%"class.ui::GestureRecognizer"* nonnull %6) #13
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 17
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.92"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  %5 = icmp eq %"class.aura::WindowOcclusionTracker"* %4, null
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 264) #14
  %8 = bitcast i8* %7 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTrackerC1Ev(%"class.aura::WindowOcclusionTracker"* nonnull %8) #13
  %9 = ptrtoint i8* %7 to i64
  %10 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.92"* %2 to i64*
  store i64 %9, i64* %11, align 8
  %12 = icmp eq %"class.aura::WindowOcclusionTracker"* %10, null
  %13 = bitcast i8* %7 to %"class.aura::WindowOcclusionTracker"*
  br i1 %12, label %20, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.aura::WindowOcclusionTracker"* %10 to void (%"class.aura::WindowOcclusionTracker"*)***
  %16 = load void (%"class.aura::WindowOcclusionTracker"*)**, void (%"class.aura::WindowOcclusionTracker"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %16, i64 6
  %18 = load void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %17, align 8
  tail call void %18(%"class.aura::WindowOcclusionTracker"* nonnull %10) #13
  %19 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  br label %20

20:                                               ; preds = %1, %6, %14
  %21 = phi %"class.aura::WindowOcclusionTracker"* [ %4, %1 ], [ %13, %6 ], [ %19, %14 ]
  ret %"class.aura::WindowOcclusionTracker"* %21
}

declare void @_ZN4aura22WindowOcclusionTrackerC1Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env28PauseWindowOcclusionTrackingEv(%"class.aura::Env"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 17
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.92"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  %5 = icmp eq %"class.aura::WindowOcclusionTracker"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 264) #14
  %8 = bitcast i8* %7 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTrackerC1Ev(%"class.aura::WindowOcclusionTracker"* nonnull %8) #13
  %9 = ptrtoint i8* %7 to i64
  %10 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.92"* %2 to i64*
  store i64 %9, i64* %11, align 8
  %12 = icmp eq %"class.aura::WindowOcclusionTracker"* %10, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.aura::WindowOcclusionTracker"* %10 to void (%"class.aura::WindowOcclusionTracker"*)***
  %15 = load void (%"class.aura::WindowOcclusionTracker"*)**, void (%"class.aura::WindowOcclusionTracker"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %15, i64 6
  %17 = load void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %16, align 8
  tail call void %17(%"class.aura::WindowOcclusionTracker"* nonnull %10) #13
  %18 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  br label %19

19:                                               ; preds = %1, %6, %13
  %20 = phi %"class.aura::WindowOcclusionTracker"* [ %4, %1 ], [ %8, %6 ], [ %18, %13 ]
  tail call void @_ZN4aura22WindowOcclusionTracker5PauseEv(%"class.aura::WindowOcclusionTracker"* %20) #13
  ret void
}

declare void @_ZN4aura22WindowOcclusionTracker5PauseEv(%"class.aura::WindowOcclusionTracker"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env30UnpauseWindowOcclusionTrackingEv(%"class.aura::Env"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 17
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.92"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  %5 = icmp eq %"class.aura::WindowOcclusionTracker"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 264) #14
  %8 = bitcast i8* %7 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTrackerC1Ev(%"class.aura::WindowOcclusionTracker"* nonnull %8) #13
  %9 = ptrtoint i8* %7 to i64
  %10 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.92"* %2 to i64*
  store i64 %9, i64* %11, align 8
  %12 = icmp eq %"class.aura::WindowOcclusionTracker"* %10, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.aura::WindowOcclusionTracker"* %10 to void (%"class.aura::WindowOcclusionTracker"*)***
  %15 = load void (%"class.aura::WindowOcclusionTracker"*)**, void (%"class.aura::WindowOcclusionTracker"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %15, i64 6
  %17 = load void (%"class.aura::WindowOcclusionTracker"*)*, void (%"class.aura::WindowOcclusionTracker"*)** %16, align 8
  tail call void %17(%"class.aura::WindowOcclusionTracker"* nonnull %10) #13
  %18 = load %"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowOcclusionTracker"** %3, align 8
  br label %19

19:                                               ; preds = %1, %6, %13
  %20 = phi %"class.aura::WindowOcclusionTracker"* [ %4, %1 ], [ %8, %6 ], [ %18, %13 ]
  tail call void @_ZN4aura22WindowOcclusionTracker7UnpauseEv(%"class.aura::WindowOcclusionTracker"* %20) #13
  ret void
}

declare void @_ZN4aura22WindowOcclusionTracker7UnpauseEv(%"class.aura::WindowOcclusionTracker"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env16AddEventObserverEPN2ui13EventObserverEPNS1_11EventTargetERKNSt3__13setINS1_9EventTypeENS6_4lessIS8_EENS6_9allocatorIS8_EEEE(%"class.aura::Env"*, %"class.ui::EventObserver"*, %"class.ui::EventTarget"*, %"class.std::__1::set.218"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 104) #14
  %6 = bitcast i8* %5 to %"class.aura::EventObserverAdapter"*
  tail call void @_ZN4aura20EventObserverAdapterC2EPN2ui13EventObserverEPNS1_11EventTargetERKNSt3__13setINS1_9EventTypeENS6_4lessIS8_EENS6_9allocatorIS8_EEEE(%"class.aura::EventObserverAdapter"* nonnull %6, %"class.ui::EventObserver"* %1, %"class.ui::EventTarget"* %2, %"class.std::__1::set.218"* dereferenceable(24) %3) #13
  %7 = ptrtoint i8* %5 to i64
  %8 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5
  tail call void @_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList.27"* %8, %"class.aura::EventObserverAdapter"* nonnull %6)
  %9 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node.356"**
  %12 = load %"class.std::__1::__tree_node.356"*, %"class.std::__1::__tree_node.356"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node.356"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %38, %14
  %17 = phi %"class.std::__1::__tree_node.356"* [ %41, %38 ], [ %12, %14 ]
  %18 = phi %"class.std::__1::__tree_node_base"** [ %40, %38 ], [ %15, %14 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.aura::EventObserverAdapter"*, %"class.aura::EventObserverAdapter"** %19, align 8
  %21 = icmp ugt %"class.aura::EventObserverAdapter"* %20, %6
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %17, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %38

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %17, i64 0, i32 0, i32 0
  br label %44

28:                                               ; preds = %16
  %29 = icmp ult %"class.aura::EventObserverAdapter"* %20, %6
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %17, i64 0, i32 0, i32 1
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %17, i64 0, i32 0, i32 0
  br label %44

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %17, i64 0, i32 0, i32 0
  br label %44

38:                                               ; preds = %30, %22
  %39 = phi %"class.std::__1::__tree_node_base"* [ %24, %22 ], [ %32, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %23, %22 ], [ %31, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node.356"*
  br label %16

42:                                               ; preds = %4
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  br label %44

44:                                               ; preds = %42, %36, %34, %26
  %45 = phi %"class.std::__1::__tree_end_node"* [ %10, %42 ], [ %27, %26 ], [ %35, %34 ], [ %37, %36 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %43, %42 ], [ %23, %26 ], [ %31, %34 ], [ %18, %36 ]
  %47 = bitcast %"class.std::__1::__tree_node_base"** %46 to %"class.std::__1::__tree_node.356"**
  %48 = load %"class.std::__1::__tree_node.356"*, %"class.std::__1::__tree_node.356"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node.356"* %48, null
  br i1 %49, label %50, label %74

50:                                               ; preds = %44
  %51 = tail call i8* @_Znwm(i64 40) #14, !noalias !11
  %52 = getelementptr inbounds i8, i8* %51, i64 32
  %53 = bitcast i8* %52 to i64*
  store i64 %7, i64* %53, align 8, !noalias !11
  %54 = bitcast i8* %51 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %51, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %45, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %46 to i8**
  store i8* %51, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %50
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::set"* %9 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  br label %67

67:                                               ; preds = %50, %63
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %50 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #13
  %71 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %79

74:                                               ; preds = %44
  %75 = bitcast i8* %5 to void (%"class.aura::EventObserverAdapter"*)***
  %76 = load void (%"class.aura::EventObserverAdapter"*)**, void (%"class.aura::EventObserverAdapter"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.aura::EventObserverAdapter"*)*, void (%"class.aura::EventObserverAdapter"*)** %76, i64 1
  %78 = load void (%"class.aura::EventObserverAdapter"*)*, void (%"class.aura::EventObserverAdapter"*)** %77, align 8
  tail call void %78(%"class.aura::EventObserverAdapter"* nonnull %6) #13
  br label %79

79:                                               ; preds = %67, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS2_(%"class.base::ObserverList.27"*, %"class.aura::EventObserverAdapter"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::CheckedObserverAdapter", align 8
  %4 = icmp eq %"class.aura::EventObserverAdapter"* %1, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %7, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %1, i64 0, i32 1
  br label %13

13:                                               ; preds = %22, %11
  %14 = phi %"class.base::internal::CheckedObserverAdapter"* [ %23, %22 ], [ %7, %11 ]
  %15 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %15) #13
  %17 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to %"class.base::CheckedObserver"**
  %19 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %18, align 8
  %20 = select i1 %16, %"class.base::CheckedObserver"* %19, %"class.base::CheckedObserver"* null
  %21 = icmp eq %"class.base::CheckedObserver"* %20, %12
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %14, i64 1
  %24 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %23, %9
  br i1 %24, label %25, label %13

25:                                               ; preds = %13, %22
  %26 = phi %"class.base::internal::CheckedObserverAdapter"* [ %9, %22 ], [ %14, %13 ]
  %27 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %26, %27
  br i1 %28, label %29, label %48

29:                                               ; preds = %25, %5, %2
  %30 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  %33 = bitcast %"class.base::internal::CheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %1, i64 0, i32 1
  %35 = select i1 %4, %"class.base::CheckedObserver"* null, %"class.base::CheckedObserver"* %34
  call void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"* nonnull %3, %"class.base::CheckedObserver"* %35) #13
  %36 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %38, align 8
  %40 = icmp ult %"class.base::internal::CheckedObserverAdapter"* %37, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %29
  call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #13
  %42 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %43 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %42 to i64
  %44 = bitcast %"class.base::internal::CheckedObserverAdapter"** %36 to i64*
  store i64 %43, i64* %44, align 8
  br label %47

45:                                               ; preds = %29
  %46 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.28"* %46, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #13
  br label %47

47:                                               ; preds = %41, %45
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #13
  br label %48

48:                                               ; preds = %25, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env19RemoveEventObserverEPN2ui13EventObserverE(%"class.aura::Env"*, %"class.ui::EventObserver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %52, label %8

8:                                                ; preds = %2, %49
  %9 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.aura::EventObserverAdapter"**
  %12 = load %"class.aura::EventObserverAdapter"*, %"class.aura::EventObserverAdapter"** %11, align 8
  %13 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %12, i64 0, i32 2
  %14 = load %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %13, align 8
  %15 = icmp eq %"class.ui::EventObserver"* %14, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %8
  %17 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::unique_ptr.228"*
  %18 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5
  tail call void @_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList.27"* %18, %"class.aura::EventObserverAdapter"* %12)
  %19 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0
  %20 = tail call i64 @_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE14__erase_uniqueIS6_EEmRKT_(%"class.std::__1::__tree.44"* %19, %"class.std::__1::unique_ptr.228"* dereferenceable(8) %17) #13
  br label %52

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %25, label %33

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node_base"*
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 2
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_end_node"**
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, %26
  br i1 %32, label %49, label %40

33:                                               ; preds = %21, %33
  %34 = phi %"class.std::__1::__tree_node_base"* [ %36, %33 ], [ %23, %21 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %33

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  br label %49

40:                                               ; preds = %25, %40
  %41 = phi %"class.std::__1::__tree_end_node"** [ %44, %40 ], [ %28, %25 ]
  %42 = bitcast %"class.std::__1::__tree_end_node"** %41 to %"class.std::__1::__tree_node_base"**
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 2
  %45 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, %43
  br i1 %48, label %49, label %40

49:                                               ; preds = %40, %25, %38
  %50 = phi %"class.std::__1::__tree_end_node"* [ %39, %38 ], [ %29, %25 ], [ %45, %40 ]
  %51 = icmp eq %"class.std::__1::__tree_end_node"* %50, %6
  br i1 %51, label %52, label %8

52:                                               ; preds = %49, %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS2_(%"class.base::ObserverList.27"*, %"class.aura::EventObserverAdapter"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %6, %8
  br i1 %9, label %100, label %10

10:                                               ; preds = %2
  %11 = icmp eq %"class.aura::EventObserverAdapter"* %1, null
  %12 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %1, i64 0, i32 1
  %13 = select i1 %11, %"class.base::CheckedObserver"* null, %"class.base::CheckedObserver"* %12
  br label %14

14:                                               ; preds = %23, %10
  %15 = phi %"class.base::internal::CheckedObserverAdapter"* [ %24, %23 ], [ %6, %10 ]
  %16 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %16) #13
  %18 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %15, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to %"class.base::CheckedObserver"**
  %20 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %19, align 8
  %21 = select i1 %17, %"class.base::CheckedObserver"* %20, %"class.base::CheckedObserver"* null
  %22 = icmp eq %"class.base::CheckedObserver"* %21, %13
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %15, i64 1
  %25 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %8
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %23
  %27 = phi %"class.base::internal::CheckedObserverAdapter"* [ %8, %23 ], [ %15, %14 ]
  %28 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %29 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %28
  br i1 %29, label %100, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %27, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %35) #13
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #13
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %40

40:                                               ; preds = %30, %34, %37
  %41 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %27, i64 0, i32 0, i32 0, i32 0
  %42 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %41) #13
  %43 = bitcast i64* %31 to %"class.base::CheckedObserver"**
  %44 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %43, align 8
  %45 = icmp eq %"class.base::CheckedObserver"* %44, null
  %46 = xor i1 %42, true
  %47 = or i1 %45, %46
  br i1 %47, label %52, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, -1
  store i64 %51, i64* %49, align 8
  br label %52

52:                                               ; preds = %48, %40
  %53 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast %"class.base::internal::LinkNodeBase"** %53 to %"class.base::LinkNode.42"**
  %55 = load %"class.base::LinkNode.42"*, %"class.base::LinkNode.42"** %54, align 8
  %56 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %0, i64 0, i32 1, i32 0
  %57 = icmp eq %"class.base::LinkNode.42"* %55, %56
  br i1 %57, label %58, label %81

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %27, i64 1
  %60 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %61 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %59, %60
  br i1 %61, label %72, label %62

62:                                               ; preds = %58, %62
  %63 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %62 ], [ %27, %58 ]
  %64 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %62 ], [ %59, %58 ]
  %65 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %63, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %64) #13
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %64, i64 1
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %63, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %60
  br i1 %68, label %69, label %62

69:                                               ; preds = %62
  %70 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %71 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %70, %67
  br i1 %71, label %79, label %72

72:                                               ; preds = %69, %58
  %73 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %69 ], [ %27, %58 ]
  %74 = phi %"class.base::internal::CheckedObserverAdapter"* [ %70, %69 ], [ %59, %58 ]
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi %"class.base::internal::CheckedObserverAdapter"* [ %77, %75 ], [ %74, %72 ]
  %77 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %76, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %77) #13
  %78 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %77, %73
  br i1 %78, label %79, label %75

79:                                               ; preds = %75, %69
  %80 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %69 ], [ %73, %75 ]
  store %"class.base::internal::CheckedObserverAdapter"* %80, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  br label %100

81:                                               ; preds = %52
  %82 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %83) #13
  %84 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %84, align 8
  %87 = bitcast %"class.base::internal::CheckedObserverAdapter"* %27 to i64*
  %88 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %88, align 8
  store i64 %86, i64* %87, align 8
  %90 = icmp eq %"class.base::internal::WeakReference::Flag"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw sub i32* %92, i32 1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %89) #13
  %96 = bitcast %"class.base::internal::WeakReference::Flag"* %89 to i8*
  call void @_ZdlPv(i8* %96) #14
  br label %97

97:                                               ; preds = %81, %91, %95
  %98 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %31, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #13
  br label %100

100:                                              ; preds = %2, %79, %97, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env20NotifyEventObserversERKN2ui5EventE(%"class.aura::Env"*, %"class.ui::Event"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5
  %6 = bitcast %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %10, align 8, !noalias !14
  %13 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %13, align 8, !noalias !14
  %15 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList.27"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13, !alias.scope !14
  br label %33

19:                                               ; preds = %2
  store %"class.base::ObserverList.27"* %5, %"class.base::ObserverList.27"** %7, align 8, !alias.scope !14
  %20 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #13
  store i64 0, i64* %8, align 8, !alias.scope !14
  %21 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !14
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::CheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !14
  %27 = bitcast %"class.base::ObserverList.27"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !14
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 4
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !14
  call void @_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #13
  br label %33

33:                                               ; preds = %17, %31
  %34 = bitcast %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %38 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %38) #13
  %40 = bitcast %"class.base::ObserverList.27"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #13, !alias.scope !17
  %41 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 8
  %43 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 0
  br label %44

44:                                               ; preds = %192, %33
  %45 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %7, align 8
  %46 = icmp eq %"class.base::ObserverList.27"* %45, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %44
  %48 = load i64, i64* %8, align 8
  %49 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %45, i64 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.base::internal::CheckedObserverAdapter"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.base::ObserverList.27"* %45 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 4
  %56 = load i64, i64* %9, align 8
  %57 = icmp ult i64 %55, %56
  %58 = select i1 %57, i64 %55, i64 %56
  %59 = icmp eq i64 %48, %58
  br i1 %59, label %62, label %60

60:                                               ; preds = %47
  %61 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %35, align 8
  br label %78

62:                                               ; preds = %47, %44
  %63 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %35, align 8
  %64 = icmp eq %"class.base::ObserverList.27"* %63, null
  br i1 %64, label %113, label %65

65:                                               ; preds = %62
  %66 = load i64, i64* %36, align 8
  %67 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %63, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.base::internal::CheckedObserverAdapter"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.base::ObserverList.27"* %63 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = ashr exact i64 %72, 4
  %74 = load i64, i64* %37, align 8
  %75 = icmp ult i64 %73, %74
  %76 = select i1 %75, i64 %73, i64 %74
  %77 = icmp eq i64 %66, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %65, %60
  %79 = phi %"class.base::ObserverList.27"* [ %61, %60 ], [ %63, %65 ]
  %80 = icmp eq %"class.base::ObserverList.27"* %45, %79
  %81 = load i64, i64* %8, align 8
  %82 = load i64, i64* %36, align 8
  %83 = icmp eq i64 %81, %82
  %84 = and i1 %80, %83
  br i1 %84, label %85, label %142

85:                                               ; preds = %78
  %86 = icmp eq %"class.base::ObserverList.27"* %45, null
  br i1 %86, label %113, label %87

87:                                               ; preds = %65, %85
  %88 = phi %"class.base::ObserverList.27"* [ %45, %85 ], [ %63, %65 ]
  %89 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %88, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %88, i64 0, i32 1, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::LinkNodeBase"** %90 to %"class.base::LinkNode.42"**
  %92 = load %"class.base::LinkNode.42"*, %"class.base::LinkNode.42"** %91, align 8
  %93 = bitcast %"class.base::LinkedList.41"* %89 to %"class.base::LinkNode.42"**
  %94 = load %"class.base::LinkNode.42"*, %"class.base::LinkNode.42"** %93, align 8
  %95 = icmp eq %"class.base::LinkNode.42"* %92, %94
  br i1 %95, label %96, label %109

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %88, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %97, align 8
  %99 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %88, i64 0, i32 0, i32 0, i32 1
  %100 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %99, align 8
  %101 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN4aura20EventObserverAdapterELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %98, %"class.base::internal::CheckedObserverAdapter"* %100) #13
  %102 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %99, align 8
  %103 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %101, %102
  br i1 %103, label %109, label %104

104:                                              ; preds = %96, %104
  %105 = phi %"class.base::internal::CheckedObserverAdapter"* [ %106, %104 ], [ %102, %96 ]
  %106 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %105, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %106) #13
  %107 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %106, %101
  br i1 %107, label %108, label %104

108:                                              ; preds = %104
  store %"class.base::internal::CheckedObserverAdapter"* %101, %"class.base::internal::CheckedObserverAdapter"** %99, align 8
  br label %109

109:                                              ; preds = %108, %96, %87
  %110 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %35, align 8
  %111 = icmp eq %"class.base::ObserverList.27"* %110, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %109
  store %"class.base::ObserverList.27"* null, %"class.base::ObserverList.27"** %35, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %38) #13
  br label %113

113:                                              ; preds = %62, %85, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #13
  %114 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %7, align 8
  %115 = icmp eq %"class.base::ObserverList.27"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %114, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %114, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode.42"**
  %120 = load %"class.base::LinkNode.42"*, %"class.base::LinkNode.42"** %119, align 8
  %121 = bitcast %"class.base::LinkedList.41"* %117 to %"class.base::LinkNode.42"**
  %122 = load %"class.base::LinkNode.42"*, %"class.base::LinkNode.42"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode.42"* %120, %122
  br i1 %123, label %124, label %137

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %114, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %114, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %127, align 8
  %129 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN4aura20EventObserverAdapterELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"* %126, %"class.base::internal::CheckedObserverAdapter"* %128) #13
  %130 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %127, align 8
  %131 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %129, %130
  br i1 %131, label %137, label %132

132:                                              ; preds = %124, %132
  %133 = phi %"class.base::internal::CheckedObserverAdapter"* [ %134, %132 ], [ %130, %124 ]
  %134 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %133, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %134) #13
  %135 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %134, %129
  br i1 %135, label %136, label %132

136:                                              ; preds = %132
  store %"class.base::internal::CheckedObserverAdapter"* %129, %"class.base::internal::CheckedObserverAdapter"** %127, align 8
  br label %137

137:                                              ; preds = %136, %124, %116
  %138 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %7, align 8
  %139 = icmp eq %"class.base::ObserverList.27"* %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  store %"class.base::ObserverList.27"* null, %"class.base::ObserverList.27"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br label %141

141:                                              ; preds = %113, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #13
  ret void

142:                                              ; preds = %78
  %143 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %45, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %143, align 8
  %145 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %144, i64 %81, i32 0, i32 0, i32 0
  %146 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %145) #13
  %147 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %144, i64 %81, i32 0, i32 0, i32 1
  %148 = bitcast i64* %147 to %"class.base::CheckedObserver"**
  %149 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %148, align 8
  %150 = select i1 %146, %"class.base::CheckedObserver"* %149, %"class.base::CheckedObserver"* null
  %151 = icmp eq %"class.base::CheckedObserver"* %150, null
  %152 = getelementptr inbounds %"class.base::CheckedObserver", %"class.base::CheckedObserver"* %150, i64 -2, i32 1
  %153 = bitcast %"class.base::WeakPtrFactory"* %152 to %"class.aura::EventObserverAdapter"*
  %154 = select i1 %151, %"class.aura::EventObserverAdapter"* null, %"class.aura::EventObserverAdapter"* %153
  %155 = load i32, i32* %41, align 8
  %156 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %154, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %157 = bitcast %"class.std::__1::__tree_end_node"* %156 to %"class.std::__1::__tree_node"**
  %158 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node"* %158, null
  br i1 %159, label %189, label %160

160:                                              ; preds = %142, %172
  %161 = phi %"class.std::__1::__tree_node"* [ %174, %172 ], [ %158, %142 ]
  %162 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %161, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp slt i32 %155, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = bitcast %"class.std::__1::__tree_node"* %161 to %"class.std::__1::__tree_node"**
  br label %172

167:                                              ; preds = %160
  %168 = icmp slt i32 %163, %155
  br i1 %168, label %169, label %176

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %161, i64 0, i32 0, i32 1
  %171 = bitcast %"class.std::__1::__tree_node_base"** %170 to %"class.std::__1::__tree_node"**
  br label %172

172:                                              ; preds = %169, %165
  %173 = phi %"class.std::__1::__tree_node"** [ %166, %165 ], [ %171, %169 ]
  %174 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node"* %174, null
  br i1 %175, label %189, label %160

176:                                              ; preds = %167
  %177 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %154, i64 0, i32 3
  %178 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %177, align 8
  %179 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %42, align 8
  %180 = icmp eq %"class.ui::EventTarget"* %178, %179
  %181 = icmp eq %"class.ui::EventTarget"* %178, %43
  %182 = or i1 %181, %180
  br i1 %182, label %183, label %189

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %154, i64 0, i32 2
  %185 = load %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %184, align 8
  %186 = bitcast %"class.ui::EventObserver"* %185 to void (%"class.ui::EventObserver"*, %"class.ui::Event"*)***
  %187 = load void (%"class.ui::EventObserver"*, %"class.ui::Event"*)**, void (%"class.ui::EventObserver"*, %"class.ui::Event"*)*** %186, align 8
  %188 = load void (%"class.ui::EventObserver"*, %"class.ui::Event"*)*, void (%"class.ui::EventObserver"*, %"class.ui::Event"*)** %187, align 8
  call void %188(%"class.ui::EventObserver"* %185, %"class.ui::Event"* dereferenceable(144) %1) #13
  br label %189

189:                                              ; preds = %172, %176, %142, %183
  %190 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %7, align 8
  %191 = icmp eq %"class.base::ObserverList.27"* %190, null
  br i1 %191, label %192, label %193

192:                                              ; preds = %189, %193
  br label %44

193:                                              ; preds = %189
  %194 = load i64, i64* %8, align 8
  %195 = add i64 %194, 1
  store i64 %195, i64* %8, align 8
  call void @_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #13
  br label %192
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3EnvC2Ev(%"class.aura::Env"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 0
  tail call void @_ZN2ui11EventTargetC2Ev(%"class.ui::EventTarget"* %2) #13
  %3 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::SupportsUserData.base"* %3 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataC2Ev(%"class.base::SupportsUserData"* %4) #13
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [4 x i8*] }, { [10 x i8*], [4 x i8*] }* @_ZTVN4aura3EnvE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.base::SupportsUserData.base", %"class.base::SupportsUserData.base"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [4 x i8*] }, { [10 x i8*], [4 x i8*] }* @_ZTVN4aura3EnvE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3
  %8 = bitcast %"class.base::ObserverList"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #13
  %9 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %9, %"class.base::internal::LinkNodeBase"* %9, %"class.base::internal::LinkNodeBase"* %9) #13
  %10 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4
  %13 = bitcast %"class.base::ObserverList.23"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  %14 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %14, %"class.base::internal::LinkNodeBase"* %14, %"class.base::internal::LinkNodeBase"* %14) #13
  %15 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5
  %18 = bitcast %"class.base::ObserverList.27"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13
  %19 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %19, %"class.base::internal::LinkNodeBase"* %19, %"class.base::internal::LinkNodeBase"* %19) #13
  %20 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 2
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 6, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = tail call i8* @_Znwm(i64 16) #14
  %27 = bitcast i8* %26 to %"class.aura::EnvInputStateController"*
  tail call void @_ZN4aura23EnvInputStateControllerC1EPNS_3EnvE(%"class.aura::EnvInputStateController"* nonnull %27, %"class.aura::Env"* %0) #13
  %28 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = bitcast %"class.aura::EnvInputStateController"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 8
  %31 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 11
  %32 = bitcast i32* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 13, i1 false)
  %33 = tail call i8* @_Znwm(i64 112) #14
  %34 = bitcast i8* %33 to %"class.ui::GestureRecognizerImpl"*
  tail call void @_ZN2ui21GestureRecognizerImplC1Ev(%"class.ui::GestureRecognizerImpl"* nonnull %34) #13
  %35 = ptrtoint i8* %33 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.56"* %31 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 12
  %38 = bitcast %"class.std::__1::unique_ptr.62"* %37 to i64*
  store i64 0, i64* %38, align 8
  %39 = tail call %"class.aura::InputStateLookup"* @_ZN4aura16InputStateLookup6CreateEv() #13
  %40 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  store %"class.aura::InputStateLookup"* %39, %"class.aura::InputStateLookup"** %40, align 8
  %41 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 14
  %42 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 16
  %43 = bitcast %"class.std::__1::unique_ptr.78"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  %44 = load i8, i8* @_ZN4aura3Env33initial_throttle_input_on_resize_E, align 1, !range !20
  store i8 %44, i8* %42, align 8
  %45 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 17
  %46 = bitcast %"class.std::__1::unique_ptr.92"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false)
  %47 = tail call zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() #13
  br i1 %47, label %60, label %48

48:                                               ; preds = %1
  %49 = tail call i8* @_Znwm(i64 136) #14
  %50 = bitcast i8* %49 to %"class.ui::X11CursorFactory"*
  tail call void @_ZN2ui16X11CursorFactoryC1Ev(%"class.ui::X11CursorFactory"* nonnull %50) #13
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %37, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.ui::CursorFactory"*, %"class.ui::CursorFactory"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.62"* %37 to i8**
  store i8* %49, i8** %53, align 8
  %54 = icmp eq %"class.ui::CursorFactory"* %52, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.ui::CursorFactory"* %52 to void (%"class.ui::CursorFactory"*)***
  %57 = load void (%"class.ui::CursorFactory"*)**, void (%"class.ui::CursorFactory"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.ui::CursorFactory"*)*, void (%"class.ui::CursorFactory"*)** %57, i64 1
  %59 = load void (%"class.ui::CursorFactory"*)*, void (%"class.ui::CursorFactory"*)** %58, align 8
  tail call void %59(%"class.ui::CursorFactory"* nonnull %52) #13
  br label %60

60:                                               ; preds = %48, %55, %1
  ret void
}

declare void @_ZN2ui11EventTargetC2Ev(%"class.ui::EventTarget"*) unnamed_addr #7

declare void @_ZN4base16SupportsUserDataC2Ev(%"class.base::SupportsUserData"*) unnamed_addr #7

declare %"class.aura::InputStateLookup"* @_ZN4aura16InputStateLookup6CreateEv() local_unnamed_addr #7

declare zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() local_unnamed_addr #7

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #7

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #7

declare void @_ZN2ui13OzonePlatform15InitializeForUIERKNS0_10InitParamsE(%"struct.ui::OzonePlatform::InitParams"* dereferenceable(3)) local_unnamed_addr #7

declare %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() local_unnamed_addr #7

declare %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource13CreateDefaultEv() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env23NotifyWindowInitializedEPNS_6WindowE(%"class.aura::Env"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3
  %6 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !21
  %13 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !21
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13, !alias.scope !21
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !21
  %20 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #13
  store i64 0, i64* %8, align 8, !alias.scope !21
  %21 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !21
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !21
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !21
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !21
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !21
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #13
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #13, !alias.scope !24
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %307, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %305, %307 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !27

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %397
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %169, %167 ]
  %174 = phi i64 [ %398, %397 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %375, label %369

189:                                              ; preds = %397, %167
  %190 = phi i64 [ %168, %167 ], [ %398, %397 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #13
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #13
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !28

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %365
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %262, %260 ]
  %267 = phi i64 [ %366, %365 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %343, label %337

282:                                              ; preds = %365, %260
  %283 = phi i64 [ %261, %260 ], [ %366, %365 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #13
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.aura::EnvObserver"**
  %301 = load %"class.aura::EnvObserver"*, %"class.aura::EnvObserver"** %300, align 8
  %302 = bitcast %"class.aura::EnvObserver"* %301 to void (%"class.aura::EnvObserver"*, %"class.aura::Window"*)***
  %303 = load void (%"class.aura::EnvObserver"*, %"class.aura::Window"*)**, void (%"class.aura::EnvObserver"*, %"class.aura::Window"*)*** %302, align 8
  %304 = load void (%"class.aura::EnvObserver"*, %"class.aura::Window"*)*, void (%"class.aura::EnvObserver"*, %"class.aura::Window"*)** %303, align 8
  call void %304(%"class.aura::EnvObserver"* %301, %"class.aura::Window"* %1) #13
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %296, %308, %322
  br label %68

308:                                              ; preds = %296
  %309 = load i64, i64* %8, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %8, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %9, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %8, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %277
  %338 = ptrtoint i8* %280 to i64
  %339 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %278 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %277
  %344 = phi i64 [ %278, %277 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %217
  br i1 %368, label %282, label %265

369:                                              ; preds = %184
  %370 = ptrtoint i8* %187 to i64
  %371 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %185 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %184
  %376 = phi i64 [ %185, %184 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %124
  br i1 %400, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env21NotifyHostInitializedEPNS_14WindowTreeHostE(%"class.aura::Env"*, %"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = ptrtoint %"class.aura::WindowTreeHost"* %1 to i64
  %6 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 18
  %7 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 18, i32 0, i32 1
  %8 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %7, align 8
  %9 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %9, align 8
  %11 = icmp eq %"class.aura::WindowTreeHost"** %8, %10
  %12 = ptrtoint %"class.aura::WindowTreeHost"** %10 to i64
  br i1 %11, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.aura::WindowTreeHost"** %8 to i64*
  store i64 %5, i64* %14, align 8
  %15 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %8, i64 1
  %16 = ptrtoint %"class.aura::WindowTreeHost"** %15 to i64
  %17 = bitcast %"class.aura::WindowTreeHost"*** %7 to i64*
  store i64 %16, i64* %17, align 8
  br label %75

18:                                               ; preds = %2
  %19 = ptrtoint %"class.aura::WindowTreeHost"** %8 to i64
  %20 = bitcast %"class.aura::WindowTreeHost"*** %7 to i64*
  %21 = bitcast %"class.std::__1::vector.147"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.147"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #15
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.aura::WindowTreeHost"*** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #15
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #14
  %46 = bitcast i8* %45 to %"class.aura::WindowTreeHost"**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"class.aura::WindowTreeHost"** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %49, i64 %24
  %51 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %49, i64 %48
  %52 = ptrtoint %"class.aura::WindowTreeHost"** %51 to i64
  %53 = bitcast %"class.aura::WindowTreeHost"** %50 to i64*
  store i64 %5, i64* %53, align 8
  %54 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %50, i64 1
  %55 = ptrtoint %"class.aura::WindowTreeHost"** %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %6, i64 0, i32 0, i32 0
  %57 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %56, align 8
  %58 = load i64, i64* %20, align 8
  %59 = ptrtoint %"class.aura::WindowTreeHost"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %50, i64 %62
  %64 = ptrtoint %"class.aura::WindowTreeHost"** %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %47
  %67 = bitcast %"class.aura::WindowTreeHost"** %63 to i8*
  %68 = bitcast %"class.aura::WindowTreeHost"** %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #13
  %69 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %56, align 8
  br label %70

70:                                               ; preds = %66, %47
  %71 = phi %"class.aura::WindowTreeHost"** [ %57, %47 ], [ %69, %66 ]
  store i64 %64, i64* %21, align 8
  store i64 %55, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %72 = icmp eq %"class.aura::WindowTreeHost"** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.aura::WindowTreeHost"** %71 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %13, %70, %73
  %76 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3
  %77 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %80 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %81 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %76, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 40, i1 false)
  %83 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %81, align 8, !noalias !29
  %84 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %85 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %84, align 8, !noalias !29
  %86 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %83, %85
  %87 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %87) #13
  br i1 %86, label %88, label %90

88:                                               ; preds = %75
  %89 = bitcast %"class.base::ObserverList"** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #13, !alias.scope !29
  br label %130

90:                                               ; preds = %75
  store %"class.base::ObserverList"* %76, %"class.base::ObserverList"** %78, align 8, !alias.scope !29
  %91 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %87, %"class.base::internal::LinkNodeBase"* %91) #13
  store i64 0, i64* %79, align 8, !alias.scope !29
  %92 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 3
  %93 = load i32, i32* %92, align 8, !noalias !29
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %102, label %95

95:                                               ; preds = %90
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %84 to i64*
  %97 = load i64, i64* %96, align 8, !noalias !29
  %98 = bitcast %"class.base::ObserverList"* %76 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !29
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  br label %102

102:                                              ; preds = %95, %90
  %103 = phi i64 [ %101, %95 ], [ -1, %90 ]
  store i64 %103, i64* %80, align 8, !alias.scope !29
  %104 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8, !alias.scope !29
  %105 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %104, i64 0, i32 0, i32 0, i32 1
  %106 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::ObserverList"* %104 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %107, %109
  %111 = ashr exact i64 %110, 3
  %112 = icmp ult i64 %111, %103
  %113 = select i1 %112, i64 %111, i64 %103
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %130, label %115

115:                                              ; preds = %102
  %116 = inttoptr i64 %109 to %"class.base::internal::UncheckedObserverAdapter"*
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %104, i64 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %116, i64 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %121, label %130

121:                                              ; preds = %115, %125
  %122 = phi i64 [ %123, %125 ], [ 0, %115 ]
  %123 = add nuw i64 %122, 1
  store i64 %123, i64* %79, align 8, !alias.scope !29
  %124 = icmp ult i64 %123, %113
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %117, align 8
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 %123, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %121, label %130

130:                                              ; preds = %121, %125, %88, %102, %115
  %131 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %131) #13
  %132 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %134 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %135 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %135) #13
  %137 = bitcast %"class.base::ObserverList"** %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #13, !alias.scope !32
  %138 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  br label %139

139:                                              ; preds = %379, %130
  %140 = phi %"class.base::ObserverList"* [ %138, %130 ], [ %377, %379 ]
  %141 = icmp eq %"class.base::ObserverList"* %140, null
  br i1 %141, label %157, label %142

142:                                              ; preds = %139
  %143 = load i64, i64* %79, align 8
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %140, i64 0, i32 0, i32 0, i32 1
  %145 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.base::ObserverList"* %140 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %146, %148
  %150 = ashr exact i64 %149, 3
  %151 = load i64, i64* %80, align 8
  %152 = icmp ult i64 %150, %151
  %153 = select i1 %152, i64 %150, i64 %151
  %154 = icmp eq i64 %143, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %142
  %156 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %132, align 8
  br label %173

157:                                              ; preds = %142, %139
  %158 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %132, align 8
  %159 = icmp eq %"class.base::ObserverList"* %158, null
  br i1 %159, label %273, label %160

160:                                              ; preds = %157
  %161 = load i64, i64* %133, align 8
  %162 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %158, i64 0, i32 0, i32 0, i32 1
  %163 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.base::ObserverList"* %158 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %164, %166
  %168 = ashr exact i64 %167, 3
  %169 = load i64, i64* %134, align 8
  %170 = icmp ult i64 %168, %169
  %171 = select i1 %170, i64 %168, i64 %169
  %172 = icmp eq i64 %161, %171
  br i1 %172, label %182, label %173

173:                                              ; preds = %160, %155
  %174 = phi %"class.base::ObserverList"* [ %156, %155 ], [ %158, %160 ]
  %175 = icmp eq %"class.base::ObserverList"* %140, %174
  %176 = load i64, i64* %79, align 8
  %177 = load i64, i64* %133, align 8
  %178 = icmp eq i64 %176, %177
  %179 = and i1 %175, %178
  br i1 %179, label %180, label %367

180:                                              ; preds = %173
  %181 = icmp eq %"class.base::ObserverList"* %140, null
  br i1 %181, label %273, label %182

182:                                              ; preds = %160, %180
  %183 = phi %"class.base::ObserverList"* [ %140, %180 ], [ %158, %160 ]
  %184 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %183, i64 0, i32 1
  %185 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %183, i64 0, i32 1, i32 0, i32 0, i32 1
  %186 = bitcast %"class.base::internal::LinkNodeBase"** %185 to %"class.base::LinkNode"**
  %187 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %186, align 8
  %188 = bitcast %"class.base::LinkedList"* %184 to %"class.base::LinkNode"**
  %189 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %188, align 8
  %190 = icmp eq %"class.base::LinkNode"* %187, %189
  br i1 %190, label %191, label %269

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %183, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %192, align 8
  %194 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %183, i64 0, i32 0, i32 0, i32 1
  %195 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %194, align 8
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %193, %195
  br i1 %196, label %205, label %197

197:                                              ; preds = %191, %202
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %203, %202 ], [ %193, %191 ]
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = icmp eq i8* %200, null
  br i1 %201, label %205, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %204 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %203, %195
  br i1 %204, label %269, label %197

205:                                              ; preds = %197, %191
  %206 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %193, %191 ], [ %198, %197 ]
  %207 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %206 to i64
  %208 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %206, %195
  br i1 %208, label %269, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 1
  %211 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %210, %195
  br i1 %211, label %264, label %212

212:                                              ; preds = %209
  %213 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 -2, i32 0
  %214 = ptrtoint i8** %213 to i64
  %215 = sub i64 %214, %207
  %216 = lshr i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = and i64 %217, 3
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %238, label %220

220:                                              ; preds = %212, %233
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %233 ], [ %210, %212 ]
  %222 = phi i64 [ %234, %233 ], [ %207, %212 ]
  %223 = phi i64 [ %236, %233 ], [ %218, %212 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %233, label %227

227:                                              ; preds = %220
  %228 = ptrtoint i8* %225 to i64
  %229 = inttoptr i64 %222 to %"class.base::internal::UncheckedObserverAdapter"*
  %230 = inttoptr i64 %222 to i64*
  store i64 %228, i64* %230, align 8
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 1
  %232 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %231 to i64
  br label %233

233:                                              ; preds = %227, %220
  %234 = phi i64 [ %222, %220 ], [ %232, %227 ]
  %235 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1
  %236 = add i64 %223, -1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %220, !llvm.loop !35

238:                                              ; preds = %233, %212
  %239 = phi i64 [ undef, %212 ], [ %234, %233 ]
  %240 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %210, %212 ], [ %235, %233 ]
  %241 = phi i64 [ %207, %212 ], [ %234, %233 ]
  %242 = icmp ult i64 %215, 24
  br i1 %242, label %260, label %243

243:                                              ; preds = %238, %469
  %244 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %471, %469 ], [ %240, %238 ]
  %245 = phi i64 [ %470, %469 ], [ %241, %238 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %243
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %245 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %245 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %243
  %256 = phi i64 [ %245, %243 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 1, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = icmp eq i8* %258, null
  br i1 %259, label %447, label %441

260:                                              ; preds = %469, %238
  %261 = phi i64 [ %239, %238 ], [ %470, %469 ]
  %262 = inttoptr i64 %261 to %"class.base::internal::UncheckedObserverAdapter"*
  %263 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %194, align 8
  br label %264

264:                                              ; preds = %260, %209
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %195, %209 ], [ %263, %260 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %206, %209 ], [ %262, %260 ]
  %267 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %266, %265
  br i1 %267, label %269, label %268

268:                                              ; preds = %264
  store %"class.base::internal::UncheckedObserverAdapter"* %266, %"class.base::internal::UncheckedObserverAdapter"** %194, align 8
  br label %269

269:                                              ; preds = %202, %268, %264, %205, %182
  %270 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %132, align 8
  %271 = icmp eq %"class.base::ObserverList"* %270, null
  br i1 %271, label %273, label %272

272:                                              ; preds = %269
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %132, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %135) #13
  br label %273

273:                                              ; preds = %157, %180, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %131) #13
  %274 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %275 = icmp eq %"class.base::ObserverList"* %274, null
  br i1 %275, label %366, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %274, i64 0, i32 1
  %278 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %274, i64 0, i32 1, i32 0, i32 0, i32 1
  %279 = bitcast %"class.base::internal::LinkNodeBase"** %278 to %"class.base::LinkNode"**
  %280 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %279, align 8
  %281 = bitcast %"class.base::LinkedList"* %277 to %"class.base::LinkNode"**
  %282 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %281, align 8
  %283 = icmp eq %"class.base::LinkNode"* %280, %282
  br i1 %283, label %284, label %362

284:                                              ; preds = %276
  %285 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %274, i64 0, i32 0, i32 0, i32 0
  %286 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %285, align 8
  %287 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %274, i64 0, i32 0, i32 0, i32 1
  %288 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %287, align 8
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %286, %288
  br i1 %289, label %298, label %290

290:                                              ; preds = %284, %295
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %296, %295 ], [ %286, %284 ]
  %292 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 0, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = icmp eq i8* %293, null
  br i1 %294, label %298, label %295

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %297 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %296, %288
  br i1 %297, label %362, label %290

298:                                              ; preds = %290, %284
  %299 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %286, %284 ], [ %291, %290 ]
  %300 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %299 to i64
  %301 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %299, %288
  br i1 %301, label %362, label %302

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 1
  %304 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %303, %288
  br i1 %304, label %357, label %305

305:                                              ; preds = %302
  %306 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %288, i64 -2, i32 0
  %307 = ptrtoint i8** %306 to i64
  %308 = sub i64 %307, %300
  %309 = lshr i64 %308, 3
  %310 = add nuw nsw i64 %309, 1
  %311 = and i64 %310, 3
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %331, label %313

313:                                              ; preds = %305, %326
  %314 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %328, %326 ], [ %303, %305 ]
  %315 = phi i64 [ %327, %326 ], [ %300, %305 ]
  %316 = phi i64 [ %329, %326 ], [ %311, %305 ]
  %317 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 0, i32 0
  %318 = load i8*, i8** %317, align 8
  %319 = icmp eq i8* %318, null
  br i1 %319, label %326, label %320

320:                                              ; preds = %313
  %321 = ptrtoint i8* %318 to i64
  %322 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %323 = inttoptr i64 %315 to i64*
  store i64 %321, i64* %323, align 8
  %324 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %322, i64 1
  %325 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %324 to i64
  br label %326

326:                                              ; preds = %320, %313
  %327 = phi i64 [ %315, %313 ], [ %325, %320 ]
  %328 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 1
  %329 = add i64 %316, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %313, !llvm.loop !36

331:                                              ; preds = %326, %305
  %332 = phi i64 [ undef, %305 ], [ %327, %326 ]
  %333 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %303, %305 ], [ %328, %326 ]
  %334 = phi i64 [ %300, %305 ], [ %327, %326 ]
  %335 = icmp ult i64 %308, 24
  br i1 %335, label %353, label %336

336:                                              ; preds = %331, %437
  %337 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %439, %437 ], [ %333, %331 ]
  %338 = phi i64 [ %438, %437 ], [ %334, %331 ]
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 0, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %348, label %342

342:                                              ; preds = %336
  %343 = ptrtoint i8* %340 to i64
  %344 = inttoptr i64 %338 to %"class.base::internal::UncheckedObserverAdapter"*
  %345 = inttoptr i64 %338 to i64*
  store i64 %343, i64* %345, align 8
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 1
  %347 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %346 to i64
  br label %348

348:                                              ; preds = %342, %336
  %349 = phi i64 [ %338, %336 ], [ %347, %342 ]
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 1, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %415, label %409

353:                                              ; preds = %437, %331
  %354 = phi i64 [ %332, %331 ], [ %438, %437 ]
  %355 = inttoptr i64 %354 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %287, align 8
  br label %357

357:                                              ; preds = %353, %302
  %358 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %288, %302 ], [ %356, %353 ]
  %359 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %299, %302 ], [ %355, %353 ]
  %360 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %359, %358
  br i1 %360, label %362, label %361

361:                                              ; preds = %357
  store %"class.base::internal::UncheckedObserverAdapter"* %359, %"class.base::internal::UncheckedObserverAdapter"** %287, align 8
  br label %362

362:                                              ; preds = %295, %361, %357, %298, %276
  %363 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %364 = icmp eq %"class.base::ObserverList"* %363, null
  br i1 %364, label %366, label %365

365:                                              ; preds = %362
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %78, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %87) #13
  br label %366

366:                                              ; preds = %273, %362, %365
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #13
  ret void

367:                                              ; preds = %173
  %368 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %140, i64 0, i32 0, i32 0, i32 0
  %369 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %368, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %369, i64 %176
  %371 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %370 to %"class.aura::EnvObserver"**
  %372 = load %"class.aura::EnvObserver"*, %"class.aura::EnvObserver"** %371, align 8
  %373 = bitcast %"class.aura::EnvObserver"* %372 to void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)***
  %374 = load void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)**, void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)*** %373, align 8
  %375 = getelementptr inbounds void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)** %374, i64 1
  %376 = load void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)** %375, align 8
  call void %376(%"class.aura::EnvObserver"* %372, %"class.aura::WindowTreeHost"* %1) #13
  %377 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %378 = icmp eq %"class.base::ObserverList"* %377, null
  br i1 %378, label %379, label %380

379:                                              ; preds = %404, %400, %367, %380, %394
  br label %139

380:                                              ; preds = %367
  %381 = load i64, i64* %79, align 8
  %382 = add i64 %381, 1
  store i64 %382, i64* %79, align 8
  %383 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %377, i64 0, i32 0, i32 0, i32 1
  %384 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = bitcast %"class.base::ObserverList"* %377 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = sub i64 %385, %387
  %389 = ashr exact i64 %388, 3
  %390 = load i64, i64* %80, align 8
  %391 = icmp ult i64 %389, %390
  %392 = select i1 %391, i64 %389, i64 %390
  %393 = icmp ult i64 %382, %392
  br i1 %393, label %394, label %379

394:                                              ; preds = %380
  %395 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %377, i64 0, i32 0, i32 0, i32 0
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 %382, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = icmp eq i8* %398, null
  br i1 %399, label %400, label %379

400:                                              ; preds = %394, %404
  %401 = phi i64 [ %402, %404 ], [ %382, %394 ]
  %402 = add nuw i64 %401, 1
  store i64 %402, i64* %79, align 8
  %403 = icmp ult i64 %402, %392
  br i1 %403, label %404, label %379

404:                                              ; preds = %400
  %405 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %396, align 8
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %405, i64 %402, i32 0
  %407 = load i8*, i8** %406, align 8
  %408 = icmp eq i8* %407, null
  br i1 %408, label %400, label %379

409:                                              ; preds = %348
  %410 = ptrtoint i8* %351 to i64
  %411 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %412 = inttoptr i64 %349 to i64*
  store i64 %410, i64* %412, align 8
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %411, i64 1
  %414 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %413 to i64
  br label %415

415:                                              ; preds = %409, %348
  %416 = phi i64 [ %349, %348 ], [ %414, %409 ]
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 2, i32 0
  %418 = load i8*, i8** %417, align 8
  %419 = icmp eq i8* %418, null
  br i1 %419, label %426, label %420

420:                                              ; preds = %415
  %421 = ptrtoint i8* %418 to i64
  %422 = inttoptr i64 %416 to %"class.base::internal::UncheckedObserverAdapter"*
  %423 = inttoptr i64 %416 to i64*
  store i64 %421, i64* %423, align 8
  %424 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %422, i64 1
  %425 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %424 to i64
  br label %426

426:                                              ; preds = %420, %415
  %427 = phi i64 [ %416, %415 ], [ %425, %420 ]
  %428 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 3, i32 0
  %429 = load i8*, i8** %428, align 8
  %430 = icmp eq i8* %429, null
  br i1 %430, label %437, label %431

431:                                              ; preds = %426
  %432 = ptrtoint i8* %429 to i64
  %433 = inttoptr i64 %427 to %"class.base::internal::UncheckedObserverAdapter"*
  %434 = inttoptr i64 %427 to i64*
  store i64 %432, i64* %434, align 8
  %435 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %433, i64 1
  %436 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %435 to i64
  br label %437

437:                                              ; preds = %431, %426
  %438 = phi i64 [ %427, %426 ], [ %436, %431 ]
  %439 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 4
  %440 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %439, %288
  br i1 %440, label %353, label %336

441:                                              ; preds = %255
  %442 = ptrtoint i8* %258 to i64
  %443 = inttoptr i64 %256 to %"class.base::internal::UncheckedObserverAdapter"*
  %444 = inttoptr i64 %256 to i64*
  store i64 %442, i64* %444, align 8
  %445 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %443, i64 1
  %446 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %445 to i64
  br label %447

447:                                              ; preds = %441, %255
  %448 = phi i64 [ %256, %255 ], [ %446, %441 ]
  %449 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 2, i32 0
  %450 = load i8*, i8** %449, align 8
  %451 = icmp eq i8* %450, null
  br i1 %451, label %458, label %452

452:                                              ; preds = %447
  %453 = ptrtoint i8* %450 to i64
  %454 = inttoptr i64 %448 to %"class.base::internal::UncheckedObserverAdapter"*
  %455 = inttoptr i64 %448 to i64*
  store i64 %453, i64* %455, align 8
  %456 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %454, i64 1
  %457 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %456 to i64
  br label %458

458:                                              ; preds = %452, %447
  %459 = phi i64 [ %448, %447 ], [ %457, %452 ]
  %460 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 3, i32 0
  %461 = load i8*, i8** %460, align 8
  %462 = icmp eq i8* %461, null
  br i1 %462, label %469, label %463

463:                                              ; preds = %458
  %464 = ptrtoint i8* %461 to i64
  %465 = inttoptr i64 %459 to %"class.base::internal::UncheckedObserverAdapter"*
  %466 = inttoptr i64 %459 to i64*
  store i64 %464, i64* %466, align 8
  %467 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %465, i64 1
  %468 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %467 to i64
  br label %469

469:                                              ; preds = %463, %458
  %470 = phi i64 [ %459, %458 ], [ %468, %463 ]
  %471 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 4
  %472 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %471, %195
  br i1 %472, label %260, label %243
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura3Env19NotifyHostDestroyedEPNS_14WindowTreeHostE(%"class.aura::Env"*, %"class.aura::WindowTreeHost"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 18, i32 0, i32 0
  %6 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %5, align 8
  %7 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 18, i32 0, i32 1
  %8 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %7, align 8
  %9 = icmp eq %"class.aura::WindowTreeHost"** %6, %8
  %10 = ptrtoint %"class.aura::WindowTreeHost"** %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2, %15
  %12 = phi %"class.aura::WindowTreeHost"** [ %16, %15 ], [ %6, %2 ]
  %13 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %12, align 8
  %14 = icmp eq %"class.aura::WindowTreeHost"* %13, %1
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %12, i64 1
  %17 = icmp eq %"class.aura::WindowTreeHost"** %16, %8
  br i1 %17, label %74, label %11

18:                                               ; preds = %11, %2
  %19 = phi %"class.aura::WindowTreeHost"** [ %6, %2 ], [ %12, %11 ]
  %20 = ptrtoint %"class.aura::WindowTreeHost"** %19 to i64
  %21 = icmp eq %"class.aura::WindowTreeHost"** %19, %8
  br i1 %21, label %74, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %19, i64 1
  %24 = icmp eq %"class.aura::WindowTreeHost"** %23, %8
  br i1 %24, label %74, label %25

25:                                               ; preds = %22
  %26 = getelementptr %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %8, i64 -2
  %27 = ptrtoint %"class.aura::WindowTreeHost"** %26 to i64
  %28 = sub i64 %27, %20
  %29 = lshr i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %50, label %33

33:                                               ; preds = %25, %45
  %34 = phi %"class.aura::WindowTreeHost"** [ %47, %45 ], [ %23, %25 ]
  %35 = phi i64 [ %46, %45 ], [ %20, %25 ]
  %36 = phi i64 [ %48, %45 ], [ %31, %25 ]
  %37 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %34, align 8
  %38 = icmp eq %"class.aura::WindowTreeHost"* %37, %1
  br i1 %38, label %45, label %39

39:                                               ; preds = %33
  %40 = ptrtoint %"class.aura::WindowTreeHost"* %37 to i64
  %41 = inttoptr i64 %35 to %"class.aura::WindowTreeHost"**
  %42 = inttoptr i64 %35 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %41, i64 1
  %44 = ptrtoint %"class.aura::WindowTreeHost"** %43 to i64
  br label %45

45:                                               ; preds = %39, %33
  %46 = phi i64 [ %35, %33 ], [ %44, %39 ]
  %47 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %34, i64 1
  %48 = add i64 %36, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %33, !llvm.loop !37

50:                                               ; preds = %45, %25
  %51 = phi i64 [ undef, %25 ], [ %46, %45 ]
  %52 = phi %"class.aura::WindowTreeHost"** [ %23, %25 ], [ %47, %45 ]
  %53 = phi i64 [ %20, %25 ], [ %46, %45 ]
  %54 = icmp ult i64 %28, 24
  br i1 %54, label %71, label %55

55:                                               ; preds = %50, %506
  %56 = phi %"class.aura::WindowTreeHost"** [ %508, %506 ], [ %52, %50 ]
  %57 = phi i64 [ %507, %506 ], [ %53, %50 ]
  %58 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %56, align 8
  %59 = icmp eq %"class.aura::WindowTreeHost"* %58, %1
  br i1 %59, label %66, label %60

60:                                               ; preds = %55
  %61 = ptrtoint %"class.aura::WindowTreeHost"* %58 to i64
  %62 = inttoptr i64 %57 to %"class.aura::WindowTreeHost"**
  %63 = inttoptr i64 %57 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %62, i64 1
  %65 = ptrtoint %"class.aura::WindowTreeHost"** %64 to i64
  br label %66

66:                                               ; preds = %60, %55
  %67 = phi i64 [ %57, %55 ], [ %65, %60 ]
  %68 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %56, i64 1
  %69 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %68, align 8
  %70 = icmp eq %"class.aura::WindowTreeHost"* %69, %1
  br i1 %70, label %484, label %478

71:                                               ; preds = %506, %50
  %72 = phi i64 [ %51, %50 ], [ %507, %506 ]
  %73 = load %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"*** %7, align 8
  br label %74

74:                                               ; preds = %15, %71, %22, %18
  %75 = phi %"class.aura::WindowTreeHost"** [ %73, %71 ], [ %8, %18 ], [ %8, %22 ], [ %8, %15 ]
  %76 = phi i64 [ %72, %71 ], [ %20, %18 ], [ %20, %22 ], [ %10, %15 ]
  %77 = inttoptr i64 %76 to %"class.aura::WindowTreeHost"**
  %78 = icmp eq %"class.aura::WindowTreeHost"** %75, %77
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  store %"class.aura::WindowTreeHost"** %77, %"class.aura::WindowTreeHost"*** %7, align 8
  br label %80

80:                                               ; preds = %74, %79
  %81 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3
  %82 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %85 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %86 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %81, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 40, i1 false)
  %88 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %86, align 8, !noalias !38
  %89 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %90 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %89, align 8, !noalias !38
  %91 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %88, %90
  %92 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %92) #13
  br i1 %91, label %93, label %95

93:                                               ; preds = %80
  %94 = bitcast %"class.base::ObserverList"** %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #13, !alias.scope !38
  br label %135

95:                                               ; preds = %80
  store %"class.base::ObserverList"* %81, %"class.base::ObserverList"** %83, align 8, !alias.scope !38
  %96 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %92, %"class.base::internal::LinkNodeBase"* %96) #13
  store i64 0, i64* %84, align 8, !alias.scope !38
  %97 = getelementptr inbounds %"class.aura::Env", %"class.aura::Env"* %0, i64 0, i32 3, i32 3
  %98 = load i32, i32* %97, align 8, !noalias !38
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %89 to i64*
  %102 = load i64, i64* %101, align 8, !noalias !38
  %103 = bitcast %"class.base::ObserverList"* %81 to i64*
  %104 = load i64, i64* %103, align 8, !noalias !38
  %105 = sub i64 %102, %104
  %106 = ashr exact i64 %105, 3
  br label %107

107:                                              ; preds = %100, %95
  %108 = phi i64 [ %106, %100 ], [ -1, %95 ]
  store i64 %108, i64* %85, align 8, !alias.scope !38
  %109 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8, !alias.scope !38
  %110 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %109, i64 0, i32 0, i32 0, i32 1
  %111 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.base::ObserverList"* %109 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %112, %114
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, %108
  %118 = select i1 %117, i64 %116, i64 %108
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %135, label %120

120:                                              ; preds = %107
  %121 = inttoptr i64 %114 to %"class.base::internal::UncheckedObserverAdapter"*
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %109, i64 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %121, i64 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = icmp eq i8* %124, null
  br i1 %125, label %126, label %135

126:                                              ; preds = %120, %130
  %127 = phi i64 [ %128, %130 ], [ 0, %120 ]
  %128 = add nuw i64 %127, 1
  store i64 %128, i64* %84, align 8, !alias.scope !38
  %129 = icmp ult i64 %128, %118
  br i1 %129, label %130, label %135

130:                                              ; preds = %126
  %131 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 %128, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %126, label %135

135:                                              ; preds = %126, %130, %93, %107, %120
  %136 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %136) #13
  %137 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %139 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %140 = getelementptr inbounds %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.base::ObserverList<aura::EnvObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %140) #13
  %142 = bitcast %"class.base::ObserverList"** %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #13, !alias.scope !41
  %143 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  br label %144

144:                                              ; preds = %384, %135
  %145 = phi %"class.base::ObserverList"* [ %143, %135 ], [ %382, %384 ]
  %146 = icmp eq %"class.base::ObserverList"* %145, null
  br i1 %146, label %162, label %147

147:                                              ; preds = %144
  %148 = load i64, i64* %84, align 8
  %149 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %145, i64 0, i32 0, i32 0, i32 1
  %150 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.base::ObserverList"* %145 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = ashr exact i64 %154, 3
  %156 = load i64, i64* %85, align 8
  %157 = icmp ult i64 %155, %156
  %158 = select i1 %157, i64 %155, i64 %156
  %159 = icmp eq i64 %148, %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %147
  %161 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %137, align 8
  br label %178

162:                                              ; preds = %147, %144
  %163 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %137, align 8
  %164 = icmp eq %"class.base::ObserverList"* %163, null
  br i1 %164, label %278, label %165

165:                                              ; preds = %162
  %166 = load i64, i64* %138, align 8
  %167 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %163, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.base::ObserverList"* %163 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %169, %171
  %173 = ashr exact i64 %172, 3
  %174 = load i64, i64* %139, align 8
  %175 = icmp ult i64 %173, %174
  %176 = select i1 %175, i64 %173, i64 %174
  %177 = icmp eq i64 %166, %176
  br i1 %177, label %187, label %178

178:                                              ; preds = %165, %160
  %179 = phi %"class.base::ObserverList"* [ %161, %160 ], [ %163, %165 ]
  %180 = icmp eq %"class.base::ObserverList"* %145, %179
  %181 = load i64, i64* %84, align 8
  %182 = load i64, i64* %138, align 8
  %183 = icmp eq i64 %181, %182
  %184 = and i1 %180, %183
  br i1 %184, label %185, label %372

185:                                              ; preds = %178
  %186 = icmp eq %"class.base::ObserverList"* %145, null
  br i1 %186, label %278, label %187

187:                                              ; preds = %165, %185
  %188 = phi %"class.base::ObserverList"* [ %145, %185 ], [ %163, %165 ]
  %189 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %188, i64 0, i32 1
  %190 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %188, i64 0, i32 1, i32 0, i32 0, i32 1
  %191 = bitcast %"class.base::internal::LinkNodeBase"** %190 to %"class.base::LinkNode"**
  %192 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %191, align 8
  %193 = bitcast %"class.base::LinkedList"* %189 to %"class.base::LinkNode"**
  %194 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %193, align 8
  %195 = icmp eq %"class.base::LinkNode"* %192, %194
  br i1 %195, label %196, label %274

196:                                              ; preds = %187
  %197 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %188, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %197, align 8
  %199 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %188, i64 0, i32 0, i32 0, i32 1
  %200 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %199, align 8
  %201 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %200
  br i1 %201, label %210, label %202

202:                                              ; preds = %196, %207
  %203 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %208, %207 ], [ %198, %196 ]
  %204 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %203, i64 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %203, i64 1
  %209 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %208, %200
  br i1 %209, label %274, label %202

210:                                              ; preds = %202, %196
  %211 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %198, %196 ], [ %203, %202 ]
  %212 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %211 to i64
  %213 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %211, %200
  br i1 %213, label %274, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 1
  %216 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %200
  br i1 %216, label %269, label %217

217:                                              ; preds = %214
  %218 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %200, i64 -2, i32 0
  %219 = ptrtoint i8** %218 to i64
  %220 = sub i64 %219, %212
  %221 = lshr i64 %220, 3
  %222 = add nuw nsw i64 %221, 1
  %223 = and i64 %222, 3
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %243, label %225

225:                                              ; preds = %217, %238
  %226 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %240, %238 ], [ %215, %217 ]
  %227 = phi i64 [ %239, %238 ], [ %212, %217 ]
  %228 = phi i64 [ %241, %238 ], [ %223, %217 ]
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %226, i64 0, i32 0
  %230 = load i8*, i8** %229, align 8
  %231 = icmp eq i8* %230, null
  br i1 %231, label %238, label %232

232:                                              ; preds = %225
  %233 = ptrtoint i8* %230 to i64
  %234 = inttoptr i64 %227 to %"class.base::internal::UncheckedObserverAdapter"*
  %235 = inttoptr i64 %227 to i64*
  store i64 %233, i64* %235, align 8
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %234, i64 1
  %237 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %236 to i64
  br label %238

238:                                              ; preds = %232, %225
  %239 = phi i64 [ %227, %225 ], [ %237, %232 ]
  %240 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %226, i64 1
  %241 = add i64 %228, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %225, !llvm.loop !44

243:                                              ; preds = %238, %217
  %244 = phi i64 [ undef, %217 ], [ %239, %238 ]
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %217 ], [ %240, %238 ]
  %246 = phi i64 [ %212, %217 ], [ %239, %238 ]
  %247 = icmp ult i64 %220, 24
  br i1 %247, label %265, label %248

248:                                              ; preds = %243, %474
  %249 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %476, %474 ], [ %245, %243 ]
  %250 = phi i64 [ %475, %474 ], [ %246, %243 ]
  %251 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %249, i64 0, i32 0
  %252 = load i8*, i8** %251, align 8
  %253 = icmp eq i8* %252, null
  br i1 %253, label %260, label %254

254:                                              ; preds = %248
  %255 = ptrtoint i8* %252 to i64
  %256 = inttoptr i64 %250 to %"class.base::internal::UncheckedObserverAdapter"*
  %257 = inttoptr i64 %250 to i64*
  store i64 %255, i64* %257, align 8
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 1
  %259 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %258 to i64
  br label %260

260:                                              ; preds = %254, %248
  %261 = phi i64 [ %250, %248 ], [ %259, %254 ]
  %262 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %249, i64 1, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = icmp eq i8* %263, null
  br i1 %264, label %452, label %446

265:                                              ; preds = %474, %243
  %266 = phi i64 [ %244, %243 ], [ %475, %474 ]
  %267 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %268 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %199, align 8
  br label %269

269:                                              ; preds = %265, %214
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %200, %214 ], [ %268, %265 ]
  %271 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %211, %214 ], [ %267, %265 ]
  %272 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %271, %270
  br i1 %272, label %274, label %273

273:                                              ; preds = %269
  store %"class.base::internal::UncheckedObserverAdapter"* %271, %"class.base::internal::UncheckedObserverAdapter"** %199, align 8
  br label %274

274:                                              ; preds = %207, %273, %269, %210, %187
  %275 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %137, align 8
  %276 = icmp eq %"class.base::ObserverList"* %275, null
  br i1 %276, label %278, label %277

277:                                              ; preds = %274
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %137, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %140) #13
  br label %278

278:                                              ; preds = %162, %185, %274, %277
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %136) #13
  %279 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  %280 = icmp eq %"class.base::ObserverList"* %279, null
  br i1 %280, label %371, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %279, i64 0, i32 1
  %283 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %279, i64 0, i32 1, i32 0, i32 0, i32 1
  %284 = bitcast %"class.base::internal::LinkNodeBase"** %283 to %"class.base::LinkNode"**
  %285 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %284, align 8
  %286 = bitcast %"class.base::LinkedList"* %282 to %"class.base::LinkNode"**
  %287 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %286, align 8
  %288 = icmp eq %"class.base::LinkNode"* %285, %287
  br i1 %288, label %289, label %367

289:                                              ; preds = %281
  %290 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %279, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %290, align 8
  %292 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %279, i64 0, i32 0, i32 0, i32 1
  %293 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %292, align 8
  %294 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %293
  br i1 %294, label %303, label %295

295:                                              ; preds = %289, %300
  %296 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %301, %300 ], [ %291, %289 ]
  %297 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %296, i64 0, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = icmp eq i8* %298, null
  br i1 %299, label %303, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %296, i64 1
  %302 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %301, %293
  br i1 %302, label %367, label %295

303:                                              ; preds = %295, %289
  %304 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %291, %289 ], [ %296, %295 ]
  %305 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %304 to i64
  %306 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %304, %293
  br i1 %306, label %367, label %307

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 1
  %309 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %308, %293
  br i1 %309, label %362, label %310

310:                                              ; preds = %307
  %311 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %293, i64 -2, i32 0
  %312 = ptrtoint i8** %311 to i64
  %313 = sub i64 %312, %305
  %314 = lshr i64 %313, 3
  %315 = add nuw nsw i64 %314, 1
  %316 = and i64 %315, 3
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %336, label %318

318:                                              ; preds = %310, %331
  %319 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %333, %331 ], [ %308, %310 ]
  %320 = phi i64 [ %332, %331 ], [ %305, %310 ]
  %321 = phi i64 [ %334, %331 ], [ %316, %310 ]
  %322 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %319, i64 0, i32 0
  %323 = load i8*, i8** %322, align 8
  %324 = icmp eq i8* %323, null
  br i1 %324, label %331, label %325

325:                                              ; preds = %318
  %326 = ptrtoint i8* %323 to i64
  %327 = inttoptr i64 %320 to %"class.base::internal::UncheckedObserverAdapter"*
  %328 = inttoptr i64 %320 to i64*
  store i64 %326, i64* %328, align 8
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %327, i64 1
  %330 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %329 to i64
  br label %331

331:                                              ; preds = %325, %318
  %332 = phi i64 [ %320, %318 ], [ %330, %325 ]
  %333 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %319, i64 1
  %334 = add i64 %321, -1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %318, !llvm.loop !45

336:                                              ; preds = %331, %310
  %337 = phi i64 [ undef, %310 ], [ %332, %331 ]
  %338 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %308, %310 ], [ %333, %331 ]
  %339 = phi i64 [ %305, %310 ], [ %332, %331 ]
  %340 = icmp ult i64 %313, 24
  br i1 %340, label %358, label %341

341:                                              ; preds = %336, %442
  %342 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %444, %442 ], [ %338, %336 ]
  %343 = phi i64 [ %443, %442 ], [ %339, %336 ]
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 0, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %353, label %347

347:                                              ; preds = %341
  %348 = ptrtoint i8* %345 to i64
  %349 = inttoptr i64 %343 to %"class.base::internal::UncheckedObserverAdapter"*
  %350 = inttoptr i64 %343 to i64*
  store i64 %348, i64* %350, align 8
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 1
  %352 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %351 to i64
  br label %353

353:                                              ; preds = %347, %341
  %354 = phi i64 [ %343, %341 ], [ %352, %347 ]
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 1, i32 0
  %356 = load i8*, i8** %355, align 8
  %357 = icmp eq i8* %356, null
  br i1 %357, label %420, label %414

358:                                              ; preds = %442, %336
  %359 = phi i64 [ %337, %336 ], [ %443, %442 ]
  %360 = inttoptr i64 %359 to %"class.base::internal::UncheckedObserverAdapter"*
  %361 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %292, align 8
  br label %362

362:                                              ; preds = %358, %307
  %363 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %293, %307 ], [ %361, %358 ]
  %364 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %304, %307 ], [ %360, %358 ]
  %365 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %364, %363
  br i1 %365, label %367, label %366

366:                                              ; preds = %362
  store %"class.base::internal::UncheckedObserverAdapter"* %364, %"class.base::internal::UncheckedObserverAdapter"** %292, align 8
  br label %367

367:                                              ; preds = %300, %366, %362, %303, %281
  %368 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  %369 = icmp eq %"class.base::ObserverList"* %368, null
  br i1 %369, label %371, label %370

370:                                              ; preds = %367
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %83, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %92) #13
  br label %371

371:                                              ; preds = %278, %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %82) #13
  ret void

372:                                              ; preds = %178
  %373 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %145, i64 0, i32 0, i32 0, i32 0
  %374 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %373, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %374, i64 %181
  %376 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %375 to %"class.aura::EnvObserver"**
  %377 = load %"class.aura::EnvObserver"*, %"class.aura::EnvObserver"** %376, align 8
  %378 = bitcast %"class.aura::EnvObserver"* %377 to void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)***
  %379 = load void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)**, void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)*** %378, align 8
  %380 = getelementptr inbounds void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)** %379, i64 2
  %381 = load void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)*, void (%"class.aura::EnvObserver"*, %"class.aura::WindowTreeHost"*)** %380, align 8
  call void %381(%"class.aura::EnvObserver"* %377, %"class.aura::WindowTreeHost"* %1) #13
  %382 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %83, align 8
  %383 = icmp eq %"class.base::ObserverList"* %382, null
  br i1 %383, label %384, label %385

384:                                              ; preds = %409, %405, %372, %385, %399
  br label %144

385:                                              ; preds = %372
  %386 = load i64, i64* %84, align 8
  %387 = add i64 %386, 1
  store i64 %387, i64* %84, align 8
  %388 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %382, i64 0, i32 0, i32 0, i32 1
  %389 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = bitcast %"class.base::ObserverList"* %382 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = sub i64 %390, %392
  %394 = ashr exact i64 %393, 3
  %395 = load i64, i64* %85, align 8
  %396 = icmp ult i64 %394, %395
  %397 = select i1 %396, i64 %394, i64 %395
  %398 = icmp ult i64 %387, %397
  br i1 %398, label %399, label %384

399:                                              ; preds = %385
  %400 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %401 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %382, i64 0, i32 0, i32 0, i32 0
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 %387, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %405, label %384

405:                                              ; preds = %399, %409
  %406 = phi i64 [ %407, %409 ], [ %387, %399 ]
  %407 = add nuw i64 %406, 1
  store i64 %407, i64* %84, align 8
  %408 = icmp ult i64 %407, %397
  br i1 %408, label %409, label %384

409:                                              ; preds = %405
  %410 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %401, align 8
  %411 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %410, i64 %407, i32 0
  %412 = load i8*, i8** %411, align 8
  %413 = icmp eq i8* %412, null
  br i1 %413, label %405, label %384

414:                                              ; preds = %353
  %415 = ptrtoint i8* %356 to i64
  %416 = inttoptr i64 %354 to %"class.base::internal::UncheckedObserverAdapter"*
  %417 = inttoptr i64 %354 to i64*
  store i64 %415, i64* %417, align 8
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 1
  %419 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %418 to i64
  br label %420

420:                                              ; preds = %414, %353
  %421 = phi i64 [ %354, %353 ], [ %419, %414 ]
  %422 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 2, i32 0
  %423 = load i8*, i8** %422, align 8
  %424 = icmp eq i8* %423, null
  br i1 %424, label %431, label %425

425:                                              ; preds = %420
  %426 = ptrtoint i8* %423 to i64
  %427 = inttoptr i64 %421 to %"class.base::internal::UncheckedObserverAdapter"*
  %428 = inttoptr i64 %421 to i64*
  store i64 %426, i64* %428, align 8
  %429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %427, i64 1
  %430 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %429 to i64
  br label %431

431:                                              ; preds = %425, %420
  %432 = phi i64 [ %421, %420 ], [ %430, %425 ]
  %433 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 3, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = icmp eq i8* %434, null
  br i1 %435, label %442, label %436

436:                                              ; preds = %431
  %437 = ptrtoint i8* %434 to i64
  %438 = inttoptr i64 %432 to %"class.base::internal::UncheckedObserverAdapter"*
  %439 = inttoptr i64 %432 to i64*
  store i64 %437, i64* %439, align 8
  %440 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %438, i64 1
  %441 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %440 to i64
  br label %442

442:                                              ; preds = %436, %431
  %443 = phi i64 [ %432, %431 ], [ %441, %436 ]
  %444 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 4
  %445 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %444, %293
  br i1 %445, label %358, label %341

446:                                              ; preds = %260
  %447 = ptrtoint i8* %263 to i64
  %448 = inttoptr i64 %261 to %"class.base::internal::UncheckedObserverAdapter"*
  %449 = inttoptr i64 %261 to i64*
  store i64 %447, i64* %449, align 8
  %450 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %448, i64 1
  %451 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %450 to i64
  br label %452

452:                                              ; preds = %446, %260
  %453 = phi i64 [ %261, %260 ], [ %451, %446 ]
  %454 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %249, i64 2, i32 0
  %455 = load i8*, i8** %454, align 8
  %456 = icmp eq i8* %455, null
  br i1 %456, label %463, label %457

457:                                              ; preds = %452
  %458 = ptrtoint i8* %455 to i64
  %459 = inttoptr i64 %453 to %"class.base::internal::UncheckedObserverAdapter"*
  %460 = inttoptr i64 %453 to i64*
  store i64 %458, i64* %460, align 8
  %461 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %459, i64 1
  %462 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %461 to i64
  br label %463

463:                                              ; preds = %457, %452
  %464 = phi i64 [ %453, %452 ], [ %462, %457 ]
  %465 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %249, i64 3, i32 0
  %466 = load i8*, i8** %465, align 8
  %467 = icmp eq i8* %466, null
  br i1 %467, label %474, label %468

468:                                              ; preds = %463
  %469 = ptrtoint i8* %466 to i64
  %470 = inttoptr i64 %464 to %"class.base::internal::UncheckedObserverAdapter"*
  %471 = inttoptr i64 %464 to i64*
  store i64 %469, i64* %471, align 8
  %472 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %470, i64 1
  %473 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %472 to i64
  br label %474

474:                                              ; preds = %468, %463
  %475 = phi i64 [ %464, %463 ], [ %473, %468 ]
  %476 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %249, i64 4
  %477 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %476, %200
  br i1 %477, label %265, label %248

478:                                              ; preds = %66
  %479 = ptrtoint %"class.aura::WindowTreeHost"* %69 to i64
  %480 = inttoptr i64 %67 to %"class.aura::WindowTreeHost"**
  %481 = inttoptr i64 %67 to i64*
  store i64 %479, i64* %481, align 8
  %482 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %480, i64 1
  %483 = ptrtoint %"class.aura::WindowTreeHost"** %482 to i64
  br label %484

484:                                              ; preds = %478, %66
  %485 = phi i64 [ %67, %66 ], [ %483, %478 ]
  %486 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %56, i64 2
  %487 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %486, align 8
  %488 = icmp eq %"class.aura::WindowTreeHost"* %487, %1
  br i1 %488, label %495, label %489

489:                                              ; preds = %484
  %490 = ptrtoint %"class.aura::WindowTreeHost"* %487 to i64
  %491 = inttoptr i64 %485 to %"class.aura::WindowTreeHost"**
  %492 = inttoptr i64 %485 to i64*
  store i64 %490, i64* %492, align 8
  %493 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %491, i64 1
  %494 = ptrtoint %"class.aura::WindowTreeHost"** %493 to i64
  br label %495

495:                                              ; preds = %489, %484
  %496 = phi i64 [ %485, %484 ], [ %494, %489 ]
  %497 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %56, i64 3
  %498 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %497, align 8
  %499 = icmp eq %"class.aura::WindowTreeHost"* %498, %1
  br i1 %499, label %506, label %500

500:                                              ; preds = %495
  %501 = ptrtoint %"class.aura::WindowTreeHost"* %498 to i64
  %502 = inttoptr i64 %496 to %"class.aura::WindowTreeHost"**
  %503 = inttoptr i64 %496 to i64*
  store i64 %501, i64* %503, align 8
  %504 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %502, i64 1
  %505 = ptrtoint %"class.aura::WindowTreeHost"** %504 to i64
  br label %506

506:                                              ; preds = %500, %495
  %507 = phi i64 [ %496, %495 ], [ %505, %500 ]
  %508 = getelementptr inbounds %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %56, i64 4
  %509 = icmp eq %"class.aura::WindowTreeHost"** %508, %8
  br i1 %509, label %71, label %55
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4aura3Env14CanAcceptEventERKN2ui5EventE(%"class.aura::Env"* nocapture readnone, %"class.ui::Event"* nocapture readnone dereferenceable(144)) unnamed_addr #8 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::EventTarget"* @_ZN4aura3Env15GetParentTargetEv(%"class.aura::Env"* nocapture readnone) unnamed_addr #8 align 2 {
  ret %"class.ui::EventTarget"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.ui::EventTargetIterator"* @_ZNK4aura3Env16GetChildIteratorEv(%"class.aura::Env"* nocapture readnone) unnamed_addr #8 align 2 {
  ret %"class.ui::EventTargetIterator"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::EventTargeter"* @_ZN4aura3Env16GetEventTargeterEv(%"class.aura::Env"* nocapture readnone) unnamed_addr #8 align 2 {
  ret %"class.ui::EventTargeter"* null
}

declare void @_ZNK2ui11EventTarget20ConvertEventToTargetEPKS0_PNS_12LocatedEventE(%"class.ui::EventTarget"*, %"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*) unnamed_addr #7

declare <2 x float> @_ZNK2ui11EventTarget18GetScreenLocationFERKNS_12LocatedEventE(%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"* dereferenceable(160)) unnamed_addr #7

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #7

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.44"*, %"class.std::__1::__tree_node.356"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.356"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.356"* %1 to %"class.std::__1::__tree_node.356"**
  %6 = load %"class.std::__1::__tree_node.356"*, %"class.std::__1::__tree_node.356"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.44"* %0, %"class.std::__1::__tree_node.356"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.356"**
  %9 = load %"class.std::__1::__tree_node.356"*, %"class.std::__1::__tree_node.356"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.44"* %0, %"class.std::__1::__tree_node.356"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.aura::EventObserverAdapter"*, %"class.aura::EventObserverAdapter"** %10, align 8
  store %"class.aura::EventObserverAdapter"* null, %"class.aura::EventObserverAdapter"** %10, align 8
  %12 = icmp eq %"class.aura::EventObserverAdapter"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.aura::EventObserverAdapter"* %11 to void (%"class.aura::EventObserverAdapter"*)***
  %15 = load void (%"class.aura::EventObserverAdapter"*)**, void (%"class.aura::EventObserverAdapter"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.aura::EventObserverAdapter"*)*, void (%"class.aura::EventObserverAdapter"*)** %15, i64 1
  %17 = load void (%"class.aura::EventObserverAdapter"*)*, void (%"class.aura::EventObserverAdapter"*)** %16, align 8
  tail call void %17(%"class.aura::EventObserverAdapter"* nonnull %11) #13
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.356"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4aura23EnvInputStateControllerD1Ev(%"class.aura::EnvInputStateController"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura20EventObserverAdapterC2EPN2ui13EventObserverEPNS1_11EventTargetERKNSt3__13setINS1_9EventTypeENS6_4lessIS8_EENS6_9allocatorIS8_EEEE(%"class.aura::EventObserverAdapter"*, %"class.ui::EventObserver"*, %"class.ui::EventTarget"*, %"class.std::__1::set.218"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 0
  tail call void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"* %5) #13
  %6 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 1
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %6) #13
  %7 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.base::CheckedObserver", %"class.base::CheckedObserver"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 2
  store %"class.ui::EventObserver"* %1, %"class.ui::EventObserver"** %9, align 8
  %10 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 3
  store %"class.ui::EventTarget"* %2, %"class.ui::EventTarget"** %10, align 8
  %11 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.std::__1::set.218", %"class.std::__1::set.218"* %11, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__compressed_pair.220"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %12, align 8
  %16 = getelementptr inbounds %"class.std::__1::set.218", %"class.std::__1::set.218"* %3, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::set.218", %"class.std::__1::set.218"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = icmp eq %"class.std::__1::__tree_end_node"* %17, %18
  br i1 %19, label %158, label %20

20:                                               ; preds = %4
  %21 = ptrtoint %"class.std::__1::__tree_end_node"* %13 to i64
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  %23 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::set.218"* %11 to i64*
  %25 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  br label %26

26:                                               ; preds = %152, %20
  %27 = phi %"class.std::__1::__tree_node"* [ %155, %152 ], [ null, %20 ]
  %28 = phi %"class.std::__1::__tree_node_base"* [ %154, %152 ], [ null, %20 ]
  %29 = phi %"class.std::__1::__tree_end_node"* [ %153, %152 ], [ %13, %20 ]
  %30 = phi %"class.std::__1::__tree_end_node"* [ %150, %152 ], [ %17, %20 ]
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 1
  %33 = icmp eq %"class.std::__1::__tree_end_node"* %29, %13
  br i1 %33, label %60, label %34

34:                                               ; preds = %26
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %34, %36
  %37 = phi %"class.std::__1::__tree_node_base"* [ %39, %36 ], [ %28, %34 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 1
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %52, label %36

41:                                               ; preds = %34, %41
  %42 = phi %"class.std::__1::__tree_end_node"* [ %46, %41 ], [ %13, %34 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node_base"*
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 2
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_end_node"**
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %43
  br i1 %49, label %41, label %50

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node_base"*
  br label %52

52:                                               ; preds = %36, %50
  %53 = phi %"class.std::__1::__tree_node_base"* [ %51, %50 ], [ %37, %36 ]
  %54 = ptrtoint %"class.std::__1::__tree_node_base"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 4, i64 3
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = load i32, i32* %32, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %52, %26
  %61 = phi i64 [ %54, %52 ], [ %21, %26 ]
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %62, label %94, label %63

63:                                               ; preds = %60
  %64 = inttoptr i64 %61 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 1
  br label %94

66:                                               ; preds = %52
  %67 = icmp eq %"class.std::__1::__tree_node"* %27, null
  br i1 %67, label %94, label %68

68:                                               ; preds = %66, %90
  %69 = phi %"class.std::__1::__tree_node"* [ %93, %90 ], [ %27, %66 ]
  %70 = phi %"class.std::__1::__tree_node_base"** [ %92, %90 ], [ %23, %66 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %58, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %78, label %90

78:                                               ; preds = %74
  %79 = ptrtoint %"class.std::__1::__tree_node"* %69 to i64
  br label %94

80:                                               ; preds = %68
  %81 = icmp slt i32 %72, %58
  br i1 %81, label %82, label %88

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = ptrtoint %"class.std::__1::__tree_node"* %69 to i64
  br label %94

88:                                               ; preds = %80
  %89 = ptrtoint %"class.std::__1::__tree_node"* %69 to i64
  br label %94

90:                                               ; preds = %82, %74
  %91 = phi %"class.std::__1::__tree_node_base"* [ %76, %74 ], [ %84, %82 ]
  %92 = phi %"class.std::__1::__tree_node_base"** [ %75, %74 ], [ %83, %82 ]
  %93 = bitcast %"class.std::__1::__tree_node_base"* %91 to %"class.std::__1::__tree_node"*
  br label %68

94:                                               ; preds = %66, %60, %63, %78, %86, %88
  %95 = phi i64 [ %61, %63 ], [ %79, %78 ], [ %87, %86 ], [ %89, %88 ], [ %21, %60 ], [ %21, %66 ]
  %96 = phi %"class.std::__1::__tree_node_base"** [ %65, %63 ], [ %75, %78 ], [ %83, %86 ], [ %70, %88 ], [ %22, %60 ], [ %22, %66 ]
  %97 = bitcast %"class.std::__1::__tree_node_base"** %96 to %"class.std::__1::__tree_node"**
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  br i1 %99, label %100, label %121

100:                                              ; preds = %94
  %101 = tail call i8* @_Znwm(i64 32) #14, !noalias !46
  %102 = getelementptr inbounds i8, i8* %101, i64 28
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %32, align 4, !noalias !46
  store i32 %104, i32* %103, align 4, !noalias !46
  %105 = bitcast i8* %101 to %"class.std::__1::__tree_node_base"*
  %106 = getelementptr inbounds i8, i8* %101, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 16, i1 false) #13
  %107 = bitcast i8* %106 to i64*
  store i64 %95, i64* %107, align 8
  %108 = bitcast %"class.std::__1::__tree_node_base"** %96 to i8**
  store i8* %101, i8** %108, align 8
  %109 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %100
  %114 = ptrtoint %"class.std::__1::__tree_node_base"* %111 to i64
  store i64 %114, i64* %24, align 8
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  br label %116

116:                                              ; preds = %113, %100
  %117 = phi %"class.std::__1::__tree_node_base"* [ %105, %100 ], [ %115, %113 ]
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %118, %"class.std::__1::__tree_node_base"* %117) #13
  %119 = load i64, i64* %25, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %25, align 8
  br label %121

121:                                              ; preds = %94, %116
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 1, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %125, label %133

125:                                              ; preds = %121
  %126 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node_base"*
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 2
  %128 = bitcast %"class.std::__1::__tree_end_node"* %127 to %"class.std::__1::__tree_end_node"**
  %129 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, %126
  br i1 %132, label %149, label %140

133:                                              ; preds = %121, %133
  %134 = phi %"class.std::__1::__tree_node_base"* [ %136, %133 ], [ %123, %121 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, null
  br i1 %137, label %138, label %133

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %134, i64 0, i32 0
  br label %149

140:                                              ; preds = %125, %140
  %141 = phi %"class.std::__1::__tree_end_node"** [ %144, %140 ], [ %128, %125 ]
  %142 = bitcast %"class.std::__1::__tree_end_node"** %141 to %"class.std::__1::__tree_node_base"**
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %145 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, %143
  br i1 %148, label %149, label %140

149:                                              ; preds = %140, %138, %125
  %150 = phi %"class.std::__1::__tree_end_node"* [ %139, %138 ], [ %129, %125 ], [ %145, %140 ]
  %151 = icmp eq %"class.std::__1::__tree_end_node"* %150, %18
  br i1 %151, label %156, label %152

152:                                              ; preds = %149
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %155 = bitcast %"class.std::__1::__tree_node_base"* %154 to %"class.std::__1::__tree_node"*
  br label %26

156:                                              ; preds = %149
  %157 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %10, align 8
  br label %158

158:                                              ; preds = %156, %4
  %159 = phi %"class.ui::EventTarget"* [ %157, %156 ], [ %2, %4 ]
  tail call void @_ZN2ui11EventTarget19AddPreTargetHandlerEPNS_12EventHandlerENS0_8PriorityE(%"class.ui::EventTarget"* %159, %"class.ui::EventHandler"* %5, i32 2) #13
  ret void
}

declare void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"*) unnamed_addr #7

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #7

declare void @_ZN2ui11EventTarget19AddPreTargetHandlerEPNS_12EventHandlerENS0_8PriorityE(%"class.ui::EventTarget"*, %"class.ui::EventHandler"*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura20EventObserverAdapterD2Ev(%"class.aura::EventObserverAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::CheckedObserver", %"class.base::CheckedObserver"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 3
  %6 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %5, align 8
  %7 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 0
  tail call void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"* %6, %"class.ui::EventHandler"* %7) #13
  %8 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0
  %9 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.219"* %8, %"class.std::__1::__tree_node"* %11) #13
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %3) #13
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura20EventObserverAdapterD0Ev(%"class.aura::EventObserverAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::CheckedObserver", %"class.base::CheckedObserver"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 3
  %6 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %5, align 8
  %7 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 0
  tail call void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"* %6, %"class.ui::EventHandler"* %7) #13
  %8 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0
  %9 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.219"* %8, %"class.std::__1::__tree_node"* %11) #13
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %3) #13
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %7) #13
  %12 = bitcast %"class.aura::EventObserverAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura20EventObserverAdapter7OnEventEPN2ui5EventE(%"class.aura::EventObserverAdapter"*, %"class.ui::Event"*) unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %73, label %9

9:                                                ; preds = %2, %21
  %10 = phi %"class.std::__1::__tree_node"* [ %23, %21 ], [ %7, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %4, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  br label %21

16:                                               ; preds = %9
  %17 = icmp slt i32 %12, %4
  br i1 %17, label %18, label %25

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__tree_node_base"** %19 to %"class.std::__1::__tree_node"**
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi %"class.std::__1::__tree_node"** [ %15, %14 ], [ %20, %18 ]
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %73, label %9

25:                                               ; preds = %16
  %26 = tail call %"class.ui::Event"* @_ZN2ui5Event5CloneERKS0_(%"class.ui::Event"* dereferenceable(144) %1) #13
  %27 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %1, i64 0, i32 8
  %28 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %27, align 8
  %29 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %26, i64 0, i32 8
  store %"class.ui::EventTarget"* %28, %"class.ui::EventTarget"** %29, align 8
  %30 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %26, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  switch i32 %31, label %37 [
    i32 1, label %48
    i32 2, label %48
    i32 3, label %48
    i32 4, label %48
    i32 5, label %48
    i32 6, label %48
    i32 9, label %48
    i32 10, label %48
    i32 34, label %48
    i32 35, label %32
    i32 36, label %32
  ]

32:                                               ; preds = %25, %25
  %33 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %26, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 262144
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %48, label %40

37:                                               ; preds = %25
  %38 = add i32 %31, -11
  %39 = icmp ult i32 %38, 4
  br i1 %39, label %48, label %40

40:                                               ; preds = %37, %32
  switch i32 %31, label %61 [
    i32 16, label %48
    i32 17, label %48
    i32 18, label %48
    i32 19, label %48
    i32 23, label %48
    i32 21, label %48
    i32 20, label %48
    i32 22, label %48
    i32 24, label %48
    i32 25, label %48
    i32 26, label %48
    i32 27, label %48
    i32 28, label %48
    i32 29, label %48
    i32 30, label %48
    i32 31, label %48
    i32 32, label %48
    i32 33, label %48
    i32 36, label %41
    i32 35, label %41
  ]

41:                                               ; preds = %40, %40
  %42 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %26, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 262144
  %45 = icmp eq i32 %44, 0
  %46 = icmp eq %"class.ui::EventTarget"* %28, null
  %47 = or i1 %46, %45
  br i1 %47, label %61, label %50

48:                                               ; preds = %25, %25, %25, %25, %25, %25, %25, %25, %25, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %32, %37
  %49 = icmp eq %"class.ui::EventTarget"* %28, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %41, %48
  %51 = tail call %"class.ui::LocatedEvent"* @_ZN2ui5Event14AsLocatedEventEv(%"class.ui::Event"* %26) #13
  %52 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %51, i64 0, i32 0, i32 8
  %53 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %52, align 8
  %54 = bitcast %"class.ui::EventTarget"* %53 to <2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)***
  %55 = load <2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)**, <2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*** %54, align 8
  %56 = getelementptr inbounds <2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, <2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %55, i64 7
  %57 = load <2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)*, <2 x float> (%"class.ui::EventTarget"*, %"class.ui::LocatedEvent"*)** %56, align 8
  %58 = tail call <2 x float> %57(%"class.ui::EventTarget"* %53, %"class.ui::LocatedEvent"* dereferenceable(160) %51) #13
  %59 = getelementptr inbounds %"class.ui::LocatedEvent", %"class.ui::LocatedEvent"* %51, i64 0, i32 2
  %60 = bitcast %"class.gfx::PointF"* %59 to <2 x float>*
  store <2 x float> %58, <2 x float>* %60, align 8
  br label %61

61:                                               ; preds = %41, %40, %48, %50
  %62 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 0, i32 2
  %63 = load %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %62, align 8
  %64 = bitcast %"class.ui::EventObserver"* %63 to void (%"class.ui::EventObserver"*, %"class.ui::Event"*)***
  %65 = load void (%"class.ui::EventObserver"*, %"class.ui::Event"*)**, void (%"class.ui::EventObserver"*, %"class.ui::Event"*)*** %64, align 8
  %66 = load void (%"class.ui::EventObserver"*, %"class.ui::Event"*)*, void (%"class.ui::EventObserver"*, %"class.ui::Event"*)** %65, align 8
  tail call void %66(%"class.ui::EventObserver"* %63, %"class.ui::Event"* dereferenceable(144) %26) #13
  %67 = icmp eq %"class.ui::Event"* %26, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.ui::Event"* %26 to void (%"class.ui::Event"*)***
  %70 = load void (%"class.ui::Event"*)**, void (%"class.ui::Event"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.ui::Event"*)*, void (%"class.ui::Event"*)** %70, i64 1
  %72 = load void (%"class.ui::Event"*)*, void (%"class.ui::Event"*)** %71, align 8
  tail call void %72(%"class.ui::Event"* nonnull %26) #13
  br label %73

73:                                               ; preds = %21, %2, %68, %61
  ret void
}

declare void @_ZN2ui12EventHandler10OnKeyEventEPNS_8KeyEventE(%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*) unnamed_addr #7

declare void @_ZN2ui12EventHandler12OnMouseEventEPNS_10MouseEventE(%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*) unnamed_addr #7

declare void @_ZN2ui12EventHandler13OnScrollEventEPNS_11ScrollEventE(%"class.ui::EventHandler"*, %"class.ui::ScrollEvent"*) unnamed_addr #7

declare void @_ZN2ui12EventHandler12OnTouchEventEPNS_10TouchEventE(%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*) unnamed_addr #7

declare void @_ZN2ui12EventHandler14OnGestureEventEPNS_12GestureEventE(%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*) unnamed_addr #7

declare void @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE(%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*) unnamed_addr #7

declare { i8*, i64 } @_ZNK2ui12EventHandler13GetLogContextEv(%"class.ui::EventHandler"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn40_N4aura20EventObserverAdapterD1Ev(%"class.aura::EventObserverAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 -1, i32 2
  %3 = bitcast %"class.ui::EventObserver"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 5
  %5 = bitcast %"class.ui::EventObserver"** %4 to %"class.base::CheckedObserver"*
  %6 = bitcast %"class.ui::EventObserver"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 9
  %8 = bitcast %"class.ui::EventObserver"** %7 to %"class.ui::EventTarget"**
  %9 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %8, align 8
  %10 = bitcast %"class.ui::EventObserver"** %2 to %"class.ui::EventHandler"*
  tail call void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"* %9, %"class.ui::EventHandler"* %10) #13
  %11 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 10
  %12 = bitcast %"class.ui::EventObserver"** %11 to %"class.std::__1::__tree.219"*
  %13 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 11
  %14 = bitcast %"class.ui::EventObserver"** %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  tail call void @_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.219"* %12, %"class.std::__1::__tree_node"* %15) #13
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %5) #13
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn40_N4aura20EventObserverAdapterD0Ev(%"class.aura::EventObserverAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.aura::EventObserverAdapter", %"class.aura::EventObserverAdapter"* %0, i64 -1, i32 2
  %3 = bitcast %"class.ui::EventObserver"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 5
  %5 = bitcast %"class.ui::EventObserver"** %4 to %"class.base::CheckedObserver"*
  %6 = bitcast %"class.ui::EventObserver"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN4aura20EventObserverAdapterE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 9
  %8 = bitcast %"class.ui::EventObserver"** %7 to %"class.ui::EventTarget"**
  %9 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %8, align 8
  %10 = bitcast %"class.ui::EventObserver"** %2 to %"class.ui::EventHandler"*
  tail call void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"* %9, %"class.ui::EventHandler"* %10) #13
  %11 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 10
  %12 = bitcast %"class.ui::EventObserver"** %11 to %"class.std::__1::__tree.219"*
  %13 = getelementptr inbounds %"class.ui::EventObserver"*, %"class.ui::EventObserver"** %2, i64 11
  %14 = bitcast %"class.ui::EventObserver"** %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  tail call void @_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.219"* %12, %"class.std::__1::__tree_node"* %15) #13
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %5) #13
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %10) #13
  %16 = bitcast %"class.ui::EventObserver"** %2 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !20
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !20
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !20
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN2ui11EventTarget22RemovePreTargetHandlerEPNS_12EventHandlerE(%"class.ui::EventTarget"*, %"class.ui::EventHandler"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.219"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.219"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.219"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

declare %"class.ui::Event"* @_ZN2ui5Event5CloneERKS0_(%"class.ui::Event"* dereferenceable(144)) local_unnamed_addr #7

declare %"class.ui::LocatedEvent"* @_ZN2ui5Event14AsLocatedEventEv(%"class.ui::Event"*) local_unnamed_addr #7

declare void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #7

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.28"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::CheckedObserverAdapter"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedObserverAdapter"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %38 to i64
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %1) #13
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8
  %44 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  %45 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::CheckedObserverAdapter"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::CheckedObserverAdapter"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %50, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %51, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %52) #13
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::CheckedObserverAdapter"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::CheckedObserverAdapter"*
  %63 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %65, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %66) #13
  %67 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE14__erase_uniqueIS6_EEmRKT_(%"class.std::__1::__tree.44"*, %"class.std::__1::unique_ptr.228"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.356"**
  %5 = load %"class.std::__1::__tree_node.356"*, %"class.std::__1::__tree_node.356"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.356"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node.356"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %82, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.aura::EventObserverAdapter"*, %"class.aura::EventObserverAdapter"** %9, align 8
  br label %11

11:                                               ; preds = %11, %8
  %12 = phi %"class.std::__1::__tree_end_node"* [ %3, %8 ], [ %22, %11 ]
  %13 = phi %"class.std::__1::__tree_node.356"* [ %5, %8 ], [ %23, %11 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.aura::EventObserverAdapter"*, %"class.aura::EventObserverAdapter"** %14, align 8
  %16 = icmp ult %"class.aura::EventObserverAdapter"* %15, %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %13, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node.356"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.356", %"class.std::__1::__tree_node.356"* %13, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node.356"* %13 to %"class.std::__1::__tree_node.356"**
  %21 = select i1 %16, %"class.std::__1::__tree_node.356"** %18, %"class.std::__1::__tree_node.356"** %20
  %22 = select i1 %16, %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"* %19
  %23 = load %"class.std::__1::__tree_node.356"*, %"class.std::__1::__tree_node.356"** %21, align 8
  %24 = icmp eq %"class.std::__1::__tree_node.356"* %23, null
  br i1 %24, label %25, label %11

25:                                               ; preds = %11
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %22, %3
  br i1 %26, label %82, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.aura::EventObserverAdapter"**
  %30 = load %"class.aura::EventObserverAdapter"*, %"class.aura::EventObserverAdapter"** %29, align 8
  %31 = icmp ult %"class.aura::EventObserverAdapter"* %10, %30
  br i1 %31, label %82, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_end_node"**
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %37
  br i1 %43, label %60, label %51

44:                                               ; preds = %32, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %34, %32 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %36, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %36 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %49, %36
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %36 ], [ %56, %51 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %63, %22
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = ptrtoint %"class.std::__1::__tree_end_node"* %61 to i64
  %67 = bitcast %"class.std::__1::__tree.44"* %0 to i64*
  store i64 %66, i64* %67, align 8
  br label %68

68:                                               ; preds = %65, %60
  %69 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %72) #13
  %73 = load %"class.aura::EventObserverAdapter"*, %"class.aura::EventObserverAdapter"** %29, align 8
  store %"class.aura::EventObserverAdapter"* null, %"class.aura::EventObserverAdapter"** %29, align 8
  %74 = icmp eq %"class.aura::EventObserverAdapter"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = bitcast %"class.aura::EventObserverAdapter"* %73 to void (%"class.aura::EventObserverAdapter"*)***
  %77 = load void (%"class.aura::EventObserverAdapter"*)**, void (%"class.aura::EventObserverAdapter"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.aura::EventObserverAdapter"*)*, void (%"class.aura::EventObserverAdapter"*)** %77, i64 1
  %79 = load void (%"class.aura::EventObserverAdapter"*)*, void (%"class.aura::EventObserverAdapter"*)** %78, align 8
  tail call void %79(%"class.aura::EventObserverAdapter"* nonnull %73) #13
  br label %80

80:                                               ; preds = %68, %75
  %81 = bitcast %"class.std::__1::__tree_end_node"* %22 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %27, %25, %2, %80
  %83 = phi i64 [ 1, %80 ], [ 0, %2 ], [ 0, %25 ], [ 0, %27 ]
  ret i64 %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !20
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !20
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !20
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !20
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !20
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !20
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !20
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !20
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !20
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !20
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !20
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !20
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !20
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList.27"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::EventObserverAdapter, false, true, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList.27"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList.27", %"class.base::ObserverList.27"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #13
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #13
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #13
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList.27"*, %"class.base::ObserverList.27"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN4aura20EventObserverAdapterELb0ELb1ES4_E7CompactEvEUlTyRKT_E_EESB_SB_SB_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #13
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #13
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #13
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #13
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #13
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #13
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

declare void @_ZN4aura23EnvInputStateControllerC1EPNS_3EnvE(%"class.aura::EnvInputStateController"*, %"class.aura::Env"*) unnamed_addr #7

declare void @_ZN2ui21GestureRecognizerImplC1Ev(%"class.ui::GestureRecognizerImpl"*) unnamed_addr #7

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #7

declare void @_ZN2ui16X11CursorFactoryC1Ev(%"class.ui::X11CursorFactory"*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJS6_EEENS1_INS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISF_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_10unique_ptrIN4aura20EventObserverAdapterENS_14default_deleteIS3_EEEENS_4lessIS6_EENS_9allocatorIS6_EEE16__construct_nodeIJS6_EEENS1_INS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISF_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base12ObserverListIN4aura20EventObserverAdapterELb0ELb1ENS_8internal22CheckedObserverAdapterEE3endEv"}
!20 = !{i8 0, i8 2}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!27 = distinct !{!27, !9}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!35 = distinct !{!35, !9}
!36 = distinct !{!36, !9}
!37 = distinct !{!37, !9}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!43 = distinct !{!43, !"_ZNK4base12ObserverListIN4aura11EnvObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!44 = distinct !{!44, !9}
!45 = distinct !{!45, !9}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__16__treeIN2ui9EventTypeENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
