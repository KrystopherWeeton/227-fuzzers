; ModuleID = '../../v8/src/handles/global-handles.cc'
source_filename = "../../v8/src/handles/global-handles.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1084", %"class.std::__1::vector.1091", %"class.std::__1::unique_ptr.1098", %"class.std::__1::vector.1108", %"class.std::__1::unique_ptr.1115", i64, %"class.std::__1::vector.1121", %"class.std::__1::vector.1129", %"class.std::__1::vector.1137", i8, i8, i32 }
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type { %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::Node"*, i64, i64 }
%"class.v8::internal::GlobalHandles::NodeBlock" = type <{ [256 x %"class.v8::internal::GlobalHandles::Node"], %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles::Node" = type { %"class.v8::internal::NodeBase", void (%"class.v8::WeakCallbackInfo"*)* }
%"class.v8::internal::NodeBase" = type { i64, i16, i8, i8, %union.anon.1087 }
%union.anon.1087 = type { %"class.v8::internal::GlobalHandles::Node"* }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::vector.1091" = type { %"class.std::__1::__vector_base.1092" }
%"class.std::__1::__vector_base.1092" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.1093" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.v8::internal::GlobalHandles::NodeSpace.1101"* }
%"class.v8::internal::GlobalHandles::NodeSpace.1101" = type { %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::TracedNode"*, i64, i64 }
%"class.v8::internal::GlobalHandles::NodeBlock.1102" = type <{ [256 x %"class.v8::internal::GlobalHandles::TracedNode"], %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles::TracedNode" = type { %"class.v8::internal::NodeBase.1103", void (%"class.v8::WeakCallbackInfo"*)* }
%"class.v8::internal::NodeBase.1103" = type { i64, i16, i8, i8, %union.anon.1104 }
%union.anon.1104 = type { %"class.v8::internal::GlobalHandles::TracedNode"* }
%"class.std::__1::vector.1108" = type { %"class.std::__1::__vector_base.1109" }
%"class.std::__1::__vector_base.1109" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type { %"class.std::__1::map", i64, %"class.v8::internal::GlobalHandles"*, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"*, %"class.std::__1::__compressed_pair.1124" }
%"struct.std::__1::pair.1123" = type { %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.std::__1::pair.1123"* }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"*, %"class.std::__1::__compressed_pair.1132" }
%"struct.std::__1::pair.1131" = type { %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::pair.1131"* }
%"class.std::__1::vector.1137" = type { %"class.std::__1::__vector_base.1138" }
%"class.std::__1::__vector_base.1138" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.652", %"class.std::__1::unique_ptr.673", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.683", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.767", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.780", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.790", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.801", %"struct.std::__1::atomic.159", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.919"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.931", i32, i8, i8, i32, i32, %"class.std::__1::vector.937", %"class.std::__1::vector.937", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.944", i64, %"class.std::__1::unordered_map.945", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.548", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.167", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1001", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1039", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1073", %"class.std::__1::vector.1077", %"class.std::__1::vector.1077", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.27", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.27", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.27", i64, i64, %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.37", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.168", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.27", i64, i8, %"struct.std::__1::atomic.27", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.172", %"class.std::__1::vector.172", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.405", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.441", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.481", %"class.std::__1::shared_ptr.487", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.510", %"class.std::__1::unique_ptr.536", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.542", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.555", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.337", i8, [7 x i8], %"class.std::__1::unordered_map.561", %"class.std::__1::unordered_map.587", %"class.std::__1::unordered_map.561", %"class.std::__1::unordered_map.611", %"class.std::__1::vector.639", i8, %"class.std::__1::unique_ptr.646", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.8", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.23", [4 x i8] }>
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.32", %"struct.std::__1::atomic.32", %"struct.std::__1::atomic.32" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i64 }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.111" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.27"*, %"class.std::__1::unique_ptr.105" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.27", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.46", %"class.std::__1::vector.46", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.48" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.53" }
%"class.std::__1::__hash_table.53" = type <{ %"class.std::__1::unique_ptr.54", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base.57"** }
%"struct.std::__1::__hash_node_base.57" = type { %"struct.std::__1::__hash_node_base.57"* }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::__bucket_list_deallocator.59" }
%"class.std::__1::__bucket_list_deallocator.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.57" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.32", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.94", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.27"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.32", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.32", %"struct.std::__1::atomic.76", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.80" }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.82" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.98", i8, [7 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { i64*, i64*, %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.27", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.std::__1::pair.113"*, %"struct.std::__1::pair.113"*, %"class.std::__1::__compressed_pair.114" }
%"struct.std::__1::pair.113" = type { i32, i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::pair.113"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.27", i64, %"struct.std::__1::atomic.27" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.27", i32, %"struct.std::__1::atomic.27", %"class.v8::base::Mutex", %"struct.std::__1::atomic.27" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.119" }
%"class.std::__1::unordered_map.119" = type { %"class.std::__1::__hash_table.120" }
%"class.std::__1::__hash_table.120" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.141", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.124"** }
%"struct.std::__1::__hash_node_base.124" = type { %"struct.std::__1::__hash_node_base.124"* }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__bucket_list_deallocator.126" }
%"class.std::__1::__bucket_list_deallocator.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.124" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.146", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.148" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1006", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1010", %"class.std::__1::unique_ptr.1016", %"class.std::__1::unique_ptr.481", %"class.std::__1::vector.1022", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1006" = type { %"struct.std::__1::__atomic_base.1007" }
%"struct.std::__1::__atomic_base.1007" = type { %"struct.std::__1::__cxx_atomic_impl.1008" }
%"struct.std::__1::__cxx_atomic_impl.1008" = type { %"struct.std::__1::__cxx_atomic_base_impl.1009" }
%"struct.std::__1::__cxx_atomic_base_impl.1009" = type { i32 }
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.760" }
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { i64**, i64**, %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { i64** }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.760", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1022" = type { %"class.std::__1::__vector_base.1023" }
%"class.std::__1::__vector_base.1023" = type { %"struct.std::__1::pair.1024"*, %"struct.std::__1::pair.1024"*, %"class.std::__1::__compressed_pair.1025" }
%"struct.std::__1::pair.1024" = type opaque
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::pair.1024"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.159", %"struct.std::__1::atomic.163", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.27", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.167" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i64 }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.174" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.std::__1::vector.294", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.188", %"class.std::__1::vector.189", %"class.std::__1::vector.196", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.188" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.191" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.std::__1::unique_ptr.198"*, %"class.std::__1::unique_ptr.198"*, %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::unique_ptr.198" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.std::__1::unique_ptr.198"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214", %"class.v8::internal::Worklist.216", %"class.v8::internal::Worklist.218" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.216" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"class.v8::internal::Worklist.218" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.27" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.220", i8, i64 }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.236" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.188"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.236" = type { %"class.std::__1::__hash_table.237" }
%"class.std::__1::__hash_table.237" = type <{ %"class.std::__1::unique_ptr.238", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.256", [4 x i8] }>
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240", %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base.241"** }
%"struct.std::__1::__hash_node_base.241" = type { %"struct.std::__1::__hash_node_base.241"* }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.std::__1::__bucket_list_deallocator.243" }
%"class.std::__1::__bucket_list_deallocator.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.241" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.263" }
%"class.std::__1::unordered_map.263" = type { %"class.std::__1::__hash_table.264" }
%"class.std::__1::__hash_table.264" = type <{ %"class.std::__1::unique_ptr.265", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.283", [4 x i8] }>
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.268"** }
%"struct.std::__1::__hash_node_base.268" = type { %"struct.std::__1::__hash_node_base.268"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator.270" }
%"class.std::__1::__bucket_list_deallocator.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base.268" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.std::__1::pair.296"*, %"struct.std::__1::pair.296"*, %"class.std::__1::__compressed_pair.297" }
%"struct.std::__1::pair.296" = type opaque
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::pair.296"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.302", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.287"], [3 x %"class.std::__1::vector.287"], i8, %"struct.std::__1::atomic.159", [6 x i8], %"class.std::__1::vector.287", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.312"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.312" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.337", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.330"], %"class.std::__1::unique_ptr.302" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.369", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.373", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.378" }
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.373" = type { %"struct.std::__1::__atomic_base.374" }
%"struct.std::__1::__atomic_base.374" = type { %"struct.std::__1::__cxx_atomic_impl.375" }
%"struct.std::__1::__cxx_atomic_impl.375" = type { %"struct.std::__1::__cxx_atomic_base_impl.376" }
%"struct.std::__1::__cxx_atomic_base_impl.376" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.302", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.159", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.408", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.408" = type { %"class.std::__1::__hash_table.409" }
%"class.std::__1::__hash_table.409" = type <{ %"class.std::__1::unique_ptr.410", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.428", [4 x i8] }>
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412", %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.std::__1::__hash_node_base.413"** }
%"struct.std::__1::__hash_node_base.413" = type { %"struct.std::__1::__hash_node_base.413"* }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.std::__1::__bucket_list_deallocator.415" }
%"class.std::__1::__bucket_list_deallocator.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.413" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.444" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::EmbedderHeapTracer"*, %"class.v8::internal::DefaultEmbedderRootsHandler", i32, i8, [3 x i8], %"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics", %"struct.v8::WrapperDescriptor", [4 x i8] }>
%"class.v8::EmbedderHeapTracer" = type { i32 (...)**, %"class.v8::Isolate"* }
%"class.v8::internal::DefaultEmbedderRootsHandler" = type { %"class.v8::EmbedderRootsHandler", %"class.v8::EmbedderHeapTracer"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics" = type { i64, i64, i64 }
%"struct.v8::WrapperDescriptor" = type <{ i32, i32, i16, [2 x i8] }>
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.487" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.506", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.488", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.491", %"class.std::__1::set.499" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.491" = type { %"class.std::__1::__tree.492" }
%"class.std::__1::__tree.492" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.499" = type { %"class.std::__1::__tree.500" }
%"class.std::__1::__tree.500" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__cxx_atomic_impl.508" }
%"struct.std::__1::__cxx_atomic_impl.508" = type { %"struct.std::__1::__cxx_atomic_base_impl.509" }
%"struct.std::__1::__cxx_atomic_base_impl.509" = type { i8* }
%"class.v8::CppHeap" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.510" = type { %"class.std::__1::__hash_table.511" }
%"class.std::__1::__hash_table.511" = type <{ %"class.std::__1::unique_ptr.512", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514", %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.515"** }
%"struct.std::__1::__hash_node_base.515" = type { %"struct.std::__1::__hash_node_base.515"* }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::__bucket_list_deallocator.517" }
%"class.std::__1::__bucket_list_deallocator.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.515" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.548", %"class.std::__1::vector.548" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.337" = type { %"class.std::__1::__hash_table.338" }
%"class.std::__1::__hash_table.338" = type <{ %"class.std::__1::unique_ptr.339", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358", [4 x i8] }>
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341", %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.342"** }
%"struct.std::__1::__hash_node_base.342" = type { %"struct.std::__1::__hash_node_base.342"* }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.std::__1::__bucket_list_deallocator.344" }
%"class.std::__1::__bucket_list_deallocator.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::__hash_node_base.342" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.587" = type { %"class.std::__1::__hash_table.588" }
%"class.std::__1::__hash_table.588" = type <{ %"class.std::__1::unique_ptr.589", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.607", [4 x i8] }>
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591", %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"struct.std::__1::__hash_node_base.592"** }
%"struct.std::__1::__hash_node_base.592" = type { %"struct.std::__1::__hash_node_base.592"* }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.std::__1::__bucket_list_deallocator.594" }
%"class.std::__1::__bucket_list_deallocator.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.592" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.561" = type { %"class.std::__1::__hash_table.562" }
%"class.std::__1::__hash_table.562" = type <{ %"class.std::__1::unique_ptr.563", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.581", [4 x i8] }>
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565", %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.std::__1::__hash_node_base.566"** }
%"struct.std::__1::__hash_node_base.566" = type { %"struct.std::__1::__hash_node_base.566"* }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.std::__1::__bucket_list_deallocator.568" }
%"class.std::__1::__bucket_list_deallocator.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base.566" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.611" = type { %"class.std::__1::__hash_table.612" }
%"class.std::__1::__hash_table.612" = type <{ %"class.std::__1::unique_ptr.613", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.633", [4 x i8] }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615", %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::__hash_node_base.616"** }
%"struct.std::__1::__hash_node_base.616" = type { %"struct.std::__1::__hash_node_base.616"* }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::__bucket_list_deallocator.618" }
%"class.std::__1::__bucket_list_deallocator.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.616" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.639" = type { %"class.std::__1::__vector_base.640" }
%"class.std::__1::__vector_base.640" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.641" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.548" }
%"class.std::__1::shared_ptr.652" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.146", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.653", %"class.std::__1::unique_ptr.667" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.656" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"class.std::__1::unique_ptr.658"*, %"class.std::__1::unique_ptr.658"*, %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.std::__1::unique_ptr.658"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.676", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.676" = type { %"struct.std::__1::__atomic_base.677" }
%"struct.std::__1::__atomic_base.677" = type { %"struct.std::__1::__cxx_atomic_impl.678" }
%"struct.std::__1::__cxx_atomic_impl.678" = type { %"struct.std::__1::__cxx_atomic_base_impl.679" }
%"struct.std::__1::__cxx_atomic_base_impl.679" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.683" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.684", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.684" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.685", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %"class.std::__1::unique_ptr.687"*, %"class.std::__1::unique_ptr.687"*, %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::unique_ptr.687" = type opaque
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.std::__1::unique_ptr.687"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.699", %"struct.std::__1::atomic.159", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.std::__1::set.735", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.735" = type { %"class.std::__1::__tree.736" }
%"class.std::__1::__tree.736" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.737", %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.745" }
%"class.v8::internal::TaggedImpl.745" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.744" }
%"class.v8::internal::TaggedImpl.744" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.752", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.758", %"class.v8::internal::DetachableVector.759", %"class.v8::internal::DetachableVector.758", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.759" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.758" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.488" }
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.760", %"class.std::__1::vector.767" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.774" }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.767" = type { %"class.std::__1::__vector_base.768" }
%"class.std::__1::__vector_base.768" = type { i32*, i32*, %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.780" = type { %"struct.std::__1::__atomic_base.781" }
%"struct.std::__1::__atomic_base.781" = type { %"struct.std::__1::__cxx_atomic_impl.782" }
%"struct.std::__1::__cxx_atomic_impl.782" = type { %"struct.std::__1::__cxx_atomic_base_impl.783" }
%"struct.std::__1::__cxx_atomic_base_impl.783" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.790" = type { %"struct.std::__1::__atomic_base.791" }
%"struct.std::__1::__atomic_base.791" = type { %"struct.std::__1::__cxx_atomic_impl.792" }
%"struct.std::__1::__cxx_atomic_impl.792" = type { %"struct.std::__1::__cxx_atomic_base_impl.793" }
%"struct.std::__1::__cxx_atomic_base_impl.793" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.797 }
%union.anon.797 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.801" = type { %"class.std::__1::__hash_table.802" }
%"class.std::__1::__hash_table.802" = type <{ %"class.std::__1::unique_ptr.803", %"class.std::__1::__compressed_pair.813", %"class.std::__1::__compressed_pair.818", %"class.std::__1::__compressed_pair.821", [4 x i8] }>
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805", %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"struct.std::__1::__hash_node_base.806"** }
%"struct.std::__1::__hash_node_base.806" = type { %"struct.std::__1::__hash_node_base.806"* }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.std::__1::__bucket_list_deallocator.808" }
%"class.std::__1::__bucket_list_deallocator.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"struct.std::__1::__hash_node_base.806" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.827", %"class.v8::internal::Handle.833", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.834", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.833" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.834" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.835", %"class.std::__1::vector.841", %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.855", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.861", %"class.std::__1::vector.867", %"struct.std::__1::pair.875" }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.841" = type { %"class.std::__1::__vector_base.842" }
%"class.std::__1::__vector_base.842" = type { %"class.std::__1::unique_ptr.843"*, %"class.std::__1::unique_ptr.843"*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::unique_ptr.843" = type opaque
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.std::__1::unique_ptr.843"* }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.867" = type { %"class.std::__1::__vector_base.868" }
%"class.std::__1::__vector_base.868" = type { %"struct.std::__1::pair.869"*, %"struct.std::__1::pair.869"*, %"class.std::__1::__compressed_pair.870" }
%"struct.std::__1::pair.869" = type opaque
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"struct.std::__1::pair.869"* }
%"struct.std::__1::pair.875" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.4"*, i16, i8*)*, i8* }
%"class.v8::Local.4" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.879", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.879" = type { %"class.std::__1::__hash_table.880" }
%"class.std::__1::__hash_table.880" = type <{ %"class.std::__1::unique_ptr.881", %"class.std::__1::__compressed_pair.891", %"class.std::__1::__compressed_pair.896", %"class.std::__1::__compressed_pair.900", [4 x i8] }>
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883", %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"struct.std::__1::__hash_node_base.884"** }
%"struct.std::__1::__hash_node_base.884" = type { %"struct.std::__1::__hash_node_base.884"* }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.std::__1::__bucket_list_deallocator.886" }
%"class.std::__1::__bucket_list_deallocator.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"struct.std::__1::__hash_node_base.884" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.914" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.908"**, %"struct.std::__1::pair.908"**, %"struct.std::__1::pair.908"**, %"class.std::__1::__compressed_pair.909" }
%"struct.std::__1::pair.908" = type opaque
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"struct.std::__1::pair.908"** }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.919" = type { %"class.std::__1::__vector_base.920" }
%"class.std::__1::__vector_base.920" = type { %"class.v8::internal::Handle.921"*, %"class.v8::internal::Handle.921"*, %"class.std::__1::__compressed_pair.922" }
%"class.v8::internal::Handle.921" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.v8::internal::Handle.921"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.927" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.927" = type { %"class.std::__1::__vector_base.928" }
%"class.std::__1::__vector_base.928" = type { %"struct.std::__1::pair.908"*, %"struct.std::__1::pair.908"*, %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::pair.908"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.785", i32, %"class.v8::Local.4" }
%"class.v8::Local.785" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.937" = type { %"class.std::__1::__vector_base.938" }
%"class.std::__1::__vector_base.938" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.944" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.945" = type { %"class.std::__1::__hash_table.946" }
%"class.std::__1::__hash_table.946" = type <{ %"class.std::__1::unique_ptr.947", %"class.std::__1::__compressed_pair.957", %"class.std::__1::__compressed_pair.962", %"class.std::__1::__compressed_pair.965", [4 x i8] }>
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949", %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"struct.std::__1::__hash_node_base.950"** }
%"struct.std::__1::__hash_node_base.950" = type { %"struct.std::__1::__hash_node_base.950"* }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.std::__1::__bucket_list_deallocator.952" }
%"class.std::__1::__bucket_list_deallocator.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::__hash_node_base.950" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.167" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.969", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.998", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.999", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.969" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.994, %union.anon.996, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.994 = type { i64 }
%union.anon.996 = type { i64 }
%"class.std::__1::weak_ptr.998" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.999" = type { %"class.v8::PersistentBase.1000" }
%"class.v8::PersistentBase.1000" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.970", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.970" = type { %"class.std::__1::__hash_table.971" }
%"class.std::__1::__hash_table.971" = type <{ %"class.std::__1::unique_ptr.972", %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.987", %"class.std::__1::__compressed_pair.990", [4 x i8] }>
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974", %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"struct.std::__1::__hash_node_base.975"** }
%"struct.std::__1::__hash_node_base.975" = type { %"struct.std::__1::__hash_node_base.975"* }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.std::__1::__bucket_list_deallocator.977" }
%"class.std::__1::__bucket_list_deallocator.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"struct.std::__1::__hash_node_base.975" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1030", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.786", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.786" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1047" }
%"class.std::__1::unordered_map.1047" = type { %"class.std::__1::__hash_table.1048" }
%"class.std::__1::__hash_table.1048" = type <{ %"class.std::__1::unique_ptr.1049", %"class.std::__1::__compressed_pair.1059", %"class.std::__1::__compressed_pair.1064", %"class.std::__1::__compressed_pair.1067", [4 x i8] }>
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051", %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1052"** }
%"struct.std::__1::__hash_node_base.1052" = type { %"struct.std::__1::__hash_node_base.1052"* }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.std::__1::__bucket_list_deallocator.1054" }
%"class.std::__1::__bucket_list_deallocator.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"struct.std::__1::__hash_node_base.1052" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1073" = type { %"struct.std::__1::__atomic_base.1074" }
%"struct.std::__1::__atomic_base.1074" = type { %"struct.std::__1::__cxx_atomic_impl.1075" }
%"struct.std::__1::__cxx_atomic_impl.1075" = type { %"struct.std::__1::__cxx_atomic_base_impl.1076" }
%"struct.std::__1::__cxx_atomic_base_impl.1076" = type { %"class.std::__1::vector.1077"* }
%"class.std::__1::vector.1077" = type { %"class.std::__1::__vector_base.1078" }
%"class.std::__1::__vector_base.1078" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1079" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1144" }
%"struct.std::__1::pair.1144" = type { i64, %"struct.v8::internal::GlobalHandles::OnStackTracedNodeSpace::NodeEntry" }
%"struct.v8::internal::GlobalHandles::OnStackTracedNodeSpace::NodeEntry" = type { %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles"* }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::TracedGlobal" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.std::__1::unique_ptr.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Heap::DevToolsTraceEventScope" = type { %"class.v8::internal::Heap"*, i8* }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::CancelableTask" = type { %"class.v8::internal::Cancelable", %"class.v8::Task" }
%"class.v8::internal::Cancelable" = type { i32 (...)**, %"class.v8::internal::CancelableTaskManager"*, %"struct.std::__1::atomic.1158", i64 }
%"struct.std::__1::atomic.1158" = type { %"struct.std::__1::__atomic_base.1159" }
%"struct.std::__1::__atomic_base.1159" = type { %"struct.std::__1::__cxx_atomic_impl.1160" }
%"struct.std::__1::__cxx_atomic_impl.1160" = type { %"struct.std::__1::__cxx_atomic_base_impl.1161" }
%"struct.std::__1::__cxx_atomic_base_impl.1161" = type { i32 }
%"class.v8::Task" = type { i32 (...)** }
%"class.v8::PersistentHandleVisitor" = type { i32 (...)** }
%"class.v8::Persistent" = type opaque
%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor" = type { i32 (...)** }
%"class.v8::internal::HeapStats" = type { i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i32*, i8*, i8*, i64* }

$_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE7ReleaseEPS3_ = comdat any

$_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_ = comdat any

$_ZN2v88internal13GlobalHandles4Node26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE = comdat any

$_ZN2v88internal13GlobalHandles10TracedNode26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE = comdat any

$_ZN2v88internal13GlobalHandles4Node31PostGarbageCollectionProcessingEPNS0_7IsolateE = comdat any

$_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_4NodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE = comdat any

$_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_10TracedNodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE = comdat any

$_ZN2v88internal13GlobalHandles28InvokeFirstPassWeakCallbacksINS1_4NodeEEEmPNSt3__16vectorINS4_4pairIPT_NS1_22PendingPhantomCallbackEEENS4_9allocatorISA_EEEE = comdat any

$_ZN2v88internal13GlobalHandles28InvokeFirstPassWeakCallbacksINS1_10TracedNodeEEEmPNSt3__16vectorINS4_4pairIPT_NS1_22PendingPhantomCallbackEEENS4_9allocatorISA_EEEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIPN2v88internal13GlobalHandles4NodeENS_9allocatorIS5_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIPN2v88internal13GlobalHandles10TracedNodeENS_9allocatorIS5_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [25 x i8] c"on-stack TracedReference\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [76 x i8] c"Copying of references is not supported when SetFinalizationCallback is set.\00", align 1
@.str.3 = private unnamed_addr constant [75 x i8] c"Moving of references is not supported when SetFinalizationCallback is set.\00", align 1
@_ZN2v88internal32FLAG_reclaim_unmodified_wrappersE = external local_unnamed_addr global i8, align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"MajorGC\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"invoke weak phantom callbacks\00", align 1
@_ZZN2v88internal13GlobalHandles40InvokeSecondPassPhantomCallbacksFromTaskEvE29trace_event_unique_atomic1382 = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [3 x i8] c"v8\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"V8.GCPhantomHandleProcessingCallback\00", align 1
@_ZN2v88internal22FLAG_optimize_for_sizeE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal16FLAG_predictableE = external local_unnamed_addr global i8, align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"on_stack_nodes_.empty()\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"object_ != kGlobalHandleZapValue\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"IsPendingFinalizer()\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"NEAR_DEATH != state()\00", align 1
@.str.14 = private unnamed_addr constant [76 x i8] c"Handle not reset in first callback. See comments on |v8::WeakCallbackInfo|.\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal13GlobalHandles42InvokeOrScheduleSecondPassPhantomCallbacksEbE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN2v88internal13GlobalHandlesC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal13GlobalHandlesC2EPNS0_7IsolateE
@_ZN2v88internal13GlobalHandlesD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::GlobalHandles"*), void (%"class.v8::internal::GlobalHandles"*)* @_ZN2v88internal13GlobalHandlesD2Ev
@_ZN2v88internal14EternalHandlesD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::EternalHandles"*), void (%"class.v8::internal::EternalHandles"*)* @_ZN2v88internal14EternalHandlesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles22OnStackTracedNodeSpace24NotifyEmptyEmbedderStackEv(%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles22OnStackTracedNodeSpace7IterateEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %10

9:                                                ; preds = %51, %2
  ret void

10:                                               ; preds = %7, %51
  %11 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %52, %51 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 5
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %13, i64 0, i32 0, i32 3
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 3
  %17 = icmp eq i8 %16, 1
  br i1 %17, label %18, label %23

18:                                               ; preds = %10
  %19 = ptrtoint %"class.std::__1::__tree_end_node"* %12 to i64
  %20 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %8, align 8
  %21 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %20, i64 3
  %22 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %21, align 8
  tail call void %22(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 %19) #12
  br label %23

23:                                               ; preds = %18, %10
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_end_node"**
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %28
  br i1 %34, label %51, label %42

35:                                               ; preds = %23, %35
  %36 = phi %"class.std::__1::__tree_node_base"* [ %38, %35 ], [ %25, %23 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %35

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 0
  br label %51

42:                                               ; preds = %27, %42
  %43 = phi %"class.std::__1::__tree_end_node"** [ %46, %42 ], [ %30, %27 ]
  %44 = bitcast %"class.std::__1::__tree_end_node"** %43 to %"class.std::__1::__tree_node_base"**
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 2
  %47 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, %45
  br i1 %50, label %51, label %42

51:                                               ; preds = %42, %27, %40
  %52 = phi %"class.std::__1::__tree_end_node"* [ %41, %40 ], [ %31, %27 ], [ %47, %42 ]
  %53 = icmp eq %"class.std::__1::__tree_end_node"* %52, %5
  br i1 %53, label %9, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::GlobalHandles::TracedNode"* @_ZN2v88internal13GlobalHandles22OnStackTracedNodeSpace7AcquireENS0_6ObjectEm(%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = and i64 %5, 255
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN2v88internal13GlobalHandles22OnStackTracedNodeSpace32CleanupBelowCurrentStackPositionEv(%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0)
  br label %10

10:                                               ; preds = %9, %3
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 2
  %12 = bitcast %"class.v8::internal::GlobalHandles"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node"* %16, null
  br i1 %17, label %46, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %42, %18
  %21 = phi %"class.std::__1::__tree_node"* [ %45, %42 ], [ %16, %18 ]
  %22 = phi %"class.std::__1::__tree_node_base"** [ %44, %42 ], [ %19, %18 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, %2
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  br label %48

32:                                               ; preds = %20
  %33 = icmp ult i64 %24, %2
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  br label %48

42:                                               ; preds = %34, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %36, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %35, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"* %43 to %"class.std::__1::__tree_node"*
  br label %20

46:                                               ; preds = %10
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  br label %48

48:                                               ; preds = %46, %40, %38, %30
  %49 = phi %"class.std::__1::__tree_end_node"* [ %14, %46 ], [ %31, %30 ], [ %39, %38 ], [ %41, %40 ]
  %50 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %27, %30 ], [ %35, %38 ], [ %22, %40 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %54, label %88

54:                                               ; preds = %48
  %55 = tail call i8* @_Znwm(i64 80) #13, !noalias !2
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = bitcast i8* %56 to i64*
  store i64 %2, i64* %57, align 8, !noalias !2
  %58 = getelementptr inbounds i8, i8* %55, i64 40
  %59 = bitcast i8* %58 to i64*
  store i64 1995093329451155167, i64* %59, align 8, !noalias !2
  %60 = getelementptr inbounds i8, i8* %55, i64 48
  %61 = bitcast i8* %60 to i16*
  store i16 0, i16* %61, align 8, !noalias !2
  %62 = getelementptr inbounds i8, i8* %55, i64 50
  store i8 0, i8* %62, align 2, !noalias !2
  %63 = getelementptr inbounds i8, i8* %55, i64 51
  store i8 40, i8* %63, align 1, !noalias !2
  %64 = getelementptr inbounds i8, i8* %55, i64 56
  %65 = getelementptr inbounds i8, i8* %55, i64 72
  %66 = bitcast i8* %65 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false)
  store i64 %13, i64* %66, align 8, !noalias !2
  %67 = bitcast i8* %55 to %"class.std::__1::__tree_node"*
  %68 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds i8, i8* %55, i64 16
  %70 = bitcast i8* %69 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %70, align 8
  %71 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %54
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  %79 = bitcast %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0 to i64*
  store i64 %78, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %81

81:                                               ; preds = %54, %77
  %82 = phi %"class.std::__1::__tree_node_base"* [ %68, %54 ], [ %80, %77 ]
  %83 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %84, %"class.std::__1::__tree_node_base"* %82) #12
  %85 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  br label %99

88:                                               ; preds = %48
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %90 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %89, i64 0, i32 0
  store i64 1995093329451155167, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  store i16 0, i16* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 3
  %93 = load i8, i8* %92, align 1
  %94 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %89, i64 1
  %95 = bitcast %"class.v8::internal::NodeBase.1103"* %94 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %95, align 8
  %96 = and i8 %93, -124
  %97 = or i8 %96, 40
  store i8 %97, i8* %92, align 1
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 4, i32 0
  store %"class.v8::internal::GlobalHandles::TracedNode"* null, %"class.v8::internal::GlobalHandles::TracedNode"** %98, align 8
  br label %99

99:                                               ; preds = %81, %88
  %100 = phi %"class.std::__1::__tree_node"* [ %67, %81 ], [ %52, %88 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %100, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 5
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %104 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.v8::internal::NodeBase.1103"*
  %105 = bitcast %"class.std::__1::__tree_end_node"* %102 to i64*
  store i64 %1, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %104, i64 0, i32 3
  %107 = load i8, i8* %106, align 1
  %108 = and i8 %107, -68
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 7
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to i8**
  store i8* null, i8** %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %103, i64 0, i32 0, i32 3
  %112 = or i8 %108, 65
  store i8 %112, i8* %111, align 1
  ret %"class.v8::internal::GlobalHandles::TracedNode"* %103
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles22OnStackTracedNodeSpace32CleanupBelowCurrentStackPositionEv(%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %75, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() #12
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %5, %11
  %12 = phi %"class.std::__1::__tree_end_node"* [ %22, %11 ], [ %7, %5 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %23, %11 ], [ %9, %5 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %6, %15
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__tree_node_base"** %19 to %"class.std::__1::__tree_node"**
  %21 = select i1 %16, %"class.std::__1::__tree_node"** %18, %"class.std::__1::__tree_node"** %20
  %22 = select i1 %16, %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"* %12
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %25, label %11

25:                                               ; preds = %11, %5
  %26 = phi %"class.std::__1::__tree_end_node"* [ %7, %5 ], [ %22, %11 ]
  %27 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_end_node"* %28, %26
  br i1 %29, label %75, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0 to i64*
  %32 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %68, %30
  %34 = phi %"class.std::__1::__tree_end_node"* [ %28, %30 ], [ %63, %68 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 1, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node_base"*
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 2
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_end_node"**
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %39
  br i1 %45, label %62, label %53

46:                                               ; preds = %33, %46
  %47 = phi %"class.std::__1::__tree_node_base"* [ %49, %46 ], [ %36, %33 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0
  br label %62

53:                                               ; preds = %38, %53
  %54 = phi %"class.std::__1::__tree_end_node"** [ %57, %53 ], [ %41, %38 ]
  %55 = bitcast %"class.std::__1::__tree_end_node"** %54 to %"class.std::__1::__tree_node_base"**
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 2
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, %56
  br i1 %61, label %62, label %53

62:                                               ; preds = %53, %51, %38
  %63 = phi %"class.std::__1::__tree_end_node"* [ %52, %51 ], [ %42, %38 ], [ %58, %53 ]
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %64, %34
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = ptrtoint %"class.std::__1::__tree_end_node"* %63 to i64
  store i64 %67, i64* %31, align 8
  br label %68

68:                                               ; preds = %66, %62
  %69 = load i64, i64* %2, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %2, align 8
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %72 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %72) #12
  %73 = bitcast %"class.std::__1::__tree_end_node"* %34 to i8*
  tail call void @_ZdlPv(i8* %73) #13
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %63, %26
  br i1 %74, label %75, label %33

75:                                               ; preds = %68, %25, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles10TracedNode6VerifyEPS1_PKPKm(%"class.v8::internal::GlobalHandles"* nocapture, i64** nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles49CleanupOnStackReferencesBelowCurrentStackPositionEv(%"class.v8::internal::GlobalHandles"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %2, align 8
  tail call void @_ZN2v88internal13GlobalHandles22OnStackTracedNodeSpace32CleanupBelowCurrentStackPositionEv(%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %3)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal13GlobalHandles32NumberOfOnStackHandlesForTestingEv(%"class.v8::internal::GlobalHandles"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal13GlobalHandles9TotalSizeEv(%"class.v8::internal::GlobalHandles"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %3, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %7, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %5
  %11 = shl i64 %10, 13
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal13GlobalHandles8UsedSizeEv(%"class.v8::internal::GlobalHandles"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %3, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %7, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %5
  %11 = shl i64 %10, 5
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal13GlobalHandles13handles_countEv(%"class.v8::internal::GlobalHandles"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %3, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %7, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %5
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles13SetStackStartEPv(%"class.v8::internal::GlobalHandles"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %9, label %8, !prof !5

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #14
  unreachable

9:                                                ; preds = %2
  %10 = ptrtoint i8* %1 to i64
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %4, i64 0, i32 1
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles24NotifyEmptyEmbedderStackEv(%"class.v8::internal::GlobalHandles"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %4, %"class.std::__1::__tree_node"* %7) #12
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandlesC2EPNS0_7IsolateE(%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 48) #13
  %6 = bitcast i8* %5 to %"class.v8::internal::GlobalHandles"**
  store %"class.v8::internal::GlobalHandles"* %0, %"class.v8::internal::GlobalHandles"** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false) #12
  %8 = ptrtoint i8* %5 to i64
  %9 = bitcast %"class.std::__1::unique_ptr.1084"* %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::vector.1091"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3
  %13 = tail call i8* @_Znwm(i64 48) #13
  %14 = bitcast i8* %13 to %"class.v8::internal::GlobalHandles"**
  store %"class.v8::internal::GlobalHandles"* %0, %"class.v8::internal::GlobalHandles"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 40, i1 false) #12
  %16 = ptrtoint i8* %13 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.1098"* %12 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4
  %19 = bitcast %"class.std::__1::vector.1108"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5
  %21 = tail call i8* @_Znwm(i64 48) #13
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #12
  %23 = bitcast i8* %21 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 32
  %27 = bitcast i8* %26 to %"class.v8::internal::GlobalHandles"**
  store %"class.v8::internal::GlobalHandles"* %0, %"class.v8::internal::GlobalHandles"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 40
  %29 = bitcast i8* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = ptrtoint i8* %21 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.1115"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 12
  store i32 0, i32* %33, align 4
  %34 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 82, i1 false)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandlesD2Ev(%"class.v8::internal::GlobalHandles"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %2, align 8
  store %"class.v8::internal::GlobalHandles::NodeSpace"* null, %"class.v8::internal::GlobalHandles::NodeSpace"** %2, align 8
  %4 = icmp eq %"class.v8::internal::GlobalHandles::NodeSpace"* %3, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %3, i64 0, i32 1
  %7 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %6, align 8
  %8 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %7, null
  br i1 %8, label %42, label %9

9:                                                ; preds = %5, %39
  %10 = phi %"class.v8::internal::GlobalHandles::NodeBlock"* [ %12, %39 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %10, i64 0, i32 1
  %12 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %10, i64 0, i32 0, i64 0
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %10, i64 0, i32 0, i64 256
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi %"class.v8::internal::GlobalHandles::Node"* [ %14, %9 ], [ %32, %15 ]
  %17 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -1, i32 0, i32 0
  store i64 1995093329451155167, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -1, i32 0, i32 1
  store i16 0, i16* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -1, i32 0, i32 4, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -1, i32 0, i32 2
  store i8 0, i8* %20, align 2
  %21 = bitcast %"class.v8::internal::GlobalHandles::Node"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #12
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -2, i32 0, i32 0
  store i64 1995093329451155167, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -2, i32 0, i32 1
  store i16 0, i16* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -2, i32 0, i32 4, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -2, i32 0, i32 2
  store i8 0, i8* %25, align 2
  %26 = bitcast %"class.v8::internal::GlobalHandles::Node"** %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -3, i32 0, i32 0
  store i64 1995093329451155167, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -3, i32 0, i32 1
  store i16 0, i16* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -3, i32 0, i32 4, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -3, i32 0, i32 2
  store i8 0, i8* %30, align 2
  %31 = bitcast %"class.v8::internal::GlobalHandles::Node"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #12
  %32 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -4
  %33 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %32, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -4, i32 0, i32 1
  store i16 0, i16* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -4, i32 0, i32 4, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %16, i64 -4, i32 0, i32 2
  store i8 0, i8* %36, align 2
  %37 = bitcast %"class.v8::internal::GlobalHandles::Node"** %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #12
  %38 = icmp eq %"class.v8::internal::GlobalHandles::Node"* %32, %13
  br i1 %38, label %39, label %15

39:                                               ; preds = %15
  %40 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"* %10 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  %41 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %12, null
  br i1 %41, label %42, label %9

42:                                               ; preds = %39, %5
  %43 = bitcast %"class.v8::internal::GlobalHandles::NodeSpace"* %3 to i8*
  tail call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %1, %42
  %45 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 0
  %46 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %45, align 8
  %47 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %46 to i64
  %50 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 1
  %51 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %46 to i8*
  tail call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %44, %48
  %54 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 8, i32 0, i32 0
  %55 = load %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"** %54, align 8
  %56 = icmp eq %"struct.std::__1::pair.1131"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.std::__1::pair.1131"* %55 to i64
  %59 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 8, i32 0, i32 1
  %60 = bitcast %"struct.std::__1::pair.1131"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"struct.std::__1::pair.1131"* %55 to i8*
  tail call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %53, %57
  %63 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 7, i32 0, i32 0
  %64 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %63, align 8
  %65 = icmp eq %"struct.std::__1::pair.1123"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = ptrtoint %"struct.std::__1::pair.1123"* %64 to i64
  %68 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 7, i32 0, i32 1
  %69 = bitcast %"struct.std::__1::pair.1123"** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = bitcast %"struct.std::__1::pair.1123"* %64 to i8*
  tail call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %62, %66
  %72 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %73 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %72, align 8
  store %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* null, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %72, align 8
  %74 = icmp eq %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %73, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to %"class.std::__1::__tree_node"**
  %79 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %78, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %76, %"class.std::__1::__tree_node"* %79) #12
  %80 = bitcast %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %73 to i8*
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %71, %75
  %82 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 0
  %83 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %82, align 8
  %84 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %83 to i64
  %87 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 1
  %88 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %83 to i8*
  tail call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %81, %85
  %91 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %91, align 8
  store %"class.v8::internal::GlobalHandles::NodeSpace.1101"* null, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %91, align 8
  %93 = icmp eq %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %92, null
  br i1 %93, label %136, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %92, i64 0, i32 1
  %96 = load %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %95, align 8
  %97 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %96, null
  br i1 %97, label %134, label %98

98:                                               ; preds = %94, %131
  %99 = phi %"class.v8::internal::GlobalHandles::NodeBlock.1102"* [ %101, %131 ], [ %96, %94 ]
  %100 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %99, i64 0, i32 1
  %101 = load %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %99, i64 0, i32 0, i64 0
  %103 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %99, i64 0, i32 0, i64 256
  br label %104

104:                                              ; preds = %104, %98
  %105 = phi %"class.v8::internal::GlobalHandles::TracedNode"* [ %103, %98 ], [ %118, %104 ]
  %106 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -1
  %107 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %106, i64 0, i32 0
  %108 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %106, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -1, i32 0, i32 1
  store i16 0, i16* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -1, i32 0, i32 3
  %111 = load i8, i8* %110, align 1
  %112 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %107, i64 1
  %113 = bitcast %"class.v8::internal::NodeBase.1103"* %112 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %113, align 8
  %114 = and i8 %111, -121
  %115 = or i8 %114, 40
  store i8 %115, i8* %110, align 1
  %116 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -1, i32 0, i32 4, i32 0
  store %"class.v8::internal::GlobalHandles::TracedNode"* null, %"class.v8::internal::GlobalHandles::TracedNode"** %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -1, i32 0, i32 2
  store i8 0, i8* %117, align 2
  %118 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -2
  %119 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %118, i64 0, i32 0
  %120 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %118, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -2, i32 0, i32 1
  store i16 0, i16* %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -2, i32 0, i32 3
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %119, i64 1
  %125 = bitcast %"class.v8::internal::NodeBase.1103"* %124 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %125, align 8
  %126 = and i8 %123, -121
  %127 = or i8 %126, 40
  store i8 %127, i8* %122, align 1
  %128 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -2, i32 0, i32 4, i32 0
  store %"class.v8::internal::GlobalHandles::TracedNode"* null, %"class.v8::internal::GlobalHandles::TracedNode"** %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %105, i64 -2, i32 0, i32 2
  store i8 0, i8* %129, align 2
  %130 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"* %118, %102
  br i1 %130, label %131, label %104

131:                                              ; preds = %104
  %132 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %99 to i8*
  tail call void @_ZdlPv(i8* %132) #13
  %133 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %101, null
  br i1 %133, label %134, label %98

134:                                              ; preds = %131, %94
  %135 = bitcast %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %92 to i8*
  tail call void @_ZdlPv(i8* %135) #13
  br label %136

136:                                              ; preds = %90, %134
  %137 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %138 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %137, align 8
  %139 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %138 to i64
  %142 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %143 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast %"class.v8::internal::GlobalHandles::Node"** %138 to i8*
  tail call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %136, %140
  %146 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %2, align 8
  store %"class.v8::internal::GlobalHandles::NodeSpace"* null, %"class.v8::internal::GlobalHandles::NodeSpace"** %2, align 8
  %147 = icmp eq %"class.v8::internal::GlobalHandles::NodeSpace"* %146, null
  br i1 %147, label %187, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %146, i64 0, i32 1
  %150 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %149, align 8
  %151 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %150, null
  br i1 %151, label %185, label %152

152:                                              ; preds = %148, %182
  %153 = phi %"class.v8::internal::GlobalHandles::NodeBlock"* [ %155, %182 ], [ %150, %148 ]
  %154 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %153, i64 0, i32 1
  %155 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %153, i64 0, i32 0, i64 0
  %157 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %153, i64 0, i32 0, i64 256
  br label %158

158:                                              ; preds = %158, %152
  %159 = phi %"class.v8::internal::GlobalHandles::Node"* [ %157, %152 ], [ %175, %158 ]
  %160 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -1, i32 0, i32 0
  store i64 1995093329451155167, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -1, i32 0, i32 1
  store i16 0, i16* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -1, i32 0, i32 4, i32 0
  %163 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -1, i32 0, i32 2
  store i8 0, i8* %163, align 2
  %164 = bitcast %"class.v8::internal::GlobalHandles::Node"** %162 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 16, i1 false) #12
  %165 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -2, i32 0, i32 0
  store i64 1995093329451155167, i64* %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -2, i32 0, i32 1
  store i16 0, i16* %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -2, i32 0, i32 4, i32 0
  %168 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -2, i32 0, i32 2
  store i8 0, i8* %168, align 2
  %169 = bitcast %"class.v8::internal::GlobalHandles::Node"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 16, i1 false) #12
  %170 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -3, i32 0, i32 0
  store i64 1995093329451155167, i64* %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -3, i32 0, i32 1
  store i16 0, i16* %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -3, i32 0, i32 4, i32 0
  %173 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -3, i32 0, i32 2
  store i8 0, i8* %173, align 2
  %174 = bitcast %"class.v8::internal::GlobalHandles::Node"** %172 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 16, i1 false) #12
  %175 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -4
  %176 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %175, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -4, i32 0, i32 1
  store i16 0, i16* %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -4, i32 0, i32 4, i32 0
  %179 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %159, i64 -4, i32 0, i32 2
  store i8 0, i8* %179, align 2
  %180 = bitcast %"class.v8::internal::GlobalHandles::Node"** %178 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false) #12
  %181 = icmp eq %"class.v8::internal::GlobalHandles::Node"* %175, %156
  br i1 %181, label %182, label %158

182:                                              ; preds = %158
  %183 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"* %153 to i8*
  tail call void @_ZdlPv(i8* %183) #13
  %184 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %155, null
  br i1 %184, label %185, label %152

185:                                              ; preds = %182, %148
  %186 = bitcast %"class.v8::internal::GlobalHandles::NodeSpace"* %146 to i8*
  tail call void @_ZdlPv(i8* %186) #13
  br label %187

187:                                              ; preds = %145, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 3
  %6 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::Node"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::internal::GlobalHandles::Node"** %5 to i64*
  br label %82

10:                                               ; preds = %2
  %11 = tail call i8* @_Znwm(i64 8240) #13
  %12 = bitcast i8* %11 to %"class.v8::internal::GlobalHandles::Node"*
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 1
  %14 = bitcast %"class.v8::internal::GlobalHandles::NodeSpace"* %4 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  %16 = shufflevector <2 x i64> %15, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %17 = getelementptr inbounds i8, i8* %11, i64 8192
  %18 = bitcast i8* %17 to %"class.v8::internal::GlobalHandles::Node"*
  br label %19

19:                                               ; preds = %19, %10
  %20 = phi %"class.v8::internal::GlobalHandles::Node"* [ %12, %10 ], [ %45, %19 ]
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 3
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, -9
  store i8 %23, i8* %21, align 1
  %24 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 1, i32 0, i32 3
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, -9
  store i8 %26, i8* %24, align 1
  %27 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 2, i32 0, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, -9
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 3, i32 0, i32 3
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, -9
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 4, i32 0, i32 3
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, -9
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 5, i32 0, i32 3
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, -9
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 6, i32 0, i32 3
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, -9
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 7, i32 0, i32 3
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, -9
  store i8 %44, i8* %42, align 1
  %45 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 8
  %46 = icmp eq %"class.v8::internal::GlobalHandles::Node"* %45, %18
  br i1 %46, label %47, label %19

47:                                               ; preds = %19
  %48 = bitcast i8* %11 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %49 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %49, align 8
  %50 = getelementptr inbounds i8, i8* %11, i64 8208
  %51 = bitcast i8* %50 to %"class.v8::internal::GlobalHandles::NodeSpace"**
  store %"class.v8::internal::GlobalHandles::NodeSpace"* %4, %"class.v8::internal::GlobalHandles::NodeSpace"** %51, align 8
  %52 = getelementptr inbounds i8, i8* %11, i64 8216
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 20, i1 false) #12
  %53 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %13 to i8**
  store i8* %11, i8** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 4
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %54, align 8
  %57 = bitcast %"class.v8::internal::GlobalHandles::Node"** %5 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %59, %47
  %60 = phi i64 [ %58, %47 ], [ %79, %59 ]
  %61 = phi i64 [ 255, %47 ], [ %76, %59 ]
  %62 = phi i32 [ 255, %47 ], [ %77, %59 ]
  %63 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %48, i64 0, i32 0, i64 %61
  %64 = trunc i32 %62 to i8
  %65 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %63, i64 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %48, i64 0, i32 0, i64 %61, i32 0, i32 2
  store i8 %64, i8* %66, align 2
  %67 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %63, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %48, i64 0, i32 0, i64 %61, i32 0, i32 1
  store i16 0, i16* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::NodeBase", %"class.v8::internal::NodeBase"* %65, i64 1
  %70 = bitcast %"class.v8::internal::NodeBase"* %69 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %48, i64 0, i32 0, i64 %61, i32 0, i32 3
  %72 = load i8, i8* %71, align 1
  %73 = and i8 %72, -8
  store i8 %73, i8* %71, align 1
  %74 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %48, i64 0, i32 0, i64 %61, i32 0, i32 4, i32 0
  %75 = bitcast %"class.v8::internal::GlobalHandles::Node"** %74 to i64*
  store i64 %60, i64* %75, align 8
  %76 = add nsw i64 %61, -1
  %77 = add nsw i32 %62, -1
  %78 = icmp eq i64 %61, 0
  %79 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %63 to i64
  br i1 %78, label %80, label %59

80:                                               ; preds = %59
  %81 = bitcast %"class.v8::internal::GlobalHandles::Node"** %5 to i8**
  store i8* %11, i8** %81, align 8
  br label %82

82:                                               ; preds = %80, %8
  %83 = phi i64* [ %9, %8 ], [ %57, %80 ]
  %84 = phi %"class.v8::internal::GlobalHandles::Node"* [ %6, %8 ], [ %12, %80 ]
  %85 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %84, i64 0, i32 0, i32 4, i32 0
  %86 = bitcast %"class.v8::internal::GlobalHandles::Node"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %83, align 8
  %88 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %84, i64 0, i32 0, i32 0
  store i64 %1, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %84, i64 0, i32 0, i32 3
  %90 = load i8, i8* %89, align 1
  %91 = and i8 %90, -8
  %92 = or i8 %91, 1
  store i8 %92, i8* %89, align 1
  %93 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %84, i64 0, i32 0, i32 4
  %94 = bitcast %union.anon.1087* %93 to i8**
  store i8* null, i8** %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %84, i64 0, i32 0, i32 2
  %96 = load i8, i8* %95, align 2
  %97 = zext i8 %96 to i64
  %98 = sub nsw i64 0, %97
  %99 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %84, i64 %98
  %100 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %99, i64 257, i32 0, i32 1
  %101 = bitcast i16* %100 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, 1
  store i32 %103, i32* %101, align 8
  %104 = icmp eq i32 %102, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %82
  %106 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %107 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %106, align 8
  %108 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %106 to %"class.v8::internal::GlobalHandles::Node"**
  store %"class.v8::internal::GlobalHandles::Node"* %99, %"class.v8::internal::GlobalHandles::Node"** %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %99, i64 256, i32 1
  %110 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %109 to %"class.v8::internal::GlobalHandles::NodeBlock"**
  store %"class.v8::internal::GlobalHandles::NodeBlock"* %107, %"class.v8::internal::GlobalHandles::NodeBlock"** %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %99, i64 257
  %112 = bitcast %"class.v8::internal::GlobalHandles::Node"* %111 to %"class.v8::internal::GlobalHandles::NodeBlock"**
  store %"class.v8::internal::GlobalHandles::NodeBlock"* null, %"class.v8::internal::GlobalHandles::NodeBlock"** %112, align 8
  %113 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %107, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %107, i64 0, i32 5
  %116 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %115 to %"class.v8::internal::GlobalHandles::Node"**
  store %"class.v8::internal::GlobalHandles::Node"* %99, %"class.v8::internal::GlobalHandles::Node"** %116, align 8
  br label %117

117:                                              ; preds = %114, %105, %82
  %118 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 0
  %119 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %119, i64 0, i32 0
  %121 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %121, i64 0, i32 14, i32 0
  %123 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %123, i64 0, i32 131, i32 1
  %125 = load i8, i8* %124, align 8, !range !6
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %123, i64 0, i32 131, i32 0, i32 2
  %129 = load i32*, i32** %128, align 8
  br label %134

130:                                              ; preds = %117
  store i8 1, i8* %124, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %123, i64 0, i32 131, i32 0
  %132 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %131) #12
  %133 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %123, i64 0, i32 131, i32 0, i32 2
  store i32* %132, i32** %133, align 8
  br label %134

134:                                              ; preds = %130, %127
  %135 = phi i32* [ %129, %127 ], [ %132, %130 ]
  %136 = icmp eq i32* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %135, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %134, %137
  %141 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 5
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  %144 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %84 to i64
  %145 = and i64 %1, 1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %231, label %147

147:                                              ; preds = %140
  %148 = and i64 %1, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %231, label %154

154:                                              ; preds = %147
  %155 = load i8, i8* %89, align 1
  %156 = and i8 %155, 8
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %231

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2
  %160 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %161 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %163 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %162, align 8
  %164 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %161, %163
  %165 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %163 to i64
  br i1 %164, label %171, label %166

166:                                              ; preds = %158
  %167 = bitcast %"class.v8::internal::GlobalHandles::Node"** %161 to i64*
  store i64 %144, i64* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %161, i64 1
  %169 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %168 to i64
  %170 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %160 to i64*
  store i64 %169, i64* %170, align 8
  br label %228

171:                                              ; preds = %158
  %172 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %161 to i64
  %173 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %160 to i64*
  %174 = bitcast %"class.std::__1::vector.1091"* %159 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %172, %175
  %177 = ashr exact i64 %176, 3
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 2305843009213693951
  br i1 %179, label %180, label %182

180:                                              ; preds = %171
  %181 = bitcast %"class.std::__1::vector.1091"* %159 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #14
  unreachable

182:                                              ; preds = %171
  %183 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %162 to i64*
  %184 = sub i64 %165, %175
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 1152921504606846975
  br i1 %186, label %187, label %195

187:                                              ; preds = %182
  %188 = ashr exact i64 %184, 2
  %189 = icmp ult i64 %188, %178
  %190 = select i1 %189, i64 %178, i64 %188
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %200, label %192

192:                                              ; preds = %187
  %193 = icmp ugt i64 %190, 2305843009213693951
  br i1 %193, label %194, label %195

194:                                              ; preds = %192
  tail call void @abort() #14
  unreachable

195:                                              ; preds = %192, %182
  %196 = phi i64 [ %190, %192 ], [ 2305843009213693951, %182 ]
  %197 = shl i64 %196, 3
  %198 = tail call i8* @_Znwm(i64 %197) #13
  %199 = bitcast i8* %198 to %"class.v8::internal::GlobalHandles::Node"**
  br label %200

200:                                              ; preds = %195, %187
  %201 = phi i64 [ %196, %195 ], [ 0, %187 ]
  %202 = phi %"class.v8::internal::GlobalHandles::Node"** [ %199, %195 ], [ null, %187 ]
  %203 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %202, i64 %177
  %204 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %202, i64 %201
  %205 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %204 to i64
  %206 = bitcast %"class.v8::internal::GlobalHandles::Node"** %203 to i64*
  store i64 %144, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %203, i64 1
  %208 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %207 to i64
  %209 = getelementptr inbounds %"class.std::__1::vector.1091", %"class.std::__1::vector.1091"* %159, i64 0, i32 0, i32 0
  %210 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %209, align 8
  %211 = load i64, i64* %173, align 8
  %212 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %210 to i64
  %213 = sub i64 %211, %212
  %214 = ashr exact i64 %213, 3
  %215 = sub nsw i64 0, %214
  %216 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %203, i64 %215
  %217 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %216 to i64
  %218 = icmp sgt i64 %213, 0
  br i1 %218, label %219, label %223

219:                                              ; preds = %200
  %220 = bitcast %"class.v8::internal::GlobalHandles::Node"** %216 to i8*
  %221 = bitcast %"class.v8::internal::GlobalHandles::Node"** %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 %213, i1 false) #12
  %222 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %209, align 8
  br label %223

223:                                              ; preds = %219, %200
  %224 = phi %"class.v8::internal::GlobalHandles::Node"** [ %210, %200 ], [ %222, %219 ]
  store i64 %217, i64* %174, align 8
  store i64 %208, i64* %173, align 8
  store i64 %205, i64* %183, align 8
  %225 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %224, null
  br i1 %225, label %228, label %226

226:                                              ; preds = %223
  %227 = bitcast %"class.v8::internal::GlobalHandles::Node"** %224 to i8*
  tail call void @_ZdlPv(i8* %227) #13
  br label %228

228:                                              ; preds = %166, %223, %226
  %229 = load i8, i8* %89, align 1
  %230 = or i8 %229, 8
  store i8 %230, i8* %89, align 1
  br label %231

231:                                              ; preds = %154, %147, %140, %228
  ret i64* %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13GlobalHandles6CreateEm(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %0, i64 %1)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13GlobalHandles12CreateTracedENS0_6ObjectEPmb(%"class.v8::internal::GlobalHandles"*, i64, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %5, align 8
  %7 = ptrtoint i64* %2 to i64
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %6, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = tail call i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() #12
  %13 = icmp ult i64 %12, %7
  br label %14

14:                                               ; preds = %4, %11
  %15 = phi i1 [ false, %4 ], [ %13, %11 ]
  %16 = tail call i64* @_ZN2v88internal13GlobalHandles12CreateTracedENS0_6ObjectEPmbb(%"class.v8::internal::GlobalHandles"* %0, i64 %1, i64* %2, i1 zeroext %3, i1 zeroext %15)
  ret i64* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13GlobalHandles12CreateTracedENS0_6ObjectEPmbb(%"class.v8::internal::GlobalHandles"*, i64, i64*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %4, label %6, label %12

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %7, align 8
  %9 = ptrtoint i64* %2 to i64
  %10 = tail call %"class.v8::internal::GlobalHandles::TracedNode"* @_ZN2v88internal13GlobalHandles22OnStackTracedNodeSpace7AcquireENS0_6ObjectEm(%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %8, i64 %1, i64 %9)
  %11 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %10 to i64
  br label %242

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14, i64 0, i32 3
  %16 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %15, align 8
  %17 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %15 to i64*
  br label %93

20:                                               ; preds = %12
  %21 = tail call i8* @_Znwm(i64 8240) #13
  %22 = bitcast i8* %21 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %23 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14, i64 0, i32 1
  %24 = bitcast %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = shufflevector <2 x i64> %25, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %27 = getelementptr inbounds i8, i8* %21, i64 8192
  %28 = bitcast i8* %27 to %"class.v8::internal::GlobalHandles::TracedNode"*
  br label %29

29:                                               ; preds = %29, %20
  %30 = phi %"class.v8::internal::GlobalHandles::TracedNode"* [ %22, %20 ], [ %55, %29 ]
  %31 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 0, i32 0, i32 3
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, -5
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 1, i32 0, i32 3
  %35 = load i8, i8* %34, align 1
  %36 = and i8 %35, -5
  store i8 %36, i8* %34, align 1
  %37 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 2, i32 0, i32 3
  %38 = load i8, i8* %37, align 1
  %39 = and i8 %38, -5
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 3, i32 0, i32 3
  %41 = load i8, i8* %40, align 1
  %42 = and i8 %41, -5
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 4, i32 0, i32 3
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, -5
  store i8 %45, i8* %43, align 1
  %46 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 5, i32 0, i32 3
  %47 = load i8, i8* %46, align 1
  %48 = and i8 %47, -5
  store i8 %48, i8* %46, align 1
  %49 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 6, i32 0, i32 3
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, -5
  store i8 %51, i8* %49, align 1
  %52 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 7, i32 0, i32 3
  %53 = load i8, i8* %52, align 1
  %54 = and i8 %53, -5
  store i8 %54, i8* %52, align 1
  %55 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %30, i64 8
  %56 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"* %55, %28
  br i1 %56, label %57, label %29

57:                                               ; preds = %29
  %58 = bitcast i8* %21 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"*
  %59 = bitcast i8* %27 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %59, align 8
  %60 = getelementptr inbounds i8, i8* %21, i64 8208
  %61 = bitcast i8* %60 to %"class.v8::internal::GlobalHandles::NodeSpace.1101"**
  store %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %61, align 8
  %62 = getelementptr inbounds i8, i8* %21, i64 8216
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 20, i1 false) #12
  %63 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %23 to i8**
  store i8* %21, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14, i64 0, i32 4
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  %67 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %15 to i64*
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %69, %57
  %70 = phi i64 [ %68, %57 ], [ %90, %69 ]
  %71 = phi i64 [ 255, %57 ], [ %87, %69 ]
  %72 = phi i32 [ 255, %57 ], [ %88, %69 ]
  %73 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %58, i64 0, i32 0, i64 %71
  %74 = trunc i32 %72 to i8
  %75 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %73, i64 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %58, i64 0, i32 0, i64 %71, i32 0, i32 2
  store i8 %74, i8* %76, align 2
  %77 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %73, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %58, i64 0, i32 0, i64 %71, i32 0, i32 1
  store i16 0, i16* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %58, i64 0, i32 0, i64 %71, i32 0, i32 3
  %80 = load i8, i8* %79, align 1
  %81 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %75, i64 1
  %82 = bitcast %"class.v8::internal::NodeBase.1103"* %81 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %82, align 8
  %83 = and i8 %80, -124
  %84 = or i8 %83, 40
  store i8 %84, i8* %79, align 1
  %85 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %58, i64 0, i32 0, i64 %71, i32 0, i32 4, i32 0
  %86 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %85 to i64*
  store i64 %70, i64* %86, align 8
  %87 = add nsw i64 %71, -1
  %88 = add nsw i32 %72, -1
  %89 = icmp eq i64 %71, 0
  %90 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %73 to i64
  br i1 %89, label %91, label %69

91:                                               ; preds = %69
  %92 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %15 to i8**
  store i8* %21, i8** %92, align 8
  br label %93

93:                                               ; preds = %91, %18
  %94 = phi i64* [ %19, %18 ], [ %67, %91 ]
  %95 = phi %"class.v8::internal::GlobalHandles::TracedNode"* [ %16, %18 ], [ %22, %91 ]
  %96 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %95, i64 0, i32 0, i32 4, i32 0
  %97 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  store i64 %98, i64* %94, align 8
  %99 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %95, i64 0, i32 0, i32 0
  store i64 %1, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %95, i64 0, i32 0, i32 3
  %101 = load i8, i8* %100, align 1
  %102 = and i8 %101, -4
  %103 = or i8 %102, 1
  store i8 %103, i8* %100, align 1
  %104 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %95, i64 0, i32 0, i32 4
  %105 = bitcast %union.anon.1104* %104 to i8**
  store i8* null, i8** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %95, i64 0, i32 0, i32 2
  %107 = load i8, i8* %106, align 2
  %108 = zext i8 %107 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %95, i64 %109
  %111 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %110, i64 257, i32 0, i32 1
  %112 = bitcast i16* %111 to i32*
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 8
  %115 = icmp eq i32 %113, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %93
  %117 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14, i64 0, i32 2
  %118 = load %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %117, align 8
  %119 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %117 to %"class.v8::internal::GlobalHandles::TracedNode"**
  store %"class.v8::internal::GlobalHandles::TracedNode"* %110, %"class.v8::internal::GlobalHandles::TracedNode"** %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %110, i64 256, i32 1
  %121 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %120 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"**
  store %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %118, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %110, i64 257
  %123 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"* %122 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"**
  store %"class.v8::internal::GlobalHandles::NodeBlock.1102"* null, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %123, align 8
  %124 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %118, null
  br i1 %124, label %128, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %118, i64 0, i32 5
  %127 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %126 to %"class.v8::internal::GlobalHandles::TracedNode"**
  store %"class.v8::internal::GlobalHandles::TracedNode"* %110, %"class.v8::internal::GlobalHandles::TracedNode"** %127, align 8
  br label %128

128:                                              ; preds = %125, %116, %93
  %129 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14, i64 0, i32 0
  %130 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %130, i64 0, i32 0
  %132 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 14, i32 0
  %134 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %134, i64 0, i32 131, i32 1
  %136 = load i8, i8* %135, align 8, !range !6
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %134, i64 0, i32 131, i32 0, i32 2
  %140 = load i32*, i32** %139, align 8
  br label %145

141:                                              ; preds = %128
  store i8 1, i8* %135, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %134, i64 0, i32 131, i32 0
  %143 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %142) #12
  %144 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %134, i64 0, i32 131, i32 0, i32 2
  store i32* %143, i32** %144, align 8
  br label %145

145:                                              ; preds = %141, %138
  %146 = phi i32* [ %140, %138 ], [ %143, %141 ]
  %147 = icmp eq i32* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %145
  %149 = load i32, i32* %146, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %146, align 4
  br label %151

151:                                              ; preds = %145, %148
  %152 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %14, i64 0, i32 5
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %152, align 8
  %155 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %95 to i64
  %156 = and i64 %1, 1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %242, label %158

158:                                              ; preds = %151
  %159 = and i64 %1, -262144
  %160 = or i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 24
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %242, label %165

165:                                              ; preds = %158
  %166 = load i8, i8* %100, align 1
  %167 = and i8 %166, 4
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %242

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4
  %171 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 1
  %172 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %174 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %173, align 8
  %175 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %172, %174
  %176 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %174 to i64
  br i1 %175, label %182, label %177

177:                                              ; preds = %169
  %178 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %172 to i64*
  store i64 %155, i64* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %172, i64 1
  %180 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %179 to i64
  %181 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %171 to i64*
  store i64 %180, i64* %181, align 8
  br label %239

182:                                              ; preds = %169
  %183 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %172 to i64
  %184 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %171 to i64*
  %185 = bitcast %"class.std::__1::vector.1108"* %170 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %183, %186
  %188 = ashr exact i64 %187, 3
  %189 = add nsw i64 %188, 1
  %190 = icmp ugt i64 %189, 2305843009213693951
  br i1 %190, label %191, label %193

191:                                              ; preds = %182
  %192 = bitcast %"class.std::__1::vector.1108"* %170 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %192) #14
  unreachable

193:                                              ; preds = %182
  %194 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %173 to i64*
  %195 = sub i64 %176, %186
  %196 = ashr exact i64 %195, 3
  %197 = icmp ult i64 %196, 1152921504606846975
  br i1 %197, label %198, label %206

198:                                              ; preds = %193
  %199 = ashr exact i64 %195, 2
  %200 = icmp ult i64 %199, %189
  %201 = select i1 %200, i64 %189, i64 %199
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %211, label %203

203:                                              ; preds = %198
  %204 = icmp ugt i64 %201, 2305843009213693951
  br i1 %204, label %205, label %206

205:                                              ; preds = %203
  tail call void @abort() #14
  unreachable

206:                                              ; preds = %203, %193
  %207 = phi i64 [ %201, %203 ], [ 2305843009213693951, %193 ]
  %208 = shl i64 %207, 3
  %209 = tail call i8* @_Znwm(i64 %208) #13
  %210 = bitcast i8* %209 to %"class.v8::internal::GlobalHandles::TracedNode"**
  br label %211

211:                                              ; preds = %206, %198
  %212 = phi i64 [ %207, %206 ], [ 0, %198 ]
  %213 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %210, %206 ], [ null, %198 ]
  %214 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %213, i64 %188
  %215 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %213, i64 %212
  %216 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %215 to i64
  %217 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %214 to i64*
  store i64 %155, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %214, i64 1
  %219 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %218 to i64
  %220 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %170, i64 0, i32 0, i32 0
  %221 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %220, align 8
  %222 = load i64, i64* %184, align 8
  %223 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %221 to i64
  %224 = sub i64 %222, %223
  %225 = ashr exact i64 %224, 3
  %226 = sub nsw i64 0, %225
  %227 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %214, i64 %226
  %228 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %227 to i64
  %229 = icmp sgt i64 %224, 0
  br i1 %229, label %230, label %234

230:                                              ; preds = %211
  %231 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %227 to i8*
  %232 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %231, i8* align 8 %232, i64 %224, i1 false) #12
  %233 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %220, align 8
  br label %234

234:                                              ; preds = %230, %211
  %235 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %221, %211 ], [ %233, %230 ]
  store i64 %228, i64* %185, align 8
  store i64 %219, i64* %184, align 8
  store i64 %216, i64* %194, align 8
  %236 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %234
  %238 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %235 to i8*
  tail call void @_ZdlPv(i8* %238) #13
  br label %239

239:                                              ; preds = %177, %234, %237
  %240 = load i8, i8* %100, align 1
  %241 = or i8 %240, 4
  store i8 %241, i8* %100, align 1
  br label %242

242:                                              ; preds = %165, %158, %151, %239, %6
  %243 = phi i64 [ %11, %6 ], [ %155, %165 ], [ %155, %239 ], [ %155, %158 ], [ %155, %151 ]
  %244 = inttoptr i64 %243 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %245 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %244, i64 0, i32 0, i32 3
  %246 = load i8, i8* %245, align 1
  %247 = and i8 %246, -17
  %248 = zext i1 %3 to i8
  %249 = shl nuw nsw i8 %248, 4
  %250 = or i8 %247, %249
  store i8 %250, i8* %245, align 1
  %251 = inttoptr i64 %243 to %"class.v8::internal::NodeBase.1103"*
  %252 = bitcast i64* %2 to i8*
  %253 = select i1 %3, i8* %252, i8* null
  %254 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %251, i64 0, i32 4
  %255 = bitcast %union.anon.1104* %254 to i8**
  store i8* %253, i8** %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %251, i64 0, i32 0
  ret i64* %256
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13GlobalHandles12CreateTracedEmPmb(%"class.v8::internal::GlobalHandles"*, i64, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %5, align 8
  %7 = ptrtoint i64* %2 to i64
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %6, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = tail call i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() #12
  %13 = icmp ult i64 %12, %7
  br label %14

14:                                               ; preds = %4, %11
  %15 = phi i1 [ false, %4 ], [ %13, %11 ]
  %16 = tail call i64* @_ZN2v88internal13GlobalHandles12CreateTracedENS0_6ObjectEPmbb(%"class.v8::internal::GlobalHandles"* %0, i64 %1, i64* %2, i1 zeroext %3, i1 zeroext %15) #12
  ret i64* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13GlobalHandles10CopyGlobalEPm(i64* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast i64* %0 to %"class.v8::internal::GlobalHandles::Node"*
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %2, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 2
  %5 = zext i8 %4 to i64
  %6 = sub nsw i64 0, %5
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %2, i64 %6
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %7, i64 256, i32 0, i32 1
  %9 = bitcast i16* %8 to %"class.v8::internal::GlobalHandles"**
  %10 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %10, i64 %11) #12
  ret i64* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles16CopyTracedGlobalEPKPKmPPm(i64** nocapture readonly, i64**) local_unnamed_addr #0 align 2 {
  %3 = bitcast i64** %0 to %"class.v8::internal::GlobalHandles::TracedNode"**
  %4 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %4, i64 0, i32 1
  %6 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %5, align 8
  %7 = icmp eq void (%"class.v8::WeakCallbackInfo"*)* %6, null
  br i1 %7, label %9, label %8, !prof !5

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0)) #14
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %4, i64 0, i32 0, i32 3
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 64
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %4, i64 1
  %16 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"* %15 to %"class.v8::internal::GlobalHandles"**
  br label %25

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %4, i64 0, i32 0, i32 2
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i64
  %21 = sub nsw i64 0, %20
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %4, i64 %21
  %23 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %22, i64 256, i32 0, i32 1
  %24 = bitcast i16* %23 to %"class.v8::internal::GlobalHandles"**
  br label %25

25:                                               ; preds = %14, %17
  %26 = phi %"class.v8::internal::GlobalHandles"** [ %16, %14 ], [ %24, %17 ]
  %27 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %4, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i64** %1 to i64*
  %31 = and i8 %11, 16
  %32 = icmp ne i8 %31, 0
  %33 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %27, i64 0, i32 5, i32 0, i32 0, i32 0
  %34 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %33, align 8
  %35 = ptrtoint i64** %1 to i64
  %36 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %34, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %42, label %39

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() #12
  %41 = icmp ult i64 %40, %35
  br label %42

42:                                               ; preds = %25, %39
  %43 = phi i1 [ false, %25 ], [ %41, %39 ]
  %44 = tail call i64* @_ZN2v88internal13GlobalHandles12CreateTracedENS0_6ObjectEPmbb(%"class.v8::internal::GlobalHandles"* %27, i64 %29, i64* %30, i1 zeroext %32, i1 zeroext %43) #12
  %45 = ptrtoint i64* %44 to i64
  store atomic i64 %45, i64* %30 monotonic, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::GlobalHandles"* @_ZN2v88internal13GlobalHandles4FromEPKNS1_10TracedNodeE(%"class.v8::internal::GlobalHandles::TracedNode"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 64
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 1
  %8 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"* %7 to %"class.v8::internal::GlobalHandles"**
  br label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 2
  %11 = load i8, i8* %10, align 2
  %12 = zext i8 %11 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %14, i64 256, i32 0, i32 1
  %16 = bitcast i16* %15 to %"class.v8::internal::GlobalHandles"**
  br label %17

17:                                               ; preds = %9, %6
  %18 = phi %"class.v8::internal::GlobalHandles"** [ %8, %6 ], [ %16, %9 ]
  %19 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %18, align 8
  ret %"class.v8::internal::GlobalHandles"* %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles10MoveGlobalEPPmS3_(i64** nocapture readonly, i64**) local_unnamed_addr #7 align 2 {
  %3 = bitcast i64** %0 to %"class.v8::internal::GlobalHandles::Node"**
  %4 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 55
  %8 = icmp eq i8 %7, 50
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %4, i64 0, i32 0, i32 4
  %11 = bitcast %union.anon.1087* %10 to i64***
  store i64** %1, i64*** %11, align 8
  br label %12

12:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles16MoveTracedGlobalEPPmS3_(i64** nocapture, i64**) local_unnamed_addr #0 align 2 {
  %3 = load i64*, i64** %0, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %5, label %28

5:                                                ; preds = %2
  %6 = load i64*, i64** %1, align 8
  %7 = icmp eq i64* %6, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %5
  %9 = bitcast i64* %6 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %9, i64 0, i32 0, i32 3
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 64
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %8
  %15 = bitcast i64* %6 to %"class.v8::internal::NodeBase.1103"*
  store i64 1995093329451155167, i64* %6, align 8
  %16 = getelementptr inbounds i64, i64* %6, i64 1
  %17 = bitcast i64* %16 to i16*
  store i16 0, i16* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %15, i64 0, i32 3
  %19 = getelementptr inbounds i64, i64* %6, i64 3
  %20 = bitcast i64* %19 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %20, align 8
  %21 = and i8 %11, -124
  %22 = or i8 %21, 40
  store i8 %22, i8* %18, align 1
  %23 = getelementptr inbounds i64, i64* %6, i64 2
  %24 = bitcast i64* %23 to %"class.v8::internal::GlobalHandles::TracedNode"**
  store %"class.v8::internal::GlobalHandles::TracedNode"* null, %"class.v8::internal::GlobalHandles::TracedNode"** %24, align 8
  br label %26

25:                                               ; preds = %8
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"* nonnull %9) #12
  br label %26

26:                                               ; preds = %5, %14, %25
  %27 = bitcast i64** %1 to i64*
  br label %247

28:                                               ; preds = %2
  %29 = bitcast i64* %3 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %30 = bitcast i64** %1 to %"class.v8::internal::GlobalHandles::TracedNode"**
  %31 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %30, align 8
  %32 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %31 to i64
  %33 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %29, i64 0, i32 0, i32 3
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 64
  %36 = icmp ne i8 %35, 0
  %37 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"* %31, null
  br i1 %37, label %38, label %63

38:                                               ; preds = %28
  %39 = icmp eq i8 %35, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds i64, i64* %3, i64 4
  %42 = bitcast i64* %41 to %"class.v8::internal::GlobalHandles"**
  br label %51

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %29, i64 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 2
  %46 = zext i8 %45 to i64
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %29, i64 %47
  %49 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %48, i64 256, i32 0, i32 1
  %50 = bitcast i16* %49 to %"class.v8::internal::GlobalHandles"**
  br label %51

51:                                               ; preds = %40, %43
  %52 = phi %"class.v8::internal::GlobalHandles"** [ %42, %40 ], [ %50, %43 ]
  %53 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %53, i64 0, i32 5, i32 0, i32 0, i32 0
  %55 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %54, align 8
  %56 = ptrtoint i64** %1 to i64
  %57 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %55, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %58, %56
  br i1 %59, label %68, label %60

60:                                               ; preds = %51
  %61 = tail call i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() #12
  %62 = icmp ult i64 %61, %56
  br label %68

63:                                               ; preds = %28
  %64 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %31, i64 0, i32 0, i32 3
  %65 = load i8, i8* %64, align 1
  %66 = and i8 %65, 64
  %67 = icmp ne i8 %66, 0
  br label %68

68:                                               ; preds = %60, %51, %63
  %69 = phi i1 [ %67, %63 ], [ false, %51 ], [ %62, %60 ]
  %70 = phi %"class.v8::internal::GlobalHandles"* [ null, %63 ], [ %53, %51 ], [ %53, %60 ]
  %71 = getelementptr inbounds i64, i64* %3, i64 3
  %72 = bitcast i64* %71 to void (%"class.v8::WeakCallbackInfo"*)**
  %73 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %72, align 8
  %74 = icmp eq void (%"class.v8::WeakCallbackInfo"*)* %73, null
  br i1 %74, label %76, label %75, !prof !5

75:                                               ; preds = %68
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

76:                                               ; preds = %68
  %77 = or i1 %36, %69
  br i1 %77, label %78, label %216

78:                                               ; preds = %76
  %79 = load i64, i64* %3, align 8
  br i1 %37, label %80, label %87

80:                                               ; preds = %78
  %81 = bitcast i64** %1 to i64*
  %82 = load i8, i8* %33, align 1
  %83 = and i8 %82, 16
  %84 = icmp ne i8 %83, 0
  %85 = tail call i64* @_ZN2v88internal13GlobalHandles12CreateTracedENS0_6ObjectEPmbb(%"class.v8::internal::GlobalHandles"* %70, i64 %79, i64* %81, i1 zeroext %84, i1 zeroext %69)
  %86 = ptrtoint i64* %85 to i64
  store atomic i64 %86, i64* %81 monotonic, align 8
  br label %193

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %31, i64 0, i32 0, i32 0
  store i64 %79, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %31, i64 0, i32 0, i32 3
  %90 = load i8, i8* %89, align 1
  %91 = and i8 %90, 68
  %92 = icmp ne i8 %91, 0
  %93 = and i64 %79, 1
  %94 = icmp eq i64 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %193, label %96

96:                                               ; preds = %87
  %97 = and i64 %79, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 24
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %193, label %103

103:                                              ; preds = %96
  %104 = load i8, i8* %33, align 1
  %105 = and i8 %104, 64
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds i64, i64* %3, i64 4
  %109 = bitcast i64* %108 to %"class.v8::internal::GlobalHandles"**
  br label %118

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %29, i64 0, i32 0, i32 2
  %112 = load i8, i8* %111, align 2
  %113 = zext i8 %112 to i64
  %114 = sub nsw i64 0, %113
  %115 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %29, i64 %114
  %116 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %115, i64 256, i32 0, i32 1
  %117 = bitcast i16* %116 to %"class.v8::internal::GlobalHandles"**
  br label %118

118:                                              ; preds = %107, %110
  %119 = phi %"class.v8::internal::GlobalHandles"** [ %109, %107 ], [ %117, %110 ]
  %120 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %120, i64 0, i32 4
  %122 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %120, i64 0, i32 4, i32 0, i32 1
  %123 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %120, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %125 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %124, align 8
  %126 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %123, %125
  %127 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %125 to i64
  br i1 %126, label %133, label %128

128:                                              ; preds = %118
  %129 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %123 to i64*
  store i64 %32, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %123, i64 1
  %131 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %130 to i64
  %132 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %122 to i64*
  store i64 %131, i64* %132, align 8
  br label %190

133:                                              ; preds = %118
  %134 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %123 to i64
  %135 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %122 to i64*
  %136 = bitcast %"class.std::__1::vector.1108"* %121 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %134, %137
  %139 = ashr exact i64 %138, 3
  %140 = add nsw i64 %139, 1
  %141 = icmp ugt i64 %140, 2305843009213693951
  br i1 %141, label %142, label %144

142:                                              ; preds = %133
  %143 = bitcast %"class.std::__1::vector.1108"* %121 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #14
  unreachable

144:                                              ; preds = %133
  %145 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %124 to i64*
  %146 = sub i64 %127, %137
  %147 = ashr exact i64 %146, 3
  %148 = icmp ult i64 %147, 1152921504606846975
  br i1 %148, label %149, label %157

149:                                              ; preds = %144
  %150 = ashr exact i64 %146, 2
  %151 = icmp ult i64 %150, %140
  %152 = select i1 %151, i64 %140, i64 %150
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %149
  %155 = icmp ugt i64 %152, 2305843009213693951
  br i1 %155, label %156, label %157

156:                                              ; preds = %154
  tail call void @abort() #14
  unreachable

157:                                              ; preds = %154, %144
  %158 = phi i64 [ %152, %154 ], [ 2305843009213693951, %144 ]
  %159 = shl i64 %158, 3
  %160 = tail call i8* @_Znwm(i64 %159) #13
  %161 = bitcast i8* %160 to %"class.v8::internal::GlobalHandles::TracedNode"**
  br label %162

162:                                              ; preds = %157, %149
  %163 = phi i64 [ %158, %157 ], [ 0, %149 ]
  %164 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %161, %157 ], [ null, %149 ]
  %165 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %164, i64 %139
  %166 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %164, i64 %163
  %167 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %166 to i64
  %168 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %165 to i64*
  store i64 %32, i64* %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %165, i64 1
  %170 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %169 to i64
  %171 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %121, i64 0, i32 0, i32 0
  %172 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %171, align 8
  %173 = load i64, i64* %135, align 8
  %174 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %172 to i64
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = sub nsw i64 0, %176
  %178 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %165, i64 %177
  %179 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %178 to i64
  %180 = icmp sgt i64 %175, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %162
  %182 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %178 to i8*
  %183 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 %175, i1 false) #12
  %184 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %171, align 8
  br label %185

185:                                              ; preds = %181, %162
  %186 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %172, %162 ], [ %184, %181 ]
  store i64 %179, i64* %136, align 8
  store i64 %170, i64* %135, align 8
  store i64 %167, i64* %145, align 8
  %187 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %186 to i8*
  tail call void @_ZdlPv(i8* %189) #13
  br label %190

190:                                              ; preds = %128, %185, %188
  %191 = load i8, i8* %89, align 1
  %192 = or i8 %191, 4
  store i8 %192, i8* %89, align 1
  br label %193

193:                                              ; preds = %87, %96, %190, %80
  %194 = load i64*, i64** %0, align 8
  %195 = icmp eq i64* %194, null
  br i1 %195, label %214, label %196

196:                                              ; preds = %193
  %197 = bitcast i64* %194 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %198 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %197, i64 0, i32 0, i32 3
  %199 = load i8, i8* %198, align 1
  %200 = and i8 %199, 64
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %213, label %202

202:                                              ; preds = %196
  %203 = bitcast i64* %194 to %"class.v8::internal::NodeBase.1103"*
  store i64 1995093329451155167, i64* %194, align 8
  %204 = getelementptr inbounds i64, i64* %194, i64 1
  %205 = bitcast i64* %204 to i16*
  store i16 0, i16* %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %203, i64 0, i32 3
  %207 = getelementptr inbounds i64, i64* %194, i64 3
  %208 = bitcast i64* %207 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %208, align 8
  %209 = and i8 %199, -124
  %210 = or i8 %209, 40
  store i8 %210, i8* %206, align 1
  %211 = getelementptr inbounds i64, i64* %194, i64 2
  %212 = bitcast i64* %211 to %"class.v8::internal::GlobalHandles::TracedNode"**
  store %"class.v8::internal::GlobalHandles::TracedNode"* null, %"class.v8::internal::GlobalHandles::TracedNode"** %212, align 8
  br label %214

213:                                              ; preds = %196
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"* nonnull %197) #12
  br label %214

214:                                              ; preds = %193, %202, %213
  %215 = bitcast i64** %0 to i64*
  br label %247

216:                                              ; preds = %76
  %217 = load i64*, i64** %1, align 8
  %218 = icmp eq i64* %217, null
  br i1 %218, label %237, label %219

219:                                              ; preds = %216
  %220 = bitcast i64* %217 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %221 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %220, i64 0, i32 0, i32 3
  %222 = load i8, i8* %221, align 1
  %223 = and i8 %222, 64
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %236, label %225

225:                                              ; preds = %219
  %226 = bitcast i64* %217 to %"class.v8::internal::NodeBase.1103"*
  store i64 1995093329451155167, i64* %217, align 8
  %227 = getelementptr inbounds i64, i64* %217, i64 1
  %228 = bitcast i64* %227 to i16*
  store i16 0, i16* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %226, i64 0, i32 3
  %230 = getelementptr inbounds i64, i64* %217, i64 3
  %231 = bitcast i64* %230 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %231, align 8
  %232 = and i8 %222, -124
  %233 = or i8 %232, 40
  store i8 %233, i8* %229, align 1
  %234 = getelementptr inbounds i64, i64* %217, i64 2
  %235 = bitcast i64* %234 to %"class.v8::internal::GlobalHandles::TracedNode"**
  store %"class.v8::internal::GlobalHandles::TracedNode"* null, %"class.v8::internal::GlobalHandles::TracedNode"** %235, align 8
  br label %237

236:                                              ; preds = %219
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"* nonnull %220) #12
  br label %237

237:                                              ; preds = %216, %225, %236
  %238 = bitcast i64** %0 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast i64** %1 to i64*
  store atomic i64 %239, i64* %240 monotonic, align 8
  %241 = load i8, i8* %33, align 1
  %242 = and i8 %241, 16
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds i64, i64* %3, i64 2
  %246 = bitcast i64* %245 to i64***
  store i64** %1, i64*** %246, align 8
  br label %247

247:                                              ; preds = %244, %237, %214, %26
  %248 = phi i64* [ %215, %214 ], [ %27, %26 ], [ %238, %237 ], [ %238, %244 ]
  store atomic i64 0, i64* %248 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles13DestroyTracedEPm(i64*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i64* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = bitcast i64* %0 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 64
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = bitcast i64* %0 to %"class.v8::internal::NodeBase.1103"*
  store i64 1995093329451155167, i64* %0, align 8
  %11 = getelementptr inbounds i64, i64* %0, i64 1
  %12 = bitcast i64* %11 to i16*
  store i16 0, i16* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %10, i64 0, i32 3
  %14 = getelementptr inbounds i64, i64* %0, i64 3
  %15 = bitcast i64* %14 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %15, align 8
  %16 = and i8 %6, -124
  %17 = or i8 %16, 40
  store i8 %17, i8* %13, align 1
  %18 = getelementptr inbounds i64, i64* %0, i64 2
  %19 = bitcast i64* %18 to %"class.v8::internal::GlobalHandles::TracedNode"**
  store %"class.v8::internal::GlobalHandles::TracedNode"* null, %"class.v8::internal::GlobalHandles::TracedNode"** %19, align 8
  br label %21

20:                                               ; preds = %3
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"* nonnull %4)
  br label %21

21:                                               ; preds = %9, %20, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles10MarkTracedEPm(i64* nocapture) local_unnamed_addr #7 align 2 {
  %2 = bitcast i64* %0 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %2, i64 0, i32 0, i32 3
  %4 = load i8, i8* %3, align 1
  %5 = or i8 %4, 32
  store i8 %5, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i64* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast i64* %0 to %"class.v8::internal::GlobalHandles::Node"*
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::Node"* nonnull %4)
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::Node"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 2
  %4 = zext i8 %3 to i64
  %5 = sub nsw i64 0, %4
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 %5
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %6, i64 256, i32 0, i32 4
  %8 = bitcast %union.anon.1087* %7 to %"class.v8::internal::GlobalHandles::NodeSpace"**
  %9 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %9, i64 0, i32 3
  %12 = bitcast %"class.v8::internal::GlobalHandles::Node"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 1
  store i16 0, i16* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::NodeBase", %"class.v8::internal::NodeBase"* %10, i64 1
  %17 = bitcast %"class.v8::internal::NodeBase"* %16 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 3
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, -8
  store i8 %20, i8* %18, align 1
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 4, i32 0
  %22 = bitcast %"class.v8::internal::GlobalHandles::Node"** %21 to i64*
  store i64 %13, i64* %22, align 8
  store %"class.v8::internal::GlobalHandles::Node"* %0, %"class.v8::internal::GlobalHandles::Node"** %11, align 8
  %23 = load i8, i8* %2, align 2
  %24 = zext i8 %23 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 %25
  %27 = bitcast %"class.v8::internal::GlobalHandles::Node"* %26 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %28 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %26, i64 257, i32 0, i32 1
  %29 = bitcast i16* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %62

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %9, i64 0, i32 2
  %35 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %26, i64 256, i32 1
  %36 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %35 to %"class.v8::internal::GlobalHandles::NodeBlock"**
  %37 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %36, align 8
  %38 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %26, i64 257
  %41 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %40, i64 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %37, i64 0, i32 5
  %44 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %43 to i64*
  store i64 %42, i64* %44, align 8
  br label %45

45:                                               ; preds = %39, %33
  %46 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %26, i64 257
  %47 = bitcast %"class.v8::internal::GlobalHandles::Node"* %46 to %"class.v8::internal::GlobalHandles::NodeBlock"**
  %48 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %47, align 8
  %49 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %35 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %48, i64 0, i32 4
  %54 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %53 to i64*
  store i64 %52, i64* %54, align 8
  br label %55

55:                                               ; preds = %50, %45
  %56 = load %"class.v8::internal::GlobalHandles::NodeBlock"*, %"class.v8::internal::GlobalHandles::NodeBlock"** %34, align 8
  %57 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock"* %56, %27
  br i1 %57, label %58, label %62

58:                                               ; preds = %55
  %59 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %35 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %34 to i64*
  store i64 %60, i64* %61, align 8
  br label %62

62:                                               ; preds = %58, %55, %1
  %63 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %9, i64 0, i32 0
  %64 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %64, i64 0, i32 0
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 14, i32 0
  %68 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 131, i32 1
  %70 = load i8, i8* %69, align 8, !range !6
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 131, i32 0, i32 2
  %74 = load i32*, i32** %73, align 8
  br label %79

75:                                               ; preds = %62
  store i8 1, i8* %69, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 131, i32 0
  %77 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %76) #12
  %78 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %68, i64 0, i32 131, i32 0, i32 2
  store i32* %77, i32** %78, align 8
  br label %79

79:                                               ; preds = %75, %72
  %80 = phi i32* [ %74, %72 ], [ %77, %75 ]
  %81 = icmp eq i32* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = load i32, i32* %80, align 4
  %84 = add nsw i32 %83, -1
  store i32 %84, i32* %80, align 4
  br label %85

85:                                               ; preds = %79, %82
  %86 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %9, i64 0, i32 5
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  store i64 %88, i64* %86, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 2
  %4 = zext i8 %3 to i64
  %5 = sub nsw i64 0, %4
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 %5
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %6, i64 256, i32 0, i32 4
  %8 = bitcast %union.anon.1104* %7 to %"class.v8::internal::GlobalHandles::NodeSpace.1101"**
  %9 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %9, i64 0, i32 3
  %12 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 0
  store i64 1995093329451155167, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 1
  store i16 0, i16* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 3
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds %"class.v8::internal::NodeBase.1103", %"class.v8::internal::NodeBase.1103"* %10, i64 1
  %19 = bitcast %"class.v8::internal::NodeBase.1103"* %18 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %19, align 8
  %20 = and i8 %17, -124
  %21 = or i8 %20, 40
  store i8 %21, i8* %16, align 1
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 4, i32 0
  %23 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %22 to i64*
  store i64 %13, i64* %23, align 8
  store %"class.v8::internal::GlobalHandles::TracedNode"* %0, %"class.v8::internal::GlobalHandles::TracedNode"** %11, align 8
  %24 = load i8, i8* %2, align 2
  %25 = zext i8 %24 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 %26
  %28 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"* %27 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"*
  %29 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %27, i64 257, i32 0, i32 1
  %30 = bitcast i16* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %63

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %9, i64 0, i32 2
  %36 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %27, i64 256, i32 1
  %37 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %36 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"**
  %38 = load %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %37, align 8
  %39 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %27, i64 257
  %42 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %41, i64 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %38, i64 0, i32 5
  %45 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %44 to i64*
  store i64 %43, i64* %45, align 8
  br label %46

46:                                               ; preds = %40, %34
  %47 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %27, i64 257
  %48 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"* %47 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"**
  %49 = load %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %48, align 8
  %50 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %36 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %49, i64 0, i32 4
  %55 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %54 to i64*
  store i64 %53, i64* %55, align 8
  br label %56

56:                                               ; preds = %51, %46
  %57 = load %"class.v8::internal::GlobalHandles::NodeBlock.1102"*, %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %35, align 8
  %58 = icmp eq %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %57, %28
  br i1 %58, label %59, label %63

59:                                               ; preds = %56
  %60 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %36 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %35 to i64*
  store i64 %61, i64* %62, align 8
  br label %63

63:                                               ; preds = %59, %56, %1
  %64 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %9, i64 0, i32 0
  %65 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %65, i64 0, i32 0
  %67 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 14, i32 0
  %69 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %69, i64 0, i32 131, i32 1
  %71 = load i8, i8* %70, align 8, !range !6
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %69, i64 0, i32 131, i32 0, i32 2
  %75 = load i32*, i32** %74, align 8
  br label %80

76:                                               ; preds = %63
  store i8 1, i8* %70, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %69, i64 0, i32 131, i32 0
  %78 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %77) #12
  %79 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %69, i64 0, i32 131, i32 0, i32 2
  store i32* %78, i32** %79, align 8
  br label %80

80:                                               ; preds = %76, %73
  %81 = phi i32* [ %75, %73 ], [ %78, %76 ]
  %82 = icmp eq i32* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = load i32, i32* %81, align 4
  %85 = add nsw i32 %84, -1
  store i32 %85, i32* %81, align 4
  br label %86

86:                                               ; preds = %80, %83
  %87 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %9, i64 0, i32 5
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal13GlobalHandles32SetFinalizationCallbackForTracedEPmPvPFvRKNS_16WeakCallbackInfoIvEEE(i64* nocapture, i8*, void (%"class.v8::WeakCallbackInfo"*)*) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds i64, i64* %0, i64 2
  %5 = bitcast i64* %4 to i8**
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds i64, i64* %0, i64 3
  %7 = bitcast i64* %6 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* %2, void (%"class.v8::WeakCallbackInfo"*)** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* nocapture, i8*, void (%"class.v8::WeakCallbackInfo"*)*, i32) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = icmp eq i64 %5, 1995093329451155167
  br i1 %6, label %7, label %8, !prof !7

7:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %4
  %9 = bitcast i64* %0 to %"class.v8::internal::GlobalHandles::Node"*
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %9, i64 0, i32 0, i32 3
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, -8
  %13 = or i8 %12, 2
  store i8 %13, i8* %10, align 1
  switch i32 %3, label %24 [
    i32 0, label %14
    i32 1, label %17
    i32 2, label %20
  ]

14:                                               ; preds = %8
  %15 = and i8 %13, -54
  %16 = or i8 %15, 16
  br label %22

17:                                               ; preds = %8
  %18 = and i8 %13, -54
  %19 = or i8 %18, 32
  br label %22

20:                                               ; preds = %8
  %21 = and i8 %13, -54
  br label %22

22:                                               ; preds = %20, %17, %14
  %23 = phi i8 [ %16, %14 ], [ %19, %17 ], [ %21, %20 ]
  store i8 %23, i8* %10, align 1
  br label %24

24:                                               ; preds = %22, %8
  %25 = getelementptr inbounds i64, i64* %0, i64 2
  %26 = bitcast i64* %25 to i8**
  store i8* %1, i8** %26, align 8
  %27 = getelementptr inbounds i64, i64* %0, i64 3
  %28 = bitcast i64* %27 to void (%"class.v8::WeakCallbackInfo"*)**
  store void (%"class.v8::WeakCallbackInfo"*)* %2, void (%"class.v8::WeakCallbackInfo"*)** %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles8MakeWeakEPPm(i64**) local_unnamed_addr #0 align 2 {
  %2 = bitcast i64** %0 to %"class.v8::internal::GlobalHandles::Node"**
  %3 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %3, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 1995093329451155167
  br i1 %6, label %7, label %8, !prof !7

7:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %3, i64 0, i32 0, i32 3
  %10 = load i8, i8* %9, align 1
  %11 = and i8 %10, -56
  %12 = or i8 %11, 50
  store i8 %12, i8* %9, align 1
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %3, i64 0, i32 0, i32 4
  %14 = bitcast %union.anon.1087* %13 to i64***
  store i64** %0, i64*** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %3, i64 0, i32 1
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN2v88internal13GlobalHandles13ClearWeaknessEPm(i64* nocapture) local_unnamed_addr #7 align 2 {
  %2 = bitcast i64* %0 to %"class.v8::internal::GlobalHandles::Node"*
  %3 = getelementptr inbounds i64, i64* %0, i64 2
  %4 = bitcast i64* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %2, i64 0, i32 0, i32 3
  %7 = load i8, i8* %6, align 1
  %8 = and i8 %7, -8
  %9 = or i8 %8, 1
  store i8 %9, i8* %6, align 1
  store i8* null, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal13GlobalHandles22AnnotateStrongRetainerEPmPKc(i64* nocapture, i8*) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 2
  %4 = bitcast i64* %3 to i8**
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13GlobalHandles6IsWeakEPm(i64* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast i64* %0 to %"class.v8::internal::GlobalHandles::Node"*
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %2, i64 0, i32 0, i32 3
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 7
  %6 = icmp eq i8 %5, 2
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles29IterateWeakRootsForFinalizersEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %12

11:                                               ; preds = %33, %2
  ret void

12:                                               ; preds = %9, %33
  %13 = phi i64 [ %7, %9 ], [ %34, %33 ]
  %14 = phi i64 [ 0, %9 ], [ %35, %33 ]
  %15 = inttoptr i64 %13 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 0, i64 %14, i32 0, i32 3
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, 7
  %19 = icmp eq i8 %18, 3
  br i1 %19, label %20, label %26

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 0, i64 %14
  %22 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %21 to i64
  %23 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %10, align 8
  %24 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %23, i64 3
  %25 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %24, align 8
  tail call void %25(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %22) #12
  br label %26

26:                                               ; preds = %12, %20
  %27 = add i64 %14, 1
  %28 = icmp ult i64 %27, 256
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 4
  %31 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %26, %29
  %34 = phi i64 [ %13, %26 ], [ %32, %29 ]
  %35 = phi i64 [ %27, %26 ], [ 0, %29 ]
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles33IterateWeakRootsForPhantomHandlesEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"*, i1 (%"class.v8::internal::Heap"*, i64)* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !11
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 6
  br label %24

13:                                               ; preds = %68, %2
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %15, i64 0, i32 2
  %17 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !14
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 8
  br label %73

24:                                               ; preds = %9, %68
  %25 = phi i64 [ %7, %9 ], [ %69, %68 ]
  %26 = phi i64 [ 0, %9 ], [ %70, %68 ]
  %27 = inttoptr i64 %25 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %28 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %27, i64 0, i32 0, i64 %26
  %29 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %27, i64 0, i32 0, i64 %26, i32 0, i32 3
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 7
  %32 = zext i8 %31 to i32
  switch i32 %32, label %61 [
    i32 2, label %36
    i32 3, label %36
    i32 4, label %33
  ]

33:                                               ; preds = %24
  %34 = and i8 %30, 48
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %61

36:                                               ; preds = %24, %24, %33
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 2
  %39 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %28 to i64
  %40 = tail call zeroext i1 %1(%"class.v8::internal::Heap"* %38, i64 %39) #12
  br i1 %40, label %41, label %61

41:                                               ; preds = %36
  %42 = load i8, i8* %29, align 1
  %43 = and i8 %42, 48
  %44 = icmp eq i8 %43, 48
  br i1 %44, label %45, label %53

45:                                               ; preds = %41
  %46 = and i8 %42, -8
  %47 = or i8 %46, 3
  store i8 %47, i8* %29, align 1
  %48 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %27, i64 0, i32 0, i64 %26, i32 0, i32 4
  %49 = bitcast %union.anon.1087* %48 to i64***
  %50 = load i64**, i64*** %49, align 8
  store i64* null, i64** %50, align 8
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::Node"* %28) #12
  %51 = load i64, i64* %12, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %12, align 8
  br label %61

53:                                               ; preds = %41
  %54 = lshr i8 %42, 4
  %55 = and i8 %54, 3
  %56 = add nsw i8 %55, -1
  %57 = icmp ult i8 %56, 2
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = and i8 %42, -8
  %60 = or i8 %59, 3
  store i8 %60, i8* %29, align 1
  tail call void @_ZN2v88internal13GlobalHandles4Node26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE(%"class.v8::internal::GlobalHandles::Node"* %28, %"class.std::__1::vector.1121"* %11)
  br label %61

61:                                               ; preds = %24, %33, %45, %58, %53, %36
  %62 = add i64 %26, 1
  %63 = icmp ult i64 %62, 256
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %27, i64 0, i32 4
  %66 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %61, %64
  %69 = phi i64 [ %25, %61 ], [ %67, %64 ]
  %70 = phi i64 [ %62, %61 ], [ 0, %64 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %13, label %24

72:                                               ; preds = %125, %13
  ret void

73:                                               ; preds = %20, %125
  %74 = phi i64 [ %18, %20 ], [ %127, %125 ]
  %75 = phi i64 [ 0, %20 ], [ %126, %125 ]
  %76 = inttoptr i64 %74 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"*
  %77 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %76, i64 0, i32 0, i64 %75
  %78 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %76, i64 0, i32 0, i64 %75, i32 0, i32 3
  %79 = load i8, i8* %78, align 1
  %80 = and i8 %79, 3
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %118, label %82

82:                                               ; preds = %73
  %83 = and i8 %79, 32
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %76, i64 0, i32 0, i64 %75, i32 1
  %87 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %86, align 8
  %88 = icmp ne void (%"class.v8::WeakCallbackInfo"*)* %87, null
  %89 = and i8 %79, 16
  %90 = icmp ne i8 %89, 0
  %91 = or i1 %90, %88
  br i1 %91, label %97, label %92

92:                                               ; preds = %85
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"* %77) #12
  %93 = load i64, i64* %21, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %21, align 8
  br label %118

95:                                               ; preds = %82
  %96 = and i8 %79, -33
  store i8 %96, i8* %78, align 1
  br label %97

97:                                               ; preds = %85, %95
  %98 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %98, i64 0, i32 2
  %100 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %77 to i64
  %101 = tail call zeroext i1 %1(%"class.v8::internal::Heap"* %99, i64 %100) #12
  br i1 %101, label %102, label %118

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %76, i64 0, i32 0, i64 %75, i32 1
  %104 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %103, align 8
  %105 = icmp eq void (%"class.v8::WeakCallbackInfo"*)* %104, null
  br i1 %105, label %106, label %117

106:                                              ; preds = %102
  %107 = load i8, i8* %78, align 1
  %108 = and i8 %107, 16
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %76, i64 0, i32 0, i64 %75, i32 0, i32 4
  %112 = bitcast %union.anon.1104* %111 to i64***
  %113 = load i64**, i64*** %112, align 8
  store i64* null, i64** %113, align 8
  br label %114

114:                                              ; preds = %106, %110
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"* %77) #12
  %115 = load i64, i64* %21, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %21, align 8
  br label %118

117:                                              ; preds = %102
  tail call void @_ZN2v88internal13GlobalHandles10TracedNode26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE(%"class.v8::internal::GlobalHandles::TracedNode"* %77, %"class.std::__1::vector.1129"* %23)
  br label %118

118:                                              ; preds = %73, %97, %117, %114, %92
  %119 = add i64 %75, 1
  %120 = icmp ult i64 %119, 256
  br i1 %120, label %125, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %76, i64 0, i32 4
  %123 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  br label %125

125:                                              ; preds = %118, %121
  %126 = phi i64 [ %119, %118 ], [ 0, %121 ]
  %127 = phi i64 [ %74, %118 ], [ %124, %121 ]
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %72, label %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13GlobalHandles4Node26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE(%"class.v8::internal::GlobalHandles::Node"*, %"class.std::__1::vector.1121"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [2 x i8*], align 16
  %4 = bitcast [2 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 48
  %8 = icmp eq i8 %7, 16
  br i1 %8, label %103, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %103, label %14

14:                                               ; preds = %9
  %15 = and i64 %11, -4294967296
  %16 = add i64 %11, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ugt i16 %23, 188
  br i1 %24, label %25, label %103

25:                                               ; preds = %14
  %26 = load atomic i32, i32* %17 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %15, %27
  %29 = add i64 %28, 3
  %30 = inttoptr i64 %29 to i8*
  %31 = load atomic i8, i8* %30 monotonic, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 2
  %34 = icmp eq i8 %31, 0
  br i1 %34, label %103, label %35

35:                                               ; preds = %25
  %36 = add i64 %28, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 1057
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = add i64 %28, 9
  %42 = inttoptr i64 %41 to i8*
  %43 = load atomic i8, i8* %42 monotonic, align 1
  %44 = icmp slt i8 %43, 0
  %45 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %38, i1 zeroext %44) #12
  br label %46

46:                                               ; preds = %35, %40
  %47 = phi i32 [ %45, %40 ], [ 12, %35 ]
  %48 = sub nsw i32 %33, %47
  %49 = ashr i32 %48, 2
  %50 = load atomic i8, i8* %30 monotonic, align 1
  %51 = zext i8 %50 to i32
  %52 = add i64 %28, 4
  %53 = inttoptr i64 %52 to i8*
  %54 = load atomic i8, i8* %53 monotonic, align 1
  %55 = zext i8 %54 to i32
  %56 = sub nsw i32 %49, %51
  %57 = add nsw i32 %56, %55
  %58 = add nsw i32 %57, 1
  %59 = icmp ult i32 %58, 3
  br i1 %59, label %103, label %60

60:                                               ; preds = %46
  %61 = sdiv i32 %57, 2
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %92, %60
  %64 = phi i64 [ 0, %60 ], [ %93, %92 ]
  %65 = load atomic i32, i32* %17 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %15, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 1057
  br i1 %71, label %78, label %72

72:                                               ; preds = %63
  %73 = add i64 %67, 9
  %74 = inttoptr i64 %73 to i8*
  %75 = load atomic i8, i8* %74 monotonic, align 1
  %76 = icmp slt i8 %75, 0
  %77 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %70, i1 zeroext %76) #12
  br label %78

78:                                               ; preds = %72, %63
  %79 = phi i32 [ %77, %72 ], [ 12, %63 ]
  %80 = trunc i64 %64 to i32
  %81 = shl i32 %80, 3
  %82 = add nsw i32 %79, %81
  %83 = sext i32 %82 to i64
  %84 = add i64 %16, %83
  %85 = inttoptr i64 %84 to i64*
  %86 = load i64, i64* %85, align 1
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %78
  %90 = getelementptr inbounds [2 x i8*], [2 x i8*]* %3, i64 0, i64 %64
  %91 = bitcast i8** %90 to i64*
  store i64 %86, i64* %91, align 8
  br label %92

92:                                               ; preds = %89, %78
  %93 = add nuw nsw i64 %64, 1
  %94 = icmp ne i64 %64, 0
  %95 = icmp eq i64 %93, %62
  %96 = or i1 %94, %95
  br i1 %96, label %97, label %63

97:                                               ; preds = %92
  %98 = bitcast [2 x i8*]* %3 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = getelementptr inbounds [2 x i8*], [2 x i8*]* %3, i64 0, i64 1
  %101 = bitcast i8** %100 to i64*
  %102 = load i64, i64* %101, align 8
  br label %103

103:                                              ; preds = %97, %25, %9, %2, %46, %14
  %104 = phi i64 [ %102, %97 ], [ 0, %25 ], [ 0, %9 ], [ 0, %2 ], [ 0, %46 ], [ 0, %14 ]
  %105 = phi i64 [ %99, %97 ], [ 0, %25 ], [ 0, %9 ], [ 0, %2 ], [ 0, %46 ], [ 0, %14 ]
  %106 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 0
  store i64 51729, i64* %106, align 8
  %107 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %0 to i64
  %108 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 1
  %109 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 4
  %112 = bitcast %union.anon.1087* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector.1121", %"class.std::__1::vector.1121"* %1, i64 0, i32 0, i32 1
  %115 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::vector.1121", %"class.std::__1::vector.1121"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %117 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %116, align 8
  %118 = icmp ult %"struct.std::__1::pair.1123"* %115, %117
  %119 = ptrtoint %"struct.std::__1::pair.1123"* %117 to i64
  br i1 %118, label %120, label %133

120:                                              ; preds = %103
  %121 = bitcast %"struct.std::__1::pair.1123"* %115 to i64*
  store i64 %107, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %115, i64 0, i32 1, i32 0
  %123 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %122 to i64*
  store i64 %110, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %115, i64 0, i32 1, i32 1
  %125 = bitcast i8** %124 to i64*
  store i64 %113, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %115, i64 0, i32 1, i32 2
  %127 = bitcast [2 x i8*]* %126 to i64*
  store i64 %105, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %115, i64 0, i32 1, i32 2, i64 1
  %129 = bitcast i8** %128 to i64*
  store i64 %104, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %115, i64 1
  %131 = ptrtoint %"struct.std::__1::pair.1123"* %130 to i64
  %132 = bitcast %"struct.std::__1::pair.1123"** %114 to i64*
  store i64 %131, i64* %132, align 8
  br label %194

133:                                              ; preds = %103
  %134 = ptrtoint %"struct.std::__1::pair.1123"* %115 to i64
  %135 = bitcast %"struct.std::__1::pair.1123"** %114 to i64*
  %136 = bitcast %"class.std::__1::vector.1121"* %1 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %134, %137
  %139 = sdiv exact i64 %138, 40
  %140 = add nsw i64 %139, 1
  %141 = icmp ugt i64 %140, 461168601842738790
  br i1 %141, label %142, label %144

142:                                              ; preds = %133
  %143 = bitcast %"class.std::__1::vector.1121"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #14
  unreachable

144:                                              ; preds = %133
  %145 = bitcast %"struct.std::__1::pair.1123"** %116 to i64*
  %146 = sub i64 %119, %137
  %147 = sdiv exact i64 %146, 40
  %148 = icmp ult i64 %147, 230584300921369395
  br i1 %148, label %149, label %154

149:                                              ; preds = %144
  %150 = shl nsw i64 %147, 1
  %151 = icmp ult i64 %150, %140
  %152 = select i1 %151, i64 %140, i64 %150
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %149, %144
  %155 = phi i64 [ %152, %149 ], [ 461168601842738790, %144 ]
  %156 = mul i64 %155, 40
  %157 = tail call i8* @_Znwm(i64 %156) #13
  %158 = bitcast i8* %157 to %"struct.std::__1::pair.1123"*
  br label %159

159:                                              ; preds = %154, %149
  %160 = phi i64 [ %155, %154 ], [ 0, %149 ]
  %161 = phi %"struct.std::__1::pair.1123"* [ %158, %154 ], [ null, %149 ]
  %162 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %161, i64 %139
  %163 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %161, i64 %160
  %164 = ptrtoint %"struct.std::__1::pair.1123"* %163 to i64
  %165 = bitcast %"struct.std::__1::pair.1123"* %162 to i64*
  store i64 %107, i64* %165, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %161, i64 %139, i32 1, i32 0
  %167 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %166 to i64*
  store i64 %110, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %161, i64 %139, i32 1, i32 1
  %169 = bitcast i8** %168 to i64*
  store i64 %113, i64* %169, align 8
  %170 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %161, i64 %139, i32 1, i32 2
  %171 = bitcast [2 x i8*]* %170 to i64*
  store i64 %105, i64* %171, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %161, i64 %139, i32 1, i32 2, i64 1
  %173 = bitcast i8** %172 to i64*
  store i64 %104, i64* %173, align 8
  %174 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %162, i64 1
  %175 = ptrtoint %"struct.std::__1::pair.1123"* %174 to i64
  %176 = getelementptr inbounds %"class.std::__1::vector.1121", %"class.std::__1::vector.1121"* %1, i64 0, i32 0, i32 0
  %177 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %176, align 8
  %178 = load i64, i64* %135, align 8
  %179 = ptrtoint %"struct.std::__1::pair.1123"* %177 to i64
  %180 = sub i64 %178, %179
  %181 = sdiv exact i64 %180, -40
  %182 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %162, i64 %181
  %183 = ptrtoint %"struct.std::__1::pair.1123"* %182 to i64
  %184 = icmp sgt i64 %180, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %159
  %186 = bitcast %"struct.std::__1::pair.1123"* %182 to i8*
  %187 = bitcast %"struct.std::__1::pair.1123"* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 %180, i1 false) #12
  %188 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %176, align 8
  br label %189

189:                                              ; preds = %185, %159
  %190 = phi %"struct.std::__1::pair.1123"* [ %177, %159 ], [ %188, %185 ]
  store i64 %183, i64* %136, align 8
  store i64 %175, i64* %135, align 8
  store i64 %164, i64* %145, align 8
  %191 = icmp eq %"struct.std::__1::pair.1123"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = bitcast %"struct.std::__1::pair.1123"* %190 to i8*
  tail call void @_ZdlPv(i8* %193) #13
  br label %194

194:                                              ; preds = %120, %189, %192
  %195 = load i8, i8* %5, align 1
  %196 = and i8 %195, -8
  %197 = or i8 %196, 4
  store i8 %197, i8* %5, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13GlobalHandles10TracedNode26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE(%"class.v8::internal::GlobalHandles::TracedNode"*, %"class.std::__1::vector.1129"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [2 x i8*], align 16
  %4 = bitcast [2 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i8*
  %15 = load atomic i8, i8* %14 monotonic, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 2
  %18 = icmp eq i8 %15, 0
  br i1 %18, label %87, label %19

19:                                               ; preds = %2
  %20 = add i64 %12, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 1057
  br i1 %23, label %30, label %24

24:                                               ; preds = %19
  %25 = add i64 %12, 9
  %26 = inttoptr i64 %25 to i8*
  %27 = load atomic i8, i8* %26 monotonic, align 1
  %28 = icmp slt i8 %27, 0
  %29 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %22, i1 zeroext %28) #12
  br label %30

30:                                               ; preds = %19, %24
  %31 = phi i32 [ %29, %24 ], [ 12, %19 ]
  %32 = sub nsw i32 %17, %31
  %33 = ashr i32 %32, 2
  %34 = load atomic i8, i8* %14 monotonic, align 1
  %35 = zext i8 %34 to i32
  %36 = add i64 %12, 4
  %37 = inttoptr i64 %36 to i8*
  %38 = load atomic i8, i8* %37 monotonic, align 1
  %39 = zext i8 %38 to i32
  %40 = sub nsw i32 %33, %35
  %41 = add nsw i32 %40, %39
  %42 = add nsw i32 %41, 1
  %43 = icmp ult i32 %42, 3
  br i1 %43, label %87, label %44

44:                                               ; preds = %30
  %45 = sdiv i32 %41, 2
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %76, %44
  %48 = phi i64 [ 0, %44 ], [ %77, %76 ]
  %49 = load atomic i32, i32* %9 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %7, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = icmp eq i16 %54, 1057
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = add i64 %51, 9
  %58 = inttoptr i64 %57 to i8*
  %59 = load atomic i8, i8* %58 monotonic, align 1
  %60 = icmp slt i8 %59, 0
  %61 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %54, i1 zeroext %60) #12
  br label %62

62:                                               ; preds = %56, %47
  %63 = phi i32 [ %61, %56 ], [ 12, %47 ]
  %64 = trunc i64 %48 to i32
  %65 = shl i32 %64, 3
  %66 = add nsw i32 %63, %65
  %67 = sext i32 %66 to i64
  %68 = add i64 %8, %67
  %69 = inttoptr i64 %68 to i64*
  %70 = load i64, i64* %69, align 1
  %71 = and i64 %70, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %62
  %74 = getelementptr inbounds [2 x i8*], [2 x i8*]* %3, i64 0, i64 %48
  %75 = bitcast i8** %74 to i64*
  store i64 %70, i64* %75, align 8
  br label %76

76:                                               ; preds = %73, %62
  %77 = add nuw nsw i64 %48, 1
  %78 = icmp ne i64 %48, 0
  %79 = icmp eq i64 %77, %46
  %80 = or i1 %78, %79
  br i1 %80, label %81, label %47

81:                                               ; preds = %76
  %82 = bitcast [2 x i8*]* %3 to i64*
  %83 = load i64, i64* %82, align 16
  %84 = getelementptr inbounds [2 x i8*], [2 x i8*]* %3, i64 0, i64 1
  %85 = bitcast i8** %84 to i64*
  %86 = load i64, i64* %85, align 8
  br label %87

87:                                               ; preds = %81, %2, %30
  %88 = phi i64 [ %86, %81 ], [ 0, %2 ], [ 0, %30 ]
  %89 = phi i64 [ %83, %81 ], [ 0, %2 ], [ 0, %30 ]
  store i64 51729, i64* %5, align 8
  %90 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %0 to i64
  %91 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 1
  %92 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 4
  %95 = bitcast %union.anon.1104* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector.1129", %"class.std::__1::vector.1129"* %1, i64 0, i32 0, i32 1
  %98 = load %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector.1129", %"class.std::__1::vector.1129"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %100 = load %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"** %99, align 8
  %101 = icmp ult %"struct.std::__1::pair.1131"* %98, %100
  %102 = ptrtoint %"struct.std::__1::pair.1131"* %100 to i64
  br i1 %101, label %103, label %116

103:                                              ; preds = %87
  %104 = bitcast %"struct.std::__1::pair.1131"* %98 to i64*
  store i64 %90, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %98, i64 0, i32 1, i32 0
  %106 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %105 to i64*
  store i64 %93, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %98, i64 0, i32 1, i32 1
  %108 = bitcast i8** %107 to i64*
  store i64 %96, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %98, i64 0, i32 1, i32 2
  %110 = bitcast [2 x i8*]* %109 to i64*
  store i64 %89, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %98, i64 0, i32 1, i32 2, i64 1
  %112 = bitcast i8** %111 to i64*
  store i64 %88, i64* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %98, i64 1
  %114 = ptrtoint %"struct.std::__1::pair.1131"* %113 to i64
  %115 = bitcast %"struct.std::__1::pair.1131"** %97 to i64*
  store i64 %114, i64* %115, align 8
  br label %177

116:                                              ; preds = %87
  %117 = ptrtoint %"struct.std::__1::pair.1131"* %98 to i64
  %118 = bitcast %"struct.std::__1::pair.1131"** %97 to i64*
  %119 = bitcast %"class.std::__1::vector.1129"* %1 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %117, %120
  %122 = sdiv exact i64 %121, 40
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 461168601842738790
  br i1 %124, label %125, label %127

125:                                              ; preds = %116
  %126 = bitcast %"class.std::__1::vector.1129"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #14
  unreachable

127:                                              ; preds = %116
  %128 = bitcast %"struct.std::__1::pair.1131"** %99 to i64*
  %129 = sub i64 %102, %120
  %130 = sdiv exact i64 %129, 40
  %131 = icmp ult i64 %130, 230584300921369395
  br i1 %131, label %132, label %137

132:                                              ; preds = %127
  %133 = shl nsw i64 %130, 1
  %134 = icmp ult i64 %133, %123
  %135 = select i1 %134, i64 %123, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %132, %127
  %138 = phi i64 [ %135, %132 ], [ 461168601842738790, %127 ]
  %139 = mul i64 %138, 40
  %140 = tail call i8* @_Znwm(i64 %139) #13
  %141 = bitcast i8* %140 to %"struct.std::__1::pair.1131"*
  br label %142

142:                                              ; preds = %137, %132
  %143 = phi i64 [ %138, %137 ], [ 0, %132 ]
  %144 = phi %"struct.std::__1::pair.1131"* [ %141, %137 ], [ null, %132 ]
  %145 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %144, i64 %122
  %146 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %144, i64 %143
  %147 = ptrtoint %"struct.std::__1::pair.1131"* %146 to i64
  %148 = bitcast %"struct.std::__1::pair.1131"* %145 to i64*
  store i64 %90, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %144, i64 %122, i32 1, i32 0
  %150 = bitcast void (%"class.v8::WeakCallbackInfo"*)** %149 to i64*
  store i64 %93, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %144, i64 %122, i32 1, i32 1
  %152 = bitcast i8** %151 to i64*
  store i64 %96, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %144, i64 %122, i32 1, i32 2
  %154 = bitcast [2 x i8*]* %153 to i64*
  store i64 %89, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %144, i64 %122, i32 1, i32 2, i64 1
  %156 = bitcast i8** %155 to i64*
  store i64 %88, i64* %156, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %145, i64 1
  %158 = ptrtoint %"struct.std::__1::pair.1131"* %157 to i64
  %159 = getelementptr inbounds %"class.std::__1::vector.1129", %"class.std::__1::vector.1129"* %1, i64 0, i32 0, i32 0
  %160 = load %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"** %159, align 8
  %161 = load i64, i64* %118, align 8
  %162 = ptrtoint %"struct.std::__1::pair.1131"* %160 to i64
  %163 = sub i64 %161, %162
  %164 = sdiv exact i64 %163, -40
  %165 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %145, i64 %164
  %166 = ptrtoint %"struct.std::__1::pair.1131"* %165 to i64
  %167 = icmp sgt i64 %163, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %142
  %169 = bitcast %"struct.std::__1::pair.1131"* %165 to i8*
  %170 = bitcast %"struct.std::__1::pair.1131"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 %163, i1 false) #12
  %171 = load %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"** %159, align 8
  br label %172

172:                                              ; preds = %168, %142
  %173 = phi %"struct.std::__1::pair.1131"* [ %160, %142 ], [ %171, %168 ]
  store i64 %166, i64* %119, align 8
  store i64 %158, i64* %118, align 8
  store i64 %147, i64* %128, align 8
  %174 = icmp eq %"struct.std::__1::pair.1131"* %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = bitcast %"struct.std::__1::pair.1131"* %173 to i8*
  tail call void @_ZdlPv(i8* %176) #13
  br label %177

177:                                              ; preds = %103, %172, %175
  %178 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %0, i64 0, i32 0, i32 3
  %179 = load i8, i8* %178, align 1
  %180 = and i8 %179, -4
  %181 = or i8 %180, 2
  store i8 %181, i8* %178, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles34IterateWeakRootsIdentifyFinalizersEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"* nocapture readonly, i1 (%"class.v8::internal::Heap"*, i64)* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !17
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  br label %12

11:                                               ; preds = %40, %2
  ret void

12:                                               ; preds = %9, %40
  %13 = phi i64 [ %7, %9 ], [ %41, %40 ]
  %14 = phi i64 [ 0, %9 ], [ %42, %40 ]
  %15 = inttoptr i64 %13 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 0, i64 %14, i32 0, i32 3
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, 7
  %19 = icmp eq i8 %18, 2
  br i1 %19, label %20, label %33

20:                                               ; preds = %12
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 2
  %23 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 0, i64 %14, i32 0
  %24 = ptrtoint %"class.v8::internal::NodeBase"* %23 to i64
  %25 = tail call zeroext i1 %1(%"class.v8::internal::Heap"* %22, i64 %24) #12
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = load i8, i8* %16, align 1
  %28 = and i8 %27, 48
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = and i8 %27, -8
  %32 = or i8 %31, 3
  store i8 %32, i8* %16, align 1
  br label %33

33:                                               ; preds = %12, %26, %30, %20
  %34 = add i64 %14, 1
  %35 = icmp ult i64 %34, 256
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 4
  %38 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi i64 [ %13, %33 ], [ %39, %36 ]
  %42 = phi i64 [ %34, %33 ], [ 0, %36 ]
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles29IdentifyWeakUnmodifiedObjectsEPFbNS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"* nocapture readonly, i1 (i64)* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::Value"*, align 8
  %4 = load i8, i8* @_ZN2v88internal32FLAG_reclaim_unmodified_wrappersE, align 1, !range !6
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 2, i32 86, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %10, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i8, i8* %11 seq_cst, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %64

14:                                               ; preds = %6
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 2
  %17 = tail call %"class.v8::EmbedderRootsHandler"* @_ZNK2v88internal4Heap23GetEmbedderRootsHandlerEv(%"class.v8::internal::Heap"* %16) #12
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 0
  %19 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 1
  %21 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %20, align 8
  %22 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %19, %21
  br i1 %22, label %64, label %23

23:                                               ; preds = %14
  %24 = bitcast %"class.v8::Value"** %3 to i8*
  %25 = bitcast %"class.v8::Value"** %3 to %"class.v8::internal::GlobalHandles::TracedNode"**
  %26 = bitcast %"class.v8::Value"** %3 to %"class.v8::TracedGlobal"*
  %27 = bitcast %"class.v8::EmbedderRootsHandler"* %17 to i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedGlobal"*)***
  %28 = bitcast %"class.v8::Value"** %3 to %"class.v8::TracedReference"*
  %29 = bitcast %"class.v8::EmbedderRootsHandler"* %17 to i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)***
  br label %30

30:                                               ; preds = %23, %61
  %31 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %19, %23 ], [ %62, %61 ]
  %32 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %32, i64 0, i32 0, i32 3
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %61, label %37

37:                                               ; preds = %30
  %38 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %32 to i64
  %39 = call zeroext i1 %1(i64 %38) #12
  br i1 %39, label %40, label %61

40:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  store %"class.v8::internal::GlobalHandles::TracedNode"* %32, %"class.v8::internal::GlobalHandles::TracedNode"** %25, align 8
  %41 = load i8, i8* %33, align 1
  %42 = and i8 %41, 16
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = load i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedGlobal"*)**, i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedGlobal"*)*** %27, align 8
  %46 = getelementptr inbounds i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedGlobal"*)*, i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedGlobal"*)** %45, i64 3
  %47 = load i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedGlobal"*)*, i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedGlobal"*)** %46, align 8
  %48 = call zeroext i1 %47(%"class.v8::EmbedderRootsHandler"* %17, %"class.v8::TracedGlobal"* nonnull dereferenceable(8) %26) #12
  br label %54

49:                                               ; preds = %40
  %50 = load i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)**, i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)*** %29, align 8
  %51 = getelementptr inbounds i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)*, i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)** %50, i64 2
  %52 = load i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)*, i1 (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.v8::EmbedderRootsHandler"* %17, %"class.v8::TracedReference"* nonnull dereferenceable(8) %28) #12
  br label %54

54:                                               ; preds = %49, %44
  %55 = phi i1 [ %53, %49 ], [ %48, %44 ]
  %56 = load i8, i8* %33, align 1
  %57 = and i8 %56, -9
  %58 = zext i1 %55 to i8
  %59 = shl nuw nsw i8 %58, 3
  %60 = or i8 %57, %59
  store i8 %60, i8* %33, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %61

61:                                               ; preds = %30, %37, %54
  %62 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %31, i64 1
  %63 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %62, %21
  br i1 %63, label %64, label %30

64:                                               ; preds = %61, %14, %6, %2
  ret void
}

declare %"class.v8::EmbedderRootsHandler"* @_ZNK2v88internal4Heap23GetEmbedderRootsHandlerEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles35IterateYoungStrongAndDependentRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %18

10:                                               ; preds = %33, %2
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %13, align 8
  %15 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %12, %14
  br i1 %15, label %36, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %37

18:                                               ; preds = %8, %33
  %19 = phi %"class.v8::internal::GlobalHandles::Node"** [ %4, %8 ], [ %34, %33 ]
  %20 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 3
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 7
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %33

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 4
  %27 = bitcast %union.anon.1087* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %20 to i64
  %30 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %9, align 8
  %31 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %30, i64 3
  %32 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %31, align 8
  tail call void %32(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* %28, i64 %29) #12
  br label %33

33:                                               ; preds = %25, %18
  %34 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %19, i64 1
  %35 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %34, %6
  br i1 %35, label %10, label %18

36:                                               ; preds = %52, %10
  ret void

37:                                               ; preds = %16, %52
  %38 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %12, %16 ], [ %53, %52 ]
  %39 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %39, i64 0, i32 0, i32 3
  %41 = load i8, i8* %40, align 1
  %42 = and i8 %41, 3
  %43 = icmp ne i8 %42, 0
  %44 = and i8 %41, 8
  %45 = icmp ne i8 %44, 0
  %46 = and i1 %43, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %37
  %48 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %39 to i64
  %49 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %17, align 8
  %50 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %49, i64 3
  %51 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %50, align 8
  tail call void %51(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %48) #12
  br label %52

52:                                               ; preds = %47, %37
  %53 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %38, i64 1
  %54 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %53, %14
  br i1 %54, label %36, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles31MarkYoungWeakDeadObjectsPendingEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"* nocapture readonly, i1 (%"class.v8::internal::Heap"*, i64)* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  br label %11

10:                                               ; preds = %35, %2
  ret void

11:                                               ; preds = %8, %35
  %12 = phi %"class.v8::internal::GlobalHandles::Node"** [ %4, %8 ], [ %36, %35 ]
  %13 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %13, i64 0, i32 0, i32 3
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 7
  %17 = icmp eq i8 %16, 2
  br i1 %17, label %18, label %35

18:                                               ; preds = %11
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 2
  %21 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %13 to i64
  %22 = tail call zeroext i1 %1(%"class.v8::internal::Heap"* %20, i64 %21) #12
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = load i8, i8* %14, align 1
  %25 = lshr i8 %24, 4
  %26 = and i8 %25, 3
  %27 = add nsw i8 %26, -1
  %28 = icmp ult i8 %27, 2
  %29 = and i8 %24, 48
  %30 = icmp eq i8 %29, 48
  %31 = or i1 %30, %28
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = and i8 %24, -8
  %34 = or i8 %33, 3
  store i8 %34, i8* %14, align 1
  br label %35

35:                                               ; preds = %11, %23, %32, %18
  %36 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %12, i64 1
  %37 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %36, %6
  br i1 %37, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles40IterateYoungWeakDeadObjectsForFinalizersEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %11

10:                                               ; preds = %23, %2
  ret void

11:                                               ; preds = %8, %23
  %12 = phi %"class.v8::internal::GlobalHandles::Node"** [ %4, %8 ], [ %24, %23 ]
  %13 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %13, i64 0, i32 0, i32 3
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 7
  %17 = icmp eq i8 %16, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %13 to i64
  %20 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %9, align 8
  %21 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %20, i64 3
  %22 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %21, align 8
  tail call void %22(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %19) #12
  br label %23

23:                                               ; preds = %11, %18
  %24 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %12, i64 1
  %25 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %24, %6
  br i1 %25, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles40IterateYoungWeakObjectsForPhantomHandlesEPNS0_11RootVisitorEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::RootVisitor"*, i1 (%"class.v8::internal::Heap"*, i64)* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Value"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %12 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 6
  br label %18

15:                                               ; preds = %66, %3
  %16 = load i8, i8* @_ZN2v88internal32FLAG_reclaim_unmodified_wrappersE, align 1, !range !6
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %131, label %69

18:                                               ; preds = %10, %66
  %19 = phi %"class.v8::internal::GlobalHandles::Node"** [ %6, %10 ], [ %67, %66 ]
  %20 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 3
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 7
  %24 = zext i8 %23 to i32
  switch i32 %24, label %66 [
    i32 4, label %25
    i32 2, label %28
  ]

25:                                               ; preds = %18
  %26 = and i8 %22, 48
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %66

28:                                               ; preds = %18, %25
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 2
  %31 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %20 to i64
  %32 = tail call zeroext i1 %2(%"class.v8::internal::Heap"* %30, i64 %31) #12
  %33 = load i8, i8* %21, align 1
  br i1 %32, label %34, label %54

34:                                               ; preds = %28
  %35 = and i8 %33, 48
  %36 = icmp eq i8 %35, 48
  br i1 %36, label %37, label %45

37:                                               ; preds = %34
  %38 = and i8 %33, -8
  %39 = or i8 %38, 3
  store i8 %39, i8* %21, align 1
  %40 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 4
  %41 = bitcast %union.anon.1087* %40 to i64***
  %42 = load i64**, i64*** %41, align 8
  store i64* null, i64** %42, align 8
  tail call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::Node"* %20) #12
  %43 = load i64, i64* %14, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %14, align 8
  br label %66

45:                                               ; preds = %34
  %46 = lshr i8 %33, 4
  %47 = and i8 %46, 3
  %48 = add nsw i8 %47, -1
  %49 = icmp ult i8 %48, 2
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = and i8 %33, -8
  %52 = or i8 %51, 3
  store i8 %52, i8* %21, align 1
  tail call void @_ZN2v88internal13GlobalHandles4Node26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE(%"class.v8::internal::GlobalHandles::Node"* %20, %"class.std::__1::vector.1121"* %13)
  br label %66

53:                                               ; preds = %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #14
  unreachable

54:                                               ; preds = %28
  %55 = and i8 %33, 7
  %56 = icmp eq i8 %55, 1
  br i1 %56, label %57, label %61

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 4
  %59 = bitcast %union.anon.1087* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %54, %57
  %62 = phi i8* [ %60, %57 ], [ null, %54 ]
  %63 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %12, align 8
  %64 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %63, i64 3
  %65 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %64, align 8
  tail call void %65(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* %62, i64 %31) #12
  br label %66

66:                                               ; preds = %18, %61, %50, %37, %25
  %67 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %19, i64 1
  %68 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %67, %8
  br i1 %68, label %15, label %18

69:                                               ; preds = %15
  %70 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %71 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %71, i64 0, i32 2
  %73 = tail call %"class.v8::EmbedderRootsHandler"* @_ZNK2v88internal4Heap23GetEmbedderRootsHandlerEv(%"class.v8::internal::Heap"* %72) #12
  %74 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 0
  %75 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 1
  %77 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %76, align 8
  %78 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %75, %77
  br i1 %78, label %131, label %79

79:                                               ; preds = %69
  %80 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  %81 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 8
  %82 = bitcast %"class.v8::Value"** %4 to i8*
  %83 = bitcast %"class.v8::Value"** %4 to %"class.v8::internal::GlobalHandles::TracedNode"**
  %84 = bitcast %"class.v8::Value"** %4 to %"class.v8::TracedReference"*
  %85 = bitcast %"class.v8::EmbedderRootsHandler"* %73 to void (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)***
  %86 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 6
  br label %87

87:                                               ; preds = %79, %128
  %88 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %75, %79 ], [ %129, %128 ]
  %89 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %89, i64 0, i32 0, i32 3
  %91 = load i8, i8* %90, align 1
  %92 = and i8 %91, 3
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %128, label %94

94:                                               ; preds = %87
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %70, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 2
  %97 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %89 to i64
  %98 = call zeroext i1 %2(%"class.v8::internal::Heap"* %96, i64 %97) #12
  br i1 %98, label %99, label %119

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %89, i64 0, i32 1
  %101 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %100, align 8
  %102 = icmp eq void (%"class.v8::WeakCallbackInfo"*)* %101, null
  br i1 %102, label %103, label %118

103:                                              ; preds = %99
  %104 = load i8, i8* %90, align 1
  %105 = and i8 %104, 16
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %89, i64 0, i32 0, i32 4
  %109 = bitcast %union.anon.1104* %108 to i64***
  %110 = load i64**, i64*** %109, align 8
  store i64* null, i64** %110, align 8
  call void @_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE7ReleaseEPS3_(%"class.v8::internal::GlobalHandles::TracedNode"* %89) #12
  br label %115

111:                                              ; preds = %103
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store %"class.v8::internal::GlobalHandles::TracedNode"* %89, %"class.v8::internal::GlobalHandles::TracedNode"** %83, align 8
  %112 = load void (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)**, void (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)*** %85, align 8
  %113 = getelementptr inbounds void (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)*, void (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)** %112, i64 4
  %114 = load void (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)*, void (%"class.v8::EmbedderRootsHandler"*, %"class.v8::TracedReference"*)** %113, align 8
  call void %114(%"class.v8::EmbedderRootsHandler"* %73, %"class.v8::TracedReference"* nonnull dereferenceable(8) %84) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  br label %115

115:                                              ; preds = %111, %107
  %116 = load i64, i64* %86, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %86, align 8
  br label %128

118:                                              ; preds = %99
  call void @_ZN2v88internal13GlobalHandles10TracedNode26CollectPhantomCallbackDataEPNSt3__16vectorINS3_4pairIPS2_NS1_22PendingPhantomCallbackEEENS3_9allocatorIS8_EEEE(%"class.v8::internal::GlobalHandles::TracedNode"* %89, %"class.std::__1::vector.1129"* %81)
  br label %128

119:                                              ; preds = %94
  %120 = load i8, i8* %90, align 1
  %121 = and i8 %120, 8
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %128

123:                                              ; preds = %119
  %124 = or i8 %120, 8
  store i8 %124, i8* %90, align 1
  %125 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %80, align 8
  %126 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %125, i64 3
  %127 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %126, align 8
  call void %127(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %97) #12
  br label %128

128:                                              ; preds = %119, %87, %118, %115, %123
  %129 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %88, i64 1
  %130 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %129, %77
  br i1 %130, label %131, label %87

131:                                              ; preds = %128, %69, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles40InvokeSecondPassPhantomCallbacksFromTaskEv(%"class.v8::internal::GlobalHandles"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca [2 x %"class.std::__1::unique_ptr.1198"], align 16
  %3 = alloca %"class.v8::WeakCallbackInfo", align 8
  %4 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %5 = alloca %"class.v8::internal::Heap::DevToolsTraceEventScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 10
  store i8 0, i8* %7, align 8
  %8 = bitcast %"class.v8::internal::Heap::DevToolsTraceEventScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 2
  call void @_ZN2v88internal4Heap23DevToolsTraceEventScopeC1EPS1_PKcS5_(%"class.v8::internal::Heap::DevToolsTraceEventScope"* nonnull %5, %"class.v8::internal::Heap"* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #12
  %12 = load atomic i64, i64* @_ZZN2v88internal13GlobalHandles40InvokeSecondPassPhantomCallbacksFromTaskEvE29trace_event_unique_atomic1382 monotonic, align 8
  %13 = inttoptr i64 %12 to i8*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %1
  %16 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %17 = bitcast %"class.v8::TracingController"* %16 to i8* (%"class.v8::TracingController"*, i8*)***
  %18 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %18, i64 2
  %20 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %19, align 8
  %21 = call i8* %20(%"class.v8::TracingController"* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #12
  %22 = ptrtoint i8* %21 to i64
  store atomic volatile i64 %22, i64* @_ZZN2v88internal13GlobalHandles40InvokeSecondPassPhantomCallbacksFromTaskEvE29trace_event_unique_atomic1382 monotonic, align 8
  br label %23

23:                                               ; preds = %1, %15
  %24 = phi i8* [ %13, %1 ], [ %21, %15 ]
  %25 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %26, align 8
  %27 = load atomic i8, i8* %24 monotonic, align 1
  %28 = and i8 %27, 5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = bitcast [2 x %"class.std::__1::unique_ptr.1198"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #12
  %32 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1198"], [2 x %"class.std::__1::unique_ptr.1198"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 16, i1 false) #12
  %33 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %34 = bitcast %"class.v8::TracingController"* %33 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1198"*, i32)***
  %35 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1198"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1198"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1198"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1198"*, i32)** %35, i64 3
  %37 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1198"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1198"*, i32)** %36, align 8
  %38 = call i64 %37(%"class.v8::TracingController"* %33, i8 signext 88, i8* %24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1198"* nonnull %32, i32 0) #12
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1198"], [2 x %"class.std::__1::unique_ptr.1198"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %40 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.v8::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %30
  %43 = bitcast %"class.v8::ConvertableToTraceFormat"* %40 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.v8::ConvertableToTraceFormat"* nonnull %40) #12
  br label %47

47:                                               ; preds = %42, %30
  %48 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1198"], [2 x %"class.std::__1::unique_ptr.1198"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  %50 = icmp eq %"class.v8::ConvertableToTraceFormat"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.v8::ConvertableToTraceFormat"* %49 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, i64 1
  %55 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %54, align 8
  call void %55(%"class.v8::ConvertableToTraceFormat"* nonnull %49) #12
  br label %56

56:                                               ; preds = %47, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #12
  %57 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %57, i64 0, i32 0
  store i8* %24, i8** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %38, i64* %60, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %57, %"struct.v8::internal::tracing::ScopedTracer::Data"** %26, align 8
  br label %61

61:                                               ; preds = %23, %56
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 2
  call void @_ZN2v88internal4Heap23CallGCPrologueCallbacksENS_6GCTypeENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %63, i32 8, i32 0) #12
  %64 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 11
  %65 = load i8, i8* %64, align 1, !range !6
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %101

67:                                               ; preds = %61
  store i8 1, i8* %64, align 1
  %68 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #12
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4, %"class.v8::internal::Isolate"* %69) #12
  %70 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 0
  %71 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 1
  %73 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %72, align 8
  %74 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %71, %73
  br i1 %74, label %100, label %75

75:                                               ; preds = %67
  %76 = bitcast %"class.v8::internal::GlobalHandles"* %0 to i64*
  %77 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i8*
  %78 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i64*
  %79 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 1
  %80 = bitcast i8** %79 to i64*
  %81 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 2
  %82 = bitcast {}*** %81 to void (%"class.v8::WeakCallbackInfo"*)***
  %83 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 3, i64 0
  %84 = bitcast i8** %83 to <2 x i64>*
  br label %85

85:                                               ; preds = %85, %75
  %86 = phi %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* [ %73, %75 ], [ %98, %85 ]
  %87 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %86, i64 -1
  %88 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %86, i64 -1, i32 0
  %89 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %86, i64 -1, i32 1
  %91 = bitcast i8** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %86, i64 -1, i32 2
  %94 = bitcast [2 x i8*]* %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  store %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %87, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %72, align 8
  %96 = load i64, i64* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #12
  store i64 %96, i64* %78, align 8
  store i64 %92, i64* %80, align 8
  store void (%"class.v8::WeakCallbackInfo"*)** null, void (%"class.v8::WeakCallbackInfo"*)*** %82, align 8
  store <2 x i64> %95, <2 x i64>* %84, align 8
  call void %89(%"class.v8::WeakCallbackInfo"* nonnull dereferenceable(40) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #12
  %97 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %70, align 8
  %98 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %72, align 8
  %99 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %97, %98
  br i1 %99, label %100, label %85

100:                                              ; preds = %85, %67
  store i8 0, i8* %64, align 1
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #12
  br label %101

101:                                              ; preds = %61, %100
  %102 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 2
  call void @_ZN2v88internal4Heap23CallGCEpilogueCallbacksENS_6GCTypeENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %103, i32 8, i32 0) #12
  %104 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %26, align 8
  %105 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %104, null
  br i1 %105, label %122, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = load atomic i8, i8* %108 monotonic, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %122, label %111

111:                                              ; preds = %106
  %112 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %113 = load i8*, i8** %107, align 8
  %114 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::TracingController"* %112 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %119 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %119, i64 5
  %121 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %120, align 8
  call void %121(%"class.v8::TracingController"* %112, i8* %113, i8* %115, i64 %117) #12
  br label %122

122:                                              ; preds = %101, %106, %111
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #12
  call void @_ZN2v88internal4Heap23DevToolsTraceEventScopeD1Ev(%"class.v8::internal::Heap::DevToolsTraceEventScope"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret void
}

declare void @_ZN2v88internal4Heap23DevToolsTraceEventScopeC1EPS1_PKcS5_(%"class.v8::internal::Heap::DevToolsTraceEventScope"*, %"class.v8::internal::Heap"*, i8*, i8*) unnamed_addr #2

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare void @_ZN2v88internal4Heap23CallGCPrologueCallbacksENS_6GCTypeENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles32InvokeSecondPassPhantomCallbacksEv(%"class.v8::internal::GlobalHandles"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::WeakCallbackInfo", align 8
  %3 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 1, !range !6
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  store i8 1, i8* %4, align 1
  %8 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %3, %"class.v8::internal::Isolate"* %10) #12
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 0
  %12 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 1
  %14 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %13, align 8
  %15 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %12, %14
  br i1 %15, label %41, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.v8::internal::GlobalHandles"* %0 to i64*
  %18 = bitcast %"class.v8::WeakCallbackInfo"* %2 to i8*
  %19 = bitcast %"class.v8::WeakCallbackInfo"* %2 to i64*
  %20 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %2, i64 0, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %2, i64 0, i32 2
  %23 = bitcast {}*** %22 to void (%"class.v8::WeakCallbackInfo"*)***
  %24 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %2, i64 0, i32 3, i64 0
  %25 = bitcast i8** %24 to <2 x i64>*
  br label %26

26:                                               ; preds = %16, %26
  %27 = phi %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* [ %14, %16 ], [ %39, %26 ]
  %28 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %27, i64 -1
  %29 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %27, i64 -1, i32 0
  %30 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %27, i64 -1, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %27, i64 -1, i32 2
  %35 = bitcast [2 x i8*]* %34 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  store %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %28, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %13, align 8
  %37 = load i64, i64* %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #12
  store i64 %37, i64* %19, align 8
  store i64 %33, i64* %21, align 8
  store void (%"class.v8::WeakCallbackInfo"*)** null, void (%"class.v8::WeakCallbackInfo"*)*** %23, align 8
  store <2 x i64> %36, <2 x i64>* %25, align 8
  call void %30(%"class.v8::WeakCallbackInfo"* nonnull dereferenceable(40) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #12
  %38 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %11, align 8
  %39 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %13, align 8
  %40 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %38, %39
  br i1 %40, label %41, label %26

41:                                               ; preds = %26, %7
  store i8 0, i8* %4, align 1
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br label %42

42:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN2v88internal4Heap23CallGCEpilogueCallbacksENS_6GCTypeENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal4Heap23DevToolsTraceEventScopeD1Ev(%"class.v8::internal::Heap::DevToolsTraceEventScope"*) unnamed_addr #9

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles22PendingPhantomCallback6InvokeEPNS0_7IsolateENS2_14InvocationTypeE(%"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::WeakCallbackInfo", align 8
  %5 = icmp eq i32 %2, 0
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %0, i64 0, i32 0
  %7 = select i1 %5, void (%"class.v8::WeakCallbackInfo"*)** %6, void (%"class.v8::WeakCallbackInfo"*)** null
  %8 = bitcast %"class.v8::WeakCallbackInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %0, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %0, i64 0, i32 2, i64 0
  %13 = bitcast %"class.v8::WeakCallbackInfo"* %4 to %"class.v8::internal::Isolate"**
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %4, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %4, i64 0, i32 2
  %17 = bitcast {}*** %16 to void (%"class.v8::WeakCallbackInfo"*)***
  store void (%"class.v8::WeakCallbackInfo"*)** %7, void (%"class.v8::WeakCallbackInfo"*)*** %17, align 8
  %18 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %4, i64 0, i32 3, i64 0
  %19 = bitcast i8** %12 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = bitcast i8** %18 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %21, align 8
  %22 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %6, align 8
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %6, align 8
  call void %22(%"class.v8::WeakCallbackInfo"* nonnull dereferenceable(40) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED1Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13GlobalHandles22PostScavengeProcessingEj(%"class.v8::internal::GlobalHandles"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %4, %6
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 12
  br label %11

11:                                               ; preds = %8, %40
  %12 = phi i64 [ 0, %8 ], [ %41, %40 ]
  %13 = phi %"class.v8::internal::GlobalHandles::Node"** [ %4, %8 ], [ %42, %40 ]
  %14 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %14, i64 0, i32 0, i32 3
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 7
  %18 = zext i8 %17 to i32
  switch i32 %18, label %22 [
    i32 0, label %40
    i32 4, label %19
  ]

19:                                               ; preds = %11
  %20 = and i8 %16, 48
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %40

22:                                               ; preds = %11, %19
  %23 = icmp eq i8 %17, 3
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  tail call void @_ZN2v88internal13GlobalHandles4Node31PostGarbageCollectionProcessingEPNS0_7IsolateE(%"class.v8::internal::GlobalHandles::Node"* %14, %"class.v8::internal::Isolate"* %25)
  br label %26

26:                                               ; preds = %24, %22
  %27 = load i32, i32* %10, align 4
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %29, label %44

29:                                               ; preds = %26
  %30 = load i8, i8* %15, align 1
  %31 = and i8 %30, 7
  %32 = zext i8 %31 to i32
  switch i32 %32, label %39 [
    i32 0, label %33
    i32 4, label %35
  ]

33:                                               ; preds = %29
  %34 = add i64 %12, 1
  br label %40

35:                                               ; preds = %29
  %36 = and i8 %30, 48
  %37 = icmp eq i8 %36, 0
  %38 = add i64 %12, 1
  br i1 %37, label %39, label %40

39:                                               ; preds = %29, %35
  br label %40

40:                                               ; preds = %11, %19, %33, %35, %39
  %41 = phi i64 [ %34, %33 ], [ %38, %35 ], [ %12, %39 ], [ %12, %19 ], [ %12, %11 ]
  %42 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %13, i64 1
  %43 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %42, %6
  br i1 %43, label %44, label %11

44:                                               ; preds = %40, %26, %2
  %45 = phi i64 [ 0, %2 ], [ %12, %26 ], [ %41, %40 ]
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13GlobalHandles4Node31PostGarbageCollectionProcessingEPNS0_7IsolateE(%"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::WeakCallbackInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 3
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 55
  %7 = icmp eq i8 %6, 3
  br i1 %7, label %9, label %8, !prof !5

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0)) #14
  unreachable

9:                                                ; preds = %2
  %10 = and i8 %5, -8
  %11 = or i8 %10, 4
  store i8 %11, i8* %4, align 1
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 9, i32 22
  %13 = load i32, i32* %12, align 8
  store i32 6, i32* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31
  %15 = bitcast %"struct.v8::internal::HandleScopeData"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %19, align 8
  %22 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 0, i32 4
  %24 = bitcast %union.anon.1087* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::WeakCallbackInfo"* %3 to %"class.v8::internal::Isolate"**
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  store i64 %25, i64* %28, align 8
  %29 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 2
  %30 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %0, i64 0, i32 1
  %31 = bitcast {}*** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false)
  %32 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %30, align 8
  call void %32(%"class.v8::WeakCallbackInfo"* nonnull dereferenceable(40) %3) #12
  %33 = load i8, i8* %4, align 1
  %34 = and i8 %33, 7
  %35 = icmp eq i8 %34, 4
  br i1 %35, label %36, label %37, !prof !7

36:                                               ; preds = %9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #14
  unreachable

37:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #12
  %38 = icmp eq %"class.v8::internal::Isolate"* %1, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %37
  %40 = inttoptr i64 %16 to i64*
  %41 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %14, i64 0, i32 0
  %42 = load i64*, i64** %41, align 8
  store i64 %16, i64* %15, align 8
  %43 = load i32, i32* %19, align 8
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %19, align 8
  %45 = load i64*, i64** %17, align 8
  %46 = icmp eq i64* %45, %18
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  store i64* %18, i64** %17, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1) #12
  %48 = load i64*, i64** %41, align 8
  br label %49

49:                                               ; preds = %47, %39
  %50 = phi i64* [ %48, %47 ], [ %40, %39 ]
  %51 = phi i64* [ %18, %47 ], [ %42, %39 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %50, i64* %51) #12
  br label %52

52:                                               ; preds = %37, %49
  store i32 %13, i32* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13GlobalHandles13InRecursiveGCEj(%"class.v8::internal::GlobalHandles"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 4
  %5 = icmp ne i32 %4, %1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13GlobalHandles23PostMarkSweepProcessingEj(%"class.v8::internal::GlobalHandles"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !20
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %55, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 12
  br label %12

12:                                               ; preds = %9, %51
  %13 = phi i64 [ %7, %9 ], [ %52, %51 ]
  %14 = phi i64 [ 0, %9 ], [ %44, %51 ]
  %15 = phi i64 [ 0, %9 ], [ %53, %51 ]
  %16 = inttoptr i64 %13 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %17 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %16, i64 0, i32 0, i64 %15
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %16, i64 0, i32 0, i64 %15, i32 0, i32 3
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, 7
  %21 = zext i8 %20 to i32
  switch i32 %21, label %25 [
    i32 0, label %43
    i32 4, label %22
  ]

22:                                               ; preds = %12
  %23 = and i8 %19, 48
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %43

25:                                               ; preds = %12, %22
  %26 = icmp eq i8 %20, 3
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  tail call void @_ZN2v88internal13GlobalHandles4Node31PostGarbageCollectionProcessingEPNS0_7IsolateE(%"class.v8::internal::GlobalHandles::Node"* %17, %"class.v8::internal::Isolate"* %28)
  br label %29

29:                                               ; preds = %27, %25
  %30 = load i32, i32* %11, align 4
  %31 = icmp eq i32 %30, %1
  br i1 %31, label %32, label %55

32:                                               ; preds = %29
  %33 = load i8, i8* %18, align 1
  %34 = and i8 %33, 7
  %35 = zext i8 %34 to i32
  switch i32 %35, label %42 [
    i32 0, label %36
    i32 4, label %38
  ]

36:                                               ; preds = %32
  %37 = add i64 %14, 1
  br label %43

38:                                               ; preds = %32
  %39 = and i8 %33, 48
  %40 = icmp eq i8 %39, 0
  %41 = add i64 %14, 1
  br i1 %40, label %42, label %43

42:                                               ; preds = %32, %38
  br label %43

43:                                               ; preds = %12, %22, %36, %38, %42
  %44 = phi i64 [ %37, %36 ], [ %41, %38 ], [ %14, %42 ], [ %14, %22 ], [ %14, %12 ]
  %45 = add i64 %15, 1
  %46 = icmp ult i64 %45, 256
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %16, i64 0, i32 4
  %49 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %43, %47
  %52 = phi i64 [ %13, %43 ], [ %50, %47 ]
  %53 = phi i64 [ %45, %43 ], [ 0, %47 ]
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %55, label %12

55:                                               ; preds = %51, %29, %2
  %56 = phi i64 [ 0, %2 ], [ %14, %29 ], [ %44, %51 ]
  ret i64 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles22UpdateListOfYoungNodesEv(%"class.v8::internal::GlobalHandles"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_4NodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE(%"class.v8::internal::GlobalHandles"* %0, %"class.std::__1::vector.1091"* %2)
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4
  tail call void @_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_10TracedNodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE(%"class.v8::internal::GlobalHandles"* %0, %"class.std::__1::vector.1108"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_4NodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE(%"class.v8::internal::GlobalHandles"*, %"class.std::__1::vector.1091"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1091", %"class.std::__1::vector.1091"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1091", %"class.std::__1::vector.1091"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %4, %6
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %4 to i64
  %10 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %6 to i64
  %11 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %5 to i64*
  %12 = bitcast %"class.std::__1::vector.1091"* %1 to i64*
  %13 = sub i64 %10, %9
  %14 = ashr exact i64 %13, 3
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  br label %74

17:                                               ; preds = %114
  %18 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.1091"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ugt i64 %115, %23
  %25 = inttoptr i64 %21 to %"class.v8::internal::GlobalHandles::Node"**
  br i1 %24, label %26, label %28

26:                                               ; preds = %17
  %27 = sub i64 %115, %23
  tail call void @_ZNSt3__16vectorIPN2v88internal13GlobalHandles4NodeENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1091"* %1, i64 %27) #12
  br label %37

28:                                               ; preds = %8, %17
  %29 = phi %"class.v8::internal::GlobalHandles::Node"** [ %4, %8 ], [ %25, %17 ]
  %30 = phi i64 [ %14, %8 ], [ %23, %17 ]
  %31 = phi i64 [ 0, %8 ], [ %115, %17 ]
  %32 = phi i64* [ %11, %8 ], [ %18, %17 ]
  %33 = phi i64* [ %12, %8 ], [ %20, %17 ]
  %34 = icmp ult i64 %31, %30
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %29, i64 %31
  store %"class.v8::internal::GlobalHandles::Node"** %36, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  br label %37

37:                                               ; preds = %26, %28, %35
  %38 = phi i64* [ %18, %26 ], [ %32, %28 ], [ %32, %35 ]
  %39 = phi i64* [ %20, %26 ], [ %33, %28 ], [ %33, %35 ]
  %40 = getelementptr inbounds %"class.std::__1::vector.1091", %"class.std::__1::vector.1091"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %39, align 8
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 3
  %46 = load i64, i64* %38, align 8
  %47 = sub i64 %46, %43
  %48 = ashr exact i64 %47, 3
  %49 = icmp ugt i64 %45, %48
  br i1 %49, label %50, label %73

50:                                               ; preds = %37
  %51 = icmp eq i64 %47, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** null, i64 %48
  %54 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %53 to i64
  br label %67

55:                                               ; preds = %50
  %56 = icmp ugt i64 %48, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #14
  unreachable

58:                                               ; preds = %55
  %59 = tail call i8* @_Znwm(i64 %47) #13
  %60 = bitcast i8* %59 to %"class.v8::internal::GlobalHandles::Node"**
  %61 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %60, i64 %48
  %62 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %61 to i64
  %63 = ptrtoint i8* %59 to i64
  %64 = icmp sgt i64 %47, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = inttoptr i64 %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %66, i64 %47, i1 false) #12
  br label %67

67:                                               ; preds = %65, %58, %52
  %68 = phi i64 [ %63, %58 ], [ %63, %65 ], [ 0, %52 ]
  %69 = phi i64 [ %62, %58 ], [ %62, %65 ], [ %54, %52 ]
  store i64 %68, i64* %39, align 8
  store i64 %69, i64* %38, align 8
  store i64 %69, i64* %41, align 8
  %70 = icmp eq i64 %43, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = inttoptr i64 %43 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %37, %67, %71
  ret void

74:                                               ; preds = %15, %114
  %75 = phi i64 [ 0, %15 ], [ %115, %114 ]
  %76 = phi %"class.v8::internal::GlobalHandles::Node"** [ %4, %15 ], [ %116, %114 ]
  %77 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %77, i64 0, i32 0, i32 3
  %79 = load i8, i8* %78, align 1
  %80 = and i8 %79, 7
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %108, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %77, i64 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %102, label %87

87:                                               ; preds = %82
  %88 = and i64 %84, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %87
  %95 = add i64 %75, 1
  %96 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %3, align 8
  %97 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %96, i64 %75
  store %"class.v8::internal::GlobalHandles::Node"* %77, %"class.v8::internal::GlobalHandles::Node"** %97, align 8
  %98 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %98, i64 0, i32 2, i32 74
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %99, align 4
  br label %114

102:                                              ; preds = %87, %82
  %103 = and i8 %79, -9
  store i8 %103, i8* %78, align 1
  %104 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %104, i64 0, i32 2, i32 75
  %106 = load i32, i32* %105, align 8
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 8
  br label %114

108:                                              ; preds = %74
  %109 = and i8 %79, -9
  store i8 %109, i8* %78, align 1
  %110 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 2, i32 73
  %112 = load i32, i32* %111, align 8
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %111, align 8
  br label %114

114:                                              ; preds = %94, %102, %108
  %115 = phi i64 [ %95, %94 ], [ %75, %102 ], [ %75, %108 ]
  %116 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %76, i64 1
  %117 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %116, %6
  br i1 %117, label %17, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_10TracedNodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE(%"class.v8::internal::GlobalHandles"*, %"class.std::__1::vector.1108"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %4, %6
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %4 to i64
  %10 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %6 to i64
  %11 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %5 to i64*
  %12 = bitcast %"class.std::__1::vector.1108"* %1 to i64*
  %13 = sub i64 %10, %9
  %14 = ashr exact i64 %13, 3
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  br label %74

17:                                               ; preds = %114
  %18 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.1108"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ugt i64 %115, %23
  %25 = inttoptr i64 %21 to %"class.v8::internal::GlobalHandles::TracedNode"**
  br i1 %24, label %26, label %28

26:                                               ; preds = %17
  %27 = sub i64 %115, %23
  tail call void @_ZNSt3__16vectorIPN2v88internal13GlobalHandles10TracedNodeENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1108"* %1, i64 %27) #12
  br label %37

28:                                               ; preds = %8, %17
  %29 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %4, %8 ], [ %25, %17 ]
  %30 = phi i64 [ %14, %8 ], [ %23, %17 ]
  %31 = phi i64 [ 0, %8 ], [ %115, %17 ]
  %32 = phi i64* [ %11, %8 ], [ %18, %17 ]
  %33 = phi i64* [ %12, %8 ], [ %20, %17 ]
  %34 = icmp ult i64 %31, %30
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %29, i64 %31
  store %"class.v8::internal::GlobalHandles::TracedNode"** %36, %"class.v8::internal::GlobalHandles::TracedNode"*** %5, align 8
  br label %37

37:                                               ; preds = %26, %28, %35
  %38 = phi i64* [ %18, %26 ], [ %32, %28 ], [ %32, %35 ]
  %39 = phi i64* [ %20, %26 ], [ %33, %28 ], [ %33, %35 ]
  %40 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %39, align 8
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 3
  %46 = load i64, i64* %38, align 8
  %47 = sub i64 %46, %43
  %48 = ashr exact i64 %47, 3
  %49 = icmp ugt i64 %45, %48
  br i1 %49, label %50, label %73

50:                                               ; preds = %37
  %51 = icmp eq i64 %47, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** null, i64 %48
  %54 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %53 to i64
  br label %67

55:                                               ; preds = %50
  %56 = icmp ugt i64 %48, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #14
  unreachable

58:                                               ; preds = %55
  %59 = tail call i8* @_Znwm(i64 %47) #13
  %60 = bitcast i8* %59 to %"class.v8::internal::GlobalHandles::TracedNode"**
  %61 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %60, i64 %48
  %62 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %61 to i64
  %63 = ptrtoint i8* %59 to i64
  %64 = icmp sgt i64 %47, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = inttoptr i64 %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %66, i64 %47, i1 false) #12
  br label %67

67:                                               ; preds = %65, %58, %52
  %68 = phi i64 [ %63, %58 ], [ %63, %65 ], [ 0, %52 ]
  %69 = phi i64 [ %62, %58 ], [ %62, %65 ], [ %54, %52 ]
  store i64 %68, i64* %39, align 8
  store i64 %69, i64* %38, align 8
  store i64 %69, i64* %41, align 8
  %70 = icmp eq i64 %43, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = inttoptr i64 %43 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %37, %67, %71
  ret void

74:                                               ; preds = %15, %114
  %75 = phi i64 [ 0, %15 ], [ %115, %114 ]
  %76 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %4, %15 ], [ %116, %114 ]
  %77 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %77, i64 0, i32 0, i32 3
  %79 = load i8, i8* %78, align 1
  %80 = and i8 %79, 3
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %108, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %77, i64 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %102, label %87

87:                                               ; preds = %82
  %88 = and i64 %84, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %87
  %95 = add i64 %75, 1
  %96 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %3, align 8
  %97 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %96, i64 %75
  store %"class.v8::internal::GlobalHandles::TracedNode"* %77, %"class.v8::internal::GlobalHandles::TracedNode"** %97, align 8
  %98 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %98, i64 0, i32 2, i32 74
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %99, align 4
  br label %114

102:                                              ; preds = %87, %82
  %103 = and i8 %79, -5
  store i8 %103, i8* %78, align 1
  %104 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %104, i64 0, i32 2, i32 75
  %106 = load i32, i32* %105, align 8
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 8
  br label %114

108:                                              ; preds = %74
  %109 = and i8 %79, -5
  store i8 %109, i8* %78, align 1
  %110 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 2, i32 73
  %112 = load i32, i32* %111, align 8
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %111, align 8
  br label %114

114:                                              ; preds = %94, %102, %108
  %115 = phi i64 [ %95, %94 ], [ %75, %102 ], [ %75, %108 ]
  %116 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %76, i64 1
  %117 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %116, %6
  br i1 %117, label %17, label %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13GlobalHandles28InvokeFirstPassWeakCallbacksEv(%"class.v8::internal::GlobalHandles"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 7
  %3 = tail call i64 @_ZN2v88internal13GlobalHandles28InvokeFirstPassWeakCallbacksINS1_4NodeEEEmPNSt3__16vectorINS4_4pairIPT_NS1_22PendingPhantomCallbackEEENS4_9allocatorISA_EEEE(%"class.v8::internal::GlobalHandles"* %0, %"class.std::__1::vector.1121"* %2)
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 8
  %5 = tail call i64 @_ZN2v88internal13GlobalHandles28InvokeFirstPassWeakCallbacksINS1_10TracedNodeEEEmPNSt3__16vectorINS4_4pairIPT_NS1_22PendingPhantomCallbackEEENS4_9allocatorISA_EEEE(%"class.v8::internal::GlobalHandles"* %0, %"class.std::__1::vector.1129"* %4)
  %6 = add i64 %5, %3
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal13GlobalHandles28InvokeFirstPassWeakCallbacksINS1_4NodeEEEmPNSt3__16vectorINS4_4pairIPT_NS1_22PendingPhantomCallbackEEENS4_9allocatorISA_EEEE(%"class.v8::internal::GlobalHandles"*, %"class.std::__1::vector.1121"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::WeakCallbackInfo", align 8
  %4 = bitcast %"class.std::__1::vector.1121"* %1 to i64*
  %5 = getelementptr inbounds %"class.std::__1::vector.1121", %"class.std::__1::vector.1121"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1121", %"class.std::__1::vector.1121"* %1, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair.1123"* %6, %8
  %10 = bitcast %"struct.std::__1::pair.1123"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  br i1 %9, label %28, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::GlobalHandles"* %0 to i64*
  %13 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i8*
  %14 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i64*
  %15 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 2
  %18 = bitcast {}*** %17 to void (%"class.v8::WeakCallbackInfo"*)***
  %19 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %21 to i64*
  %24 = bitcast %"class.std::__1::vector.1137"* %20 to i64*
  %25 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %22 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector.1137", %"class.std::__1::vector.1137"* %20, i64 0, i32 0, i32 0
  %27 = bitcast i8** %19 to <2 x i64>*
  br label %34

28:                                               ; preds = %121, %2
  %29 = phi i64 [ 0, %2 ], [ %122, %121 ]
  %30 = icmp eq %"struct.std::__1::pair.1123"* %6, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = bitcast %"struct.std::__1::pair.1123"* %6 to i8*
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %28, %31
  ret i64 %29

34:                                               ; preds = %11, %121
  %35 = phi i64 [ 0, %11 ], [ %122, %121 ]
  %36 = phi %"struct.std::__1::pair.1123"* [ %6, %11 ], [ %123, %121 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %36, i64 0, i32 0
  %38 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %36, i64 0, i32 1
  %40 = load i64, i64* %12, align 8
  %41 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %39, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #12
  %42 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %36, i64 0, i32 1, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %36, i64 0, i32 1, i32 2, i64 0
  store i64 %40, i64* %14, align 8
  store i64 %44, i64* %16, align 8
  store void (%"class.v8::WeakCallbackInfo"*)** %41, void (%"class.v8::WeakCallbackInfo"*)*** %18, align 8
  %46 = bitcast i8** %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  store <2 x i64> %47, <2 x i64>* %27, align 8
  %48 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %41, align 8
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %41, align 8
  call void %48(%"class.v8::WeakCallbackInfo"* nonnull dereferenceable(40) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #12
  %49 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %38, i64 0, i32 0, i32 3
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, 7
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %54, label %53, !prof !5

53:                                               ; preds = %34
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.14, i64 0, i64 0)) #14
  unreachable

54:                                               ; preds = %34
  %55 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %41, align 8
  %56 = icmp eq void (%"class.v8::WeakCallbackInfo"*)* %55, null
  br i1 %56, label %121, label %57

57:                                               ; preds = %54
  %58 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %21, align 8
  %59 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %22, align 8
  %60 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58, %59
  %61 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %59 to i64
  br i1 %60, label %67, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58 to i8*
  %64 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 32, i1 false) #12
  %65 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58, i64 1
  %66 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %65 to i64
  store i64 %66, i64* %23, align 8
  br label %121

67:                                               ; preds = %57
  %68 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58 to i64
  %69 = load i64, i64* %24, align 8
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 5
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.1137"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #14
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %61, %69
  %78 = ashr exact i64 %77, 5
  %79 = icmp ult i64 %78, 288230376151711743
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = ashr exact i64 %77, 4
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 576460752303423487
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #14
  unreachable

88:                                               ; preds = %85, %76
  %89 = phi i64 [ %83, %85 ], [ 576460752303423487, %76 ]
  %90 = shl i64 %89, 5
  %91 = call i8* @_Znwm(i64 %90) #13
  %92 = bitcast i8* %91 to %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %95, i64 %71
  %97 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %95, i64 %94
  %98 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %97 to i64
  %99 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %96 to i8*
  %100 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 32, i1 false) #12
  %101 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %96, i64 1
  %102 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %101 to i64
  %103 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %26, align 8
  %104 = load i64, i64* %23, align 8
  %105 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 5
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %96, i64 %108
  %110 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %93
  %113 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %109 to i8*
  %114 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #12
  %115 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %26, align 8
  br label %116

116:                                              ; preds = %112, %93
  %117 = phi %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* [ %103, %93 ], [ %115, %112 ]
  store i64 %110, i64* %24, align 8
  store i64 %102, i64* %23, align 8
  store i64 %98, i64* %25, align 8
  %118 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %117 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %116, %62, %54
  %122 = add i64 %35, 1
  %123 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %36, i64 1
  %124 = icmp eq %"struct.std::__1::pair.1123"* %123, %8
  br i1 %124, label %28, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal13GlobalHandles28InvokeFirstPassWeakCallbacksINS1_10TracedNodeEEEmPNSt3__16vectorINS4_4pairIPT_NS1_22PendingPhantomCallbackEEENS4_9allocatorISA_EEEE(%"class.v8::internal::GlobalHandles"*, %"class.std::__1::vector.1129"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::WeakCallbackInfo", align 8
  %4 = bitcast %"class.std::__1::vector.1129"* %1 to i64*
  %5 = getelementptr inbounds %"class.std::__1::vector.1129", %"class.std::__1::vector.1129"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1129", %"class.std::__1::vector.1129"* %1, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair.1131"* %6, %8
  %10 = bitcast %"struct.std::__1::pair.1131"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  br i1 %9, label %28, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::GlobalHandles"* %0 to i64*
  %13 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i8*
  %14 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i64*
  %15 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 2
  %18 = bitcast {}*** %17 to void (%"class.v8::WeakCallbackInfo"*)***
  %19 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %21 to i64*
  %24 = bitcast %"class.std::__1::vector.1137"* %20 to i64*
  %25 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %22 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector.1137", %"class.std::__1::vector.1137"* %20, i64 0, i32 0, i32 0
  %27 = bitcast i8** %19 to <2 x i64>*
  br label %34

28:                                               ; preds = %121, %2
  %29 = phi i64 [ 0, %2 ], [ %122, %121 ]
  %30 = icmp eq %"struct.std::__1::pair.1131"* %6, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = bitcast %"struct.std::__1::pair.1131"* %6 to i8*
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %28, %31
  ret i64 %29

34:                                               ; preds = %11, %121
  %35 = phi i64 [ 0, %11 ], [ %122, %121 ]
  %36 = phi %"struct.std::__1::pair.1131"* [ %6, %11 ], [ %123, %121 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %36, i64 0, i32 0
  %38 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %36, i64 0, i32 1
  %40 = load i64, i64* %12, align 8
  %41 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %39, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #12
  %42 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %36, i64 0, i32 1, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %36, i64 0, i32 1, i32 2, i64 0
  store i64 %40, i64* %14, align 8
  store i64 %44, i64* %16, align 8
  store void (%"class.v8::WeakCallbackInfo"*)** %41, void (%"class.v8::WeakCallbackInfo"*)*** %18, align 8
  %46 = bitcast i8** %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  store <2 x i64> %47, <2 x i64>* %27, align 8
  %48 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %41, align 8
  store void (%"class.v8::WeakCallbackInfo"*)* null, void (%"class.v8::WeakCallbackInfo"*)** %41, align 8
  call void %48(%"class.v8::WeakCallbackInfo"* nonnull dereferenceable(40) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #12
  %49 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %38, i64 0, i32 0, i32 3
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, 3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %54, label %53, !prof !5

53:                                               ; preds = %34
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.14, i64 0, i64 0)) #14
  unreachable

54:                                               ; preds = %34
  %55 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %41, align 8
  %56 = icmp eq void (%"class.v8::WeakCallbackInfo"*)* %55, null
  br i1 %56, label %121, label %57

57:                                               ; preds = %54
  %58 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %21, align 8
  %59 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %22, align 8
  %60 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58, %59
  %61 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %59 to i64
  br i1 %60, label %67, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58 to i8*
  %64 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 32, i1 false) #12
  %65 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58, i64 1
  %66 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %65 to i64
  store i64 %66, i64* %23, align 8
  br label %121

67:                                               ; preds = %57
  %68 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %58 to i64
  %69 = load i64, i64* %24, align 8
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 5
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.1137"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #14
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %61, %69
  %78 = ashr exact i64 %77, 5
  %79 = icmp ult i64 %78, 288230376151711743
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = ashr exact i64 %77, 4
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 576460752303423487
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #14
  unreachable

88:                                               ; preds = %85, %76
  %89 = phi i64 [ %83, %85 ], [ 576460752303423487, %76 ]
  %90 = shl i64 %89, 5
  %91 = call i8* @_Znwm(i64 %90) #13
  %92 = bitcast i8* %91 to %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %95, i64 %71
  %97 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %95, i64 %94
  %98 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %97 to i64
  %99 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %96 to i8*
  %100 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 32, i1 false) #12
  %101 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %96, i64 1
  %102 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %101 to i64
  %103 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %26, align 8
  %104 = load i64, i64* %23, align 8
  %105 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 5
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %96, i64 %108
  %110 = ptrtoint %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %93
  %113 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %109 to i8*
  %114 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #12
  %115 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %26, align 8
  br label %116

116:                                              ; preds = %112, %93
  %117 = phi %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* [ %103, %93 ], [ %115, %112 ]
  store i64 %110, i64* %24, align 8
  store i64 %102, i64* %23, align 8
  store i64 %98, i64* %25, align 8
  %118 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %117 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %116, %62, %54
  %122 = add i64 %35, 1
  %123 = getelementptr inbounds %"struct.std::__1::pair.1131", %"struct.std::__1::pair.1131"* %36, i64 1
  %124 = icmp eq %"struct.std::__1::pair.1131"* %123, %8
  br i1 %124, label %28, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles42InvokeOrScheduleSecondPassPhantomCallbacksEb(%"class.v8::internal::GlobalHandles"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::WeakCallbackInfo", align 8
  %4 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %5 = alloca %"class.v8::internal::Heap::DevToolsTraceEventScope", align 8
  %6 = alloca %"class.std::__1::function", align 8
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 0
  %8 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 9, i32 0, i32 1
  %10 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %9, align 8
  %11 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %8, %10
  br i1 %11, label %110, label %12

12:                                               ; preds = %2
  %13 = load i8, i8* @_ZN2v88internal22FLAG_optimize_for_sizeE, align 1, !range !6
  %14 = load i8, i8* @_ZN2v88internal16FLAG_predictableE, align 1
  %15 = or i8 %14, %13
  %16 = icmp ne i8 %15, 0
  %17 = or i1 %16, %1
  br i1 %17, label %18, label %63

18:                                               ; preds = %12
  %19 = bitcast %"class.v8::internal::Heap::DevToolsTraceEventScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 2
  call void @_ZN2v88internal4Heap23DevToolsTraceEventScopeC1EPS1_PKcS5_(%"class.v8::internal::Heap::DevToolsTraceEventScope"* nonnull %5, %"class.v8::internal::Heap"* %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #12
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 2
  call void @_ZN2v88internal4Heap23CallGCPrologueCallbacksENS_6GCTypeENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %24, i32 8, i32 0) #12
  %25 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 11
  %26 = load i8, i8* %25, align 1, !range !6
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %60

28:                                               ; preds = %18
  store i8 1, i8* %25, align 1
  %29 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4, %"class.v8::internal::Isolate"* %30) #12
  %31 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %7, align 8
  %32 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %9, align 8
  %33 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %31, %32
  br i1 %33, label %59, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.v8::internal::GlobalHandles"* %0 to i64*
  %36 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i8*
  %37 = bitcast %"class.v8::WeakCallbackInfo"* %3 to i64*
  %38 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 1
  %39 = bitcast i8** %38 to i64*
  %40 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 2
  %41 = bitcast {}*** %40 to void (%"class.v8::WeakCallbackInfo"*)***
  %42 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %3, i64 0, i32 3, i64 0
  %43 = bitcast i8** %42 to <2 x i64>*
  br label %44

44:                                               ; preds = %44, %34
  %45 = phi %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* [ %32, %34 ], [ %57, %44 ]
  %46 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %45, i64 -1
  %47 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %45, i64 -1, i32 0
  %48 = load void (%"class.v8::WeakCallbackInfo"*)*, void (%"class.v8::WeakCallbackInfo"*)** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %45, i64 -1, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::GlobalHandles::PendingPhantomCallback", %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %45, i64 -1, i32 2
  %53 = bitcast [2 x i8*]* %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  store %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %46, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %9, align 8
  %55 = load i64, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #12
  store i64 %55, i64* %37, align 8
  store i64 %51, i64* %39, align 8
  store void (%"class.v8::WeakCallbackInfo"*)** null, void (%"class.v8::WeakCallbackInfo"*)*** %41, align 8
  store <2 x i64> %54, <2 x i64>* %43, align 8
  call void %48(%"class.v8::WeakCallbackInfo"* nonnull dereferenceable(40) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #12
  %56 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %7, align 8
  %57 = load %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"** %9, align 8
  %58 = icmp eq %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* %56, %57
  br i1 %58, label %59, label %44

59:                                               ; preds = %44, %28
  store i8 0, i8* %25, align 1
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb1EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  br label %60

60:                                               ; preds = %18, %59
  %61 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 2
  call void @_ZN2v88internal4Heap23CallGCEpilogueCallbacksENS_6GCTypeENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %62, i32 8, i32 0) #12
  call void @_ZN2v88internal4Heap23DevToolsTraceEventScopeD1Ev(%"class.v8::internal::Heap::DevToolsTraceEventScope"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  br label %110

63:                                               ; preds = %12
  %64 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 10
  %65 = load i8, i8* %64, align 8, !range !6
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %110

67:                                               ; preds = %63
  store i8 1, i8* %64, align 8
  %68 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #12
  %69 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %70 = bitcast %"class.v8::internal::GlobalHandles"* %0 to %"class.v8::Isolate"**
  %71 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %70, align 8
  %72 = bitcast %"class.v8::Platform"* %68 to { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)***
  %73 = load { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)**, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*** %72, align 8
  %74 = getelementptr inbounds { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)** %73, i64 6
  %75 = load { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)** %74, align 8
  %76 = tail call { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %75(%"class.v8::Platform"* %68, %"class.v8::Isolate"* %71) #12
  %77 = extractvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %76, 0
  %78 = extractvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %76, 1
  %79 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %69, align 8
  %80 = ptrtoint %"class.v8::internal::GlobalHandles"* %0 to i64
  %81 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal13GlobalHandles42InvokeOrScheduleSecondPassPhantomCallbacksEbE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %81, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal13GlobalHandles42InvokeOrScheduleSecondPassPhantomCallbacksEbE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %82, align 8
  %83 = bitcast %"class.std::__1::function"* %6 to i64*
  store i64 %80, i64* %83, align 8
  %84 = call %"class.v8::internal::CancelableTask"* @_ZN2v88internal18MakeCancelableTaskEPNS0_7IsolateENSt3__18functionIFvvEEE(%"class.v8::internal::Isolate"* %79, %"class.std::__1::function"* nonnull %6) #12
  %85 = icmp eq %"class.v8::internal::CancelableTask"* %84, null
  %86 = getelementptr inbounds %"class.v8::internal::CancelableTask", %"class.v8::internal::CancelableTask"* %84, i64 0, i32 1
  %87 = select i1 %85, %"class.v8::Task"* null, %"class.v8::Task"* %86
  %88 = bitcast %"class.v8::TaskRunner"* %77 to void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)***
  %89 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)**, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)*** %88, align 8
  %90 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)*, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)** %89, align 8
  call void %90(%"class.v8::TaskRunner"* %77, %"class.v8::Task"* %87) #12
  %91 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %82, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %91, i64 0, i32 1
  %93 = load void (i8*)*, void (i8*)** %92, align 8
  %94 = icmp eq void (i8*)* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %67
  %96 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void %93(i8* %97) #12
  br label %98

98:                                               ; preds = %67, %95
  %99 = icmp eq %"class.std::__1::__shared_weak_count"* %78, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %78, i64 0, i32 0, i32 1
  %102 = atomicrmw add i64* %101, i64 -1 acq_rel
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %78, i64 0, i32 0
  %106 = bitcast %"class.std::__1::__shared_weak_count"* %78 to void (%"class.std::__1::__shared_count"*)***
  %107 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %107, i64 2
  %109 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %108, align 8
  call void %109(%"class.std::__1::__shared_count"* %105) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %78) #12
  br label %110

110:                                              ; preds = %104, %100, %98, %63, %60, %2
  ret void
}

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

declare %"class.v8::internal::CancelableTask"* @_ZN2v88internal18MakeCancelableTaskEPNS0_7IsolateENSt3__18functionIFvvEEE(%"class.v8::internal::Isolate"*, %"class.std::__1::function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13GlobalHandles31PostGarbageCollectionProcessingENS0_16GarbageCollectorENS_15GCCallbackFlagsE(%"class.v8::internal::GlobalHandles"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 12
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 2, i32 42, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = icmp eq i32 %10, 4
  %12 = and i32 %2, 28
  %13 = icmp ne i32 %12, 0
  %14 = or i1 %13, %11
  tail call void @_ZN2v88internal13GlobalHandles42InvokeOrScheduleSecondPassPhantomCallbacksEb(%"class.v8::internal::GlobalHandles"* %0, i1 zeroext %14)
  %15 = load i32, i32* %4, align 4
  %16 = icmp eq i32 %15, %6
  br i1 %16, label %17, label %121

17:                                               ; preds = %3
  %18 = and i32 %1, -3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %61

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %23, align 8
  %25 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %22, %24
  br i1 %25, label %117, label %26

26:                                               ; preds = %20, %56
  %27 = phi i32 [ %57, %56 ], [ %6, %20 ]
  %28 = phi i64 [ %58, %56 ], [ 0, %20 ]
  %29 = phi %"class.v8::internal::GlobalHandles::Node"** [ %59, %56 ], [ %22, %20 ]
  %30 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %30, i64 0, i32 0, i32 3
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 7
  %34 = zext i8 %33 to i32
  switch i32 %34, label %38 [
    i32 0, label %56
    i32 4, label %35
  ]

35:                                               ; preds = %26
  %36 = and i8 %32, 48
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %56

38:                                               ; preds = %35, %26
  %39 = icmp eq i8 %33, 3
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  tail call void @_ZN2v88internal13GlobalHandles4Node31PostGarbageCollectionProcessingEPNS0_7IsolateE(%"class.v8::internal::GlobalHandles::Node"* %30, %"class.v8::internal::Isolate"* %41) #12
  %42 = load i32, i32* %4, align 4
  %43 = icmp eq i32 %42, %6
  br i1 %43, label %44, label %113

44:                                               ; preds = %38, %40
  %45 = phi i32 [ %42, %40 ], [ %27, %38 ]
  %46 = load i8, i8* %31, align 1
  %47 = and i8 %46, 7
  %48 = zext i8 %47 to i32
  switch i32 %48, label %55 [
    i32 0, label %49
    i32 4, label %51
  ]

49:                                               ; preds = %44
  %50 = add i64 %28, 1
  br label %56

51:                                               ; preds = %44
  %52 = and i8 %46, 48
  %53 = icmp eq i8 %52, 0
  %54 = add i64 %28, 1
  br i1 %53, label %55, label %56

55:                                               ; preds = %51, %44
  br label %56

56:                                               ; preds = %55, %51, %49, %35, %26
  %57 = phi i32 [ %45, %49 ], [ %45, %51 ], [ %45, %55 ], [ %27, %35 ], [ %27, %26 ]
  %58 = phi i64 [ %50, %49 ], [ %54, %51 ], [ %28, %55 ], [ %28, %35 ], [ %28, %26 ]
  %59 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %29, i64 1
  %60 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %59, %24
  br i1 %60, label %113, label %26

61:                                               ; preds = %17
  %62 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %63, i64 0, i32 2
  %65 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %64 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !23
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %117, label %68

68:                                               ; preds = %61, %109
  %69 = phi i32 [ %101, %109 ], [ %6, %61 ]
  %70 = phi i64 [ %110, %109 ], [ %66, %61 ]
  %71 = phi i64 [ %102, %109 ], [ 0, %61 ]
  %72 = phi i64 [ %111, %109 ], [ 0, %61 ]
  %73 = inttoptr i64 %70 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %74 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %73, i64 0, i32 0, i64 %72
  %75 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %73, i64 0, i32 0, i64 %72, i32 0, i32 3
  %76 = load i8, i8* %75, align 1
  %77 = and i8 %76, 7
  %78 = zext i8 %77 to i32
  switch i32 %78, label %82 [
    i32 0, label %100
    i32 4, label %79
  ]

79:                                               ; preds = %68
  %80 = and i8 %76, 48
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %100

82:                                               ; preds = %79, %68
  %83 = icmp eq i8 %77, 3
  br i1 %83, label %84, label %88

84:                                               ; preds = %82
  %85 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  tail call void @_ZN2v88internal13GlobalHandles4Node31PostGarbageCollectionProcessingEPNS0_7IsolateE(%"class.v8::internal::GlobalHandles::Node"* %74, %"class.v8::internal::Isolate"* %85) #12
  %86 = load i32, i32* %4, align 4
  %87 = icmp eq i32 %86, %6
  br i1 %87, label %88, label %113

88:                                               ; preds = %82, %84
  %89 = phi i32 [ %86, %84 ], [ %69, %82 ]
  %90 = load i8, i8* %75, align 1
  %91 = and i8 %90, 7
  %92 = zext i8 %91 to i32
  switch i32 %92, label %99 [
    i32 0, label %93
    i32 4, label %95
  ]

93:                                               ; preds = %88
  %94 = add i64 %71, 1
  br label %100

95:                                               ; preds = %88
  %96 = and i8 %90, 48
  %97 = icmp eq i8 %96, 0
  %98 = add i64 %71, 1
  br i1 %97, label %99, label %100

99:                                               ; preds = %95, %88
  br label %100

100:                                              ; preds = %99, %95, %93, %79, %68
  %101 = phi i32 [ %89, %93 ], [ %89, %95 ], [ %89, %99 ], [ %69, %79 ], [ %69, %68 ]
  %102 = phi i64 [ %94, %93 ], [ %98, %95 ], [ %71, %99 ], [ %71, %79 ], [ %71, %68 ]
  %103 = add i64 %72, 1
  %104 = icmp ult i64 %103, 256
  br i1 %104, label %109, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %73, i64 0, i32 4
  %107 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  br label %109

109:                                              ; preds = %105, %100
  %110 = phi i64 [ %70, %100 ], [ %108, %105 ]
  %111 = phi i64 [ %103, %100 ], [ 0, %105 ]
  %112 = icmp eq i64 %110, 0
  br i1 %112, label %113, label %68

113:                                              ; preds = %109, %84, %56, %40
  %114 = phi i32 [ %57, %56 ], [ %42, %40 ], [ %101, %109 ], [ %86, %84 ]
  %115 = phi i64 [ %58, %56 ], [ %28, %40 ], [ %102, %109 ], [ %71, %84 ]
  %116 = icmp eq i32 %114, %6
  br i1 %116, label %117, label %121

117:                                              ; preds = %61, %20, %113
  %118 = phi i64 [ %115, %113 ], [ 0, %20 ], [ 0, %61 ]
  %119 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_4NodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE(%"class.v8::internal::GlobalHandles"* %0, %"class.std::__1::vector.1091"* %119) #12
  %120 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4
  tail call void @_ZN2v88internal13GlobalHandles31UpdateAndCompactListOfYoungNodeINS1_10TracedNodeEEEvPNSt3__16vectorIPT_NS4_9allocatorIS7_EEEE(%"class.v8::internal::GlobalHandles"* %0, %"class.std::__1::vector.1108"* %120) #12
  br label %121

121:                                              ; preds = %113, %3, %117
  %122 = phi i64 [ %118, %117 ], [ 0, %3 ], [ %115, %113 ]
  ret i64 %122
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles18IterateStrongRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !26
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %12

11:                                               ; preds = %36, %2
  ret void

12:                                               ; preds = %9, %36
  %13 = phi i64 [ %7, %9 ], [ %37, %36 ]
  %14 = phi i64 [ 0, %9 ], [ %38, %36 ]
  %15 = inttoptr i64 %13 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 0, i64 %14, i32 0, i32 3
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, 7
  %19 = icmp eq i8 %18, 1
  br i1 %19, label %20, label %29

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 0, i64 %14, i32 0, i32 4
  %22 = bitcast %union.anon.1087* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 0, i64 %14, i32 0
  %25 = ptrtoint %"class.v8::internal::NodeBase"* %24 to i64
  %26 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %10, align 8
  %27 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %26, i64 3
  %28 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %27, align 8
  tail call void %28(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* %23, i64 %25) #12
  br label %29

29:                                               ; preds = %20, %12
  %30 = add i64 %14, 1
  %31 = icmp ult i64 %30, 256
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %15, i64 0, i32 4
  %34 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %29, %32
  %37 = phi i64 [ %13, %29 ], [ %35, %32 ]
  %38 = phi i64 [ %30, %29 ], [ 0, %32 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles23IterateStrongStackRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %55, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %11

11:                                               ; preds = %52, %9
  %12 = phi %"class.std::__1::__tree_end_node"* [ %6, %9 ], [ %53, %52 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 5
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %14, i64 0, i32 0, i32 3
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 3
  %18 = icmp eq i8 %17, 1
  br i1 %18, label %19, label %24

19:                                               ; preds = %11
  %20 = ptrtoint %"class.std::__1::__tree_end_node"* %13 to i64
  %21 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %10, align 8
  %22 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %21, i64 3
  %23 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %22, align 8
  tail call void %23(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 %20) #12
  br label %24

24:                                               ; preds = %19, %11
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 1, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_end_node"**
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %29
  br i1 %35, label %52, label %43

36:                                               ; preds = %24, %36
  %37 = phi %"class.std::__1::__tree_node_base"* [ %39, %36 ], [ %26, %24 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %36

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 0
  br label %52

43:                                               ; preds = %28, %43
  %44 = phi %"class.std::__1::__tree_end_node"** [ %47, %43 ], [ %31, %28 ]
  %45 = bitcast %"class.std::__1::__tree_end_node"** %44 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 2
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, %46
  br i1 %51, label %52, label %43

52:                                               ; preds = %43, %41, %28
  %53 = phi %"class.std::__1::__tree_end_node"* [ %42, %41 ], [ %32, %28 ], [ %48, %43 ]
  %54 = icmp eq %"class.std::__1::__tree_end_node"* %53, %7
  br i1 %54, label %55, label %11

55:                                               ; preds = %52, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles16IterateWeakRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !29
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %20

11:                                               ; preds = %41, %2
  %12 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %13, i64 0, i32 2
  %15 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !32
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %46

20:                                               ; preds = %9, %41
  %21 = phi i64 [ %7, %9 ], [ %42, %41 ]
  %22 = phi i64 [ 0, %9 ], [ %43, %41 ]
  %23 = inttoptr i64 %21 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %24 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 0, i64 %22, i32 0, i32 3
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 7
  %27 = icmp eq i8 %26, 2
  br i1 %27, label %28, label %34

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 0, i64 %22, i32 0
  %30 = ptrtoint %"class.v8::internal::NodeBase"* %29 to i64
  %31 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %10, align 8
  %32 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %31, i64 3
  %33 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %32, align 8
  tail call void %33(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %30) #12
  br label %34

34:                                               ; preds = %28, %20
  %35 = add i64 %22, 1
  %36 = icmp ult i64 %35, 256
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 4
  %39 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  br label %41

41:                                               ; preds = %34, %37
  %42 = phi i64 [ %21, %34 ], [ %40, %37 ]
  %43 = phi i64 [ %35, %34 ], [ 0, %37 ]
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %11, label %20

45:                                               ; preds = %67, %11
  ret void

46:                                               ; preds = %18, %67
  %47 = phi i64 [ %16, %18 ], [ %69, %67 ]
  %48 = phi i64 [ 0, %18 ], [ %68, %67 ]
  %49 = inttoptr i64 %47 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"*
  %50 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %49, i64 0, i32 0, i64 %48, i32 0, i32 3
  %51 = load i8, i8* %50, align 1
  %52 = and i8 %51, 3
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %49, i64 0, i32 0, i64 %48, i32 0
  %56 = ptrtoint %"class.v8::internal::NodeBase.1103"* %55 to i64
  %57 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %19, align 8
  %58 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %57, i64 3
  %59 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %58, align 8
  tail call void %59(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %56) #12
  br label %60

60:                                               ; preds = %46, %54
  %61 = add i64 %48, 1
  %62 = icmp ult i64 %61, 256
  br i1 %62, label %67, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %49, i64 0, i32 4
  %65 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  br label %67

67:                                               ; preds = %60, %63
  %68 = phi i64 [ %61, %60 ], [ 0, %63 ]
  %69 = phi i64 [ %47, %60 ], [ %66, %63 ]
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %45, label %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles15IterateAllRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !35
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %20

11:                                               ; preds = %51, %2
  %12 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %13, i64 0, i32 2
  %15 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !38
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %55, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %109

20:                                               ; preds = %9, %51
  %21 = phi i64 [ %7, %9 ], [ %52, %51 ]
  %22 = phi i64 [ 0, %9 ], [ %53, %51 ]
  %23 = inttoptr i64 %21 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %24 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 0, i64 %22
  %25 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 0, i64 %22, i32 0, i32 3
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 7
  %28 = zext i8 %27 to i32
  switch i32 %28, label %32 [
    i32 0, label %44
    i32 4, label %29
  ]

29:                                               ; preds = %20
  %30 = and i8 %26, 48
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %20, %29
  %33 = icmp eq i8 %27, 1
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 0, i64 %22, i32 0, i32 4
  %36 = bitcast %union.anon.1087* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i8* [ %37, %34 ], [ null, %32 ]
  %40 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %24 to i64
  %41 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %10, align 8
  %42 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %41, i64 3
  %43 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %42, align 8
  tail call void %43(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* %39, i64 %40) #12
  br label %44

44:                                               ; preds = %20, %38, %29
  %45 = add i64 %22, 1
  %46 = icmp ult i64 %45, 256
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 4
  %49 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %44, %47
  %52 = phi i64 [ %21, %44 ], [ %50, %47 ]
  %53 = phi i64 [ %45, %44 ], [ 0, %47 ]
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %11, label %20

55:                                               ; preds = %130, %11
  %56 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %57 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %59, %60
  br i1 %61, label %108, label %62

62:                                               ; preds = %55
  %63 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %64

64:                                               ; preds = %105, %62
  %65 = phi %"class.std::__1::__tree_end_node"* [ %59, %62 ], [ %106, %105 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 5
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %68 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %67, i64 0, i32 0, i32 3
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, 3
  %71 = icmp eq i8 %70, 1
  br i1 %71, label %72, label %77

72:                                               ; preds = %64
  %73 = ptrtoint %"class.std::__1::__tree_end_node"* %66 to i64
  %74 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %63, align 8
  %75 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %74, i64 3
  %76 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %75, align 8
  tail call void %76(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 %73) #12
  br label %77

77:                                               ; preds = %72, %64
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 1, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 2
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_end_node"**
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, %82
  br i1 %88, label %105, label %96

89:                                               ; preds = %77, %89
  %90 = phi %"class.std::__1::__tree_node_base"* [ %92, %89 ], [ %79, %77 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %89

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0
  br label %105

96:                                               ; preds = %81, %96
  %97 = phi %"class.std::__1::__tree_end_node"** [ %100, %96 ], [ %84, %81 ]
  %98 = bitcast %"class.std::__1::__tree_end_node"** %97 to %"class.std::__1::__tree_node_base"**
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  br i1 %104, label %105, label %96

105:                                              ; preds = %96, %94, %81
  %106 = phi %"class.std::__1::__tree_end_node"* [ %95, %94 ], [ %85, %81 ], [ %101, %96 ]
  %107 = icmp eq %"class.std::__1::__tree_end_node"* %106, %60
  br i1 %107, label %108, label %64

108:                                              ; preds = %105, %55
  ret void

109:                                              ; preds = %18, %130
  %110 = phi i64 [ %16, %18 ], [ %132, %130 ]
  %111 = phi i64 [ 0, %18 ], [ %131, %130 ]
  %112 = inttoptr i64 %110 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"*
  %113 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %112, i64 0, i32 0, i64 %111, i32 0, i32 3
  %114 = load i8, i8* %113, align 1
  %115 = and i8 %114, 3
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %123

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %112, i64 0, i32 0, i64 %111, i32 0
  %119 = ptrtoint %"class.v8::internal::NodeBase.1103"* %118 to i64
  %120 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %19, align 8
  %121 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %120, i64 3
  %122 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %121, align 8
  tail call void %122(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %119) #12
  br label %123

123:                                              ; preds = %117, %109
  %124 = add i64 %111, 1
  %125 = icmp ult i64 %124, 256
  br i1 %125, label %130, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %112, i64 0, i32 4
  %128 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  br label %130

130:                                              ; preds = %123, %126
  %131 = phi i64 [ %124, %123 ], [ 0, %126 ]
  %132 = phi i64 [ %110, %123 ], [ %129, %126 ]
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %55, label %109
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles20IterateAllYoungRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %18

10:                                               ; preds = %40, %2
  %11 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %13, align 8
  %15 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %12, %14
  br i1 %15, label %43, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %97

18:                                               ; preds = %8, %40
  %19 = phi %"class.v8::internal::GlobalHandles::Node"** [ %4, %8 ], [ %41, %40 ]
  %20 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 3
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 7
  %24 = zext i8 %23 to i32
  switch i32 %24, label %28 [
    i32 0, label %40
    i32 4, label %25
  ]

25:                                               ; preds = %18
  %26 = and i8 %22, 48
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %18, %25
  %29 = icmp eq i8 %23, 1
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %20, i64 0, i32 0, i32 4
  %32 = bitcast %union.anon.1087* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %28, %30
  %35 = phi i8* [ %33, %30 ], [ null, %28 ]
  %36 = ptrtoint %"class.v8::internal::GlobalHandles::Node"* %20 to i64
  %37 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %9, align 8
  %38 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %37, i64 3
  %39 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %38, align 8
  tail call void %39(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* %35, i64 %36) #12
  br label %40

40:                                               ; preds = %18, %34, %25
  %41 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %19, i64 1
  %42 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %41, %6
  br i1 %42, label %10, label %18

43:                                               ; preds = %109, %10
  %44 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %45 = load %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"*, %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace", %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %47, %48
  br i1 %49, label %96, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %52

52:                                               ; preds = %93, %50
  %53 = phi %"class.std::__1::__tree_end_node"* [ %47, %50 ], [ %94, %93 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 5
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.v8::internal::GlobalHandles::TracedNode"*
  %56 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %55, i64 0, i32 0, i32 3
  %57 = load i8, i8* %56, align 1
  %58 = and i8 %57, 3
  %59 = icmp eq i8 %58, 1
  br i1 %59, label %60, label %65

60:                                               ; preds = %52
  %61 = ptrtoint %"class.std::__1::__tree_end_node"* %54 to i64
  %62 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %51, align 8
  %63 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %62, i64 3
  %64 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %63, align 8
  tail call void %64(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 %61) #12
  br label %65

65:                                               ; preds = %60, %52
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 1, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %77

69:                                               ; preds = %65
  %70 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 2
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_end_node"**
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, %70
  br i1 %76, label %93, label %84

77:                                               ; preds = %65, %77
  %78 = phi %"class.std::__1::__tree_node_base"* [ %80, %77 ], [ %67, %65 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %82, label %77

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %78, i64 0, i32 0
  br label %93

84:                                               ; preds = %69, %84
  %85 = phi %"class.std::__1::__tree_end_node"** [ %88, %84 ], [ %72, %69 ]
  %86 = bitcast %"class.std::__1::__tree_end_node"** %85 to %"class.std::__1::__tree_node_base"**
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 2
  %89 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, %87
  br i1 %92, label %93, label %84

93:                                               ; preds = %84, %82, %69
  %94 = phi %"class.std::__1::__tree_end_node"* [ %83, %82 ], [ %73, %69 ], [ %89, %84 ]
  %95 = icmp eq %"class.std::__1::__tree_end_node"* %94, %48
  br i1 %95, label %96, label %52

96:                                               ; preds = %93, %43
  ret void

97:                                               ; preds = %16, %109
  %98 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %12, %16 ], [ %110, %109 ]
  %99 = load %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode", %"class.v8::internal::GlobalHandles::TracedNode"* %99, i64 0, i32 0, i32 3
  %101 = load i8, i8* %100, align 1
  %102 = and i8 %101, 3
  %103 = icmp eq i8 %102, 1
  br i1 %103, label %104, label %109

104:                                              ; preds = %97
  %105 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"* %99 to i64
  %106 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %17, align 8
  %107 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %106, i64 3
  %108 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %107, align 8
  tail call void %108(%"class.v8::internal::RootVisitor"* %1, i32 12, i8* null, i64 %105) #12
  br label %109

109:                                              ; preds = %104, %97
  %110 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %98, i64 1
  %111 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %110, %14
  br i1 %111, label %43, label %97
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles28ApplyPersistentHandleVisitorEPNS_23PersistentHandleVisitorEPNS1_4NodeE(%"class.v8::internal::GlobalHandles"* nocapture readnone, %"class.v8::PersistentHandleVisitor"*, %"class.v8::internal::GlobalHandles::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Value"*, align 8
  %5 = bitcast %"class.v8::Value"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = bitcast %"class.v8::Value"** %4 to %"class.v8::internal::GlobalHandles::Node"**
  store %"class.v8::internal::GlobalHandles::Node"* %2, %"class.v8::internal::GlobalHandles::Node"** %6, align 8
  %7 = bitcast %"class.v8::Value"** %4 to %"class.v8::Persistent"*
  %8 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %2, i64 0, i32 0, i32 1
  %9 = load i16, i16* %8, align 8
  %10 = bitcast %"class.v8::PersistentHandleVisitor"* %1 to void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)***
  %11 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)**, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %11, i64 2
  %13 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %12, align 8
  call void %13(%"class.v8::PersistentHandleVisitor"* %1, %"class.v8::Persistent"* nonnull %7, i16 zeroext %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles27IterateAllRootsWithClassIdsEPNS_23PersistentHandleVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::PersistentHandleVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::Value"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %5, i64 0, i32 2
  %7 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !41
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::Value"** %3 to i8*
  %12 = bitcast %"class.v8::Value"** %3 to %"class.v8::internal::GlobalHandles::Node"**
  %13 = bitcast %"class.v8::Value"** %3 to %"class.v8::Persistent"*
  %14 = bitcast %"class.v8::PersistentHandleVisitor"* %1 to void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)***
  br label %16

15:                                               ; preds = %44, %2
  ret void

16:                                               ; preds = %10, %44
  %17 = phi i64 [ %8, %10 ], [ %45, %44 ]
  %18 = phi i64 [ 0, %10 ], [ %46, %44 ]
  %19 = inttoptr i64 %17 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %20 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %19, i64 0, i32 0, i64 %18
  %21 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %19, i64 0, i32 0, i64 %18, i32 0, i32 3
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 7
  %24 = zext i8 %23 to i32
  switch i32 %24, label %28 [
    i32 0, label %37
    i32 4, label %25
  ]

25:                                               ; preds = %16
  %26 = and i8 %22, 48
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %16, %25
  %29 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %19, i64 0, i32 0, i64 %18, i32 0, i32 1
  %30 = load i16, i16* %29, align 8
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  store %"class.v8::internal::GlobalHandles::Node"* %20, %"class.v8::internal::GlobalHandles::Node"** %12, align 8
  %33 = load i16, i16* %29, align 8
  %34 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)**, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*** %14, align 8
  %35 = getelementptr inbounds void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %34, i64 2
  %36 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %35, align 8
  call void %36(%"class.v8::PersistentHandleVisitor"* %1, %"class.v8::Persistent"* nonnull %13, i16 zeroext %33) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %37

37:                                               ; preds = %28, %16, %32, %25
  %38 = add i64 %18, 1
  %39 = icmp ult i64 %38, 256
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %19, i64 0, i32 4
  %42 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %37, %40
  %45 = phi i64 [ %17, %37 ], [ %43, %40 ]
  %46 = phi i64 [ %38, %37 ], [ 0, %40 ]
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles18IterateTracedNodesEPNS_18EmbedderHeapTracer25TracedGlobalHandleVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::Value"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::GlobalHandles::NodeSpace.1101"*, %"class.v8::internal::GlobalHandles::NodeSpace.1101"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace.1101", %"class.v8::internal::GlobalHandles::NodeSpace.1101"* %5, i64 0, i32 2
  %7 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !44
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::Value"** %3 to i8*
  %12 = bitcast %"class.v8::Value"** %3 to i64**
  %13 = bitcast %"class.v8::Value"** %3 to %"class.v8::TracedGlobal"*
  %14 = bitcast %"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"* %1 to void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedGlobal"*)***
  %15 = bitcast %"class.v8::Value"** %3 to %"class.v8::TracedReference"*
  %16 = bitcast %"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"* %1 to void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedReference"*)***
  br label %18

17:                                               ; preds = %47, %2
  ret void

18:                                               ; preds = %10, %47
  %19 = phi i64 [ %8, %10 ], [ %48, %47 ]
  %20 = phi i64 [ 0, %10 ], [ %49, %47 ]
  %21 = inttoptr i64 %19 to %"class.v8::internal::GlobalHandles::NodeBlock.1102"*
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %21, i64 0, i32 0, i64 %20, i32 0, i32 3
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %27 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %21, i64 0, i32 0, i64 %20, i32 0, i32 0
  store i64* %27, i64** %12, align 8
  %28 = load i8, i8* %22, align 1
  %29 = and i8 %28, 16
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = load void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedGlobal"*)**, void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedGlobal"*)*** %14, align 8
  %33 = getelementptr inbounds void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedGlobal"*)*, void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedGlobal"*)** %32, i64 2
  %34 = load void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedGlobal"*)*, void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedGlobal"*)** %33, align 8
  call void %34(%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"* %1, %"class.v8::TracedGlobal"* nonnull dereferenceable(8) %13) #12
  br label %39

35:                                               ; preds = %26
  %36 = load void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedReference"*)**, void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedReference"*)*** %16, align 8
  %37 = getelementptr inbounds void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedReference"*)*, void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedReference"*)** %36, i64 3
  %38 = load void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedReference"*)*, void (%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"*, %"class.v8::TracedReference"*)** %37, align 8
  call void %38(%"class.v8::EmbedderHeapTracer::TracedGlobalHandleVisitor"* %1, %"class.v8::TracedReference"* nonnull dereferenceable(8) %15) #12
  br label %39

39:                                               ; preds = %35, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %40

40:                                               ; preds = %18, %39
  %41 = add i64 %20, 1
  %42 = icmp ult i64 %41, 256
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock.1102", %"class.v8::internal::GlobalHandles::NodeBlock.1102"* %21, i64 0, i32 4
  %45 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock.1102"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %19, %40 ], [ %46, %43 ]
  %49 = phi i64 [ %41, %40 ], [ 0, %43 ]
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles32IterateAllYoungRootsWithClassIdsEPNS_23PersistentHandleVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::PersistentHandleVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::Value"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Value"** %3 to i8*
  %11 = bitcast %"class.v8::Value"** %3 to %"class.v8::internal::GlobalHandles::Node"**
  %12 = bitcast %"class.v8::Value"** %3 to %"class.v8::Persistent"*
  %13 = bitcast %"class.v8::PersistentHandleVisitor"* %1 to void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)***
  br label %15

14:                                               ; preds = %33, %2
  ret void

15:                                               ; preds = %9, %33
  %16 = phi %"class.v8::internal::GlobalHandles::Node"** [ %5, %9 ], [ %34, %33 ]
  %17 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %17, i64 0, i32 0, i32 3
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, 7
  %21 = zext i8 %20 to i32
  switch i32 %21, label %25 [
    i32 0, label %33
    i32 4, label %22
  ]

22:                                               ; preds = %15
  %23 = and i8 %19, 48
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %15, %22
  %26 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %17, i64 0, i32 0, i32 1
  %27 = load i16, i16* %26, align 8
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  store %"class.v8::internal::GlobalHandles::Node"* %17, %"class.v8::internal::GlobalHandles::Node"** %11, align 8
  %30 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)**, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*** %13, align 8
  %31 = getelementptr inbounds void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %30, i64 2
  %32 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %31, align 8
  call void %32(%"class.v8::PersistentHandleVisitor"* %1, %"class.v8::Persistent"* nonnull %12, i16 zeroext %27) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  br label %33

33:                                               ; preds = %25, %15, %29, %22
  %34 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %16, i64 1
  %35 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %34, %7
  br i1 %35, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles33IterateYoungWeakRootsWithClassIdsEPNS_23PersistentHandleVisitorE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::PersistentHandleVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::Value"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Value"** %3 to i8*
  %11 = bitcast %"class.v8::Value"** %3 to %"class.v8::internal::GlobalHandles::Node"**
  %12 = bitcast %"class.v8::Value"** %3 to %"class.v8::Persistent"*
  %13 = bitcast %"class.v8::PersistentHandleVisitor"* %1 to void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)***
  br label %15

14:                                               ; preds = %30, %2
  ret void

15:                                               ; preds = %9, %30
  %16 = phi %"class.v8::internal::GlobalHandles::Node"** [ %5, %9 ], [ %31, %30 ]
  %17 = load %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %17, i64 0, i32 0, i32 1
  %19 = load i16, i16* %18, align 8
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node", %"class.v8::internal::GlobalHandles::Node"* %17, i64 0, i32 0, i32 3
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 7
  %25 = icmp eq i8 %24, 2
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  store %"class.v8::internal::GlobalHandles::Node"* %17, %"class.v8::internal::GlobalHandles::Node"** %11, align 8
  %27 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)**, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*** %13, align 8
  %28 = getelementptr inbounds void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %27, i64 2
  %29 = load void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)*, void (%"class.v8::PersistentHandleVisitor"*, %"class.v8::Persistent"*, i16)** %28, align 8
  call void %29(%"class.v8::PersistentHandleVisitor"* %1, %"class.v8::Persistent"* nonnull %12, i16 zeroext %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  br label %30

30:                                               ; preds = %15, %26, %21
  %31 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %16, i64 1
  %32 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %31, %7
  br i1 %32, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13GlobalHandles11RecordStatsEPNS0_9HeapStatsE(%"class.v8::internal::GlobalHandles"* nocapture readonly, %"class.v8::internal::HeapStats"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HeapStats", %"class.v8::internal::HeapStats"* %1, i64 0, i32 13
  %4 = load i64*, i64** %3, align 8
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::HeapStats", %"class.v8::internal::HeapStats"* %1, i64 0, i32 14
  %6 = load i64*, i64** %5, align 8
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::HeapStats", %"class.v8::internal::HeapStats"* %1, i64 0, i32 15
  %8 = load i64*, i64** %7, align 8
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::HeapStats", %"class.v8::internal::HeapStats"* %1, i64 0, i32 16
  %10 = load i64*, i64** %9, align 8
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::HeapStats", %"class.v8::internal::HeapStats"* %1, i64 0, i32 17
  %12 = load i64*, i64** %11, align 8
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::GlobalHandles", %"class.v8::internal::GlobalHandles"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::GlobalHandles::NodeSpace"*, %"class.v8::internal::GlobalHandles::NodeSpace"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeSpace", %"class.v8::internal::GlobalHandles::NodeSpace"* %14, i64 0, i32 2
  %16 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !47
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %46, %2
  ret void

20:                                               ; preds = %2, %46
  %21 = phi i64 [ %47, %46 ], [ %17, %2 ]
  %22 = phi i64 [ %48, %46 ], [ 0, %2 ]
  %23 = inttoptr i64 %21 to %"class.v8::internal::GlobalHandles::NodeBlock"*
  %24 = load i64*, i64** %3, align 8
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 1
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 0, i64 %22, i32 0, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 7
  %30 = zext i8 %29 to i32
  switch i32 %30, label %39 [
    i32 2, label %34
    i32 3, label %31
    i32 4, label %32
    i32 0, label %33
  ]

31:                                               ; preds = %20
  br label %34

32:                                               ; preds = %20
  br label %34

33:                                               ; preds = %20
  br label %34

34:                                               ; preds = %20, %32, %33, %31
  %35 = phi i64** [ %9, %32 ], [ %11, %33 ], [ %7, %31 ], [ %5, %20 ]
  %36 = load i64*, i64** %35, align 8
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %36, align 8
  br label %39

39:                                               ; preds = %34, %20
  %40 = add i64 %22, 1
  %41 = icmp ult i64 %40, 256
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.v8::internal::GlobalHandles::NodeBlock", %"class.v8::internal::GlobalHandles::NodeBlock"* %23, i64 0, i32 4
  %44 = bitcast %"class.v8::internal::GlobalHandles::NodeBlock"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %42
  %47 = phi i64 [ %21, %39 ], [ %45, %42 ]
  %48 = phi i64 [ %40, %39 ], [ 0, %42 ]
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14EternalHandlesD2Ev(%"class.v8::internal::EternalHandles"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64**, i64*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64**, i64*** %4, align 8
  %6 = icmp eq i64** %3, %5
  br i1 %6, label %7, label %24

7:                                                ; preds = %30, %1
  %8 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = ptrtoint i32* %9 to i64
  %13 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast i32* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %7, %11
  %17 = load i64**, i64*** %2, align 8
  %18 = icmp eq i64** %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = ptrtoint i64** %17 to i64
  %21 = bitcast i64*** %4 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast i64** %17 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %16, %19
  ret void

24:                                               ; preds = %1, %30
  %25 = phi i64** [ %31, %30 ], [ %3, %1 ]
  %26 = load i64*, i64** %25, align 8
  %27 = icmp eq i64* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast i64* %26 to i8*
  tail call void @_ZdaPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds i64*, i64** %25, i64 1
  %32 = icmp eq i64** %31, %5
  br i1 %32, label %7, label %24
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14EternalHandles15IterateAllRootsEPNS0_11RootVisitorE(%"class.v8::internal::EternalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64**, i64*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i64**, i64*** %5, align 8
  %7 = icmp eq i64** %4, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  br label %13

12:                                               ; preds = %13, %2
  ret void

13:                                               ; preds = %8, %13
  %14 = phi i32 [ %10, %8 ], [ %26, %13 ]
  %15 = phi i64** [ %4, %8 ], [ %27, %13 ]
  %16 = load i64*, i64** %15, align 8
  %17 = ptrtoint i64* %16 to i64
  %18 = icmp slt i32 %14, 256
  %19 = select i1 %18, i32 %14, i32 256
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i64, i64* %16, i64 %20
  %22 = ptrtoint i64* %21 to i64
  %23 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %11, align 8
  %24 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %23, i64 2
  %25 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %24, align 8
  call void %25(%"class.v8::internal::RootVisitor"* %1, i32 13, i8* null, i64 %17, i64 %22) #12
  %26 = add nsw i32 %14, -256
  %27 = getelementptr inbounds i64*, i64** %15, i64 1
  %28 = icmp eq i64** %27, %6
  br i1 %28, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14EternalHandles17IterateYoungRootsEPNS0_11RootVisitorE(%"class.v8::internal::EternalHandles"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.v8::internal::RootVisitor"* %1 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  br label %12

11:                                               ; preds = %12, %2
  ret void

12:                                               ; preds = %8, %12
  %13 = phi i32* [ %4, %8 ], [ %27, %12 ]
  %14 = load i32, i32* %13, align 4
  %15 = ashr i32 %14, 8
  %16 = sext i32 %15 to i64
  %17 = load i64**, i64*** %9, align 8
  %18 = getelementptr inbounds i64*, i64** %17, i64 %16
  %19 = load i64*, i64** %18, align 8
  %20 = and i32 %14, 255
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i64, i64* %19, i64 %21
  %23 = ptrtoint i64* %22 to i64
  %24 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %10, align 8
  %25 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %24, i64 3
  %26 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %25, align 8
  tail call void %26(%"class.v8::internal::RootVisitor"* %1, i32 13, i8* null, i64 %23) #12
  %27 = getelementptr inbounds i32, i32* %13, i64 1
  %28 = icmp eq i32* %27, %6
  br i1 %28, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14EternalHandles31PostGarbageCollectionProcessingEv(%"class.v8::internal::EternalHandles"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.767", %"class.std::__1::vector.767"* %2, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = ptrtoint i32* %4 to i64
  %10 = ptrtoint i32* %6 to i64
  %11 = sub i64 %10, %9
  %12 = ashr exact i64 %11, 2
  br label %26

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 0
  br label %34

15:                                               ; preds = %60
  %16 = bitcast i32** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.767"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 2
  %22 = icmp ugt i64 %61, %21
  %23 = inttoptr i64 %19 to i32*
  br i1 %22, label %24, label %26

24:                                               ; preds = %15
  %25 = sub i64 %61, %21
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.767"* %2, i64 %25) #12
  br label %33

26:                                               ; preds = %8, %15
  %27 = phi i32* [ %4, %8 ], [ %23, %15 ]
  %28 = phi i64 [ %12, %8 ], [ %21, %15 ]
  %29 = phi i64 [ 0, %8 ], [ %61, %15 ]
  %30 = icmp ult i64 %29, %28
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = getelementptr inbounds i32, i32* %27, i64 %29
  store i32* %32, i32** %5, align 8
  br label %33

33:                                               ; preds = %24, %26, %31
  ret void

34:                                               ; preds = %13, %60
  %35 = phi i64 [ 0, %13 ], [ %61, %60 ]
  %36 = phi i32* [ %4, %13 ], [ %62, %60 ]
  %37 = load i32, i32* %36, align 4
  %38 = ashr i32 %37, 8
  %39 = sext i32 %38 to i64
  %40 = load i64**, i64*** %14, align 8
  %41 = getelementptr inbounds i64*, i64** %40, i64 %39
  %42 = load i64*, i64** %41, align 8
  %43 = and i32 %37, 255
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i64, i64* %42, i64 %44
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %34
  %50 = and i64 %46, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = add i64 %35, 1
  %58 = load i32*, i32** %3, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %35
  store i32 %37, i32* %59, align 4
  br label %60

60:                                               ; preds = %49, %34, %56
  %61 = phi i64 [ %57, %56 ], [ %35, %49 ], [ %35, %34 ]
  %62 = getelementptr inbounds i32, i32* %36, i64 1
  %63 = icmp eq i32* %62, %6
  br i1 %63, label %15, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14EternalHandles6CreateEPNS0_7IsolateENS0_6ObjectEPi(%"class.v8::internal::EternalHandles"*, %"class.v8::internal::Isolate"*, i64, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = trunc i64 %2 to i32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %179, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = ashr i32 %9, 8
  %11 = and i32 %9, 255
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %89

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %15 = load i64, i64* %14, align 8
  %16 = tail call i8* @_Znam(i64 2048) #13
  %17 = bitcast i8* %16 to i64*
  %18 = ptrtoint i8* %16 to i64
  %19 = tail call { i64, i64* } asm sideeffect "cld;rep ; stosq", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %15, i64 256, i64* nonnull %17) #12, !srcloc !50
  %20 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 1
  %22 = load i64**, i64*** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = load i64**, i64*** %23, align 8
  %25 = icmp eq i64** %22, %24
  %26 = ptrtoint i64** %24 to i64
  br i1 %25, label %32, label %27

27:                                               ; preds = %13
  %28 = bitcast i64** %22 to i64*
  store i64 %18, i64* %28, align 8
  %29 = getelementptr inbounds i64*, i64** %22, i64 1
  %30 = ptrtoint i64** %29 to i64
  %31 = bitcast i64*** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %89

32:                                               ; preds = %13
  %33 = ptrtoint i64** %22 to i64
  %34 = bitcast i64*** %21 to i64*
  %35 = bitcast %"class.std::__1::vector.760"* %20 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::vector.760"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #14
  unreachable

43:                                               ; preds = %32
  %44 = bitcast i64*** %23 to i64*
  %45 = sub i64 %26, %36
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %46, 1152921504606846975
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 2
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %53, %43
  %57 = phi i64 [ %51, %53 ], [ 2305843009213693951, %43 ]
  %58 = shl i64 %57, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to i64**
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi i64** [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds i64*, i64** %63, i64 %38
  %65 = getelementptr inbounds i64*, i64** %63, i64 %62
  %66 = ptrtoint i64** %65 to i64
  %67 = bitcast i64** %64 to i64*
  store i64 %18, i64* %67, align 8
  %68 = getelementptr inbounds i64*, i64** %64, i64 1
  %69 = ptrtoint i64** %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.760", %"class.std::__1::vector.760"* %20, i64 0, i32 0, i32 0
  %71 = load i64**, i64*** %70, align 8
  %72 = load i64, i64* %34, align 8
  %73 = ptrtoint i64** %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds i64*, i64** %64, i64 %76
  %78 = ptrtoint i64** %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %61
  %81 = bitcast i64** %77 to i8*
  %82 = bitcast i64** %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %74, i1 false) #12
  %83 = load i64**, i64*** %70, align 8
  br label %84

84:                                               ; preds = %80, %61
  %85 = phi i64** [ %71, %61 ], [ %83, %80 ]
  store i64 %78, i64* %35, align 8
  store i64 %69, i64* %34, align 8
  store i64 %66, i64* %44, align 8
  %86 = icmp eq i64** %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = bitcast i64** %85 to i8*
  tail call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %87, %84, %27, %7
  %90 = sext i32 %10 to i64
  %91 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 1, i32 0, i32 0
  %92 = load i64**, i64*** %91, align 8
  %93 = getelementptr inbounds i64*, i64** %92, i64 %90
  %94 = load i64*, i64** %93, align 8
  %95 = zext i32 %11 to i64
  %96 = getelementptr inbounds i64, i64* %94, i64 %95
  store i64 %2, i64* %96, align 8
  %97 = and i64 %2, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %176, label %99

99:                                               ; preds = %89
  %100 = and i64 %2, -262144
  %101 = or i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 24
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %176, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2
  %108 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2, i32 0, i32 1
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::EternalHandles", %"class.v8::internal::EternalHandles"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = icmp eq i32* %109, %111
  %113 = ptrtoint i32* %111 to i64
  br i1 %112, label %119, label %114

114:                                              ; preds = %106
  %115 = load i32, i32* %8, align 4
  store i32 %115, i32* %109, align 4
  %116 = getelementptr inbounds i32, i32* %109, i64 1
  %117 = ptrtoint i32* %116 to i64
  %118 = bitcast i32** %108 to i64*
  store i64 %117, i64* %118, align 8
  br label %176

119:                                              ; preds = %106
  %120 = ptrtoint i32* %109 to i64
  %121 = bitcast i32** %108 to i64*
  %122 = bitcast %"class.std::__1::vector.767"* %107 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %120, %123
  %125 = ashr exact i64 %124, 2
  %126 = add nsw i64 %125, 1
  %127 = icmp ugt i64 %126, 4611686018427387903
  br i1 %127, label %128, label %130

128:                                              ; preds = %119
  %129 = bitcast %"class.std::__1::vector.767"* %107 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %129) #14
  unreachable

130:                                              ; preds = %119
  %131 = bitcast i32** %110 to i64*
  %132 = sub i64 %113, %123
  %133 = ashr exact i64 %132, 2
  %134 = icmp ult i64 %133, 2305843009213693951
  br i1 %134, label %135, label %143

135:                                              ; preds = %130
  %136 = ashr exact i64 %132, 1
  %137 = icmp ult i64 %136, %126
  %138 = select i1 %137, i64 %126, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %135
  %141 = icmp ugt i64 %138, 4611686018427387903
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  tail call void @abort() #14
  unreachable

143:                                              ; preds = %140, %130
  %144 = phi i64 [ %138, %140 ], [ 4611686018427387903, %130 ]
  %145 = shl i64 %144, 2
  %146 = tail call i8* @_Znwm(i64 %145) #13
  %147 = bitcast i8* %146 to i32*
  br label %148

148:                                              ; preds = %143, %135
  %149 = phi i64 [ %144, %143 ], [ 0, %135 ]
  %150 = phi i32* [ %147, %143 ], [ null, %135 ]
  %151 = getelementptr inbounds i32, i32* %150, i64 %125
  %152 = getelementptr inbounds i32, i32* %150, i64 %149
  %153 = ptrtoint i32* %152 to i64
  %154 = load i32, i32* %8, align 4
  store i32 %154, i32* %151, align 4
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = ptrtoint i32* %155 to i64
  %157 = getelementptr inbounds %"class.std::__1::vector.767", %"class.std::__1::vector.767"* %107, i64 0, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = load i64, i64* %121, align 8
  %160 = ptrtoint i32* %158 to i64
  %161 = sub i64 %159, %160
  %162 = ashr exact i64 %161, 2
  %163 = sub nsw i64 0, %162
  %164 = getelementptr inbounds i32, i32* %151, i64 %163
  %165 = ptrtoint i32* %164 to i64
  %166 = icmp sgt i64 %161, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %148
  %168 = bitcast i32* %164 to i8*
  %169 = bitcast i32* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %169, i64 %161, i1 false) #12
  %170 = load i32*, i32** %157, align 8
  br label %171

171:                                              ; preds = %167, %148
  %172 = phi i32* [ %158, %148 ], [ %170, %167 ]
  store i64 %165, i64* %122, align 8
  store i64 %156, i64* %121, align 8
  store i64 %153, i64* %131, align 8
  %173 = icmp eq i32* %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = bitcast i32* %172 to i8*
  tail call void @_ZdlPv(i8* %175) #13
  br label %176

176:                                              ; preds = %99, %89, %174, %171, %114
  %177 = load i32, i32* %8, align 8
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %8, align 8
  store i32 %177, i32* %3, align 4
  br label %179

179:                                              ; preds = %4, %176
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #9

declare i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !6
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !6
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !6
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !6
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !6
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !6
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !6
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !6
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !6
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !6
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !6
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !6
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !6
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !6
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal13GlobalHandles4NodeENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1091"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1091", %"class.std::__1::vector.1091"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1091", %"class.std::__1::vector.1091"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::GlobalHandles::Node"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::GlobalHandles::Node"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %13, i64 %18
  %20 = bitcast %"class.v8::internal::GlobalHandles::Node"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1091"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1091"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"class.v8::internal::GlobalHandles::Node"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.v8::internal::GlobalHandles::Node"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %57, i64 %33
  %59 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %57, i64 %56
  %60 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %58, i64 %1
  %61 = bitcast %"class.v8::internal::GlobalHandles::Node"** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #12
  %63 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %59 to i64
  %64 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.1091", %"class.std::__1::vector.1091"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.v8::internal::GlobalHandles::Node"*, %"class.v8::internal::GlobalHandles::Node"** %58, i64 %71
  %73 = ptrtoint %"class.v8::internal::GlobalHandles::Node"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.v8::internal::GlobalHandles::Node"** %72 to i8*
  %77 = bitcast %"class.v8::internal::GlobalHandles::Node"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #12
  %78 = load %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.v8::internal::GlobalHandles::Node"** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.v8::internal::GlobalHandles::Node"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.v8::internal::GlobalHandles::Node"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal13GlobalHandles10TracedNodeENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1108"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::GlobalHandles::TracedNode"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %13, i64 %18
  %20 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1108"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1108"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"class.v8::internal::GlobalHandles::TracedNode"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %57, i64 %33
  %59 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %57, i64 %56
  %60 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %58, i64 %1
  %61 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #12
  %63 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %59 to i64
  %64 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.1108", %"class.std::__1::vector.1108"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.v8::internal::GlobalHandles::TracedNode"*, %"class.v8::internal::GlobalHandles::TracedNode"** %58, i64 %71
  %73 = ptrtoint %"class.v8::internal::GlobalHandles::TracedNode"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %72 to i8*
  %77 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #12
  %78 = load %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.v8::internal::GlobalHandles::TracedNode"** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.v8::internal::GlobalHandles::TracedNode"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.v8::internal::GlobalHandles::TracedNode"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal13GlobalHandles42InvokeOrScheduleSecondPassPhantomCallbacksEbE3$_0S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::GlobalHandles"**
  %3 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %2, align 8
  tail call void @_ZN2v88internal13GlobalHandles40InvokeSecondPassPhantomCallbacksFromTaskEv(%"class.v8::internal::GlobalHandles"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.767"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.767", %"class.std::__1::vector.767"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.767", %"class.std::__1::vector.767"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.767"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.767"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #12
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.767", %"class.std::__1::vector.767"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJNS_4pairIKmS6_EEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISM_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal13GlobalHandles22OnStackTracedNodeSpace9NodeEntryEEENS_19__map_value_compareImS7_NS_4lessImEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJNS_4pairIKmS6_EEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISM_EEEEEEDpOT_"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!19 = distinct !{!19, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv: argument 0"}
!34 = distinct !{!34, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!43 = distinct !{!43, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_10TracedNodeEE5beginEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv: argument 0"}
!49 = distinct !{!49, !"_ZN2v88internal13GlobalHandles9NodeSpaceINS1_4NodeEE5beginEv"}
!50 = !{i32 17842058}
