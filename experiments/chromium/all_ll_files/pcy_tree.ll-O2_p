; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/pcy_tree.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/pcy_tree.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.X509_POLICY_TREE_st = type { %struct.X509_POLICY_LEVEL_st*, i32, %struct.stack_st_X509_POLICY_DATA*, %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE*, i32 }
%struct.X509_POLICY_LEVEL_st = type { %struct.x509_st*, %struct.stack_st_X509_POLICY_NODE*, %struct.X509_POLICY_NODE_st*, i32 }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type { %struct.X509_POLICY_DATA_st*, %struct.stack_st_X509_POLICY_DATA*, i64, i64, i64 }
%struct.X509_POLICY_DATA_st = type { i32, %struct.asn1_object_st*, %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_ASN1_OBJECT* }
%struct.stack_st_POLICYQUALINFO = type opaque
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.X509_POLICY_NODE_st = type { %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_NODE_st*, i32 }
%struct.stack_st_X509_POLICY_DATA = type opaque
%struct.stack_st_X509_POLICY_NODE = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.stack_st_X509 = type opaque
%struct.POLICYINFO_st = type { %struct.asn1_object_st*, %struct.stack_st_POLICYQUALINFO* }

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_policy_tree_free(%struct.X509_POLICY_TREE_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_POLICY_TREE_st* %0, null
  br i1 %2, label %49, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 3
  %5 = bitcast %struct.stack_st_X509_POLICY_NODE** %4 to %struct.stack_st**
  %6 = load %struct.stack_st*, %struct.stack_st** %5, align 8
  tail call void @sk_free(%struct.stack_st* %6) #4
  %7 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 4
  %8 = bitcast %struct.stack_st_X509_POLICY_NODE** %7 to %struct.stack_st**
  %9 = load %struct.stack_st*, %struct.stack_st** %8, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %9, void (void (i8*)*, i8*)* nonnull @sk_X509_POLICY_NODE_call_free_func, void (i8*)* bitcast (void (%struct.X509_POLICY_NODE_st*)* @exnode_free to void (i8*)*)) #4
  %10 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %39

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 0
  %15 = load %struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_LEVEL_st** %14, align 8
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi i32 [ %35, %34 ], [ 0, %13 ]
  %18 = phi %struct.X509_POLICY_LEVEL_st* [ %36, %34 ], [ %15, %13 ]
  %19 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %18, i64 0, i32 0
  %20 = load %struct.x509_st*, %struct.x509_st** %19, align 8
  %21 = icmp eq %struct.x509_st* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %16
  tail call void @X509_free(%struct.x509_st* nonnull %20) #4
  br label %23

23:                                               ; preds = %16, %22
  %24 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %18, i64 0, i32 1
  %25 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %24, align 8
  %26 = icmp eq %struct.stack_st_X509_POLICY_NODE* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = bitcast %struct.stack_st_X509_POLICY_NODE* %25 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %28, void (void (i8*)*, i8*)* nonnull @sk_X509_POLICY_NODE_call_free_func, void (i8*)* bitcast (void (%struct.X509_POLICY_NODE_st*)* @policy_node_free to void (i8*)*)) #4
  br label %29

29:                                               ; preds = %23, %27
  %30 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %18, i64 0, i32 2
  %31 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %30, align 8
  %32 = icmp eq %struct.X509_POLICY_NODE_st* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @policy_node_free(%struct.X509_POLICY_NODE_st* nonnull %31) #4
  br label %34

34:                                               ; preds = %29, %33
  %35 = add nuw nsw i32 %17, 1
  %36 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %18, i64 1
  %37 = load i32, i32* %10, align 8
  %38 = icmp slt i32 %35, %37
  br i1 %38, label %16, label %39

39:                                               ; preds = %34, %3
  %40 = getelementptr inbounds %struct.X509_POLICY_TREE_st, %struct.X509_POLICY_TREE_st* %0, i64 0, i32 2
  %41 = load %struct.stack_st_X509_POLICY_DATA*, %struct.stack_st_X509_POLICY_DATA** %40, align 8
  %42 = icmp eq %struct.stack_st_X509_POLICY_DATA* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %struct.stack_st_X509_POLICY_DATA* %41 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %44, void (void (i8*)*, i8*)* nonnull @sk_X509_POLICY_DATA_call_free_func, void (i8*)* bitcast (void (%struct.X509_POLICY_DATA_st*)* @policy_data_free to void (i8*)*)) #4
  br label %45

45:                                               ; preds = %39, %43
  %46 = bitcast %struct.X509_POLICY_TREE_st* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @OPENSSL_free(i8* %47) #4
  %48 = bitcast %struct.X509_POLICY_TREE_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %48) #4
  br label %49

49:                                               ; preds = %1, %45
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @exnode_free(%struct.X509_POLICY_NODE_st*) #0 {
  %2 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %0, i64 0, i32 0
  %3 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %2, align 8
  %4 = icmp eq %struct.X509_POLICY_DATA_st* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = bitcast %struct.X509_POLICY_NODE_st* %0 to i8*
  tail call void @OPENSSL_free(i8* %11) #4
  br label %12

12:                                               ; preds = %5, %1, %10
  ret void
}

declare void @X509_free(%struct.x509_st*) local_unnamed_addr #2

declare void @policy_node_free(%struct.X509_POLICY_NODE_st*) #2

declare void @policy_data_free(%struct.X509_POLICY_DATA_st*) #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_policy_check(%struct.X509_POLICY_TREE_st** nocapture, i32* nocapture, %struct.stack_st_X509*, %struct.stack_st_ASN1_OBJECT*, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.stack_st_X509_POLICY_NODE*, align 8
  %7 = bitcast %struct.stack_st_X509_POLICY_NODE** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4
  store %struct.stack_st_X509_POLICY_NODE* null, %struct.stack_st_X509_POLICY_NODE** %6, align 8
  store %struct.X509_POLICY_TREE_st* null, %struct.X509_POLICY_TREE_st** %0, align 8
  store i32 0, i32* %1, align 4
  %8 = bitcast %struct.stack_st_X509* %2 to %struct.stack_st*
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #4
  %10 = trunc i64 %9 to i32
  %11 = add nsw i32 %10, 1
  %12 = and i32 %4, 512
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 %11, i32 0
  %15 = and i32 %4, 1024
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 %11, i32 0
  %18 = icmp eq i32 %10, 1
  br i1 %18, label %674, label %19

19:                                               ; preds = %5
  %20 = and i32 %4, 256
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, i32 %11, i32 0
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  br i1 %24, label %25, label %76

25:                                               ; preds = %19
  %26 = sext i32 %23 to i64
  br label %27

27:                                               ; preds = %66, %25
  %28 = phi i64 [ %26, %25 ], [ %68, %66 ]
  %29 = phi i32 [ %22, %25 ], [ %67, %66 ]
  %30 = phi i32 [ 1, %25 ], [ %50, %66 ]
  %31 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %28) #4
  %32 = bitcast i8* %31 to %struct.x509_st*
  %33 = tail call i32 @X509_check_purpose(%struct.x509_st* %32, i32 -1, i32 -1) #4
  %34 = tail call %struct.X509_POLICY_CACHE_st* @policy_cache_set(%struct.x509_st* %32) #4
  %35 = icmp eq %struct.X509_POLICY_CACHE_st* %34, null
  br i1 %35, label %187, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds i8, i8* %31, i64 56
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 2048
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %36
  %43 = icmp eq i32 %30, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %34, i64 0, i32 1
  %46 = load %struct.stack_st_X509_POLICY_DATA*, %struct.stack_st_X509_POLICY_DATA** %45, align 8
  %47 = icmp eq %struct.stack_st_X509_POLICY_DATA* %46, null
  %48 = select i1 %47, i32 2, i32 1
  br label %49

49:                                               ; preds = %44, %42, %36
  %50 = phi i32 [ %30, %42 ], [ -1, %36 ], [ %48, %44 ]
  %51 = icmp sgt i32 %29, 0
  br i1 %51, label %52, label %66

52:                                               ; preds = %49
  %53 = lshr i64 %39, 5
  %54 = trunc i64 %53 to i32
  %55 = and i32 %54, 1
  %56 = add nsw i32 %29, -1
  %57 = add nuw nsw i32 %56, %55
  %58 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %34, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = icmp ne i64 %59, -1
  %61 = sext i32 %57 to i64
  %62 = icmp slt i64 %59, %61
  %63 = and i1 %60, %62
  %64 = trunc i64 %59 to i32
  %65 = select i1 %63, i32 %64, i32 %57
  br label %66

66:                                               ; preds = %52, %49
  %67 = phi i32 [ %29, %49 ], [ %65, %52 ]
  %68 = add nsw i64 %28, -1
  %69 = icmp sgt i64 %28, 0
  br i1 %69, label %27, label %70

70:                                               ; preds = %66
  %71 = icmp eq i32 %50, 1
  br i1 %71, label %76, label %72

72:                                               ; preds = %70
  %73 = icmp ne i32 %50, 2
  %74 = icmp ne i32 %67, 0
  %75 = or i1 %73, %74
  br i1 %75, label %184, label %188

76:                                               ; preds = %70, %19
  %77 = phi i32 [ %67, %70 ], [ %22, %19 ]
  %78 = tail call i8* @OPENSSL_malloc(i64 48) #4
  %79 = bitcast i8* %78 to %struct.X509_POLICY_TREE_st*
  %80 = icmp eq i8* %78, null
  br i1 %80, label %187, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds i8, i8* %78, i64 40
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 8
  %84 = shl i64 %9, 32
  %85 = ashr exact i64 %84, 27
  %86 = tail call i8* @OPENSSL_malloc(i64 %85) #4
  %87 = bitcast i8* %78 to %struct.X509_POLICY_LEVEL_st**
  %88 = bitcast i8* %78 to i8**
  store i8* %86, i8** %88, align 8
  %89 = getelementptr inbounds i8, i8* %78, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %78, i64 16
  %92 = icmp eq i8* %86, null
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #4
  br i1 %92, label %93, label %94

93:                                               ; preds = %81
  tail call void @OPENSSL_free(i8* nonnull %78) #4
  br label %187

94:                                               ; preds = %81
  %95 = bitcast i8* %86 to %struct.X509_POLICY_LEVEL_st*
  %96 = icmp eq i64 %84, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %86, i8 0, i64 %85, i1 false) #4
  %98 = load %struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_LEVEL_st** %87, align 8
  br label %99

99:                                               ; preds = %97, %94
  %100 = phi %struct.X509_POLICY_LEVEL_st* [ %95, %94 ], [ %98, %97 ]
  store i32 %10, i32* %90, align 8
  %101 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 746) #4
  %102 = tail call %struct.X509_POLICY_DATA_st* @policy_data_new(%struct.POLICYINFO_st* null, %struct.asn1_object_st* %101, i32 0) #4
  %103 = icmp eq %struct.X509_POLICY_DATA_st* %102, null
  br i1 %103, label %183, label %104

104:                                              ; preds = %99
  %105 = tail call %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* %100, %struct.X509_POLICY_DATA_st* nonnull %102, %struct.X509_POLICY_NODE_st* null, %struct.X509_POLICY_TREE_st* nonnull %79) #4
  %106 = icmp eq %struct.X509_POLICY_NODE_st* %105, null
  br i1 %106, label %183, label %107

107:                                              ; preds = %104
  br i1 %24, label %108, label %181

108:                                              ; preds = %107
  %109 = sext i32 %23 to i64
  br label %110

110:                                              ; preds = %177, %108
  %111 = phi i64 [ %109, %108 ], [ %179, %177 ]
  %112 = phi i32 [ %17, %108 ], [ %178, %177 ]
  %113 = phi i32 [ %14, %108 ], [ %156, %177 ]
  %114 = phi %struct.X509_POLICY_LEVEL_st* [ %100, %108 ], [ %115, %177 ]
  %115 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %114, i64 1
  %116 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %111) #4
  %117 = bitcast i8* %116 to %struct.x509_st*
  %118 = tail call %struct.X509_POLICY_CACHE_st* @policy_cache_set(%struct.x509_st* %117) #4
  %119 = tail call i32 @X509_up_ref(%struct.x509_st* %117) #4
  %120 = bitcast %struct.X509_POLICY_LEVEL_st* %115 to i8**
  store i8* %116, i8** %120, align 8
  %121 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %118, i64 0, i32 0
  %122 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %121, align 8
  %123 = icmp eq %struct.X509_POLICY_DATA_st* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %110
  %125 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %114, i64 1, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = or i32 %126, 512
  store i32 %127, i32* %125, align 8
  br label %128

128:                                              ; preds = %124, %110
  %129 = icmp eq i32 %113, 0
  %130 = getelementptr inbounds i8, i8* %116, i64 56
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 32
  br i1 %129, label %134, label %142

134:                                              ; preds = %128
  %135 = icmp eq i64 %133, 0
  %136 = icmp eq i64 %111, 0
  %137 = or i1 %136, %135
  br i1 %137, label %138, label %155

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %114, i64 1, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = or i32 %140, 512
  store i32 %141, i32* %139, align 8
  br label %155

142:                                              ; preds = %128
  %143 = lshr exact i64 %133, 5
  %144 = trunc i64 %143 to i32
  %145 = xor i32 %144, 1
  %146 = sub i32 %113, %145
  %147 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %118, i64 0, i32 2
  %148 = load i64, i64* %147, align 8
  %149 = icmp sgt i64 %148, -1
  %150 = sext i32 %146 to i64
  %151 = icmp slt i64 %148, %150
  %152 = and i1 %149, %151
  %153 = trunc i64 %148 to i32
  %154 = select i1 %152, i32 %153, i32 %146
  br label %155

155:                                              ; preds = %142, %138, %134
  %156 = phi i32 [ 0, %138 ], [ 0, %134 ], [ %154, %142 ]
  %157 = icmp eq i32 %112, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %155
  %159 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %114, i64 1, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = or i32 %160, 1024
  store i32 %161, i32* %159, align 8
  br label %177

162:                                              ; preds = %155
  %163 = load i64, i64* %131, align 8
  %164 = lshr i64 %163, 5
  %165 = trunc i64 %164 to i32
  %166 = and i32 %165, 1
  %167 = add i32 %112, -1
  %168 = add nuw i32 %167, %166
  %169 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %118, i64 0, i32 4
  %170 = load i64, i64* %169, align 8
  %171 = icmp sgt i64 %170, -1
  %172 = sext i32 %168 to i64
  %173 = icmp slt i64 %170, %172
  %174 = and i1 %171, %173
  %175 = trunc i64 %170 to i32
  %176 = select i1 %174, i32 %175, i32 %168
  br label %177

177:                                              ; preds = %162, %158
  %178 = phi i32 [ 0, %158 ], [ %176, %162 ]
  %179 = add nsw i64 %111, -1
  %180 = icmp sgt i64 %111, 0
  br i1 %180, label %110, label %181

181:                                              ; preds = %177, %107
  %182 = icmp eq i32 %77, 0
  br i1 %182, label %189, label %190

183:                                              ; preds = %104, %99
  tail call void @X509_policy_tree_free(%struct.X509_POLICY_TREE_st* nonnull %79) #4
  br label %187

184:                                              ; preds = %72
  switch i32 %50, label %672 [
    i32 2, label %674
    i32 -1, label %186
    i32 0, label %187
    i32 6, label %188
    i32 5, label %185
  ]

185:                                              ; preds = %184
  store i32 1, i32* %1, align 4
  br label %672

186:                                              ; preds = %184
  br label %674

187:                                              ; preds = %27, %76, %93, %183, %184
  br label %674

188:                                              ; preds = %72, %184
  store i32 1, i32* %1, align 4
  br label %674

189:                                              ; preds = %181
  store i32 1, i32* %1, align 4
  br label %190

190:                                              ; preds = %181, %189
  %191 = load i32, i32* %90, align 8
  %192 = icmp sgt i32 %191, 1
  %193 = load %struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_LEVEL_st** %87, align 8
  br i1 %192, label %197, label %476

194:                                              ; preds = %469
  %195 = load i32, i32* %90, align 8
  %196 = icmp slt i32 %471, %195
  br i1 %196, label %197, label %476

197:                                              ; preds = %190, %194
  %198 = phi %struct.X509_POLICY_LEVEL_st* [ %200, %194 ], [ %193, %190 ]
  %199 = phi i32 [ %471, %194 ], [ 1, %190 ]
  %200 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 1
  %201 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %200, i64 0, i32 0
  %202 = load %struct.x509_st*, %struct.x509_st** %201, align 8
  %203 = tail call %struct.X509_POLICY_CACHE_st* @policy_cache_set(%struct.x509_st* %202) #4
  %204 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %203, i64 0, i32 1
  %205 = bitcast %struct.stack_st_X509_POLICY_DATA** %204 to %struct.stack_st**
  %206 = load %struct.stack_st*, %struct.stack_st** %205, align 8
  %207 = tail call i64 @sk_num(%struct.stack_st* %206) #4
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %255, label %209

209:                                              ; preds = %197
  %210 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 0, i32 1
  %211 = bitcast %struct.stack_st_X509_POLICY_NODE** %210 to %struct.stack_st**
  %212 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 0, i32 2
  br label %213

213:                                              ; preds = %250, %209
  %214 = phi i64 [ 0, %209 ], [ %251, %250 ]
  %215 = load %struct.stack_st*, %struct.stack_st** %205, align 8
  %216 = tail call i8* @sk_value(%struct.stack_st* %215, i64 %214) #4
  %217 = bitcast i8* %216 to %struct.X509_POLICY_DATA_st*
  %218 = load %struct.stack_st*, %struct.stack_st** %211, align 8
  %219 = tail call i64 @sk_num(%struct.stack_st* %218) #4
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %244, label %221

221:                                              ; preds = %213
  %222 = getelementptr inbounds i8, i8* %216, i64 8
  %223 = bitcast i8* %222 to %struct.asn1_object_st**
  br label %224

224:                                              ; preds = %236, %221
  %225 = phi i64 [ 0, %221 ], [ %238, %236 ]
  %226 = phi i32 [ 0, %221 ], [ %237, %236 ]
  %227 = load %struct.stack_st*, %struct.stack_st** %211, align 8
  %228 = tail call i8* @sk_value(%struct.stack_st* %227, i64 %225) #4
  %229 = bitcast i8* %228 to %struct.X509_POLICY_NODE_st*
  %230 = load %struct.asn1_object_st*, %struct.asn1_object_st** %223, align 8
  %231 = tail call i32 @policy_node_match(%struct.X509_POLICY_LEVEL_st* %198, %struct.X509_POLICY_NODE_st* %229, %struct.asn1_object_st* %230) #4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %224
  %234 = tail call %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* %200, %struct.X509_POLICY_DATA_st* %217, %struct.X509_POLICY_NODE_st* %229, %struct.X509_POLICY_TREE_st* null) #4
  %235 = icmp eq %struct.X509_POLICY_NODE_st* %234, null
  br i1 %235, label %672, label %236

236:                                              ; preds = %233, %224
  %237 = phi i32 [ %226, %224 ], [ 1, %233 ]
  %238 = add nuw i64 %225, 1
  %239 = load %struct.stack_st*, %struct.stack_st** %211, align 8
  %240 = tail call i64 @sk_num(%struct.stack_st* %239) #4
  %241 = icmp ult i64 %238, %240
  br i1 %241, label %224, label %242

242:                                              ; preds = %236
  %243 = icmp eq i32 %237, 0
  br i1 %243, label %244, label %250

244:                                              ; preds = %242, %213
  %245 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %212, align 8
  %246 = icmp eq %struct.X509_POLICY_NODE_st* %245, null
  br i1 %246, label %250, label %247

247:                                              ; preds = %244
  %248 = tail call %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* %200, %struct.X509_POLICY_DATA_st* %217, %struct.X509_POLICY_NODE_st* nonnull %245, %struct.X509_POLICY_TREE_st* null) #4
  %249 = icmp eq %struct.X509_POLICY_NODE_st* %248, null
  br i1 %249, label %672, label %250

250:                                              ; preds = %247, %244, %242
  %251 = add nuw i64 %214, 1
  %252 = load %struct.stack_st*, %struct.stack_st** %205, align 8
  %253 = tail call i64 @sk_num(%struct.stack_st* %252) #4
  %254 = icmp ult i64 %251, %253
  br i1 %254, label %213, label %255

255:                                              ; preds = %250, %197
  %256 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 1, i32 3
  %257 = load i32, i32* %256, align 8
  %258 = and i32 %257, 512
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %375

260:                                              ; preds = %255
  %261 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 0, i32 1
  %262 = bitcast %struct.stack_st_X509_POLICY_NODE** %261 to %struct.stack_st**
  %263 = load %struct.stack_st*, %struct.stack_st** %262, align 8
  %264 = tail call i64 @sk_num(%struct.stack_st* %263) #4
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %366, label %266

266:                                              ; preds = %260
  %267 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 0, i32 3
  %268 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %203, i64 0, i32 0
  br label %269

269:                                              ; preds = %361, %266
  %270 = phi i64 [ 0, %266 ], [ %362, %361 ]
  %271 = load %struct.stack_st*, %struct.stack_st** %262, align 8
  %272 = tail call i8* @sk_value(%struct.stack_st* %271, i64 %270) #4
  %273 = bitcast i8* %272 to %struct.X509_POLICY_NODE_st*
  %274 = load i32, i32* %267, align 8
  %275 = and i32 %274, 1024
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %284

277:                                              ; preds = %269
  %278 = bitcast i8* %272 to %struct.X509_POLICY_DATA_st**
  %279 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %278, align 8
  %280 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %279, i64 0, i32 0
  %281 = load i32, i32* %280, align 8
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %312

284:                                              ; preds = %277, %269
  %285 = getelementptr inbounds i8, i8* %272, i64 16
  %286 = bitcast i8* %285 to i32*
  %287 = load i32, i32* %286, align 8
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %361

289:                                              ; preds = %284
  %290 = bitcast i8* %272 to %struct.X509_POLICY_DATA_st**
  %291 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %290, align 8
  %292 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %291, i64 0, i32 1
  %293 = load %struct.asn1_object_st*, %struct.asn1_object_st** %292, align 8
  %294 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %291, i64 0, i32 0
  %295 = load i32, i32* %294, align 8
  %296 = and i32 %295, 16
  %297 = tail call %struct.X509_POLICY_DATA_st* @policy_data_new(%struct.POLICYINFO_st* null, %struct.asn1_object_st* %293, i32 %296) #4
  %298 = icmp eq %struct.X509_POLICY_DATA_st* %297, null
  br i1 %298, label %672, label %299

299:                                              ; preds = %289
  %300 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %268, align 8
  %301 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %300, i64 0, i32 2
  %302 = bitcast %struct.stack_st_POLICYQUALINFO** %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %297, i64 0, i32 2
  %305 = bitcast %struct.stack_st_POLICYQUALINFO** %304 to i64*
  store i64 %303, i64* %305, align 8
  %306 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %297, i64 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = or i32 %307, 4
  store i32 %308, i32* %306, align 8
  %309 = tail call %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* %200, %struct.X509_POLICY_DATA_st* nonnull %297, %struct.X509_POLICY_NODE_st* %273, %struct.X509_POLICY_TREE_st* nonnull %79) #4
  %310 = icmp eq %struct.X509_POLICY_NODE_st* %309, null
  br i1 %310, label %311, label %361

311:                                              ; preds = %299
  tail call void @policy_data_free(%struct.X509_POLICY_DATA_st* nonnull %297) #4
  br label %672

312:                                              ; preds = %277
  %313 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %279, i64 0, i32 3
  %314 = bitcast %struct.stack_st_ASN1_OBJECT** %313 to %struct.stack_st**
  %315 = load %struct.stack_st*, %struct.stack_st** %314, align 8
  %316 = getelementptr inbounds i8, i8* %272, i64 16
  %317 = bitcast i8* %316 to i32*
  %318 = load i32, i32* %317, align 8
  %319 = sext i32 %318 to i64
  %320 = tail call i64 @sk_num(%struct.stack_st* %315) #4
  %321 = icmp eq i64 %320, %319
  br i1 %321, label %361, label %322

322:                                              ; preds = %312
  %323 = tail call i64 @sk_num(%struct.stack_st* %315) #4
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %361, label %325

325:                                              ; preds = %322, %357
  %326 = phi i64 [ %358, %357 ], [ 0, %322 ]
  %327 = tail call i8* @sk_value(%struct.stack_st* %315, i64 %326) #4
  %328 = bitcast i8* %327 to %struct.asn1_object_st*
  %329 = tail call %struct.X509_POLICY_NODE_st* @level_find_node(%struct.X509_POLICY_LEVEL_st* %200, %struct.X509_POLICY_NODE_st* %273, %struct.asn1_object_st* %328) #4
  %330 = icmp eq %struct.X509_POLICY_NODE_st* %329, null
  br i1 %330, label %331, label %357

331:                                              ; preds = %325
  %332 = icmp eq i8* %327, null
  %333 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %278, align 8
  br i1 %332, label %334, label %337

334:                                              ; preds = %331
  %335 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %333, i64 0, i32 1
  %336 = load %struct.asn1_object_st*, %struct.asn1_object_st** %335, align 8
  br label %337

337:                                              ; preds = %334, %331
  %338 = phi %struct.asn1_object_st* [ %336, %334 ], [ %328, %331 ]
  %339 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %333, i64 0, i32 0
  %340 = load i32, i32* %339, align 8
  %341 = and i32 %340, 16
  %342 = tail call %struct.X509_POLICY_DATA_st* @policy_data_new(%struct.POLICYINFO_st* null, %struct.asn1_object_st* %338, i32 %341) #4
  %343 = icmp eq %struct.X509_POLICY_DATA_st* %342, null
  br i1 %343, label %672, label %344

344:                                              ; preds = %337
  %345 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %268, align 8
  %346 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %345, i64 0, i32 2
  %347 = bitcast %struct.stack_st_POLICYQUALINFO** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %342, i64 0, i32 2
  %350 = bitcast %struct.stack_st_POLICYQUALINFO** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %342, i64 0, i32 0
  %352 = load i32, i32* %351, align 8
  %353 = or i32 %352, 4
  store i32 %353, i32* %351, align 8
  %354 = tail call %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* %200, %struct.X509_POLICY_DATA_st* nonnull %342, %struct.X509_POLICY_NODE_st* %273, %struct.X509_POLICY_TREE_st* nonnull %79) #4
  %355 = icmp eq %struct.X509_POLICY_NODE_st* %354, null
  br i1 %355, label %356, label %357

356:                                              ; preds = %344
  tail call void @policy_data_free(%struct.X509_POLICY_DATA_st* nonnull %342) #4
  br label %672

357:                                              ; preds = %344, %325
  %358 = add nuw i64 %326, 1
  %359 = tail call i64 @sk_num(%struct.stack_st* %315) #4
  %360 = icmp ult i64 %358, %359
  br i1 %360, label %325, label %361

361:                                              ; preds = %357, %322, %312, %299, %284
  %362 = add nuw i64 %270, 1
  %363 = load %struct.stack_st*, %struct.stack_st** %262, align 8
  %364 = tail call i64 @sk_num(%struct.stack_st* %363) #4
  %365 = icmp ult i64 %362, %364
  br i1 %365, label %269, label %366

366:                                              ; preds = %361, %260
  %367 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 0, i32 2
  %368 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %367, align 8
  %369 = icmp eq %struct.X509_POLICY_NODE_st* %368, null
  br i1 %369, label %375, label %370

370:                                              ; preds = %366
  %371 = getelementptr inbounds %struct.X509_POLICY_CACHE_st, %struct.X509_POLICY_CACHE_st* %203, i64 0, i32 0
  %372 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %371, align 8
  %373 = tail call %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* %200, %struct.X509_POLICY_DATA_st* %372, %struct.X509_POLICY_NODE_st* nonnull %368, %struct.X509_POLICY_TREE_st* null) #4
  %374 = icmp eq %struct.X509_POLICY_NODE_st* %373, null
  br i1 %374, label %672, label %375

375:                                              ; preds = %370, %366, %255
  %376 = load i32, i32* %256, align 8
  %377 = and i32 %376, 1024
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %411, label %379

379:                                              ; preds = %375
  %380 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %198, i64 1, i32 1
  %381 = bitcast %struct.stack_st_X509_POLICY_NODE** %380 to %struct.stack_st**
  %382 = load %struct.stack_st*, %struct.stack_st** %381, align 8
  %383 = tail call i64 @sk_num(%struct.stack_st* %382) #4
  %384 = trunc i64 %383 to i32
  %385 = add i32 %384, -1
  %386 = icmp sgt i32 %385, -1
  br i1 %386, label %387, label %411

387:                                              ; preds = %379
  %388 = sext i32 %385 to i64
  br label %389

389:                                              ; preds = %407, %387
  %390 = phi i64 [ %388, %387 ], [ %410, %407 ]
  %391 = phi i32 [ %385, %387 ], [ %408, %407 ]
  %392 = tail call i8* @sk_value(%struct.stack_st* %382, i64 %390) #4
  %393 = bitcast i8* %392 to %struct.X509_POLICY_DATA_st**
  %394 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %393, align 8
  %395 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %394, i64 0, i32 0
  %396 = load i32, i32* %395, align 8
  %397 = and i32 %396, 3
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %407, label %399

399:                                              ; preds = %389
  %400 = getelementptr inbounds i8, i8* %392, i64 8
  %401 = bitcast i8* %400 to %struct.X509_POLICY_NODE_st**
  %402 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %401, align 8
  %403 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %402, i64 0, i32 2
  %404 = load i32, i32* %403, align 8
  %405 = add nsw i32 %404, -1
  store i32 %405, i32* %403, align 8
  tail call void @OPENSSL_free(i8* %392) #4
  %406 = tail call i8* @sk_delete(%struct.stack_st* %382, i64 %390) #4
  br label %407

407:                                              ; preds = %399, %389
  %408 = add i32 %391, -1
  %409 = icmp sgt i32 %408, -1
  %410 = add nsw i64 %390, -1
  br i1 %409, label %389, label %411

411:                                              ; preds = %407, %379, %375
  br label %412

412:                                              ; preds = %411, %465
  %413 = phi %struct.X509_POLICY_LEVEL_st* [ %414, %465 ], [ %200, %411 ]
  %414 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %413, i64 -1
  %415 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %413, i64 -1, i32 1
  %416 = bitcast %struct.stack_st_X509_POLICY_NODE** %415 to %struct.stack_st**
  %417 = load %struct.stack_st*, %struct.stack_st** %416, align 8
  %418 = tail call i64 @sk_num(%struct.stack_st* %417) #4
  %419 = trunc i64 %418 to i32
  %420 = add i32 %419, -1
  %421 = icmp sgt i32 %420, -1
  br i1 %421, label %422, label %444

422:                                              ; preds = %412
  %423 = sext i32 %420 to i64
  br label %424

424:                                              ; preds = %440, %422
  %425 = phi i64 [ %423, %422 ], [ %443, %440 ]
  %426 = phi i32 [ %420, %422 ], [ %441, %440 ]
  %427 = tail call i8* @sk_value(%struct.stack_st* %417, i64 %425) #4
  %428 = getelementptr inbounds i8, i8* %427, i64 16
  %429 = bitcast i8* %428 to i32*
  %430 = load i32, i32* %429, align 8
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %440

432:                                              ; preds = %424
  %433 = getelementptr inbounds i8, i8* %427, i64 8
  %434 = bitcast i8* %433 to %struct.X509_POLICY_NODE_st**
  %435 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %434, align 8
  %436 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %435, i64 0, i32 2
  %437 = load i32, i32* %436, align 8
  %438 = add nsw i32 %437, -1
  store i32 %438, i32* %436, align 8
  tail call void @OPENSSL_free(i8* %427) #4
  %439 = tail call i8* @sk_delete(%struct.stack_st* %417, i64 %425) #4
  br label %440

440:                                              ; preds = %432, %424
  %441 = add i32 %426, -1
  %442 = icmp sgt i32 %441, -1
  %443 = add nsw i64 %425, -1
  br i1 %442, label %424, label %444

444:                                              ; preds = %440, %412
  %445 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %413, i64 -1, i32 2
  %446 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %445, align 8
  %447 = icmp eq %struct.X509_POLICY_NODE_st* %446, null
  %448 = bitcast %struct.X509_POLICY_NODE_st* %446 to i8*
  br i1 %447, label %465, label %449

449:                                              ; preds = %444
  %450 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %446, i64 0, i32 2
  %451 = load i32, i32* %450, align 8
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %465

453:                                              ; preds = %449
  %454 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %446, i64 0, i32 1
  %455 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %454, align 8
  %456 = icmp eq %struct.X509_POLICY_NODE_st* %455, null
  br i1 %456, label %463, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %455, i64 0, i32 2
  %459 = load i32, i32* %458, align 8
  %460 = add nsw i32 %459, -1
  store i32 %460, i32* %458, align 8
  %461 = bitcast %struct.X509_POLICY_NODE_st** %445 to i8**
  %462 = load i8*, i8** %461, align 8
  br label %463

463:                                              ; preds = %457, %453
  %464 = phi i8* [ %462, %457 ], [ %448, %453 ]
  tail call void @OPENSSL_free(i8* %464) #4
  store %struct.X509_POLICY_NODE_st* null, %struct.X509_POLICY_NODE_st** %445, align 8
  br label %465

465:                                              ; preds = %463, %449, %444
  %466 = phi %struct.X509_POLICY_NODE_st* [ %446, %449 ], [ null, %444 ], [ null, %463 ]
  %467 = load %struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_LEVEL_st** %87, align 8
  %468 = icmp eq %struct.X509_POLICY_LEVEL_st* %414, %467
  br i1 %468, label %469, label %412

469:                                              ; preds = %465
  %470 = icmp eq %struct.X509_POLICY_NODE_st* %466, null
  %471 = add nuw nsw i32 %199, 1
  br i1 %470, label %472, label %194

472:                                              ; preds = %469
  tail call void @X509_policy_tree_free(%struct.X509_POLICY_TREE_st* nonnull %79)
  %473 = load i32, i32* %1, align 4
  %474 = icmp eq i32 %473, 0
  %475 = select i1 %474, i32 1, i32 -2
  br label %674

476:                                              ; preds = %194, %190
  %477 = phi i32 [ %191, %190 ], [ %195, %194 ]
  %478 = phi %struct.X509_POLICY_LEVEL_st* [ %193, %190 ], [ %414, %194 ]
  %479 = sext i32 %477 to i64
  %480 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %478, i64 %479
  %481 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %480, i64 -1
  %482 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %481, i64 0, i32 2
  %483 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %482, align 8
  %484 = icmp eq %struct.X509_POLICY_NODE_st* %483, null
  %485 = getelementptr inbounds i8, i8* %78, i64 24
  %486 = bitcast i8* %485 to %struct.stack_st_X509_POLICY_NODE**
  br i1 %484, label %510, label %487

487:                                              ; preds = %476
  %488 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %486, align 8
  %489 = icmp eq %struct.stack_st_X509_POLICY_NODE* %488, null
  br i1 %489, label %490, label %496

490:                                              ; preds = %487
  %491 = tail call %struct.stack_st_X509_POLICY_NODE* @policy_node_cmp_new() #4
  store %struct.stack_st_X509_POLICY_NODE* %491, %struct.stack_st_X509_POLICY_NODE** %486, align 8
  %492 = icmp eq %struct.stack_st_X509_POLICY_NODE* %491, null
  br i1 %492, label %672, label %493

493:                                              ; preds = %490
  %494 = bitcast %struct.stack_st_X509_POLICY_NODE* %491 to %struct.stack_st*
  %495 = bitcast %struct.X509_POLICY_NODE_st* %483 to i8*
  br label %505

496:                                              ; preds = %487
  %497 = bitcast %struct.stack_st_X509_POLICY_NODE* %488 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %497) #4
  %498 = bitcast i8* %485 to %struct.stack_st**
  %499 = load %struct.stack_st*, %struct.stack_st** %498, align 8
  %500 = bitcast %struct.X509_POLICY_NODE_st* %483 to i8*
  %501 = tail call i32 @sk_find(%struct.stack_st* %499, i64* null, i8* nonnull %500, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_POLICY_NODE_call_cmp_func) #4
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %510

503:                                              ; preds = %496
  %504 = load %struct.stack_st*, %struct.stack_st** %498, align 8
  br label %505

505:                                              ; preds = %503, %493
  %506 = phi i8* [ %495, %493 ], [ %500, %503 ]
  %507 = phi %struct.stack_st* [ %494, %493 ], [ %504, %503 ]
  %508 = tail call i64 @sk_push(%struct.stack_st* %507, i8* %506) #4
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %672, label %510

510:                                              ; preds = %505, %496, %476
  %511 = phi %struct.stack_st_X509_POLICY_NODE** [ %6, %505 ], [ %486, %476 ], [ %6, %496 ]
  %512 = load i32, i32* %90, align 8
  %513 = icmp sgt i32 %512, 1
  br i1 %513, label %514, label %566

514:                                              ; preds = %510
  %515 = load %struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_LEVEL_st** %87, align 8
  %516 = bitcast %struct.stack_st_X509_POLICY_NODE** %511 to %struct.stack_st**
  br label %517

517:                                              ; preds = %562, %514
  %518 = phi i32 [ 1, %514 ], [ %563, %562 ]
  %519 = phi %struct.X509_POLICY_LEVEL_st* [ %515, %514 ], [ %524, %562 ]
  %520 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %519, i64 0, i32 2
  %521 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %520, align 8
  %522 = icmp eq %struct.X509_POLICY_NODE_st* %521, null
  br i1 %522, label %566, label %523

523:                                              ; preds = %517
  %524 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %519, i64 1
  %525 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %519, i64 1, i32 1
  %526 = bitcast %struct.stack_st_X509_POLICY_NODE** %525 to %struct.stack_st**
  %527 = load %struct.stack_st*, %struct.stack_st** %526, align 8
  %528 = tail call i64 @sk_num(%struct.stack_st* %527) #4
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %562, label %530

530:                                              ; preds = %523, %557
  %531 = phi i64 [ %558, %557 ], [ 0, %523 ]
  %532 = load %struct.stack_st*, %struct.stack_st** %526, align 8
  %533 = tail call i8* @sk_value(%struct.stack_st* %532, i64 %531) #4
  %534 = getelementptr inbounds i8, i8* %533, i64 8
  %535 = bitcast i8* %534 to %struct.X509_POLICY_NODE_st**
  %536 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %535, align 8
  %537 = icmp eq %struct.X509_POLICY_NODE_st* %536, %521
  br i1 %537, label %538, label %557

538:                                              ; preds = %530
  %539 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %511, align 8
  %540 = icmp eq %struct.stack_st_X509_POLICY_NODE* %539, null
  br i1 %540, label %541, label %546

541:                                              ; preds = %538
  %542 = tail call %struct.stack_st_X509_POLICY_NODE* @policy_node_cmp_new() #4
  store %struct.stack_st_X509_POLICY_NODE* %542, %struct.stack_st_X509_POLICY_NODE** %511, align 8
  %543 = icmp eq %struct.stack_st_X509_POLICY_NODE* %542, null
  br i1 %543, label %672, label %544

544:                                              ; preds = %541
  %545 = bitcast %struct.stack_st_X509_POLICY_NODE* %542 to %struct.stack_st*
  br label %553

546:                                              ; preds = %538
  %547 = bitcast %struct.stack_st_X509_POLICY_NODE* %539 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %547) #4
  %548 = load %struct.stack_st*, %struct.stack_st** %516, align 8
  %549 = tail call i32 @sk_find(%struct.stack_st* %548, i64* null, i8* %533, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_POLICY_NODE_call_cmp_func) #4
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %557

551:                                              ; preds = %546
  %552 = load %struct.stack_st*, %struct.stack_st** %516, align 8
  br label %553

553:                                              ; preds = %551, %544
  %554 = phi %struct.stack_st* [ %545, %544 ], [ %552, %551 ]
  %555 = tail call i64 @sk_push(%struct.stack_st* %554, i8* %533) #4
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %672, label %557

557:                                              ; preds = %553, %546, %530
  %558 = add nuw i64 %531, 1
  %559 = load %struct.stack_st*, %struct.stack_st** %526, align 8
  %560 = tail call i64 @sk_num(%struct.stack_st* %559) #4
  %561 = icmp ult i64 %558, %560
  br i1 %561, label %530, label %562

562:                                              ; preds = %557, %523
  %563 = add nuw nsw i32 %518, 1
  %564 = load i32, i32* %90, align 8
  %565 = icmp slt i32 %563, %564
  br i1 %565, label %517, label %566

566:                                              ; preds = %562, %517, %510
  %567 = icmp eq %struct.stack_st_X509_POLICY_NODE** %511, %6
  br i1 %567, label %568, label %570

568:                                              ; preds = %566
  %569 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %6, align 8
  br label %575

570:                                              ; preds = %566
  %571 = bitcast i8* %485 to i64*
  %572 = load i64, i64* %571, align 8
  %573 = bitcast %struct.stack_st_X509_POLICY_NODE** %6 to i64*
  store i64 %572, i64* %573, align 8
  %574 = inttoptr i64 %572 to %struct.stack_st_X509_POLICY_NODE*
  br label %575

575:                                              ; preds = %568, %570
  %576 = phi %struct.stack_st_X509_POLICY_NODE* [ %574, %570 ], [ %569, %568 ]
  %577 = phi i32 [ 1, %570 ], [ 2, %568 ]
  %578 = bitcast %struct.stack_st_ASN1_OBJECT* %3 to %struct.stack_st*
  %579 = call i64 @sk_num(%struct.stack_st* %578) #4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %654, label %581

581:                                              ; preds = %575
  %582 = load %struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_LEVEL_st** %87, align 8
  %583 = load i32, i32* %90, align 8
  %584 = add nsw i32 %583, -1
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds %struct.X509_POLICY_LEVEL_st, %struct.X509_POLICY_LEVEL_st* %582, i64 %585, i32 2
  %587 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %586, align 8
  %588 = call i64 @sk_num(%struct.stack_st* %578) #4
  %589 = icmp eq i64 %588, 0
  br i1 %589, label %593, label %603

590:                                              ; preds = %603
  %591 = call i64 @sk_num(%struct.stack_st* %578) #4
  %592 = icmp ult i64 %609, %591
  br i1 %592, label %603, label %593

593:                                              ; preds = %590, %581
  %594 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %587, i64 0, i32 0
  %595 = call i64 @sk_num(%struct.stack_st* %578) #4
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %654, label %597

597:                                              ; preds = %593
  %598 = icmp eq %struct.X509_POLICY_NODE_st* %587, null
  %599 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %587, i64 0, i32 1
  %600 = getelementptr inbounds i8, i8* %78, i64 32
  %601 = bitcast i8* %600 to %struct.stack_st_X509_POLICY_NODE**
  %602 = bitcast i8* %600 to %struct.stack_st**
  br label %613

603:                                              ; preds = %581, %590
  %604 = phi i64 [ %609, %590 ], [ 0, %581 ]
  %605 = call i8* @sk_value(%struct.stack_st* %578, i64 %604) #4
  %606 = bitcast i8* %605 to %struct.asn1_object_st*
  %607 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %606) #4
  %608 = icmp eq i32 %607, 746
  %609 = add nuw i64 %604, 1
  br i1 %608, label %610, label %590

610:                                              ; preds = %603
  %611 = load i32, i32* %83, align 8
  %612 = or i32 %611, 2
  store i32 %612, i32* %83, align 8
  br label %654

613:                                              ; preds = %650, %597
  %614 = phi i64 [ 0, %597 ], [ %651, %650 ]
  %615 = call i8* @sk_value(%struct.stack_st* %578, i64 %614) #4
  %616 = bitcast i8* %615 to %struct.asn1_object_st*
  %617 = call %struct.X509_POLICY_NODE_st* @tree_find_sk(%struct.stack_st_X509_POLICY_NODE* %576, %struct.asn1_object_st* %616) #4
  %618 = icmp eq %struct.X509_POLICY_NODE_st* %617, null
  br i1 %618, label %619, label %637

619:                                              ; preds = %613
  br i1 %598, label %650, label %620

620:                                              ; preds = %619
  %621 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %594, align 8
  %622 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %621, i64 0, i32 0
  %623 = load i32, i32* %622, align 8
  %624 = and i32 %623, 16
  %625 = call %struct.X509_POLICY_DATA_st* @policy_data_new(%struct.POLICYINFO_st* null, %struct.asn1_object_st* %616, i32 %624) #4
  %626 = icmp eq %struct.X509_POLICY_DATA_st* %625, null
  br i1 %626, label %654, label %627

627:                                              ; preds = %620
  %628 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %594, align 8
  %629 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %628, i64 0, i32 2
  %630 = bitcast %struct.stack_st_POLICYQUALINFO** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %625, i64 0, i32 2
  %633 = bitcast %struct.stack_st_POLICYQUALINFO** %632 to i64*
  store i64 %631, i64* %633, align 8
  %634 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %625, i64 0, i32 0
  store i32 12, i32* %634, align 8
  %635 = load %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_NODE_st** %599, align 8
  %636 = call %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st* null, %struct.X509_POLICY_DATA_st* nonnull %625, %struct.X509_POLICY_NODE_st* %635, %struct.X509_POLICY_TREE_st* nonnull %79) #4
  br label %637

637:                                              ; preds = %627, %613
  %638 = phi %struct.X509_POLICY_NODE_st* [ %617, %613 ], [ %636, %627 ]
  %639 = load %struct.stack_st_X509_POLICY_NODE*, %struct.stack_st_X509_POLICY_NODE** %601, align 8
  %640 = icmp eq %struct.stack_st_X509_POLICY_NODE* %639, null
  %641 = bitcast %struct.stack_st_X509_POLICY_NODE* %639 to %struct.stack_st*
  br i1 %640, label %642, label %645

642:                                              ; preds = %637
  %643 = call %struct.stack_st* @sk_new_null() #4
  store %struct.stack_st* %643, %struct.stack_st** %602, align 8
  %644 = icmp eq %struct.stack_st* %643, null
  br i1 %644, label %654, label %645

645:                                              ; preds = %642, %637
  %646 = phi %struct.stack_st* [ %643, %642 ], [ %641, %637 ]
  %647 = bitcast %struct.X509_POLICY_NODE_st* %638 to i8*
  %648 = call i64 @sk_push(%struct.stack_st* %646, i8* %647) #4
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %654, label %650

650:                                              ; preds = %645, %619
  %651 = add nuw i64 %614, 1
  %652 = call i64 @sk_num(%struct.stack_st* %578) #4
  %653 = icmp ult i64 %651, %652
  br i1 %653, label %613, label %654

654:                                              ; preds = %620, %642, %645, %650, %575, %593, %610
  %655 = phi i32 [ 1, %610 ], [ 1, %575 ], [ 1, %593 ], [ 1, %650 ], [ 0, %645 ], [ 1, %642 ], [ 0, %620 ]
  %656 = icmp eq i32 %577, 2
  br i1 %656, label %657, label %660

657:                                              ; preds = %654
  %658 = bitcast %struct.stack_st_X509_POLICY_NODE** %6 to %struct.stack_st**
  %659 = load %struct.stack_st*, %struct.stack_st** %658, align 8
  call void @sk_free(%struct.stack_st* %659) #4
  br label %660

660:                                              ; preds = %657, %654
  %661 = icmp eq i32 %655, 0
  br i1 %661, label %672, label %662

662:                                              ; preds = %660
  %663 = bitcast %struct.X509_POLICY_TREE_st** %0 to i8**
  store i8* %78, i8** %663, align 8
  %664 = load i32, i32* %1, align 4
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %671, label %666

666:                                              ; preds = %662
  %667 = call %struct.stack_st_X509_POLICY_NODE* @X509_policy_tree_get0_user_policies(%struct.X509_POLICY_TREE_st* nonnull %79) #4
  %668 = bitcast %struct.stack_st_X509_POLICY_NODE* %667 to %struct.stack_st*
  %669 = call i64 @sk_num(%struct.stack_st* %668) #4
  %670 = icmp eq i64 %669, 0
  br i1 %670, label %674, label %671

671:                                              ; preds = %662, %666
  br label %674

672:                                              ; preds = %370, %247, %289, %233, %337, %541, %553, %490, %505, %356, %311, %184, %185, %660
  %673 = phi %struct.X509_POLICY_TREE_st* [ %79, %660 ], [ null, %185 ], [ null, %184 ], [ %79, %311 ], [ %79, %356 ], [ %79, %505 ], [ %79, %490 ], [ %79, %553 ], [ %79, %541 ], [ %79, %337 ], [ %79, %233 ], [ %79, %289 ], [ %79, %247 ], [ %79, %370 ]
  call void @X509_policy_tree_free(%struct.X509_POLICY_TREE_st* %673)
  br label %674

674:                                              ; preds = %5, %666, %472, %184, %672, %671, %188, %187, %186
  %675 = phi i32 [ 0, %672 ], [ 1, %671 ], [ -2, %188 ], [ 0, %187 ], [ -1, %186 ], [ %475, %472 ], [ -2, %666 ], [ 1, %5 ], [ 1, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  ret i32 %675
}

declare %struct.stack_st_X509_POLICY_NODE* @X509_policy_tree_get0_user_policies(%struct.X509_POLICY_TREE_st*) local_unnamed_addr #2

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_POLICY_NODE_call_free_func(void (i8*)* nocapture, i8*) #3 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_POLICY_NODE_st*)*
  %4 = bitcast i8* %1 to %struct.X509_POLICY_NODE_st*
  tail call void %3(%struct.X509_POLICY_NODE_st* %4) #4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_POLICY_DATA_call_free_func(void (i8*)* nocapture, i8*) #3 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_POLICY_DATA_st*)*
  %4 = bitcast i8* %1 to %struct.X509_POLICY_DATA_st*
  tail call void %3(%struct.X509_POLICY_DATA_st* %4) #4
  ret void
}

declare i32 @X509_check_purpose(%struct.x509_st*, i32, i32) local_unnamed_addr #2

declare %struct.X509_POLICY_CACHE_st* @policy_cache_set(%struct.x509_st*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare %struct.X509_POLICY_DATA_st* @policy_data_new(%struct.POLICYINFO_st*, %struct.asn1_object_st*, i32) local_unnamed_addr #2

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #2

declare %struct.X509_POLICY_NODE_st* @level_add_node(%struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_NODE_st*, %struct.X509_POLICY_TREE_st*) local_unnamed_addr #2

declare i32 @X509_up_ref(%struct.x509_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @policy_node_match(%struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_NODE_st*, %struct.asn1_object_st*) local_unnamed_addr #2

declare %struct.X509_POLICY_NODE_st* @level_find_node(%struct.X509_POLICY_LEVEL_st*, %struct.X509_POLICY_NODE_st*, %struct.asn1_object_st*) local_unnamed_addr #2

declare i8* @sk_delete(%struct.stack_st*, i64) local_unnamed_addr #2

declare %struct.stack_st_X509_POLICY_NODE* @policy_node_cmp_new() local_unnamed_addr #2

declare void @sk_sort(%struct.stack_st*) local_unnamed_addr #2

declare i32 @sk_find(%struct.stack_st*, i64*, i8*, i32 (i32 (i8**, i8**)*, i8**, i8**)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i32 @sk_X509_POLICY_NODE_call_cmp_func(i32 (i8**, i8**)* nocapture, i8** nocapture readonly, i8** nocapture readonly) #3 {
  %4 = alloca %struct.X509_POLICY_NODE_st*, align 8
  %5 = alloca %struct.X509_POLICY_NODE_st*, align 8
  %6 = bitcast %struct.X509_POLICY_NODE_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  %7 = bitcast i8** %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.X509_POLICY_NODE_st** %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %struct.X509_POLICY_NODE_st** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.X509_POLICY_NODE_st** %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast i32 (i8**, i8**)* %0 to i32 (%struct.X509_POLICY_NODE_st**, %struct.X509_POLICY_NODE_st**)*
  %15 = call i32 %14(%struct.X509_POLICY_NODE_st** nonnull %4, %struct.X509_POLICY_NODE_st** nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  ret i32 %15
}

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #2

declare %struct.X509_POLICY_NODE_st* @tree_find_sk(%struct.stack_st_X509_POLICY_NODE*, %struct.asn1_object_st*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
