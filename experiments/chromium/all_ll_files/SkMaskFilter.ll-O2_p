; ModuleID = '../../third_party/skia/src/core/SkMaskFilter.cpp'
source_filename = "../../third_party/skia/src/core/SkMaskFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkMaskFilterBase::NinePatch" = type { %struct.SkMask, %struct.SkIRect, %struct.SkIPoint, %class.SkCachedData* }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkIPoint = type { i32, i32 }
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.SkMaskFilterBase::BlurRec" = type { float, i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%class.sk_sp = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkAutoSMalloc.137 = type { i8*, i64, [1024 x i32] }
%class.SkAAClipBlitterWrapper = type { %class.SkRegion, %class.SkAAClipBlitter, %class.SkRegion*, %class.SkBlitter* }
%class.SkAAClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkAAClip*, %struct.SkIRect, i16*, i8*, %class.SkAutoSMalloc, i8* }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%"class.SkRegion::Cliperator" = type <{ %"class.SkRegion::Iterator", %struct.SkIRect, %struct.SkIRect, i8, [7 x i8] }>
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%class.SkPath = type <{ %class.sk_sp.7, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.7 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.8, %class.SkTDArray.9, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.8 = type { i8*, i32, i32 }
%class.SkTDArray.9 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.10 }
%class.SkTDArray.10 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.19"*, i64 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.24", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.23 }
%class.sk_sp.23 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.27, %class.SkTHashMap, %class.SkTHashMap.35, %class.SkTArray.44, %class.SkTArray.46, i32, i8, [3 x i8] }>
%class.SkTArray.27 = type { %"class.std::__1::unique_ptr.28"*, i64 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.46, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.47 }
%class.sk_sp.47 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.35 = type { %class.SkTHashTable.36 }
%class.SkTHashTable.36 = type { i32, i32, %class.SkAutoTArray.37 }
%class.SkAutoTArray.37 = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.130" }
%"struct.std::__1::pair.130" = type { i32, %class.SkTArray.131* }
%class.SkTArray.131 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.44 = type { %"class.std::__1::unique_ptr.45"*, i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.131, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.46 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.60 }
%class.SkFibBlockSizes.60 = type { i32 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.SkMatrixProvider = type opaque
%class.GrColorInfo = type opaque
%class.GrStyledShape = type opaque
%class.GrSurfaceDrawContext = type opaque
%class.GrPaint = type opaque
%class.GrClip = type opaque
%class.GrSurfaceProxyView = type <{ %class.sk_sp.76, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.76 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.77, %class.sk_sp.78, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.118" }
%class.SkNVRefCnt.77 = type { %"struct.std::__1::atomic" }
%class.sk_sp.78 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.82 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.79, [4 x i8] }>
%union.anon.79 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.80, i8* }
%class.sk_sp.80 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.81, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.81 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.82 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.83, void (i8*)*, i8* }
%class.SkNVRefCnt.83 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.84, i32, [4 x i8] }
%union.anon.84 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.78, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.115, %class.sk_sp.117, %class.sk_sp.117 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.86, %class.SkTMultiMap, %class.SkTDynamicHash.95, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.106, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.86 }
%class.SkTDArray.86 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.87 }
%class.SkTHashTable.87 = type { i32, i32, %class.SkAutoTArray.88 }
%class.SkAutoTArray.88 = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.104, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.104 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.105, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.105 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.106 = type { %class.SkTHashTable.107 }
%class.SkTHashTable.107 = type { i32, i32, %class.SkAutoTArray.108 }
%class.SkAutoTArray.108 = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.115 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.116, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.116 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.117 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__cxx_atomic_impl.121" }
%"struct.std::__1::__cxx_atomic_impl.121" = type { %"struct.std::__1::__cxx_atomic_base_impl.122" }
%"struct.std::__1::__cxx_atomic_base_impl.122" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.80*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.80*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.80*, %class.SkTypeface*, i8*)*, i8* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.11", [7 x i8] }>
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.123, i32, i32 }
%class.sk_sp.123 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.124, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.124 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN16SkMaskFilterBaseD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkFlattenable7flattenER13SkWriteBuffer = comdat any

$_ZNK12SkMaskFilter18getFlattenableTypeEv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

@_ZTV16SkMaskFilterBase = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkMaskFilterBase*)* @_ZN16SkMaskFilterBaseD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkFlattenable*, %class.SkWriteBuffer*)* @_ZNK13SkFlattenable7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkMaskFilter*)* @_ZNK12SkMaskFilter18getFlattenableTypeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkMaskFilterBase*, %class.GrStyledShape*, %struct.SkIRect*, %struct.SkIRect*, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK16SkMaskFilterBase16canFilterMaskGPUERK13GrStyledShapeRK7SkIRectS5_RK8SkMatrixPS3_ to i8*), i8* bitcast (i1 (%class.SkMaskFilterBase*, %class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrPaint*, %class.GrClip*, %class.SkMatrix*, %class.GrStyledShape*)* @_ZNK16SkMaskFilterBase19directFilterMaskGPUEP18GrRecordingContextP20GrSurfaceDrawContextO7GrPaintPK6GrClipRK8SkMatrixRK13GrStyledShape to i8*), i8* bitcast (void (%class.GrSurfaceProxyView*, %class.SkMaskFilterBase*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, i32, %class.SkMatrix*, %struct.SkIRect*)* @_ZNK16SkMaskFilterBase13filterMaskGPUEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaTypeRK8SkMatrixRK7SkIRect to i8*), i8* bitcast (void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)* @_ZNK16SkMaskFilterBase17computeFastBoundsERK6SkRectPS0_ to i8*), i8* bitcast (i1 (%class.SkMaskFilterBase*, %"struct.SkMaskFilterBase::BlurRec"*)* @_ZNK16SkMaskFilterBase7asABlurEPNS_7BlurRecE to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)* @_ZNK16SkMaskFilterBase21onAsFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (i1 (%class.SkMaskFilterBase*)* @_ZNK16SkMaskFilterBase22onHasFragmentProcessorEv to i8*), i8* bitcast (i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)* @_ZNK16SkMaskFilterBase17filterRectsToNineEPK6SkRectiRK8SkMatrixRK7SkIRectPNS_9NinePatchE to i8*), i8* bitcast (i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)* @_ZNK16SkMaskFilterBase17filterRRectToNineERK7SkRRectRK8SkMatrixRK7SkIRectPNS_9NinePatchE to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"rgba\00", align 1

@_ZN16SkMaskFilterBase9NinePatchD1Ev = hidden unnamed_addr alias void (%"class.SkMaskFilterBase::NinePatch"*), void (%"class.SkMaskFilterBase::NinePatch"*)* @_ZN16SkMaskFilterBase9NinePatchD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkMaskFilterBase9NinePatchD2Ev(%"class.SkMaskFilterBase::NinePatch"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %0, i64 0, i32 3
  %3 = load %class.SkCachedData*, %class.SkCachedData** %2, align 8
  %4 = icmp eq %class.SkCachedData* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %3, i1 zeroext false) #8
  br label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %0, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZN6SkMask9FreeImageEPv(i8* %8) #8
  br label %9

9:                                                ; preds = %6, %5
  ret void
}

declare void @_ZN6SkMask9FreeImageEPv(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK16SkMaskFilterBase7asABlurEPNS_7BlurRecE(%class.SkMaskFilterBase* nocapture readnone, %"struct.SkMaskFilterBase::BlurRec"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkMaskFilterBase11filterRRectERK7SkRRectRK8SkMatrixRK12SkRasterClipP9SkBlitter(%class.SkMaskFilterBase*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkMaskFilterBase::NinePatch", align 8
  %7 = bitcast %"class.SkMaskFilterBase::NinePatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %6, i64 0, i32 0, i32 1
  %9 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %6, i64 0, i32 3
  store %class.SkCachedData* null, %class.SkCachedData** %11, align 8
  store i8* null, i8** %10, align 8
  %12 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %3) #8
  %13 = bitcast %class.SkMaskFilterBase* %0 to i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)***
  %14 = load i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)**, i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)*, i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)** %14, i64 17
  %16 = load i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)*, i32 (%class.SkMaskFilterBase*, %class.SkRRect*, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)** %15, align 8
  %17 = call i32 %16(%class.SkMaskFilterBase* %0, %class.SkRRect* dereferenceable(52) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIRect* dereferenceable(16) %12, %"class.SkMaskFilterBase::NinePatch"* nonnull %6) #8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %23

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %6, i64 0, i32 0
  %21 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %6, i64 0, i32 1
  %22 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %6, i64 0, i32 2
  call fastcc void @_ZL9draw_nineRK6SkMaskRK7SkIRectRK8SkIPointbRK12SkRasterClipP9SkBlitter(%struct.SkMask* nonnull dereferenceable(32) %20, %struct.SkIRect* dereferenceable(16) %21, %struct.SkIPoint* dereferenceable(8) %22, i1 zeroext true, %class.SkRasterClip* dereferenceable(72) %3, %class.SkBlitter* %4)
  br label %23

23:                                               ; preds = %5, %19
  %24 = phi i1 [ true, %19 ], [ false, %5 ]
  %25 = load %class.SkCachedData*, %class.SkCachedData** %11, align 8
  %26 = icmp eq %class.SkCachedData* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %25, i1 zeroext false) #8
  br label %30

28:                                               ; preds = %23
  %29 = load i8*, i8** %10, align 8
  call void @_ZN6SkMask9FreeImageEPv(i8* %29) #8
  br label %30

30:                                               ; preds = %27, %28
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #8
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL9draw_nineRK6SkMaskRK7SkIRectRK8SkIPointbRK12SkRasterClipP9SkBlitter(%struct.SkMask* readonly dereferenceable(32), %struct.SkIRect* dereferenceable(16), %struct.SkIPoint* nocapture readonly dereferenceable(8), i1 zeroext, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) unnamed_addr #0 {
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %struct.SkIRect, align 4
  %10 = alloca %struct.SkIRect, align 4
  %11 = alloca %struct.SkIRect, align 4
  %12 = alloca %struct.SkMask, align 8
  %13 = alloca <4 x i32>, align 16
  %14 = bitcast <4 x i32>* %13 to %struct.SkIRect*
  %15 = alloca %class.SkAutoSMalloc.137, align 8
  %16 = alloca %struct.SkIRect, align 4
  %17 = alloca %struct.SkMask, align 8
  %18 = alloca %struct.SkMask, align 8
  %19 = alloca %class.SkAAClipBlitterWrapper, align 8
  %20 = alloca %"class.SkRegion::Cliperator", align 8
  %21 = bitcast %class.SkAAClipBlitterWrapper* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 1160, i1 false)
  call void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %19, %class.SkRasterClip* dereferenceable(72) %4, %class.SkBlitter* %5) #8
  %22 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %19, i64 0, i32 3
  %23 = load %class.SkBlitter*, %class.SkBlitter** %22, align 8
  %24 = bitcast %"class.SkRegion::Cliperator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 80, i1 false)
  %25 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %19, i64 0, i32 2
  %26 = load %class.SkRegion*, %class.SkRegion** %25, align 8
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %20, %class.SkRegion* dereferenceable(24) %26, %struct.SkIRect* dereferenceable(16) %1) #8
  %27 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %20, i64 0, i32 3
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %506

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %20, i64 0, i32 2
  %32 = bitcast %struct.SkMask* %12 to i8*
  %33 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 0
  %34 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %34, i64 0, i32 0
  %36 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1, i32 3
  %39 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 2
  %40 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 3
  %41 = bitcast i32* %39 to i64*
  %42 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 1
  %43 = bitcast %struct.SkIRect* %34 to i8*
  %44 = bitcast %struct.SkIRect* %42 to i8*
  %45 = bitcast %struct.SkIRect* %42 to i64*
  %46 = bitcast %struct.SkIRect* %34 to i64*
  %47 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 1, i32 1
  %49 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 0
  %50 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 2
  %51 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 3
  %52 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %54 = bitcast %struct.SkIRect* %11 to i8*
  %55 = bitcast %class.SkBlitter* %23 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %56 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %57 = bitcast %struct.SkIRect* %7 to i8*
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %59 = bitcast %struct.SkIRect* %8 to i8*
  %60 = bitcast %struct.SkIRect* %9 to i8*
  %61 = bitcast <4 x i32>* %13 to i8*
  %62 = getelementptr inbounds <4 x i32>, <4 x i32>* %13, i64 0, i64 0
  %63 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 1
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 2
  %65 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 3
  %66 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %42, i64 0, i32 0
  %67 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 1, i32 2
  %68 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %0, i64 0, i32 1, i32 3
  %69 = bitcast %struct.SkIRect* %10 to i8*
  %70 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 0
  %71 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 3
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 2
  %73 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 1
  %74 = bitcast %class.SkBlitter* %23 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %75 = bitcast %class.SkAutoSMalloc.137* %15 to i8*
  %76 = getelementptr inbounds %class.SkAutoSMalloc.137, %class.SkAutoSMalloc.137* %15, i64 0, i32 2
  %77 = bitcast [1024 x i32]* %76 to i8*
  %78 = getelementptr inbounds %class.SkAutoSMalloc.137, %class.SkAutoSMalloc.137* %15, i64 0, i32 2, i64 0
  %79 = bitcast %class.SkAutoSMalloc.137* %15 to i32**
  %80 = getelementptr inbounds %class.SkAutoSMalloc.137, %class.SkAutoSMalloc.137* %15, i64 0, i32 1
  %81 = bitcast i32* %78 to i16*
  %82 = getelementptr inbounds %class.SkAutoSMalloc.137, %class.SkAutoSMalloc.137* %15, i64 0, i32 0
  %83 = bitcast %struct.SkIRect* %16 to i8*
  %84 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 0
  %85 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 1
  %86 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 2
  %87 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 3
  %88 = bitcast %class.SkBlitter* %23 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %89 = bitcast %struct.SkMask* %17 to i8*
  %90 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %17, i64 0, i32 0
  %91 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %17, i64 0, i32 1
  %92 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %17, i64 0, i32 2
  %93 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %17, i64 0, i32 3
  %94 = bitcast %struct.SkIRect* %91 to i8*
  %95 = bitcast %struct.SkMask* %18 to i8*
  %96 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %18, i64 0, i32 0
  %97 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %18, i64 0, i32 1
  %98 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %18, i64 0, i32 2
  %99 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %18, i64 0, i32 3
  %100 = bitcast %struct.SkIRect* %97 to i8*
  %101 = bitcast i32* %78 to i8*
  %102 = bitcast %struct.SkIPoint* %2 to <2 x i32>*
  %103 = bitcast %struct.SkIRect* %1 to <4 x i32>*
  %104 = bitcast %struct.SkIRect* %42 to <4 x i32>*
  br label %105

105:                                              ; preds = %503, %30
  %106 = load <2 x i32>, <2 x i32>* %102, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #8
  store i64 -6148914691236517206, i64* %41, align 8
  store i8* null, i8** %33, align 8
  %107 = load i64, i64* %45, align 4
  store i64 %107, i64* %46, align 8
  %108 = extractelement <2 x i32> %106, i32 0
  store i32 %108, i32* %37, align 8
  %109 = extractelement <2 x i32> %106, i32 1
  store i32 %109, i32* %38, align 4
  %110 = trunc i64 %107 to i32
  %111 = sub i32 %108, %110
  %112 = icmp sgt i32 %111, 0
  %113 = lshr i64 %107, 32
  %114 = trunc i64 %113 to i32
  %115 = sub i32 %109, %114
  %116 = icmp sgt i32 %115, 0
  %117 = and i1 %112, %116
  br i1 %117, label %118, label %156

118:                                              ; preds = %105
  %119 = load i32, i32* %48, align 4
  %120 = sub nsw i32 %114, %119
  %121 = load i8*, i8** %49, align 8
  %122 = load i32, i32* %50, align 8
  %123 = mul i32 %122, %120
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %121, i64 %124
  store i8* %125, i8** %33, align 8
  store i32 %122, i32* %39, align 8
  %126 = load i8, i8* %51, align 4
  store i8 %126, i8* %40, align 4
  %127 = load i32, i32* %52, align 4
  %128 = load i32, i32* %53, align 4
  %129 = sext i32 %108 to i64
  %130 = sext i32 %127 to i64
  %131 = shl i64 %107, 32
  %132 = ashr exact i64 %131, 32
  %133 = sub nsw i64 %129, %132
  %134 = add nsw i64 %133, %130
  %135 = icmp slt i64 %134, 2147483647
  %136 = select i1 %135, i64 %134, i64 2147483647
  %137 = icmp sgt i64 %136, -2147483647
  %138 = select i1 %137, i64 %136, i64 -2147483647
  %139 = trunc i64 %138 to i32
  store i32 %139, i32* %37, align 8
  %140 = sext i32 %109 to i64
  %141 = sext i32 %128 to i64
  %142 = ashr i64 %107, 32
  %143 = sub nsw i64 %140, %142
  %144 = add nsw i64 %143, %141
  %145 = icmp slt i64 %144, 2147483647
  %146 = select i1 %145, i64 %144, i64 2147483647
  %147 = icmp sgt i64 %146, -2147483647
  %148 = select i1 %147, i64 %146, i64 -2147483647
  %149 = trunc i64 %148 to i32
  store i32 %149, i32* %38, align 4
  store i32 %127, i32* %35, align 8
  store i32 %128, i32* %36, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 -86, i64 16, i1 false) #8
  %150 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %11, %struct.SkIRect* dereferenceable(16) %34, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %150, label %151, label %155

151:                                              ; preds = %118
  %152 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %55, align 8
  %153 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %152, i64 7
  %154 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %153, align 8
  call void %154(%class.SkBlitter* %23, %struct.SkMask* nonnull dereferenceable(32) %12, %struct.SkIRect* nonnull dereferenceable(16) %11) #8
  br label %155

155:                                              ; preds = %151, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #8
  br label %156

156:                                              ; preds = %155, %105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 4 %44, i64 16, i1 false) #8
  %157 = add nsw i32 %108, 1
  store i32 %157, i32* %35, align 8
  store i32 %109, i32* %38, align 4
  %158 = load i32, i32* %37, align 8
  %159 = sub i32 %158, %157
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %208

161:                                              ; preds = %156
  %162 = load i32, i32* %36, align 4
  %163 = sub i32 %109, %162
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %208

165:                                              ; preds = %161
  %166 = load i32, i32* %47, align 4
  %167 = sub nsw i32 %157, %166
  %168 = load i32, i32* %48, align 4
  %169 = sub nsw i32 %162, %168
  %170 = load i8*, i8** %49, align 8
  %171 = load i32, i32* %50, align 8
  %172 = mul i32 %171, %169
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %170, i64 %173
  %175 = sext i32 %167 to i64
  %176 = getelementptr inbounds i8, i8* %174, i64 %175
  store i8* %176, i8** %33, align 8
  store i32 %171, i32* %39, align 8
  %177 = load i8, i8* %51, align 4
  store i8 %177, i8* %40, align 4
  %178 = load i32, i32* %56, align 4
  %179 = sub nsw i32 %178, %159
  %180 = load i32, i32* %53, align 4
  %181 = sext i32 %158 to i64
  %182 = sext i32 %179 to i64
  %183 = xor i32 %108, -1
  %184 = sext i32 %183 to i64
  %185 = add nsw i64 %181, %184
  %186 = add nsw i64 %185, %182
  %187 = icmp slt i64 %186, 2147483647
  %188 = select i1 %187, i64 %186, i64 2147483647
  %189 = icmp sgt i64 %188, -2147483647
  %190 = select i1 %189, i64 %188, i64 -2147483647
  %191 = trunc i64 %190 to i32
  store i32 %191, i32* %37, align 8
  %192 = sext i32 %109 to i64
  %193 = sext i32 %180 to i64
  %194 = sext i32 %162 to i64
  %195 = sub nsw i64 %192, %194
  %196 = add nsw i64 %195, %193
  %197 = icmp slt i64 %196, 2147483647
  %198 = select i1 %197, i64 %196, i64 2147483647
  %199 = icmp sgt i64 %198, -2147483647
  %200 = select i1 %199, i64 %198, i64 -2147483647
  %201 = trunc i64 %200 to i32
  store i32 %201, i32* %38, align 4
  store i32 %179, i32* %35, align 8
  store i32 %180, i32* %36, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %57, i8 -86, i64 16, i1 false) #8
  %202 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* dereferenceable(16) %34, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %202, label %203, label %207

203:                                              ; preds = %165
  %204 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %55, align 8
  %205 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %204, i64 7
  %206 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %205, align 8
  call void %206(%class.SkBlitter* %23, %struct.SkMask* nonnull dereferenceable(32) %12, %struct.SkIRect* nonnull dereferenceable(16) %7) #8
  br label %207

207:                                              ; preds = %203, %165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  br label %208

208:                                              ; preds = %207, %161, %156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 4 %44, i64 16, i1 false) #8
  store i32 %108, i32* %37, align 8
  %209 = add nsw i32 %109, 1
  store i32 %209, i32* %36, align 4
  %210 = load i32, i32* %35, align 8
  %211 = sub i32 %108, %210
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %213, label %259

213:                                              ; preds = %208
  %214 = load i32, i32* %38, align 4
  %215 = sub i32 %214, %209
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %259

217:                                              ; preds = %213
  %218 = load i32, i32* %47, align 4
  %219 = sub nsw i32 %210, %218
  %220 = load i32, i32* %48, align 4
  %221 = sub nsw i32 %209, %220
  %222 = load i8*, i8** %49, align 8
  %223 = load i32, i32* %50, align 8
  %224 = mul i32 %223, %221
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %222, i64 %225
  %227 = sext i32 %219 to i64
  %228 = getelementptr inbounds i8, i8* %226, i64 %227
  store i8* %228, i8** %33, align 8
  store i32 %223, i32* %39, align 8
  %229 = load i8, i8* %51, align 4
  store i8 %229, i8* %40, align 4
  %230 = load i32, i32* %52, align 4
  %231 = load i32, i32* %58, align 4
  %232 = sub nsw i32 %231, %215
  %233 = sext i32 %108 to i64
  %234 = sext i32 %230 to i64
  %235 = sext i32 %210 to i64
  %236 = sub nsw i64 %233, %235
  %237 = add nsw i64 %236, %234
  %238 = icmp slt i64 %237, 2147483647
  %239 = select i1 %238, i64 %237, i64 2147483647
  %240 = icmp sgt i64 %239, -2147483647
  %241 = select i1 %240, i64 %239, i64 -2147483647
  %242 = trunc i64 %241 to i32
  store i32 %242, i32* %37, align 8
  %243 = sext i32 %214 to i64
  %244 = sext i32 %232 to i64
  %245 = sext i32 %209 to i64
  %246 = sub nsw i64 %243, %245
  %247 = add nsw i64 %246, %244
  %248 = icmp slt i64 %247, 2147483647
  %249 = select i1 %248, i64 %247, i64 2147483647
  %250 = icmp sgt i64 %249, -2147483647
  %251 = select i1 %250, i64 %249, i64 -2147483647
  %252 = trunc i64 %251 to i32
  store i32 %252, i32* %38, align 4
  store i32 %230, i32* %35, align 8
  store i32 %232, i32* %36, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %59, i8 -86, i64 16, i1 false) #8
  %253 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %8, %struct.SkIRect* dereferenceable(16) %34, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %253, label %254, label %258

254:                                              ; preds = %217
  %255 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %55, align 8
  %256 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %255, i64 7
  %257 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %256, align 8
  call void %257(%class.SkBlitter* %23, %struct.SkMask* nonnull dereferenceable(32) %12, %struct.SkIRect* nonnull dereferenceable(16) %8) #8
  br label %258

258:                                              ; preds = %254, %217
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #8
  br label %259

259:                                              ; preds = %258, %213, %208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 4 %44, i64 16, i1 false) #8
  store i32 %157, i32* %35, align 8
  store i32 %209, i32* %36, align 4
  %260 = load i32, i32* %37, align 8
  %261 = sub i32 %260, %157
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %263, label %311

263:                                              ; preds = %259
  %264 = load i32, i32* %38, align 4
  %265 = sub i32 %264, %209
  %266 = icmp sgt i32 %265, 0
  br i1 %266, label %267, label %311

267:                                              ; preds = %263
  %268 = load i32, i32* %47, align 4
  %269 = sub nsw i32 %157, %268
  %270 = load i32, i32* %48, align 4
  %271 = sub nsw i32 %209, %270
  %272 = load i8*, i8** %49, align 8
  %273 = load i32, i32* %50, align 8
  %274 = mul i32 %273, %271
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* %272, i64 %275
  %277 = sext i32 %269 to i64
  %278 = getelementptr inbounds i8, i8* %276, i64 %277
  store i8* %278, i8** %33, align 8
  store i32 %273, i32* %39, align 8
  %279 = load i8, i8* %51, align 4
  store i8 %279, i8* %40, align 4
  %280 = load i32, i32* %56, align 4
  %281 = sub nsw i32 %280, %261
  %282 = load i32, i32* %58, align 4
  %283 = sub nsw i32 %282, %265
  %284 = sext i32 %260 to i64
  %285 = sext i32 %281 to i64
  %286 = xor i32 %108, -1
  %287 = sext i32 %286 to i64
  %288 = add nsw i64 %284, %287
  %289 = add nsw i64 %288, %285
  %290 = icmp slt i64 %289, 2147483647
  %291 = select i1 %290, i64 %289, i64 2147483647
  %292 = icmp sgt i64 %291, -2147483647
  %293 = select i1 %292, i64 %291, i64 -2147483647
  %294 = trunc i64 %293 to i32
  store i32 %294, i32* %37, align 8
  %295 = sext i32 %264 to i64
  %296 = sext i32 %283 to i64
  %297 = sext i32 %209 to i64
  %298 = sub nsw i64 %295, %297
  %299 = add nsw i64 %298, %296
  %300 = icmp slt i64 %299, 2147483647
  %301 = select i1 %300, i64 %299, i64 2147483647
  %302 = icmp sgt i64 %301, -2147483647
  %303 = select i1 %302, i64 %301, i64 -2147483647
  %304 = trunc i64 %303 to i32
  store i32 %304, i32* %38, align 4
  store i32 %281, i32* %35, align 8
  store i32 %283, i32* %36, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %60, i8 -86, i64 16, i1 false) #8
  %305 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %9, %struct.SkIRect* dereferenceable(16) %34, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %305, label %306, label %310

306:                                              ; preds = %267
  %307 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %55, align 8
  %308 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %307, i64 7
  %309 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %308, align 8
  call void %309(%class.SkBlitter* %23, %struct.SkMask* nonnull dereferenceable(32) %12, %struct.SkIRect* nonnull dereferenceable(16) %9) #8
  br label %310

310:                                              ; preds = %306, %267
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8
  br label %311

311:                                              ; preds = %310, %263, %259
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #8
  %312 = load <4 x i32>, <4 x i32>* %103, align 4
  %313 = load <4 x i32>, <4 x i32>* %104, align 4
  %314 = insertelement <4 x i32> undef, i32 %108, i32 0
  %315 = insertelement <4 x i32> %314, i32 %109, i32 1
  %316 = insertelement <4 x i32> %315, i32 %157, i32 2
  %317 = insertelement <4 x i32> %316, i32 %209, i32 3
  %318 = add <4 x i32> %312, %317
  %319 = sub <4 x i32> %318, %313
  store <4 x i32> %319, <4 x i32>* %13, align 16
  %320 = extractelement <4 x i32> %319, i32 0
  %321 = extractelement <4 x i32> %319, i32 2
  br i1 %3, label %322, label %337

322:                                              ; preds = %311
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %69, i8 -86, i64 16, i1 false) #8
  %323 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %10, %struct.SkIRect* nonnull dereferenceable(16) %14, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %323, label %324, label %334

324:                                              ; preds = %322
  %325 = load i32, i32* %70, align 4
  %326 = load i32, i32* %73, align 4
  %327 = load i32, i32* %72, align 4
  %328 = sub i32 %327, %325
  %329 = load i32, i32* %71, align 4
  %330 = sub i32 %329, %326
  %331 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %74, align 8
  %332 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %331, i64 5
  %333 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %332, align 8
  call void %333(%class.SkBlitter* %23, i32 %325, i32 %326, i32 %328, i32 %330) #8
  br label %334

334:                                              ; preds = %324, %322
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #8
  %335 = load i32, i32* %64, align 8
  %336 = load i32, i32* %62, align 16
  br label %337

337:                                              ; preds = %334, %311
  %338 = phi i32 [ %336, %334 ], [ %320, %311 ]
  %339 = phi i32 [ %335, %334 ], [ %321, %311 ]
  %340 = sub i32 %339, %338
  %341 = add nsw i32 %340, 1
  %342 = sext i32 %341 to i64
  %343 = mul nsw i64 %342, 3
  call void @llvm.lifetime.start.p0i8(i64 4112, i8* nonnull %75) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 4096, i1 false) #8
  store i32* %78, i32** %79, align 8
  store i64 4096, i64* %80, align 8
  %344 = icmp ult i64 %343, 4097
  br i1 %344, label %350, label %345

345:                                              ; preds = %337
  %346 = call i8* @_Z15sk_malloc_flagsmj(i64 %343, i32 2) #8
  store i8* %346, i8** %82, align 8
  store i64 %343, i64* %80, align 8
  %347 = bitcast i8* %346 to i16*
  %348 = load i32, i32* %62, align 16
  %349 = load i32, i32* %64, align 8
  br label %350

350:                                              ; preds = %345, %337
  %351 = phi i32 [ %339, %337 ], [ %349, %345 ]
  %352 = phi i32 [ %338, %337 ], [ %348, %345 ]
  %353 = phi i16* [ %81, %337 ], [ %347, %345 ]
  %354 = sext i32 %340 to i64
  %355 = getelementptr inbounds i16, i16* %353, i64 1
  %356 = getelementptr inbounds i16, i16* %355, i64 %354
  %357 = bitcast i16* %356 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #8
  %358 = load i32, i32* %53, align 4
  %359 = load i32, i32* %63, align 4
  store i32 %352, i32* %84, align 4
  store i32 %358, i32* %85, align 4
  store i32 %351, i32* %86, align 4
  store i32 %359, i32* %87, align 4
  %360 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %16, %struct.SkIRect* nonnull dereferenceable(16) %16, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %360, label %361, label %400

361:                                              ; preds = %350
  %362 = load i32, i32* %85, align 4
  %363 = load i32, i32* %53, align 4
  %364 = sub nsw i32 %362, %363
  %365 = icmp sgt i32 %364, 0
  %366 = select i1 %365, i32 %364, i32 0
  %367 = load i32, i32* %87, align 4
  %368 = sub i32 %367, %362
  %369 = add nsw i32 %366, %368
  %370 = load i32, i32* %86, align 4
  %371 = load i32, i32* %84, align 4
  %372 = sub i32 %370, %371
  %373 = icmp sgt i32 %368, 0
  br i1 %373, label %374, label %400

374:                                              ; preds = %361
  %375 = trunc i32 %372 to i16
  %376 = sext i32 %372 to i64
  %377 = getelementptr inbounds i16, i16* %353, i64 %376
  %378 = sext i32 %108 to i64
  br label %379

379:                                              ; preds = %379, %374
  %380 = phi i32 [ %366, %374 ], [ %398, %379 ]
  store i16 %375, i16* %353, align 2
  store i16 0, i16* %377, align 2
  %381 = load i8*, i8** %49, align 8
  %382 = getelementptr inbounds i8, i8* %381, i64 %378
  %383 = load i32, i32* %47, align 8
  %384 = sext i32 %383 to i64
  %385 = sub nsw i64 0, %384
  %386 = getelementptr inbounds i8, i8* %382, i64 %385
  %387 = load i32, i32* %50, align 8
  %388 = mul i32 %387, %380
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds i8, i8* %386, i64 %389
  %391 = load i8, i8* %390, align 1
  store i8 %391, i8* %357, align 1
  %392 = load i32, i32* %84, align 4
  %393 = load i32, i32* %53, align 4
  %394 = add nsw i32 %393, %380
  %395 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %88, align 8
  %396 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %395, i64 3
  %397 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %396, align 8
  call void %397(%class.SkBlitter* %23, i32 %392, i32 %394, i8* %357, i16* %353) #8
  %398 = add nuw nsw i32 %380, 1
  %399 = icmp slt i32 %398, %369
  br i1 %399, label %379, label %400

400:                                              ; preds = %379, %361, %350
  %401 = load i32, i32* %62, align 16
  %402 = load i32, i32* %65, align 4
  %403 = load i32, i32* %64, align 8
  %404 = load i32, i32* %58, align 4
  store i32 %401, i32* %84, align 4
  store i32 %402, i32* %85, align 4
  store i32 %403, i32* %86, align 4
  store i32 %404, i32* %87, align 4
  %405 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %16, %struct.SkIRect* nonnull dereferenceable(16) %16, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %405, label %406, label %448

406:                                              ; preds = %400
  %407 = load i32, i32* %58, align 4
  %408 = load i32, i32* %87, align 4
  %409 = sub nsw i32 %407, %408
  %410 = load i32, i32* %85, align 4
  %411 = sub i32 %408, %410
  %412 = add nsw i32 %411, %409
  %413 = load i32, i32* %86, align 4
  %414 = load i32, i32* %84, align 4
  %415 = sub i32 %413, %414
  %416 = icmp sgt i32 %411, 0
  br i1 %416, label %417, label %448

417:                                              ; preds = %406
  %418 = trunc i32 %415 to i16
  %419 = sext i32 %415 to i64
  %420 = getelementptr inbounds i16, i16* %353, i64 %419
  %421 = sext i32 %108 to i64
  br label %422

422:                                              ; preds = %422, %417
  %423 = phi i32 [ %409, %417 ], [ %446, %422 ]
  store i16 %418, i16* %353, align 2
  store i16 0, i16* %420, align 2
  %424 = load i32, i32* %68, align 4
  %425 = xor i32 %423, -1
  %426 = add i32 %424, %425
  %427 = load i8*, i8** %49, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 %421
  %429 = load i32, i32* %47, align 8
  %430 = sext i32 %429 to i64
  %431 = sub nsw i64 0, %430
  %432 = getelementptr inbounds i8, i8* %428, i64 %431
  %433 = load i32, i32* %48, align 4
  %434 = sub i32 %426, %433
  %435 = load i32, i32* %50, align 8
  %436 = mul i32 %434, %435
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds i8, i8* %432, i64 %437
  %439 = load i8, i8* %438, align 1
  store i8 %439, i8* %357, align 1
  %440 = load i32, i32* %84, align 4
  %441 = load i32, i32* %58, align 4
  %442 = add i32 %441, %425
  %443 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %88, align 8
  %444 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %443, i64 3
  %445 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %444, align 8
  call void %445(%class.SkBlitter* %23, i32 %440, i32 %442, i8* %357, i16* %353) #8
  %446 = add nsw i32 %423, 1
  %447 = icmp slt i32 %446, %412
  br i1 %447, label %422, label %448

448:                                              ; preds = %422, %406, %400
  %449 = load i32, i32* %52, align 4
  %450 = load i32, i32* %63, align 4
  %451 = load i32, i32* %62, align 16
  %452 = load i32, i32* %65, align 4
  store i32 %449, i32* %84, align 4
  store i32 %450, i32* %85, align 4
  store i32 %451, i32* %86, align 4
  store i32 %452, i32* %87, align 4
  %453 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %16, %struct.SkIRect* nonnull dereferenceable(16) %16, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %453, label %454, label %473

454:                                              ; preds = %448
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %89) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 24, i1 false) #8
  %455 = load i32, i32* %66, align 4
  %456 = load i32, i32* %84, align 4
  %457 = add nsw i32 %456, %455
  %458 = load i32, i32* %52, align 4
  %459 = sub i32 %457, %458
  %460 = load i8*, i8** %49, align 8
  %461 = sext i32 %459 to i64
  %462 = getelementptr inbounds i8, i8* %460, i64 %461
  %463 = sext i32 %455 to i64
  %464 = sub nsw i64 0, %463
  %465 = getelementptr inbounds i8, i8* %462, i64 %464
  %466 = load i32, i32* %50, align 8
  %467 = mul i32 %466, %109
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds i8, i8* %465, i64 %468
  store i8* %469, i8** %90, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 4 %83, i64 16, i1 false) #8
  store i32 0, i32* %92, align 8
  store i8 1, i8* %93, align 4
  %470 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %55, align 8
  %471 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %470, i64 7
  %472 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %471, align 8
  call void %472(%class.SkBlitter* %23, %struct.SkMask* nonnull dereferenceable(32) %17, %struct.SkIRect* nonnull dereferenceable(16) %16) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %89) #8
  br label %473

473:                                              ; preds = %454, %448
  %474 = load i32, i32* %64, align 8
  %475 = load i32, i32* %63, align 4
  %476 = load i32, i32* %56, align 4
  %477 = load i32, i32* %65, align 4
  store i32 %474, i32* %84, align 4
  store i32 %475, i32* %85, align 4
  store i32 %476, i32* %86, align 4
  store i32 %477, i32* %87, align 4
  %478 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %16, %struct.SkIRect* nonnull dereferenceable(16) %16, %struct.SkIRect* dereferenceable(16) %31) #8
  br i1 %478, label %479, label %499

479:                                              ; preds = %473
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 24, i1 false) #8
  %480 = load i32, i32* %67, align 4
  %481 = load i32, i32* %56, align 4
  %482 = sub i32 %480, %481
  %483 = load i32, i32* %84, align 4
  %484 = add nsw i32 %482, %483
  %485 = load i8*, i8** %49, align 8
  %486 = sext i32 %484 to i64
  %487 = getelementptr inbounds i8, i8* %485, i64 %486
  %488 = load i32, i32* %47, align 8
  %489 = sext i32 %488 to i64
  %490 = sub nsw i64 0, %489
  %491 = getelementptr inbounds i8, i8* %487, i64 %490
  %492 = load i32, i32* %50, align 8
  %493 = mul i32 %492, %109
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds i8, i8* %491, i64 %494
  store i8* %495, i8** %96, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 4 %83, i64 16, i1 false) #8
  store i32 0, i32* %98, align 8
  store i8 1, i8* %99, align 4
  %496 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %55, align 8
  %497 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %496, i64 7
  %498 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %497, align 8
  call void %498(%class.SkBlitter* %23, %struct.SkMask* nonnull dereferenceable(32) %18, %struct.SkIRect* nonnull dereferenceable(16) %16) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #8
  br label %499

499:                                              ; preds = %479, %473
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #8
  %500 = load i8*, i8** %82, align 8
  %501 = icmp eq i8* %500, %101
  br i1 %501, label %503, label %502

502:                                              ; preds = %499
  call void @_Z7sk_freePv(i8* %500) #8
  br label %503

503:                                              ; preds = %499, %502
  call void @llvm.lifetime.end.p0i8(i64 4112, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #8
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %20) #8
  %504 = load i8, i8* %27, align 8, !range !2
  %505 = icmp eq i8 %504, 0
  br i1 %505, label %105, label %506

506:                                              ; preds = %503, %6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %24) #8
  %507 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %19, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %507) #8
  %508 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %19, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %508) #8
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %21) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkMaskFilterBase10filterPathERK6SkPathRK8SkMatrixRK12SkRasterClipP9SkBlitterN11SkStrokeRec9InitStyleE(%class.SkMaskFilterBase*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca [2 x %struct.SkRect], align 16
  %8 = alloca %"class.SkMaskFilterBase::NinePatch", align 8
  %9 = alloca %struct.SkMask, align 8
  %10 = alloca %struct.SkMask, align 8
  %11 = alloca %class.SkAAClipBlitterWrapper, align 8
  %12 = alloca %"class.SkRegion::Cliperator", align 8
  %13 = bitcast [2 x %struct.SkRect]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  %14 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 0
  %15 = icmp eq i32 %5, 1
  %16 = bitcast [2 x %struct.SkRect]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -1, i64 32, i1 false)
  br i1 %15, label %17, label %49

17:                                               ; preds = %6
  %18 = call zeroext i1 @_ZN10SkPathPriv17IsNestedFillRectsERK6SkPathP6SkRectP15SkPathDirection(%class.SkPath* dereferenceable(16) %1, %struct.SkRect* nonnull %14, i32* null) #8
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %1, %struct.SkRect* nonnull %14, i8* null, i32* null) #8
  br i1 %20, label %21, label %49

21:                                               ; preds = %17, %19
  %22 = phi i32 [ 1, %19 ], [ 2, %17 ]
  %23 = bitcast %"class.SkMaskFilterBase::NinePatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %8, i64 0, i32 0, i32 1
  %25 = bitcast %struct.SkIRect* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 48, i1 false)
  %26 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %8, i64 0, i32 0, i32 0
  store i8* null, i8** %26, align 8
  %27 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %8, i64 0, i32 3
  store %class.SkCachedData* null, %class.SkCachedData** %27, align 8
  %28 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %3) #8
  %29 = bitcast %class.SkMaskFilterBase* %0 to i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)***
  %30 = load i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)**, i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)*, i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)** %30, i64 16
  %32 = load i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)*, i32 (%class.SkMaskFilterBase*, %struct.SkRect*, i32, %class.SkMatrix*, %struct.SkIRect*, %"class.SkMaskFilterBase::NinePatch"*)** %31, align 8
  %33 = call i32 %32(%class.SkMaskFilterBase* %0, %struct.SkRect* nonnull %14, i32 %22, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIRect* dereferenceable(16) %28, %"class.SkMaskFilterBase::NinePatch"* nonnull %8) #8
  switch i32 %33, label %39 [
    i32 0, label %40
    i32 1, label %34
  ]

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %8, i64 0, i32 0
  %36 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %8, i64 0, i32 1
  %37 = getelementptr inbounds %"class.SkMaskFilterBase::NinePatch", %"class.SkMaskFilterBase::NinePatch"* %8, i64 0, i32 2
  %38 = icmp eq i32 %22, 1
  call fastcc void @_ZL9draw_nineRK6SkMaskRK7SkIRectRK8SkIPointbRK12SkRasterClipP9SkBlitter(%struct.SkMask* nonnull dereferenceable(32) %35, %struct.SkIRect* dereferenceable(16) %36, %struct.SkIPoint* dereferenceable(8) %37, i1 zeroext %38, %class.SkRasterClip* dereferenceable(72) %3, %class.SkBlitter* %4)
  br label %40

39:                                               ; preds = %21
  br label %40

40:                                               ; preds = %21, %39, %34
  %41 = phi i1 [ undef, %39 ], [ true, %34 ], [ false, %21 ]
  %42 = phi i1 [ true, %39 ], [ false, %34 ], [ false, %21 ]
  %43 = load %class.SkCachedData*, %class.SkCachedData** %27, align 8
  %44 = icmp eq %class.SkCachedData* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %40
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %43, i1 zeroext false) #8
  br label %48

46:                                               ; preds = %40
  %47 = load i8*, i8** %26, align 8
  call void @_ZN6SkMask9FreeImageEPv(i8* %47) #8
  br label %48

48:                                               ; preds = %45, %46
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #8
  br i1 %42, label %49, label %100

49:                                               ; preds = %6, %48, %19
  %50 = bitcast %struct.SkMask* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #8
  %51 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 0
  %52 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1
  %53 = bitcast %struct.SkIRect* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  store i8* null, i8** %51, align 8
  %54 = bitcast %struct.SkMask* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #8
  %55 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 0
  %56 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 1
  %57 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 1
  %58 = bitcast %struct.SkIRect* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 24, i1 false)
  store i8* null, i8** %55, align 8
  %59 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %3) #8
  %60 = bitcast %class.SkMaskFilterBase* %0 to %class.SkMaskFilter*
  %61 = call zeroext i1 @_ZN6SkDraw10DrawToMaskERK6SkPathPK7SkIRectPK12SkMaskFilterPK8SkMatrixP6SkMaskNSC_10CreateModeEN11SkStrokeRec9InitStyleE(%class.SkPath* dereferenceable(16) %1, %struct.SkIRect* %59, %class.SkMaskFilter* %60, %class.SkMatrix* %2, %struct.SkMask* nonnull %9, i32 2, i32 %5) #8
  br i1 %61, label %62, label %98

62:                                               ; preds = %49
  %63 = load i8*, i8** %51, align 8
  %64 = bitcast %class.SkMaskFilterBase* %0 to i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %65 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %65, i64 8
  %67 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %66, align 8
  %68 = call zeroext i1 %67(%class.SkMaskFilterBase* %0, %struct.SkMask* nonnull %10, %struct.SkMask* nonnull dereferenceable(32) %9, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIPoint* null) #8
  br i1 %68, label %69, label %94

69:                                               ; preds = %62
  %70 = load i8*, i8** %55, align 8
  %71 = bitcast %class.SkAAClipBlitterWrapper* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %71) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 1160, i1 false)
  call void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %11, %class.SkRasterClip* dereferenceable(72) %3, %class.SkBlitter* %4) #8
  %72 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %11, i64 0, i32 3
  %73 = load %class.SkBlitter*, %class.SkBlitter** %72, align 8
  %74 = bitcast %"class.SkRegion::Cliperator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %74) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 80, i1 false)
  %75 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %11, i64 0, i32 2
  %76 = load %class.SkRegion*, %class.SkRegion** %75, align 8
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %12, %class.SkRegion* dereferenceable(24) %76, %struct.SkIRect* dereferenceable(16) %56) #8
  %77 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %12, i64 0, i32 3
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %89

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %12, i64 0, i32 2
  %82 = bitcast %class.SkBlitter* %73 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  br label %83

83:                                               ; preds = %83, %80
  %84 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %82, align 8
  %85 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %84, i64 7
  %86 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %85, align 8
  call void %86(%class.SkBlitter* %73, %struct.SkMask* nonnull dereferenceable(32) %10, %struct.SkIRect* dereferenceable(16) %81) #8
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %12) #8
  %87 = load i8, i8* %77, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %83, label %89

89:                                               ; preds = %83, %69
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %74) #8
  %90 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %11, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %90) #8
  %91 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %11, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %71) #8
  %92 = icmp eq i8* %70, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %70) #8
  br label %94

94:                                               ; preds = %93, %89, %62
  %95 = phi i1 [ false, %62 ], [ true, %89 ], [ true, %93 ]
  %96 = icmp eq i8* %63, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %63) #8
  br label %98

98:                                               ; preds = %97, %94, %49
  %99 = phi i1 [ false, %49 ], [ %95, %94 ], [ %95, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #8
  br label %100

100:                                              ; preds = %48, %98
  %101 = phi i1 [ %99, %98 ], [ %41, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  ret i1 %101
}

declare zeroext i1 @_ZN6SkDraw10DrawToMaskERK6SkPathPK7SkIRectPK12SkMaskFilterPK8SkMatrixP6SkMaskNSC_10CreateModeEN11SkStrokeRec9InitStyleE(%class.SkPath* dereferenceable(16), %struct.SkIRect*, %class.SkMaskFilter*, %class.SkMatrix*, %struct.SkMask*, i32, i32) local_unnamed_addr #1

declare void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) unnamed_addr #1

declare void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16)) unnamed_addr #1

declare void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK16SkMaskFilterBase17filterRRectToNineERK7SkRRectRK8SkMatrixRK7SkIRectPNS_9NinePatchE(%class.SkMaskFilterBase* nocapture readnone, %class.SkRRect* nocapture readnone dereferenceable(52), %class.SkMatrix* nocapture readnone dereferenceable(40), %struct.SkIRect* nocapture readnone dereferenceable(16), %"class.SkMaskFilterBase::NinePatch"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK16SkMaskFilterBase17filterRectsToNineEPK6SkRectiRK8SkMatrixRK7SkIRectPNS_9NinePatchE(%class.SkMaskFilterBase* nocapture readnone, %struct.SkRect* nocapture readnone, i32, %class.SkMatrix* nocapture readnone dereferenceable(40), %struct.SkIRect* nocapture readnone dereferenceable(16), %"class.SkMaskFilterBase::NinePatch"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK16SkMaskFilterBase19asFragmentProcessorERK8GrFPArgs(%class.SkMaskFilterBase*, %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkMaskFilterBase* %0 to %class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)***
  %4 = load %class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)**, %class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)*** %3, align 8
  %5 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)** %4, i64 14
  %6 = load %class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkMaskFilterBase*, %struct.GrFPArgs*)** %5, align 8
  %7 = tail call %class.GrFragmentProcessor* %6(%class.SkMaskFilterBase* %0, %struct.GrFPArgs* dereferenceable(40) %1) #8
  ret %class.GrFragmentProcessor* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkMaskFilterBase20hasFragmentProcessorEv(%class.SkMaskFilterBase*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkMaskFilterBase* %0 to i1 (%class.SkMaskFilterBase*)***
  %3 = load i1 (%class.SkMaskFilterBase*)**, i1 (%class.SkMaskFilterBase*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%class.SkMaskFilterBase*)*, i1 (%class.SkMaskFilterBase*)** %3, i64 15
  %5 = load i1 (%class.SkMaskFilterBase*)*, i1 (%class.SkMaskFilterBase*)** %4, align 8
  %6 = tail call zeroext i1 %5(%class.SkMaskFilterBase* %0) #8
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK16SkMaskFilterBase21onAsFragmentProcessorERK8GrFPArgs(%class.SkMaskFilterBase* nocapture readnone, %struct.GrFPArgs* nocapture readnone dereferenceable(40)) unnamed_addr #2 align 2 {
  ret %class.GrFragmentProcessor* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK16SkMaskFilterBase22onHasFragmentProcessorEv(%class.SkMaskFilterBase* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK16SkMaskFilterBase16canFilterMaskGPUERK13GrStyledShapeRK7SkIRectS5_RK8SkMatrixPS3_(%class.SkMaskFilterBase* nocapture readnone, %class.GrStyledShape* nocapture readnone, %struct.SkIRect* nocapture readnone dereferenceable(16), %struct.SkIRect* nocapture readnone dereferenceable(16), %class.SkMatrix* nocapture readnone dereferenceable(40), %struct.SkIRect* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK16SkMaskFilterBase19directFilterMaskGPUEP18GrRecordingContextP20GrSurfaceDrawContextO7GrPaintPK6GrClipRK8SkMatrixRK13GrStyledShape(%class.SkMaskFilterBase* nocapture readnone, %class.GrRecordingContext* nocapture readnone, %class.GrSurfaceDrawContext* nocapture readnone, %class.GrPaint* nocapture readnone, %class.GrClip* nocapture readnone, %class.SkMatrix* nocapture readnone dereferenceable(40), %class.GrStyledShape* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SkMaskFilterBase13filterMaskGPUEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaTypeRK8SkMatrixRK7SkIRect(%class.GrSurfaceProxyView* noalias sret, %class.SkMaskFilterBase* nocapture readnone, %class.GrRecordingContext* nocapture readnone, %class.GrSurfaceProxyView* nocapture readnone, i32, i32, %class.SkMatrix* nocapture readnone dereferenceable(40), %struct.SkIRect* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2
  %10 = bitcast %class.GrSurfaceProxyView* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SkMaskFilterBase17computeFastBoundsERK6SkRectPS0_(%class.SkMaskFilterBase*, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkMask, align 8
  %5 = alloca %struct.SkMask, align 8
  %6 = alloca %struct.SkIPoint, align 4
  %7 = bitcast %struct.SkMask* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  %8 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 0
  %9 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1
  %10 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 2
  %11 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 2
  %12 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 3
  %13 = bitcast %struct.SkMask* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  store i8* null, i8** %8, align 8
  %14 = bitcast %struct.SkMask* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8
  %15 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 0
  %16 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1
  %17 = bitcast %struct.SkIRect* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  store i8* null, i8** %15, align 8
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = tail call float @llvm.floor.f32(float %19) #8
  %21 = fcmp olt float %20, 0x41DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0x41DFFFFFE0000000
  %23 = fcmp ogt float %22, 0xC1DFFFFFE0000000
  %24 = select i1 %23, float %22, float 0xC1DFFFFFE0000000
  %25 = fptosi float %24 to i32
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = tail call float @llvm.floor.f32(float %27) #8
  %29 = fcmp olt float %28, 0x41DFFFFFE0000000
  %30 = select i1 %29, float %28, float 0x41DFFFFFE0000000
  %31 = fcmp ogt float %30, 0xC1DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0xC1DFFFFFE0000000
  %33 = fptosi float %32 to i32
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %35 = load float, float* %34, align 4
  %36 = tail call float @llvm.ceil.f32(float %35) #8
  %37 = fcmp olt float %36, 0x41DFFFFFE0000000
  %38 = select i1 %37, float %36, float 0x41DFFFFFE0000000
  %39 = fcmp ogt float %38, 0xC1DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0xC1DFFFFFE0000000
  %41 = fptosi float %40 to i32
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %43 = load float, float* %42, align 4
  %44 = tail call float @llvm.ceil.f32(float %43) #8
  %45 = fcmp olt float %44, 0x41DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0x41DFFFFFE0000000
  %47 = fcmp ogt float %46, 0xC1DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0xC1DFFFFFE0000000
  %49 = fptosi float %48 to i32
  %50 = zext i32 %33 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %25 to i64
  %53 = or i64 %51, %52
  %54 = zext i32 %49 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %41 to i64
  %57 = or i64 %55, %56
  %58 = bitcast %struct.SkIRect* %9 to i64*
  store i64 %53, i64* %58, align 8
  %59 = bitcast i32* %10 to i64*
  store i64 %57, i64* %59, align 8
  store i32 0, i32* %11, align 8
  store i8 1, i8* %12, align 4
  %60 = bitcast %struct.SkIPoint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  %61 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %6, i64 0, i32 0
  store i32 -1431655766, i32* %61, align 4
  %62 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %6, i64 0, i32 1
  store i32 -1431655766, i32* %62, align 4
  %63 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #8
  %64 = bitcast %class.SkMaskFilterBase* %0 to i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %65 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %65, i64 8
  %67 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %66, align 8
  %68 = call zeroext i1 %67(%class.SkMaskFilterBase* %0, %struct.SkMask* nonnull %5, %struct.SkMask* nonnull dereferenceable(32) %4, %class.SkMatrix* dereferenceable(40) %63, %struct.SkIPoint* nonnull %6) #8
  br i1 %68, label %69, label %74

69:                                               ; preds = %3
  %70 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1, i32 3
  %71 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1, i32 2
  %72 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1, i32 1
  %73 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1, i32 0
  br label %78

74:                                               ; preds = %3
  %75 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 3
  %76 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 1
  %77 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 0
  br label %78

78:                                               ; preds = %74, %69
  %79 = phi i32* [ %77, %74 ], [ %73, %69 ]
  %80 = phi i32* [ %76, %74 ], [ %72, %69 ]
  %81 = phi i32* [ %10, %74 ], [ %71, %69 ]
  %82 = phi i32* [ %75, %74 ], [ %70, %69 ]
  %83 = load i32, i32* %79, align 8
  %84 = load i32, i32* %80, align 4
  %85 = load i32, i32* %81, align 8
  %86 = load i32, i32* %82, align 4
  %87 = sitofp i32 %86 to float
  %88 = sitofp i32 %85 to float
  %89 = sitofp i32 %84 to float
  %90 = sitofp i32 %83 to float
  %91 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  store float %90, float* %91, align 4
  %92 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  store float %89, float* %92, align 4
  %93 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  store float %88, float* %93, align 4
  %94 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  store float %87, float* %94, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkMaskFilter20RegisterFlattenablesEv() local_unnamed_addr #0 align 2 {
  tail call void @_Z38sk_register_blur_maskfilter_createprocv() #8
  tail call void @_Z37gr_register_sdf_maskfilter_createprocv() #8
  ret void
}

declare void @_Z38sk_register_blur_maskfilter_createprocv() local_unnamed_addr #1

declare void @_Z37gr_register_sdf_maskfilter_createprocv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMaskFilterBaseD0Ev(%class.SkMaskFilterBase*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkFlattenable7flattenER13SkWriteBuffer(%class.SkFlattenable*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkMaskFilter18getFlattenableTypeEv(%class.SkMaskFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 4
}

declare void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN10SkPathPriv17IsNestedFillRectsERK6SkPathP6SkRectP15SkPathDirection(%class.SkPath* dereferenceable(16), %struct.SkRect*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #8
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #8
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #8
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
