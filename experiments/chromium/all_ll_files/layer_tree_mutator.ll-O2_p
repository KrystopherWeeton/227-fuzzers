; ModuleID = '../../cc/trees/layer_tree_mutator.cc'
source_filename = "../../cc/trees/layer_tree_mutator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::AnimationWorkletInput::AddAndUpdateState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::basic_string", double, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4" }
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.cc::AnimationOptions"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.cc::AnimationEffectTimings"* }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%"class.cc::AnimationEffectTimings" = type { i32 (...)** }
%"struct.cc::AnimationWorkletInput" = type { %"class.std::__1::vector", %"class.std::__1::vector.15", %"class.std::__1::vector.22" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"*, %"class.std::__1::__compressed_pair.17" }
%"struct.cc::AnimationWorkletInput::UpdateState" = type { %"struct.cc::WorkletAnimationId", double }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.cc::AnimationWorkletInput::UpdateState"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.cc::WorkletAnimationId"* }
%"class.cc::MutatorInputState" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"struct.cc::AnimationWorkletOutput" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"class.std::__1::__compressed_pair.63" }
%"struct.cc::AnimationWorkletOutput::AnimationState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::vector.56" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair.58" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.absl::optional"* }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.cc::AnimationWorkletInput"* }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.41"*, i8, [7 x i8] }>
%"class.std::__1::allocator.41" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRiPS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN2cc21AnimationWorkletInput17AddAndUpdateStateENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE = comdat any

@_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC1ENS_18WorkletAnimationIdENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdNS3_10unique_ptrINS_16AnimationOptionsENS3_14default_deleteISB_EEEENSA_INS_22AnimationEffectTimingsENSC_ISF_EEEE = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, i64, %"class.std::__1::basic_string"*, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*), void (%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, i64, %"class.std::__1::basic_string"*, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*)* @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC2ENS_18WorkletAnimationIdENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdNS3_10unique_ptrINS_16AnimationOptionsENS3_14default_deleteISB_EEEENSA_INS_22AnimationEffectTimingsENSC_ISF_EEEE
@_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC1EOS1_ = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*), void (%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*)* @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC2EOS1_
@_ZN2cc21AnimationWorkletInput17AddAndUpdateStateD1Ev = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*), void (%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*)* @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateD2Ev
@_ZN2cc21AnimationWorkletInputC1Ev = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletInput"*), void (%"struct.cc::AnimationWorkletInput"*)* @_ZN2cc21AnimationWorkletInputC2Ev
@_ZN2cc21AnimationWorkletInputD1Ev = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletInput"*), void (%"struct.cc::AnimationWorkletInput"*)* @_ZN2cc21AnimationWorkletInputD2Ev
@_ZN2cc17MutatorInputStateC1Ev = hidden unnamed_addr alias void (%"class.cc::MutatorInputState"*), void (%"class.cc::MutatorInputState"*)* @_ZN2cc17MutatorInputStateC2Ev
@_ZN2cc17MutatorInputStateD1Ev = hidden unnamed_addr alias void (%"class.cc::MutatorInputState"*), void (%"class.cc::MutatorInputState"*)* @_ZN2cc17MutatorInputStateD2Ev
@_ZN2cc22AnimationWorkletOutputC1Ev = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletOutput"*), void (%"struct.cc::AnimationWorkletOutput"*)* @_ZN2cc22AnimationWorkletOutputC2Ev
@_ZN2cc22AnimationWorkletOutputD1Ev = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletOutput"*), void (%"struct.cc::AnimationWorkletOutput"*)* @_ZN2cc22AnimationWorkletOutputD2Ev
@_ZN2cc22AnimationWorkletOutput14AnimationStateC1ENS_18WorkletAnimationIdE = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletOutput::AnimationState"*, i64), void (%"struct.cc::AnimationWorkletOutput::AnimationState"*, i64)* @_ZN2cc22AnimationWorkletOutput14AnimationStateC2ENS_18WorkletAnimationIdE
@_ZN2cc22AnimationWorkletOutput14AnimationStateC1ERKS1_ = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*), void (%"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*)* @_ZN2cc22AnimationWorkletOutput14AnimationStateC2ERKS1_
@_ZN2cc22AnimationWorkletOutput14AnimationStateD1Ev = hidden unnamed_addr alias void (%"struct.cc::AnimationWorkletOutput::AnimationState"*), void (%"struct.cc::AnimationWorkletOutput::AnimationState"*)* @_ZN2cc22AnimationWorkletOutput14AnimationStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC2ENS_18WorkletAnimationIdENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdNS3_10unique_ptrINS_16AnimationOptionsENS3_14default_deleteISB_EEEENSA_INS_22AnimationEffectTimingsENSC_ISF_EEEE(%"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, i64, %"class.std::__1::basic_string"* nocapture readonly, double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.cc::AnimationOptions"* %4 to i64
  %8 = ptrtoint %"class.cc::AnimationEffectTimings"* %5 to i64
  %9 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0 to i64*
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #10
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %20, i64 %22) #10
  br label %23

23:                                               ; preds = %15, %18
  %24 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 2
  store double %3, double* %24, align 8
  %25 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 3
  %26 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %7, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 4
  %28 = bitcast %"class.std::__1::unique_ptr.4"* %27 to i64*
  store i64 %8, i64* %28, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateC2EOS1_(%"struct.cc::AnimationWorkletInput::AddAndUpdateState"* nocapture, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* nocapture dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1 to i64*
  %4 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #10
  %10 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 2
  %12 = bitcast double* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast double* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 4
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.4"* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %23, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.4"* %21 to i64*
  store i64 %25, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21AnimationWorkletInput17AddAndUpdateStateD2Ev(%"struct.cc::AnimationWorkletInput::AddAndUpdateState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.cc::AnimationEffectTimings"*, %"class.cc::AnimationEffectTimings"** %2, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %2, align 8
  %4 = icmp eq %"class.cc::AnimationEffectTimings"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::AnimationEffectTimings"* %3 to void (%"class.cc::AnimationEffectTimings"*)***
  %7 = load void (%"class.cc::AnimationEffectTimings"*)**, void (%"class.cc::AnimationEffectTimings"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %7, i64 1
  %9 = load void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %8, align 8
  tail call void %9(%"class.cc::AnimationEffectTimings"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %11, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %11, align 8
  %13 = icmp eq %"class.cc::AnimationOptions"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.cc::AnimationOptions"* %12 to void (%"class.cc::AnimationOptions"*)***
  %16 = load void (%"class.cc::AnimationOptions"*)**, void (%"class.cc::AnimationOptions"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %16, i64 1
  %18 = load void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %17, align 8
  tail call void %18(%"class.cc::AnimationOptions"* nonnull %12) #10
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %0, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %19, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21AnimationWorkletInputC2Ev(%"struct.cc::AnimationWorkletInput"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.cc::AnimationWorkletInput"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21AnimationWorkletInputD2Ev(%"struct.cc::AnimationWorkletInput"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"** %2, align 8
  %4 = icmp eq %"struct.cc::WorkletAnimationId"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.cc::WorkletAnimationId"* %3 to i64
  %7 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.cc::WorkletAnimationId"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.cc::WorkletAnimationId"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"** %11, align 8
  %13 = icmp eq %"struct.cc::AnimationWorkletInput::UpdateState"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %12 to i64
  %16 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %20, align 8
  %22 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %21, null
  br i1 %22, label %64, label %23

23:                                               ; preds = %19
  %24 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %21 to i8*
  %25 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %25, align 8
  %27 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %26, %21
  br i1 %27, label %62, label %28

28:                                               ; preds = %23, %57
  %29 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %30, %57 ], [ %26, %23 ]
  %30 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %29, i64 -1
  %31 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %29, i64 -1, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.cc::AnimationEffectTimings"*, %"class.cc::AnimationEffectTimings"** %31, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %31, align 8
  %33 = icmp eq %"class.cc::AnimationEffectTimings"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.cc::AnimationEffectTimings"* %32 to void (%"class.cc::AnimationEffectTimings"*)***
  %36 = load void (%"class.cc::AnimationEffectTimings"*)**, void (%"class.cc::AnimationEffectTimings"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %36, i64 1
  %38 = load void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %37, align 8
  tail call void %38(%"class.cc::AnimationEffectTimings"* nonnull %32) #10
  br label %39

39:                                               ; preds = %34, %28
  %40 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %29, i64 -1, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %40, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %40, align 8
  %42 = icmp eq %"class.cc::AnimationOptions"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.cc::AnimationOptions"* %41 to void (%"class.cc::AnimationOptions"*)***
  %45 = load void (%"class.cc::AnimationOptions"*)**, void (%"class.cc::AnimationOptions"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %45, i64 1
  %47 = load void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %46, align 8
  tail call void %47(%"class.cc::AnimationOptions"* nonnull %41) #10
  br label %48

48:                                               ; preds = %43, %39
  %49 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %29, i64 -1, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %54, %48
  %58 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %30, %21
  br i1 %58, label %59, label %28

59:                                               ; preds = %57
  %60 = bitcast %"struct.cc::AnimationWorkletInput"* %0 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %23
  %63 = phi i8* [ %61, %59 ], [ %24, %23 ]
  store %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %21, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %25, align 8
  tail call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %19, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MutatorInputStateC2Ev(%"class.cc::MutatorInputState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.std::__1::__compressed_pair.45"* %2 to i32*
  %4 = bitcast %"class.cc::MutatorInputState"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MutatorInputStateD2Ev(%"class.cc::MutatorInputState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %15
  %6 = phi %"struct.std::__1::__hash_node_base"* [ %8, %15 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %9 to %"struct.cc::AnimationWorkletInput"**
  %11 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %10, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %10, align 8
  %12 = icmp eq %"struct.cc::AnimationWorkletInput"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  tail call void @_ZN2cc21AnimationWorkletInputD2Ev(%"struct.cc::AnimationWorkletInput"* nonnull %11) #10
  %14 = bitcast %"struct.cc::AnimationWorkletInput"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %13, %5
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  %17 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %17, label %18, label %5

18:                                               ; preds = %15, %1
  %19 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base"** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.std::__1::__hash_node_base"** %20 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc17MutatorInputState7IsEmptyEv(%"class.cc::MutatorInputState"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.cc::AnimationWorkletInput"* @_ZN2cc17MutatorInputState18EnsureWorkletEntryEi(%"class.cc::MutatorInputState"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"struct.cc::AnimationWorkletInput"*, align 8
  store i32 %1, i32* %3, align 4
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %57

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %64, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %45, %53, %19, %2, %26
  %58 = bitcast %"struct.cc::AnimationWorkletInput"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  %59 = tail call i8* @_Znwm(i64 72) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 72, i1 false) #10
  %60 = bitcast %"struct.cc::AnimationWorkletInput"** %4 to i8**
  store i8* %59, i8** %60, align 8
  %61 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0
  %62 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRiPS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %61, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3, %"struct.cc::AnimationWorkletInput"** nonnull dereferenceable(8) %4) #10
  %63 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %62, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %64

64:                                               ; preds = %48, %57
  %65 = phi %"struct.std::__1::__hash_node_base"* [ %63, %57 ], [ %33, %48 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 3
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to %"struct.cc::AnimationWorkletInput"**
  %68 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %67, align 8
  ret %"struct.cc::AnimationWorkletInput"* %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MutatorInputState3AddEONS_21AnimationWorkletInput17AddAndUpdateStateE(%"class.cc::MutatorInputState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = tail call dereferenceable(72) %"struct.cc::AnimationWorkletInput"* @_ZN2cc17MutatorInputState18EnsureWorkletEntryEi(%"class.cc::MutatorInputState"* %0, i32 %4)
  %6 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %8, align 8
  %10 = icmp ult %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7, %9
  br i1 %10, label %11, label %39

11:                                               ; preds = %2
  %12 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1 to i64*
  %13 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 2
  %21 = bitcast double* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast double* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7, i64 0, i32 3
  %25 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 3
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7, i64 0, i32 4
  %31 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 4
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr.4"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %32, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.4"* %30 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %7, i64 1
  %37 = ptrtoint %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %36 to i64
  %38 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %6 to i64*
  store i64 %37, i64* %38, align 8
  br label %41

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %5, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN2cc21AnimationWorkletInput17AddAndUpdateStateENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %40, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* dereferenceable(56) %1) #10
  br label %41

41:                                               ; preds = %11, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MutatorInputState6UpdateEONS_21AnimationWorkletInput11UpdateStateE(%"class.cc::MutatorInputState"*, %"struct.cc::AnimationWorkletInput::UpdateState"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = tail call dereferenceable(72) %"struct.cc::AnimationWorkletInput"* @_ZN2cc17MutatorInputState18EnsureWorkletEntryEi(%"class.cc::MutatorInputState"* %0, i32 %4)
  %6 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %5, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %5, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"** %9, align 8
  %11 = icmp ult %"struct.cc::AnimationWorkletInput::UpdateState"* %8, %10
  %12 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %10 to i64
  br i1 %11, label %13, label %19

13:                                               ; preds = %2
  %14 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %8 to i8*
  %15 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false) #10
  %16 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %8, i64 1
  %17 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %16 to i64
  %18 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"** %7 to i64*
  store i64 %17, i64* %18, align 8
  br label %77

19:                                               ; preds = %2
  %20 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %8 to i64
  %21 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"** %7 to i64*
  %22 = bitcast %"class.std::__1::vector.15"* %6 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 4
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 1152921504606846975
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector.15"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"** %9 to i64*
  %32 = sub i64 %12, %23
  %33 = ashr exact i64 %32, 4
  %34 = icmp ult i64 %33, 576460752303423487
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 3
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 1152921504606846975
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #12
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 1152921504606846975, %30 ]
  %45 = shl i64 %44, 4
  %46 = tail call i8* @_Znwm(i64 %45) #11
  %47 = bitcast i8* %46 to %"struct.cc::AnimationWorkletInput::UpdateState"*
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi %"struct.cc::AnimationWorkletInput::UpdateState"* [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %50, i64 %25
  %52 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %50, i64 %49
  %53 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %52 to i64
  %54 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %51 to i8*
  %55 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #10
  %56 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %51, i64 1
  %57 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %6, i64 0, i32 0, i32 0
  %59 = load %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"** %58, align 8
  %60 = load i64, i64* %21, align 8
  %61 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 4
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %51, i64 %64
  %66 = ptrtoint %"struct.cc::AnimationWorkletInput::UpdateState"* %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %48
  %69 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %65 to i8*
  %70 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #10
  %71 = load %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"** %58, align 8
  br label %72

72:                                               ; preds = %68, %48
  %73 = phi %"struct.cc::AnimationWorkletInput::UpdateState"* [ %59, %48 ], [ %71, %68 ]
  store i64 %66, i64* %22, align 8
  store i64 %57, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %74 = icmp eq %"struct.cc::AnimationWorkletInput::UpdateState"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %73 to i8*
  tail call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %13, %72, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17MutatorInputState6RemoveENS_18WorkletAnimationIdE(%"class.cc::MutatorInputState"*, i64) local_unnamed_addr #0 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = tail call dereferenceable(72) %"struct.cc::AnimationWorkletInput"* @_ZN2cc17MutatorInputState18EnsureWorkletEntryEi(%"class.cc::MutatorInputState"* %0, i32 %3)
  %5 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %4, i64 0, i32 2, i32 0, i32 1
  %7 = load %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"** %8, align 8
  %10 = icmp eq %"struct.cc::WorkletAnimationId"* %7, %9
  %11 = ptrtoint %"struct.cc::WorkletAnimationId"* %9 to i64
  br i1 %10, label %17, label %12

12:                                               ; preds = %2
  %13 = bitcast %"struct.cc::WorkletAnimationId"* %7 to i64*
  store i64 %1, i64* %13, align 4
  %14 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %7, i64 1
  %15 = ptrtoint %"struct.cc::WorkletAnimationId"* %14 to i64
  %16 = bitcast %"struct.cc::WorkletAnimationId"** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %74

17:                                               ; preds = %2
  %18 = ptrtoint %"struct.cc::WorkletAnimationId"* %7 to i64
  %19 = bitcast %"struct.cc::WorkletAnimationId"** %6 to i64*
  %20 = bitcast %"class.std::__1::vector.22"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.22"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #12
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"struct.cc::WorkletAnimationId"** %8 to i64*
  %30 = sub i64 %11, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 1152921504606846975
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 2305843009213693951, %28 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"struct.cc::WorkletAnimationId"*
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"struct.cc::WorkletAnimationId"* [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %48, i64 %23
  %50 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %48, i64 %47
  %51 = ptrtoint %"struct.cc::WorkletAnimationId"* %50 to i64
  %52 = bitcast %"struct.cc::WorkletAnimationId"* %49 to i64*
  store i64 %1, i64* %52, align 4
  %53 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %49, i64 1
  %54 = ptrtoint %"struct.cc::WorkletAnimationId"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %5, i64 0, i32 0, i32 0
  %56 = load %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"** %55, align 8
  %57 = load i64, i64* %19, align 8
  %58 = ptrtoint %"struct.cc::WorkletAnimationId"* %56 to i64
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 3
  %61 = sub nsw i64 0, %60
  %62 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %49, i64 %61
  %63 = ptrtoint %"struct.cc::WorkletAnimationId"* %62 to i64
  %64 = icmp sgt i64 %59, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %46
  %66 = bitcast %"struct.cc::WorkletAnimationId"* %62 to i8*
  %67 = bitcast %"struct.cc::WorkletAnimationId"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 %59, i1 false) #10
  %68 = load %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"** %55, align 8
  br label %69

69:                                               ; preds = %65, %46
  %70 = phi %"struct.cc::WorkletAnimationId"* [ %56, %46 ], [ %68, %65 ]
  store i64 %63, i64* %20, align 8
  store i64 %54, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %71 = icmp eq %"struct.cc::WorkletAnimationId"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = bitcast %"struct.cc::WorkletAnimationId"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %12, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::AnimationWorkletInput"* @_ZN2cc17MutatorInputState16TakeWorkletStateEi(%"class.cc::MutatorInputState"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.70", align 8
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %78, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #10, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %78, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %78, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %78

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %78, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 3
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to %"struct.cc::AnimationWorkletInput"**
  %59 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %58, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %58, align 8
  %60 = getelementptr inbounds %"class.cc::MutatorInputState", %"class.cc::MutatorInputState"* %0, i64 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr.70"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.70"* nonnull sret %3, %"class.std::__1::__hash_table"* %60, %"struct.std::__1::__hash_node_base"* nonnull %32) #10
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %3, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %62, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node"* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %67 = load i8, i8* %66, align 8, !range !3
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %63, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %70, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %70, align 8
  %72 = icmp eq %"struct.cc::AnimationWorkletInput"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  call void @_ZN2cc21AnimationWorkletInputD2Ev(%"struct.cc::AnimationWorkletInput"* nonnull %71) #10
  %74 = bitcast %"struct.cc::AnimationWorkletInput"* %71 to i8*
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %73, %69, %65
  %76 = bitcast %"struct.std::__1::__hash_node"* %63 to i8*
  call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %75, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  br label %78

78:                                               ; preds = %52, %44, %25, %2, %18, %77
  %79 = phi %"struct.cc::AnimationWorkletInput"* [ %59, %77 ], [ null, %18 ], [ null, %2 ], [ null, %25 ], [ null, %44 ], [ null, %52 ]
  ret %"struct.cc::AnimationWorkletInput"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22AnimationWorkletOutputC2Ev(%"struct.cc::AnimationWorkletOutput"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.cc::AnimationWorkletOutput"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22AnimationWorkletOutputD2Ev(%"struct.cc::AnimationWorkletOutput"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %2, align 8
  %4 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"* %3 to i8*
  %7 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %7, align 8
  %9 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %11, i64 -1, i32 1, i32 0, i32 0
  %14 = load %"class.absl::optional"*, %"class.absl::optional"** %13, align 8
  %15 = icmp eq %"class.absl::optional"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = ptrtoint %"class.absl::optional"* %14 to i64
  %18 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %11, i64 -1, i32 1, i32 0, i32 1
  %19 = bitcast %"class.absl::optional"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %"struct.cc::AnimationWorkletOutput"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"struct.cc::AnimationWorkletOutput::AnimationState"* %3, %"struct.cc::AnimationWorkletOutput::AnimationState"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22AnimationWorkletOutput14AnimationStateC2ENS_18WorkletAnimationIdE(%"struct.cc::AnimationWorkletOutput::AnimationState"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"* %0 to i64*
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.56"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22AnimationWorkletOutput14AnimationStateC2ERKS1_(%"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"* %1 to i64*
  %4 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector.56"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  %9 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.absl::optional"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.56"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 4
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %15, 1152921504606846975
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector.56"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #12
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #11
  %23 = bitcast i8* %22 to %"class.absl::optional"*
  %24 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.absl::optional"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector.56"* %6 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 %15
  %28 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.absl::optional"* %27, %"class.absl::optional"** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %7, i64 0, i32 0, i32 0
  %30 = load %"class.absl::optional"*, %"class.absl::optional"** %29, align 8
  %31 = load i64, i64* %10, align 8
  %32 = bitcast %"class.absl::optional"** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = ptrtoint %"class.absl::optional"* %30 to i64
  %35 = sub i64 %31, %34
  %36 = icmp sgt i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %21
  %38 = lshr exact i64 %35, 4
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %39, i64 %35, i1 false) #10
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 %38
  %41 = ptrtoint %"class.absl::optional"* %40 to i64
  br label %42

42:                                               ; preds = %37, %21
  %43 = phi i64 [ %41, %37 ], [ %33, %21 ]
  store i64 %43, i64* %32, align 8
  br label %44

44:                                               ; preds = %2, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22AnimationWorkletOutput14AnimationStateD2Ev(%"struct.cc::AnimationWorkletOutput::AnimationState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.absl::optional"*, %"class.absl::optional"** %2, align 8
  %4 = icmp eq %"class.absl::optional"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.absl::optional"* %3 to i64
  %7 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.absl::optional"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRiPS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), i32* dereferenceable(4), %"struct.cc::AnimationWorkletInput"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = load i32, i32* %1, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #10, !range !2
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %145, label %29

54:                                               ; preds = %29, %46, %20, %4
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %4 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 32) #11, !noalias !4
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %2, align 4, !noalias !4
  store i32 %59, i32* %58, align 8, !noalias !4
  %60 = getelementptr inbounds i8, i8* %56, i64 24
  %61 = bitcast %"struct.cc::AnimationWorkletInput"** %3 to i64*
  %62 = load i64, i64* %61, align 8, !noalias !4
  %63 = bitcast i8* %60 to i64*
  store i64 %62, i64* %63, align 8, !noalias !4
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %6, i64* %65, align 8, !noalias !4
  %66 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8, !noalias !4
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %8 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %9, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %54
  %78 = shl i64 %8, 1
  %79 = icmp ult i64 %8, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %8) #10, !range !2
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #10
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %89)
  %90 = load i64, i64* %7, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #10, !range !2
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, -1
  %95 = and i64 %94, %6
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %6
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %6, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %54
  %101 = phi i64 [ %8, %54 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %55, %54 ], [ %95, %93 ], [ %6, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %56 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i8**
  store i8* %56, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base"* %109, %"struct.std::__1::__hash_node_base"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #10, !range !2
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %56 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %56, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %49, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %49 ]
  %147 = phi %"struct.std::__1::__hash_node_base"* [ %142, %141 ], [ %32, %49 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !7

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc21AnimationWorkletInput17AddAndUpdateStateENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* dereferenceable(56)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %35 to i64
  %37 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1 to i64*
  %38 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %34 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #10
  %44 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %33, i64 %9, i32 2
  %45 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 2
  %46 = bitcast double* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast double* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %33, i64 %9, i32 3
  %50 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 3
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %51, align 8
  %54 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %33, i64 %9, i32 4
  %56 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %1, i64 0, i32 4
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::unique_ptr.4"* %56 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %57, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.4"* %55 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %34, i64 1
  %62 = ptrtoint %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %64 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %63, align 8
  %65 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %3, align 8
  %66 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %65, %64
  br i1 %66, label %67, label %69

67:                                               ; preds = %31
  %68 = ptrtoint %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %64 to i64
  br label %102

69:                                               ; preds = %31, %69
  %70 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %72, %69 ], [ %34, %31 ]
  %71 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %73, %69 ], [ %65, %31 ]
  %72 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %71, i64 -1
  %74 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %73 to i64*
  %75 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %72 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %70, i64 -1, i32 1
  %78 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %71, i64 -1, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #10
  %81 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %70, i64 -1, i32 2
  %82 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %71, i64 -1, i32 2
  %83 = bitcast double* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast double* %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %70, i64 -1, i32 3
  %87 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %71, i64 -1, i32 3
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %70, i64 -1, i32 4
  %93 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %71, i64 -1, i32 4
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr.4"* %93 to i64*
  %96 = load i64, i64* %95, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %94, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.4"* %92 to i64*
  store i64 %96, i64* %97, align 8
  %98 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %73, %64
  br i1 %98, label %99, label %69

99:                                               ; preds = %69
  %100 = load i64, i64* %6, align 8
  %101 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %3, align 8
  br label %102

102:                                              ; preds = %67, %99
  %103 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %64, %67 ], [ %101, %99 ]
  %104 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %34, %67 ], [ %72, %99 ]
  %105 = phi i64 [ %68, %67 ], [ %100, %99 ]
  %106 = ptrtoint %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %104 to i64
  store i64 %106, i64* %6, align 8
  store i64 %62, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %107 = inttoptr i64 %105 to %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*
  %108 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %103, %107
  br i1 %108, label %140, label %109

109:                                              ; preds = %102, %138
  %110 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %111, %138 ], [ %103, %102 ]
  %111 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %110, i64 -1
  %112 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %110, i64 -1, i32 4, i32 0, i32 0, i32 0
  %113 = load %"class.cc::AnimationEffectTimings"*, %"class.cc::AnimationEffectTimings"** %112, align 8
  store %"class.cc::AnimationEffectTimings"* null, %"class.cc::AnimationEffectTimings"** %112, align 8
  %114 = icmp eq %"class.cc::AnimationEffectTimings"* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.cc::AnimationEffectTimings"* %113 to void (%"class.cc::AnimationEffectTimings"*)***
  %117 = load void (%"class.cc::AnimationEffectTimings"*)**, void (%"class.cc::AnimationEffectTimings"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %117, i64 1
  %119 = load void (%"class.cc::AnimationEffectTimings"*)*, void (%"class.cc::AnimationEffectTimings"*)** %118, align 8
  tail call void %119(%"class.cc::AnimationEffectTimings"* nonnull %113) #10
  br label %120

120:                                              ; preds = %115, %109
  %121 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %110, i64 -1, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %121, align 8
  store %"class.cc::AnimationOptions"* null, %"class.cc::AnimationOptions"** %121, align 8
  %123 = icmp eq %"class.cc::AnimationOptions"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.cc::AnimationOptions"* %122 to void (%"class.cc::AnimationOptions"*)***
  %126 = load void (%"class.cc::AnimationOptions"*)**, void (%"class.cc::AnimationOptions"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %126, i64 1
  %128 = load void (%"class.cc::AnimationOptions"*)*, void (%"class.cc::AnimationOptions"*)** %127, align 8
  tail call void %128(%"class.cc::AnimationOptions"* nonnull %122) #10
  br label %129

129:                                              ; preds = %124, %120
  %130 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %110, i64 -1, i32 1
  %131 = bitcast %"class.std::__1::basic_string"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  tail call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %135, %129
  %139 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %111, %107
  br i1 %139, label %140, label %109

140:                                              ; preds = %138, %102
  %141 = icmp eq i64 %105, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = inttoptr i64 %105 to i8*
  tail call void @_ZdlPv(i8* %143) #11
  br label %144

144:                                              ; preds = %140, %142
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.70"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.38"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.70"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.41"** %98 to %"class.std::__1::__compressed_pair.38"**
  store %"class.std::__1::__compressed_pair.38"* %30, %"class.std::__1::__compressed_pair.38"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRiJPS4_EEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRiJPS4_EEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEmOT_DpOT0_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
