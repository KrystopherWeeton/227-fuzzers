; ModuleID = 'gen/services/preferences/public/mojom/tracked_preference_validation_delegate.mojom-test-utils.cc'
source_filename = "gen/services/preferences/public/mojom/tracked_preference_validation_delegate.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter" = type { %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* }
%"class.prefs::mojom::TrackedPreferenceValidationDelegate" = type { i32 (...)** }
%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting" = type { %"class.prefs::mojom::TrackedPreferenceValidationDelegate" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::basic_string"* }

$_ZN5prefs5mojom35TrackedPreferenceValidationDelegateD2Ev = comdat any

$_ZN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTestingD0Ev = comdat any

@_ZTVN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*)* @_ZN5prefs5mojom35TrackedPreferenceValidationDelegateD2Ev to i8*), i8* bitcast (void (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)* @_ZN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)* @_ZN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTesting28OnAtomicPreferenceValidationERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4absl8optionalIN4base5ValueEEENS0_46TrackedPreferenceValidationDelegate_ValueStateESG_b to i8*), i8* bitcast (void (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)* @_ZN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTesting27OnSplitPreferenceValidationERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS2_6vectorIS8_NS6_IS8_EEEESF_NS0_46TrackedPreferenceValidationDelegate_ValueStateESG_b to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5prefs5mojom46TrackedPreferenceValidationDelegateAsyncWaiterC1EPNS0_35TrackedPreferenceValidationDelegateE = hidden unnamed_addr alias void (%"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter"*, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"*), void (%"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter"*, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"*)* @_ZN5prefs5mojom46TrackedPreferenceValidationDelegateAsyncWaiterC2EPNS0_35TrackedPreferenceValidationDelegateE
@_ZN5prefs5mojom46TrackedPreferenceValidationDelegateAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter"*), void (%"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter"*)* @_ZN5prefs5mojom46TrackedPreferenceValidationDelegateAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTesting28OnAtomicPreferenceValidationERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4absl8optionalIN4base5ValueEEENS0_46TrackedPreferenceValidationDelegate_ValueStateESG_b(%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::optional"*, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.absl::optional", align 8
  %8 = bitcast %"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"* %0 to %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)***
  %9 = load %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)**, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)*, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)** %9, i64 4
  %11 = load %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)*, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* %11(%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"* %0) #7
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 40, i1 false) #7
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %19, %"class.base::Value"* dereferenceable(32) %18) #7
  store i8 1, i8* %13, align 8
  br label %20

20:                                               ; preds = %6, %17
  %21 = bitcast %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* %12 to void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)***
  %22 = load void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)**, void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)*, void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)** %22, i64 2
  %24 = load void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)*, void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, i32, i32, i1)** %23, align 8
  call void %24(%"class.prefs::mojom::TrackedPreferenceValidationDelegate"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.absl::optional"* nonnull %7, i32 %3, i32 %4, i1 zeroext %5) #7
  %25 = load i8, i8* %13, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %28) #7
  store i8 0, i8* %13, align 8
  br label %29

29:                                               ; preds = %20, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTesting27OnSplitPreferenceValidationERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS2_6vectorIS8_NS6_IS8_EEEESF_NS0_46TrackedPreferenceValidationDelegate_ValueStateESG_b(%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.29"* dereferenceable(24), %"class.std::__1::vector.29"* dereferenceable(24), i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"* %0 to %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)***
  %9 = load %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)**, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)*, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)** %9, i64 4
  %11 = load %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)*, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* (%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* %11(%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"* %0) #7
  %13 = bitcast %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* %12 to void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)***
  %14 = load void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)**, void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)*, void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)** %14, i64 3
  %16 = load void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)*, void (%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, i32, i32, i1)** %15, align 8
  tail call void %16(%"class.prefs::mojom::TrackedPreferenceValidationDelegate"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::vector.29"* dereferenceable(24) %2, %"class.std::__1::vector.29"* dereferenceable(24) %3, i32 %4, i32 %5, i1 zeroext %6) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5prefs5mojom46TrackedPreferenceValidationDelegateAsyncWaiterC2EPNS0_35TrackedPreferenceValidationDelegateE(%"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter"* nocapture, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter", %"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter"* %0, i64 0, i32 0
  store %"class.prefs::mojom::TrackedPreferenceValidationDelegate"* %1, %"class.prefs::mojom::TrackedPreferenceValidationDelegate"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5prefs5mojom46TrackedPreferenceValidationDelegateAsyncWaiterD2Ev(%"class.prefs::mojom::TrackedPreferenceValidationDelegateAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5prefs5mojom35TrackedPreferenceValidationDelegateD2Ev(%"class.prefs::mojom::TrackedPreferenceValidationDelegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5prefs5mojom56TrackedPreferenceValidationDelegateInterceptorForTestingD0Ev(%"class.prefs::mojom::TrackedPreferenceValidationDelegateInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
