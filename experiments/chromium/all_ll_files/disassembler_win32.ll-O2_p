; ModuleID = '../../courgette/disassembler_win32.cc'
source_filename = "../../courgette/disassembler_win32.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.courgette::DisassemblerWin32" = type { %"class.courgette::Disassembler", i8, %"class.std::__1::vector", %"class.std::__1::vector", i8*, i16, i16, i16, %"struct.courgette::Section"*, i8, i32, i32, i32, i32, i32, i64, i32, i32, %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory" }
%"class.courgette::Disassembler" = type { %"class.courgette::AddressTranslator", i8*, i64, i8*, i8* }
%"class.courgette::AddressTranslator" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"struct.courgette::Section" = type { [8 x i8], i32, i32, i32, i32, i32, i32, i16, i16, i32 }
%"class.courgette::ImageDataDirectory" = type { i32, i32 }
%"struct.std::__1::__less.24" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.courgette::RvaVisitor" = type { i32 (...)** }
%"class.courgette::Disassembler::RvaVisitor_Abs32" = type { %"class.courgette::VectorRvaVisitor", %"class.courgette::AddressTranslator"* }
%"class.courgette::VectorRvaVisitor" = type { %"class.courgette::RvaVisitor", %"class.std::__1::__wrap_iter.6", %"class.std::__1::__wrap_iter.6" }
%"class.std::__1::__wrap_iter.6" = type { i32* }
%"class.courgette::Disassembler::RvaVisitor_Rel32" = type { %"class.courgette::VectorRvaVisitor", %"class.courgette::AddressTranslator"* }
%"class.courgette::AssemblyProgram" = type { i32, i64, %"class.courgette::LabelManager", %"class.courgette::LabelManager", %"class.std::__1::vector.14", %"class.std::__1::vector.14" }
%"class.courgette::LabelManager" = type { %"class.std::__1::vector.7" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.courgette::Label"*, %"class.courgette::Label"*, %"class.std::__1::__compressed_pair.9" }
%"class.courgette::Label" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.courgette::Label"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.courgette::Label"**, %"class.courgette::Label"**, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.courgette::Label"** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.courgette::InstructionReceptor" = type { i32 (...)** }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN9courgette17DisassemblerWin32D2Ev = comdat any

$_ZN9courgette17DisassemblerWin32D0Ev = comdat any

$_ZNK9courgette17DisassemblerWin3210image_baseEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN9courgette17DisassemblerWin32EKFbPNS3_15AssemblyProgramEPNS3_19InstructionReceptorEEJNS0_17UnretainedWrapperIS4_EES6_EEEFbS8_EE3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN9courgette17DisassemblerWin32EKFbPNS2_15AssemblyProgramEPNS2_19InstructionReceptorEEJNS0_17UnretainedWrapperIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN9courgette17DisassemblerWin32E = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.courgette::DisassemblerWin32"*, i64)* @_ZNK9courgette17DisassemblerWin3215FileOffsetToRVAEm to i8*), i8* bitcast (i64 (%"class.courgette::DisassemblerWin32"*, i32)* @_ZNK9courgette17DisassemblerWin3215RVAToFileOffsetEj to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i64)* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i32)* @_ZNK9courgette12Disassembler12RVAToPointerEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin32D2Ev to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin32D0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.courgette::DisassemblerWin32"*)* @_ZNK9courgette17DisassemblerWin3210image_baseEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3221ExtractAbs32LocationsEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3221ExtractRel32LocationsEv to i8*), i8* bitcast (%"class.courgette::RvaVisitor"* (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3227CreateAbs32TargetRvaVisitorEv to i8*), i8* bitcast (%"class.courgette::RvaVisitor"* (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3227CreateRel32TargetRvaVisitorEv to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*)* @_ZN9courgette17DisassemblerWin3226RemoveUnusedRel32LocationsEPNS_15AssemblyProgramE to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3211ParseHeaderEv to i8*), i8* bitcast (void (%"class.base::RepeatingCallback"*, %"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*)* @_ZN9courgette17DisassemblerWin3223GetInstructionGeneratorEPNS_15AssemblyProgramE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"Too small\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Not MZ\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"Misaligned PE header\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"PE header pathological overlap\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"PE header past end of file\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"No PE signature\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"COFF header past end of file\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"Optional header no magic\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"Optional header too short\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Optional header past end of file\00", align 1
@.str.10 = private unnamed_addr constant [58 x i8] c"64 bit executables are not supported by this disassembler\00", align 1
@.str.11 = private unnamed_addr constant [58 x i8] c"32 bit executables are not supported by this disassembler\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"Unrecognized magic\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"Invalid SizeOfImage\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"Malformed data directory\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"Sections past end of file\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"Out of bound section\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c".text\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"Resource-only executables are not yet supported\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c".relocs outside image\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"Unreasonable relocs block\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c".relocs block outside image\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"Unknown type of reloc\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"<none>\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"Number of data directories inconsistent\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"Data directory outside image\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"Data directory size too big\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette17DisassemblerWin32C2EPKhm(%"class.courgette::DisassemblerWin32"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  tail call void @_ZN9courgette12DisassemblerC2EPKhm(%"class.courgette::Disassembler"* %4, i8* %1, i64 %2) #12
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette17DisassemblerWin32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  store %"struct.courgette::Section"* null, %"struct.courgette::Section"** %8, align 8
  %9 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 9
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 10
  %11 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 62, i1 false)
  %12 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 108, i1 false)
  ret void
}

declare void @_ZN9courgette12DisassemblerC2EPKhm(%"class.courgette::Disassembler"*, i8*, i64) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK9courgette17DisassemblerWin3215FileOffsetToRVAEm(%"class.courgette::DisassemblerWin32"* nocapture readonly, i64) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  %4 = load i16, i16* %3, align 4
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %8 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %7, align 8
  %9 = zext i16 %4 to i64
  br label %10

10:                                               ; preds = %6, %22
  %11 = phi i64 [ 0, %6 ], [ %23, %22 ]
  %12 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 4
  %13 = load i32, i32* %12, align 1
  %14 = zext i32 %13 to i64
  %15 = icmp ugt i64 %14, %1
  br i1 %15, label %22, label %16

16:                                               ; preds = %10
  %17 = sub i64 %1, %14
  %18 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 3
  %19 = load i32, i32* %18, align 1
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %17, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %16, %10
  %23 = add nuw nsw i64 %11, 1
  %24 = icmp ult i64 %23, %9
  br i1 %24, label %10, label %31

25:                                               ; preds = %16
  %26 = and i64 %11, 4294967295
  %27 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %26, i32 2
  %28 = load i32, i32* %27, align 1
  %29 = trunc i64 %17 to i32
  %30 = add i32 %28, %29
  br label %31

31:                                               ; preds = %22, %2, %25
  %32 = phi i32 [ %30, %25 ], [ -1, %2 ], [ -1, %22 ]
  ret i32 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK9courgette17DisassemblerWin3215RVAToFileOffsetEj(%"class.courgette::DisassemblerWin32"* nocapture readonly, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  %4 = load i16, i16* %3, align 4
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %8 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %7, align 8
  %9 = zext i16 %4 to i64
  br label %10

10:                                               ; preds = %20, %6
  %11 = phi i64 [ 0, %6 ], [ %21, %20 ]
  %12 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 2
  %13 = load i32, i32* %12, align 1
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = sub i32 %1, %13
  %17 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 1
  %18 = load i32, i32* %17, align 1
  %19 = icmp ult i32 %16, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %15, %10
  %21 = add nuw nsw i64 %11, 1
  %22 = icmp eq i64 %21, %9
  br i1 %22, label %36, label %10

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11
  %25 = icmp eq %"struct.courgette::Section"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 3
  %28 = load i32, i32* %27, align 1
  %29 = icmp ult i32 %16, %28
  br i1 %29, label %30, label %41

30:                                               ; preds = %26
  %31 = zext i32 %16 to i64
  %32 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 4
  %33 = load i32, i32* %32, align 1
  %34 = zext i32 %33 to i64
  %35 = add nuw nsw i64 %34, %31
  br label %41

36:                                               ; preds = %20, %2, %23
  %37 = and i32 %1, -3
  %38 = icmp eq i32 %37, 0
  %39 = zext i32 %1 to i64
  %40 = select i1 %38, i64 %39, i64 -1
  ret i64 %40

41:                                               ; preds = %30, %26
  %42 = phi i64 [ %35, %30 ], [ -1, %26 ]
  ret i64 %42
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.courgette::Section"* @_ZNK9courgette17DisassemblerWin3212RVAToSectionEj(%"class.courgette::DisassemblerWin32"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  %4 = load i16, i16* %3, align 4
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %8 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %7, align 8
  %9 = zext i16 %4 to i64
  br label %10

10:                                               ; preds = %6, %20
  %11 = phi i64 [ 0, %6 ], [ %21, %20 ]
  %12 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 2
  %13 = load i32, i32* %12, align 1
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = sub i32 %1, %13
  %17 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11, i32 1
  %18 = load i32, i32* %17, align 1
  %19 = icmp ult i32 %16, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %15, %10
  %21 = add nuw nsw i64 %11, 1
  %22 = icmp ult i64 %21, %9
  br i1 %22, label %10, label %25

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %11
  br label %25

25:                                               ; preds = %20, %23, %2
  %26 = phi %"struct.courgette::Section"* [ null, %2 ], [ %24, %23 ], [ null, %20 ]
  ret %"struct.courgette::Section"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3211ParseHeaderEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 59
  %6 = and i64 %4, -4
  %7 = icmp ne i64 %6, 60
  %8 = and i1 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #12
  br label %693

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 77
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %13, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 90
  br i1 %19, label %22, label %20

20:                                               ; preds = %16, %11
  %21 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12
  br label %693

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %13, i64 60
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = and i64 %26, 7
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  %30 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %693

31:                                               ; preds = %22
  %32 = icmp ult i32 %25, 64
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %693

35:                                               ; preds = %31
  %36 = icmp uge i64 %4, %26
  %37 = sub i64 %4, %26
  %38 = icmp ugt i64 %37, 23
  %39 = and i1 %36, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %693

42:                                               ; preds = %35
  %43 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i8* (%"class.courgette::Disassembler"*, i64)***
  %44 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %43, align 8
  %45 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %44, i64 2
  %46 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %45, align 8
  %47 = tail call i8* %46(%"class.courgette::Disassembler"* %2, i64 %26) #12
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 80
  br i1 %49, label %50, label %62

50:                                               ; preds = %42
  %51 = getelementptr inbounds i8, i8* %47, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 69
  br i1 %53, label %54, label %62

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %47, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %47, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %58, %54, %50, %42
  %63 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #12
  br label %693

64:                                               ; preds = %58
  %65 = add nuw nsw i64 %26, 4
  %66 = load i64, i64* %3, align 8
  %67 = icmp uge i64 %66, %65
  %68 = sub i64 %66, %65
  %69 = icmp ugt i64 %68, 19
  %70 = and i1 %67, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %64
  %72 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %693

73:                                               ; preds = %64
  %74 = load i8*, i8** %12, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %65
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 6
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %75, i64 2
  %80 = bitcast i8* %79 to i16*
  %81 = load i16, i16* %80, align 2
  %82 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  store i16 %81, i16* %82, align 4
  %83 = getelementptr inbounds i8, i8* %75, i64 16
  %84 = bitcast i8* %83 to i16*
  %85 = load i16, i16* %84, align 2
  %86 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 5
  store i16 %85, i16* %86, align 8
  %87 = icmp ult i16 %85, 2
  br i1 %87, label %88, label %90

88:                                               ; preds = %73
  %89 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #12
  br label %693

90:                                               ; preds = %73
  %91 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i16 (%"class.courgette::DisassemblerWin32"*)***
  %92 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %93 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %92, i64 20
  %94 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %93, align 8
  %95 = tail call zeroext i16 %94(%"class.courgette::DisassemblerWin32"* %0) #12
  %96 = icmp ult i16 %85, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %90
  %98 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %693

99:                                               ; preds = %90
  %100 = add nuw nsw i64 %26, 24
  %101 = load i16, i16* %86, align 8
  %102 = zext i16 %101 to i64
  %103 = load i64, i64* %3, align 8
  %104 = icmp uge i64 %103, %100
  %105 = sub i64 %103, %100
  %106 = icmp uge i64 %105, %102
  %107 = and i1 %104, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  %109 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #12
  br label %693

110:                                              ; preds = %99
  %111 = load i8*, i8** %12, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 %100
  %113 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 4
  store i8* %112, i8** %113, align 8
  %114 = bitcast i8* %112 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i32 (%"class.courgette::DisassemblerWin32"*)***
  %117 = load i32 (%"class.courgette::DisassemblerWin32"*)**, i32 (%"class.courgette::DisassemblerWin32"*)*** %116, align 8
  %118 = getelementptr inbounds i32 (%"class.courgette::DisassemblerWin32"*)*, i32 (%"class.courgette::DisassemblerWin32"*)** %117, i64 7
  %119 = load i32 (%"class.courgette::DisassemblerWin32"*)*, i32 (%"class.courgette::DisassemblerWin32"*)** %118, align 8
  %120 = tail call i32 %119(%"class.courgette::DisassemblerWin32"* %0) #12
  switch i32 %120, label %129 [
    i32 1, label %121
    i32 4, label %125
  ]

121:                                              ; preds = %110
  %122 = icmp eq i16 %115, 267
  br i1 %122, label %131, label %123

123:                                              ; preds = %121
  %124 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10, i64 0, i64 0)) #12
  br label %693

125:                                              ; preds = %110
  %126 = icmp eq i16 %115, 523
  br i1 %126, label %131, label %127

127:                                              ; preds = %125
  %128 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.11, i64 0, i64 0)) #12
  br label %693

129:                                              ; preds = %110
  %130 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0)) #12
  br label %693

131:                                              ; preds = %121, %125
  %132 = load i8*, i8** %113, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 10
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds i8, i8* %132, i64 8
  %138 = bitcast i8* %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 11
  store i32 %139, i32* %140, align 8
  %141 = getelementptr inbounds i8, i8* %132, i64 12
  %142 = bitcast i8* %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 12
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds i8, i8* %132, i64 20
  %146 = bitcast i8* %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 13
  store i32 %147, i32* %148, align 8
  %149 = load i32 (%"class.courgette::DisassemblerWin32"*)**, i32 (%"class.courgette::DisassemblerWin32"*)*** %116, align 8
  %150 = getelementptr inbounds i32 (%"class.courgette::DisassemblerWin32"*)*, i32 (%"class.courgette::DisassemblerWin32"*)** %149, i64 7
  %151 = load i32 (%"class.courgette::DisassemblerWin32"*)*, i32 (%"class.courgette::DisassemblerWin32"*)** %150, align 8
  %152 = tail call i32 %151(%"class.courgette::DisassemblerWin32"* %0) #12
  switch i32 %152, label %153 [
    i32 1, label %156
    i32 4, label %175
  ]

153:                                              ; preds = %131
  %154 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 16
  %155 = load i32, i32* %154, align 8
  br label %190

156:                                              ; preds = %131
  %157 = load i8*, i8** %113, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 24
  %159 = bitcast i8* %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 14
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds i8, i8* %157, i64 28
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 15
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %157, i64 56
  %168 = bitcast i8* %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 16
  store i32 %169, i32* %170, align 8
  %171 = getelementptr inbounds i8, i8* %157, i64 92
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 17
  store i32 %173, i32* %174, align 4
  br label %190

175:                                              ; preds = %131
  %176 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 14
  store i32 0, i32* %176, align 4
  %177 = load i8*, i8** %113, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 24
  %179 = bitcast i8* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 15
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds i8, i8* %177, i64 56
  %183 = bitcast i8* %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 16
  store i32 %184, i32* %185, align 8
  %186 = getelementptr inbounds i8, i8* %177, i64 108
  %187 = bitcast i8* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 17
  store i32 %188, i32* %189, align 4
  br label %190

190:                                              ; preds = %153, %175, %156
  %191 = phi i32 [ %155, %153 ], [ %184, %175 ], [ %169, %156 ]
  %192 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 16
  %193 = icmp slt i32 %191, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)) #12
  br label %693

196:                                              ; preds = %190
  %197 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 18
  %198 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 17
  %199 = load i32, i32* %198, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %236

201:                                              ; preds = %196
  %202 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %203 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %202, i64 20
  %204 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %203, align 8
  %205 = tail call zeroext i16 %204(%"class.courgette::DisassemblerWin32"* %0) #12
  %206 = load i16, i16* %86, align 8
  %207 = icmp ult i16 %205, %206
  br i1 %207, label %210, label %208

208:                                              ; preds = %201
  %209 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %239

210:                                              ; preds = %201
  %211 = zext i16 %205 to i64
  %212 = load i8*, i8** %113, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 %211
  %214 = load i8*, i8** %12, align 8
  %215 = icmp ult i8* %213, %214
  br i1 %215, label %221, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds i8, i8* %213, i64 8
  %218 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %219 = load i8*, i8** %218, align 8
  %220 = icmp ult i8* %217, %219
  br i1 %220, label %223, label %221

221:                                              ; preds = %216, %210
  %222 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %239

223:                                              ; preds = %216
  %224 = getelementptr inbounds i8, i8* %213, i64 4
  %225 = bitcast i8* %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = load i32, i32* %192, align 8
  %228 = icmp ugt i32 %226, %227
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  %230 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %239

231:                                              ; preds = %223
  %232 = bitcast i8* %213 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %197, i64 0, i32 0
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 18, i32 1
  store i32 %226, i32* %235, align 4
  br label %239

236:                                              ; preds = %196
  %237 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %197, i64 0, i32 0
  store i32 0, i32* %237, align 4
  %238 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 18, i32 1
  store i32 0, i32* %238, align 4
  br label %239

239:                                              ; preds = %208, %221, %229, %231, %236
  %240 = phi i1 [ true, %236 ], [ %209, %208 ], [ %222, %221 ], [ %230, %229 ], [ true, %231 ]
  %241 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 19
  %242 = load i32, i32* %198, align 4
  %243 = icmp sgt i32 %242, 1
  br i1 %243, label %244, label %281

244:                                              ; preds = %239
  %245 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %246 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %245, i64 20
  %247 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %246, align 8
  %248 = tail call zeroext i16 %247(%"class.courgette::DisassemblerWin32"* %0) #12
  %249 = zext i16 %248 to i64
  %250 = add nuw nsw i64 %249, 8
  %251 = load i16, i16* %86, align 8
  %252 = zext i16 %251 to i64
  %253 = icmp ult i64 %250, %252
  br i1 %253, label %256, label %254

254:                                              ; preds = %244
  %255 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %284

256:                                              ; preds = %244
  %257 = load i8*, i8** %113, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %250
  %259 = load i8*, i8** %12, align 8
  %260 = icmp ult i8* %258, %259
  br i1 %260, label %266, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds i8, i8* %258, i64 8
  %263 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %264 = load i8*, i8** %263, align 8
  %265 = icmp ult i8* %262, %264
  br i1 %265, label %268, label %266

266:                                              ; preds = %261, %256
  %267 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %284

268:                                              ; preds = %261
  %269 = getelementptr inbounds i8, i8* %258, i64 4
  %270 = bitcast i8* %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = load i32, i32* %192, align 8
  %273 = icmp ugt i32 %271, %272
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %284

276:                                              ; preds = %268
  %277 = bitcast i8* %258 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %241, i64 0, i32 0
  store i32 %278, i32* %279, align 4
  %280 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 19, i32 1
  store i32 %271, i32* %280, align 4
  br label %284

281:                                              ; preds = %239
  %282 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %241, i64 0, i32 0
  store i32 0, i32* %282, align 4
  %283 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 19, i32 1
  store i32 0, i32* %283, align 4
  br label %284

284:                                              ; preds = %254, %266, %274, %276, %281
  %285 = phi i1 [ true, %281 ], [ %255, %254 ], [ %267, %266 ], [ %275, %274 ], [ true, %276 ]
  %286 = and i1 %240, %285
  %287 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 20
  %288 = load i32, i32* %198, align 4
  %289 = icmp sgt i32 %288, 2
  br i1 %289, label %290, label %327

290:                                              ; preds = %284
  %291 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %292 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %291, i64 20
  %293 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %292, align 8
  %294 = tail call zeroext i16 %293(%"class.courgette::DisassemblerWin32"* %0) #12
  %295 = zext i16 %294 to i64
  %296 = add nuw nsw i64 %295, 16
  %297 = load i16, i16* %86, align 8
  %298 = zext i16 %297 to i64
  %299 = icmp ult i64 %296, %298
  br i1 %299, label %302, label %300

300:                                              ; preds = %290
  %301 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %330

302:                                              ; preds = %290
  %303 = load i8*, i8** %113, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 %296
  %305 = load i8*, i8** %12, align 8
  %306 = icmp ult i8* %304, %305
  br i1 %306, label %312, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds i8, i8* %304, i64 8
  %309 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %310 = load i8*, i8** %309, align 8
  %311 = icmp ult i8* %308, %310
  br i1 %311, label %314, label %312

312:                                              ; preds = %307, %302
  %313 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %330

314:                                              ; preds = %307
  %315 = getelementptr inbounds i8, i8* %304, i64 4
  %316 = bitcast i8* %315 to i32*
  %317 = load i32, i32* %316, align 4
  %318 = load i32, i32* %192, align 8
  %319 = icmp ugt i32 %317, %318
  br i1 %319, label %320, label %322

320:                                              ; preds = %314
  %321 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %330

322:                                              ; preds = %314
  %323 = bitcast i8* %304 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %287, i64 0, i32 0
  store i32 %324, i32* %325, align 4
  %326 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 20, i32 1
  store i32 %317, i32* %326, align 4
  br label %330

327:                                              ; preds = %284
  %328 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %287, i64 0, i32 0
  store i32 0, i32* %328, align 4
  %329 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 20, i32 1
  store i32 0, i32* %329, align 4
  br label %330

330:                                              ; preds = %300, %312, %320, %322, %327
  %331 = phi i1 [ true, %327 ], [ %301, %300 ], [ %313, %312 ], [ %321, %320 ], [ true, %322 ]
  %332 = and i1 %286, %331
  %333 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 21
  %334 = load i32, i32* %198, align 4
  %335 = icmp sgt i32 %334, 3
  br i1 %335, label %336, label %373

336:                                              ; preds = %330
  %337 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %338 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %337, i64 20
  %339 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %338, align 8
  %340 = tail call zeroext i16 %339(%"class.courgette::DisassemblerWin32"* %0) #12
  %341 = zext i16 %340 to i64
  %342 = add nuw nsw i64 %341, 24
  %343 = load i16, i16* %86, align 8
  %344 = zext i16 %343 to i64
  %345 = icmp ult i64 %342, %344
  br i1 %345, label %348, label %346

346:                                              ; preds = %336
  %347 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %376

348:                                              ; preds = %336
  %349 = load i8*, i8** %113, align 8
  %350 = getelementptr inbounds i8, i8* %349, i64 %342
  %351 = load i8*, i8** %12, align 8
  %352 = icmp ult i8* %350, %351
  br i1 %352, label %358, label %353

353:                                              ; preds = %348
  %354 = getelementptr inbounds i8, i8* %350, i64 8
  %355 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %356 = load i8*, i8** %355, align 8
  %357 = icmp ult i8* %354, %356
  br i1 %357, label %360, label %358

358:                                              ; preds = %353, %348
  %359 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %376

360:                                              ; preds = %353
  %361 = getelementptr inbounds i8, i8* %350, i64 4
  %362 = bitcast i8* %361 to i32*
  %363 = load i32, i32* %362, align 4
  %364 = load i32, i32* %192, align 8
  %365 = icmp ugt i32 %363, %364
  br i1 %365, label %366, label %368

366:                                              ; preds = %360
  %367 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %376

368:                                              ; preds = %360
  %369 = bitcast i8* %350 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %333, i64 0, i32 0
  store i32 %370, i32* %371, align 4
  %372 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 21, i32 1
  store i32 %363, i32* %372, align 4
  br label %376

373:                                              ; preds = %330
  %374 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %333, i64 0, i32 0
  store i32 0, i32* %374, align 4
  %375 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 21, i32 1
  store i32 0, i32* %375, align 4
  br label %376

376:                                              ; preds = %346, %358, %366, %368, %373
  %377 = phi i1 [ true, %373 ], [ %347, %346 ], [ %359, %358 ], [ %367, %366 ], [ true, %368 ]
  %378 = and i1 %332, %377
  %379 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 22
  %380 = load i32, i32* %198, align 4
  %381 = icmp sgt i32 %380, 5
  br i1 %381, label %382, label %419

382:                                              ; preds = %376
  %383 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %384 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %383, i64 20
  %385 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %384, align 8
  %386 = tail call zeroext i16 %385(%"class.courgette::DisassemblerWin32"* %0) #12
  %387 = zext i16 %386 to i64
  %388 = add nuw nsw i64 %387, 40
  %389 = load i16, i16* %86, align 8
  %390 = zext i16 %389 to i64
  %391 = icmp ult i64 %388, %390
  br i1 %391, label %394, label %392

392:                                              ; preds = %382
  %393 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %422

394:                                              ; preds = %382
  %395 = load i8*, i8** %113, align 8
  %396 = getelementptr inbounds i8, i8* %395, i64 %388
  %397 = load i8*, i8** %12, align 8
  %398 = icmp ult i8* %396, %397
  br i1 %398, label %404, label %399

399:                                              ; preds = %394
  %400 = getelementptr inbounds i8, i8* %396, i64 8
  %401 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %402 = load i8*, i8** %401, align 8
  %403 = icmp ult i8* %400, %402
  br i1 %403, label %406, label %404

404:                                              ; preds = %399, %394
  %405 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %422

406:                                              ; preds = %399
  %407 = getelementptr inbounds i8, i8* %396, i64 4
  %408 = bitcast i8* %407 to i32*
  %409 = load i32, i32* %408, align 4
  %410 = load i32, i32* %192, align 8
  %411 = icmp ugt i32 %409, %410
  br i1 %411, label %412, label %414

412:                                              ; preds = %406
  %413 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %422

414:                                              ; preds = %406
  %415 = bitcast i8* %396 to i32*
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %379, i64 0, i32 0
  store i32 %416, i32* %417, align 4
  %418 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 22, i32 1
  store i32 %409, i32* %418, align 4
  br label %422

419:                                              ; preds = %376
  %420 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %379, i64 0, i32 0
  store i32 0, i32* %420, align 4
  %421 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 22, i32 1
  store i32 0, i32* %421, align 4
  br label %422

422:                                              ; preds = %392, %404, %412, %414, %419
  %423 = phi i1 [ true, %419 ], [ %393, %392 ], [ %405, %404 ], [ %413, %412 ], [ true, %414 ]
  %424 = and i1 %378, %423
  %425 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 23
  %426 = load i32, i32* %198, align 4
  %427 = icmp sgt i32 %426, 11
  br i1 %427, label %428, label %465

428:                                              ; preds = %422
  %429 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %430 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %429, i64 20
  %431 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %430, align 8
  %432 = tail call zeroext i16 %431(%"class.courgette::DisassemblerWin32"* %0) #12
  %433 = zext i16 %432 to i64
  %434 = add nuw nsw i64 %433, 88
  %435 = load i16, i16* %86, align 8
  %436 = zext i16 %435 to i64
  %437 = icmp ult i64 %434, %436
  br i1 %437, label %440, label %438

438:                                              ; preds = %428
  %439 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %468

440:                                              ; preds = %428
  %441 = load i8*, i8** %113, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 %434
  %443 = load i8*, i8** %12, align 8
  %444 = icmp ult i8* %442, %443
  br i1 %444, label %450, label %445

445:                                              ; preds = %440
  %446 = getelementptr inbounds i8, i8* %442, i64 8
  %447 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %448 = load i8*, i8** %447, align 8
  %449 = icmp ult i8* %446, %448
  br i1 %449, label %452, label %450

450:                                              ; preds = %445, %440
  %451 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %468

452:                                              ; preds = %445
  %453 = getelementptr inbounds i8, i8* %442, i64 4
  %454 = bitcast i8* %453 to i32*
  %455 = load i32, i32* %454, align 4
  %456 = load i32, i32* %192, align 8
  %457 = icmp ugt i32 %455, %456
  br i1 %457, label %458, label %460

458:                                              ; preds = %452
  %459 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %468

460:                                              ; preds = %452
  %461 = bitcast i8* %442 to i32*
  %462 = load i32, i32* %461, align 4
  %463 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %425, i64 0, i32 0
  store i32 %462, i32* %463, align 4
  %464 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 23, i32 1
  store i32 %455, i32* %464, align 4
  br label %468

465:                                              ; preds = %422
  %466 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %425, i64 0, i32 0
  store i32 0, i32* %466, align 4
  %467 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 23, i32 1
  store i32 0, i32* %467, align 4
  br label %468

468:                                              ; preds = %438, %450, %458, %460, %465
  %469 = phi i1 [ true, %465 ], [ %439, %438 ], [ %451, %450 ], [ %459, %458 ], [ true, %460 ]
  %470 = and i1 %424, %469
  %471 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 24
  %472 = load i32, i32* %198, align 4
  %473 = icmp sgt i32 %472, 12
  br i1 %473, label %474, label %511

474:                                              ; preds = %468
  %475 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %476 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %475, i64 20
  %477 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %476, align 8
  %478 = tail call zeroext i16 %477(%"class.courgette::DisassemblerWin32"* %0) #12
  %479 = zext i16 %478 to i64
  %480 = add nuw nsw i64 %479, 96
  %481 = load i16, i16* %86, align 8
  %482 = zext i16 %481 to i64
  %483 = icmp ult i64 %480, %482
  br i1 %483, label %486, label %484

484:                                              ; preds = %474
  %485 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %514

486:                                              ; preds = %474
  %487 = load i8*, i8** %113, align 8
  %488 = getelementptr inbounds i8, i8* %487, i64 %480
  %489 = load i8*, i8** %12, align 8
  %490 = icmp ult i8* %488, %489
  br i1 %490, label %496, label %491

491:                                              ; preds = %486
  %492 = getelementptr inbounds i8, i8* %488, i64 8
  %493 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %494 = load i8*, i8** %493, align 8
  %495 = icmp ult i8* %492, %494
  br i1 %495, label %498, label %496

496:                                              ; preds = %491, %486
  %497 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %514

498:                                              ; preds = %491
  %499 = getelementptr inbounds i8, i8* %488, i64 4
  %500 = bitcast i8* %499 to i32*
  %501 = load i32, i32* %500, align 4
  %502 = load i32, i32* %192, align 8
  %503 = icmp ugt i32 %501, %502
  br i1 %503, label %504, label %506

504:                                              ; preds = %498
  %505 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %514

506:                                              ; preds = %498
  %507 = bitcast i8* %488 to i32*
  %508 = load i32, i32* %507, align 4
  %509 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %471, i64 0, i32 0
  store i32 %508, i32* %509, align 4
  %510 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 24, i32 1
  store i32 %501, i32* %510, align 4
  br label %514

511:                                              ; preds = %468
  %512 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %471, i64 0, i32 0
  store i32 0, i32* %512, align 4
  %513 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 24, i32 1
  store i32 0, i32* %513, align 4
  br label %514

514:                                              ; preds = %484, %496, %504, %506, %511
  %515 = phi i1 [ true, %511 ], [ %485, %484 ], [ %497, %496 ], [ %505, %504 ], [ true, %506 ]
  %516 = and i1 %470, %515
  %517 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 25
  %518 = load i32, i32* %198, align 4
  %519 = icmp sgt i32 %518, 13
  br i1 %519, label %520, label %557

520:                                              ; preds = %514
  %521 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %522 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %521, i64 20
  %523 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %522, align 8
  %524 = tail call zeroext i16 %523(%"class.courgette::DisassemblerWin32"* %0) #12
  %525 = zext i16 %524 to i64
  %526 = add nuw nsw i64 %525, 104
  %527 = load i16, i16* %86, align 8
  %528 = zext i16 %527 to i64
  %529 = icmp ult i64 %526, %528
  br i1 %529, label %532, label %530

530:                                              ; preds = %520
  %531 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %560

532:                                              ; preds = %520
  %533 = load i8*, i8** %113, align 8
  %534 = getelementptr inbounds i8, i8* %533, i64 %526
  %535 = load i8*, i8** %12, align 8
  %536 = icmp ult i8* %534, %535
  br i1 %536, label %542, label %537

537:                                              ; preds = %532
  %538 = getelementptr inbounds i8, i8* %534, i64 8
  %539 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %540 = load i8*, i8** %539, align 8
  %541 = icmp ult i8* %538, %540
  br i1 %541, label %544, label %542

542:                                              ; preds = %537, %532
  %543 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %560

544:                                              ; preds = %537
  %545 = getelementptr inbounds i8, i8* %534, i64 4
  %546 = bitcast i8* %545 to i32*
  %547 = load i32, i32* %546, align 4
  %548 = load i32, i32* %192, align 8
  %549 = icmp ugt i32 %547, %548
  br i1 %549, label %550, label %552

550:                                              ; preds = %544
  %551 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %560

552:                                              ; preds = %544
  %553 = bitcast i8* %534 to i32*
  %554 = load i32, i32* %553, align 4
  %555 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %517, i64 0, i32 0
  store i32 %554, i32* %555, align 4
  %556 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 25, i32 1
  store i32 %547, i32* %556, align 4
  br label %560

557:                                              ; preds = %514
  %558 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %517, i64 0, i32 0
  store i32 0, i32* %558, align 4
  %559 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 25, i32 1
  store i32 0, i32* %559, align 4
  br label %560

560:                                              ; preds = %530, %542, %550, %552, %557
  %561 = phi i1 [ true, %557 ], [ %531, %530 ], [ %543, %542 ], [ %551, %550 ], [ true, %552 ]
  %562 = and i1 %516, %561
  %563 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 26
  %564 = load i32, i32* %198, align 4
  %565 = icmp sgt i32 %564, 14
  br i1 %565, label %566, label %603

566:                                              ; preds = %560
  %567 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %91, align 8
  %568 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %567, i64 20
  %569 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %568, align 8
  %570 = tail call zeroext i16 %569(%"class.courgette::DisassemblerWin32"* %0) #12
  %571 = zext i16 %570 to i64
  %572 = add nuw nsw i64 %571, 112
  %573 = load i16, i16* %86, align 8
  %574 = zext i16 %573 to i64
  %575 = icmp ult i64 %572, %574
  br i1 %575, label %578, label %576

576:                                              ; preds = %566
  %577 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %606

578:                                              ; preds = %566
  %579 = load i8*, i8** %113, align 8
  %580 = getelementptr inbounds i8, i8* %579, i64 %572
  %581 = load i8*, i8** %12, align 8
  %582 = icmp ult i8* %580, %581
  br i1 %582, label %588, label %583

583:                                              ; preds = %578
  %584 = getelementptr inbounds i8, i8* %580, i64 8
  %585 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %586 = load i8*, i8** %585, align 8
  %587 = icmp ult i8* %584, %586
  br i1 %587, label %590, label %588

588:                                              ; preds = %583, %578
  %589 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %606

590:                                              ; preds = %583
  %591 = getelementptr inbounds i8, i8* %580, i64 4
  %592 = bitcast i8* %591 to i32*
  %593 = load i32, i32* %592, align 4
  %594 = load i32, i32* %192, align 8
  %595 = icmp ugt i32 %593, %594
  br i1 %595, label %596, label %598

596:                                              ; preds = %590
  %597 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %606

598:                                              ; preds = %590
  %599 = bitcast i8* %580 to i32*
  %600 = load i32, i32* %599, align 4
  %601 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %563, i64 0, i32 0
  store i32 %600, i32* %601, align 4
  %602 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 26, i32 1
  store i32 %593, i32* %602, align 4
  br label %606

603:                                              ; preds = %560
  %604 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %563, i64 0, i32 0
  store i32 0, i32* %604, align 4
  %605 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 26, i32 1
  store i32 0, i32* %605, align 4
  br label %606

606:                                              ; preds = %576, %588, %596, %598, %603
  %607 = phi i1 [ true, %603 ], [ %577, %576 ], [ %589, %588 ], [ %597, %596 ], [ true, %598 ]
  %608 = and i1 %562, %607
  br i1 %608, label %611, label %609

609:                                              ; preds = %606
  %610 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0)) #12
  br label %693

611:                                              ; preds = %606
  %612 = load i16, i16* %86, align 8
  %613 = zext i16 %612 to i64
  %614 = add nuw nsw i64 %100, %613
  %615 = load i16, i16* %82, align 4
  %616 = zext i16 %615 to i64
  %617 = load i64, i64* %3, align 8
  %618 = icmp ult i64 %617, %614
  br i1 %618, label %623, label %619

619:                                              ; preds = %611
  %620 = sub i64 %617, %614
  %621 = udiv i64 %620, 40
  %622 = icmp ult i64 %621, %616
  br i1 %622, label %623, label %625

623:                                              ; preds = %619, %611
  %624 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0)) #12
  br label %693

625:                                              ; preds = %619
  %626 = load i8*, i8** %12, align 8
  %627 = getelementptr inbounds i8, i8* %626, i64 %614
  %628 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %629 = bitcast %"struct.courgette::Section"** %628 to i8**
  store i8* %627, i8** %629, align 8
  %630 = icmp eq i16 %615, 0
  %631 = bitcast i8* %627 to %"struct.courgette::Section"*
  br i1 %630, label %666, label %634

632:                                              ; preds = %646
  %633 = icmp eq i64 %659, %616
  br i1 %633, label %660, label %634

634:                                              ; preds = %625, %632
  %635 = phi i64 [ %659, %632 ], [ 0, %625 ]
  %636 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %631, i64 %635, i32 4
  %637 = load i32, i32* %636, align 1
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %631, i64 %635, i32 3
  %640 = load i32, i32* %639, align 1
  %641 = zext i32 %640 to i64
  %642 = icmp uge i64 %617, %638
  %643 = sub i64 %617, %638
  %644 = icmp uge i64 %643, %641
  %645 = and i1 %642, %644
  br i1 %645, label %646, label %664

646:                                              ; preds = %634
  %647 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %631, i64 %635, i32 2
  %648 = load i32, i32* %647, align 1
  %649 = zext i32 %648 to i64
  %650 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %631, i64 %635, i32 1
  %651 = load i32, i32* %650, align 1
  %652 = zext i32 %651 to i64
  %653 = load i32, i32* %192, align 8
  %654 = zext i32 %653 to i64
  %655 = icmp ugt i32 %653, %648
  %656 = sub nsw i64 %654, %649
  %657 = icmp uge i64 %656, %652
  %658 = and i1 %655, %657
  %659 = add nuw nsw i64 %635, 1
  br i1 %658, label %632, label %664

660:                                              ; preds = %632
  br i1 %630, label %666, label %661

661:                                              ; preds = %660
  %662 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 9
  %663 = zext i16 %615 to i64
  br label %671

664:                                              ; preds = %646, %634
  %665 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0)) #12
  br label %693

666:                                              ; preds = %678, %625, %660
  %667 = phi i64 [ 0, %660 ], [ 0, %625 ], [ %686, %678 ]
  tail call void @_ZN9courgette12Disassembler12ReduceLengthEm(%"class.courgette::Disassembler"* %2, i64 %667) #12
  %668 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 9
  %669 = load i8, i8* %668, align 8, !range !2
  %670 = icmp eq i8 %669, 0
  br i1 %670, label %689, label %691

671:                                              ; preds = %678, %661
  %672 = phi i64 [ 0, %661 ], [ %687, %678 ]
  %673 = phi i64 [ 0, %661 ], [ %686, %678 ]
  %674 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %631, i64 %672, i32 0, i64 0
  %675 = tail call i32 @bcmp(i8* %674, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 6)
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %678

677:                                              ; preds = %671
  store i8 1, i8* %662, align 8
  br label %678

678:                                              ; preds = %677, %671
  %679 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %631, i64 %672, i32 4
  %680 = load i32, i32* %679, align 1
  %681 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %631, i64 %672, i32 3
  %682 = load i32, i32* %681, align 1
  %683 = add i32 %682, %680
  %684 = zext i32 %683 to i64
  %685 = icmp ult i64 %673, %684
  %686 = select i1 %685, i64 %684, i64 %673
  %687 = add nuw nsw i64 %672, 1
  %688 = icmp eq i64 %687, %663
  br i1 %688, label %666, label %671

689:                                              ; preds = %666
  %690 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0)) #12
  br label %693

691:                                              ; preds = %666
  %692 = tail call zeroext i1 @_ZN9courgette12Disassembler4GoodEv(%"class.courgette::Disassembler"* %2) #12
  br label %693

693:                                              ; preds = %29, %33, %40, %71, %108, %609, %689, %691, %664, %623, %194, %129, %127, %123, %97, %88, %62, %20, %9
  %694 = phi i1 [ %21, %20 ], [ %10, %9 ], [ %30, %29 ], [ %34, %33 ], [ %41, %40 ], [ %63, %62 ], [ %72, %71 ], [ %89, %88 ], [ %98, %97 ], [ %109, %108 ], [ %130, %129 ], [ %128, %127 ], [ %195, %194 ], [ %124, %123 ], [ %610, %609 ], [ %665, %664 ], [ %624, %623 ], [ %692, %691 ], [ %690, %689 ]
  ret i1 %694
}

declare zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3217ReadDataDirectoryEiPNS_18ImageDataDirectoryE(%"class.courgette::DisassemblerWin32"*, i32, %"class.courgette::ImageDataDirectory"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = shl i32 %1, 3
  %9 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i16 (%"class.courgette::DisassemblerWin32"*)***
  %10 = load i16 (%"class.courgette::DisassemblerWin32"*)**, i16 (%"class.courgette::DisassemblerWin32"*)*** %9, align 8
  %11 = getelementptr inbounds i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %10, i64 20
  %12 = load i16 (%"class.courgette::DisassemblerWin32"*)*, i16 (%"class.courgette::DisassemblerWin32"*)** %11, align 8
  %13 = tail call zeroext i16 %12(%"class.courgette::DisassemblerWin32"* %0) #12
  %14 = zext i16 %13 to i32
  %15 = add nsw i32 %8, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 5
  %18 = load i16, i16* %17, align 8
  %19 = zext i16 %18 to i64
  %20 = icmp ult i64 %16, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %22, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %56

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 4
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %16
  %28 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ult i8* %27, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds i8, i8* %27, i64 8
  %34 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %35 = load i8*, i8** %34, align 8
  %36 = icmp ult i8* %33, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %32, %24
  %38 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %56

39:                                               ; preds = %32
  %40 = getelementptr inbounds i8, i8* %27, i64 4
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 16
  %44 = load i32, i32* %43, align 8
  %45 = icmp ugt i32 %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %28, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %56

48:                                               ; preds = %39
  %49 = bitcast i8* %27 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %2, i64 0, i32 0
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %2, i64 0, i32 1
  store i32 %42, i32* %52, align 4
  br label %56

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %2, i64 0, i32 0
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory"* %2, i64 0, i32 1
  store i32 0, i32* %55, align 4
  br label %56

56:                                               ; preds = %21, %46, %48, %37, %53
  %57 = phi i1 [ true, %53 ], [ %23, %21 ], [ %38, %37 ], [ %47, %46 ], [ true, %48 ]
  ret i1 %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3218CheckSectionRangesEv(%"class.courgette::DisassemblerWin32"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  %3 = load i16, i16* %2, align 4
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %7 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %6, align 8
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 16
  %11 = zext i16 %3 to i64
  br label %14

12:                                               ; preds = %26
  %13 = icmp ult i64 %39, %11
  br i1 %13, label %14, label %40

14:                                               ; preds = %5, %12
  %15 = phi i64 [ 0, %5 ], [ %39, %12 ]
  %16 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %7, i64 %15, i32 4
  %17 = load i32, i32* %16, align 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %7, i64 %15, i32 3
  %20 = load i32, i32* %19, align 1
  %21 = zext i32 %20 to i64
  %22 = icmp uge i64 %9, %18
  %23 = sub i64 %9, %18
  %24 = icmp uge i64 %23, %21
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %40

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %7, i64 %15, i32 2
  %28 = load i32, i32* %27, align 1
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %7, i64 %15, i32 1
  %31 = load i32, i32* %30, align 1
  %32 = zext i32 %31 to i64
  %33 = load i32, i32* %10, align 8
  %34 = zext i32 %33 to i64
  %35 = icmp ugt i32 %33, %28
  %36 = sub nsw i64 %34, %29
  %37 = icmp uge i64 %36, %32
  %38 = and i1 %35, %37
  %39 = add nuw nsw i64 %15, 1
  br i1 %38, label %12, label %40

40:                                               ; preds = %14, %26, %12, %1
  %41 = phi i1 [ true, %1 ], [ true, %12 ], [ false, %26 ], [ false, %14 ]
  ret i1 %41
}

declare void @_ZN9courgette12Disassembler12ReduceLengthEm(%"class.courgette::Disassembler"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN9courgette12Disassembler4GoodEv(%"class.courgette::Disassembler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3211ParseRelocsEPNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.courgette::DisassemblerWin32"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__less.24", align 1
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 22, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %172, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 22, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i8* (%"class.courgette::Disassembler"*, i32)***
  %17 = load i8* (%"class.courgette::Disassembler"*, i32)**, i8* (%"class.courgette::Disassembler"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %17, i64 3
  %19 = load i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %18, align 8
  %20 = tail call i8* %19(%"class.courgette::Disassembler"* %13, i32 %15) #12
  %21 = icmp eq i8* %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = icmp ult i8* %20, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ult i8* %20, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %26, %22, %12
  %31 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0)) #12
  br label %172

32:                                               ; preds = %26
  %33 = ptrtoint i8* %28 to i64
  %34 = ptrtoint i8* %20 to i64
  %35 = sub i64 %33, %34
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0)) #12
  br label %172

39:                                               ; preds = %32
  %40 = getelementptr inbounds i8, i8* %20, i64 %10
  %41 = icmp ugt i32 %9, 8
  br i1 %41, label %42, label %167

42:                                               ; preds = %39
  %43 = getelementptr inbounds i8, i8* %20, i64 8
  %44 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i32 (%"class.courgette::DisassemblerWin32"*, i8*)***
  %45 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i1 (%"class.courgette::DisassemblerWin32"*, i32)***
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast i32** %46 to i64*
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  br label %52

49:                                               ; preds = %162, %74
  %50 = getelementptr inbounds i8, i8* %68, i64 8
  %51 = icmp ult i8* %50, %40
  br i1 %51, label %52, label %167

52:                                               ; preds = %42, %49
  %53 = phi i8* [ %43, %42 ], [ %50, %49 ]
  %54 = phi i8* [ %20, %42 ], [ %68, %49 ]
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds i8, i8* %54, i64 4
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = icmp ugt i32 %59, 7
  %61 = and i32 %59, 3
  %62 = icmp eq i32 %61, 0
  %63 = and i1 %60, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %52
  %65 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %13, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0)) #12
  br label %172

66:                                               ; preds = %52
  %67 = zext i32 %59 to i64
  %68 = getelementptr inbounds i8, i8* %54, i64 %67
  %69 = load i8*, i8** %23, align 8
  %70 = icmp ugt i8* %68, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = load i8*, i8** %27, align 8
  %73 = icmp ugt i8* %68, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = icmp ult i8* %53, %68
  br i1 %75, label %78, label %49

76:                                               ; preds = %66, %71
  %77 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %13, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0)) #12
  br label %172

78:                                               ; preds = %74, %162
  %79 = phi i8* [ %163, %162 ], [ %53, %74 ]
  %80 = bitcast i8* %79 to i16*
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = lshr i32 %82, 12
  %84 = and i32 %82, 4095
  %85 = add i32 %84, %56
  %86 = load i8* (%"class.courgette::Disassembler"*, i32)**, i8* (%"class.courgette::Disassembler"*, i32)*** %16, align 8
  %87 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %86, i64 3
  %88 = load i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %87, align 8
  %89 = tail call i8* %88(%"class.courgette::Disassembler"* %13, i32 %85) #12
  %90 = load i32 (%"class.courgette::DisassemblerWin32"*, i8*)**, i32 (%"class.courgette::DisassemblerWin32"*, i8*)*** %44, align 8
  %91 = getelementptr inbounds i32 (%"class.courgette::DisassemblerWin32"*, i8*)*, i32 (%"class.courgette::DisassemblerWin32"*, i8*)** %90, i64 4
  %92 = load i32 (%"class.courgette::DisassemblerWin32"*, i8*)*, i32 (%"class.courgette::DisassemblerWin32"*, i8*)** %91, align 8
  %93 = tail call i32 %92(%"class.courgette::DisassemblerWin32"* %0, i8* %89) #12
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %162, label %95

95:                                               ; preds = %78
  %96 = load i1 (%"class.courgette::DisassemblerWin32"*, i32)**, i1 (%"class.courgette::DisassemblerWin32"*, i32)*** %45, align 8
  %97 = getelementptr inbounds i1 (%"class.courgette::DisassemblerWin32"*, i32)*, i1 (%"class.courgette::DisassemblerWin32"*, i32)** %96, i64 19
  %98 = load i1 (%"class.courgette::DisassemblerWin32"*, i32)*, i1 (%"class.courgette::DisassemblerWin32"*, i32)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.courgette::DisassemblerWin32"* %0, i32 %83) #12
  br i1 %99, label %100, label %160

100:                                              ; preds = %95
  %101 = load i32*, i32** %6, align 8
  %102 = load i32*, i32** %46, align 8
  %103 = icmp eq i32* %101, %102
  %104 = ptrtoint i32* %102 to i64
  br i1 %103, label %108, label %105

105:                                              ; preds = %100
  store i32 %85, i32* %101, align 4
  %106 = getelementptr inbounds i32, i32* %101, i64 1
  %107 = ptrtoint i32* %106 to i64
  store i64 %107, i64* %7, align 8
  br label %162

108:                                              ; preds = %100
  %109 = ptrtoint i32* %101 to i64
  %110 = load i64, i64* %4, align 8
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 2
  %113 = add nsw i64 %112, 1
  %114 = icmp ugt i64 %113, 4611686018427387903
  br i1 %114, label %115, label %117

115:                                              ; preds = %108
  %116 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #13
  unreachable

117:                                              ; preds = %108
  %118 = sub i64 %104, %110
  %119 = ashr exact i64 %118, 2
  %120 = icmp ult i64 %119, 2305843009213693951
  br i1 %120, label %121, label %129

121:                                              ; preds = %117
  %122 = ashr exact i64 %118, 1
  %123 = icmp ult i64 %122, %113
  %124 = select i1 %123, i64 %113, i64 %122
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %121
  %127 = icmp ugt i64 %124, 4611686018427387903
  br i1 %127, label %128, label %129

128:                                              ; preds = %126
  tail call void @abort() #13
  unreachable

129:                                              ; preds = %126, %117
  %130 = phi i64 [ %124, %126 ], [ 4611686018427387903, %117 ]
  %131 = shl i64 %130, 2
  %132 = tail call i8* @_Znwm(i64 %131) #14
  %133 = bitcast i8* %132 to i32*
  br label %134

134:                                              ; preds = %129, %121
  %135 = phi i64 [ %130, %129 ], [ 0, %121 ]
  %136 = phi i32* [ %133, %129 ], [ null, %121 ]
  %137 = getelementptr inbounds i32, i32* %136, i64 %112
  %138 = getelementptr inbounds i32, i32* %136, i64 %135
  %139 = ptrtoint i32* %138 to i64
  store i32 %85, i32* %137, align 4
  %140 = getelementptr inbounds i32, i32* %137, i64 1
  %141 = ptrtoint i32* %140 to i64
  %142 = load i32*, i32** %48, align 8
  %143 = load i64, i64* %7, align 8
  %144 = ptrtoint i32* %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 2
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds i32, i32* %137, i64 %147
  %149 = ptrtoint i32* %148 to i64
  %150 = icmp sgt i64 %145, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %134
  %152 = bitcast i32* %148 to i8*
  %153 = bitcast i32* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* align 4 %153, i64 %145, i1 false) #12
  %154 = load i32*, i32** %48, align 8
  br label %155

155:                                              ; preds = %151, %134
  %156 = phi i32* [ %142, %134 ], [ %154, %151 ]
  store i64 %149, i64* %4, align 8
  store i64 %141, i64* %7, align 8
  store i64 %139, i64* %47, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %155
  %159 = bitcast i32* %156 to i8*
  tail call void @_ZdlPv(i8* %159) #14
  br label %162

160:                                              ; preds = %95
  %161 = icmp eq i32 %83, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %78, %160, %105, %155, %158
  %163 = getelementptr inbounds i8, i8* %79, i64 2
  %164 = icmp ult i8* %163, %68
  br i1 %164, label %78, label %49

165:                                              ; preds = %160
  %166 = tail call zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0)) #12
  br label %172

167:                                              ; preds = %49, %39
  %168 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = load i32*, i32** %6, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__less.24", %"struct.std::__1::__less.24"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %171) #12
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %169, i32* %170, %"struct.std::__1::__less.24"* nonnull dereferenceable(1) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %171) #12
  br label %172

172:                                              ; preds = %165, %76, %64, %30, %37, %167, %2
  %173 = phi i1 [ true, %2 ], [ %31, %30 ], [ %38, %37 ], [ true, %167 ], [ %166, %165 ], [ %77, %76 ], [ %65, %64 ]
  ret i1 %173
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette17DisassemblerWin3211SectionNameEPKNS_7SectionE(%"class.std::__1::basic_string"* noalias sret, %"struct.courgette::Section"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [9 x i8], align 8
  %4 = icmp eq %"struct.courgette::Section"* %1, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 6, i8* %7, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6, i1 false) #12
  %9 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 0, i8* %9, align 2
  br label %41

10:                                               ; preds = %2
  %11 = getelementptr inbounds [9 x i8], [9 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %11) #12
  %12 = getelementptr inbounds [9 x i8], [9 x i8]* %3, i64 0, i64 8
  %13 = bitcast %"struct.courgette::Section"* %1 to i64*
  %14 = bitcast [9 x i8]* %3 to i64*
  %15 = load i64, i64* %13, align 1
  store i64 %15, i64* %14, align 8
  store i8 0, i8* %12, align 8
  %16 = call i64 @strlen(i8* nonnull %11) #12
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %19) #13
  unreachable

20:                                               ; preds = %10
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = tail call i8* @_Znwm(i64 %24) #14
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = or i64 %24, -9223372036854775808
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %29, align 8
  br label %36

30:                                               ; preds = %20
  %31 = trunc i64 %16 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %35 = icmp eq i64 %16, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30, %22
  %37 = phi i8* [ %25, %22 ], [ %34, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* nonnull align 8 %11, i64 %16, i1 false) #12
  br label %38

38:                                               ; preds = %30, %36
  %39 = phi i8* [ %34, %30 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %16
  store i8 0, i8* %40, align 1
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %11) #12
  br label %41

41:                                               ; preds = %38, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3211QuickDetectEPKhmt(i8* nocapture readonly, i64, i16 zeroext) local_unnamed_addr #2 align 2 {
  %4 = icmp ult i64 %1, 64
  br i1 %4, label %54, label %5

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = icmp eq i8 %6, 77
  br i1 %7, label %8, label %54

8:                                                ; preds = %5
  %9 = getelementptr inbounds i8, i8* %0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 90
  br i1 %11, label %12, label %54

12:                                               ; preds = %8
  %13 = getelementptr inbounds i8, i8* %0, i64 60
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = and i64 %16, 7
  %18 = icmp eq i64 %17, 0
  %19 = icmp ugt i32 %15, 63
  %20 = and i1 %19, %18
  %21 = icmp ult i64 %16, %1
  %22 = and i1 %21, %20
  %23 = xor i1 %22, true
  %24 = sub i64 %1, %16
  %25 = icmp ult i64 %24, 24
  %26 = or i1 %25, %23
  br i1 %26, label %54, label %27

27:                                               ; preds = %12
  %28 = getelementptr inbounds i8, i8* %0, i64 %16
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 80
  br i1 %30, label %31, label %54

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %28, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 69
  br i1 %34, label %35, label %54

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %28, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, i8* %28, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %39
  %44 = add nuw nsw i64 %16, 24
  %45 = icmp uge i64 %44, %1
  %46 = sub i64 %1, %44
  %47 = icmp ult i64 %46, 2
  %48 = or i1 %45, %47
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds i8, i8* %0, i64 %44
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, %2
  br label %54

54:                                               ; preds = %12, %49, %43, %27, %31, %35, %39, %5, %8, %3
  %55 = phi i1 [ false, %3 ], [ false, %8 ], [ false, %5 ], [ false, %12 ], [ false, %39 ], [ false, %35 ], [ false, %31 ], [ false, %27 ], [ %53, %49 ], [ false, %43 ]
  ret i1 %55
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3218IsRvaRangeInBoundsEmm(%"class.courgette::DisassemblerWin32"* nocapture readonly, i64, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = zext i32 %5 to i64
  %7 = icmp ugt i64 %6, %1
  %8 = sub i64 %6, %1
  %9 = icmp uge i64 %8, %2
  %10 = and i1 %7, %9
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3221ExtractAbs32LocationsEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = tail call zeroext i1 @_ZN9courgette17DisassemblerWin3211ParseRelocsEPNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.courgette::DisassemblerWin32"* %0, %"class.std::__1::vector"* %2)
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9courgette17DisassemblerWin3221ExtractRel32LocationsEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::__less.24", align 1
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %9 = bitcast %"class.courgette::DisassemblerWin32"* %0 to void (%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"*)***
  br label %10

10:                                               ; preds = %7, %42
  %11 = phi i64 [ 0, %7 ], [ %54, %42 ]
  %12 = load i16, i16* %3, align 4
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %10
  %15 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %8, align 8
  %16 = zext i16 %12 to i64
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi i64 [ 0, %14 ], [ %38, %36 ]
  %19 = phi %"struct.courgette::Section"* [ null, %14 ], [ %37, %36 ]
  %20 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %15, i64 %18
  %21 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %15, i64 %18, i32 3
  %22 = load i32, i32* %21, align 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %15, i64 %18, i32 4
  %26 = load i32, i32* %25, align 1
  %27 = zext i32 %26 to i64
  %28 = icmp ugt i64 %11, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = icmp eq %"struct.courgette::Section"* %19, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %19, i64 0, i32 4
  %33 = load i32, i32* %32, align 1
  %34 = icmp ult i32 %26, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %31, %29
  br label %36

36:                                               ; preds = %35, %31, %24, %17
  %37 = phi %"struct.courgette::Section"* [ %20, %35 ], [ %19, %31 ], [ %19, %24 ], [ %19, %17 ]
  %38 = add nuw nsw i64 %18, 1
  %39 = icmp eq i64 %38, %16
  br i1 %39, label %40, label %17

40:                                               ; preds = %36
  %41 = icmp eq %"struct.courgette::Section"* %37, null
  br i1 %41, label %57, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %37, i64 0, i32 4
  %44 = load i32, i32* %43, align 1
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %11, %45
  %47 = select i1 %46, i64 %45, i64 %11
  %48 = load void (%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"*)**, void (%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"*)*** %9, align 8
  %49 = getelementptr inbounds void (%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"*)*, void (%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"*)** %48, i64 16
  %50 = load void (%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"*)*, void (%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"*)** %49, align 8
  tail call void %50(%"class.courgette::DisassemblerWin32"* %0, %"struct.courgette::Section"* nonnull %37) #12
  %51 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %37, i64 0, i32 3
  %52 = load i32, i32* %51, align 1
  %53 = zext i32 %52 to i64
  %54 = add i64 %47, %53
  %55 = load i64, i64* %4, align 8
  %56 = icmp ult i64 %54, %55
  br i1 %56, label %10, label %57

57:                                               ; preds = %42, %40, %10, %1
  %58 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 1
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__less.24", %"struct.std::__1::__less.24"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %62) #12
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %59, i32* %61, %"struct.std::__1::__less.24"* nonnull dereferenceable(1) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #12
  ret i1 true
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.courgette::Section"* @_ZNK9courgette17DisassemblerWin3215FindNextSectionEm(%"class.courgette::DisassemblerWin32"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  %4 = load i16, i16* %3, align 4
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %8 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %7, align 8
  %9 = zext i16 %4 to i64
  br label %12

10:                                               ; preds = %31, %2
  %11 = phi %"struct.courgette::Section"* [ null, %2 ], [ %32, %31 ]
  ret %"struct.courgette::Section"* %11

12:                                               ; preds = %6, %31
  %13 = phi i64 [ 0, %6 ], [ %33, %31 ]
  %14 = phi %"struct.courgette::Section"* [ null, %6 ], [ %32, %31 ]
  %15 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %13
  %16 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %13, i32 3
  %17 = load i32, i32* %16, align 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %8, i64 %13, i32 4
  %21 = load i32, i32* %20, align 1
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %22, %1
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = icmp eq %"struct.courgette::Section"* %14, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %14, i64 0, i32 4
  %28 = load i32, i32* %27, align 1
  %29 = icmp ult i32 %21, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26, %24
  br label %31

31:                                               ; preds = %19, %12, %30, %26
  %32 = phi %"struct.courgette::Section"* [ %15, %30 ], [ %14, %26 ], [ %14, %19 ], [ %14, %12 ]
  %33 = add nuw nsw i64 %13, 1
  %34 = icmp ult i64 %33, %9
  br i1 %34, label %12, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.courgette::RvaVisitor"* @_ZN9courgette17DisassemblerWin3227CreateAbs32TargetRvaVisitorEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #14
  %3 = bitcast i8* %2 to %"class.courgette::Disassembler::RvaVisitor_Abs32"*
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9courgette12Disassembler16RvaVisitor_Abs32C1ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE(%"class.courgette::Disassembler::RvaVisitor_Abs32"* nonnull %3, %"class.std::__1::vector"* dereferenceable(24) %4, %"class.courgette::AddressTranslator"* dereferenceable(8) %5) #12
  %6 = bitcast i8* %2 to %"class.courgette::RvaVisitor"*
  ret %"class.courgette::RvaVisitor"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN9courgette12Disassembler16RvaVisitor_Abs32C1ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE(%"class.courgette::Disassembler::RvaVisitor_Abs32"*, %"class.std::__1::vector"* dereferenceable(24), %"class.courgette::AddressTranslator"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.courgette::RvaVisitor"* @_ZN9courgette17DisassemblerWin3227CreateRel32TargetRvaVisitorEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #14
  %3 = bitcast i8* %2 to %"class.courgette::Disassembler::RvaVisitor_Rel32"*
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9courgette12Disassembler16RvaVisitor_Rel32C1ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE(%"class.courgette::Disassembler::RvaVisitor_Rel32"* nonnull %3, %"class.std::__1::vector"* dereferenceable(24) %4, %"class.courgette::AddressTranslator"* dereferenceable(8) %5) #12
  %6 = bitcast i8* %2 to %"class.courgette::RvaVisitor"*
  ret %"class.courgette::RvaVisitor"* %6
}

declare void @_ZN9courgette12Disassembler16RvaVisitor_Rel32C1ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE(%"class.courgette::Disassembler::RvaVisitor_Rel32"*, %"class.std::__1::vector"* dereferenceable(24), %"class.courgette::AddressTranslator"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette17DisassemblerWin3226RemoveUnusedRel32LocationsEPNS_15AssemblyProgramE(%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %10 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i8* (%"class.courgette::Disassembler"*, i32)***
  br label %11

11:                                               ; preds = %24, %8
  %12 = phi i32* [ %25, %24 ], [ %4, %8 ]
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, 4
  %15 = load i8* (%"class.courgette::Disassembler"*, i32)**, i8* (%"class.courgette::Disassembler"*, i32)*** %10, align 8
  %16 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %15, i64 3
  %17 = load i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %16, align 8
  %18 = tail call i8* %17(%"class.courgette::Disassembler"* %9, i32 %13) #12
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %14, %20
  %22 = tail call %"class.courgette::Label"* @_ZN9courgette15AssemblyProgram14FindRel32LabelEj(%"class.courgette::AssemblyProgram"* %1, i32 %21) #12
  %23 = icmp eq %"class.courgette::Label"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds i32, i32* %12, i64 1
  %26 = icmp eq i32* %25, %6
  br i1 %26, label %62, label %11

27:                                               ; preds = %11, %2
  %28 = phi i32* [ %4, %2 ], [ %12, %11 ]
  %29 = ptrtoint i32* %28 to i64
  %30 = icmp eq i32* %28, %6
  br i1 %30, label %62, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i32, i32* %28, i64 1
  %33 = icmp eq i32* %32, %6
  br i1 %33, label %62, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %36 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i8* (%"class.courgette::Disassembler"*, i32)***
  br label %37

37:                                               ; preds = %56, %34
  %38 = phi i32* [ %32, %34 ], [ %58, %56 ]
  %39 = phi i64 [ %29, %34 ], [ %57, %56 ]
  %40 = load i32, i32* %38, align 4
  %41 = add i32 %40, 4
  %42 = load i8* (%"class.courgette::Disassembler"*, i32)**, i8* (%"class.courgette::Disassembler"*, i32)*** %36, align 8
  %43 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %42, i64 3
  %44 = load i8* (%"class.courgette::Disassembler"*, i32)*, i8* (%"class.courgette::Disassembler"*, i32)** %43, align 8
  %45 = tail call i8* %44(%"class.courgette::Disassembler"* %35, i32 %40) #12
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %41, %47
  %49 = tail call %"class.courgette::Label"* @_ZN9courgette15AssemblyProgram14FindRel32LabelEj(%"class.courgette::AssemblyProgram"* %1, i32 %48) #12
  %50 = icmp eq %"class.courgette::Label"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %37
  %52 = load i32, i32* %38, align 4
  %53 = inttoptr i64 %39 to i32*
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = ptrtoint i32* %54 to i64
  br label %56

56:                                               ; preds = %51, %37
  %57 = phi i64 [ %39, %37 ], [ %55, %51 ]
  %58 = getelementptr inbounds i32, i32* %38, i64 1
  %59 = icmp eq i32* %58, %6
  br i1 %59, label %60, label %37

60:                                               ; preds = %56
  %61 = inttoptr i64 %57 to i32*
  br label %62

62:                                               ; preds = %24, %60, %27, %31
  %63 = phi i32* [ %6, %27 ], [ %28, %31 ], [ %61, %60 ], [ %6, %24 ]
  %64 = load i32*, i32** %5, align 8
  %65 = icmp eq i32* %63, %64
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  store i32* %63, i32** %5, align 8
  br label %67

67:                                               ; preds = %62, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette17DisassemblerWin3223GetInstructionGeneratorEPNS_15AssemblyProgramE(%"class.base::RepeatingCallback"* noalias nocapture sret, %"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.courgette::AssemblyProgram"* %2 to i64
  %5 = ptrtoint %"class.courgette::DisassemblerWin32"* %1 to i64
  %6 = tail call i8* @_Znwm(i64 64) #14, !noalias !3
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.courgette::InstructionReceptor"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN9courgette17DisassemblerWin32EKFbPNS3_15AssemblyProgramEPNS3_19InstructionReceptorEEJNS0_17UnretainedWrapperIS4_EES6_EEEFbS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN9courgette17DisassemblerWin32EKFbPNS2_15AssemblyProgramEPNS2_19InstructionReceptorEEJNS0_17UnretainedWrapperIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !3
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*)* @_ZNK9courgette17DisassemblerWin329ParseFileEPNS_15AssemblyProgramEPNS_19InstructionReceptorE to i64), i64 0>, <2 x i64>* %9, align 8, !noalias !3
  %10 = getelementptr inbounds i8, i8* %6, i64 48
  %11 = bitcast i8* %10 to i64*
  store i64 %5, i64* %11, align 8, !noalias !3
  %12 = getelementptr inbounds i8, i8* %6, i64 56
  %13 = bitcast i8* %12 to i64*
  store i64 %4, i64* %13, align 8, !noalias !3
  %14 = bitcast %"class.base::RepeatingCallback"* %0 to i8**
  store i8* %6, i8** %14, align 8, !alias.scope !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9courgette17DisassemblerWin329ParseFileEPNS_15AssemblyProgramEPNS_19InstructionReceptorE(%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*) #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 1
  %9 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i8* (%"class.courgette::Disassembler"*, i64)***
  %10 = bitcast %"class.courgette::InstructionReceptor"* %2 to i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)***
  br label %11

11:                                               ; preds = %64, %3
  %12 = phi i64 [ 0, %3 ], [ %69, %64 ]
  %13 = load i64, i64* %6, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %71

15:                                               ; preds = %11
  %16 = load i16, i16* %4, align 4
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %71, label %18

18:                                               ; preds = %15
  %19 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %7, align 8
  %20 = zext i16 %16 to i64
  br label %21

21:                                               ; preds = %40, %18
  %22 = phi i64 [ 0, %18 ], [ %42, %40 ]
  %23 = phi %"struct.courgette::Section"* [ null, %18 ], [ %41, %40 ]
  %24 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %19, i64 %22
  %25 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %19, i64 %22, i32 3
  %26 = load i32, i32* %25, align 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %19, i64 %22, i32 4
  %30 = load i32, i32* %29, align 1
  %31 = zext i32 %30 to i64
  %32 = icmp ugt i64 %12, %31
  br i1 %32, label %40, label %33

33:                                               ; preds = %28
  %34 = icmp eq %"struct.courgette::Section"* %23, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %23, i64 0, i32 4
  %37 = load i32, i32* %36, align 1
  %38 = icmp ult i32 %30, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %35, %33
  br label %40

40:                                               ; preds = %39, %35, %28, %21
  %41 = phi %"struct.courgette::Section"* [ %24, %39 ], [ %23, %35 ], [ %23, %28 ], [ %23, %21 ]
  %42 = add nuw nsw i64 %22, 1
  %43 = icmp eq i64 %42, %20
  br i1 %43, label %44, label %21

44:                                               ; preds = %40
  %45 = icmp eq %"struct.courgette::Section"* %41, null
  br i1 %45, label %71, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %41, i64 0, i32 4
  %48 = load i32, i32* %47, align 1
  %49 = zext i32 %48 to i64
  %50 = icmp ult i64 %12, %49
  br i1 %50, label %51, label %64

51:                                               ; preds = %46
  %52 = load i8, i8* %8, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %51
  %55 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %9, align 8
  %56 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %55, i64 2
  %57 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %56, align 8
  %58 = tail call i8* %57(%"class.courgette::Disassembler"* %5, i64 %12) #12
  %59 = sub i64 %49, %12
  %60 = load i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)**, i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)*** %10, align 8
  %61 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)*, i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)** %60, i64 6
  %62 = load i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)*, i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.courgette::InstructionReceptor"* %2, i8* %58, i64 %59) #12
  br i1 %63, label %64, label %71

64:                                               ; preds = %54, %51, %46
  %65 = phi i64 [ %12, %46 ], [ %49, %51 ], [ %49, %54 ]
  %66 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %41, i64 0, i32 3
  %67 = load i32, i32* %66, align 1
  %68 = zext i32 %67 to i64
  %69 = add i64 %65, %68
  %70 = tail call zeroext i1 @_ZNK9courgette17DisassemblerWin3215ParseFileRegionEPKNS_7SectionEmmPNS_15AssemblyProgramEPNS_19InstructionReceptorE(%"class.courgette::DisassemblerWin32"* %0, %"struct.courgette::Section"* nonnull %41, i64 %65, i64 %69, %"class.courgette::AssemblyProgram"* %1, %"class.courgette::InstructionReceptor"* %2)
  br i1 %70, label %11, label %71

71:                                               ; preds = %15, %44, %54, %64, %11
  %72 = phi i1 [ true, %11 ], [ false, %64 ], [ false, %54 ], [ true, %44 ], [ true, %15 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9courgette17DisassemblerWin3225ParseNonSectionFileRegionEmmPNS_19InstructionReceptorE(%"class.courgette::DisassemblerWin32"*, i64, i64, %"class.courgette::InstructionReceptor"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %4
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %23

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %12 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i8* (%"class.courgette::Disassembler"*, i64)***
  %13 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %12, align 8
  %14 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %13, i64 2
  %15 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %14, align 8
  %16 = tail call i8* %15(%"class.courgette::Disassembler"* %11, i64 %1) #12
  %17 = sub i64 %2, %1
  %18 = bitcast %"class.courgette::InstructionReceptor"* %3 to i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)***
  %19 = load i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)**, i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)*, i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)** %19, i64 6
  %21 = load i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)*, i1 (%"class.courgette::InstructionReceptor"*, i8*, i64)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.courgette::InstructionReceptor"* %3, i8* %16, i64 %17) #12
  br i1 %22, label %23, label %24

23:                                               ; preds = %10, %8
  br label %24

24:                                               ; preds = %10, %4, %23
  %25 = phi i1 [ true, %23 ], [ true, %4 ], [ false, %10 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9courgette17DisassemblerWin3215ParseFileRegionEPKNS_7SectionEmmPNS_15AssemblyProgramEPNS_19InstructionReceptorE(%"class.courgette::DisassemblerWin32"*, %"struct.courgette::Section"* nocapture readonly, i64, i64, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 22, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  %10 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i8* (%"class.courgette::Disassembler"*, i64)***
  %11 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %11, i64 2
  %13 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %12, align 8
  %14 = tail call i8* %13(%"class.courgette::Disassembler"* %9, i64 %2) #12
  %15 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %10, align 8
  %16 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %15, i64 2
  %17 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %16, align 8
  %18 = tail call i8* %17(%"class.courgette::Disassembler"* %9, i64 %3) #12
  %19 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i32 (%"class.courgette::DisassemblerWin32"*, i64)***
  %20 = load i32 (%"class.courgette::DisassemblerWin32"*, i64)**, i32 (%"class.courgette::DisassemblerWin32"*, i64)*** %19, align 8
  %21 = load i32 (%"class.courgette::DisassemblerWin32"*, i64)*, i32 (%"class.courgette::DisassemblerWin32"*, i64)** %20, align 8
  %22 = tail call i32 %21(%"class.courgette::DisassemblerWin32"* %0, i64 %2) #12
  %23 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 1
  %25 = add i32 %24, %22
  %26 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i32 (%"class.courgette::DisassemblerWin32"*)***
  %27 = load i32 (%"class.courgette::DisassemblerWin32"*)**, i32 (%"class.courgette::DisassemblerWin32"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.courgette::DisassemblerWin32"*)*, i32 (%"class.courgette::DisassemblerWin32"*)** %27, i64 17
  %29 = load i32 (%"class.courgette::DisassemblerWin32"*)*, i32 (%"class.courgette::DisassemblerWin32"*)** %28, align 8
  %30 = tail call i32 %29(%"class.courgette::DisassemblerWin32"* %0) #12
  %31 = zext i32 %22 to i64
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds i8, i8* %14, i64 %32
  %34 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %"class.courgette::InstructionReceptor"* %5 to i1 (%"class.courgette::InstructionReceptor"*, i32)***
  %39 = load i1 (%"class.courgette::InstructionReceptor"*, i32)**, i1 (%"class.courgette::InstructionReceptor"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*, i32)*, i1 (%"class.courgette::InstructionReceptor"*, i32)** %39, i64 4
  %41 = load i1 (%"class.courgette::InstructionReceptor"*, i32)*, i1 (%"class.courgette::InstructionReceptor"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.courgette::InstructionReceptor"* %5, i32 %22) #12
  br i1 %42, label %43, label %154

43:                                               ; preds = %6
  %44 = icmp ult i8* %14, %18
  br i1 %44, label %45, label %154

45:                                               ; preds = %43
  %46 = ptrtoint i8* %33 to i64
  %47 = bitcast %"class.courgette::InstructionReceptor"* %5 to i1 (%"class.courgette::InstructionReceptor"*)***
  %48 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 22, i32 1
  %49 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i32 (%"class.courgette::DisassemblerWin32"*, i8*)***
  %51 = bitcast %"class.courgette::DisassemblerWin32"* %0 to i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)***
  %52 = sext i32 %30 to i64
  %53 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 1
  %54 = bitcast %"class.courgette::InstructionReceptor"* %5 to i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)***
  %55 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 1
  %56 = icmp ugt i32 %25, %8
  %57 = bitcast %"class.courgette::InstructionReceptor"* %5 to i1 (%"class.courgette::InstructionReceptor"*, i8)***
  br label %58

58:                                               ; preds = %45, %149
  %59 = phi i8* [ %14, %45 ], [ %152, %149 ]
  %60 = phi i32* [ %35, %45 ], [ %151, %149 ]
  %61 = phi i32* [ %37, %45 ], [ %150, %149 ]
  %62 = ptrtoint i8* %59 to i64
  %63 = sub i64 %62, %46
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i32 %8, %64
  br i1 %65, label %66, label %76

66:                                               ; preds = %58
  %67 = load i1 (%"class.courgette::InstructionReceptor"*)**, i1 (%"class.courgette::InstructionReceptor"*)*** %47, align 8
  %68 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*)*, i1 (%"class.courgette::InstructionReceptor"*)** %67, i64 2
  %69 = load i1 (%"class.courgette::InstructionReceptor"*)*, i1 (%"class.courgette::InstructionReceptor"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.courgette::InstructionReceptor"* %5) #12
  br i1 %70, label %71, label %154

71:                                               ; preds = %66
  %72 = load i32, i32* %48, align 4
  %73 = icmp eq i32 %72, 0
  %74 = zext i32 %72 to i64
  %75 = getelementptr inbounds i8, i8* %59, i64 %74
  br i1 %73, label %76, label %149

76:                                               ; preds = %71, %58
  %77 = load i32*, i32** %49, align 8
  %78 = icmp eq i32* %61, %77
  br i1 %78, label %99, label %79

79:                                               ; preds = %76, %83
  %80 = phi i32* [ %84, %83 ], [ %61, %76 ]
  %81 = load i32, i32* %80, align 4
  %82 = icmp ult i32 %81, %64
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds i32, i32* %80, i64 1
  %85 = icmp eq i32* %84, %77
  br i1 %85, label %99, label %79

86:                                               ; preds = %79
  %87 = icmp eq i32 %81, %64
  br i1 %87, label %88, label %99

88:                                               ; preds = %86
  %89 = load i32 (%"class.courgette::DisassemblerWin32"*, i8*)**, i32 (%"class.courgette::DisassemblerWin32"*, i8*)*** %50, align 8
  %90 = getelementptr inbounds i32 (%"class.courgette::DisassemblerWin32"*, i8*)*, i32 (%"class.courgette::DisassemblerWin32"*, i8*)** %89, i64 4
  %91 = load i32 (%"class.courgette::DisassemblerWin32"*, i8*)*, i32 (%"class.courgette::DisassemblerWin32"*, i8*)** %90, align 8
  %92 = tail call i32 %91(%"class.courgette::DisassemblerWin32"* %0, i8* %59) #12
  %93 = tail call %"class.courgette::Label"* @_ZN9courgette15AssemblyProgram14FindAbs32LabelEj(%"class.courgette::AssemblyProgram"* %4, i32 %92) #12
  %94 = load i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)**, i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)*** %51, align 8
  %95 = getelementptr inbounds i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)*, i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)** %94, i64 18
  %96 = load i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)*, i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)** %95, align 8
  %97 = tail call zeroext i1 %96(%"class.courgette::DisassemblerWin32"* %0, %"class.courgette::Label"* %93, %"class.courgette::InstructionReceptor"* %5) #12
  %98 = getelementptr inbounds i8, i8* %59, i64 %52
  br i1 %97, label %149, label %154

99:                                               ; preds = %83, %76, %86
  %100 = phi i32* [ %80, %86 ], [ %61, %76 ], [ %77, %83 ]
  %101 = phi i32* [ %77, %86 ], [ %61, %76 ], [ %77, %83 ]
  %102 = load i32*, i32** %53, align 8
  %103 = icmp eq i32* %60, %102
  br i1 %103, label %124, label %104

104:                                              ; preds = %99, %108
  %105 = phi i32* [ %109, %108 ], [ %60, %99 ]
  %106 = load i32, i32* %105, align 4
  %107 = icmp ult i32 %106, %64
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  %109 = getelementptr inbounds i32, i32* %105, i64 1
  %110 = icmp eq i32* %109, %102
  br i1 %110, label %124, label %104

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, %64
  br i1 %112, label %113, label %124

113:                                              ; preds = %111
  %114 = add i32 %64, 4
  %115 = bitcast i8* %59 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %114, %116
  %118 = tail call %"class.courgette::Label"* @_ZN9courgette15AssemblyProgram14FindRel32LabelEj(%"class.courgette::AssemblyProgram"* %4, i32 %117) #12
  %119 = load i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)**, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*** %54, align 8
  %120 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)** %119, i64 7
  %121 = load i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)** %120, align 8
  %122 = tail call zeroext i1 %121(%"class.courgette::InstructionReceptor"* %5, %"class.courgette::Label"* %118) #12
  %123 = getelementptr inbounds i8, i8* %59, i64 4
  br i1 %122, label %149, label %154

124:                                              ; preds = %108, %99, %111
  %125 = phi i32* [ %105, %111 ], [ %60, %99 ], [ %102, %108 ]
  %126 = phi i32* [ %102, %111 ], [ %60, %99 ], [ %102, %108 ]
  %127 = load i8, i8* %55, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %142, label %129

129:                                              ; preds = %124
  %130 = icmp eq i32* %100, %101
  br i1 %130, label %134, label %131

131:                                              ; preds = %129
  %132 = load i32, i32* %100, align 4
  %133 = icmp ugt i32 %25, %132
  br i1 %133, label %142, label %134

134:                                              ; preds = %131, %129
  %135 = icmp eq i32* %125, %126
  br i1 %135, label %139, label %136

136:                                              ; preds = %134
  %137 = load i32, i32* %125, align 4
  %138 = icmp ugt i32 %25, %137
  br i1 %138, label %142, label %139

139:                                              ; preds = %136, %134
  %140 = icmp ugt i32 %8, %64
  %141 = and i1 %56, %140
  br i1 %141, label %142, label %154

142:                                              ; preds = %139, %131, %136, %124
  %143 = load i8, i8* %59, align 1
  %144 = load i1 (%"class.courgette::InstructionReceptor"*, i8)**, i1 (%"class.courgette::InstructionReceptor"*, i8)*** %57, align 8
  %145 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*, i8)*, i1 (%"class.courgette::InstructionReceptor"*, i8)** %144, i64 5
  %146 = load i1 (%"class.courgette::InstructionReceptor"*, i8)*, i1 (%"class.courgette::InstructionReceptor"*, i8)** %145, align 8
  %147 = tail call zeroext i1 %146(%"class.courgette::InstructionReceptor"* %5, i8 zeroext %143) #12
  %148 = getelementptr inbounds i8, i8* %59, i64 1
  br i1 %147, label %149, label %154

149:                                              ; preds = %142, %113, %88, %71
  %150 = phi i32* [ %61, %71 ], [ %80, %88 ], [ %100, %113 ], [ %100, %142 ]
  %151 = phi i32* [ %60, %71 ], [ %60, %88 ], [ %105, %113 ], [ %125, %142 ]
  %152 = phi i8* [ %75, %71 ], [ %98, %88 ], [ %123, %113 ], [ %148, %142 ]
  %153 = icmp ult i8* %152, %18
  br i1 %153, label %58, label %154

154:                                              ; preds = %66, %88, %113, %142, %139, %149, %43, %6
  %155 = phi i1 [ false, %6 ], [ true, %43 ], [ false, %66 ], [ false, %88 ], [ false, %113 ], [ false, %142 ], [ true, %139 ], [ true, %149 ]
  ret i1 %155
}

declare %"class.courgette::Label"* @_ZN9courgette15AssemblyProgram14FindAbs32LabelEj(%"class.courgette::AssemblyProgram"*, i32) local_unnamed_addr #1

declare %"class.courgette::Label"* @_ZN9courgette15AssemblyProgram14FindRel32LabelEj(%"class.courgette::AssemblyProgram"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9courgette17DisassemblerWin3211DescribeRVAEj(%"class.std::__1::basic_string"* noalias sret, %"class.courgette::DisassemblerWin32"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [9 x i8], align 8
  %5 = alloca %"class.std::__1::basic_ostringstream", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %1, i64 0, i32 7
  %8 = load i16, i16* %7, align 4
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %1, i64 0, i32 8
  %12 = load %"struct.courgette::Section"*, %"struct.courgette::Section"** %11, align 8
  %13 = zext i16 %8 to i64
  br label %14

14:                                               ; preds = %24, %10
  %15 = phi i64 [ 0, %10 ], [ %25, %24 ]
  %16 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %12, i64 %15, i32 2
  %17 = load i32, i32* %16, align 1
  %18 = icmp ugt i32 %17, %2
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = sub i32 %2, %17
  %21 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %12, i64 %15, i32 1
  %22 = load i32, i32* %21, align 1
  %23 = icmp ult i32 %20, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %19, %14
  %25 = add nuw nsw i64 %15, 1
  %26 = icmp eq i64 %25, %13
  br i1 %26, label %29, label %14

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %12, i64 %15
  br label %29

29:                                               ; preds = %24, %3, %27
  %30 = phi %"struct.courgette::Section"* [ null, %3 ], [ %28, %27 ], [ null, %24 ]
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_stringbuf"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 256, i1 false)
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %36, i64 0, i32 0
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %5 to i64*
  store i64 %38, i64* %39, align 8
  %40 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %5 to i8**
  %42 = inttoptr i64 %38 to i8*
  %43 = getelementptr i8, i8* %42, i64 -24
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %31, i64 %45
  %47 = bitcast i8* %46 to i64*
  store i64 %40, i64* %47, align 8
  %48 = load i8*, i8** %41, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %31, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = bitcast %"class.std::__1::basic_stringbuf"* %36 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %53, i8* %54) #12
  %55 = getelementptr inbounds i8, i8* %52, i64 136
  %56 = bitcast i8* %55 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %52, i64 144
  %58 = bitcast i8* %57 to i32*
  store i32 -1, i32* %58, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %34, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %37) #12
  %59 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %36, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 1, i32 1
  %61 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 1, i32 3
  %62 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false) #12
  store i32 16, i32* %61, align 8
  %63 = bitcast %"class.std::__1::basic_ostringstream"* %5 to %"class.std::__1::basic_ostream"*
  %64 = load i8*, i8** %41, align 8
  %65 = getelementptr i8, i8* %64, i64 -24
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds i8, i8* %31, i64 %67
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -75
  %73 = or i32 %72, 8
  store i32 %73, i32* %70, align 8
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %63, i32 %2) #12
  %75 = icmp eq %"struct.courgette::Section"* %30, null
  br i1 %75, label %145, label %76

76:                                               ; preds = %29
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i64 2) #12
  %78 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #12
  %79 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %79) #12, !noalias !8
  %80 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 8
  %81 = bitcast %"struct.courgette::Section"* %30 to i64*
  %82 = bitcast [9 x i8]* %4 to i64*
  %83 = load i64, i64* %81, align 1, !noalias !8
  store i64 %83, i64* %82, align 8, !noalias !8
  store i8 0, i8* %80, align 8, !noalias !8
  %84 = call i64 @strlen(i8* nonnull %79) #12, !noalias !8
  %85 = icmp ugt i64 %84, -17
  br i1 %85, label %86, label %88

86:                                               ; preds = %76
  %87 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %87) #13
  unreachable

88:                                               ; preds = %76
  %89 = icmp ult i64 %84, 23
  br i1 %89, label %99, label %90

90:                                               ; preds = %88
  %91 = add nuw i64 %84, 16
  %92 = and i64 %91, -16
  %93 = call i8* @_Znwm(i64 %92) #14
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %93, i8** %94, align 8, !alias.scope !8
  %95 = or i64 %92, -9223372036854775808
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %95, i64* %96, align 8, !alias.scope !8
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %84, i64* %97, align 8, !alias.scope !8
  %98 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %104

99:                                               ; preds = %88
  %100 = trunc i64 %84 to i8
  %101 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 %100, i8* %102, align 1, !alias.scope !8
  %103 = icmp eq i64 %84, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %99, %90
  %105 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %101, %99 ], [ %98, %90 ]
  %106 = phi i8* [ %78, %99 ], [ %93, %90 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %106, i8* nonnull align 8 %79, i64 %84, i1 false) #12
  br label %107

107:                                              ; preds = %99, %104
  %108 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %101, %99 ], [ %105, %104 ]
  %109 = phi i8* [ %78, %99 ], [ %106, %104 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %84
  store i8 0, i8* %110, align 1
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %79) #12, !noalias !8
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = zext i8 %112 to i64
  %119 = select i1 %113, i8* %115, i8* %78
  %120 = select i1 %113, i64 %117, i64 %118
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %63, i8* %119, i64 %120) #12
  %122 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i64 1) #12
  %123 = bitcast %"class.std::__1::basic_ostream"* %122 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr i8, i8* %124, i64 -24
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::basic_ostream"* %122 to i8*
  %129 = getelementptr inbounds i8, i8* %128, i64 %127
  %130 = getelementptr inbounds i8, i8* %129, i64 8
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, -75
  %134 = or i32 %133, 8
  store i32 %134, i32* %131, align 8
  %135 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %30, i64 0, i32 2
  %136 = load i32, i32* %135, align 1
  %137 = sub i32 %2, %136
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %122, i32 %137) #12
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %138, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i64 1) #12
  %140 = load i8, i8* %111, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %107
  %143 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %143) #14
  br label %144

144:                                              ; preds = %107, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #12
  br label %145

145:                                              ; preds = %29, %144
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %36) #12
  %146 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %146, i64* %39, align 8
  %147 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %148 = inttoptr i64 %146 to i8*
  %149 = getelementptr i8, i8* %148, i64 -24
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds i8, i8* %31, i64 %151
  %153 = bitcast i8* %152 to i64*
  store i64 %147, i64* %153, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %154 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  %156 = load i8, i8* %155, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %145
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  call void @_ZdlPv(i8* %160) #14
  br label %161

161:                                              ; preds = %145, %158
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %37) #12
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %63, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %162 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 2
  %163 = bitcast %"class.std::__1::basic_ios.base"* %162 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %163) #12
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %31) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare i8* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm(%"class.courgette::Disassembler"*, i64) unnamed_addr #1

declare i8* @_ZNK9courgette12Disassembler12RVAToPointerEj(%"class.courgette::Disassembler"*, i32) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette17DisassemblerWin32D2Ev(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette17DisassemblerWin32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  tail call void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette17DisassemblerWin32D0Ev(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK9courgette17DisassemblerWin3210image_baseEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 15
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.24"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIMN9courgette17DisassemblerWin32EKFbPNS3_15AssemblyProgramEPNS3_19InstructionReceptorEEJNS0_17UnretainedWrapperIS4_EES6_EEEFbS8_EE3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"class.courgette::InstructionReceptor"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.courgette::AssemblyProgram"**
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 %13
  %15 = bitcast i8* %14 to %"class.courgette::DisassemblerWin32"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*)**
  %24 = load i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*)*, i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %10 to i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi i1 (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::InstructionReceptor"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = load %"class.courgette::AssemblyProgram"*, %"class.courgette::AssemblyProgram"** %8, align 8
  %30 = tail call zeroext i1 %28(%"class.courgette::DisassemblerWin32"* %15, %"class.courgette::AssemblyProgram"* %29, %"class.courgette::InstructionReceptor"* %1) #12
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN9courgette17DisassemblerWin32EKFbPNS2_15AssemblyProgramEPNS2_19InstructionReceptorEEJNS0_17UnretainedWrapperIS3_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN9courgette17DisassemblerWin32EKFbPNS3_15AssemblyProgramEPNS3_19InstructionReceptorEEJNS0_17UnretainedWrapperIS4_EERS6_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN9courgette17DisassemblerWin32EKFbPNS3_15AssemblyProgramEPNS3_19InstructionReceptorEEJNS0_17UnretainedWrapperIS4_EERS6_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIMN9courgette17DisassemblerWin32EKFbPNS1_15AssemblyProgramEPNS1_19InstructionReceptorEEJNS_8internal17UnretainedWrapperIS2_EERS4_EEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIMN9courgette17DisassemblerWin32EKFbPNS1_15AssemblyProgramEPNS1_19InstructionReceptorEEJNS_8internal17UnretainedWrapperIS2_EERS4_EEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN9courgette17DisassemblerWin3211SectionNameEPKNS_7SectionE: argument 0"}
!10 = distinct !{!10, !"_ZN9courgette17DisassemblerWin3211SectionNameEPKNS_7SectionE"}
