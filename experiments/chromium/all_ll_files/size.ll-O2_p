; ModuleID = '../../ui/gfx/geometry/size.cc'
source_filename = "../../ui/gfx/geometry/size.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::SizeF" = type { float, float }

@.str = private unnamed_addr constant [6 x i8] c"%dx%d\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3gfx4SizepLERKS0_(%"class.gfx::Size"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %4, 0
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %4) #9
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13, !prof !2
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %6, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %6) #9
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = icmp sgt i32 %14, 0
  %24 = select i1 %23, i32 %14, i32 0
  store i32 %24, i32* %7, align 4
  %25 = icmp sgt i32 %22, 0
  %26 = select i1 %25, i32 %22, i32 0
  store i32 %26, i32* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %1, 0
  %7 = select i1 %6, i32 -2147483648, i32 2147483647
  %8 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %1) #9
  %9 = extractvalue { i32, i1 } %8, 1
  %10 = extractvalue { i32, i1 } %8, 0
  %11 = select i1 %9, i32 %7, i32 %10, !prof !2
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %2, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %2) #9
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = icmp sgt i32 %11, 0
  %21 = select i1 %20, i32 %11, i32 0
  store i32 %21, i32* %4, align 4
  %22 = icmp sgt i32 %19, 0
  %23 = select i1 %22, i32 %19, i32 0
  store i32 %23, i32* %12, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3gfx4SizemIERKS0_(%"class.gfx::Size"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sub nsw i32 0, %4
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 0, %7
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %4, 0
  %12 = select i1 %11, i32 -2147483648, i32 2147483647
  %13 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %5) #9
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %12, i32 %15, !prof !2
  %17 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %7, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %8) #9
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !2
  %25 = icmp sgt i32 %16, 0
  %26 = select i1 %25, i32 %16, i32 0
  store i32 %26, i32* %9, align 4
  %27 = icmp sgt i32 %24, 0
  %28 = select i1 %27, i32 %24, i32 0
  store i32 %28, i32* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %3, i32 %5) #9
  %7 = extractvalue { i32, i1 } %6, 1
  br i1 %7, label %8, label %9, !prof !2

8:                                                ; preds = %1
  tail call void @llvm.trap() #9
  unreachable

9:                                                ; preds = %1
  %10 = extractvalue { i32, i1 } %6, 0
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx4Size14GetCheckedAreaEv(%"class.gfx::Size"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %3, i32 %5) #9
  %7 = extractvalue { i32, i1 } %6, 1
  %8 = extractvalue { i32, i1 } %6, 0
  %9 = xor i1 %7, true
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i1 %9 to i64
  %13 = or i64 %11, %12
  ret i64 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx4Size8SetToMinERKS0_(%"class.gfx::Size"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %4, %6
  %8 = select i1 %7, i32 %6, i32 %4
  store i32 %8, i32* %3, align 4
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %10, %12
  %14 = select i1 %13, i32 %12, i32 %10
  store i32 %14, i32* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  %8 = select i1 %7, i32 %6, i32 %4
  store i32 %8, i32* %3, align 4
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, %12
  %14 = select i1 %13, i32 %12, i32 %10
  store i32 %14, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Size"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %4, i32 %6) #9
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEff(%"class.gfx::Size"* nocapture readonly dereferenceable(8), float, float) local_unnamed_addr #6 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca %"class.gfx::SizeF", align 4
  %6 = fcmp oeq float %1, 1.000000e+00
  %7 = fcmp oeq float %2, 1.000000e+00
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.gfx::Size"* %0 to i64*
  %11 = load i64, i64* %10, align 4
  br label %30

12:                                               ; preds = %3
  %13 = bitcast <2 x float>* %4 to %"class.gfx::SizeF"*
  %14 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = bitcast %"class.gfx::SizeF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %5, i64 0, i32 0
  %21 = icmp sgt i32 %17, 0
  %22 = select i1 %21, i32 %17, i32 0
  %23 = sitofp i32 %22 to float
  store float %23, float* %20, align 4
  %24 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %5, i64 0, i32 1
  %25 = icmp sgt i32 %19, 0
  %26 = select i1 %25, i32 %19, i32 0
  %27 = sitofp i32 %26 to float
  store float %27, float* %24, align 4
  %28 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %5, float %1, float %2) #9
  store <2 x float> %28, <2 x float>* %4, align 8
  %29 = call i64 @_ZN3gfx12ToCeiledSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nonnull dereferenceable(8) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %30

30:                                               ; preds = %12, %9
  %31 = phi i64 [ %11, %9 ], [ %29, %12 ]
  ret i64 %31
}

declare i64 @_ZN3gfx12ToCeiledSizeERKNS_5SizeFE(%"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #5

declare <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8), float, float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* nocapture readonly dereferenceable(8), float) local_unnamed_addr #6 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.gfx::SizeF", align 4
  %5 = fcmp oeq float %1, 1.000000e+00
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.gfx::Size"* %0 to i64*
  %8 = load i64, i64* %7, align 4
  br label %27

9:                                                ; preds = %2
  %10 = bitcast <2 x float>* %3 to %"class.gfx::SizeF"*
  %11 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = bitcast %"class.gfx::SizeF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 0
  %18 = icmp sgt i32 %14, 0
  %19 = select i1 %18, i32 %14, i32 0
  %20 = sitofp i32 %19 to float
  store float %20, float* %17, align 4
  %21 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  %22 = icmp sgt i32 %16, 0
  %23 = select i1 %22, i32 %16, i32 0
  %24 = sitofp i32 %23 to float
  store float %24, float* %21, align 4
  %25 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %4, float %1, float %1) #9
  store <2 x float> %25, <2 x float>* %3, align 8
  %26 = call i64 @_ZN3gfx12ToCeiledSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nonnull dereferenceable(8) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %27

27:                                               ; preds = %9, %6
  %28 = phi i64 [ %8, %6 ], [ %26, %9 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEff(%"class.gfx::Size"* nocapture readonly dereferenceable(8), float, float) local_unnamed_addr #6 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca %"class.gfx::SizeF", align 4
  %6 = fcmp oeq float %1, 1.000000e+00
  %7 = fcmp oeq float %2, 1.000000e+00
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.gfx::Size"* %0 to i64*
  %11 = load i64, i64* %10, align 4
  br label %30

12:                                               ; preds = %3
  %13 = bitcast <2 x float>* %4 to %"class.gfx::SizeF"*
  %14 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = bitcast %"class.gfx::SizeF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %5, i64 0, i32 0
  %21 = icmp sgt i32 %17, 0
  %22 = select i1 %21, i32 %17, i32 0
  %23 = sitofp i32 %22 to float
  store float %23, float* %20, align 4
  %24 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %5, i64 0, i32 1
  %25 = icmp sgt i32 %19, 0
  %26 = select i1 %25, i32 %19, i32 0
  %27 = sitofp i32 %26 to float
  store float %27, float* %24, align 4
  %28 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %5, float %1, float %2) #9
  store <2 x float> %28, <2 x float>* %4, align 8
  %29 = call i64 @_ZN3gfx13ToFlooredSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nonnull dereferenceable(8) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %30

30:                                               ; preds = %12, %9
  %31 = phi i64 [ %11, %9 ], [ %29, %12 ]
  ret i64 %31
}

declare i64 @_ZN3gfx13ToFlooredSizeERKNS_5SizeFE(%"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nocapture readonly dereferenceable(8), float) local_unnamed_addr #6 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.gfx::SizeF", align 4
  %5 = fcmp oeq float %1, 1.000000e+00
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.gfx::Size"* %0 to i64*
  %8 = load i64, i64* %7, align 4
  br label %27

9:                                                ; preds = %2
  %10 = bitcast <2 x float>* %3 to %"class.gfx::SizeF"*
  %11 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = bitcast %"class.gfx::SizeF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 0
  %18 = icmp sgt i32 %14, 0
  %19 = select i1 %18, i32 %14, i32 0
  %20 = sitofp i32 %19 to float
  store float %20, float* %17, align 4
  %21 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  %22 = icmp sgt i32 %16, 0
  %23 = select i1 %22, i32 %16, i32 0
  %24 = sitofp i32 %23 to float
  store float %24, float* %21, align 4
  %25 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %4, float %1, float %1) #9
  store <2 x float> %25, <2 x float>* %3, align 8
  %26 = call i64 @_ZN3gfx13ToFlooredSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nonnull dereferenceable(8) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %27

27:                                               ; preds = %9, %6
  %28 = phi i64 [ %8, %6 ], [ %26, %9 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx18ScaleToRoundedSizeERKNS_4SizeEff(%"class.gfx::Size"* nocapture readonly dereferenceable(8), float, float) local_unnamed_addr #6 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca %"class.gfx::SizeF", align 4
  %6 = fcmp oeq float %1, 1.000000e+00
  %7 = fcmp oeq float %2, 1.000000e+00
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.gfx::Size"* %0 to i64*
  %11 = load i64, i64* %10, align 4
  br label %30

12:                                               ; preds = %3
  %13 = bitcast <2 x float>* %4 to %"class.gfx::SizeF"*
  %14 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = bitcast %"class.gfx::SizeF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %5, i64 0, i32 0
  %21 = icmp sgt i32 %17, 0
  %22 = select i1 %21, i32 %17, i32 0
  %23 = sitofp i32 %22 to float
  store float %23, float* %20, align 4
  %24 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %5, i64 0, i32 1
  %25 = icmp sgt i32 %19, 0
  %26 = select i1 %25, i32 %19, i32 0
  %27 = sitofp i32 %26 to float
  store float %27, float* %24, align 4
  %28 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %5, float %1, float %2) #9
  store <2 x float> %28, <2 x float>* %4, align 8
  %29 = call i64 @_ZN3gfx13ToRoundedSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nonnull dereferenceable(8) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %30

30:                                               ; preds = %12, %9
  %31 = phi i64 [ %11, %9 ], [ %29, %12 ]
  ret i64 %31
}

declare i64 @_ZN3gfx13ToRoundedSizeERKNS_5SizeFE(%"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gfx18ScaleToRoundedSizeERKNS_4SizeEf(%"class.gfx::Size"* nocapture readonly dereferenceable(8), float) local_unnamed_addr #6 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.gfx::SizeF", align 4
  %5 = fcmp oeq float %1, 1.000000e+00
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = bitcast %"class.gfx::Size"* %0 to i64*
  %8 = load i64, i64* %7, align 4
  br label %27

9:                                                ; preds = %2
  %10 = bitcast <2 x float>* %3 to %"class.gfx::SizeF"*
  %11 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = bitcast %"class.gfx::SizeF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 0
  %18 = icmp sgt i32 %14, 0
  %19 = select i1 %18, i32 %14, i32 0
  %20 = sitofp i32 %19 to float
  store float %20, float* %17, align 4
  %21 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  %22 = icmp sgt i32 %16, 0
  %23 = select i1 %22, i32 %16, i32 0
  %24 = sitofp i32 %23 to float
  store float %24, float* %21, align 4
  %25 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %4, float %1, float %1) #9
  store <2 x float> %25, <2 x float>* %3, align 8
  %26 = call i64 @_ZN3gfx13ToRoundedSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nonnull dereferenceable(8) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %27

27:                                               ; preds = %9, %6
  %28 = phi i64 [ %8, %6 ], [ %26, %9 ]
  ret i64 %28
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
