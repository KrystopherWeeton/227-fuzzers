; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/strip_reflect_info_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/strip_reflect_info_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::StripReflectInfoPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::unordered_set.917" = type { %"class.std::__1::__hash_table.918" }
%"class.std::__1::__hash_table.918" = type <{ %"class.std::__1::unique_ptr.919", %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921", %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::__hash_node_base.922"** }
%"struct.std::__1::__hash_node_base.922" = type { %"struct.std::__1::__hash_node_base.922"* }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::__bucket_list_deallocator.924" }
%"class.std::__1::__bucket_list_deallocator.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::__hash_node_base.922" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::function.939" = type { %"class.std::__1::__function::__policy_func.943" }
%"class.std::__1::__function::__policy_func.943" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.944", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.944" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>

$_ZN8spvtools3opt20StripReflectInfoPassD0Ev = comdat any

$_ZNK8spvtools3opt20StripReflectInfoPass4nameEv = comdat any

$_ZN8spvtools3opt20StripReflectInfoPass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@.str = private unnamed_addr constant [31 x i8] c"SPV_GOOGLE_hlsl_functionality1\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"SPV_GOOGLE_decorate_string\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"SPV_KHR_non_semantic_info\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"NonSemantic.\00", align 1
@_ZTVN8spvtools3opt20StripReflectInfoPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::StripReflectInfoPass"*)* @_ZN8spvtools3opt20StripReflectInfoPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::StripReflectInfoPass"*)* @_ZNK8spvtools3opt20StripReflectInfoPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::StripReflectInfoPass"*)* @_ZN8spvtools3opt20StripReflectInfoPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::StripReflectInfoPass"*)* @_ZN8spvtools3opt20StripReflectInfoPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"strip-reflect\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt20StripReflectInfoPass7ProcessEv(%"class.spvtools::opt::StripReflectInfoPass"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.910", align 8
  %3 = alloca %"class.std::__1::unordered_set.917", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::function.939", align 8
  %6 = bitcast %"class.std::__1::vector.910"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %2, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %2, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.spvtools::opt::StripReflectInfoPass", %"class.spvtools::opt::StripReflectInfoPass"* %0, i64 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %13, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %13, i64 0, i32 13, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %17 to %"class.spvtools::opt::Instruction"*
  %19 = icmp eq %"class.spvtools::opt::Instruction"* %15, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %22 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %23 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %51

24:                                               ; preds = %278
  %25 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %26, align 8
  br label %28

28:                                               ; preds = %24, %1
  %29 = phi %"class.spvtools::opt::Instruction"** [ null, %1 ], [ %279, %24 ]
  %30 = phi %"class.spvtools::opt::Instruction"** [ null, %1 ], [ %280, %24 ]
  %31 = phi %"class.spvtools::opt::Instruction"** [ null, %1 ], [ %281, %24 ]
  %32 = phi %"class.spvtools::opt::Instruction"** [ null, %1 ], [ %282, %24 ]
  %33 = phi %"class.spvtools::opt::Instruction"** [ null, %1 ], [ %283, %24 ]
  %34 = phi %"class.spvtools::opt::Instruction"** [ null, %1 ], [ %284, %24 ]
  %35 = phi i64 [ 0, %1 ], [ %288, %24 ]
  %36 = phi %"class.spvtools::opt::Instruction"** [ null, %1 ], [ %285, %24 ]
  %37 = phi %"class.spvtools::opt::Module"* [ %13, %1 ], [ %27, %24 ]
  %38 = phi i8 [ 0, %1 ], [ %290, %24 ]
  %39 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %37, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %40 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %37, i64 0, i32 4, i32 0, i32 1
  %41 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %42 to %"class.spvtools::opt::Instruction"*
  %44 = icmp eq %"class.spvtools::opt::Instruction"* %40, %43
  br i1 %44, label %301, label %45

45:                                               ; preds = %28
  %46 = and i8 %38, 1
  %47 = icmp eq i8 %46, 0
  %48 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %49 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %50 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %318

51:                                               ; preds = %20, %278
  %52 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %279, %278 ]
  %53 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %280, %278 ]
  %54 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %281, %278 ]
  %55 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %282, %278 ]
  %56 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %283, %278 ]
  %57 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %284, %278 ]
  %58 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %285, %278 ]
  %59 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %286, %278 ]
  %60 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %287, %278 ]
  %61 = phi i64 [ 0, %20 ], [ %288, %278 ]
  %62 = phi %"class.spvtools::opt::Instruction"** [ null, %20 ], [ %289, %278 ]
  %63 = phi %"class.spvtools::opt::Instruction"* [ %18, %20 ], [ %295, %278 ]
  %64 = phi i64 [ %17, %20 ], [ %294, %278 ]
  %65 = phi i8 [ 0, %20 ], [ %290, %278 ]
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  switch i32 %67, label %278 [
    i32 5632, label %68
    i32 5633, label %138
    i32 332, label %208
  ]

68:                                               ; preds = %51
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 3
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 4
  %73 = load i8, i8* %72, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = select i1 %74, i32 1, i32 2
  %76 = xor i1 %74, true
  %77 = zext i1 %76 to i32
  %78 = select i1 %71, i32 %77, i32 %75
  %79 = add nuw nsw i32 %78, 1
  %80 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %63, i32 %79) #12
  %81 = icmp eq i32 %80, 5635
  br i1 %81, label %82, label %278

82:                                               ; preds = %68
  %83 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %84 = icmp ult %"class.spvtools::opt::Instruction"** %59, %83
  %85 = ptrtoint %"class.spvtools::opt::Instruction"** %83 to i64
  br i1 %84, label %86, label %90

86:                                               ; preds = %82
  %87 = bitcast %"class.spvtools::opt::Instruction"** %59 to i64*
  store i64 %64, i64* %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, i64 1
  %89 = ptrtoint %"class.spvtools::opt::Instruction"** %88 to i64
  store i64 %89, i64* %21, align 8
  br label %278

90:                                               ; preds = %82
  %91 = ptrtoint %"class.spvtools::opt::Instruction"** %59 to i64
  %92 = load i64, i64* %22, align 8
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = add nsw i64 %94, 1
  %96 = icmp ugt i64 %95, 2305843009213693951
  br i1 %96, label %97, label %99

97:                                               ; preds = %90
  %98 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %98) #13
  unreachable

99:                                               ; preds = %90
  %100 = sub i64 %85, %92
  %101 = ashr exact i64 %100, 3
  %102 = icmp ult i64 %101, 1152921504606846975
  br i1 %102, label %103, label %111

103:                                              ; preds = %99
  %104 = ashr exact i64 %100, 2
  %105 = icmp ult i64 %104, %95
  %106 = select i1 %105, i64 %95, i64 %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = icmp ugt i64 %106, 2305843009213693951
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  tail call void @abort() #13
  unreachable

111:                                              ; preds = %108, %99
  %112 = phi i64 [ %106, %108 ], [ 2305843009213693951, %99 ]
  %113 = shl i64 %112, 3
  %114 = tail call i8* @_Znwm(i64 %113) #14
  %115 = bitcast i8* %114 to %"class.spvtools::opt::Instruction"**
  br label %116

116:                                              ; preds = %111, %103
  %117 = phi i64 [ %112, %111 ], [ 0, %103 ]
  %118 = phi %"class.spvtools::opt::Instruction"** [ %115, %111 ], [ null, %103 ]
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, i64 %94
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, i64 %117
  %121 = ptrtoint %"class.spvtools::opt::Instruction"** %120 to i64
  %122 = bitcast %"class.spvtools::opt::Instruction"** %119 to i64*
  store i64 %64, i64* %122, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %119, i64 1
  %124 = ptrtoint %"class.spvtools::opt::Instruction"** %123 to i64
  %125 = sub i64 %61, %92
  %126 = ashr exact i64 %125, 3
  %127 = sub nsw i64 0, %126
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %119, i64 %127
  %129 = ptrtoint %"class.spvtools::opt::Instruction"** %128 to i64
  %130 = icmp sgt i64 %125, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %116
  %132 = bitcast %"class.spvtools::opt::Instruction"** %128 to i8*
  %133 = inttoptr i64 %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 %125, i1 false) #12
  br label %134

134:                                              ; preds = %131, %116
  store i64 %129, i64* %22, align 8
  store i64 %124, i64* %21, align 8
  store i64 %121, i64* %23, align 8
  %135 = icmp eq i64 %92, 0
  br i1 %135, label %278, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %137) #14
  br label %278

138:                                              ; preds = %51
  %139 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 3
  %140 = load i8, i8* %139, align 4, !range !2
  %141 = icmp eq i8 %140, 0
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 4
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  %145 = select i1 %144, i32 1, i32 2
  %146 = xor i1 %144, true
  %147 = zext i1 %146 to i32
  %148 = select i1 %141, i32 %147, i32 %145
  %149 = add nuw nsw i32 %148, 2
  %150 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %63, i32 %149) #12
  %151 = icmp eq i32 %150, 5635
  br i1 %151, label %152, label %278

152:                                              ; preds = %138
  %153 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %154 = icmp ult %"class.spvtools::opt::Instruction"** %60, %153
  %155 = ptrtoint %"class.spvtools::opt::Instruction"** %153 to i64
  br i1 %154, label %156, label %160

156:                                              ; preds = %152
  %157 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %64, i64* %157, align 8
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %60, i64 1
  %159 = ptrtoint %"class.spvtools::opt::Instruction"** %158 to i64
  store i64 %159, i64* %21, align 8
  br label %278

160:                                              ; preds = %152
  %161 = ptrtoint %"class.spvtools::opt::Instruction"** %60 to i64
  %162 = load i64, i64* %22, align 8
  %163 = sub i64 %161, %162
  %164 = ashr exact i64 %163, 3
  %165 = add nsw i64 %164, 1
  %166 = icmp ugt i64 %165, 2305843009213693951
  br i1 %166, label %167, label %169

167:                                              ; preds = %160
  %168 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %168) #13
  unreachable

169:                                              ; preds = %160
  %170 = sub i64 %155, %162
  %171 = ashr exact i64 %170, 3
  %172 = icmp ult i64 %171, 1152921504606846975
  br i1 %172, label %173, label %181

173:                                              ; preds = %169
  %174 = ashr exact i64 %170, 2
  %175 = icmp ult i64 %174, %165
  %176 = select i1 %175, i64 %165, i64 %174
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %186, label %178

178:                                              ; preds = %173
  %179 = icmp ugt i64 %176, 2305843009213693951
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #13
  unreachable

181:                                              ; preds = %178, %169
  %182 = phi i64 [ %176, %178 ], [ 2305843009213693951, %169 ]
  %183 = shl i64 %182, 3
  %184 = tail call i8* @_Znwm(i64 %183) #14
  %185 = bitcast i8* %184 to %"class.spvtools::opt::Instruction"**
  br label %186

186:                                              ; preds = %181, %173
  %187 = phi i64 [ %182, %181 ], [ 0, %173 ]
  %188 = phi %"class.spvtools::opt::Instruction"** [ %185, %181 ], [ null, %173 ]
  %189 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %188, i64 %164
  %190 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %188, i64 %187
  %191 = ptrtoint %"class.spvtools::opt::Instruction"** %190 to i64
  %192 = bitcast %"class.spvtools::opt::Instruction"** %189 to i64*
  store i64 %64, i64* %192, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %189, i64 1
  %194 = ptrtoint %"class.spvtools::opt::Instruction"** %193 to i64
  %195 = sub i64 %61, %162
  %196 = ashr exact i64 %195, 3
  %197 = sub nsw i64 0, %196
  %198 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %189, i64 %197
  %199 = ptrtoint %"class.spvtools::opt::Instruction"** %198 to i64
  %200 = icmp sgt i64 %195, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %186
  %202 = bitcast %"class.spvtools::opt::Instruction"** %198 to i8*
  %203 = inttoptr i64 %162 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %195, i1 false) #12
  br label %204

204:                                              ; preds = %201, %186
  store i64 %199, i64* %22, align 8
  store i64 %194, i64* %21, align 8
  store i64 %191, i64* %23, align 8
  %205 = icmp eq i64 %162, 0
  br i1 %205, label %278, label %206

206:                                              ; preds = %204
  %207 = inttoptr i64 %162 to i8*
  tail call void @_ZdlPv(i8* %207) #14
  br label %278

208:                                              ; preds = %51
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 3
  %210 = load i8, i8* %209, align 4, !range !2
  %211 = icmp eq i8 %210, 0
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 4
  %213 = load i8, i8* %212, align 1, !range !2
  %214 = icmp eq i8 %213, 0
  %215 = select i1 %214, i32 1, i32 2
  %216 = xor i1 %214, true
  %217 = zext i1 %216 to i32
  %218 = select i1 %211, i32 %217, i32 %215
  %219 = add nuw nsw i32 %218, 1
  %220 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %63, i32 %219) #12
  %221 = icmp eq i32 %220, 5634
  br i1 %221, label %222, label %278

222:                                              ; preds = %208
  %223 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %224 = icmp ult %"class.spvtools::opt::Instruction"** %62, %223
  %225 = ptrtoint %"class.spvtools::opt::Instruction"** %223 to i64
  br i1 %224, label %226, label %230

226:                                              ; preds = %222
  %227 = bitcast %"class.spvtools::opt::Instruction"** %62 to i64*
  store i64 %64, i64* %227, align 8
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, i64 1
  %229 = ptrtoint %"class.spvtools::opt::Instruction"** %228 to i64
  store i64 %229, i64* %21, align 8
  br label %278

230:                                              ; preds = %222
  %231 = ptrtoint %"class.spvtools::opt::Instruction"** %62 to i64
  %232 = load i64, i64* %22, align 8
  %233 = sub i64 %231, %232
  %234 = ashr exact i64 %233, 3
  %235 = add nsw i64 %234, 1
  %236 = icmp ugt i64 %235, 2305843009213693951
  br i1 %236, label %237, label %239

237:                                              ; preds = %230
  %238 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %238) #13
  unreachable

239:                                              ; preds = %230
  %240 = sub i64 %225, %232
  %241 = ashr exact i64 %240, 3
  %242 = icmp ult i64 %241, 1152921504606846975
  br i1 %242, label %243, label %251

243:                                              ; preds = %239
  %244 = ashr exact i64 %240, 2
  %245 = icmp ult i64 %244, %235
  %246 = select i1 %245, i64 %235, i64 %244
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %243
  %249 = icmp ugt i64 %246, 2305843009213693951
  br i1 %249, label %250, label %251

250:                                              ; preds = %248
  tail call void @abort() #13
  unreachable

251:                                              ; preds = %248, %239
  %252 = phi i64 [ %246, %248 ], [ 2305843009213693951, %239 ]
  %253 = shl i64 %252, 3
  %254 = tail call i8* @_Znwm(i64 %253) #14
  %255 = bitcast i8* %254 to %"class.spvtools::opt::Instruction"**
  br label %256

256:                                              ; preds = %251, %243
  %257 = phi i64 [ %252, %251 ], [ 0, %243 ]
  %258 = phi %"class.spvtools::opt::Instruction"** [ %255, %251 ], [ null, %243 ]
  %259 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %258, i64 %234
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %258, i64 %257
  %261 = ptrtoint %"class.spvtools::opt::Instruction"** %260 to i64
  %262 = bitcast %"class.spvtools::opt::Instruction"** %259 to i64*
  store i64 %64, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %259, i64 1
  %264 = ptrtoint %"class.spvtools::opt::Instruction"** %263 to i64
  %265 = sub i64 %61, %232
  %266 = ashr exact i64 %265, 3
  %267 = sub nsw i64 0, %266
  %268 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %259, i64 %267
  %269 = ptrtoint %"class.spvtools::opt::Instruction"** %268 to i64
  %270 = icmp sgt i64 %265, 0
  br i1 %270, label %271, label %274

271:                                              ; preds = %256
  %272 = bitcast %"class.spvtools::opt::Instruction"** %268 to i8*
  %273 = inttoptr i64 %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %265, i1 false) #12
  br label %274

274:                                              ; preds = %271, %256
  store i64 %269, i64* %22, align 8
  store i64 %264, i64* %21, align 8
  store i64 %261, i64* %23, align 8
  %275 = icmp eq i64 %232, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %274
  %277 = inttoptr i64 %232 to i8*
  tail call void @_ZdlPv(i8* %277) #14
  br label %278

278:                                              ; preds = %276, %274, %226, %206, %204, %156, %136, %134, %86, %138, %68, %51, %208
  %279 = phi %"class.spvtools::opt::Instruction"** [ %52, %51 ], [ %52, %208 ], [ %52, %68 ], [ %52, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %280 = phi %"class.spvtools::opt::Instruction"** [ %53, %51 ], [ %53, %208 ], [ %53, %68 ], [ %53, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %281 = phi %"class.spvtools::opt::Instruction"** [ %54, %51 ], [ %54, %208 ], [ %54, %68 ], [ %54, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %282 = phi %"class.spvtools::opt::Instruction"** [ %55, %51 ], [ %55, %208 ], [ %55, %68 ], [ %55, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %283 = phi %"class.spvtools::opt::Instruction"** [ %56, %51 ], [ %56, %208 ], [ %56, %68 ], [ %56, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %284 = phi %"class.spvtools::opt::Instruction"** [ %57, %51 ], [ %57, %208 ], [ %57, %68 ], [ %57, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %285 = phi %"class.spvtools::opt::Instruction"** [ %58, %51 ], [ %58, %208 ], [ %58, %68 ], [ %58, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %286 = phi %"class.spvtools::opt::Instruction"** [ %59, %51 ], [ %59, %208 ], [ %59, %68 ], [ %59, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %287 = phi %"class.spvtools::opt::Instruction"** [ %60, %51 ], [ %60, %208 ], [ %60, %68 ], [ %60, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %288 = phi i64 [ %61, %51 ], [ %61, %208 ], [ %61, %68 ], [ %61, %138 ], [ %89, %86 ], [ %124, %134 ], [ %124, %136 ], [ %159, %156 ], [ %194, %204 ], [ %194, %206 ], [ %229, %226 ], [ %264, %274 ], [ %264, %276 ]
  %289 = phi %"class.spvtools::opt::Instruction"** [ %62, %51 ], [ %62, %208 ], [ %62, %68 ], [ %62, %138 ], [ %88, %86 ], [ %123, %134 ], [ %123, %136 ], [ %158, %156 ], [ %193, %204 ], [ %193, %206 ], [ %228, %226 ], [ %263, %274 ], [ %263, %276 ]
  %290 = phi i8 [ %65, %51 ], [ %65, %208 ], [ 1, %68 ], [ 1, %138 ], [ %65, %86 ], [ %65, %134 ], [ %65, %136 ], [ %65, %156 ], [ %65, %204 ], [ %65, %206 ], [ %65, %226 ], [ %65, %274 ], [ %65, %276 ]
  %291 = inttoptr i64 %64 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %292 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %291, i64 0, i32 1
  %293 = bitcast %"class.spvtools::opt::Instruction"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = inttoptr i64 %294 to %"class.spvtools::opt::Instruction"*
  %296 = icmp eq %"class.spvtools::opt::Instruction"* %15, %295
  br i1 %296, label %24, label %51

297:                                              ; preds = %526
  %298 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %299 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %298, i64 0, i32 4, i32 0, i32 0, i32 0
  %300 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %299, align 8, !noalias !3
  br label %301

301:                                              ; preds = %297, %28
  %302 = phi %"class.spvtools::opt::Instruction"** [ %527, %297 ], [ %29, %28 ]
  %303 = phi %"class.spvtools::opt::Instruction"** [ %528, %297 ], [ %30, %28 ]
  %304 = phi %"class.spvtools::opt::Instruction"** [ %529, %297 ], [ %31, %28 ]
  %305 = phi i64 [ %533, %297 ], [ %35, %28 ]
  %306 = phi %"class.spvtools::opt::Instruction"** [ %530, %297 ], [ %32, %28 ]
  %307 = phi %"class.spvtools::opt::Module"* [ %300, %297 ], [ %37, %28 ]
  %308 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %307, i64 0, i32 9, i32 0, i32 1, i32 0, i32 1
  %309 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %307, i64 0, i32 9, i32 0, i32 1
  %310 = bitcast %"class.spvtools::opt::Instruction"** %308 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = inttoptr i64 %311 to %"class.spvtools::opt::Instruction"*
  %313 = icmp eq %"class.spvtools::opt::Instruction"* %309, %312
  br i1 %313, label %545, label %314

314:                                              ; preds = %301
  %315 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %316 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %317 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %561

318:                                              ; preds = %45, %526
  %319 = phi %"class.spvtools::opt::Instruction"** [ %29, %45 ], [ %527, %526 ]
  %320 = phi %"class.spvtools::opt::Instruction"** [ %30, %45 ], [ %528, %526 ]
  %321 = phi %"class.spvtools::opt::Instruction"** [ %31, %45 ], [ %529, %526 ]
  %322 = phi %"class.spvtools::opt::Instruction"** [ %32, %45 ], [ %530, %526 ]
  %323 = phi %"class.spvtools::opt::Instruction"** [ %33, %45 ], [ %531, %526 ]
  %324 = phi %"class.spvtools::opt::Instruction"** [ %34, %45 ], [ %532, %526 ]
  %325 = phi i64 [ %35, %45 ], [ %533, %526 ]
  %326 = phi %"class.spvtools::opt::Instruction"** [ %36, %45 ], [ %534, %526 ]
  %327 = phi %"class.spvtools::opt::Instruction"* [ %43, %45 ], [ %539, %526 ]
  %328 = phi i64 [ %42, %45 ], [ %538, %526 ]
  %329 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %327, i64 0, i32 3
  %330 = load i8, i8* %329, align 4, !range !2
  %331 = icmp eq i8 %330, 0
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %327, i64 0, i32 4
  %333 = load i8, i8* %332, align 1, !range !2
  %334 = icmp eq i8 %333, 0
  %335 = select i1 %334, i64 1, i64 2
  %336 = xor i1 %334, true
  %337 = zext i1 %336 to i64
  %338 = select i1 %331, i64 %337, i64 %335
  %339 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %327, i64 0, i32 6, i32 0, i32 0
  %340 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %339, align 8
  %341 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 %338, i32 1, i32 4, i32 0, i32 0, i32 0
  %342 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %341, align 8
  %343 = icmp eq %"class.std::__1::vector.3"* %342, null
  %344 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %342, i64 0, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 %338, i32 1, i32 2
  %346 = select i1 %343, i32** %345, i32** %344
  %347 = bitcast i32** %346 to i8**
  %348 = load i8*, i8** %347, align 8
  %349 = tail call i32 @strcmp(i8* %348, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #15
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %407

351:                                              ; preds = %318
  %352 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %353 = icmp ult %"class.spvtools::opt::Instruction"** %323, %352
  %354 = ptrtoint %"class.spvtools::opt::Instruction"** %352 to i64
  br i1 %353, label %355, label %359

355:                                              ; preds = %351
  %356 = bitcast %"class.spvtools::opt::Instruction"** %323 to i64*
  store i64 %328, i64* %356, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %323, i64 1
  %358 = ptrtoint %"class.spvtools::opt::Instruction"** %357 to i64
  store i64 %358, i64* %48, align 8
  br label %526

359:                                              ; preds = %351
  %360 = ptrtoint %"class.spvtools::opt::Instruction"** %323 to i64
  %361 = load i64, i64* %49, align 8
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, 1
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %367) #13
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %354, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %372, label %380

372:                                              ; preds = %368
  %373 = ashr exact i64 %369, 2
  %374 = icmp ult i64 %373, %364
  %375 = select i1 %374, i64 %364, i64 %373
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %372
  %378 = icmp ugt i64 %375, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %377
  tail call void @abort() #13
  unreachable

380:                                              ; preds = %377, %368
  %381 = phi i64 [ %375, %377 ], [ 2305843009213693951, %368 ]
  %382 = shl i64 %381, 3
  %383 = tail call i8* @_Znwm(i64 %382) #14
  %384 = bitcast i8* %383 to %"class.spvtools::opt::Instruction"**
  br label %385

385:                                              ; preds = %380, %372
  %386 = phi i64 [ %381, %380 ], [ 0, %372 ]
  %387 = phi %"class.spvtools::opt::Instruction"** [ %384, %380 ], [ null, %372 ]
  %388 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %387, i64 %363
  %389 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %387, i64 %386
  %390 = ptrtoint %"class.spvtools::opt::Instruction"** %389 to i64
  %391 = bitcast %"class.spvtools::opt::Instruction"** %388 to i64*
  store i64 %328, i64* %391, align 8
  %392 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %388, i64 1
  %393 = ptrtoint %"class.spvtools::opt::Instruction"** %392 to i64
  %394 = sub i64 %325, %361
  %395 = ashr exact i64 %394, 3
  %396 = sub nsw i64 0, %395
  %397 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %388, i64 %396
  %398 = ptrtoint %"class.spvtools::opt::Instruction"** %397 to i64
  %399 = icmp sgt i64 %394, 0
  br i1 %399, label %400, label %403

400:                                              ; preds = %385
  %401 = bitcast %"class.spvtools::opt::Instruction"** %397 to i8*
  %402 = inttoptr i64 %361 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %401, i8* align 8 %402, i64 %394, i1 false) #12
  br label %403

403:                                              ; preds = %400, %385
  store i64 %398, i64* %49, align 8
  store i64 %393, i64* %48, align 8
  store i64 %390, i64* %50, align 8
  %404 = icmp eq i64 %361, 0
  br i1 %404, label %526, label %405

405:                                              ; preds = %403
  %406 = inttoptr i64 %361 to i8*
  tail call void @_ZdlPv(i8* %406) #14
  br label %526

407:                                              ; preds = %318
  br i1 %47, label %408, label %467

408:                                              ; preds = %407
  %409 = tail call i32 @strcmp(i8* %348, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %467

411:                                              ; preds = %408
  %412 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %413 = icmp ult %"class.spvtools::opt::Instruction"** %324, %412
  %414 = ptrtoint %"class.spvtools::opt::Instruction"** %412 to i64
  br i1 %413, label %415, label %419

415:                                              ; preds = %411
  %416 = bitcast %"class.spvtools::opt::Instruction"** %324 to i64*
  store i64 %328, i64* %416, align 8
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %324, i64 1
  %418 = ptrtoint %"class.spvtools::opt::Instruction"** %417 to i64
  store i64 %418, i64* %48, align 8
  br label %526

419:                                              ; preds = %411
  %420 = ptrtoint %"class.spvtools::opt::Instruction"** %324 to i64
  %421 = load i64, i64* %49, align 8
  %422 = sub i64 %420, %421
  %423 = ashr exact i64 %422, 3
  %424 = add nsw i64 %423, 1
  %425 = icmp ugt i64 %424, 2305843009213693951
  br i1 %425, label %426, label %428

426:                                              ; preds = %419
  %427 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %427) #13
  unreachable

428:                                              ; preds = %419
  %429 = sub i64 %414, %421
  %430 = ashr exact i64 %429, 3
  %431 = icmp ult i64 %430, 1152921504606846975
  br i1 %431, label %432, label %440

432:                                              ; preds = %428
  %433 = ashr exact i64 %429, 2
  %434 = icmp ult i64 %433, %424
  %435 = select i1 %434, i64 %424, i64 %433
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %445, label %437

437:                                              ; preds = %432
  %438 = icmp ugt i64 %435, 2305843009213693951
  br i1 %438, label %439, label %440

439:                                              ; preds = %437
  tail call void @abort() #13
  unreachable

440:                                              ; preds = %437, %428
  %441 = phi i64 [ %435, %437 ], [ 2305843009213693951, %428 ]
  %442 = shl i64 %441, 3
  %443 = tail call i8* @_Znwm(i64 %442) #14
  %444 = bitcast i8* %443 to %"class.spvtools::opt::Instruction"**
  br label %445

445:                                              ; preds = %440, %432
  %446 = phi i64 [ %441, %440 ], [ 0, %432 ]
  %447 = phi %"class.spvtools::opt::Instruction"** [ %444, %440 ], [ null, %432 ]
  %448 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %447, i64 %423
  %449 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %447, i64 %446
  %450 = ptrtoint %"class.spvtools::opt::Instruction"** %449 to i64
  %451 = bitcast %"class.spvtools::opt::Instruction"** %448 to i64*
  store i64 %328, i64* %451, align 8
  %452 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %448, i64 1
  %453 = ptrtoint %"class.spvtools::opt::Instruction"** %452 to i64
  %454 = sub i64 %325, %421
  %455 = ashr exact i64 %454, 3
  %456 = sub nsw i64 0, %455
  %457 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %448, i64 %456
  %458 = ptrtoint %"class.spvtools::opt::Instruction"** %457 to i64
  %459 = icmp sgt i64 %454, 0
  br i1 %459, label %460, label %463

460:                                              ; preds = %445
  %461 = bitcast %"class.spvtools::opt::Instruction"** %457 to i8*
  %462 = inttoptr i64 %421 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %461, i8* align 8 %462, i64 %454, i1 false) #12
  br label %463

463:                                              ; preds = %460, %445
  store i64 %458, i64* %49, align 8
  store i64 %453, i64* %48, align 8
  store i64 %450, i64* %50, align 8
  %464 = icmp eq i64 %421, 0
  br i1 %464, label %526, label %465

465:                                              ; preds = %463
  %466 = inttoptr i64 %421 to i8*
  tail call void @_ZdlPv(i8* %466) #14
  br label %526

467:                                              ; preds = %407, %408
  %468 = tail call i32 @strcmp(i8* %348, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #15
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %526

470:                                              ; preds = %467
  %471 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %472 = icmp ult %"class.spvtools::opt::Instruction"** %326, %471
  %473 = ptrtoint %"class.spvtools::opt::Instruction"** %471 to i64
  br i1 %472, label %474, label %478

474:                                              ; preds = %470
  %475 = bitcast %"class.spvtools::opt::Instruction"** %326 to i64*
  store i64 %328, i64* %475, align 8
  %476 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %326, i64 1
  %477 = ptrtoint %"class.spvtools::opt::Instruction"** %476 to i64
  store i64 %477, i64* %48, align 8
  br label %526

478:                                              ; preds = %470
  %479 = ptrtoint %"class.spvtools::opt::Instruction"** %326 to i64
  %480 = load i64, i64* %49, align 8
  %481 = sub i64 %479, %480
  %482 = ashr exact i64 %481, 3
  %483 = add nsw i64 %482, 1
  %484 = icmp ugt i64 %483, 2305843009213693951
  br i1 %484, label %485, label %487

485:                                              ; preds = %478
  %486 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %486) #13
  unreachable

487:                                              ; preds = %478
  %488 = sub i64 %473, %480
  %489 = ashr exact i64 %488, 3
  %490 = icmp ult i64 %489, 1152921504606846975
  br i1 %490, label %491, label %499

491:                                              ; preds = %487
  %492 = ashr exact i64 %488, 2
  %493 = icmp ult i64 %492, %483
  %494 = select i1 %493, i64 %483, i64 %492
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %504, label %496

496:                                              ; preds = %491
  %497 = icmp ugt i64 %494, 2305843009213693951
  br i1 %497, label %498, label %499

498:                                              ; preds = %496
  tail call void @abort() #13
  unreachable

499:                                              ; preds = %496, %487
  %500 = phi i64 [ %494, %496 ], [ 2305843009213693951, %487 ]
  %501 = shl i64 %500, 3
  %502 = tail call i8* @_Znwm(i64 %501) #14
  %503 = bitcast i8* %502 to %"class.spvtools::opt::Instruction"**
  br label %504

504:                                              ; preds = %499, %491
  %505 = phi i64 [ %500, %499 ], [ 0, %491 ]
  %506 = phi %"class.spvtools::opt::Instruction"** [ %503, %499 ], [ null, %491 ]
  %507 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %506, i64 %482
  %508 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %506, i64 %505
  %509 = ptrtoint %"class.spvtools::opt::Instruction"** %508 to i64
  %510 = bitcast %"class.spvtools::opt::Instruction"** %507 to i64*
  store i64 %328, i64* %510, align 8
  %511 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %507, i64 1
  %512 = ptrtoint %"class.spvtools::opt::Instruction"** %511 to i64
  %513 = sub i64 %325, %480
  %514 = ashr exact i64 %513, 3
  %515 = sub nsw i64 0, %514
  %516 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %507, i64 %515
  %517 = ptrtoint %"class.spvtools::opt::Instruction"** %516 to i64
  %518 = icmp sgt i64 %513, 0
  br i1 %518, label %519, label %522

519:                                              ; preds = %504
  %520 = bitcast %"class.spvtools::opt::Instruction"** %516 to i8*
  %521 = inttoptr i64 %480 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %520, i8* align 8 %521, i64 %513, i1 false) #12
  br label %522

522:                                              ; preds = %519, %504
  store i64 %517, i64* %49, align 8
  store i64 %512, i64* %48, align 8
  store i64 %509, i64* %50, align 8
  %523 = icmp eq i64 %480, 0
  br i1 %523, label %526, label %524

524:                                              ; preds = %522
  %525 = inttoptr i64 %480 to i8*
  tail call void @_ZdlPv(i8* %525) #14
  br label %526

526:                                              ; preds = %524, %522, %474, %465, %463, %415, %405, %403, %355, %467
  %527 = phi %"class.spvtools::opt::Instruction"** [ %511, %524 ], [ %511, %522 ], [ %476, %474 ], [ %452, %465 ], [ %452, %463 ], [ %417, %415 ], [ %392, %405 ], [ %392, %403 ], [ %357, %355 ], [ %319, %467 ]
  %528 = phi %"class.spvtools::opt::Instruction"** [ %511, %524 ], [ %511, %522 ], [ %476, %474 ], [ %452, %465 ], [ %452, %463 ], [ %417, %415 ], [ %392, %405 ], [ %392, %403 ], [ %357, %355 ], [ %320, %467 ]
  %529 = phi %"class.spvtools::opt::Instruction"** [ %511, %524 ], [ %511, %522 ], [ %476, %474 ], [ %452, %465 ], [ %452, %463 ], [ %417, %415 ], [ %392, %405 ], [ %392, %403 ], [ %357, %355 ], [ %321, %467 ]
  %530 = phi %"class.spvtools::opt::Instruction"** [ %511, %524 ], [ %511, %522 ], [ %476, %474 ], [ %452, %465 ], [ %452, %463 ], [ %417, %415 ], [ %392, %405 ], [ %392, %403 ], [ %357, %355 ], [ %322, %467 ]
  %531 = phi %"class.spvtools::opt::Instruction"** [ %511, %524 ], [ %511, %522 ], [ %476, %474 ], [ %452, %465 ], [ %452, %463 ], [ %417, %415 ], [ %392, %405 ], [ %392, %403 ], [ %357, %355 ], [ %323, %467 ]
  %532 = phi %"class.spvtools::opt::Instruction"** [ %511, %524 ], [ %511, %522 ], [ %476, %474 ], [ %452, %465 ], [ %452, %463 ], [ %417, %415 ], [ %392, %405 ], [ %392, %403 ], [ %357, %355 ], [ %324, %467 ]
  %533 = phi i64 [ %512, %524 ], [ %512, %522 ], [ %477, %474 ], [ %453, %465 ], [ %453, %463 ], [ %418, %415 ], [ %393, %405 ], [ %393, %403 ], [ %358, %355 ], [ %325, %467 ]
  %534 = phi %"class.spvtools::opt::Instruction"** [ %511, %524 ], [ %511, %522 ], [ %476, %474 ], [ %452, %465 ], [ %452, %463 ], [ %417, %415 ], [ %392, %405 ], [ %392, %403 ], [ %357, %355 ], [ %326, %467 ]
  %535 = inttoptr i64 %328 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %536 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %535, i64 0, i32 1
  %537 = bitcast %"class.spvtools::opt::Instruction"** %536 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = inttoptr i64 %538 to %"class.spvtools::opt::Instruction"*
  %540 = icmp eq %"class.spvtools::opt::Instruction"* %40, %539
  br i1 %540, label %297, label %318

541:                                              ; preds = %620
  %542 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %543 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %542, i64 0, i32 4, i32 0, i32 0, i32 0
  %544 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %543, align 8, !noalias !6
  br label %545

545:                                              ; preds = %541, %301
  %546 = phi %"class.spvtools::opt::Instruction"** [ %621, %541 ], [ %302, %301 ]
  %547 = phi %"class.spvtools::opt::Instruction"** [ %621, %541 ], [ %303, %301 ]
  %548 = phi i64 [ %622, %541 ], [ %305, %301 ]
  %549 = phi %"class.spvtools::opt::Instruction"** [ %621, %541 ], [ %304, %301 ]
  %550 = phi %"class.spvtools::opt::Module"* [ %544, %541 ], [ %307, %301 ]
  %551 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %550, i64 0, i32 10, i32 0, i32 1, i32 0, i32 1
  %552 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %550, i64 0, i32 10, i32 0, i32 1
  %553 = bitcast %"class.spvtools::opt::Instruction"** %551 to i64*
  %554 = load i64, i64* %553, align 8
  %555 = inttoptr i64 %554 to %"class.spvtools::opt::Instruction"*
  %556 = icmp eq %"class.spvtools::opt::Instruction"* %552, %555
  br i1 %556, label %633, label %557

557:                                              ; preds = %545
  %558 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %559 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %560 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %648

561:                                              ; preds = %314, %620
  %562 = phi i64 [ %305, %314 ], [ %622, %620 ]
  %563 = phi %"class.spvtools::opt::Instruction"** [ %306, %314 ], [ %621, %620 ]
  %564 = phi i64 [ %311, %314 ], [ %626, %620 ]
  %565 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %566 = icmp ult %"class.spvtools::opt::Instruction"** %563, %565
  %567 = ptrtoint %"class.spvtools::opt::Instruction"** %565 to i64
  br i1 %566, label %568, label %572

568:                                              ; preds = %561
  %569 = bitcast %"class.spvtools::opt::Instruction"** %563 to i64*
  store i64 %564, i64* %569, align 8
  %570 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %563, i64 1
  %571 = ptrtoint %"class.spvtools::opt::Instruction"** %570 to i64
  store i64 %571, i64* %315, align 8
  br label %620

572:                                              ; preds = %561
  %573 = ptrtoint %"class.spvtools::opt::Instruction"** %563 to i64
  %574 = load i64, i64* %316, align 8
  %575 = sub i64 %573, %574
  %576 = ashr exact i64 %575, 3
  %577 = add nsw i64 %576, 1
  %578 = icmp ugt i64 %577, 2305843009213693951
  br i1 %578, label %579, label %581

579:                                              ; preds = %572
  %580 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %580) #13
  unreachable

581:                                              ; preds = %572
  %582 = sub i64 %567, %574
  %583 = ashr exact i64 %582, 3
  %584 = icmp ult i64 %583, 1152921504606846975
  br i1 %584, label %585, label %593

585:                                              ; preds = %581
  %586 = ashr exact i64 %582, 2
  %587 = icmp ult i64 %586, %577
  %588 = select i1 %587, i64 %577, i64 %586
  %589 = icmp eq i64 %588, 0
  br i1 %589, label %598, label %590

590:                                              ; preds = %585
  %591 = icmp ugt i64 %588, 2305843009213693951
  br i1 %591, label %592, label %593

592:                                              ; preds = %590
  tail call void @abort() #13
  unreachable

593:                                              ; preds = %590, %581
  %594 = phi i64 [ %588, %590 ], [ 2305843009213693951, %581 ]
  %595 = shl i64 %594, 3
  %596 = tail call i8* @_Znwm(i64 %595) #14
  %597 = bitcast i8* %596 to %"class.spvtools::opt::Instruction"**
  br label %598

598:                                              ; preds = %593, %585
  %599 = phi i64 [ %594, %593 ], [ 0, %585 ]
  %600 = phi %"class.spvtools::opt::Instruction"** [ %597, %593 ], [ null, %585 ]
  %601 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %600, i64 %576
  %602 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %600, i64 %599
  %603 = ptrtoint %"class.spvtools::opt::Instruction"** %602 to i64
  %604 = bitcast %"class.spvtools::opt::Instruction"** %601 to i64*
  store i64 %564, i64* %604, align 8
  %605 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %601, i64 1
  %606 = ptrtoint %"class.spvtools::opt::Instruction"** %605 to i64
  %607 = sub i64 %562, %574
  %608 = ashr exact i64 %607, 3
  %609 = sub nsw i64 0, %608
  %610 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %601, i64 %609
  %611 = ptrtoint %"class.spvtools::opt::Instruction"** %610 to i64
  %612 = icmp sgt i64 %607, 0
  br i1 %612, label %613, label %616

613:                                              ; preds = %598
  %614 = bitcast %"class.spvtools::opt::Instruction"** %610 to i8*
  %615 = inttoptr i64 %574 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %614, i8* align 8 %615, i64 %607, i1 false) #12
  br label %616

616:                                              ; preds = %613, %598
  store i64 %611, i64* %316, align 8
  store i64 %606, i64* %315, align 8
  store i64 %603, i64* %317, align 8
  %617 = icmp eq i64 %574, 0
  br i1 %617, label %620, label %618

618:                                              ; preds = %616
  %619 = inttoptr i64 %574 to i8*
  tail call void @_ZdlPv(i8* %619) #14
  br label %620

620:                                              ; preds = %568, %616, %618
  %621 = phi %"class.spvtools::opt::Instruction"** [ %570, %568 ], [ %605, %616 ], [ %605, %618 ]
  %622 = phi i64 [ %571, %568 ], [ %606, %616 ], [ %606, %618 ]
  %623 = inttoptr i64 %564 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %624 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %623, i64 0, i32 1
  %625 = bitcast %"class.spvtools::opt::Instruction"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = inttoptr i64 %626 to %"class.spvtools::opt::Instruction"*
  %628 = icmp eq %"class.spvtools::opt::Instruction"* %309, %627
  br i1 %628, label %541, label %561

629:                                              ; preds = %707
  %630 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %631 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %630, i64 0, i32 4, i32 0, i32 0, i32 0
  %632 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %631, align 8, !noalias !9
  br label %633

633:                                              ; preds = %629, %545
  %634 = phi %"class.spvtools::opt::Instruction"** [ %708, %629 ], [ %546, %545 ]
  %635 = phi i64 [ %709, %629 ], [ %548, %545 ]
  %636 = phi %"class.spvtools::opt::Instruction"** [ %708, %629 ], [ %547, %545 ]
  %637 = phi %"class.spvtools::opt::Module"* [ %632, %629 ], [ %550, %545 ]
  %638 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %637, i64 0, i32 11, i32 0, i32 1, i32 0, i32 1
  %639 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %637, i64 0, i32 11, i32 0, i32 1
  %640 = bitcast %"class.spvtools::opt::Instruction"** %638 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = inttoptr i64 %641 to %"class.spvtools::opt::Instruction"*
  %643 = icmp eq %"class.spvtools::opt::Instruction"* %639, %642
  br i1 %643, label %720, label %644

644:                                              ; preds = %633
  %645 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %646 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %647 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %734

648:                                              ; preds = %557, %707
  %649 = phi i64 [ %548, %557 ], [ %709, %707 ]
  %650 = phi %"class.spvtools::opt::Instruction"** [ %549, %557 ], [ %708, %707 ]
  %651 = phi i64 [ %554, %557 ], [ %713, %707 ]
  %652 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %653 = icmp ult %"class.spvtools::opt::Instruction"** %650, %652
  %654 = ptrtoint %"class.spvtools::opt::Instruction"** %652 to i64
  br i1 %653, label %655, label %659

655:                                              ; preds = %648
  %656 = bitcast %"class.spvtools::opt::Instruction"** %650 to i64*
  store i64 %651, i64* %656, align 8
  %657 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %650, i64 1
  %658 = ptrtoint %"class.spvtools::opt::Instruction"** %657 to i64
  store i64 %658, i64* %558, align 8
  br label %707

659:                                              ; preds = %648
  %660 = ptrtoint %"class.spvtools::opt::Instruction"** %650 to i64
  %661 = load i64, i64* %559, align 8
  %662 = sub i64 %660, %661
  %663 = ashr exact i64 %662, 3
  %664 = add nsw i64 %663, 1
  %665 = icmp ugt i64 %664, 2305843009213693951
  br i1 %665, label %666, label %668

666:                                              ; preds = %659
  %667 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %667) #13
  unreachable

668:                                              ; preds = %659
  %669 = sub i64 %654, %661
  %670 = ashr exact i64 %669, 3
  %671 = icmp ult i64 %670, 1152921504606846975
  br i1 %671, label %672, label %680

672:                                              ; preds = %668
  %673 = ashr exact i64 %669, 2
  %674 = icmp ult i64 %673, %664
  %675 = select i1 %674, i64 %664, i64 %673
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %685, label %677

677:                                              ; preds = %672
  %678 = icmp ugt i64 %675, 2305843009213693951
  br i1 %678, label %679, label %680

679:                                              ; preds = %677
  tail call void @abort() #13
  unreachable

680:                                              ; preds = %677, %668
  %681 = phi i64 [ %675, %677 ], [ 2305843009213693951, %668 ]
  %682 = shl i64 %681, 3
  %683 = tail call i8* @_Znwm(i64 %682) #14
  %684 = bitcast i8* %683 to %"class.spvtools::opt::Instruction"**
  br label %685

685:                                              ; preds = %680, %672
  %686 = phi i64 [ %681, %680 ], [ 0, %672 ]
  %687 = phi %"class.spvtools::opt::Instruction"** [ %684, %680 ], [ null, %672 ]
  %688 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %687, i64 %663
  %689 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %687, i64 %686
  %690 = ptrtoint %"class.spvtools::opt::Instruction"** %689 to i64
  %691 = bitcast %"class.spvtools::opt::Instruction"** %688 to i64*
  store i64 %651, i64* %691, align 8
  %692 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %688, i64 1
  %693 = ptrtoint %"class.spvtools::opt::Instruction"** %692 to i64
  %694 = sub i64 %649, %661
  %695 = ashr exact i64 %694, 3
  %696 = sub nsw i64 0, %695
  %697 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %688, i64 %696
  %698 = ptrtoint %"class.spvtools::opt::Instruction"** %697 to i64
  %699 = icmp sgt i64 %694, 0
  br i1 %699, label %700, label %703

700:                                              ; preds = %685
  %701 = bitcast %"class.spvtools::opt::Instruction"** %697 to i8*
  %702 = inttoptr i64 %661 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %701, i8* align 8 %702, i64 %694, i1 false) #12
  br label %703

703:                                              ; preds = %700, %685
  store i64 %698, i64* %559, align 8
  store i64 %693, i64* %558, align 8
  store i64 %690, i64* %560, align 8
  %704 = icmp eq i64 %661, 0
  br i1 %704, label %707, label %705

705:                                              ; preds = %703
  %706 = inttoptr i64 %661 to i8*
  tail call void @_ZdlPv(i8* %706) #14
  br label %707

707:                                              ; preds = %655, %703, %705
  %708 = phi %"class.spvtools::opt::Instruction"** [ %657, %655 ], [ %692, %703 ], [ %692, %705 ]
  %709 = phi i64 [ %658, %655 ], [ %693, %703 ], [ %693, %705 ]
  %710 = inttoptr i64 %651 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %711 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %710, i64 0, i32 1
  %712 = bitcast %"class.spvtools::opt::Instruction"** %711 to i64*
  %713 = load i64, i64* %712, align 8
  %714 = inttoptr i64 %713 to %"class.spvtools::opt::Instruction"*
  %715 = icmp eq %"class.spvtools::opt::Instruction"* %552, %714
  br i1 %715, label %629, label %648

716:                                              ; preds = %793
  %717 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %718 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %717, i64 0, i32 4, i32 0, i32 0, i32 0
  %719 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %718, align 8, !noalias !12
  br label %720

720:                                              ; preds = %716, %633
  %721 = phi i64 [ %795, %716 ], [ %635, %633 ]
  %722 = phi %"class.spvtools::opt::Instruction"** [ %794, %716 ], [ %634, %633 ]
  %723 = phi %"class.spvtools::opt::Module"* [ %719, %716 ], [ %637, %633 ]
  %724 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %723, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  %725 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %723, i64 0, i32 12, i32 0, i32 1
  %726 = bitcast %"class.spvtools::opt::Instruction"** %724 to i64*
  %727 = load i64, i64* %726, align 8
  %728 = inttoptr i64 %727 to %"class.spvtools::opt::Instruction"*
  %729 = icmp eq %"class.spvtools::opt::Instruction"* %725, %728
  br i1 %729, label %806, label %730

730:                                              ; preds = %720
  %731 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %732 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %733 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %828

734:                                              ; preds = %644, %793
  %735 = phi i64 [ %635, %644 ], [ %795, %793 ]
  %736 = phi %"class.spvtools::opt::Instruction"** [ %636, %644 ], [ %794, %793 ]
  %737 = phi i64 [ %641, %644 ], [ %799, %793 ]
  %738 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %739 = icmp ult %"class.spvtools::opt::Instruction"** %736, %738
  %740 = ptrtoint %"class.spvtools::opt::Instruction"** %738 to i64
  br i1 %739, label %741, label %745

741:                                              ; preds = %734
  %742 = bitcast %"class.spvtools::opt::Instruction"** %736 to i64*
  store i64 %737, i64* %742, align 8
  %743 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %736, i64 1
  %744 = ptrtoint %"class.spvtools::opt::Instruction"** %743 to i64
  store i64 %744, i64* %645, align 8
  br label %793

745:                                              ; preds = %734
  %746 = ptrtoint %"class.spvtools::opt::Instruction"** %736 to i64
  %747 = load i64, i64* %646, align 8
  %748 = sub i64 %746, %747
  %749 = ashr exact i64 %748, 3
  %750 = add nsw i64 %749, 1
  %751 = icmp ugt i64 %750, 2305843009213693951
  br i1 %751, label %752, label %754

752:                                              ; preds = %745
  %753 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %753) #13
  unreachable

754:                                              ; preds = %745
  %755 = sub i64 %740, %747
  %756 = ashr exact i64 %755, 3
  %757 = icmp ult i64 %756, 1152921504606846975
  br i1 %757, label %758, label %766

758:                                              ; preds = %754
  %759 = ashr exact i64 %755, 2
  %760 = icmp ult i64 %759, %750
  %761 = select i1 %760, i64 %750, i64 %759
  %762 = icmp eq i64 %761, 0
  br i1 %762, label %771, label %763

763:                                              ; preds = %758
  %764 = icmp ugt i64 %761, 2305843009213693951
  br i1 %764, label %765, label %766

765:                                              ; preds = %763
  tail call void @abort() #13
  unreachable

766:                                              ; preds = %763, %754
  %767 = phi i64 [ %761, %763 ], [ 2305843009213693951, %754 ]
  %768 = shl i64 %767, 3
  %769 = tail call i8* @_Znwm(i64 %768) #14
  %770 = bitcast i8* %769 to %"class.spvtools::opt::Instruction"**
  br label %771

771:                                              ; preds = %766, %758
  %772 = phi i64 [ %767, %766 ], [ 0, %758 ]
  %773 = phi %"class.spvtools::opt::Instruction"** [ %770, %766 ], [ null, %758 ]
  %774 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %773, i64 %749
  %775 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %773, i64 %772
  %776 = ptrtoint %"class.spvtools::opt::Instruction"** %775 to i64
  %777 = bitcast %"class.spvtools::opt::Instruction"** %774 to i64*
  store i64 %737, i64* %777, align 8
  %778 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %774, i64 1
  %779 = ptrtoint %"class.spvtools::opt::Instruction"** %778 to i64
  %780 = sub i64 %735, %747
  %781 = ashr exact i64 %780, 3
  %782 = sub nsw i64 0, %781
  %783 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %774, i64 %782
  %784 = ptrtoint %"class.spvtools::opt::Instruction"** %783 to i64
  %785 = icmp sgt i64 %780, 0
  br i1 %785, label %786, label %789

786:                                              ; preds = %771
  %787 = bitcast %"class.spvtools::opt::Instruction"** %783 to i8*
  %788 = inttoptr i64 %747 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %787, i8* align 8 %788, i64 %780, i1 false) #12
  br label %789

789:                                              ; preds = %786, %771
  store i64 %784, i64* %646, align 8
  store i64 %779, i64* %645, align 8
  store i64 %776, i64* %647, align 8
  %790 = icmp eq i64 %747, 0
  br i1 %790, label %793, label %791

791:                                              ; preds = %789
  %792 = inttoptr i64 %747 to i8*
  tail call void @_ZdlPv(i8* %792) #14
  br label %793

793:                                              ; preds = %741, %789, %791
  %794 = phi %"class.spvtools::opt::Instruction"** [ %743, %741 ], [ %778, %789 ], [ %778, %791 ]
  %795 = phi i64 [ %744, %741 ], [ %779, %789 ], [ %779, %791 ]
  %796 = inttoptr i64 %737 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %797 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %796, i64 0, i32 1
  %798 = bitcast %"class.spvtools::opt::Instruction"** %797 to i64*
  %799 = load i64, i64* %798, align 8
  %800 = inttoptr i64 %799 to %"class.spvtools::opt::Instruction"*
  %801 = icmp eq %"class.spvtools::opt::Instruction"* %639, %800
  br i1 %801, label %716, label %734

802:                                              ; preds = %887
  %803 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %804 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %803, i64 0, i32 4, i32 0, i32 0, i32 0
  %805 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %804, align 8
  br label %806

806:                                              ; preds = %802, %720
  %807 = phi %"class.spvtools::opt::Module"* [ %805, %802 ], [ %723, %720 ]
  %808 = bitcast %"class.std::__1::unordered_set.917"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %808) #12
  %809 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %810 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %811 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %812 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 4, i64 0
  %813 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 3
  %814 = bitcast %"class.std::__1::__compressed_pair.936"* %813 to i32*
  %815 = bitcast i8* %812 to i32*
  store i32 -1431655766, i32* %815, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %808, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %814, align 8
  %816 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %807, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %817 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %807, i64 0, i32 5, i32 0, i32 1
  %818 = bitcast %"class.spvtools::opt::Instruction"** %816 to i64*
  %819 = load i64, i64* %818, align 8
  %820 = inttoptr i64 %819 to %"class.spvtools::opt::Instruction"*
  %821 = icmp eq %"class.spvtools::opt::Instruction"* %817, %820
  br i1 %821, label %1008, label %822

822:                                              ; preds = %806
  %823 = bitcast i32* %4 to i8*
  %824 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0
  %825 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %826 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %827 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %899

828:                                              ; preds = %730, %887
  %829 = phi i64 [ %721, %730 ], [ %888, %887 ]
  %830 = phi %"class.spvtools::opt::Instruction"** [ %722, %730 ], [ %889, %887 ]
  %831 = phi i64 [ %727, %730 ], [ %893, %887 ]
  %832 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %833 = icmp ult %"class.spvtools::opt::Instruction"** %830, %832
  %834 = ptrtoint %"class.spvtools::opt::Instruction"** %832 to i64
  br i1 %833, label %835, label %839

835:                                              ; preds = %828
  %836 = bitcast %"class.spvtools::opt::Instruction"** %830 to i64*
  store i64 %831, i64* %836, align 8
  %837 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %830, i64 1
  %838 = ptrtoint %"class.spvtools::opt::Instruction"** %837 to i64
  store i64 %838, i64* %731, align 8
  br label %887

839:                                              ; preds = %828
  %840 = ptrtoint %"class.spvtools::opt::Instruction"** %830 to i64
  %841 = load i64, i64* %732, align 8
  %842 = sub i64 %840, %841
  %843 = ashr exact i64 %842, 3
  %844 = add nsw i64 %843, 1
  %845 = icmp ugt i64 %844, 2305843009213693951
  br i1 %845, label %846, label %848

846:                                              ; preds = %839
  %847 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %847) #13
  unreachable

848:                                              ; preds = %839
  %849 = sub i64 %834, %841
  %850 = ashr exact i64 %849, 3
  %851 = icmp ult i64 %850, 1152921504606846975
  br i1 %851, label %852, label %860

852:                                              ; preds = %848
  %853 = ashr exact i64 %849, 2
  %854 = icmp ult i64 %853, %844
  %855 = select i1 %854, i64 %844, i64 %853
  %856 = icmp eq i64 %855, 0
  br i1 %856, label %865, label %857

857:                                              ; preds = %852
  %858 = icmp ugt i64 %855, 2305843009213693951
  br i1 %858, label %859, label %860

859:                                              ; preds = %857
  tail call void @abort() #13
  unreachable

860:                                              ; preds = %857, %848
  %861 = phi i64 [ %855, %857 ], [ 2305843009213693951, %848 ]
  %862 = shl i64 %861, 3
  %863 = tail call i8* @_Znwm(i64 %862) #14
  %864 = bitcast i8* %863 to %"class.spvtools::opt::Instruction"**
  br label %865

865:                                              ; preds = %860, %852
  %866 = phi i64 [ %861, %860 ], [ 0, %852 ]
  %867 = phi %"class.spvtools::opt::Instruction"** [ %864, %860 ], [ null, %852 ]
  %868 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %867, i64 %843
  %869 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %867, i64 %866
  %870 = ptrtoint %"class.spvtools::opt::Instruction"** %869 to i64
  %871 = bitcast %"class.spvtools::opt::Instruction"** %868 to i64*
  store i64 %831, i64* %871, align 8
  %872 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %868, i64 1
  %873 = ptrtoint %"class.spvtools::opt::Instruction"** %872 to i64
  %874 = sub i64 %829, %841
  %875 = ashr exact i64 %874, 3
  %876 = sub nsw i64 0, %875
  %877 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %868, i64 %876
  %878 = ptrtoint %"class.spvtools::opt::Instruction"** %877 to i64
  %879 = icmp sgt i64 %874, 0
  br i1 %879, label %880, label %883

880:                                              ; preds = %865
  %881 = bitcast %"class.spvtools::opt::Instruction"** %877 to i8*
  %882 = inttoptr i64 %841 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %881, i8* align 8 %882, i64 %874, i1 false) #12
  br label %883

883:                                              ; preds = %880, %865
  store i64 %878, i64* %732, align 8
  store i64 %873, i64* %731, align 8
  store i64 %870, i64* %733, align 8
  %884 = icmp eq i64 %841, 0
  br i1 %884, label %887, label %885

885:                                              ; preds = %883
  %886 = inttoptr i64 %841 to i8*
  tail call void @_ZdlPv(i8* %886) #14
  br label %887

887:                                              ; preds = %835, %883, %885
  %888 = phi i64 [ %838, %835 ], [ %873, %883 ], [ %873, %885 ]
  %889 = phi %"class.spvtools::opt::Instruction"** [ %837, %835 ], [ %872, %883 ], [ %872, %885 ]
  %890 = inttoptr i64 %831 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %891 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %890, i64 0, i32 1
  %892 = bitcast %"class.spvtools::opt::Instruction"** %891 to i64*
  %893 = load i64, i64* %892, align 8
  %894 = inttoptr i64 %893 to %"class.spvtools::opt::Instruction"*
  %895 = icmp eq %"class.spvtools::opt::Instruction"* %725, %894
  br i1 %895, label %802, label %828

896:                                              ; preds = %983
  %897 = load i64, i64* %811, align 8
  %898 = icmp eq i64 %897, 0
  br i1 %898, label %1008, label %990

899:                                              ; preds = %822, %983
  %900 = phi %"class.spvtools::opt::Instruction"* [ %820, %822 ], [ %988, %983 ]
  %901 = phi i64 [ %819, %822 ], [ %987, %983 ]
  %902 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %900, i64 0, i32 3
  %903 = load i8, i8* %902, align 4, !range !2
  %904 = icmp eq i8 %903, 0
  %905 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %900, i64 0, i32 4
  %906 = load i8, i8* %905, align 1, !range !2
  %907 = icmp eq i8 %906, 0
  %908 = select i1 %907, i64 1, i64 2
  %909 = xor i1 %907, true
  %910 = zext i1 %909 to i64
  %911 = select i1 %904, i64 %910, i64 %908
  %912 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %900, i64 0, i32 6, i32 0, i32 0
  %913 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %912, align 8
  %914 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %913, i64 %911, i32 1, i32 4, i32 0, i32 0, i32 0
  %915 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %914, align 8
  %916 = icmp eq %"class.std::__1::vector.3"* %915, null
  %917 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %915, i64 0, i32 0, i32 0
  %918 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %913, i64 %911, i32 1, i32 2
  %919 = select i1 %916, i32** %918, i32** %917
  %920 = bitcast i32** %919 to i8**
  %921 = load i8*, i8** %920, align 8
  %922 = call i32 @strncmp(i8* %921, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12) #15
  %923 = icmp eq i32 %922, 0
  br i1 %923, label %924, label %983

924:                                              ; preds = %899
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %823) #12
  br i1 %907, label %928, label %925

925:                                              ; preds = %924
  %926 = zext i8 %903 to i32
  %927 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %900, i32 %926) #12
  br label %928

928:                                              ; preds = %924, %925
  %929 = phi i32 [ %927, %925 ], [ 0, %924 ]
  store i32 %929, i32* %4, align 4
  %930 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* nonnull %824, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %823) #12
  %931 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %8, align 8
  %932 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %933 = icmp ult %"class.spvtools::opt::Instruction"** %931, %932
  %934 = ptrtoint %"class.spvtools::opt::Instruction"** %932 to i64
  br i1 %933, label %935, label %939

935:                                              ; preds = %928
  %936 = bitcast %"class.spvtools::opt::Instruction"** %931 to i64*
  store i64 %901, i64* %936, align 8
  %937 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %931, i64 1
  %938 = ptrtoint %"class.spvtools::opt::Instruction"** %937 to i64
  store i64 %938, i64* %825, align 8
  br label %983

939:                                              ; preds = %928
  %940 = ptrtoint %"class.spvtools::opt::Instruction"** %931 to i64
  %941 = load i64, i64* %826, align 8
  %942 = sub i64 %940, %941
  %943 = ashr exact i64 %942, 3
  %944 = add nsw i64 %943, 1
  %945 = icmp ugt i64 %944, 2305843009213693951
  br i1 %945, label %946, label %948

946:                                              ; preds = %939
  %947 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %947) #13
  unreachable

948:                                              ; preds = %939
  %949 = sub i64 %934, %941
  %950 = ashr exact i64 %949, 3
  %951 = icmp ult i64 %950, 1152921504606846975
  br i1 %951, label %952, label %960

952:                                              ; preds = %948
  %953 = ashr exact i64 %949, 2
  %954 = icmp ult i64 %953, %944
  %955 = select i1 %954, i64 %944, i64 %953
  %956 = icmp eq i64 %955, 0
  br i1 %956, label %965, label %957

957:                                              ; preds = %952
  %958 = icmp ugt i64 %955, 2305843009213693951
  br i1 %958, label %959, label %960

959:                                              ; preds = %957
  call void @abort() #13
  unreachable

960:                                              ; preds = %957, %948
  %961 = phi i64 [ %955, %957 ], [ 2305843009213693951, %948 ]
  %962 = shl i64 %961, 3
  %963 = call i8* @_Znwm(i64 %962) #14
  %964 = bitcast i8* %963 to %"class.spvtools::opt::Instruction"**
  br label %965

965:                                              ; preds = %960, %952
  %966 = phi i64 [ %961, %960 ], [ 0, %952 ]
  %967 = phi i8* [ %963, %960 ], [ null, %952 ]
  %968 = phi %"class.spvtools::opt::Instruction"** [ %964, %960 ], [ null, %952 ]
  %969 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %968, i64 %943
  %970 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %968, i64 %966
  %971 = ptrtoint %"class.spvtools::opt::Instruction"** %970 to i64
  %972 = bitcast %"class.spvtools::opt::Instruction"** %969 to i64*
  store i64 %901, i64* %972, align 8
  %973 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %969, i64 1
  %974 = ptrtoint %"class.spvtools::opt::Instruction"** %973 to i64
  %975 = ptrtoint %"class.spvtools::opt::Instruction"** %968 to i64
  %976 = icmp sgt i64 %942, 0
  br i1 %976, label %977, label %979

977:                                              ; preds = %965
  %978 = inttoptr i64 %941 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %967, i8* align 8 %978, i64 %942, i1 false) #12
  br label %979

979:                                              ; preds = %977, %965
  store i64 %975, i64* %826, align 8
  store i64 %974, i64* %825, align 8
  store i64 %971, i64* %827, align 8
  %980 = icmp eq i64 %941, 0
  br i1 %980, label %983, label %981

981:                                              ; preds = %979
  %982 = inttoptr i64 %941 to i8*
  call void @_ZdlPv(i8* %982) #14
  br label %983

983:                                              ; preds = %981, %979, %935, %899
  %984 = inttoptr i64 %901 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %985 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %984, i64 0, i32 1
  %986 = bitcast %"class.spvtools::opt::Instruction"** %985 to i64*
  %987 = load i64, i64* %986, align 8
  %988 = inttoptr i64 %987 to %"class.spvtools::opt::Instruction"*
  %989 = icmp eq %"class.spvtools::opt::Instruction"* %817, %988
  br i1 %989, label %896, label %899

990:                                              ; preds = %896
  %991 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %992 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %991, i64 0, i32 4, i32 0, i32 0, i32 0
  %993 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %992, align 8
  %994 = bitcast %"class.std::__1::function.939"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %994) #12
  %995 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 1, i32 0
  %996 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_20StripReflectInfoPass7ProcessEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %995, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %996, align 8
  %997 = bitcast %"class.std::__1::function.939"* %5 to %"class.std::__1::unordered_set.917"**
  store %"class.std::__1::unordered_set.917"* %3, %"class.std::__1::unordered_set.917"** %997, align 8
  %998 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 0, i32 1
  %999 = bitcast [8 x i8]* %998 to %"class.std::__1::vector.910"**
  store %"class.std::__1::vector.910"* %2, %"class.std::__1::vector.910"** %999, align 8
  call void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"* %993, %"class.std::__1::function.939"* nonnull dereferenceable(32) %5, i1 zeroext false) #12
  %1000 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %996, align 8
  %1001 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1000, i64 0, i32 1
  %1002 = load void (i8*)*, void (i8*)** %1001, align 8
  %1003 = icmp eq void (i8*)* %1002, null
  br i1 %1003, label %1007, label %1004

1004:                                             ; preds = %990
  %1005 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 0, i32 0
  %1006 = load i8*, i8** %1005, align 8
  call void %1002(i8* %1006) #12
  br label %1007

1007:                                             ; preds = %990, %1004
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %994) #12
  br label %1008

1008:                                             ; preds = %806, %1007, %896
  %1009 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %1010 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %8, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"** %1009, %"class.spvtools::opt::Instruction"** %1010) #12
  %1011 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %1012 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %8, align 8
  %1013 = icmp eq %"class.spvtools::opt::Instruction"** %1011, %1012
  br i1 %1013, label %1014, label %1037

1014:                                             ; preds = %1037, %1008
  %1015 = phi i32 [ 17, %1008 ], [ 16, %1037 ]
  %1016 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %810, align 8
  %1017 = icmp eq %"struct.std::__1::__hash_node_base.922"* %1016, null
  br i1 %1017, label %1024, label %1018

1018:                                             ; preds = %1014, %1018
  %1019 = phi %"struct.std::__1::__hash_node_base.922"* [ %1021, %1018 ], [ %1016, %1014 ]
  %1020 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %1019, i64 0, i32 0
  %1021 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1020, align 8
  %1022 = bitcast %"struct.std::__1::__hash_node_base.922"* %1019 to i8*
  call void @_ZdlPv(i8* %1022) #14
  %1023 = icmp eq %"struct.std::__1::__hash_node_base.922"* %1021, null
  br i1 %1023, label %1024, label %1018

1024:                                             ; preds = %1018, %1014
  %1025 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %809, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %809, align 8
  %1026 = icmp eq %"struct.std::__1::__hash_node_base.922"** %1025, null
  br i1 %1026, label %1029, label %1027

1027:                                             ; preds = %1024
  %1028 = bitcast %"struct.std::__1::__hash_node_base.922"** %1025 to i8*
  call void @_ZdlPv(i8* %1028) #14
  br label %1029

1029:                                             ; preds = %1024, %1027
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %808) #12
  %1030 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %1031 = icmp eq %"class.spvtools::opt::Instruction"** %1030, null
  br i1 %1031, label %1036, label %1032

1032:                                             ; preds = %1029
  %1033 = ptrtoint %"class.spvtools::opt::Instruction"** %1030 to i64
  %1034 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  store i64 %1033, i64* %1034, align 8
  %1035 = bitcast %"class.spvtools::opt::Instruction"** %1030 to i8*
  call void @_ZdlPv(i8* %1035) #14
  br label %1036

1036:                                             ; preds = %1029, %1032
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret i32 %1015

1037:                                             ; preds = %1008, %1037
  %1038 = phi %"class.spvtools::opt::Instruction"** [ %1042, %1037 ], [ %1011, %1008 ]
  %1039 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1038, align 8
  %1040 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %1041 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1040, %"class.spvtools::opt::Instruction"* %1039) #12
  %1042 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1038, i64 1
  %1043 = icmp eq %"class.spvtools::opt::Instruction"** %1042, %1012
  br i1 %1043, label %1014, label %1037
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

declare void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"*, %"class.std::__1::function.939"* dereferenceable(32), i1 zeroext) local_unnamed_addr #3

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt20StripReflectInfoPassD0Ev(%"class.spvtools::opt::StripReflectInfoPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::StripReflectInfoPass", %"class.spvtools::opt::StripReflectInfoPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::StripReflectInfoPass", %"class.spvtools::opt::StripReflectInfoPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::StripReflectInfoPass", %"class.spvtools::opt::StripReflectInfoPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::StripReflectInfoPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt20StripReflectInfoPass4nameEv(%"class.spvtools::opt::StripReflectInfoPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt20StripReflectInfoPass20GetPreservedAnalysesEv(%"class.spvtools::opt::StripReflectInfoPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 49402
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !15
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #14, !noalias !16
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !16
  store i32 %58, i32* %57, align 4, !noalias !16
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !16
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"**
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8, !noalias !16
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !15
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #12
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #12, !range !15
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.922"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.922"* %104, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.922"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #12, !range !15
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.922"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } undef, %"struct.std::__1::__hash_node_base.922"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.922"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.918"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.922"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.922"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !19

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.922"* %36, %"struct.std::__1::__hash_node_base.922"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.922"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.922"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.922"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.922"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.922"* %82, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.922"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.922"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.922"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.922"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.922"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.922"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.922"* %80, %"struct.std::__1::__hash_node_base.922"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.922"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.922"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.922"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.922"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_20StripReflectInfoPass7ProcessEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %7, label %145

7:                                                ; preds = %2
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unordered_set.917"**
  %9 = load %"class.std::__1::unordered_set.917"*, %"class.std::__1::unordered_set.917"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 1, i32 2
  %17 = xor i1 %15, true
  %18 = zext i1 %17 to i32
  %19 = select i1 %12, i32 %18, i32 %16
  %20 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %19) #12
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %145, label %25

25:                                               ; preds = %7
  %26 = tail call i64 @llvm.ctpop.i64(i64 %23) #12, !range !15
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, 4294967295
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ugt i64 %23, %21
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %33, %31, %28
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.922"* %40, null
  br i1 %41, label %145, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.922"* %44, null
  br i1 %45, label %145, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  br label %48

48:                                               ; preds = %69, %46
  %49 = phi %"struct.std::__1::__hash_node_base.922"* [ %44, %46 ], [ %71, %69 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %49, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.922"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %21
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %47
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %23
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %23
  br label %61

61:                                               ; preds = %59, %57, %55
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %69, label %145

64:                                               ; preds = %48
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %49, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.922"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %20
  br i1 %68, label %73, label %69

69:                                               ; preds = %64, %61
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %49, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.922"* %71, null
  br i1 %72, label %145, label %48

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %75 = bitcast [8 x i8]* %74 to %"class.std::__1::vector.910"**
  %76 = load %"class.std::__1::vector.910"*, %"class.std::__1::vector.910"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %76, i64 0, i32 0, i32 1
  %78 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %76, i64 0, i32 0, i32 2, i32 0, i32 0
  %80 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %79, align 8
  %81 = icmp eq %"class.spvtools::opt::Instruction"** %78, %80
  %82 = ptrtoint %"class.spvtools::opt::Instruction"** %80 to i64
  br i1 %81, label %88, label %83

83:                                               ; preds = %73
  %84 = bitcast %"class.spvtools::opt::Instruction"** %78 to i64*
  store i64 %3, i64* %84, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %78, i64 1
  %86 = ptrtoint %"class.spvtools::opt::Instruction"** %85 to i64
  %87 = bitcast %"class.spvtools::opt::Instruction"*** %77 to i64*
  store i64 %86, i64* %87, align 8
  br label %145

88:                                               ; preds = %73
  %89 = ptrtoint %"class.spvtools::opt::Instruction"** %78 to i64
  %90 = bitcast %"class.spvtools::opt::Instruction"*** %77 to i64*
  %91 = bitcast %"class.std::__1::vector.910"* %76 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %89, %92
  %94 = ashr exact i64 %93, 3
  %95 = add nsw i64 %94, 1
  %96 = icmp ugt i64 %95, 2305843009213693951
  br i1 %96, label %97, label %99

97:                                               ; preds = %88
  %98 = bitcast %"class.std::__1::vector.910"* %76 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #13
  unreachable

99:                                               ; preds = %88
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %79 to i64*
  %101 = sub i64 %82, %92
  %102 = ashr exact i64 %101, 3
  %103 = icmp ult i64 %102, 1152921504606846975
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = ashr exact i64 %101, 2
  %106 = icmp ult i64 %105, %95
  %107 = select i1 %106, i64 %95, i64 %105
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %104
  %110 = icmp ugt i64 %107, 2305843009213693951
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  tail call void @abort() #13
  unreachable

112:                                              ; preds = %109, %99
  %113 = phi i64 [ %107, %109 ], [ 2305843009213693951, %99 ]
  %114 = shl i64 %113, 3
  %115 = tail call i8* @_Znwm(i64 %114) #14
  %116 = bitcast i8* %115 to %"class.spvtools::opt::Instruction"**
  br label %117

117:                                              ; preds = %112, %104
  %118 = phi i64 [ %113, %112 ], [ 0, %104 ]
  %119 = phi %"class.spvtools::opt::Instruction"** [ %116, %112 ], [ null, %104 ]
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %119, i64 %94
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %119, i64 %118
  %122 = ptrtoint %"class.spvtools::opt::Instruction"** %121 to i64
  %123 = bitcast %"class.spvtools::opt::Instruction"** %120 to i64*
  store i64 %3, i64* %123, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %120, i64 1
  %125 = ptrtoint %"class.spvtools::opt::Instruction"** %124 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %76, i64 0, i32 0, i32 0
  %127 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %126, align 8
  %128 = load i64, i64* %90, align 8
  %129 = ptrtoint %"class.spvtools::opt::Instruction"** %127 to i64
  %130 = sub i64 %128, %129
  %131 = ashr exact i64 %130, 3
  %132 = sub nsw i64 0, %131
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %120, i64 %132
  %134 = ptrtoint %"class.spvtools::opt::Instruction"** %133 to i64
  %135 = icmp sgt i64 %130, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %117
  %137 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  %138 = bitcast %"class.spvtools::opt::Instruction"** %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 %130, i1 false) #12
  %139 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %126, align 8
  br label %140

140:                                              ; preds = %136, %117
  %141 = phi %"class.spvtools::opt::Instruction"** [ %127, %117 ], [ %139, %136 ]
  store i64 %134, i64* %91, align 8
  store i64 %125, i64* %90, align 8
  store i64 %122, i64* %100, align 8
  %142 = icmp eq %"class.spvtools::opt::Instruction"** %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %140
  %144 = bitcast %"class.spvtools::opt::Instruction"** %141 to i8*
  tail call void @_ZdlPv(i8* %144) #14
  br label %145

145:                                              ; preds = %61, %69, %2, %7, %35, %42, %83, %140, %143
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %514, %2
  %4 = phi %"class.spvtools::opt::Instruction"** [ %1, %2 ], [ %488, %514 ]
  %5 = phi %"class.spvtools::opt::Instruction"** [ %0, %2 ], [ %17, %514 ]
  %6 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %8 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %9 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %10 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -2
  %12 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %13 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  br label %14

14:                                               ; preds = %523, %3
  %15 = phi %"class.spvtools::opt::Instruction"** [ %5, %3 ], [ %524, %523 ]
  br label %16

16:                                               ; preds = %407, %14
  %17 = phi %"class.spvtools::opt::Instruction"** [ %15, %14 ], [ %390, %407 ]
  %18 = ptrtoint %"class.spvtools::opt::Instruction"** %17 to i64
  %19 = sub i64 %6, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %144 [
    i64 0, label %527
    i64 1, label %527
    i64 2, label %21
    i64 3, label %37
    i64 4, label %86
    i64 5, label %91
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %23 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 5
  %27 = ptrtoint %"class.spvtools::opt::Instruction"* %23 to i64
  br i1 %26, label %28, label %527

28:                                               ; preds = %21
  %29 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 5
  br i1 %32, label %527, label %33

33:                                               ; preds = %28
  %34 = ptrtoint %"class.spvtools::opt::Instruction"* %29 to i64
  %35 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %36 = bitcast %"class.spvtools::opt::Instruction"** %22 to i64*
  store i64 %27, i64* %35, align 8
  store i64 %34, i64* %36, align 8
  br label %527

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 5
  %44 = ptrtoint %"class.spvtools::opt::Instruction"* %40 to i64
  br i1 %43, label %45, label %51

45:                                               ; preds = %37
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 5
  %50 = ptrtoint %"class.spvtools::opt::Instruction"* %46 to i64
  br i1 %49, label %527, label %73

51:                                               ; preds = %37
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 5
  br i1 %55, label %56, label %527

56:                                               ; preds = %51
  %57 = ptrtoint %"class.spvtools::opt::Instruction"* %52 to i64
  %58 = bitcast %"class.spvtools::opt::Instruction"** %38 to i64*
  %59 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  store i64 %57, i64* %58, align 8
  store i64 %44, i64* %59, align 8
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 5
  %64 = ptrtoint %"class.spvtools::opt::Instruction"* %60 to i64
  br i1 %63, label %65, label %527

65:                                               ; preds = %56
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %66, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 5
  br i1 %69, label %527, label %70

70:                                               ; preds = %65
  %71 = ptrtoint %"class.spvtools::opt::Instruction"* %66 to i64
  %72 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %64, i64* %72, align 8
  store i64 %71, i64* %58, align 8
  br label %527

73:                                               ; preds = %45
  %74 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %75 = bitcast %"class.spvtools::opt::Instruction"** %38 to i64*
  store i64 %44, i64* %74, align 8
  store i64 %50, i64* %75, align 8
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 5
  %80 = ptrtoint %"class.spvtools::opt::Instruction"* %76 to i64
  br i1 %79, label %81, label %527

81:                                               ; preds = %73
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 5
  br i1 %83, label %527, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  store i64 %80, i64* %75, align 8
  store i64 %50, i64* %85, align 8
  br label %527

86:                                               ; preds = %16
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 2
  %89 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %90 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %87, %"class.spvtools::opt::Instruction"** %88, %"class.spvtools::opt::Instruction"** %89)
  br label %527

91:                                               ; preds = %16
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 2
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 3
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %96 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %92, %"class.spvtools::opt::Instruction"** %93, %"class.spvtools::opt::Instruction"** %94) #12
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %95, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 5
  %101 = ptrtoint %"class.spvtools::opt::Instruction"* %97 to i64
  br i1 %100, label %102, label %527

102:                                              ; preds = %91
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 5
  br i1 %106, label %527, label %107

107:                                              ; preds = %102
  %108 = ptrtoint %"class.spvtools::opt::Instruction"* %103 to i64
  %109 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  %110 = bitcast %"class.spvtools::opt::Instruction"** %95 to i64*
  store i64 %101, i64* %109, align 8
  store i64 %108, i64* %110, align 8
  %111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 5
  %115 = ptrtoint %"class.spvtools::opt::Instruction"* %111 to i64
  br i1 %114, label %116, label %527

116:                                              ; preds = %107
  %117 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %93, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %117, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 5
  br i1 %120, label %527, label %121

121:                                              ; preds = %116
  %122 = ptrtoint %"class.spvtools::opt::Instruction"* %117 to i64
  %123 = bitcast %"class.spvtools::opt::Instruction"** %93 to i64*
  store i64 %115, i64* %123, align 8
  store i64 %122, i64* %109, align 8
  %124 = load i32, i32* %112, align 8
  %125 = icmp eq i32 %124, 5
  br i1 %125, label %126, label %527

126:                                              ; preds = %121
  %127 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %92, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 5
  br i1 %130, label %527, label %131

131:                                              ; preds = %126
  %132 = ptrtoint %"class.spvtools::opt::Instruction"* %127 to i64
  %133 = bitcast %"class.spvtools::opt::Instruction"** %92 to i64*
  store i64 %115, i64* %133, align 8
  store i64 %132, i64* %123, align 8
  %134 = load i32, i32* %112, align 8
  %135 = icmp eq i32 %134, 5
  br i1 %135, label %136, label %527

136:                                              ; preds = %131
  %137 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %137, i64 0, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 5
  br i1 %140, label %527, label %141

141:                                              ; preds = %136
  %142 = ptrtoint %"class.spvtools::opt::Instruction"* %137 to i64
  %143 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %115, i64* %143, align 8
  store i64 %142, i64* %133, align 8
  br label %527

144:                                              ; preds = %16
  %145 = icmp slt i64 %19, 248
  br i1 %145, label %146, label %230

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 2
  %148 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 2
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 5
  %153 = ptrtoint %"class.spvtools::opt::Instruction"* %149 to i64
  br i1 %152, label %154, label %160

154:                                              ; preds = %146
  %155 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %156 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 5
  %159 = ptrtoint %"class.spvtools::opt::Instruction"* %155 to i64
  br i1 %158, label %192, label %179

160:                                              ; preds = %146
  %161 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %147, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %161, i64 0, i32 2
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 5
  br i1 %164, label %165, label %192

165:                                              ; preds = %160
  %166 = ptrtoint %"class.spvtools::opt::Instruction"* %161 to i64
  %167 = bitcast %"class.spvtools::opt::Instruction"** %148 to i64*
  %168 = bitcast %"class.spvtools::opt::Instruction"** %147 to i64*
  store i64 %166, i64* %167, align 8
  store i64 %153, i64* %168, align 8
  %169 = load i32, i32* %162, align 8
  %170 = icmp eq i32 %169, 5
  br i1 %170, label %171, label %192

171:                                              ; preds = %165
  %172 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 2
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, 5
  br i1 %175, label %192, label %176

176:                                              ; preds = %171
  %177 = ptrtoint %"class.spvtools::opt::Instruction"* %172 to i64
  %178 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %166, i64* %178, align 8
  store i64 %177, i64* %167, align 8
  br label %192

179:                                              ; preds = %154
  %180 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %181 = bitcast %"class.spvtools::opt::Instruction"** %148 to i64*
  store i64 %153, i64* %180, align 8
  store i64 %159, i64* %181, align 8
  %182 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %147, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %182, i64 0, i32 2
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 5
  %186 = ptrtoint %"class.spvtools::opt::Instruction"* %182 to i64
  br i1 %185, label %187, label %192

187:                                              ; preds = %179
  %188 = load i32, i32* %156, align 8
  %189 = icmp eq i32 %188, 5
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = bitcast %"class.spvtools::opt::Instruction"** %147 to i64*
  store i64 %186, i64* %181, align 8
  store i64 %159, i64* %191, align 8
  br label %192

192:                                              ; preds = %190, %187, %179, %176, %171, %165, %160, %154
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 3
  %194 = icmp eq %"class.spvtools::opt::Instruction"** %193, %4
  br i1 %194, label %527, label %195

195:                                              ; preds = %192, %227
  %196 = phi %"class.spvtools::opt::Instruction"** [ %228, %227 ], [ %193, %192 ]
  %197 = phi %"class.spvtools::opt::Instruction"** [ %196, %227 ], [ %147, %192 ]
  %198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %196, align 8
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 2
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 5
  %202 = ptrtoint %"class.spvtools::opt::Instruction"* %198 to i64
  br i1 %201, label %203, label %227

203:                                              ; preds = %195
  %204 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %197, align 8
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %204, i64 0, i32 2
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, 5
  br i1 %207, label %227, label %208

208:                                              ; preds = %203, %219
  %209 = phi %"class.spvtools::opt::Instruction"** [ %210, %219 ], [ %196, %203 ]
  %210 = phi %"class.spvtools::opt::Instruction"** [ %216, %219 ], [ %197, %203 ]
  %211 = bitcast %"class.spvtools::opt::Instruction"** %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %"class.spvtools::opt::Instruction"** %209 to i64*
  store i64 %212, i64* %213, align 8
  %214 = icmp eq %"class.spvtools::opt::Instruction"** %210, %17
  br i1 %214, label %224, label %215

215:                                              ; preds = %208
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %210, i64 -1
  %217 = load i32, i32* %199, align 8
  %218 = icmp eq i32 %217, 5
  br i1 %218, label %219, label %224

219:                                              ; preds = %215
  %220 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %216, align 8
  %221 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %220, i64 0, i32 2
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 5
  br i1 %223, label %224, label %208

224:                                              ; preds = %208, %219, %215
  %225 = phi %"class.spvtools::opt::Instruction"** [ %210, %215 ], [ %210, %219 ], [ %17, %208 ]
  %226 = bitcast %"class.spvtools::opt::Instruction"** %225 to i64*
  store i64 %202, i64* %226, align 8
  br label %227

227:                                              ; preds = %224, %203, %195
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %196, i64 1
  %229 = icmp eq %"class.spvtools::opt::Instruction"** %228, %4
  br i1 %229, label %527, label %195

230:                                              ; preds = %144
  %231 = icmp sgt i64 %19, 7992
  %232 = sdiv i64 %20, 2
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 %232
  br i1 %231, label %234, label %295

234:                                              ; preds = %230
  %235 = sdiv i64 %20, 4
  %236 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 %235
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, i64 %235
  %238 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %236, %"class.spvtools::opt::Instruction"** %233, %"class.spvtools::opt::Instruction"** %237) #12
  %239 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %239, i64 0, i32 2
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 5
  %243 = ptrtoint %"class.spvtools::opt::Instruction"* %239 to i64
  br i1 %242, label %244, label %340

244:                                              ; preds = %234
  %245 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %237, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %245, i64 0, i32 2
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 5
  br i1 %248, label %340, label %249

249:                                              ; preds = %244
  %250 = ptrtoint %"class.spvtools::opt::Instruction"* %245 to i64
  %251 = bitcast %"class.spvtools::opt::Instruction"** %237 to i64*
  store i64 %243, i64* %251, align 8
  store i64 %250, i64* %10, align 8
  %252 = add i32 %238, 1
  %253 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %237, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 2
  %255 = load i32, i32* %254, align 8
  %256 = icmp eq i32 %255, 5
  %257 = ptrtoint %"class.spvtools::opt::Instruction"* %253 to i64
  br i1 %256, label %258, label %340

258:                                              ; preds = %249
  %259 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %259, i64 0, i32 2
  %261 = load i32, i32* %260, align 8
  %262 = icmp eq i32 %261, 5
  br i1 %262, label %340, label %263

263:                                              ; preds = %258
  %264 = ptrtoint %"class.spvtools::opt::Instruction"* %259 to i64
  %265 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %257, i64* %265, align 8
  store i64 %264, i64* %251, align 8
  %266 = add i32 %238, 2
  %267 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %268 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %267, i64 0, i32 2
  %269 = load i32, i32* %268, align 8
  %270 = icmp eq i32 %269, 5
  %271 = ptrtoint %"class.spvtools::opt::Instruction"* %267 to i64
  br i1 %270, label %272, label %340

272:                                              ; preds = %263
  %273 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %236, align 8
  %274 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %273, i64 0, i32 2
  %275 = load i32, i32* %274, align 8
  %276 = icmp eq i32 %275, 5
  br i1 %276, label %340, label %277

277:                                              ; preds = %272
  %278 = ptrtoint %"class.spvtools::opt::Instruction"* %273 to i64
  %279 = bitcast %"class.spvtools::opt::Instruction"** %236 to i64*
  store i64 %271, i64* %279, align 8
  store i64 %278, i64* %265, align 8
  %280 = add i32 %238, 3
  %281 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %236, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %281, i64 0, i32 2
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %283, 5
  %285 = ptrtoint %"class.spvtools::opt::Instruction"* %281 to i64
  br i1 %284, label %286, label %340

286:                                              ; preds = %277
  %287 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %288 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %287, i64 0, i32 2
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, 5
  br i1 %290, label %340, label %291

291:                                              ; preds = %286
  %292 = ptrtoint %"class.spvtools::opt::Instruction"* %287 to i64
  %293 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %285, i64* %293, align 8
  store i64 %292, i64* %279, align 8
  %294 = add i32 %238, 4
  br label %340

295:                                              ; preds = %230
  %296 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %296, i64 0, i32 2
  %298 = load i32, i32* %297, align 8
  %299 = icmp eq i32 %298, 5
  %300 = ptrtoint %"class.spvtools::opt::Instruction"* %296 to i64
  br i1 %299, label %301, label %307

301:                                              ; preds = %295
  %302 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %303 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %302, i64 0, i32 2
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 5
  %306 = ptrtoint %"class.spvtools::opt::Instruction"* %302 to i64
  br i1 %305, label %340, label %328

307:                                              ; preds = %295
  %308 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %309 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %308, i64 0, i32 2
  %310 = load i32, i32* %309, align 8
  %311 = icmp eq i32 %310, 5
  br i1 %311, label %312, label %340

312:                                              ; preds = %307
  %313 = ptrtoint %"class.spvtools::opt::Instruction"* %308 to i64
  %314 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %313, i64* %314, align 8
  store i64 %300, i64* %8, align 8
  %315 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %316 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %315, i64 0, i32 2
  %317 = load i32, i32* %316, align 8
  %318 = icmp eq i32 %317, 5
  %319 = ptrtoint %"class.spvtools::opt::Instruction"* %315 to i64
  br i1 %318, label %320, label %340

320:                                              ; preds = %312
  %321 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %322 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %321, i64 0, i32 2
  %323 = load i32, i32* %322, align 8
  %324 = icmp eq i32 %323, 5
  br i1 %324, label %340, label %325

325:                                              ; preds = %320
  %326 = ptrtoint %"class.spvtools::opt::Instruction"* %321 to i64
  %327 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %319, i64* %327, align 8
  store i64 %326, i64* %314, align 8
  br label %340

328:                                              ; preds = %301
  %329 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %330 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %300, i64* %329, align 8
  store i64 %306, i64* %330, align 8
  %331 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %331, i64 0, i32 2
  %333 = load i32, i32* %332, align 8
  %334 = icmp eq i32 %333, 5
  %335 = ptrtoint %"class.spvtools::opt::Instruction"* %331 to i64
  br i1 %334, label %336, label %340

336:                                              ; preds = %328
  %337 = load i32, i32* %303, align 8
  %338 = icmp eq i32 %337, 5
  br i1 %338, label %340, label %339

339:                                              ; preds = %336
  store i64 %335, i64* %330, align 8
  store i64 %306, i64* %9, align 8
  br label %340

340:                                              ; preds = %307, %339, %336, %328, %325, %320, %312, %301, %291, %286, %277, %272, %263, %258, %249, %244, %234
  %341 = phi i32 [ %294, %291 ], [ %238, %234 ], [ %238, %244 ], [ %252, %249 ], [ %252, %258 ], [ %266, %263 ], [ %266, %272 ], [ %280, %277 ], [ %280, %286 ], [ 0, %307 ], [ 2, %325 ], [ 2, %339 ], [ 1, %312 ], [ 1, %320 ], [ 1, %328 ], [ 1, %336 ], [ 0, %301 ]
  %342 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %343 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %344 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %342, i64 0, i32 2
  %345 = load i32, i32* %344, align 8
  %346 = icmp eq i32 %345, 5
  br i1 %346, label %347, label %351

347:                                              ; preds = %340
  %348 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %343, i64 0, i32 2
  %349 = load i32, i32* %348, align 8
  %350 = icmp eq i32 %349, 5
  br i1 %350, label %351, label %432

351:                                              ; preds = %340, %347
  %352 = icmp eq %"class.spvtools::opt::Instruction"** %17, %11
  br i1 %352, label %355, label %353

353:                                              ; preds = %351
  %354 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %343, i64 0, i32 2
  br label %414

355:                                              ; preds = %423, %351
  %356 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  br i1 %346, label %357, label %362

357:                                              ; preds = %355
  %358 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %359 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %358, i64 0, i32 2
  %360 = load i32, i32* %359, align 8
  %361 = icmp eq i32 %360, 5
  br i1 %361, label %362, label %379

362:                                              ; preds = %355, %357
  %363 = icmp eq %"class.spvtools::opt::Instruction"** %356, %7
  br i1 %363, label %527, label %364

364:                                              ; preds = %362, %376
  %365 = phi %"class.spvtools::opt::Instruction"** [ %377, %376 ], [ %356, %362 ]
  br i1 %346, label %366, label %376

366:                                              ; preds = %364
  %367 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %365, align 8
  %368 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 2
  %369 = load i32, i32* %368, align 8
  %370 = icmp eq i32 %369, 5
  br i1 %370, label %376, label %371

371:                                              ; preds = %366
  %372 = ptrtoint %"class.spvtools::opt::Instruction"* %367 to i64
  %373 = bitcast %"class.spvtools::opt::Instruction"** %365 to i64*
  %374 = load i64, i64* %12, align 8
  store i64 %374, i64* %373, align 8
  store i64 %372, i64* %12, align 8
  %375 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %365, i64 1
  br label %379

376:                                              ; preds = %366, %364
  %377 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %365, i64 1
  %378 = icmp eq %"class.spvtools::opt::Instruction"** %377, %7
  br i1 %378, label %527, label %364

379:                                              ; preds = %357, %371
  %380 = phi %"class.spvtools::opt::Instruction"** [ %375, %371 ], [ %356, %357 ]
  %381 = icmp eq %"class.spvtools::opt::Instruction"** %380, %7
  br i1 %381, label %527, label %382

382:                                              ; preds = %379, %409
  %383 = phi %"class.spvtools::opt::Instruction"** [ %413, %409 ], [ %380, %379 ]
  %384 = phi %"class.spvtools::opt::Instruction"** [ %402, %409 ], [ %7, %379 ]
  %385 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %386 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %385, i64 0, i32 2
  %387 = load i32, i32* %386, align 8
  %388 = icmp eq i32 %387, 5
  br label %389

389:                                              ; preds = %398, %382
  %390 = phi %"class.spvtools::opt::Instruction"** [ %383, %382 ], [ %399, %398 ]
  br i1 %388, label %391, label %398

391:                                              ; preds = %389
  %392 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %390, align 8
  %393 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %392, i64 0, i32 2
  %394 = load i32, i32* %393, align 8
  %395 = icmp eq i32 %394, 5
  br i1 %395, label %398, label %396

396:                                              ; preds = %391
  %397 = ptrtoint %"class.spvtools::opt::Instruction"* %392 to i64
  br label %400

398:                                              ; preds = %389, %391
  %399 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %390, i64 1
  br label %389

400:                                              ; preds = %396, %400
  %401 = phi %"class.spvtools::opt::Instruction"** [ %402, %400 ], [ %384, %396 ]
  %402 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %401, i64 -1
  %403 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %402, align 8
  %404 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %403, i64 0, i32 2
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %405, 5
  br i1 %406, label %407, label %400

407:                                              ; preds = %400
  %408 = icmp ult %"class.spvtools::opt::Instruction"** %390, %402
  br i1 %408, label %409, label %16

409:                                              ; preds = %407
  %410 = ptrtoint %"class.spvtools::opt::Instruction"* %403 to i64
  %411 = bitcast %"class.spvtools::opt::Instruction"** %390 to i64*
  %412 = bitcast %"class.spvtools::opt::Instruction"** %402 to i64*
  store i64 %410, i64* %411, align 8
  store i64 %397, i64* %412, align 8
  %413 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %390, i64 1
  br label %382

414:                                              ; preds = %353, %423
  %415 = phi %"class.spvtools::opt::Instruction"** [ %11, %353 ], [ %424, %423 ]
  %416 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %415, align 8
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %416, i64 0, i32 2
  %418 = load i32, i32* %417, align 8
  %419 = icmp eq i32 %418, 5
  br i1 %419, label %420, label %423

420:                                              ; preds = %414
  %421 = load i32, i32* %354, align 8
  %422 = icmp eq i32 %421, 5
  br i1 %422, label %423, label %426

423:                                              ; preds = %414, %420
  %424 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %415, i64 -1
  %425 = icmp eq %"class.spvtools::opt::Instruction"** %17, %424
  br i1 %425, label %355, label %414

426:                                              ; preds = %420
  %427 = ptrtoint %"class.spvtools::opt::Instruction"* %342 to i64
  %428 = ptrtoint %"class.spvtools::opt::Instruction"* %416 to i64
  %429 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %430 = bitcast %"class.spvtools::opt::Instruction"** %415 to i64*
  store i64 %428, i64* %429, align 8
  store i64 %427, i64* %430, align 8
  %431 = add i32 %341, 1
  br label %432

432:                                              ; preds = %347, %426
  %433 = phi i32 [ %431, %426 ], [ %341, %347 ]
  %434 = phi %"class.spvtools::opt::Instruction"** [ %415, %426 ], [ %7, %347 ]
  %435 = ptrtoint %"class.spvtools::opt::Instruction"** %17 to i64
  %436 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %437 = icmp ult %"class.spvtools::opt::Instruction"** %436, %434
  br i1 %437, label %438, label %485

438:                                              ; preds = %432, %476
  %439 = phi %"class.spvtools::opt::Instruction"** [ %483, %476 ], [ %233, %432 ]
  %440 = phi i32 [ %481, %476 ], [ %433, %432 ]
  %441 = phi %"class.spvtools::opt::Instruction"** [ %484, %476 ], [ %436, %432 ]
  %442 = phi %"class.spvtools::opt::Instruction"** [ %465, %476 ], [ %434, %432 ]
  %443 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %441, align 8
  %444 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %439, align 8
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %443, i64 0, i32 2
  %446 = load i32, i32* %445, align 8
  %447 = icmp eq i32 %446, 5
  br i1 %447, label %448, label %454

448:                                              ; preds = %438
  %449 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %444, i64 0, i32 2
  %450 = load i32, i32* %449, align 8
  %451 = icmp eq i32 %450, 5
  br label %452

452:                                              ; preds = %448, %457
  %453 = phi %"class.spvtools::opt::Instruction"** [ %458, %457 ], [ %441, %448 ]
  br i1 %451, label %454, label %457

454:                                              ; preds = %452, %457, %438
  %455 = phi %"class.spvtools::opt::Instruction"** [ %441, %438 ], [ %458, %457 ], [ %453, %452 ]
  %456 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %444, i64 0, i32 2
  br label %463

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %453, i64 1
  %459 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %458, align 8
  %460 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %459, i64 0, i32 2
  %461 = load i32, i32* %460, align 8
  %462 = icmp eq i32 %461, 5
  br i1 %462, label %452, label %454

463:                                              ; preds = %470, %454
  %464 = phi %"class.spvtools::opt::Instruction"** [ %442, %454 ], [ %465, %470 ]
  %465 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %464, i64 -1
  %466 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %465, align 8
  %467 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %466, i64 0, i32 2
  %468 = load i32, i32* %467, align 8
  %469 = icmp eq i32 %468, 5
  br i1 %469, label %471, label %470

470:                                              ; preds = %463, %471
  br label %463

471:                                              ; preds = %463
  %472 = load i32, i32* %456, align 8
  %473 = icmp eq i32 %472, 5
  br i1 %473, label %470, label %474

474:                                              ; preds = %471
  %475 = icmp ugt %"class.spvtools::opt::Instruction"** %455, %465
  br i1 %475, label %485, label %476

476:                                              ; preds = %474
  %477 = ptrtoint %"class.spvtools::opt::Instruction"* %466 to i64
  %478 = bitcast %"class.spvtools::opt::Instruction"** %455 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = bitcast %"class.spvtools::opt::Instruction"** %465 to i64*
  store i64 %477, i64* %478, align 8
  store i64 %479, i64* %480, align 8
  %481 = add i32 %440, 1
  %482 = icmp eq %"class.spvtools::opt::Instruction"** %439, %455
  %483 = select i1 %482, %"class.spvtools::opt::Instruction"** %465, %"class.spvtools::opt::Instruction"** %439
  %484 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %455, i64 1
  br label %438

485:                                              ; preds = %474, %432
  %486 = phi %"class.spvtools::opt::Instruction"** [ %233, %432 ], [ %439, %474 ]
  %487 = phi i32 [ %433, %432 ], [ %440, %474 ]
  %488 = phi %"class.spvtools::opt::Instruction"** [ %436, %432 ], [ %455, %474 ]
  %489 = icmp eq %"class.spvtools::opt::Instruction"** %488, %486
  br i1 %489, label %506, label %490

490:                                              ; preds = %485
  %491 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %486, align 8
  %492 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %491, i64 0, i32 2
  %493 = load i32, i32* %492, align 8
  %494 = icmp eq i32 %493, 5
  %495 = ptrtoint %"class.spvtools::opt::Instruction"* %491 to i64
  br i1 %494, label %496, label %506

496:                                              ; preds = %490
  %497 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, align 8
  %498 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %497, i64 0, i32 2
  %499 = load i32, i32* %498, align 8
  %500 = icmp eq i32 %499, 5
  br i1 %500, label %506, label %501

501:                                              ; preds = %496
  %502 = ptrtoint %"class.spvtools::opt::Instruction"* %497 to i64
  %503 = bitcast %"class.spvtools::opt::Instruction"** %488 to i64*
  %504 = bitcast %"class.spvtools::opt::Instruction"** %486 to i64*
  store i64 %495, i64* %503, align 8
  store i64 %502, i64* %504, align 8
  %505 = add i32 %487, 1
  br label %506

506:                                              ; preds = %496, %490, %485, %501
  %507 = phi i32 [ %505, %501 ], [ %487, %485 ], [ %487, %490 ], [ %487, %496 ]
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %516

509:                                              ; preds = %506
  %510 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEbT0_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %488)
  %511 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, i64 1
  %512 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEbT0_S9_T_"(%"class.spvtools::opt::Instruction"** %511, %"class.spvtools::opt::Instruction"** %4)
  br i1 %512, label %513, label %515

513:                                              ; preds = %509
  br i1 %510, label %527, label %514

514:                                              ; preds = %513, %525
  br label %3

515:                                              ; preds = %509
  br i1 %510, label %523, label %516

516:                                              ; preds = %515, %506
  %517 = ptrtoint %"class.spvtools::opt::Instruction"** %488 to i64
  %518 = sub i64 %517, %435
  %519 = sub i64 %13, %517
  %520 = icmp slt i64 %518, %519
  br i1 %520, label %521, label %525

521:                                              ; preds = %516
  tail call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %488)
  %522 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, i64 1
  br label %523

523:                                              ; preds = %521, %515
  %524 = phi %"class.spvtools::opt::Instruction"** [ %511, %515 ], [ %522, %521 ]
  br label %14

525:                                              ; preds = %516
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"** %526, %"class.spvtools::opt::Instruction"** %4)
  br label %514

527:                                              ; preds = %513, %379, %16, %16, %362, %376, %227, %51, %192, %141, %136, %131, %126, %121, %116, %107, %102, %91, %84, %81, %73, %70, %65, %56, %45, %28, %21, %33, %86
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture) unnamed_addr #11 {
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 5
  %9 = ptrtoint %"class.spvtools::opt::Instruction"* %5 to i64
  br i1 %8, label %10, label %16

10:                                               ; preds = %4
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 5
  %15 = ptrtoint %"class.spvtools::opt::Instruction"* %11 to i64
  br i1 %14, label %51, label %38

16:                                               ; preds = %4
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %21, label %51

21:                                               ; preds = %16
  %22 = ptrtoint %"class.spvtools::opt::Instruction"* %17 to i64
  %23 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %24 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %22, i64* %23, align 8
  store i64 %9, i64* %24, align 8
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 5
  %29 = ptrtoint %"class.spvtools::opt::Instruction"* %25 to i64
  br i1 %28, label %30, label %51

30:                                               ; preds = %21
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 5
  br i1 %34, label %51, label %35

35:                                               ; preds = %30
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %31 to i64
  %37 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %29, i64* %37, align 8
  store i64 %36, i64* %23, align 8
  br label %51

38:                                               ; preds = %10
  %39 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %40 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  store i64 %9, i64* %39, align 8
  store i64 %15, i64* %40, align 8
  %41 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 5
  %45 = ptrtoint %"class.spvtools::opt::Instruction"* %41 to i64
  br i1 %44, label %46, label %51

46:                                               ; preds = %38
  %47 = load i32, i32* %12, align 8
  %48 = icmp eq i32 %47, 5
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %45, i64* %40, align 8
  store i64 %15, i64* %50, align 8
  br label %51

51:                                               ; preds = %16, %10, %21, %30, %35, %38, %46, %49
  %52 = phi i32 [ 0, %16 ], [ 2, %35 ], [ 2, %49 ], [ 1, %21 ], [ 1, %30 ], [ 1, %38 ], [ 1, %46 ], [ 0, %10 ]
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 5
  %57 = ptrtoint %"class.spvtools::opt::Instruction"* %53 to i64
  br i1 %56, label %58, label %96

58:                                               ; preds = %51
  %59 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %59, i64 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 5
  br i1 %62, label %96, label %63

63:                                               ; preds = %58
  %64 = ptrtoint %"class.spvtools::opt::Instruction"* %59 to i64
  %65 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  %66 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  store i64 %57, i64* %65, align 8
  store i64 %64, i64* %66, align 8
  %67 = add nuw nsw i32 %52, 1
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 5
  %72 = ptrtoint %"class.spvtools::opt::Instruction"* %68 to i64
  br i1 %71, label %73, label %96

73:                                               ; preds = %63
  %74 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 5
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = ptrtoint %"class.spvtools::opt::Instruction"* %74 to i64
  %80 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  store i64 %72, i64* %80, align 8
  store i64 %79, i64* %65, align 8
  %81 = add nuw nsw i32 %52, 2
  %82 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %82, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 5
  %86 = ptrtoint %"class.spvtools::opt::Instruction"* %82 to i64
  br i1 %85, label %87, label %96

87:                                               ; preds = %78
  %88 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %88, i64 0, i32 2
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 5
  br i1 %91, label %96, label %92

92:                                               ; preds = %87
  %93 = ptrtoint %"class.spvtools::opt::Instruction"* %88 to i64
  %94 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %86, i64* %94, align 8
  store i64 %93, i64* %80, align 8
  %95 = add nuw nsw i32 %52, 3
  br label %96

96:                                               ; preds = %87, %78, %73, %63, %58, %51, %92
  %97 = phi i32 [ %95, %92 ], [ %52, %51 ], [ %52, %58 ], [ %67, %63 ], [ %67, %73 ], [ %81, %78 ], [ %81, %87 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEbT0_S9_T_"(%"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**) unnamed_addr #0 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"** %1 to i64
  %4 = ptrtoint %"class.spvtools::opt::Instruction"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %130 [
    i64 0, label %221
    i64 1, label %221
    i64 2, label %7
    i64 3, label %23
    i64 4, label %72
    i64 5, label %77
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 5
  %13 = ptrtoint %"class.spvtools::opt::Instruction"* %9 to i64
  br i1 %12, label %14, label %221

14:                                               ; preds = %7
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 5
  br i1 %18, label %221, label %19

19:                                               ; preds = %14
  %20 = ptrtoint %"class.spvtools::opt::Instruction"* %15 to i64
  %21 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %22 = bitcast %"class.spvtools::opt::Instruction"** %8 to i64*
  store i64 %13, i64* %21, align 8
  store i64 %20, i64* %22, align 8
  br label %221

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 5
  %30 = ptrtoint %"class.spvtools::opt::Instruction"* %26 to i64
  br i1 %29, label %31, label %37

31:                                               ; preds = %23
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 5
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %32 to i64
  br i1 %35, label %221, label %59

37:                                               ; preds = %23
  %38 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 5
  br i1 %41, label %42, label %221

42:                                               ; preds = %37
  %43 = ptrtoint %"class.spvtools::opt::Instruction"* %38 to i64
  %44 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  %45 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  store i64 %43, i64* %44, align 8
  store i64 %30, i64* %45, align 8
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 5
  %50 = ptrtoint %"class.spvtools::opt::Instruction"* %46 to i64
  br i1 %49, label %51, label %221

51:                                               ; preds = %42
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 5
  br i1 %55, label %221, label %56

56:                                               ; preds = %51
  %57 = ptrtoint %"class.spvtools::opt::Instruction"* %52 to i64
  %58 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %50, i64* %58, align 8
  store i64 %57, i64* %44, align 8
  br label %221

59:                                               ; preds = %31
  %60 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %61 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %30, i64* %60, align 8
  store i64 %36, i64* %61, align 8
  %62 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 5
  %66 = ptrtoint %"class.spvtools::opt::Instruction"* %62 to i64
  br i1 %65, label %67, label %221

67:                                               ; preds = %59
  %68 = load i32, i32* %33, align 8
  %69 = icmp eq i32 %68, 5
  br i1 %69, label %221, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  store i64 %66, i64* %61, align 8
  store i64 %36, i64* %71, align 8
  br label %221

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %76 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %0, %"class.spvtools::opt::Instruction"** %73, %"class.spvtools::opt::Instruction"** %74, %"class.spvtools::opt::Instruction"** %75)
  br label %221

77:                                               ; preds = %2
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 3
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %82 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt20StripReflectInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %0, %"class.spvtools::opt::Instruction"** %78, %"class.spvtools::opt::Instruction"** %79, %"class.spvtools::opt::Instruction"** %80) #12
  %83 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 5
  %87 = ptrtoint %"class.spvtools::opt::Instruction"* %83 to i64
  br i1 %86, label %88, label %221

88:                                               ; preds = %77
  %89 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %89, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 5
  br i1 %92, label %221, label %93

93:                                               ; preds = %88
  %94 = ptrtoint %"class.spvtools::opt::Instruction"* %89 to i64
  %95 = bitcast %"class.spvtools::opt::Instruction"** %80 to i64*
  %96 = bitcast %"class.spvtools::opt::Instruction"** %81 to i64*
  store i64 %87, i64* %95, align 8
  store i64 %94, i64* %96, align 8
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 5
  %101 = ptrtoint %"class.spvtools::opt::Instruction"* %97 to i64
  br i1 %100, label %102, label %221

102:                                              ; preds = %93
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %79, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 5
  br i1 %106, label %221, label %107

107:                                              ; preds = %102
  %108 = ptrtoint %"class.spvtools::opt::Instruction"* %103 to i64
  %109 = bitcast %"class.spvtools::opt::Instruction"** %79 to i64*
  store i64 %101, i64* %109, align 8
  store i64 %108, i64* %95, align 8
  %110 = load i32, i32* %98, align 8
  %111 = icmp eq i32 %110, 5
  br i1 %111, label %112, label %221

112:                                              ; preds = %107
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %78, align 8
  %114 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %113, i64 0, i32 2
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 5
  br i1 %116, label %221, label %117

117:                                              ; preds = %112
  %118 = ptrtoint %"class.spvtools::opt::Instruction"* %113 to i64
  %119 = bitcast %"class.spvtools::opt::Instruction"** %78 to i64*
  store i64 %101, i64* %119, align 8
  store i64 %118, i64* %109, align 8
  %120 = load i32, i32* %98, align 8
  %121 = icmp eq i32 %120, 5
  br i1 %121, label %122, label %221

122:                                              ; preds = %117
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 5
  br i1 %126, label %221, label %127

127:                                              ; preds = %122
  %128 = ptrtoint %"class.spvtools::opt::Instruction"* %123 to i64
  %129 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %101, i64* %129, align 8
  store i64 %128, i64* %119, align 8
  br label %221

130:                                              ; preds = %2
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %133 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %133, i64 0, i32 2
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 5
  %137 = ptrtoint %"class.spvtools::opt::Instruction"* %133 to i64
  br i1 %136, label %138, label %144

138:                                              ; preds = %130
  %139 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 5
  %143 = ptrtoint %"class.spvtools::opt::Instruction"* %139 to i64
  br i1 %142, label %176, label %163

144:                                              ; preds = %130
  %145 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %131, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %145, i64 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, 5
  br i1 %148, label %149, label %176

149:                                              ; preds = %144
  %150 = ptrtoint %"class.spvtools::opt::Instruction"* %145 to i64
  %151 = bitcast %"class.spvtools::opt::Instruction"** %132 to i64*
  %152 = bitcast %"class.spvtools::opt::Instruction"** %131 to i64*
  store i64 %150, i64* %151, align 8
  store i64 %137, i64* %152, align 8
  %153 = load i32, i32* %146, align 8
  %154 = icmp eq i32 %153, 5
  br i1 %154, label %155, label %176

155:                                              ; preds = %149
  %156 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 2
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %158, 5
  br i1 %159, label %176, label %160

160:                                              ; preds = %155
  %161 = ptrtoint %"class.spvtools::opt::Instruction"* %156 to i64
  %162 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %150, i64* %162, align 8
  store i64 %161, i64* %151, align 8
  br label %176

163:                                              ; preds = %138
  %164 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %165 = bitcast %"class.spvtools::opt::Instruction"** %132 to i64*
  store i64 %137, i64* %164, align 8
  store i64 %143, i64* %165, align 8
  %166 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %131, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %166, i64 0, i32 2
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %168, 5
  %170 = ptrtoint %"class.spvtools::opt::Instruction"* %166 to i64
  br i1 %169, label %171, label %176

171:                                              ; preds = %163
  %172 = load i32, i32* %140, align 8
  %173 = icmp eq i32 %172, 5
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = bitcast %"class.spvtools::opt::Instruction"** %131 to i64*
  store i64 %170, i64* %165, align 8
  store i64 %143, i64* %175, align 8
  br label %176

176:                                              ; preds = %144, %138, %149, %155, %160, %163, %171, %174
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 3
  %178 = icmp eq %"class.spvtools::opt::Instruction"** %177, %1
  br i1 %178, label %221, label %179

179:                                              ; preds = %176, %214
  %180 = phi %"class.spvtools::opt::Instruction"** [ %216, %214 ], [ %177, %176 ]
  %181 = phi i32 [ %215, %214 ], [ 0, %176 ]
  %182 = phi %"class.spvtools::opt::Instruction"** [ %180, %214 ], [ %131, %176 ]
  %183 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %180, align 8
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %183, i64 0, i32 2
  %185 = load i32, i32* %184, align 8
  %186 = icmp eq i32 %185, 5
  %187 = ptrtoint %"class.spvtools::opt::Instruction"* %183 to i64
  br i1 %186, label %188, label %214

188:                                              ; preds = %179
  %189 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %182, align 8
  %190 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %189, i64 0, i32 2
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 5
  br i1 %192, label %214, label %193

193:                                              ; preds = %188, %204
  %194 = phi %"class.spvtools::opt::Instruction"** [ %195, %204 ], [ %180, %188 ]
  %195 = phi %"class.spvtools::opt::Instruction"** [ %201, %204 ], [ %182, %188 ]
  %196 = bitcast %"class.spvtools::opt::Instruction"** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.spvtools::opt::Instruction"** %194 to i64*
  store i64 %197, i64* %198, align 8
  %199 = icmp eq %"class.spvtools::opt::Instruction"** %195, %0
  br i1 %199, label %209, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %195, i64 -1
  %202 = load i32, i32* %184, align 8
  %203 = icmp eq i32 %202, 5
  br i1 %203, label %204, label %209

204:                                              ; preds = %200
  %205 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %201, align 8
  %206 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %205, i64 0, i32 2
  %207 = load i32, i32* %206, align 8
  %208 = icmp eq i32 %207, 5
  br i1 %208, label %209, label %193

209:                                              ; preds = %193, %204, %200
  %210 = phi %"class.spvtools::opt::Instruction"** [ %195, %204 ], [ %195, %200 ], [ %0, %193 ]
  %211 = bitcast %"class.spvtools::opt::Instruction"** %210 to i64*
  store i64 %187, i64* %211, align 8
  %212 = add i32 %181, 1
  %213 = icmp eq i32 %212, 8
  br i1 %213, label %218, label %214

214:                                              ; preds = %209, %188, %179
  %215 = phi i32 [ %212, %209 ], [ %181, %179 ], [ %181, %188 ]
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %180, i64 1
  %217 = icmp eq %"class.spvtools::opt::Instruction"** %216, %1
  br i1 %217, label %221, label %179

218:                                              ; preds = %209
  %219 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %180, i64 1
  %220 = icmp eq %"class.spvtools::opt::Instruction"** %219, %1
  br label %221

221:                                              ; preds = %214, %218, %176, %37, %127, %122, %117, %112, %107, %102, %93, %88, %77, %70, %67, %59, %56, %51, %42, %31, %14, %7, %19, %2, %2, %72
  %222 = phi i1 [ true, %72 ], [ true, %2 ], [ true, %2 ], [ true, %19 ], [ true, %7 ], [ true, %14 ], [ true, %31 ], [ true, %37 ], [ true, %42 ], [ true, %51 ], [ true, %56 ], [ true, %59 ], [ true, %67 ], [ true, %70 ], [ true, %77 ], [ true, %88 ], [ true, %93 ], [ true, %102 ], [ true, %107 ], [ true, %112 ], [ true, %117 ], [ true, %122 ], [ true, %127 ], [ true, %176 ], [ %220, %218 ], [ true, %214 ]
  ret i1 %222
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN8spvtools3opt9IRContext7debugs1Ev: argument 0"}
!5 = distinct !{!5, !"_ZN8spvtools3opt9IRContext7debugs1Ev"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN8spvtools3opt9IRContext7debugs2Ev: argument 0"}
!8 = distinct !{!8, !"_ZN8spvtools3opt9IRContext7debugs2Ev"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8spvtools3opt9IRContext7debugs3Ev: argument 0"}
!11 = distinct !{!11, !"_ZN8spvtools3opt9IRContext7debugs3Ev"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN8spvtools3opt9IRContext18ext_inst_debuginfoEv: argument 0"}
!14 = distinct !{!14, !"_ZN8spvtools3opt9IRContext18ext_inst_debuginfoEv"}
!15 = !{i64 0, i64 65}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
