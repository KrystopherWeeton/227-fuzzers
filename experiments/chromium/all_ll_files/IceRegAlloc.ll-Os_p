; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceRegAlloc.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceRegAlloc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.Ice::LiveRange" = type { %"class.std::__1::vector.298", %"class.std::__1::unordered_map.304", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.300" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301", %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.Ice::sz_allocator.303" }
%"struct.Ice::sz_allocator.303" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.0" = type <{ %"class.llvm::SmallVectorImpl.1", %"struct.llvm::SmallVectorStorage.6", [7 x i8] }>
%"class.llvm::SmallVectorImpl.1" = type { %"class.llvm::SmallVectorTemplateBase.2" }
%"class.llvm::SmallVectorTemplateBase.2" = type { %"class.llvm::SmallVectorTemplateCommon.3" }
%"class.llvm::SmallVectorTemplateCommon.3" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.4" }
%"struct.llvm::AlignedCharArrayUnion.4" = type { %"struct.llvm::AlignedCharArray.5" }
%"struct.llvm::AlignedCharArray.5" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.6" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.Ice::sz_allocator.314" }
%"struct.Ice::sz_allocator.314" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316", %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.std::__1::__hash_node_base.309" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.Ice::sz_allocator.318" }
%"struct.Ice::sz_allocator.318" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.Ice::ClFlags" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.std::__1::vector.85", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i32, i8, i8, i32, i8, %"class.std::__1::basic_string", i32, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::vector.85", i8, i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", i8, [7 x i8], %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.Ice::RangeSpec" = type { %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc" }
%"struct.Ice::RangeSpec::Desc" = type <{ %"class.std::__1::unordered_set.330", %"class.llvm::BitVector", i32, i8, [3 x i8] }>
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.349", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.llvm::BitVector" = type { i64*, i32, i32 }
%"class.Ice::LinearScan" = type { %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, %"class.Ice::TargetLowering"*, %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.278", i32, [4 x i8], %"class.llvm::SmallVector.284", %"class.llvm::SmallVector.291", i8, i8, i8, i8, %"class.std::__1::vector.201" }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.12", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.26", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.51", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.57", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.118", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.134", %"class.std::__1::unique_ptr.171", i8, %"class.std::__1::unique_ptr.177", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.183", %"class.llvm::SmallVector.189", %"class.llvm::SmallVector.189" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.std::__1::vector.19" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.9" }
%"class.Ice::VariableDeclaration" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.66" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.59" }
%"class.Ice::StringID" = type { i64 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { i64*, i64*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i64* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.113" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.85", %"class.std::__1::vector.92", %"class.std::__1::vector.106", %"class.std::__1::vector.94", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.101" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.94", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { double*, double*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { double* }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { i64*, i64*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.124"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.130, %union.anon.132, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.130 = type { i64 }
%union.anon.132 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.134" = type <{ [128 x %"class.std::__1::unique_ptr.135"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.147", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.147" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.150", i8, [7 x i8] }>
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.153" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.152 }
%union.anon.152 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.297", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID.297" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.llvm::SmallVector.183" = type { %"class.llvm::SmallVectorImpl.184", %"struct.llvm::SmallVectorStorage.188" }
%"class.llvm::SmallVectorImpl.184" = type { %"class.llvm::SmallVectorTemplateBase.185" }
%"class.llvm::SmallVectorTemplateBase.185" = type { %"class.llvm::SmallVectorTemplateCommon.186" }
%"class.llvm::SmallVectorTemplateCommon.186" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.187" }
%"struct.llvm::AlignedCharArrayUnion.187" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.188" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.187"] }
%"class.llvm::SmallVector.189" = type { %"class.llvm::SmallVectorImpl.190", %"struct.llvm::SmallVectorStorage.194" }
%"class.llvm::SmallVectorImpl.190" = type { %"class.llvm::SmallVectorTemplateBase.191" }
%"class.llvm::SmallVectorTemplateBase.191" = type { %"class.llvm::SmallVectorTemplateCommon.192" }
%"class.llvm::SmallVectorTemplateCommon.192" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.193" }
%"struct.llvm::AlignedCharArrayUnion.193" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.194" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.193"] }
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.195", i32, i8, i8, i8, i32, %"class.std::__1::vector.196", %"class.std::__1::vector.196", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.195" = type { i64 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199", %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.216", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219", %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.Ice::sz_allocator.221" }
%"struct.Ice::sz_allocator.221" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { i32*, i32*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.281" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.Ice::sz_allocator.283" }
%"struct.Ice::sz_allocator.283" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::SmallVector.284" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage.290" }
%"class.llvm::SmallVectorImpl.base" = type { %"class.llvm::SmallVectorTemplateBase.base" }
%"class.llvm::SmallVectorTemplateBase.base" = type { %"class.llvm::SmallVectorTemplateCommon.base" }
%"class.llvm::SmallVectorTemplateCommon.base" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.288" }>
%"struct.llvm::AlignedCharArrayUnion.288" = type { %"struct.llvm::AlignedCharArray.289" }
%"struct.llvm::AlignedCharArray.289" = type { [4 x i8] }
%"struct.llvm::SmallVectorStorage.290" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.288"] }
%"class.llvm::SmallVector.291" = type { %"class.llvm::SmallVectorImpl.292", %"struct.llvm::SmallVectorStorage.296" }
%"class.llvm::SmallVectorImpl.292" = type { %"class.llvm::SmallVectorTemplateBase.293" }
%"class.llvm::SmallVectorTemplateBase.293" = type { %"class.llvm::SmallVectorTemplateCommon.294" }
%"class.llvm::SmallVectorTemplateCommon.294" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.295" }
%"struct.llvm::AlignedCharArrayUnion.295" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.296" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.295"] }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204", %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.Ice::sz_allocator.206" }
%"struct.Ice::sz_allocator.206" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.196", i32, [4 x i8], %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.138", %"class.std::__1::vector.243", %"class.Ice::CfgNode"*, %"class.std::__1::vector.249", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.Ice::TargetLowering"* }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.228" }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.236" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.230", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.Ice::sz_allocator.235" }
%"struct.Ice::sz_allocator.235" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.Ice::sz_allocator.239" }
%"struct.Ice::sz_allocator.239" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.245" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.216", i32 }>
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.Ice::sz_allocator.248" }
%"struct.Ice::sz_allocator.248" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.274" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.251" }
%"class.std::__1::__hash_table.251" = type <{ %"class.std::__1::unique_ptr.252", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254", %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.255"** }
%"struct.std::__1::__hash_node_base.255" = type { %"struct.std::__1::__hash_node_base.255"* }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::__bucket_list_deallocator.257" }
%"class.std::__1::__bucket_list_deallocator.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.Ice::sz_allocator.260" }
%"struct.Ice::sz_allocator.260" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.255" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.Ice::sz_allocator.264" }
%"struct.Ice::sz_allocator.264" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.Ice::sz_allocator.277" }
%"struct.Ice::sz_allocator.277" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.llvm::SmallVector.354" = type { %"class.llvm::SmallVectorImpl.base.361", %"struct.llvm::SmallVectorStorage.362" }
%"class.llvm::SmallVectorImpl.base.361" = type { %"class.llvm::SmallVectorTemplateBase.base.360" }
%"class.llvm::SmallVectorTemplateBase.base.360" = type { %"class.llvm::SmallVectorTemplateCommon.base.359" }
%"class.llvm::SmallVectorTemplateCommon.base.359" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.358" }>
%"struct.llvm::AlignedCharArrayUnion.358" = type { %"struct.llvm::AlignedCharArray.289" }
%"struct.llvm::SmallVectorStorage.362" = type { [9 x %"struct.llvm::AlignedCharArrayUnion.358"] }
%"class.llvm::SmallVectorTemplateBase.356" = type { %"class.llvm::SmallVectorTemplateCommon.base.359", [4 x i8] }
%"class.std::__1::set" = type { %"class.std::__1::__tree.364" }
%"class.std::__1::__tree.364" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.365", %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.Ice::sz_allocator.367" }
%"struct.Ice::sz_allocator.367" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.Ice::Variable"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.Ice::SmallBitVector" = type <{ [2 x i64], i32, [4 x i8] }>
%"class.Ice::LinearScan::IterationState" = type { %"class.Ice::Variable"*, %"class.Ice::Variable"*, %"class.Ice::RegNumT", i8, [3 x i8], %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector", %"class.llvm::SmallVector.372" }
%"class.llvm::SmallVector.372" = type { %"class.llvm::SmallVectorImpl.base.379", %"struct.llvm::SmallVectorStorage.380" }
%"class.llvm::SmallVectorImpl.base.379" = type { %"class.llvm::SmallVectorTemplateBase.base.378" }
%"class.llvm::SmallVectorTemplateBase.base.378" = type { %"class.llvm::SmallVectorTemplateCommon.base.377" }
%"class.llvm::SmallVectorTemplateCommon.base.377" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.376" }>
%"struct.llvm::AlignedCharArrayUnion.376" = type { %"struct.llvm::AlignedCharArray.289" }
%"struct.llvm::SmallVectorStorage.380" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.376"] }
%"class.Ice::InstFakeDef" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstHighLevel" = type { %"class.Ice::Inst.base", [4 x i8] }
%"class.Ice::InstAssign" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFakeUse" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.llvm::SmallVectorImpl.285" = type { %"class.llvm::SmallVectorTemplateBase.base", [4 x i8] }
%"class.llvm::SmallVectorImpl.373" = type { %"class.llvm::SmallVectorTemplateBase.base.378", [4 x i8] }
%"struct.std::__1::__split_buffer.391" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.204", %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.Ice::sz_allocator.206"* }
%"struct.std::__1::pair.383" = type { i8*, i64 }
%"class.std::__1::reverse_iterator" = type { %"class.std::__1::__wrap_iter.352", %"class.std::__1::__wrap_iter.352" }
%"class.std::__1::__wrap_iter.352" = type { %"class.Ice::Variable"** }

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj = comdat any

$_ZN4llvm15SmallVectorImplIPKN3Ice14SmallBitVectorEE6resizeEm = comdat any

$_ZNK3Ice8Variable7getNameEv = comdat any

$_ZN3Ice9LiveRangeC2ERKNSt3__16vectorIiNS_12sz_allocatorIiNS_18CfgAllocatorTraitsEEEEE = comdat any

$_ZN4llvm15SmallVectorImplIiE6resizeEm = comdat any

$_ZN4llvm15SmallVectorImplIN3Ice9RegWeightEE6resizeEm = comdat any

$_ZN3Ice14SmallBitVector5resetERKS0_ = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS3_EESD_SD_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE7reserveEm = comdat any

$_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj = comdat any

$_ZNSt3__16vectorIiN3Ice12sz_allocatorIiNS1_18CfgAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EEPS3_ = comdat any

@.str = private unnamed_addr constant [31 x i8] c"initForInfOnly: Liveness error\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Invalid RAK_Unknown\00", align 1
@.str.12 = private unnamed_addr constant [101 x i8] c"Unable to find a physical register for an infinite-weight live range (consider using -reg-reserve): \00", align 1
@__const._ZN3Ice10LinearScan4scanERKNS_14SmallBitVectorE.KillsRange = private unnamed_addr constant %"class.Ice::LiveRange" { %"class.std::__1::vector.298" { %"class.std::__1::__vector_base.299" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair.300" { %"struct.std::__1::__compressed_pair_elem.301" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) }, %"struct.std::__1::__compressed_pair_elem.302" { %"struct.Ice::sz_allocator.303" { %"class.llvm::BumpPtrAllocatorImpl"* inttoptr (i64 -6148914691236517206 to %"class.llvm::BumpPtrAllocatorImpl"*) } } } } }, %"class.std::__1::unordered_map.304" { %"class.std::__1::__hash_table.305" <{ %"class.std::__1::unique_ptr.306" { %"class.std::__1::__compressed_pair.307" { %"struct.std::__1::__compressed_pair_elem.308" { %"struct.std::__1::__hash_node_base.309"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.309"**) }, %"struct.std::__1::__compressed_pair_elem.310" { %"class.std::__1::__bucket_list_deallocator.311" { %"class.std::__1::__compressed_pair.312" { %"struct.std::__1::__compressed_pair_elem.34" { i64 -6148914691236517206 }, %"struct.std::__1::__compressed_pair_elem.313" { %"struct.Ice::sz_allocator.314" { %"class.llvm::BumpPtrAllocatorImpl"* inttoptr (i64 -6148914691236517206 to %"class.llvm::BumpPtrAllocatorImpl"*) } } } } } } }, %"class.std::__1::__compressed_pair.315" { %"struct.std::__1::__compressed_pair_elem.316" { %"struct.std::__1::__hash_node_base.309" { %"struct.std::__1::__hash_node_base.309"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.309"*) } }, %"struct.std::__1::__compressed_pair_elem.317" { %"struct.Ice::sz_allocator.318" { %"class.llvm::BumpPtrAllocatorImpl"* inttoptr (i64 -6148914691236517206 to %"class.llvm::BumpPtrAllocatorImpl"*) } } }, %"class.std::__1::__compressed_pair.319" { %"struct.std::__1::__compressed_pair_elem.34" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.324" { %"struct.std::__1::__compressed_pair_elem.46" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::__wrap_iter" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } }, align 8
@_ZN3Ice7ClFlags5FlagsE = external local_unnamed_addr global %"class.Ice::ClFlags", align 8
@.str.18 = private unnamed_addr constant [3 x i8] c"__\00", align 1

@_ZN3Ice10LinearScanC1EPNS_3CfgE = hidden unnamed_addr alias void (%"class.Ice::LinearScan"*, %"class.Ice::Cfg"*), void (%"class.Ice::LinearScan"*, %"class.Ice::Cfg"*)* @_ZN3Ice10LinearScanC2EPNS_3CfgE

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScanC2EPNS_3CfgE(%"class.Ice::LinearScan"*, %"class.Ice::Cfg"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  store %"class.Ice::Cfg"* %1, %"class.Ice::Cfg"** %3, align 8
  %4 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 1
  %6 = bitcast %"class.Ice::GlobalContext"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.Ice::GlobalContext"** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 23, i32 0, i32 0, i32 0
  %11 = bitcast %"class.Ice::TargetLowering"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.Ice::TargetLowering"** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %16 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %17 = getelementptr inbounds %"class.llvm::SmallVector.284", %"class.llvm::SmallVector.284"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::vector.201"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 228, i1 false)
  store i8* %16, i8** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %16, i8** %19, align 8
  %20 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.llvm::SmallVector.284", %"class.llvm::SmallVector.284"* %15, i64 1
  %22 = bitcast i8** %20 to %"class.llvm::SmallVector.284"**
  store %"class.llvm::SmallVector.284"* %21, %"class.llvm::SmallVector.284"** %22, align 8
  %23 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %24 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 1024
  store i8* %27, i8** %26, align 8
  %28 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 14
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 15
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 16
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 17
  %32 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 47), align 2, !range !2
  store i8 %32, i8* %31, align 1
  %33 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18
  %34 = bitcast %"class.std::__1::vector.201"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan13initForGlobalEv(%"class.Ice::LinearScan"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 14
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 10
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 3
  %7 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 15
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18
  %11 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18, i32 0, i32 1
  %12 = bitcast %"class.Ice::Variable"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.201"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %9, i64 %17) #12
  %18 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4
  %19 = load i64, i64* %12, align 8
  %20 = load i64, i64* %14, align 8
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %18, i64 %22) #12
  %23 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %10, i64 0, i32 0, i32 0
  %24 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %23, align 8
  %25 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %11, align 8
  %26 = icmp eq %"class.Ice::Variable"** %24, %25
  br i1 %26, label %40, label %27

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 1
  %29 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.Ice::Variable"*** %28 to i64*
  %31 = bitcast %"class.std::__1::vector.201"* %9 to i64*
  %32 = bitcast %"class.Ice::Variable"*** %29 to i64*
  %33 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %9, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 1
  %35 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.Ice::Variable"*** %34 to i64*
  %37 = bitcast %"class.std::__1::vector.201"* %18 to i64*
  %38 = bitcast %"class.Ice::Variable"*** %35 to i64*
  %39 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %18, i64 0, i32 0, i32 0
  br label %49

40:                                               ; preds = %188, %1
  %41 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 9
  %42 = bitcast %"class.std::__1::vector.278"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 9, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = load i32, i32* %4, align 8
  %47 = icmp eq i32 %46, 3
  %48 = inttoptr i64 %43 to i32*
  br i1 %47, label %298, label %191

49:                                               ; preds = %27, %188
  %50 = phi %"class.Ice::Variable"** [ %24, %27 ], [ %189, %188 ]
  %51 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %50, align 8
  %52 = ptrtoint %"class.Ice::Variable"* %51 to i64
  %53 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 6
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %188

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 7
  %58 = load i8, i8* %57, align 4
  %59 = icmp eq i8 %58, 2
  br i1 %59, label %188, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 12, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %61, align 8
  %63 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 12, i32 0, i32 0, i32 1
  %64 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %63, align 8
  %65 = icmp eq %"struct.std::__1::pair"* %62, %64
  br i1 %65, label %188, label %66

66:                                               ; preds = %60
  %67 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  %68 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 12, i32 2
  %69 = bitcast %"class.std::__1::__wrap_iter"* %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %28, align 8
  %71 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %29, align 8
  %72 = icmp eq %"class.Ice::Variable"** %70, %71
  %73 = ptrtoint %"class.Ice::Variable"** %71 to i64
  br i1 %72, label %78, label %74

74:                                               ; preds = %66
  %75 = bitcast %"class.Ice::Variable"** %70 to i64*
  store i64 %52, i64* %75, align 8
  %76 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %70, i64 1
  %77 = ptrtoint %"class.Ice::Variable"** %76 to i64
  store i64 %77, i64* %30, align 8
  br label %126

78:                                               ; preds = %66
  %79 = ptrtoint %"class.Ice::Variable"** %70 to i64
  %80 = load i64, i64* %31, align 8
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = add nsw i64 %82, 1
  %84 = icmp ugt i64 %83, 2305843009213693951
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::vector.201"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #13
  unreachable

87:                                               ; preds = %78
  %88 = sub i64 %73, %80
  %89 = ashr exact i64 %88, 3
  %90 = icmp ult i64 %89, 1152921504606846975
  br i1 %90, label %91, label %96

91:                                               ; preds = %87
  %92 = ashr exact i64 %88, 2
  %93 = icmp ult i64 %92, %83
  %94 = select i1 %93, i64 %83, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %91, %87
  %97 = phi i64 [ %94, %91 ], [ 2305843009213693951, %87 ]
  %98 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %99 = shl i64 %97, 3
  %100 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %98, i64 %99, i64 8) #14
  %101 = bitcast i8* %100 to %"class.Ice::Variable"**
  br label %102

102:                                              ; preds = %96, %91
  %103 = phi i64 [ %97, %96 ], [ 0, %91 ]
  %104 = phi %"class.Ice::Variable"** [ %101, %96 ], [ null, %91 ]
  %105 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %104, i64 %82
  %106 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %104, i64 %103
  %107 = ptrtoint %"class.Ice::Variable"** %106 to i64
  %108 = bitcast %"class.Ice::Variable"** %105 to i64*
  store i64 %52, i64* %108, align 8
  %109 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %105, i64 1
  %110 = ptrtoint %"class.Ice::Variable"** %109 to i64
  %111 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %33, align 8
  %112 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %28, align 8
  %113 = icmp eq %"class.Ice::Variable"** %112, %111
  br i1 %113, label %123, label %114

114:                                              ; preds = %102, %114
  %115 = phi %"class.Ice::Variable"** [ %117, %114 ], [ %105, %102 ]
  %116 = phi %"class.Ice::Variable"** [ %118, %114 ], [ %112, %102 ]
  %117 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %115, i64 -1
  %118 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %116, i64 -1
  %119 = bitcast %"class.Ice::Variable"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.Ice::Variable"** %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = icmp eq %"class.Ice::Variable"** %118, %111
  br i1 %122, label %123, label %114

123:                                              ; preds = %114, %102
  %124 = phi %"class.Ice::Variable"** [ %105, %102 ], [ %117, %114 ]
  %125 = ptrtoint %"class.Ice::Variable"** %124 to i64
  store i64 %125, i64* %31, align 8
  store i64 %110, i64* %30, align 8
  store i64 %107, i64* %32, align 8
  br label %126

126:                                              ; preds = %74, %123
  %127 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 9, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, -1
  br i1 %129, label %188, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %51, i64 0, i32 10, i32 0
  store i32 %128, i32* %131, align 4
  store i8 1, i8* %57, align 4
  %132 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %34, align 8
  %133 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %35, align 8
  %134 = icmp eq %"class.Ice::Variable"** %132, %133
  %135 = ptrtoint %"class.Ice::Variable"** %133 to i64
  br i1 %134, label %140, label %136

136:                                              ; preds = %130
  %137 = bitcast %"class.Ice::Variable"** %132 to i64*
  store i64 %52, i64* %137, align 8
  %138 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %132, i64 1
  %139 = ptrtoint %"class.Ice::Variable"** %138 to i64
  store i64 %139, i64* %36, align 8
  br label %188

140:                                              ; preds = %130
  %141 = ptrtoint %"class.Ice::Variable"** %132 to i64
  %142 = load i64, i64* %37, align 8
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 3
  %145 = add nsw i64 %144, 1
  %146 = icmp ugt i64 %145, 2305843009213693951
  br i1 %146, label %147, label %149

147:                                              ; preds = %140
  %148 = bitcast %"class.std::__1::vector.201"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %148) #13
  unreachable

149:                                              ; preds = %140
  %150 = sub i64 %135, %142
  %151 = ashr exact i64 %150, 3
  %152 = icmp ult i64 %151, 1152921504606846975
  br i1 %152, label %153, label %158

153:                                              ; preds = %149
  %154 = ashr exact i64 %150, 2
  %155 = icmp ult i64 %154, %145
  %156 = select i1 %155, i64 %145, i64 %154
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %164, label %158

158:                                              ; preds = %153, %149
  %159 = phi i64 [ %156, %153 ], [ 2305843009213693951, %149 ]
  %160 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %161 = shl i64 %159, 3
  %162 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %160, i64 %161, i64 8) #14
  %163 = bitcast i8* %162 to %"class.Ice::Variable"**
  br label %164

164:                                              ; preds = %158, %153
  %165 = phi i64 [ %159, %158 ], [ 0, %153 ]
  %166 = phi %"class.Ice::Variable"** [ %163, %158 ], [ null, %153 ]
  %167 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %166, i64 %144
  %168 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %166, i64 %165
  %169 = ptrtoint %"class.Ice::Variable"** %168 to i64
  %170 = bitcast %"class.Ice::Variable"** %167 to i64*
  store i64 %52, i64* %170, align 8
  %171 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %167, i64 1
  %172 = ptrtoint %"class.Ice::Variable"** %171 to i64
  %173 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %39, align 8
  %174 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %34, align 8
  %175 = icmp eq %"class.Ice::Variable"** %174, %173
  br i1 %175, label %185, label %176

176:                                              ; preds = %164, %176
  %177 = phi %"class.Ice::Variable"** [ %179, %176 ], [ %167, %164 ]
  %178 = phi %"class.Ice::Variable"** [ %180, %176 ], [ %174, %164 ]
  %179 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %177, i64 -1
  %180 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %178, i64 -1
  %181 = bitcast %"class.Ice::Variable"** %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.Ice::Variable"** %179 to i64*
  store i64 %182, i64* %183, align 8
  %184 = icmp eq %"class.Ice::Variable"** %180, %173
  br i1 %184, label %185, label %176

185:                                              ; preds = %176, %164
  %186 = phi %"class.Ice::Variable"** [ %167, %164 ], [ %179, %176 ]
  %187 = ptrtoint %"class.Ice::Variable"** %186 to i64
  store i64 %187, i64* %37, align 8
  store i64 %172, i64* %36, align 8
  store i64 %169, i64* %38, align 8
  br label %188

188:                                              ; preds = %126, %49, %185, %136, %60, %56
  %189 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %50, i64 1
  %190 = icmp eq %"class.Ice::Variable"** %189, %25
  br i1 %190, label %40, label %49

191:                                              ; preds = %40
  %192 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %193 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %192, i64 0, i32 14, i32 0, i32 0
  %194 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %193, align 8
  %195 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %192, i64 0, i32 14, i32 0, i32 1
  %196 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %195, align 8
  %197 = icmp eq %"class.Ice::CfgNode"** %194, %196
  br i1 %197, label %298, label %198

198:                                              ; preds = %191
  %199 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %200 = bitcast i32** %199 to i64*
  %201 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %41, i64 0, i32 0, i32 0
  br label %202

202:                                              ; preds = %198, %211
  %203 = phi i32* [ %48, %198 ], [ %212, %211 ]
  %204 = phi %"class.Ice::CfgNode"** [ %194, %198 ], [ %213, %211 ]
  %205 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %204, align 8
  %206 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %205, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %205, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %208 = bitcast %"class.llvm::ilist_node_base"** %206 to %"class.llvm::ilist_node_impl"**
  %209 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %208, align 8
  %210 = icmp eq %"class.llvm::ilist_node_impl"* %209, %207
  br i1 %210, label %211, label %215

211:                                              ; preds = %292, %202
  %212 = phi i32* [ %203, %202 ], [ %293, %292 ]
  %213 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %204, i64 1
  %214 = icmp eq %"class.Ice::CfgNode"** %213, %196
  br i1 %214, label %298, label %202

215:                                              ; preds = %202, %292
  %216 = phi i32* [ %293, %292 ], [ %203, %202 ]
  %217 = phi %"class.llvm::ilist_node_impl"* [ %296, %292 ], [ %209, %202 ]
  %218 = icmp eq %"class.llvm::ilist_node_impl"* %217, null
  %219 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %217, i64 -1, i32 0, i32 1
  %220 = bitcast %"class.llvm::ilist_node_base"** %219 to %"class.Ice::Inst"*
  %221 = select i1 %218, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %220
  %222 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %221, i64 0, i32 2
  %223 = load i32, i32* %222, align 8
  %224 = icmp ne i32 %223, 23
  %225 = icmp eq %"class.Ice::Inst"* %221, null
  %226 = or i1 %225, %224
  br i1 %226, label %292, label %227

227:                                              ; preds = %215
  %228 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %221, i64 0, i32 4
  %229 = load i8, i8* %228, align 8, !range !2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %292

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %221, i64 1
  %233 = bitcast %"class.Ice::Inst"* %232 to %"class.Ice::Inst"**
  %234 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %233, align 8
  %235 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %234, i64 0, i32 4
  %236 = load i8, i8* %235, align 8, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %238, label %292

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %221, i64 0, i32 3
  %240 = load i32, i32* %239, align 4
  %241 = load i32*, i32** %199, align 8
  %242 = icmp ult i32* %216, %241
  %243 = ptrtoint i32* %241 to i64
  br i1 %242, label %244, label %247

244:                                              ; preds = %238
  store i32 %240, i32* %216, align 4
  %245 = getelementptr inbounds i32, i32* %216, i64 1
  %246 = ptrtoint i32* %245 to i64
  store i64 %246, i64* %45, align 8
  br label %292

247:                                              ; preds = %238
  %248 = ptrtoint i32* %216 to i64
  %249 = load i64, i64* %42, align 8
  %250 = sub i64 %248, %249
  %251 = ashr exact i64 %250, 2
  %252 = add nsw i64 %251, 1
  %253 = icmp ugt i64 %252, 4611686018427387903
  br i1 %253, label %254, label %256

254:                                              ; preds = %247
  %255 = bitcast %"class.std::__1::vector.278"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %255) #13
  unreachable

256:                                              ; preds = %247
  %257 = sub i64 %243, %249
  %258 = ashr exact i64 %257, 2
  %259 = icmp ult i64 %258, 2305843009213693951
  br i1 %259, label %260, label %265

260:                                              ; preds = %256
  %261 = ashr exact i64 %257, 1
  %262 = icmp ult i64 %261, %252
  %263 = select i1 %262, i64 %252, i64 %261
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %271, label %265

265:                                              ; preds = %260, %256
  %266 = phi i64 [ %263, %260 ], [ 4611686018427387903, %256 ]
  %267 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %268 = shl i64 %266, 2
  %269 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %267, i64 %268, i64 4) #14
  %270 = bitcast i8* %269 to i32*
  br label %271

271:                                              ; preds = %265, %260
  %272 = phi i64 [ %266, %265 ], [ 0, %260 ]
  %273 = phi i32* [ %270, %265 ], [ null, %260 ]
  %274 = getelementptr inbounds i32, i32* %273, i64 %251
  %275 = getelementptr inbounds i32, i32* %273, i64 %272
  %276 = ptrtoint i32* %275 to i64
  store i32 %240, i32* %274, align 4
  %277 = getelementptr inbounds i32, i32* %274, i64 1
  %278 = ptrtoint i32* %277 to i64
  %279 = load i32*, i32** %201, align 8
  %280 = load i32*, i32** %44, align 8
  %281 = icmp eq i32* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %271, %282
  %283 = phi i32* [ %285, %282 ], [ %274, %271 ]
  %284 = phi i32* [ %286, %282 ], [ %280, %271 ]
  %285 = getelementptr inbounds i32, i32* %283, i64 -1
  %286 = getelementptr inbounds i32, i32* %284, i64 -1
  %287 = load i32, i32* %286, align 4
  store i32 %287, i32* %285, align 4
  %288 = icmp eq i32* %286, %279
  br i1 %288, label %289, label %282

289:                                              ; preds = %282, %271
  %290 = phi i32* [ %274, %271 ], [ %285, %282 ]
  %291 = ptrtoint i32* %290 to i64
  store i64 %291, i64* %42, align 8
  store i64 %278, i64* %45, align 8
  store i64 %276, i64* %200, align 8
  br label %292

292:                                              ; preds = %231, %227, %289, %244, %215
  %293 = phi i32* [ %216, %231 ], [ %216, %227 ], [ %277, %289 ], [ %245, %244 ], [ %216, %215 ]
  %294 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %217, i64 0, i32 0, i32 1
  %295 = bitcast %"class.llvm::ilist_node_base"** %294 to %"class.llvm::ilist_node_impl"**
  %296 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %295, align 8
  %297 = icmp eq %"class.llvm::ilist_node_impl"* %296, %207
  br i1 %297, label %211, label %215

298:                                              ; preds = %211, %191, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.Ice::Variable"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.201"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %42

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.Ice::Variable"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = ashr exact i64 %15, 3
  %17 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %18 = shl i64 %1, 3
  %19 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %17, i64 %18, i64 8) #14
  %20 = bitcast i8* %19 to %"class.Ice::Variable"**
  %21 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %20, i64 %16
  %22 = ptrtoint %"class.Ice::Variable"** %21 to i64
  %23 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %20, i64 %1
  %24 = ptrtoint %"class.Ice::Variable"** %23 to i64
  %25 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 0
  %26 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %25, align 8
  %27 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %12, align 8
  %28 = icmp eq %"class.Ice::Variable"** %27, %26
  br i1 %28, label %40, label %29

29:                                               ; preds = %11, %29
  %30 = phi %"class.Ice::Variable"** [ %32, %29 ], [ %21, %11 ]
  %31 = phi %"class.Ice::Variable"** [ %33, %29 ], [ %27, %11 ]
  %32 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %30, i64 -1
  %33 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %31, i64 -1
  %34 = bitcast %"class.Ice::Variable"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.Ice::Variable"** %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = icmp eq %"class.Ice::Variable"** %33, %26
  br i1 %37, label %38, label %29

38:                                               ; preds = %29
  %39 = ptrtoint %"class.Ice::Variable"** %32 to i64
  br label %40

40:                                               ; preds = %11, %38
  %41 = phi i64 [ %39, %38 ], [ %22, %11 ]
  store i64 %41, i64* %6, align 8
  store i64 %22, i64* %13, align 8
  store i64 %24, i64* %4, align 8
  ret void

42:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice10LinearScan25livenessValidateIntervalsERKN4llvm11SmallVectorIjLj10EEES5_RKNSt3__16vectorIiNS_12sz_allocatorIiNS_18CfgAllocatorTraitsEEEEESD_(%"class.Ice::LinearScan"* nocapture readnone, %"class.llvm::SmallVector.354"* nocapture readonly dereferenceable(64), %"class.llvm::SmallVector.354"* nocapture readonly dereferenceable(64), %"class.std::__1::vector.278"* nocapture readnone dereferenceable(32), %"class.std::__1::vector.278"* nocapture readnone dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %11, %5
  br label %18

18:                                               ; preds = %11, %17
  %19 = phi i1 [ false, %17 ], [ true, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan14initForInfOnlyEv(%"class.Ice::LinearScan"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.278", align 8
  %3 = alloca %"class.std::__1::vector.278", align 8
  %4 = alloca %"class.llvm::SmallVector.354", align 8
  %5 = alloca %"class.llvm::SmallVector.354", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 14
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 15
  store i8 0, i8* %10, align 1
  %11 = bitcast %"class.std::__1::vector.278"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18
  %15 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18, i32 0, i32 1
  %16 = bitcast %"class.Ice::Variable"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.201"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 32, i1 false) #11
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %1
  call void @_ZNSt3__16vectorIiN3Ice12sz_allocatorIiNS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.278"* nonnull %2, i64 %21) #14
  %24 = load i32*, i32** %13, align 8
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i32, i32* %24, i64 %21
  %27 = ashr exact i64 %20, 1
  %28 = and i64 %27, -4
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 %28, i1 false)
  %29 = bitcast i32** %13 to i64*
  %30 = ptrtoint i32* %26 to i64
  store i64 %30, i64* %29, align 8
  %31 = load i64, i64* %16, align 8
  %32 = load i64, i64* %18, align 8
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp eq i64 %33, 0
  br label %36

36:                                               ; preds = %1, %23
  %37 = phi i64 [ 0, %1 ], [ %34, %23 ]
  %38 = phi i1 [ true, %1 ], [ %35, %23 ]
  %39 = bitcast %"class.std::__1::vector.278"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 32, i1 false) #11
  br i1 %38, label %49, label %42

42:                                               ; preds = %36
  call void @_ZNSt3__16vectorIiN3Ice12sz_allocatorIiNS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.278"* nonnull %3, i64 %37) #14
  %43 = load i32*, i32** %41, align 8
  %44 = bitcast i32* %43 to i8*
  %45 = getelementptr inbounds i32, i32* %43, i64 %37
  %46 = shl nsw i64 %37, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 %46, i1 false)
  %47 = bitcast i32** %41 to i64*
  %48 = ptrtoint i32* %45 to i64
  store i64 %48, i64* %47, align 8
  br label %49

49:                                               ; preds = %36, %42
  %50 = bitcast %"class.llvm::SmallVector.354"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 40, i1 false)
  %52 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %4, i64 1
  %57 = bitcast i8** %55 to %"class.llvm::SmallVector.354"**
  store %"class.llvm::SmallVector.354"* %56, %"class.llvm::SmallVector.354"** %57, align 8
  %58 = bitcast %"class.llvm::SmallVector.354"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 40, i1 false)
  %60 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %61 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %60, i8** %61, align 8
  %62 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %60, i8** %62, align 8
  %63 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %64 = getelementptr inbounds %"class.llvm::SmallVector.354", %"class.llvm::SmallVector.354"* %5, i64 1
  %65 = bitcast i8** %63 to %"class.llvm::SmallVector.354"**
  store %"class.llvm::SmallVector.354"* %64, %"class.llvm::SmallVector.354"** %65, align 8
  %66 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %8, align 8
  %67 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %66, i64 0, i32 14, i32 0, i32 0
  %68 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %67, align 8
  %69 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %66, i64 0, i32 14, i32 0, i32 1
  %70 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %69, align 8
  %71 = icmp eq %"class.Ice::CfgNode"** %68, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %49
  %73 = bitcast i32* %6 to i8*
  %74 = bitcast %"class.llvm::SmallVector.354"* %5 to %"class.llvm::SmallVectorTemplateBase.356"*
  br label %98

75:                                               ; preds = %107, %49
  %76 = phi i32 [ 0, %49 ], [ %108, %107 ]
  %77 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3
  %78 = zext i32 %76 to i64
  call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %77, i64 %78) #12
  %79 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %79, i64 %78) #12
  %80 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #11
  store i32 0, i32* %7, align 4
  %81 = load i64, i64* %16, align 8
  %82 = load i64, i64* %18, align 8
  %83 = icmp eq i64 %81, %82
  br i1 %83, label %233, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 1
  %86 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.Ice::Variable"*** %85 to i64*
  %88 = bitcast %"class.std::__1::vector.201"* %77 to i64*
  %89 = bitcast %"class.Ice::Variable"*** %86 to i64*
  %90 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %77, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 1
  %92 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.Ice::Variable"*** %91 to i64*
  %94 = bitcast %"class.std::__1::vector.201"* %79 to i64*
  %95 = bitcast %"class.Ice::Variable"*** %92 to i64*
  %96 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %79, i64 0, i32 0, i32 0
  %97 = bitcast %"class.llvm::SmallVector.354"* %4 to %"class.llvm::SmallVectorTemplateBase.356"*
  br label %241

98:                                               ; preds = %72, %107
  %99 = phi i32 [ 0, %72 ], [ %108, %107 ]
  %100 = phi %"class.Ice::CfgNode"** [ %68, %72 ], [ %109, %107 ]
  %101 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %100, align 8
  %102 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %101, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %101, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.llvm::ilist_node_base"** %102 to %"class.llvm::ilist_node_impl"**
  %105 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %104, align 8
  %106 = icmp eq %"class.llvm::ilist_node_impl"* %105, %103
  br i1 %106, label %107, label %111

107:                                              ; preds = %227, %98
  %108 = phi i32 [ %99, %98 ], [ %228, %227 ]
  %109 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %100, i64 1
  %110 = icmp eq %"class.Ice::CfgNode"** %109, %70
  br i1 %110, label %75, label %98

111:                                              ; preds = %98, %227
  %112 = phi %"class.llvm::ilist_node_impl"* [ %231, %227 ], [ %105, %98 ]
  %113 = phi i32 [ %228, %227 ], [ %99, %98 ]
  %114 = icmp eq %"class.llvm::ilist_node_impl"* %112, null
  %115 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %112, i64 -1, i32 0, i32 1
  %116 = bitcast %"class.llvm::ilist_node_base"** %115 to %"class.Ice::Inst"*
  %117 = select i1 %114, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %116
  %118 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %117, i64 0, i32 4
  %119 = load i8, i8* %118, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %227

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %117, i64 0, i32 13
  %123 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %117, i64 0, i32 13, i32 0, i32 1
  %124 = bitcast %"class.Ice::Operand"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.std::__1::vector.216"* %122 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %125, %127
  %129 = lshr exact i64 %128, 3
  %130 = trunc i64 %129 to i32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %137, label %132

132:                                              ; preds = %121
  %133 = inttoptr i64 %127 to %"class.Ice::Operand"**
  %134 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %117, i64 0, i32 13, i32 0, i32 0
  %135 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %117, i64 0, i32 3
  %136 = and i64 %129, 4294967295
  br label %141

137:                                              ; preds = %194, %121
  %138 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %117, i64 0, i32 10
  %139 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %138, align 8
  %140 = icmp eq %"class.Ice::Variable"* %139, null
  br i1 %140, label %227, label %199

141:                                              ; preds = %197, %132
  %142 = phi %"class.Ice::Operand"** [ %133, %132 ], [ %198, %197 ]
  %143 = phi i64 [ 0, %132 ], [ %195, %197 ]
  %144 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %142, i64 %143
  %145 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %144, align 8
  %146 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %145, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %194, label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %145, i64 0, i32 4
  %151 = zext i32 %147 to i64
  br label %152

152:                                              ; preds = %191, %149
  %153 = phi i64 [ 0, %149 ], [ %192, %191 ]
  %154 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %150, align 8
  %155 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %154, i64 %153
  %156 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %155, align 8
  %157 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %156, i64 0, i32 5
  %158 = load i8, i8* %157, align 2, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %191

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %156, i64 0, i32 6
  %162 = load i8, i8* %161, align 1, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %191

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %156, i64 0, i32 9, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = icmp eq i32 %166, -1
  br i1 %167, label %168, label %172

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %156, i64 0, i32 7
  %170 = load i8, i8* %169, align 4
  %171 = icmp eq i8 %170, 1
  br i1 %171, label %172, label %191

172:                                              ; preds = %164, %168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #11
  %173 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %156, i64 0, i32 1
  %174 = load i32, i32* %173, align 8
  store i32 %174, i32* %6, align 4
  %175 = load i32, i32* %135, align 4
  %176 = zext i32 %174 to i64
  %177 = load i32*, i32** %40, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 %176
  store i32 %175, i32* %178, align 4
  %179 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %156, i64 0, i32 3
  %180 = load i8, i8* %179, align 8, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %190

182:                                              ; preds = %172
  %183 = load i32, i32* %6, align 4
  %184 = zext i32 %183 to i64
  %185 = load i32*, i32** %12, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 %184
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %182
  call void @_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj(%"class.llvm::SmallVectorTemplateBase.356"* nonnull %74, i32* nonnull dereferenceable(4) %6) #12
  br label %190

190:                                              ; preds = %172, %189, %182
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #11
  br label %191

191:                                              ; preds = %160, %152, %168, %190
  %192 = add nuw nsw i64 %153, 1
  %193 = icmp eq i64 %192, %151
  br i1 %193, label %194, label %152

194:                                              ; preds = %191, %141
  %195 = add nuw nsw i64 %143, 1
  %196 = icmp eq i64 %195, %136
  br i1 %196, label %137, label %197

197:                                              ; preds = %194
  %198 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %134, align 8
  br label %141

199:                                              ; preds = %137
  %200 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %139, i64 0, i32 5
  %201 = load i8, i8* %200, align 2, !range !2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %227

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %139, i64 0, i32 6
  %205 = load i8, i8* %204, align 1, !range !2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %227

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %139, i64 0, i32 9, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = icmp eq i32 %209, -1
  br i1 %210, label %211, label %215

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %139, i64 0, i32 7
  %213 = load i8, i8* %212, align 4
  %214 = icmp eq i8 %213, 1
  br i1 %214, label %215, label %227

215:                                              ; preds = %207, %211
  %216 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %139, i64 0, i32 1
  %217 = load i32, i32* %216, align 8
  %218 = zext i32 %217 to i64
  %219 = load i32*, i32** %12, align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 %218
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %227

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %117, i64 0, i32 3
  %225 = load i32, i32* %224, align 4
  store i32 %225, i32* %220, align 4
  %226 = add i32 %113, 1
  br label %227

227:                                              ; preds = %203, %111, %199, %215, %223, %211, %137
  %228 = phi i32 [ %113, %111 ], [ %113, %203 ], [ %226, %223 ], [ %113, %215 ], [ %113, %211 ], [ %113, %137 ], [ %113, %199 ]
  %229 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %112, i64 0, i32 0, i32 1
  %230 = bitcast %"class.llvm::ilist_node_base"** %229 to %"class.llvm::ilist_node_impl"**
  %231 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %230, align 8
  %232 = icmp eq %"class.llvm::ilist_node_impl"* %231, %103
  br i1 %232, label %107, label %111

233:                                              ; preds = %400, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #11
  %234 = load i8*, i8** %53, align 8
  %235 = load i8*, i8** %54, align 8
  %236 = icmp eq i8* %234, %235
  br i1 %236, label %237, label %409

237:                                              ; preds = %233
  %238 = load i8*, i8** %61, align 8
  %239 = load i8*, i8** %62, align 8
  %240 = icmp eq i8* %238, %239
  br i1 %240, label %410, label %409

241:                                              ; preds = %84, %400
  %242 = phi i32 [ 0, %84 ], [ %402, %400 ]
  %243 = phi i64 [ %82, %84 ], [ %405, %400 ]
  %244 = phi i64 [ 0, %84 ], [ %403, %400 ]
  %245 = inttoptr i64 %243 to %"class.Ice::Variable"**
  %246 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %245, i64 %244
  %247 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %246, align 8
  %248 = ptrtoint %"class.Ice::Variable"* %247 to i64
  %249 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %247, i64 0, i32 6
  %250 = load i8, i8* %249, align 1, !range !2
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %252, label %400

252:                                              ; preds = %241
  %253 = load i32*, i32** %12, align 8
  %254 = getelementptr inbounds i32, i32* %253, i64 %244
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %400, label %257

257:                                              ; preds = %252
  %258 = load i32*, i32** %40, align 8
  %259 = getelementptr inbounds i32, i32* %258, i64 %244
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %257
  call void @_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj(%"class.llvm::SmallVectorTemplateBase.356"* nonnull %97, i32* nonnull dereferenceable(4) %7) #12
  br label %400

263:                                              ; preds = %257
  %264 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %85, align 8
  %265 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %86, align 8
  %266 = icmp eq %"class.Ice::Variable"** %264, %265
  %267 = ptrtoint %"class.Ice::Variable"** %265 to i64
  br i1 %266, label %272, label %268

268:                                              ; preds = %263
  %269 = bitcast %"class.Ice::Variable"** %264 to i64*
  store i64 %248, i64* %269, align 8
  %270 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %264, i64 1
  %271 = ptrtoint %"class.Ice::Variable"** %270 to i64
  store i64 %271, i64* %87, align 8
  br label %321

272:                                              ; preds = %263
  %273 = ptrtoint %"class.Ice::Variable"** %264 to i64
  %274 = load i64, i64* %88, align 8
  %275 = sub i64 %273, %274
  %276 = ashr exact i64 %275, 3
  %277 = add nsw i64 %276, 1
  %278 = icmp ugt i64 %277, 2305843009213693951
  br i1 %278, label %279, label %281

279:                                              ; preds = %272
  %280 = bitcast %"class.std::__1::vector.201"* %77 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #13
  unreachable

281:                                              ; preds = %272
  %282 = sub i64 %267, %274
  %283 = ashr exact i64 %282, 3
  %284 = icmp ult i64 %283, 1152921504606846975
  br i1 %284, label %285, label %290

285:                                              ; preds = %281
  %286 = ashr exact i64 %282, 2
  %287 = icmp ult i64 %286, %277
  %288 = select i1 %287, i64 %277, i64 %286
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %296, label %290

290:                                              ; preds = %285, %281
  %291 = phi i64 [ %288, %285 ], [ 2305843009213693951, %281 ]
  %292 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %293 = shl i64 %291, 3
  %294 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %292, i64 %293, i64 8) #14
  %295 = bitcast i8* %294 to %"class.Ice::Variable"**
  br label %296

296:                                              ; preds = %290, %285
  %297 = phi i64 [ %291, %290 ], [ 0, %285 ]
  %298 = phi %"class.Ice::Variable"** [ %295, %290 ], [ null, %285 ]
  %299 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %298, i64 %276
  %300 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %298, i64 %297
  %301 = ptrtoint %"class.Ice::Variable"** %300 to i64
  %302 = bitcast %"class.Ice::Variable"** %299 to i64*
  store i64 %248, i64* %302, align 8
  %303 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %299, i64 1
  %304 = ptrtoint %"class.Ice::Variable"** %303 to i64
  %305 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %90, align 8
  %306 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %85, align 8
  %307 = icmp eq %"class.Ice::Variable"** %306, %305
  br i1 %307, label %317, label %308

308:                                              ; preds = %296, %308
  %309 = phi %"class.Ice::Variable"** [ %311, %308 ], [ %299, %296 ]
  %310 = phi %"class.Ice::Variable"** [ %312, %308 ], [ %306, %296 ]
  %311 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %309, i64 -1
  %312 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %310, i64 -1
  %313 = bitcast %"class.Ice::Variable"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.Ice::Variable"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = icmp eq %"class.Ice::Variable"** %312, %305
  br i1 %316, label %317, label %308

317:                                              ; preds = %308, %296
  %318 = phi %"class.Ice::Variable"** [ %299, %296 ], [ %311, %308 ]
  %319 = ptrtoint %"class.Ice::Variable"** %318 to i64
  store i64 %319, i64* %88, align 8
  store i64 %304, i64* %87, align 8
  store i64 %301, i64* %89, align 8
  %320 = load i32, i32* %7, align 4
  br label %321

321:                                              ; preds = %268, %317
  %322 = phi i32 [ %242, %268 ], [ %320, %317 ]
  %323 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %247, i64 0, i32 12
  %324 = bitcast %"class.Ice::LiveRange"* %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %247, i64 0, i32 12, i32 0, i32 0, i32 1
  %327 = bitcast %"struct.std::__1::pair"** %326 to i64*
  store i64 %325, i64* %327, align 8
  %328 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %247, i64 0, i32 12, i32 2
  %329 = bitcast %"class.std::__1::__wrap_iter"* %328 to i64*
  store i64 %325, i64* %329, align 8
  %330 = zext i32 %322 to i64
  %331 = load i32*, i32** %12, align 8
  %332 = getelementptr inbounds i32, i32* %331, i64 %330
  %333 = load i32, i32* %332, align 4
  %334 = load i32*, i32** %40, align 8
  %335 = getelementptr inbounds i32, i32* %334, i64 %330
  %336 = load i32, i32* %335, align 4
  call void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"* %323, i32 %333, i32 %336, %"class.Ice::CfgNode"* null) #14
  %337 = load i64, i64* %324, align 8
  store i64 %337, i64* %329, align 8
  %338 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %247, i64 0, i32 9, i32 0
  %339 = load i32, i32* %338, align 8
  %340 = icmp eq i32 %339, -1
  br i1 %340, label %400, label %341

341:                                              ; preds = %321
  %342 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %247, i64 0, i32 10, i32 0
  store i32 %339, i32* %342, align 4
  %343 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %247, i64 0, i32 7
  store i8 1, i8* %343, align 4
  %344 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %91, align 8
  %345 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %92, align 8
  %346 = icmp eq %"class.Ice::Variable"** %344, %345
  %347 = ptrtoint %"class.Ice::Variable"** %345 to i64
  br i1 %346, label %352, label %348

348:                                              ; preds = %341
  %349 = bitcast %"class.Ice::Variable"** %344 to i64*
  store i64 %248, i64* %349, align 8
  %350 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %344, i64 1
  %351 = ptrtoint %"class.Ice::Variable"** %350 to i64
  store i64 %351, i64* %93, align 8
  br label %400

352:                                              ; preds = %341
  %353 = ptrtoint %"class.Ice::Variable"** %344 to i64
  %354 = load i64, i64* %94, align 8
  %355 = sub i64 %353, %354
  %356 = ashr exact i64 %355, 3
  %357 = add nsw i64 %356, 1
  %358 = icmp ugt i64 %357, 2305843009213693951
  br i1 %358, label %359, label %361

359:                                              ; preds = %352
  %360 = bitcast %"class.std::__1::vector.201"* %79 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %360) #13
  unreachable

361:                                              ; preds = %352
  %362 = sub i64 %347, %354
  %363 = ashr exact i64 %362, 3
  %364 = icmp ult i64 %363, 1152921504606846975
  br i1 %364, label %365, label %370

365:                                              ; preds = %361
  %366 = ashr exact i64 %362, 2
  %367 = icmp ult i64 %366, %357
  %368 = select i1 %367, i64 %357, i64 %366
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %376, label %370

370:                                              ; preds = %365, %361
  %371 = phi i64 [ %368, %365 ], [ 2305843009213693951, %361 ]
  %372 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %373 = shl i64 %371, 3
  %374 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %372, i64 %373, i64 8) #14
  %375 = bitcast i8* %374 to %"class.Ice::Variable"**
  br label %376

376:                                              ; preds = %370, %365
  %377 = phi i64 [ %371, %370 ], [ 0, %365 ]
  %378 = phi %"class.Ice::Variable"** [ %375, %370 ], [ null, %365 ]
  %379 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %378, i64 %356
  %380 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %378, i64 %377
  %381 = ptrtoint %"class.Ice::Variable"** %380 to i64
  %382 = bitcast %"class.Ice::Variable"** %379 to i64*
  store i64 %248, i64* %382, align 8
  %383 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %379, i64 1
  %384 = ptrtoint %"class.Ice::Variable"** %383 to i64
  %385 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %96, align 8
  %386 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %91, align 8
  %387 = icmp eq %"class.Ice::Variable"** %386, %385
  br i1 %387, label %397, label %388

388:                                              ; preds = %376, %388
  %389 = phi %"class.Ice::Variable"** [ %391, %388 ], [ %379, %376 ]
  %390 = phi %"class.Ice::Variable"** [ %392, %388 ], [ %386, %376 ]
  %391 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %389, i64 -1
  %392 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %390, i64 -1
  %393 = bitcast %"class.Ice::Variable"** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.Ice::Variable"** %391 to i64*
  store i64 %394, i64* %395, align 8
  %396 = icmp eq %"class.Ice::Variable"** %392, %385
  br i1 %396, label %397, label %388

397:                                              ; preds = %388, %376
  %398 = phi %"class.Ice::Variable"** [ %379, %376 ], [ %391, %388 ]
  %399 = ptrtoint %"class.Ice::Variable"** %398 to i64
  store i64 %399, i64* %94, align 8
  store i64 %384, i64* %93, align 8
  store i64 %381, i64* %95, align 8
  br label %400

400:                                              ; preds = %348, %397, %321, %241, %252, %262
  %401 = load i32, i32* %7, align 4
  %402 = add i32 %401, 1
  store i32 %402, i32* %7, align 4
  %403 = zext i32 %402 to i64
  %404 = load i64, i64* %16, align 8
  %405 = load i64, i64* %18, align 8
  %406 = sub i64 %404, %405
  %407 = ashr exact i64 %406, 3
  %408 = icmp ugt i64 %407, %403
  br i1 %408, label %241, label %233

409:                                              ; preds = %237, %233
  call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i1 zeroext true) #13
  unreachable

410:                                              ; preds = %237
  %411 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 9
  %412 = bitcast %"class.std::__1::vector.278"* %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 9, i32 0, i32 1
  %415 = bitcast i32** %414 to i64*
  store i64 %413, i64* %415, align 8
  %416 = icmp eq i8* %238, %60
  br i1 %416, label %419, label %417

417:                                              ; preds = %410
  call void @free(i8* %238) #14
  %418 = load i8*, i8** %53, align 8
  br label %419

419:                                              ; preds = %410, %417
  %420 = phi i8* [ %234, %410 ], [ %418, %417 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %58) #11
  %421 = icmp eq i8* %420, %52
  br i1 %421, label %423, label %422

422:                                              ; preds = %419
  call void @free(i8* %420) #14
  br label %423

423:                                              ; preds = %419, %422
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %50) #11
  %424 = load i32*, i32** %40, align 8
  %425 = icmp eq i32* %424, null
  br i1 %425, label %429, label %426

426:                                              ; preds = %423
  %427 = ptrtoint i32* %424 to i64
  %428 = bitcast i32** %41 to i64*
  store i64 %427, i64* %428, align 8
  br label %429

429:                                              ; preds = %423, %426
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #11
  %430 = load i32*, i32** %12, align 8
  %431 = icmp eq i32* %430, null
  br i1 %431, label %435, label %432

432:                                              ; preds = %429
  %433 = ptrtoint i32* %430 to i64
  %434 = bitcast i32** %13 to i64*
  store i64 %433, i64* %434, align 8
  br label %435

435:                                              ; preds = %429, %432
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIjLb1EE9push_backERKj(%"class.llvm::SmallVectorTemplateBase.356"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.356", %"class.llvm::SmallVectorTemplateBase.356"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.356", %"class.llvm::SmallVectorTemplateBase.356"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %11, !prof !3

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i32*
  %10 = bitcast i8** %3 to i32**
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.356", %"class.llvm::SmallVectorTemplateBase.356"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.356", %"class.llvm::SmallVectorTemplateBase.356"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %12, i8* %13, i64 0, i64 4) #14
  %14 = bitcast i8** %3 to i32**
  %15 = load i32*, i32** %14, align 8
  br label %16

16:                                               ; preds = %8, %11
  %17 = phi i32** [ %10, %8 ], [ %14, %11 ]
  %18 = phi i32* [ %9, %8 ], [ %15, %11 ]
  %19 = load i32, i32* %1, align 4
  store i32 %19, i32* %18, align 1
  %20 = load i32*, i32** %17, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 1
  store i32* %21, i32** %17, align 8
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan19initForSecondChanceEv(%"class.Ice::LinearScan"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 14
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 15
  store i8 1, i8* %4, align 1
  %5 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %6 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %5, i64 0, i32 17
  %7 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %5, i64 0, i32 17, i32 0, i32 1
  %9 = bitcast %"class.Ice::Variable"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.201"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %7, i64 %14) #12
  %15 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4
  %16 = load i64, i64* %9, align 8
  %17 = load i64, i64* %11, align 8
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %15, i64 %19) #12
  %20 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %6, i64 0, i32 0, i32 0
  %21 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %20, align 8
  %22 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %8, align 8
  %23 = icmp eq %"class.Ice::Variable"** %21, %22
  br i1 %23, label %37, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 1
  %26 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.Ice::Variable"*** %25 to i64*
  %28 = bitcast %"class.std::__1::vector.201"* %15 to i64*
  %29 = bitcast %"class.Ice::Variable"*** %26 to i64*
  %30 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %15, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.Ice::Variable"*** %31 to i64*
  %34 = bitcast %"class.std::__1::vector.201"* %7 to i64*
  %35 = bitcast %"class.Ice::Variable"*** %32 to i64*
  %36 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %7, i64 0, i32 0, i32 0
  br label %50

37:                                               ; preds = %182, %1
  %38 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8, i32 0, i32 0
  %39 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %38, align 8
  %40 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8, i32 0, i32 1
  %41 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %40, align 8
  %42 = icmp eq %"class.Ice::Variable"** %39, %41
  br i1 %42, label %185, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 1
  %45 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.Ice::Variable"*** %44 to i64*
  %47 = bitcast %"class.std::__1::vector.201"* %7 to i64*
  %48 = bitcast %"class.Ice::Variable"*** %45 to i64*
  %49 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %7, i64 0, i32 0, i32 0
  br label %186

50:                                               ; preds = %24, %182
  %51 = phi %"class.Ice::Variable"** [ %21, %24 ], [ %183, %182 ]
  %52 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %51, align 8
  %53 = ptrtoint %"class.Ice::Variable"* %52 to i64
  %54 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 6
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %182

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 9, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %182, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 12
  %63 = bitcast %"class.Ice::LiveRange"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 12, i32 2
  %66 = bitcast %"class.std::__1::__wrap_iter"* %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 10, i32 0
  store i32 %59, i32* %67, align 4
  %68 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 7
  store i8 1, i8* %68, align 4
  %69 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %25, align 8
  %70 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %26, align 8
  %71 = icmp eq %"class.Ice::Variable"** %69, %70
  %72 = ptrtoint %"class.Ice::Variable"** %70 to i64
  br i1 %71, label %77, label %73

73:                                               ; preds = %61
  %74 = bitcast %"class.Ice::Variable"** %69 to i64*
  store i64 %53, i64* %74, align 8
  %75 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %69, i64 1
  %76 = ptrtoint %"class.Ice::Variable"** %75 to i64
  store i64 %76, i64* %27, align 8
  br label %125

77:                                               ; preds = %61
  %78 = ptrtoint %"class.Ice::Variable"** %69 to i64
  %79 = load i64, i64* %28, align 8
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = add nsw i64 %81, 1
  %83 = icmp ugt i64 %82, 2305843009213693951
  br i1 %83, label %84, label %86

84:                                               ; preds = %77
  %85 = bitcast %"class.std::__1::vector.201"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #13
  unreachable

86:                                               ; preds = %77
  %87 = sub i64 %72, %79
  %88 = ashr exact i64 %87, 3
  %89 = icmp ult i64 %88, 1152921504606846975
  br i1 %89, label %90, label %95

90:                                               ; preds = %86
  %91 = ashr exact i64 %87, 2
  %92 = icmp ult i64 %91, %82
  %93 = select i1 %92, i64 %82, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %90, %86
  %96 = phi i64 [ %93, %90 ], [ 2305843009213693951, %86 ]
  %97 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %98 = shl i64 %96, 3
  %99 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %97, i64 %98, i64 8) #14
  %100 = bitcast i8* %99 to %"class.Ice::Variable"**
  br label %101

101:                                              ; preds = %95, %90
  %102 = phi i64 [ %96, %95 ], [ 0, %90 ]
  %103 = phi %"class.Ice::Variable"** [ %100, %95 ], [ null, %90 ]
  %104 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %103, i64 %81
  %105 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %103, i64 %102
  %106 = ptrtoint %"class.Ice::Variable"** %105 to i64
  %107 = bitcast %"class.Ice::Variable"** %104 to i64*
  store i64 %53, i64* %107, align 8
  %108 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %104, i64 1
  %109 = ptrtoint %"class.Ice::Variable"** %108 to i64
  %110 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %30, align 8
  %111 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %25, align 8
  %112 = icmp eq %"class.Ice::Variable"** %111, %110
  br i1 %112, label %122, label %113

113:                                              ; preds = %101, %113
  %114 = phi %"class.Ice::Variable"** [ %116, %113 ], [ %104, %101 ]
  %115 = phi %"class.Ice::Variable"** [ %117, %113 ], [ %111, %101 ]
  %116 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %114, i64 -1
  %117 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %115, i64 -1
  %118 = bitcast %"class.Ice::Variable"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.Ice::Variable"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = icmp eq %"class.Ice::Variable"** %117, %110
  br i1 %121, label %122, label %113

122:                                              ; preds = %113, %101
  %123 = phi %"class.Ice::Variable"** [ %104, %101 ], [ %116, %113 ]
  %124 = ptrtoint %"class.Ice::Variable"** %123 to i64
  store i64 %124, i64* %28, align 8
  store i64 %109, i64* %27, align 8
  store i64 %106, i64* %29, align 8
  br label %125

125:                                              ; preds = %73, %122
  %126 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %31, align 8
  %127 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %32, align 8
  %128 = icmp eq %"class.Ice::Variable"** %126, %127
  %129 = ptrtoint %"class.Ice::Variable"** %127 to i64
  br i1 %128, label %134, label %130

130:                                              ; preds = %125
  %131 = bitcast %"class.Ice::Variable"** %126 to i64*
  store i64 %53, i64* %131, align 8
  %132 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %126, i64 1
  %133 = ptrtoint %"class.Ice::Variable"** %132 to i64
  store i64 %133, i64* %33, align 8
  br label %182

134:                                              ; preds = %125
  %135 = ptrtoint %"class.Ice::Variable"** %126 to i64
  %136 = load i64, i64* %34, align 8
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 3
  %139 = add nsw i64 %138, 1
  %140 = icmp ugt i64 %139, 2305843009213693951
  br i1 %140, label %141, label %143

141:                                              ; preds = %134
  %142 = bitcast %"class.std::__1::vector.201"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %142) #13
  unreachable

143:                                              ; preds = %134
  %144 = sub i64 %129, %136
  %145 = ashr exact i64 %144, 3
  %146 = icmp ult i64 %145, 1152921504606846975
  br i1 %146, label %147, label %152

147:                                              ; preds = %143
  %148 = ashr exact i64 %144, 2
  %149 = icmp ult i64 %148, %139
  %150 = select i1 %149, i64 %139, i64 %148
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %147, %143
  %153 = phi i64 [ %150, %147 ], [ 2305843009213693951, %143 ]
  %154 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %155 = shl i64 %153, 3
  %156 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %154, i64 %155, i64 8) #14
  %157 = bitcast i8* %156 to %"class.Ice::Variable"**
  br label %158

158:                                              ; preds = %152, %147
  %159 = phi i64 [ %153, %152 ], [ 0, %147 ]
  %160 = phi %"class.Ice::Variable"** [ %157, %152 ], [ null, %147 ]
  %161 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %160, i64 %138
  %162 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %160, i64 %159
  %163 = ptrtoint %"class.Ice::Variable"** %162 to i64
  %164 = bitcast %"class.Ice::Variable"** %161 to i64*
  store i64 %53, i64* %164, align 8
  %165 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %161, i64 1
  %166 = ptrtoint %"class.Ice::Variable"** %165 to i64
  %167 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %36, align 8
  %168 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %31, align 8
  %169 = icmp eq %"class.Ice::Variable"** %168, %167
  br i1 %169, label %179, label %170

170:                                              ; preds = %158, %170
  %171 = phi %"class.Ice::Variable"** [ %173, %170 ], [ %161, %158 ]
  %172 = phi %"class.Ice::Variable"** [ %174, %170 ], [ %168, %158 ]
  %173 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %171, i64 -1
  %174 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %172, i64 -1
  %175 = bitcast %"class.Ice::Variable"** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.Ice::Variable"** %173 to i64*
  store i64 %176, i64* %177, align 8
  %178 = icmp eq %"class.Ice::Variable"** %174, %167
  br i1 %178, label %179, label %170

179:                                              ; preds = %170, %158
  %180 = phi %"class.Ice::Variable"** [ %161, %158 ], [ %173, %170 ]
  %181 = ptrtoint %"class.Ice::Variable"** %180 to i64
  store i64 %181, i64* %34, align 8
  store i64 %166, i64* %33, align 8
  store i64 %163, i64* %35, align 8
  br label %182

182:                                              ; preds = %57, %50, %179, %130
  %183 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %51, i64 1
  %184 = icmp eq %"class.Ice::Variable"** %183, %22
  br i1 %184, label %37, label %50

185:                                              ; preds = %251, %37
  ret void

186:                                              ; preds = %43, %251
  %187 = phi %"class.Ice::Variable"** [ %39, %43 ], [ %252, %251 ]
  %188 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %187, align 8
  %189 = ptrtoint %"class.Ice::Variable"* %188 to i64
  %190 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %188, i64 0, i32 12
  %191 = bitcast %"class.Ice::LiveRange"* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %188, i64 0, i32 12, i32 2
  %194 = bitcast %"class.std::__1::__wrap_iter"* %193 to i64*
  store i64 %192, i64* %194, align 8
  %195 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %44, align 8
  %196 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %45, align 8
  %197 = icmp eq %"class.Ice::Variable"** %195, %196
  %198 = ptrtoint %"class.Ice::Variable"** %196 to i64
  br i1 %197, label %203, label %199

199:                                              ; preds = %186
  %200 = bitcast %"class.Ice::Variable"** %195 to i64*
  store i64 %189, i64* %200, align 8
  %201 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %195, i64 1
  %202 = ptrtoint %"class.Ice::Variable"** %201 to i64
  store i64 %202, i64* %46, align 8
  br label %251

203:                                              ; preds = %186
  %204 = ptrtoint %"class.Ice::Variable"** %195 to i64
  %205 = load i64, i64* %47, align 8
  %206 = sub i64 %204, %205
  %207 = ashr exact i64 %206, 3
  %208 = add nsw i64 %207, 1
  %209 = icmp ugt i64 %208, 2305843009213693951
  br i1 %209, label %210, label %212

210:                                              ; preds = %203
  %211 = bitcast %"class.std::__1::vector.201"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %211) #13
  unreachable

212:                                              ; preds = %203
  %213 = sub i64 %198, %205
  %214 = ashr exact i64 %213, 3
  %215 = icmp ult i64 %214, 1152921504606846975
  br i1 %215, label %216, label %221

216:                                              ; preds = %212
  %217 = ashr exact i64 %213, 2
  %218 = icmp ult i64 %217, %208
  %219 = select i1 %218, i64 %208, i64 %217
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %227, label %221

221:                                              ; preds = %216, %212
  %222 = phi i64 [ %219, %216 ], [ 2305843009213693951, %212 ]
  %223 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %224 = shl i64 %222, 3
  %225 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %223, i64 %224, i64 8) #14
  %226 = bitcast i8* %225 to %"class.Ice::Variable"**
  br label %227

227:                                              ; preds = %221, %216
  %228 = phi i64 [ %222, %221 ], [ 0, %216 ]
  %229 = phi %"class.Ice::Variable"** [ %226, %221 ], [ null, %216 ]
  %230 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %229, i64 %207
  %231 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %229, i64 %228
  %232 = ptrtoint %"class.Ice::Variable"** %231 to i64
  %233 = bitcast %"class.Ice::Variable"** %230 to i64*
  store i64 %189, i64* %233, align 8
  %234 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %230, i64 1
  %235 = ptrtoint %"class.Ice::Variable"** %234 to i64
  %236 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %49, align 8
  %237 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %44, align 8
  %238 = icmp eq %"class.Ice::Variable"** %237, %236
  br i1 %238, label %248, label %239

239:                                              ; preds = %227, %239
  %240 = phi %"class.Ice::Variable"** [ %242, %239 ], [ %230, %227 ]
  %241 = phi %"class.Ice::Variable"** [ %243, %239 ], [ %237, %227 ]
  %242 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %240, i64 -1
  %243 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %241, i64 -1
  %244 = bitcast %"class.Ice::Variable"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.Ice::Variable"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = icmp eq %"class.Ice::Variable"** %243, %236
  br i1 %247, label %248, label %239

248:                                              ; preds = %239, %227
  %249 = phi %"class.Ice::Variable"** [ %230, %227 ], [ %242, %239 ]
  %250 = ptrtoint %"class.Ice::Variable"** %249 to i64
  store i64 %250, i64* %47, align 8
  store i64 %235, i64* %46, align 8
  store i64 %232, i64* %48, align 8
  br label %251

251:                                              ; preds = %199, %248
  %252 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %187, i64 1
  %253 = icmp eq %"class.Ice::Variable"** %252, %41
  br i1 %253, label %185, label %186
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan4initENS_12RegAllocKindENSt3__13setIPNS_8VariableENS2_4lessIS5_EENS_12sz_allocatorIS5_NS_18CfgAllocatorTraitsEEEEE(%"class.Ice::LinearScan"*, i32, %"class.std::__1::set"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 10
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::vector.201"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.Ice::Variable"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector.201"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = bitcast %"class.Ice::Variable"*** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %16 = bitcast %"class.std::__1::vector.201"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %19 = bitcast %"class.Ice::Variable"*** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6
  %21 = bitcast %"class.std::__1::vector.201"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 1
  %24 = bitcast %"class.Ice::Variable"*** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %26 = bitcast %"class.std::__1::vector.201"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %29 = bitcast %"class.Ice::Variable"*** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18
  %31 = bitcast %"class.std::__1::vector.201"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18, i32 0, i32 1
  %34 = bitcast %"class.Ice::Variable"*** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %36 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %35, align 8
  %37 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %36, i64 0, i32 17
  %38 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %36, i64 0, i32 17, i32 0, i32 1
  %39 = bitcast %"class.Ice::Variable"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.201"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %30, i64 %47) #12
  %48 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %35, align 8
  %49 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %48, i64 0, i32 17, i32 0, i32 0
  %50 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %49, align 8
  %51 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %48, i64 0, i32 17, i32 0, i32 1
  %52 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %51, align 8
  %53 = icmp eq %"class.Ice::Variable"** %50, %52
  br i1 %53, label %60, label %54

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node"**
  %57 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.Ice::Variable"*** %57 to i64*
  %59 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %30, i64 0, i32 0, i32 0
  br label %74

60:                                               ; preds = %160, %3
  %61 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 2
  %62 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %61, align 8
  %63 = bitcast %"class.Ice::TargetLowering"* %62 to i32 (%"class.Ice::TargetLowering"*)***
  %64 = load i32 (%"class.Ice::TargetLowering"*)**, i32 (%"class.Ice::TargetLowering"*)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.Ice::TargetLowering"*)*, i32 (%"class.Ice::TargetLowering"*)** %64, i64 7
  %66 = load i32 (%"class.Ice::TargetLowering"*)*, i32 (%"class.Ice::TargetLowering"*)** %65, align 8
  %67 = tail call i32 %66(%"class.Ice::TargetLowering"* %62) #14
  %68 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13
  %69 = getelementptr inbounds %"class.llvm::SmallVector.291", %"class.llvm::SmallVector.291"* %68, i64 0, i32 0
  %70 = zext i32 %67 to i64
  tail call void @_ZN4llvm15SmallVectorImplIPKN3Ice14SmallBitVectorEE6resizeEm(%"class.llvm::SmallVectorImpl.292"* %69, i64 %70) #12
  %71 = icmp eq i32 %67, 0
  br i1 %71, label %163, label %72

72:                                               ; preds = %60
  %73 = bitcast %"class.llvm::SmallVector.291"* %68 to %"class.Ice::SmallBitVector"***
  br label %164

74:                                               ; preds = %54, %160
  %75 = phi %"class.Ice::Variable"** [ %50, %54 ], [ %161, %160 ]
  %76 = bitcast %"class.Ice::Variable"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8
  %79 = icmp eq %"class.std::__1::__tree_node"* %78, null
  br i1 %79, label %103, label %80

80:                                               ; preds = %74
  %81 = inttoptr i64 %77 to %"class.Ice::Variable"*
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi %"class.std::__1::__tree_end_node"* [ %55, %80 ], [ %93, %82 ]
  %84 = phi %"class.std::__1::__tree_node"* [ %78, %80 ], [ %94, %82 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1
  %86 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %85, align 8
  %87 = icmp ult %"class.Ice::Variable"* %86, %81
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 0, i32 1
  %89 = bitcast %"class.std::__1::__tree_node_base"** %88 to %"class.std::__1::__tree_node"**
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::__tree_node"* %84 to %"class.std::__1::__tree_node"**
  %92 = select i1 %87, %"class.std::__1::__tree_node"** %89, %"class.std::__1::__tree_node"** %91
  %93 = select i1 %87, %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"* %90
  %94 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %92, align 8
  %95 = icmp eq %"class.std::__1::__tree_node"* %94, null
  br i1 %95, label %96, label %82

96:                                               ; preds = %82
  %97 = icmp eq %"class.std::__1::__tree_end_node"* %93, %55
  br i1 %97, label %103, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 4
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to %"class.Ice::Variable"**
  %101 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %100, align 8
  %102 = icmp ugt %"class.Ice::Variable"* %101, %81
  br i1 %102, label %103, label %160

103:                                              ; preds = %98, %96, %74
  %104 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %33, align 8
  %105 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %57, align 8
  %106 = icmp ult %"class.Ice::Variable"** %104, %105
  %107 = ptrtoint %"class.Ice::Variable"** %105 to i64
  br i1 %106, label %108, label %112

108:                                              ; preds = %103
  %109 = bitcast %"class.Ice::Variable"** %104 to i64*
  store i64 %77, i64* %109, align 8
  %110 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %104, i64 1
  %111 = ptrtoint %"class.Ice::Variable"** %110 to i64
  store i64 %111, i64* %34, align 8
  br label %160

112:                                              ; preds = %103
  %113 = ptrtoint %"class.Ice::Variable"** %104 to i64
  %114 = load i64, i64* %31, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 2305843009213693951
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector.201"* %30 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #13
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %107, %114
  %123 = ashr exact i64 %122, 3
  %124 = icmp ult i64 %123, 1152921504606846975
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = ashr exact i64 %122, 2
  %127 = icmp ult i64 %126, %117
  %128 = select i1 %127, i64 %117, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %125, %121
  %131 = phi i64 [ %128, %125 ], [ 2305843009213693951, %121 ]
  %132 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %133 = shl i64 %131, 3
  %134 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %132, i64 %133, i64 8) #14
  %135 = bitcast i8* %134 to %"class.Ice::Variable"**
  br label %136

136:                                              ; preds = %130, %125
  %137 = phi i64 [ %131, %130 ], [ 0, %125 ]
  %138 = phi %"class.Ice::Variable"** [ %135, %130 ], [ null, %125 ]
  %139 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %138, i64 %116
  %140 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %138, i64 %137
  %141 = ptrtoint %"class.Ice::Variable"** %140 to i64
  %142 = bitcast %"class.Ice::Variable"** %139 to i64*
  store i64 %77, i64* %142, align 8
  %143 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %139, i64 1
  %144 = ptrtoint %"class.Ice::Variable"** %143 to i64
  %145 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %59, align 8
  %146 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %33, align 8
  %147 = icmp eq %"class.Ice::Variable"** %146, %145
  br i1 %147, label %157, label %148

148:                                              ; preds = %136, %148
  %149 = phi %"class.Ice::Variable"** [ %151, %148 ], [ %139, %136 ]
  %150 = phi %"class.Ice::Variable"** [ %152, %148 ], [ %146, %136 ]
  %151 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %149, i64 -1
  %152 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %150, i64 -1
  %153 = bitcast %"class.Ice::Variable"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.Ice::Variable"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = icmp eq %"class.Ice::Variable"** %152, %145
  br i1 %156, label %157, label %148

157:                                              ; preds = %148, %136
  %158 = phi %"class.Ice::Variable"** [ %139, %136 ], [ %151, %148 ]
  %159 = ptrtoint %"class.Ice::Variable"** %158 to i64
  store i64 %159, i64* %31, align 8
  store i64 %144, i64* %34, align 8
  store i64 %141, i64* %58, align 8
  br label %160

160:                                              ; preds = %98, %157, %108
  %161 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %75, i64 1
  %162 = icmp eq %"class.Ice::Variable"** %161, %52
  br i1 %162, label %60, label %74

163:                                              ; preds = %164, %60
  switch i32 %1, label %181 [
    i32 0, label %177
    i32 1, label %178
    i32 3, label %178
    i32 4, label %179
    i32 2, label %180
  ]

164:                                              ; preds = %164, %72
  %165 = phi i64 [ 0, %72 ], [ %175, %164 ]
  %166 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %61, align 8
  %167 = bitcast %"class.Ice::TargetLowering"* %166 to %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)***
  %168 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)**, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)*** %167, align 8
  %169 = getelementptr inbounds %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)** %168, i64 27
  %170 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)** %169, align 8
  %171 = trunc i64 %165 to i32
  %172 = tail call dereferenceable(24) %"class.Ice::SmallBitVector"* %170(%"class.Ice::TargetLowering"* %166, i32 %171) #14
  %173 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %73, align 8
  %174 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %173, i64 %165
  store %"class.Ice::SmallBitVector"* %172, %"class.Ice::SmallBitVector"** %174, align 8
  %175 = add nuw nsw i64 %165, 1
  %176 = icmp eq i64 %175, %70
  br i1 %176, label %163, label %164

177:                                              ; preds = %163
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true) #13
  unreachable

178:                                              ; preds = %163, %163
  tail call void @_ZN3Ice10LinearScan13initForGlobalEv(%"class.Ice::LinearScan"* %0) #12
  br label %181

179:                                              ; preds = %163
  tail call void @_ZN3Ice10LinearScan14initForInfOnlyEv(%"class.Ice::LinearScan"* %0) #12
  br label %181

180:                                              ; preds = %163
  tail call void @_ZN3Ice10LinearScan19initForSecondChanceEv(%"class.Ice::LinearScan"* %0) #12
  br label %181

181:                                              ; preds = %163, %180, %179, %178
  %182 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8
  %183 = bitcast %"class.std::__1::vector.201"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8, i32 0, i32 1
  %186 = bitcast %"class.Ice::Variable"*** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %8, align 8
  %188 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %5, i64 0, i32 0, i32 0
  %189 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %188, align 8
  tail call fastcc void @"_ZNSt3__16__sortIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEvT0_SK_T_"(%"class.Ice::Variable"** %187, %"class.Ice::Variable"** %187, %"class.Ice::Variable"** %189, %"class.Ice::Variable"** %189) #14
  %190 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %13, align 8
  %191 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %10, i64 0, i32 0, i32 0
  %192 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %191, align 8
  tail call fastcc void @"_ZNSt3__16__sortIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEvT0_SK_T_"(%"class.Ice::Variable"** %190, %"class.Ice::Variable"** %190, %"class.Ice::Variable"** %192, %"class.Ice::Variable"** %192) #14
  %193 = load i64, i64* %9, align 8
  %194 = load i64, i64* %6, align 8
  %195 = sub i64 %193, %194
  %196 = ashr exact i64 %195, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %15, i64 %196) #12
  %197 = load i64, i64* %9, align 8
  %198 = load i64, i64* %6, align 8
  %199 = sub i64 %197, %198
  %200 = ashr exact i64 %199, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %20, i64 %200) #12
  %201 = load i64, i64* %9, align 8
  %202 = load i64, i64* %6, align 8
  %203 = sub i64 %201, %202
  %204 = ashr exact i64 %203, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %25, i64 %204) #12
  %205 = load i64, i64* %9, align 8
  %206 = load i64, i64* %6, align 8
  %207 = sub i64 %205, %206
  %208 = ashr exact i64 %207, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.201"* %182, i64 %208) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIPKN3Ice14SmallBitVectorEE6resizeEm(%"class.llvm::SmallVectorImpl.292"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorImpl.292", %"class.llvm::SmallVectorImpl.292"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.llvm::SmallVectorImpl.292"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ugt i64 %9, %1
  %11 = inttoptr i64 %5 to %"class.Ice::SmallBitVector"**
  %12 = inttoptr i64 %7 to %"class.Ice::SmallBitVector"**
  br i1 %10, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast i8** %3 to %"class.Ice::SmallBitVector"***
  br label %53

15:                                               ; preds = %2
  %16 = icmp ult i64 %9, %1
  br i1 %16, label %17, label %57

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.llvm::SmallVectorImpl.292", %"class.llvm::SmallVectorImpl.292"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %7
  %22 = ashr exact i64 %21, 3
  %23 = icmp ult i64 %22, %1
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast i8** %3 to %"class.Ice::SmallBitVector"***
  %26 = bitcast %"class.llvm::SmallVectorImpl.292"* %0 to %"class.Ice::SmallBitVector"***
  br label %35

27:                                               ; preds = %17
  %28 = shl i64 %1, 3
  %29 = getelementptr inbounds %"class.llvm::SmallVectorImpl.292", %"class.llvm::SmallVectorImpl.292"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.llvm::SmallVectorImpl.292", %"class.llvm::SmallVectorImpl.292"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %29, i8* %30, i64 %28, i64 8) #14
  %31 = bitcast i8** %3 to %"class.Ice::SmallBitVector"***
  %32 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %31, align 8
  %33 = bitcast %"class.llvm::SmallVectorImpl.292"* %0 to %"class.Ice::SmallBitVector"***
  %34 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %33, align 8
  br label %35

35:                                               ; preds = %24, %27
  %36 = phi %"class.Ice::SmallBitVector"*** [ %26, %24 ], [ %33, %27 ]
  %37 = phi %"class.Ice::SmallBitVector"*** [ %25, %24 ], [ %31, %27 ]
  %38 = phi %"class.Ice::SmallBitVector"** [ %12, %24 ], [ %34, %27 ]
  %39 = phi %"class.Ice::SmallBitVector"** [ %11, %24 ], [ %32, %27 ]
  %40 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %38, i64 %1
  %41 = icmp eq %"class.Ice::SmallBitVector"** %39, %40
  br i1 %41, label %51, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.Ice::SmallBitVector"** %39 to i8*
  %44 = ptrtoint %"class.Ice::SmallBitVector"** %39 to i64
  %45 = add i64 %1, -1
  %46 = getelementptr %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %38, i64 %45
  %47 = ptrtoint %"class.Ice::SmallBitVector"** %46 to i64
  %48 = sub i64 %47, %44
  %49 = add i64 %48, 8
  %50 = and i64 %49, -8
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 %50, i1 false)
  br label %51

51:                                               ; preds = %42, %35
  %52 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %36, align 8
  br label %53

53:                                               ; preds = %13, %51
  %54 = phi %"class.Ice::SmallBitVector"** [ %52, %51 ], [ %12, %13 ]
  %55 = phi %"class.Ice::SmallBitVector"*** [ %37, %51 ], [ %14, %13 ]
  %56 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %54, i64 %1
  store %"class.Ice::SmallBitVector"** %56, %"class.Ice::SmallBitVector"*** %55, align 8
  br label %57

57:                                               ; preds = %53, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan12addSpillFillERNS0_14IterationStateE(%"class.Ice::LinearScan"* nocapture readonly, %"class.Ice::LinearScan::IterationState"* dereferenceable(680)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %4 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %4, i64 0, i32 12, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %4, i64 0, i32 12, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 -1, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i32 [ %12, %10 ], [ -1, %2 ]
  %17 = phi i32 [ %14, %10 ], [ -1, %2 ]
  %18 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %19 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %18, align 8
  %20 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %19, i64 0, i32 24, i32 0, i32 0, i32 0
  %21 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %20, align 8
  %22 = tail call %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %21, %"class.Ice::Variable"* %4) #14
  %23 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %22, i64 0, i32 12, i32 0, i32 0
  %24 = getelementptr inbounds %"class.llvm::simple_ilist", %"class.llvm::simple_ilist"* %23, i64 0, i32 0, i32 0
  %25 = ptrtoint %"class.llvm::simple_ilist"* %23 to i64
  %26 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %22, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.llvm::ilist_node_base"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %28 to %"class.llvm::ilist_node_impl"*
  %30 = icmp eq %"class.llvm::ilist_node_impl"* %24, %29
  br i1 %30, label %44, label %31

31:                                               ; preds = %15
  %32 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %33 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %32 to %"class.Ice::SmallBitVector"***
  br label %34

34:                                               ; preds = %31, %205
  %35 = phi %"class.llvm::ilist_node_impl"* [ %29, %31 ], [ %209, %205 ]
  %36 = phi i64 [ %28, %31 ], [ %208, %205 ]
  %37 = phi i64 [ %25, %31 ], [ %124, %205 ]
  %38 = phi i64 [ %25, %31 ], [ %126, %205 ]
  %39 = inttoptr i64 %37 to %"class.llvm::ilist_node_impl"*
  %40 = icmp eq %"class.llvm::ilist_node_impl"* %24, %39
  %41 = inttoptr i64 %38 to %"class.llvm::ilist_node_impl"*
  %42 = icmp eq %"class.llvm::ilist_node_impl"* %24, %41
  %43 = or i1 %42, %40
  br i1 %43, label %116, label %44

44:                                               ; preds = %34, %205, %15
  %45 = phi i64 [ %25, %15 ], [ %126, %205 ], [ %38, %34 ]
  %46 = phi i64 [ %25, %15 ], [ %124, %205 ], [ %37, %34 ]
  %47 = inttoptr i64 %45 to %"class.llvm::ilist_node_impl"*
  %48 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %47, i64 0, i32 0, i32 1
  %49 = bitcast %"class.llvm::ilist_node_base"** %48 to %"class.llvm::ilist_node_impl"**
  %50 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %49, align 8
  %51 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 5, i32 0, i64 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %44
  %55 = tail call i64 @llvm.cttz.i64(i64 %52, i1 true) #11, !range !4
  %56 = trunc i64 %55 to i32
  br label %65

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 5, i32 0, i64 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = tail call i64 @llvm.cttz.i64(i64 %59, i1 true) #11, !range !4
  %63 = trunc i64 %62 to i32
  %64 = or i32 %63, 64
  br label %65

65:                                               ; preds = %54, %57, %61
  %66 = phi i32 [ %56, %54 ], [ %64, %61 ], [ -1, %57 ]
  %67 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %68 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %67, i64 0, i32 10, i32 0
  store i32 %66, i32* %68, align 4
  %69 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 2
  %70 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %69, align 8
  %71 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to %"class.Ice::Operand"**
  %72 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %71, align 8
  %73 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"class.Ice::TargetLowering"* %70 to %"class.Ice::Variable"* (%"class.Ice::TargetLowering"*, i32, i32)***
  %76 = load %"class.Ice::Variable"* (%"class.Ice::TargetLowering"*, i32, i32)**, %"class.Ice::Variable"* (%"class.Ice::TargetLowering"*, i32, i32)*** %75, align 8
  %77 = getelementptr inbounds %"class.Ice::Variable"* (%"class.Ice::TargetLowering"*, i32, i32)*, %"class.Ice::Variable"* (%"class.Ice::TargetLowering"*, i32, i32)** %76, i64 8
  %78 = load %"class.Ice::Variable"* (%"class.Ice::TargetLowering"*, i32, i32)*, %"class.Ice::Variable"* (%"class.Ice::TargetLowering"*, i32, i32)** %77, align 8
  %79 = tail call %"class.Ice::Variable"* %78(%"class.Ice::TargetLowering"* %70, i32 %66, i32 %74) #14
  %80 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %18, align 8
  %81 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %71, align 8
  %82 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = tail call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %80, i32 %83) #14
  %85 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %69, align 8
  %86 = inttoptr i64 %46 to %"class.llvm::ilist_node_impl"*
  %87 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %18, align 8
  %88 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %88, align 8
  %90 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %89, i64 104, i64 8) #14
  %91 = bitcast i8* %90 to %"class.Ice::InstFakeDef"*
  tail call void @_ZN3Ice11InstFakeDefC1EPNS_3CfgEPNS_8VariableES4_(%"class.Ice::InstFakeDef"* %91, %"class.Ice::Cfg"* %87, %"class.Ice::Variable"* %79, %"class.Ice::Variable"* null) #14
  %92 = bitcast i8* %90 to %"class.Ice::InstHighLevel"*
  tail call void @_ZN3Ice14TargetLowering9lowerInstEPNS_7CfgNodeEN4llvm14ilist_iteratorINS3_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEEPNS_13InstHighLevelE(%"class.Ice::TargetLowering"* %85, %"class.Ice::CfgNode"* %22, %"class.llvm::ilist_node_impl"* %86, %"class.Ice::InstHighLevel"* %92) #14
  %93 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %69, align 8
  %94 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %18, align 8
  %95 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %79, i64 0, i32 0
  %96 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %94, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %96, align 8
  %98 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %97, i64 104, i64 8) #14
  %99 = bitcast i8* %98 to %"class.Ice::InstAssign"*
  tail call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %99, %"class.Ice::Cfg"* %94, %"class.Ice::Variable"* %84, %"class.Ice::Operand"* %95) #14
  %100 = bitcast i8* %98 to %"class.Ice::InstHighLevel"*
  tail call void @_ZN3Ice14TargetLowering9lowerInstEPNS_7CfgNodeEN4llvm14ilist_iteratorINS3_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEEPNS_13InstHighLevelE(%"class.Ice::TargetLowering"* %93, %"class.Ice::CfgNode"* %22, %"class.llvm::ilist_node_impl"* %86, %"class.Ice::InstHighLevel"* %100) #14
  %101 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %69, align 8
  %102 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %18, align 8
  %103 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %84, i64 0, i32 0
  %104 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %104, align 8
  %106 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %105, i64 104, i64 8) #14
  %107 = bitcast i8* %106 to %"class.Ice::InstAssign"*
  tail call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %107, %"class.Ice::Cfg"* %102, %"class.Ice::Variable"* %79, %"class.Ice::Operand"* %103) #14
  %108 = bitcast i8* %106 to %"class.Ice::InstHighLevel"*
  tail call void @_ZN3Ice14TargetLowering9lowerInstEPNS_7CfgNodeEN4llvm14ilist_iteratorINS3_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEEPNS_13InstHighLevelE(%"class.Ice::TargetLowering"* %101, %"class.Ice::CfgNode"* %22, %"class.llvm::ilist_node_impl"* %50, %"class.Ice::InstHighLevel"* %108) #14
  %109 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %69, align 8
  %110 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %18, align 8
  %111 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %111, align 8
  %113 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %112, i64 104, i64 8) #14
  %114 = bitcast i8* %113 to %"class.Ice::InstFakeUse"*
  tail call void @_ZN3Ice11InstFakeUseC1EPNS_3CfgEPNS_8VariableEj(%"class.Ice::InstFakeUse"* %114, %"class.Ice::Cfg"* %110, %"class.Ice::Variable"* %79, i32 1) #14
  %115 = bitcast i8* %113 to %"class.Ice::InstHighLevel"*
  tail call void @_ZN3Ice14TargetLowering9lowerInstEPNS_7CfgNodeEN4llvm14ilist_iteratorINS3_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEEPNS_13InstHighLevelE(%"class.Ice::TargetLowering"* %109, %"class.Ice::CfgNode"* %22, %"class.llvm::ilist_node_impl"* %50, %"class.Ice::InstHighLevel"* %115) #14
  ret void

116:                                              ; preds = %34
  %117 = icmp eq i64 %36, 0
  %118 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %35, i64 -1, i32 0, i32 1
  %119 = bitcast %"class.llvm::ilist_node_base"** %118 to %"class.Ice::Inst"*
  %120 = select i1 %117, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %119
  %121 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %120, i64 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, %16
  %124 = select i1 %123, i64 %36, i64 %37
  %125 = icmp eq i32 %122, %17
  %126 = select i1 %125, i64 %36, i64 %38
  %127 = inttoptr i64 %124 to %"class.llvm::ilist_node_impl"*
  %128 = icmp eq %"class.llvm::ilist_node_impl"* %24, %127
  br i1 %128, label %205, label %129

129:                                              ; preds = %116
  %130 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %120, i64 0, i32 13
  %131 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %120, i64 0, i32 13, i32 0, i32 1
  %132 = bitcast %"class.Ice::Operand"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.std::__1::vector.216"* %130 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %133, %135
  %137 = lshr exact i64 %136, 3
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %205, label %140

140:                                              ; preds = %129
  %141 = inttoptr i64 %135 to %"class.Ice::Operand"**
  %142 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %120, i64 0, i32 13, i32 0, i32 0
  %143 = and i64 %137, 4294967295
  br label %144

144:                                              ; preds = %203, %140
  %145 = phi %"class.Ice::Operand"** [ %141, %140 ], [ %204, %203 ]
  %146 = phi i64 [ 0, %140 ], [ %201, %203 ]
  %147 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %145, i64 %146
  %148 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %147, align 8
  %149 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %148, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %200, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %148, i64 0, i32 4
  %154 = zext i32 %150 to i64
  br label %155

155:                                              ; preds = %197, %152
  %156 = phi i64 [ 0, %152 ], [ %198, %197 ]
  %157 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %153, align 8
  %158 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %157, i64 %156
  %159 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %158, align 8
  %160 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %159, i64 0, i32 10, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, -1
  br i1 %162, label %197, label %163

163:                                              ; preds = %155
  %164 = zext i32 %161 to i64
  %165 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %33, align 8
  %166 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %165, i64 %164
  %167 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %166, align 8
  %168 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %167, i64 0, i32 0, i64 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %163
  %172 = tail call i64 @llvm.cttz.i64(i64 %169, i1 true) #11, !range !4
  %173 = trunc i64 %172 to i32
  br label %182

174:                                              ; preds = %163
  %175 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %167, i64 0, i32 0, i64 1
  %176 = load i64, i64* %175, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %197, label %178

178:                                              ; preds = %174
  %179 = tail call i64 @llvm.cttz.i64(i64 %176, i1 true) #11, !range !4
  %180 = trunc i64 %179 to i32
  %181 = or i32 %180, 64
  br label %182

182:                                              ; preds = %171, %178
  %183 = phi i32 [ %173, %171 ], [ %181, %178 ]
  br label %184

184:                                              ; preds = %182, %184
  %185 = phi i32 [ %195, %184 ], [ %183, %182 ]
  %186 = lshr i32 %185, 6
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 5, i32 0, i64 %187
  %189 = and i32 %185, 63
  %190 = zext i32 %189 to i64
  %191 = shl i64 1, %190
  %192 = xor i64 %191, -1
  %193 = load i64, i64* %188, align 8
  %194 = and i64 %193, %192
  store i64 %194, i64* %188, align 8
  %195 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %167, i32 %185) #14
  %196 = icmp eq i32 %195, -1
  br i1 %196, label %197, label %184

197:                                              ; preds = %184, %174, %155
  %198 = add nuw nsw i64 %156, 1
  %199 = icmp eq i64 %198, %154
  br i1 %199, label %200, label %155

200:                                              ; preds = %197, %144
  %201 = add nuw nsw i64 %146, 1
  %202 = icmp eq i64 %201, %143
  br i1 %202, label %205, label %203

203:                                              ; preds = %200
  %204 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %142, align 8
  br label %144

205:                                              ; preds = %200, %129, %116
  %206 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %35, i64 0, i32 0, i32 1
  %207 = bitcast %"class.llvm::ilist_node_base"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = inttoptr i64 %208 to %"class.llvm::ilist_node_impl"*
  %210 = icmp eq %"class.llvm::ilist_node_impl"* %24, %209
  br i1 %210, label %44, label %34
}

; Function Attrs: optsize
declare %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"*, i32) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN3Ice14TargetLowering9lowerInstEPNS_7CfgNodeEN4llvm14ilist_iteratorINS3_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEEPNS_13InstHighLevelE(%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*, %"class.llvm::ilist_node_impl"*, %"class.Ice::InstHighLevel"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan34handleActiveRangeExpiredOrInactiveEPKNS_8VariableE(%"class.Ice::LinearScan"*, %"class.Ice::Variable"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %5 = bitcast %"class.Ice::Variable"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.201"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %39, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %8 to %"class.Ice::Variable"**
  %15 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12
  %17 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 1
  %22 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.Ice::Variable"*** %21 to i64*
  %24 = bitcast %"class.std::__1::vector.201"* %20 to i64*
  %25 = bitcast %"class.Ice::Variable"*** %22 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %20, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %29 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.Ice::Variable"*** %28 to i64*
  %31 = bitcast %"class.std::__1::vector.201"* %27 to i64*
  %32 = bitcast %"class.Ice::Variable"*** %29 to i64*
  %33 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %27, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %35 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %34 to %"class.Ice::SmallBitVector"***
  %36 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %37 = bitcast %"class.llvm::SmallVector.284"* %36 to i32**
  %38 = and i64 %10, 4294967295
  br label %40

39:                                               ; preds = %235, %2
  ret void

40:                                               ; preds = %237, %13
  %41 = phi %"class.Ice::Variable"** [ %14, %13 ], [ %239, %237 ]
  %42 = phi i64 [ %38, %13 ], [ %238, %237 ]
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, -1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %41, i64 %45
  %47 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %46, align 8
  %48 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %50 = icmp eq %"struct.std::__1::pair"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %40, %51
  %55 = phi i32 [ %53, %51 ], [ -1, %40 ]
  %56 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %47, i64 0, i32 12
  tail call void @_ZN3Ice9LiveRange4trimEi(%"class.Ice::LiveRange"* %56, i32 %55) #14
  %57 = tail call zeroext i1 @_ZNK3Ice9LiveRange10endsBeforeERKS0_(%"class.Ice::LiveRange"* %56, %"class.Ice::LiveRange"* dereferenceable(96) %16) #14
  br i1 %57, label %58, label %121

58:                                               ; preds = %54
  %59 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  %60 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %59, i64 %45
  %61 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %28, align 8
  %62 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %29, align 8
  %63 = icmp eq %"class.Ice::Variable"** %61, %62
  %64 = ptrtoint %"class.Ice::Variable"** %62 to i64
  br i1 %63, label %71, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.Ice::Variable"** %60 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.Ice::Variable"** %61 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %61, i64 1
  %70 = ptrtoint %"class.Ice::Variable"** %69 to i64
  store i64 %70, i64* %30, align 8
  br label %194

71:                                               ; preds = %58
  %72 = ptrtoint %"class.Ice::Variable"** %61 to i64
  %73 = load i64, i64* %31, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 2305843009213693951
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::vector.201"* %27 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #13
  unreachable

80:                                               ; preds = %71
  %81 = sub i64 %64, %73
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %82, 1152921504606846975
  br i1 %83, label %84, label %89

84:                                               ; preds = %80
  %85 = ashr exact i64 %81, 2
  %86 = icmp ult i64 %85, %76
  %87 = select i1 %86, i64 %76, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %84, %80
  %90 = phi i64 [ %87, %84 ], [ 2305843009213693951, %80 ]
  %91 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %92 = shl i64 %90, 3
  %93 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %91, i64 %92, i64 8) #14
  %94 = bitcast i8* %93 to %"class.Ice::Variable"**
  br label %95

95:                                               ; preds = %89, %84
  %96 = phi i64 [ %90, %89 ], [ 0, %84 ]
  %97 = phi %"class.Ice::Variable"** [ %94, %89 ], [ null, %84 ]
  %98 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %97, i64 %75
  %99 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %97, i64 %96
  %100 = ptrtoint %"class.Ice::Variable"** %99 to i64
  %101 = bitcast %"class.Ice::Variable"** %60 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.Ice::Variable"** %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %98, i64 1
  %105 = ptrtoint %"class.Ice::Variable"** %104 to i64
  %106 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %33, align 8
  %107 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %28, align 8
  %108 = icmp eq %"class.Ice::Variable"** %107, %106
  br i1 %108, label %118, label %109

109:                                              ; preds = %95, %109
  %110 = phi %"class.Ice::Variable"** [ %112, %109 ], [ %98, %95 ]
  %111 = phi %"class.Ice::Variable"** [ %113, %109 ], [ %107, %95 ]
  %112 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %110, i64 -1
  %113 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %111, i64 -1
  %114 = bitcast %"class.Ice::Variable"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.Ice::Variable"** %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = icmp eq %"class.Ice::Variable"** %113, %106
  br i1 %117, label %118, label %109

118:                                              ; preds = %109, %95
  %119 = phi %"class.Ice::Variable"** [ %98, %95 ], [ %112, %109 ]
  %120 = ptrtoint %"class.Ice::Variable"** %119 to i64
  store i64 %120, i64* %31, align 8
  store i64 %105, i64* %30, align 8
  store i64 %100, i64* %32, align 8
  br label %194

121:                                              ; preds = %54
  %122 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %123 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %124 = icmp eq %"struct.std::__1::pair"* %122, %123
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br label %128

128:                                              ; preds = %121, %125
  %129 = phi i32 [ %127, %125 ], [ -1, %121 ]
  %130 = tail call zeroext i1 @_ZNK3Ice9LiveRange12overlapsInstEib(%"class.Ice::LiveRange"* %56, i32 %129, i1 zeroext true) #14
  br i1 %130, label %235, label %131

131:                                              ; preds = %128
  %132 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  %133 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %132, i64 %45
  %134 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  %135 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %22, align 8
  %136 = icmp eq %"class.Ice::Variable"** %134, %135
  %137 = ptrtoint %"class.Ice::Variable"** %135 to i64
  br i1 %136, label %144, label %138

138:                                              ; preds = %131
  %139 = bitcast %"class.Ice::Variable"** %133 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.Ice::Variable"** %134 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %134, i64 1
  %143 = ptrtoint %"class.Ice::Variable"** %142 to i64
  store i64 %143, i64* %23, align 8
  br label %194

144:                                              ; preds = %131
  %145 = ptrtoint %"class.Ice::Variable"** %134 to i64
  %146 = load i64, i64* %24, align 8
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 3
  %149 = add nsw i64 %148, 1
  %150 = icmp ugt i64 %149, 2305843009213693951
  br i1 %150, label %151, label %153

151:                                              ; preds = %144
  %152 = bitcast %"class.std::__1::vector.201"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %152) #13
  unreachable

153:                                              ; preds = %144
  %154 = sub i64 %137, %146
  %155 = ashr exact i64 %154, 3
  %156 = icmp ult i64 %155, 1152921504606846975
  br i1 %156, label %157, label %162

157:                                              ; preds = %153
  %158 = ashr exact i64 %154, 2
  %159 = icmp ult i64 %158, %149
  %160 = select i1 %159, i64 %149, i64 %158
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %157, %153
  %163 = phi i64 [ %160, %157 ], [ 2305843009213693951, %153 ]
  %164 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %165 = shl i64 %163, 3
  %166 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %164, i64 %165, i64 8) #14
  %167 = bitcast i8* %166 to %"class.Ice::Variable"**
  br label %168

168:                                              ; preds = %162, %157
  %169 = phi i64 [ %163, %162 ], [ 0, %157 ]
  %170 = phi %"class.Ice::Variable"** [ %167, %162 ], [ null, %157 ]
  %171 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %170, i64 %148
  %172 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %170, i64 %169
  %173 = ptrtoint %"class.Ice::Variable"** %172 to i64
  %174 = bitcast %"class.Ice::Variable"** %133 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.Ice::Variable"** %171 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %171, i64 1
  %178 = ptrtoint %"class.Ice::Variable"** %177 to i64
  %179 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %26, align 8
  %180 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  %181 = icmp eq %"class.Ice::Variable"** %180, %179
  br i1 %181, label %191, label %182

182:                                              ; preds = %168, %182
  %183 = phi %"class.Ice::Variable"** [ %185, %182 ], [ %171, %168 ]
  %184 = phi %"class.Ice::Variable"** [ %186, %182 ], [ %180, %168 ]
  %185 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %183, i64 -1
  %186 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %184, i64 -1
  %187 = bitcast %"class.Ice::Variable"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.Ice::Variable"** %185 to i64*
  store i64 %188, i64* %189, align 8
  %190 = icmp eq %"class.Ice::Variable"** %186, %179
  br i1 %190, label %191, label %182

191:                                              ; preds = %182, %168
  %192 = phi %"class.Ice::Variable"** [ %171, %168 ], [ %185, %182 ]
  %193 = ptrtoint %"class.Ice::Variable"** %192 to i64
  store i64 %193, i64* %24, align 8
  store i64 %178, i64* %23, align 8
  store i64 %173, i64* %25, align 8
  br label %194

194:                                              ; preds = %191, %138, %118, %65
  %195 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %196 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %195, i64 -1
  %197 = bitcast %"class.Ice::Variable"** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  %200 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %199, i64 %45
  %201 = bitcast %"class.Ice::Variable"** %200 to i64*
  store i64 %198, i64* %201, align 8
  %202 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %203 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %202, i64 -1
  store %"class.Ice::Variable"** %203, %"class.Ice::Variable"*** %4, align 8
  %204 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %47, i64 0, i32 10, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i64
  %207 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %35, align 8
  %208 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %207, i64 %206
  %209 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %208, align 8
  %210 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %209, i64 0, i32 0, i64 0
  %211 = load i64, i64* %210, align 8
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %194
  %214 = tail call i64 @llvm.cttz.i64(i64 %211, i1 true) #11, !range !4
  %215 = trunc i64 %214 to i32
  br label %224

216:                                              ; preds = %194
  %217 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %209, i64 0, i32 0, i64 1
  %218 = load i64, i64* %217, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %235, label %220

220:                                              ; preds = %216
  %221 = tail call i64 @llvm.cttz.i64(i64 %218, i1 true) #11, !range !4
  %222 = trunc i64 %221 to i32
  %223 = or i32 %222, 64
  br label %224

224:                                              ; preds = %213, %220
  %225 = phi i32 [ %215, %213 ], [ %223, %220 ]
  br label %226

226:                                              ; preds = %224, %226
  %227 = phi i32 [ %233, %226 ], [ %225, %224 ]
  %228 = zext i32 %227 to i64
  %229 = load i32*, i32** %37, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 %228
  %231 = load i32, i32* %230, align 4
  %232 = add nsw i32 %231, -1
  store i32 %232, i32* %230, align 4
  %233 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %209, i32 %227) #14
  %234 = icmp eq i32 %233, -1
  br i1 %234, label %235, label %226

235:                                              ; preds = %226, %216, %128
  %236 = icmp eq i32 %44, 0
  br i1 %236, label %39, label %237

237:                                              ; preds = %235
  %238 = add nsw i64 %42, -1
  %239 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  br label %40
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3Ice10LinearScan18dumpLiveRangeTraceEPKcPKNS_8VariableE(%"class.Ice::LinearScan"* nocapture, i8* nocapture, %"class.Ice::Variable"* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan39handleInactiveRangeExpiredOrReactivatedEPKNS_8VariableE(%"class.Ice::LinearScan"*, %"class.Ice::Variable"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 1
  %5 = bitcast %"class.Ice::Variable"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.201"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %39, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %8 to %"class.Ice::Variable"**
  %15 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12
  %17 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %22 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.Ice::Variable"*** %21 to i64*
  %24 = bitcast %"class.std::__1::vector.201"* %20 to i64*
  %25 = bitcast %"class.Ice::Variable"*** %22 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %20, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %28 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %27 to %"class.Ice::SmallBitVector"***
  %29 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %30 = bitcast %"class.llvm::SmallVector.284"* %29 to i32**
  %31 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %33 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.Ice::Variable"*** %32 to i64*
  %35 = bitcast %"class.std::__1::vector.201"* %31 to i64*
  %36 = bitcast %"class.Ice::Variable"*** %33 to i64*
  %37 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %31, i64 0, i32 0, i32 0
  %38 = and i64 %10, 4294967295
  br label %40

39:                                               ; preds = %245, %2
  ret void

40:                                               ; preds = %247, %13
  %41 = phi %"class.Ice::Variable"** [ %14, %13 ], [ %249, %247 ]
  %42 = phi i64 [ %38, %13 ], [ %248, %247 ]
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, -1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %41, i64 %45
  %47 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %46, align 8
  %48 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %50 = icmp eq %"struct.std::__1::pair"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %40, %51
  %55 = phi i32 [ %53, %51 ], [ -1, %40 ]
  %56 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %47, i64 0, i32 12
  tail call void @_ZN3Ice9LiveRange4trimEi(%"class.Ice::LiveRange"* %56, i32 %55) #14
  %57 = tail call zeroext i1 @_ZNK3Ice9LiveRange10endsBeforeERKS0_(%"class.Ice::LiveRange"* %56, %"class.Ice::LiveRange"* dereferenceable(96) %16) #14
  br i1 %57, label %58, label %131

58:                                               ; preds = %54
  %59 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  %60 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %59, i64 %45
  %61 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %32, align 8
  %62 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %33, align 8
  %63 = icmp eq %"class.Ice::Variable"** %61, %62
  %64 = ptrtoint %"class.Ice::Variable"** %62 to i64
  br i1 %63, label %71, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.Ice::Variable"** %60 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.Ice::Variable"** %61 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %61, i64 1
  %70 = ptrtoint %"class.Ice::Variable"** %69 to i64
  store i64 %70, i64* %34, align 8
  br label %121

71:                                               ; preds = %58
  %72 = ptrtoint %"class.Ice::Variable"** %61 to i64
  %73 = load i64, i64* %35, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 2305843009213693951
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::vector.201"* %31 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #13
  unreachable

80:                                               ; preds = %71
  %81 = sub i64 %64, %73
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %82, 1152921504606846975
  br i1 %83, label %84, label %89

84:                                               ; preds = %80
  %85 = ashr exact i64 %81, 2
  %86 = icmp ult i64 %85, %76
  %87 = select i1 %86, i64 %76, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %84, %80
  %90 = phi i64 [ %87, %84 ], [ 2305843009213693951, %80 ]
  %91 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %92 = shl i64 %90, 3
  %93 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %91, i64 %92, i64 8) #14
  %94 = bitcast i8* %93 to %"class.Ice::Variable"**
  br label %95

95:                                               ; preds = %89, %84
  %96 = phi i64 [ %90, %89 ], [ 0, %84 ]
  %97 = phi %"class.Ice::Variable"** [ %94, %89 ], [ null, %84 ]
  %98 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %97, i64 %75
  %99 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %97, i64 %96
  %100 = ptrtoint %"class.Ice::Variable"** %99 to i64
  %101 = bitcast %"class.Ice::Variable"** %60 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.Ice::Variable"** %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %98, i64 1
  %105 = ptrtoint %"class.Ice::Variable"** %104 to i64
  %106 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %37, align 8
  %107 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %32, align 8
  %108 = icmp eq %"class.Ice::Variable"** %107, %106
  br i1 %108, label %118, label %109

109:                                              ; preds = %95, %109
  %110 = phi %"class.Ice::Variable"** [ %112, %109 ], [ %98, %95 ]
  %111 = phi %"class.Ice::Variable"** [ %113, %109 ], [ %107, %95 ]
  %112 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %110, i64 -1
  %113 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %111, i64 -1
  %114 = bitcast %"class.Ice::Variable"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.Ice::Variable"** %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = icmp eq %"class.Ice::Variable"** %113, %106
  br i1 %117, label %118, label %109

118:                                              ; preds = %109, %95
  %119 = phi %"class.Ice::Variable"** [ %98, %95 ], [ %112, %109 ]
  %120 = ptrtoint %"class.Ice::Variable"** %119 to i64
  store i64 %120, i64* %35, align 8
  store i64 %105, i64* %34, align 8
  store i64 %100, i64* %36, align 8
  br label %121

121:                                              ; preds = %65, %118
  %122 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %123 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %122, i64 -1
  %124 = bitcast %"class.Ice::Variable"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  %127 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %126, i64 %45
  %128 = bitcast %"class.Ice::Variable"** %127 to i64*
  store i64 %125, i64* %128, align 8
  %129 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %130 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %129, i64 -1
  store %"class.Ice::Variable"** %130, %"class.Ice::Variable"*** %4, align 8
  br label %245

131:                                              ; preds = %54
  %132 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %133 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %134 = icmp eq %"struct.std::__1::pair"* %132, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %132, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br label %138

138:                                              ; preds = %131, %135
  %139 = phi i32 [ %137, %135 ], [ -1, %131 ]
  %140 = tail call zeroext i1 @_ZNK3Ice9LiveRange12overlapsInstEib(%"class.Ice::LiveRange"* %56, i32 %139, i1 zeroext true) #14
  br i1 %140, label %141, label %245

141:                                              ; preds = %138
  %142 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  %143 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %142, i64 %45
  %144 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  %145 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %22, align 8
  %146 = icmp eq %"class.Ice::Variable"** %144, %145
  %147 = ptrtoint %"class.Ice::Variable"** %145 to i64
  br i1 %146, label %154, label %148

148:                                              ; preds = %141
  %149 = bitcast %"class.Ice::Variable"** %143 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.Ice::Variable"** %144 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %144, i64 1
  %153 = ptrtoint %"class.Ice::Variable"** %152 to i64
  store i64 %153, i64* %23, align 8
  br label %204

154:                                              ; preds = %141
  %155 = ptrtoint %"class.Ice::Variable"** %144 to i64
  %156 = load i64, i64* %24, align 8
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 3
  %159 = add nsw i64 %158, 1
  %160 = icmp ugt i64 %159, 2305843009213693951
  br i1 %160, label %161, label %163

161:                                              ; preds = %154
  %162 = bitcast %"class.std::__1::vector.201"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %162) #13
  unreachable

163:                                              ; preds = %154
  %164 = sub i64 %147, %156
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %167, label %172

167:                                              ; preds = %163
  %168 = ashr exact i64 %164, 2
  %169 = icmp ult i64 %168, %159
  %170 = select i1 %169, i64 %159, i64 %168
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %167, %163
  %173 = phi i64 [ %170, %167 ], [ 2305843009213693951, %163 ]
  %174 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %175 = shl i64 %173, 3
  %176 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %174, i64 %175, i64 8) #14
  %177 = bitcast i8* %176 to %"class.Ice::Variable"**
  br label %178

178:                                              ; preds = %172, %167
  %179 = phi i64 [ %173, %172 ], [ 0, %167 ]
  %180 = phi %"class.Ice::Variable"** [ %177, %172 ], [ null, %167 ]
  %181 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %180, i64 %158
  %182 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %180, i64 %179
  %183 = ptrtoint %"class.Ice::Variable"** %182 to i64
  %184 = bitcast %"class.Ice::Variable"** %143 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.Ice::Variable"** %181 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %181, i64 1
  %188 = ptrtoint %"class.Ice::Variable"** %187 to i64
  %189 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %26, align 8
  %190 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  %191 = icmp eq %"class.Ice::Variable"** %190, %189
  br i1 %191, label %201, label %192

192:                                              ; preds = %178, %192
  %193 = phi %"class.Ice::Variable"** [ %195, %192 ], [ %181, %178 ]
  %194 = phi %"class.Ice::Variable"** [ %196, %192 ], [ %190, %178 ]
  %195 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %193, i64 -1
  %196 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %194, i64 -1
  %197 = bitcast %"class.Ice::Variable"** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.Ice::Variable"** %195 to i64*
  store i64 %198, i64* %199, align 8
  %200 = icmp eq %"class.Ice::Variable"** %196, %189
  br i1 %200, label %201, label %192

201:                                              ; preds = %192, %178
  %202 = phi %"class.Ice::Variable"** [ %181, %178 ], [ %195, %192 ]
  %203 = ptrtoint %"class.Ice::Variable"** %202 to i64
  store i64 %203, i64* %24, align 8
  store i64 %188, i64* %23, align 8
  store i64 %183, i64* %25, align 8
  br label %204

204:                                              ; preds = %148, %201
  %205 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %206 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %205, i64 -1
  %207 = bitcast %"class.Ice::Variable"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  %210 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %209, i64 %45
  %211 = bitcast %"class.Ice::Variable"** %210 to i64*
  store i64 %208, i64* %211, align 8
  %212 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %213 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %212, i64 -1
  store %"class.Ice::Variable"** %213, %"class.Ice::Variable"*** %4, align 8
  %214 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %47, i64 0, i32 10, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i64
  %217 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %28, align 8
  %218 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %217, i64 %216
  %219 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %218, align 8
  %220 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %219, i64 0, i32 0, i64 0
  %221 = load i64, i64* %220, align 8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %204
  %224 = tail call i64 @llvm.cttz.i64(i64 %221, i1 true) #11, !range !4
  %225 = trunc i64 %224 to i32
  br label %234

226:                                              ; preds = %204
  %227 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %219, i64 0, i32 0, i64 1
  %228 = load i64, i64* %227, align 8
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %245, label %230

230:                                              ; preds = %226
  %231 = tail call i64 @llvm.cttz.i64(i64 %228, i1 true) #11, !range !4
  %232 = trunc i64 %231 to i32
  %233 = or i32 %232, 64
  br label %234

234:                                              ; preds = %223, %230
  %235 = phi i32 [ %225, %223 ], [ %233, %230 ]
  br label %236

236:                                              ; preds = %234, %236
  %237 = phi i32 [ %243, %236 ], [ %235, %234 ]
  %238 = zext i32 %237 to i64
  %239 = load i32*, i32** %30, align 8
  %240 = getelementptr inbounds i32, i32* %239, i64 %238
  %241 = load i32, i32* %240, align 4
  %242 = add nsw i32 %241, 1
  store i32 %242, i32* %240, align 4
  %243 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %219, i32 %237) #14
  %244 = icmp eq i32 %243, -1
  br i1 %244, label %245, label %236

245:                                              ; preds = %236, %226, %138, %121
  %246 = icmp eq i32 %44, 0
  br i1 %246, label %39, label %247

247:                                              ; preds = %245
  %248 = add nsw i64 %42, -1
  %249 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %15, align 8
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan22findRegisterPreferenceERNS0_14IterationStateE(%"class.Ice::LinearScan"* nocapture readonly, %"class.Ice::LinearScan::IterationState"* dereferenceable(680)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Ice::SmallBitVector", align 16
  %4 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 1
  store %"class.Ice::Variable"* null, %"class.Ice::Variable"** %4, align 8
  %5 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 2, i32 0
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 3
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 14
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %146, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %12 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %12, i64 0, i32 24, i32 0, i32 0, i32 0
  %14 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %13, align 8
  %15 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %16 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %15, align 8
  %17 = tail call %"class.Ice::Inst"* @_ZNK3Ice17VariablesMetadata29getFirstDefinitionSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %14, %"class.Ice::Variable"* %16) #14
  %18 = icmp eq %"class.Ice::Inst"* %17, null
  br i1 %18, label %146, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.Ice::Inst"* %17 to i1 (%"class.Ice::Inst"*)***
  %21 = load i1 (%"class.Ice::Inst"*)**, i1 (%"class.Ice::Inst"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %21, i64 4
  %23 = load i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.Ice::Inst"* nonnull %17) #14
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %15, align 8
  %27 = tail call zeroext i1 @_ZNK3Ice17VariablesMetadata10isMultiDefEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %14, %"class.Ice::Variable"* %26) #14
  br label %28

28:                                               ; preds = %25, %19
  %29 = phi i1 [ true, %19 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %17, i64 0, i32 13
  %31 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %17, i64 0, i32 13, i32 0, i32 1
  %32 = bitcast %"class.Ice::Operand"*** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.216"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = lshr exact i64 %36, 3
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %146, label %40

40:                                               ; preds = %28
  %41 = inttoptr i64 %35 to %"class.Ice::Operand"**
  %42 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %17, i64 0, i32 13, i32 0, i32 0
  %43 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %44 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %43 to %"class.Ice::SmallBitVector"***
  %45 = bitcast %"class.Ice::SmallBitVector"* %3 to i8*
  %46 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %3, i64 0, i32 1
  %47 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 5, i32 1
  %48 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %3, i64 0, i32 0, i64 0
  %49 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %3, i64 0, i32 0, i64 1
  %50 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 15
  %51 = and i64 %37, 4294967295
  %52 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 5, i32 0, i64 0
  %53 = bitcast i64* %52 to <2 x i64>*
  %54 = bitcast %"class.Ice::SmallBitVector"* %3 to <2 x i64>*
  br label %55

55:                                               ; preds = %144, %40
  %56 = phi %"class.Ice::Operand"** [ %41, %40 ], [ %145, %144 ]
  %57 = phi i64 [ 0, %40 ], [ %142, %144 ]
  %58 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %56, i64 %57
  %59 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %58, align 8
  %60 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %141, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %59, i64 0, i32 4
  %65 = zext i32 %61 to i64
  br label %66

66:                                               ; preds = %63, %138
  %67 = phi i64 [ 0, %63 ], [ %139, %138 ]
  %68 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %64, align 8
  %69 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %68, i64 %67
  %70 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %69, align 8
  %71 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 10, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %138, label %74

74:                                               ; preds = %66
  %75 = zext i32 %72 to i64
  %76 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %44, align 8
  %77 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %76, i64 %75
  %78 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %77, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -86, i64 24, i1 false) #11, !alias.scope !5
  %79 = load i32, i32* %47, align 8, !noalias !5
  %80 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %78, i64 0, i32 1
  %81 = load i32, i32* %80, align 8, !noalias !5
  %82 = icmp ult i32 %79, %81
  %83 = select i1 %82, i32 %81, i32 %79
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 0, i64 16, i1 false) #11, !alias.scope !5
  store i32 %83, i32* %46, align 16, !alias.scope !5
  %84 = load <2 x i64>, <2 x i64>* %53, align 8, !noalias !5
  %85 = bitcast %"class.Ice::SmallBitVector"* %78 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !noalias !5
  %87 = and <2 x i64> %86, %84
  store <2 x i64> %87, <2 x i64>* %54, align 16, !alias.scope !5
  %88 = load i64, i64* %48, align 16
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %74
  %91 = tail call i64 @llvm.cttz.i64(i64 %88, i1 true) #11, !range !4
  %92 = trunc i64 %91 to i32
  br label %101

93:                                               ; preds = %74
  %94 = load i64, i64* %49, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = tail call i64 @llvm.cttz.i64(i64 %94, i1 true) #11, !range !4
  %98 = trunc i64 %97 to i32
  %99 = or i32 %98, 64
  br label %101

100:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  br label %138

101:                                              ; preds = %90, %96
  %102 = phi i32 [ %99, %96 ], [ %92, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %103 = load i8, i8* %50, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = or i1 %29, %104
  br i1 %105, label %122, label %106

106:                                              ; preds = %101
  %107 = lshr i32 %102, 6
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 7, i32 0, i64 %108
  %110 = and i32 %102, 63
  %111 = load i64, i64* %109, align 8
  %112 = zext i32 %110 to i64
  %113 = shl i64 1, %112
  %114 = and i64 %111, %113
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %106
  %117 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %11, align 8
  %118 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %15, align 8
  %119 = tail call fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112overlapsDefsEPKNS_3CfgEPKNS_8VariableES6_(%"class.Ice::Cfg"* %117, %"class.Ice::Variable"* %118, %"class.Ice::Variable"* %70) #12
  %120 = xor i1 %119, true
  %121 = zext i1 %120 to i8
  store i8 %121, i8* %6, align 4
  br label %124

122:                                              ; preds = %106, %101
  %123 = load i8, i8* %6, align 4
  br label %124

124:                                              ; preds = %122, %116
  %125 = phi i8 [ %123, %122 ], [ %121, %116 ]
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %137

127:                                              ; preds = %124
  %128 = lshr i32 %102, 6
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 7, i32 0, i64 %129
  %131 = and i32 %102, 63
  %132 = load i64, i64* %130, align 8
  %133 = zext i32 %131 to i64
  %134 = shl i64 1, %133
  %135 = and i64 %132, %134
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %138, label %137

137:                                              ; preds = %127, %124
  store %"class.Ice::Variable"* %70, %"class.Ice::Variable"** %4, align 8
  store i32 %102, i32* %5, align 8
  br label %146

138:                                              ; preds = %127, %66, %100
  %139 = add nuw nsw i64 %67, 1
  %140 = icmp ult i64 %139, %65
  br i1 %140, label %66, label %141

141:                                              ; preds = %138, %55
  %142 = add nuw nsw i64 %57, 1
  %143 = icmp ult i64 %142, %51
  br i1 %143, label %144, label %146

144:                                              ; preds = %141
  %145 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %42, align 8
  br label %55

146:                                              ; preds = %141, %137, %28, %10, %2
  ret void
}

; Function Attrs: optsize
declare %"class.Ice::Inst"* @_ZNK3Ice17VariablesMetadata29getFirstDefinitionSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #4

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice17VariablesMetadata10isMultiDefEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112overlapsDefsEPKNS_3CfgEPKNS_8VariableES6_(%"class.Ice::Cfg"* nocapture readonly, %"class.Ice::Variable"*, %"class.Ice::Variable"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %5 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %4, align 8
  %6 = tail call %"class.Ice::Inst"* @_ZNK3Ice17VariablesMetadata18getFirstDefinitionEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %5, %"class.Ice::Variable"* %2) #14
  %7 = icmp eq %"class.Ice::Inst"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12
  %10 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %6, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZNK3Ice9LiveRange12overlapsInstEib(%"class.Ice::LiveRange"* %9, i32 %11, i1 zeroext true) #14
  br i1 %12, label %31, label %13

13:                                               ; preds = %8, %3
  %14 = tail call dereferenceable(32) %"class.std::__1::vector.230"* @_ZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %5, %"class.Ice::Variable"* %2) #14
  %15 = getelementptr inbounds %"class.std::__1::vector.230", %"class.std::__1::vector.230"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.230", %"class.std::__1::vector.230"* %14, i64 0, i32 0, i32 1
  %18 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %17, align 8
  %19 = icmp eq %"class.Ice::Inst"** %16, %18
  br i1 %19, label %31, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 12
  br label %24

22:                                               ; preds = %24
  %23 = icmp eq %"class.Ice::Inst"** %30, %18
  br i1 %23, label %31, label %24

24:                                               ; preds = %20, %22
  %25 = phi %"class.Ice::Inst"** [ %16, %20 ], [ %30, %22 ]
  %26 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %25, align 8
  %27 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %26, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZNK3Ice9LiveRange12overlapsInstEib(%"class.Ice::LiveRange"* %21, i32 %28, i1 zeroext true) #14
  %30 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %25, i64 1
  br i1 %29, label %31, label %22

31:                                               ; preds = %22, %24, %13, %8
  %32 = phi i1 [ true, %8 ], [ false, %13 ], [ false, %22 ], [ true, %24 ]
  ret i1 %32
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan28filterFreeWithInactiveRangesERNS0_14IterationStateE(%"class.Ice::LinearScan"* nocapture readonly, %"class.Ice::LinearScan::IterationState"* dereferenceable(680)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %5, align 8
  %7 = icmp eq %"class.Ice::Variable"** %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %10 to %"class.Ice::SmallBitVector"***
  %12 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 3
  %13 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  br label %17

16:                                               ; preds = %77, %2
  ret void

17:                                               ; preds = %8, %77
  %18 = phi %"class.Ice::Variable"** [ %4, %8 ], [ %78, %77 ]
  %19 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %18, align 8
  %20 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %21 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %19, i64 0, i32 12
  %22 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %20, i64 0, i32 12
  %23 = tail call zeroext i1 @_ZNK3Ice9LiveRange8overlapsERKS0_b(%"class.Ice::LiveRange"* %21, %"class.Ice::LiveRange"* dereferenceable(96) %22, i1 zeroext true) #14
  br i1 %23, label %24, label %77

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %19, i64 0, i32 10, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %11, align 8
  %29 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %28, i64 %27
  %30 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %29, align 8
  %31 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %30, i64 0, i32 0, i64 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %24
  %35 = tail call i64 @llvm.cttz.i64(i64 %32, i1 true) #11, !range !4
  %36 = trunc i64 %35 to i32
  br label %45

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %30, i64 0, i32 0, i64 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %77, label %41

41:                                               ; preds = %37
  %42 = tail call i64 @llvm.cttz.i64(i64 %39, i1 true) #11, !range !4
  %43 = trunc i64 %42 to i32
  %44 = or i32 %43, 64
  br label %45

45:                                               ; preds = %34, %41
  %46 = phi i32 [ %36, %34 ], [ %44, %41 ]
  br label %47

47:                                               ; preds = %45, %74
  %48 = phi i32 [ %75, %74 ], [ %46, %45 ]
  %49 = lshr i32 %48, 6
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 7, i32 0, i64 %50
  %52 = and i32 %48, 63
  %53 = zext i32 %52 to i64
  %54 = shl i64 1, %53
  %55 = xor i64 %54, -1
  %56 = load i64, i64* %51, align 8
  %57 = and i64 %56, %55
  store i64 %57, i64* %51, align 8
  %58 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 8, i32 0, i64 %50
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, %55
  store i64 %60, i64* %58, align 8
  %61 = load i8, i8* %12, align 4, !range !2
  %62 = icmp ne i8 %61, 0
  %63 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %13, align 8
  %64 = icmp ne %"class.Ice::Variable"* %19, %63
  %65 = and i1 %64, %62
  %66 = load i32, i32* %14, align 4
  %67 = icmp eq i32 %48, %66
  %68 = and i1 %65, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %47
  %70 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %15, align 8
  %71 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %72 = tail call fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112overlapsDefsEPKNS_3CfgEPKNS_8VariableES6_(%"class.Ice::Cfg"* %70, %"class.Ice::Variable"* %71, %"class.Ice::Variable"* %19) #12
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  store i8 0, i8* %12, align 4
  br label %74

74:                                               ; preds = %47, %73, %69
  %75 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %30, i32 %48) #14
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %47

77:                                               ; preds = %74, %37, %17
  %78 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %18, i64 1
  %79 = icmp eq %"class.Ice::Variable"** %78, %6
  br i1 %79, label %16, label %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan30filterFreeWithPrecoloredRangesERNS0_14IterationStateE(%"class.Ice::LinearScan"* nocapture readonly, %"class.Ice::LinearScan::IterationState"* dereferenceable(680)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 1
  %4 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %3, align 8, !noalias !8
  %5 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %5, align 8, !noalias !8
  %7 = icmp eq %"class.Ice::Variable"** %4, %6
  br i1 %7, label %82, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %10 to %"class.Ice::SmallBitVector"***
  %12 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 10
  %13 = bitcast %"class.llvm::SmallVector.372"* %12 to %"class.Ice::RegWeight"**
  %14 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 2, i32 0
  br label %16

16:                                               ; preds = %8, %80
  %17 = phi %"class.Ice::Variable"** [ %4, %8 ], [ %18, %80 ]
  %18 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %17, i64 -1
  %19 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %18, align 8
  %20 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %21 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %20, i64 0, i32 12
  %22 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %19, i64 0, i32 12
  %23 = tail call zeroext i1 @_ZNK3Ice9LiveRange10endsBeforeERKS0_(%"class.Ice::LiveRange"* %21, %"class.Ice::LiveRange"* dereferenceable(96) %22) #14
  br i1 %23, label %82, label %24

24:                                               ; preds = %16
  %25 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %26 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %25, i64 0, i32 12
  %27 = tail call zeroext i1 @_ZNK3Ice9LiveRange8overlapsERKS0_b(%"class.Ice::LiveRange"* %22, %"class.Ice::LiveRange"* dereferenceable(96) %26, i1 zeroext true) #14
  br i1 %27, label %28, label %80

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %19, i64 0, i32 9, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %11, align 8
  %33 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %32, i64 %31
  %34 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %33, align 8
  %35 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %34, i64 0, i32 0, i64 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %28
  %39 = tail call i64 @llvm.cttz.i64(i64 %36, i1 true) #11, !range !4
  %40 = trunc i64 %39 to i32
  br label %49

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %34, i64 0, i32 0, i64 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %41
  %46 = tail call i64 @llvm.cttz.i64(i64 %43, i1 true) #11, !range !4
  %47 = trunc i64 %46 to i32
  %48 = or i32 %47, 64
  br label %49

49:                                               ; preds = %38, %45
  %50 = phi i32 [ %40, %38 ], [ %48, %45 ]
  br label %51

51:                                               ; preds = %49, %77
  %52 = phi i32 [ %78, %77 ], [ %50, %49 ]
  %53 = zext i32 %52 to i64
  %54 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %13, align 8
  %55 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %54, i64 %53, i32 0
  store i32 -1, i32* %55, align 4
  %56 = lshr i32 %52, 6
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 7, i32 0, i64 %57
  %59 = and i32 %52, 63
  %60 = zext i32 %59 to i64
  %61 = shl i64 1, %60
  %62 = xor i64 %61, -1
  %63 = load i64, i64* %58, align 8
  %64 = and i64 %63, %62
  store i64 %64, i64* %58, align 8
  %65 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 8, i32 0, i64 %57
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, %62
  store i64 %67, i64* %65, align 8
  %68 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 9, i32 0, i64 %57
  %69 = load i64, i64* %68, align 8
  %70 = or i64 %69, %61
  store i64 %70, i64* %68, align 8
  %71 = load i8, i8* %14, align 4, !range !2
  %72 = icmp ne i8 %71, 0
  %73 = load i32, i32* %15, align 4
  %74 = icmp eq i32 %52, %73
  %75 = and i1 %72, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %51
  store i8 0, i8* %14, align 4
  br label %77

77:                                               ; preds = %51, %76
  %78 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %34, i32 %52) #14
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %51

80:                                               ; preds = %77, %41, %24
  %81 = icmp eq %"class.Ice::Variable"** %18, %6
  br i1 %81, label %82, label %16

82:                                               ; preds = %16, %80, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan26allocatePrecoloredRegisterEPNS_8VariableE(%"class.Ice::LinearScan"*, %"class.Ice::Variable"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.Ice::Variable"* %1 to i64
  %4 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 9, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %9, align 8
  %11 = icmp eq %"class.Ice::Variable"** %8, %10
  %12 = ptrtoint %"class.Ice::Variable"** %10 to i64
  br i1 %11, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.Ice::Variable"** %8 to i64*
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %8, i64 1
  %16 = ptrtoint %"class.Ice::Variable"** %15 to i64
  %17 = bitcast %"class.Ice::Variable"*** %7 to i64*
  store i64 %16, i64* %17, align 8
  br label %70

18:                                               ; preds = %2
  %19 = ptrtoint %"class.Ice::Variable"** %8 to i64
  %20 = bitcast %"class.Ice::Variable"*** %7 to i64*
  %21 = bitcast %"class.std::__1::vector.201"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.201"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #13
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.Ice::Variable"*** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 2305843009213693951, %29 ]
  %41 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %42 = shl i64 %40, 3
  %43 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %41, i64 %42, i64 8) #14
  %44 = bitcast i8* %43 to %"class.Ice::Variable"**
  br label %45

45:                                               ; preds = %39, %34
  %46 = phi i64 [ %40, %39 ], [ 0, %34 ]
  %47 = phi %"class.Ice::Variable"** [ %44, %39 ], [ null, %34 ]
  %48 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %47, i64 %24
  %49 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %47, i64 %46
  %50 = ptrtoint %"class.Ice::Variable"** %49 to i64
  %51 = bitcast %"class.Ice::Variable"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %48, i64 1
  %53 = ptrtoint %"class.Ice::Variable"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %6, i64 0, i32 0, i32 0
  %55 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %54, align 8
  %56 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %7, align 8
  %57 = icmp eq %"class.Ice::Variable"** %56, %55
  br i1 %57, label %67, label %58

58:                                               ; preds = %45, %58
  %59 = phi %"class.Ice::Variable"** [ %61, %58 ], [ %48, %45 ]
  %60 = phi %"class.Ice::Variable"** [ %62, %58 ], [ %56, %45 ]
  %61 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %59, i64 -1
  %62 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %60, i64 -1
  %63 = bitcast %"class.Ice::Variable"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.Ice::Variable"** %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = icmp eq %"class.Ice::Variable"** %62, %55
  br i1 %66, label %67, label %58

67:                                               ; preds = %58, %45
  %68 = phi %"class.Ice::Variable"** [ %48, %45 ], [ %61, %58 ]
  %69 = ptrtoint %"class.Ice::Variable"** %68 to i64
  store i64 %69, i64* %21, align 8
  store i64 %53, i64* %20, align 8
  store i64 %50, i64* %30, align 8
  br label %70

70:                                               ; preds = %13, %67
  %71 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %72 = zext i32 %5 to i64
  %73 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %71 to %"class.Ice::SmallBitVector"***
  %74 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %73, align 8
  %75 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %74, i64 %72
  %76 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %75, align 8
  %77 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %76, i64 0, i32 0, i64 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %70
  %81 = tail call i64 @llvm.cttz.i64(i64 %78, i1 true) #11, !range !4
  %82 = trunc i64 %81 to i32
  br label %91

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %76, i64 0, i32 0, i64 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = tail call i64 @llvm.cttz.i64(i64 %85, i1 true) #11, !range !4
  %89 = trunc i64 %88 to i32
  %90 = or i32 %89, 64
  br label %91

91:                                               ; preds = %80, %87
  %92 = phi i32 [ %90, %87 ], [ %82, %80 ]
  %93 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %94 = bitcast %"class.llvm::SmallVector.284"* %93 to i32**
  br label %99

95:                                               ; preds = %99, %83
  %96 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 4, i32 0, i32 1
  %97 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %96, align 8
  %98 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %97, i64 -1
  store %"class.Ice::Variable"** %98, %"class.Ice::Variable"*** %96, align 8
  ret void

99:                                               ; preds = %91, %99
  %100 = phi i32 [ %92, %91 ], [ %106, %99 ]
  %101 = zext i32 %100 to i64
  %102 = load i32*, i32** %94, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 %101
  %104 = load i32, i32* %103, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %76, i32 %100) #14
  %107 = icmp eq i32 %106, -1
  br i1 %107, label %95, label %99
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan25allocatePreferredRegisterERNS0_14IterationStateE(%"class.Ice::LinearScan"*, %"class.Ice::LinearScan::IterationState"* nocapture readonly dereferenceable(680)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %4 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 2, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %4, i64 0, i32 10, i32 0
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = load i32, i32* %5, align 4
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %8 to %"class.Ice::SmallBitVector"***
  %12 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %12, i64 %10
  %14 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %13, align 8
  %15 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %14, i64 0, i32 0, i64 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = tail call i64 @llvm.cttz.i64(i64 %16, i1 true) #11, !range !4
  %20 = trunc i64 %19 to i32
  br label %29

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %14, i64 0, i32 0, i64 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = tail call i64 @llvm.cttz.i64(i64 %23, i1 true) #11, !range !4
  %27 = trunc i64 %26 to i32
  %28 = or i32 %27, 64
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi i32 [ %28, %25 ], [ %20, %18 ]
  %31 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %32 = bitcast %"class.llvm::SmallVector.284"* %31 to i32**
  br label %103

33:                                               ; preds = %103, %21
  %34 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %36 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %35, align 8
  %37 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %37, align 8
  %39 = icmp eq %"class.Ice::Variable"** %36, %38
  %40 = ptrtoint %"class.Ice::Variable"** %38 to i64
  br i1 %39, label %48, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.Ice::Variable"** %36 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %36, i64 1
  %46 = ptrtoint %"class.Ice::Variable"** %45 to i64
  %47 = bitcast %"class.Ice::Variable"*** %35 to i64*
  store i64 %46, i64* %47, align 8
  br label %102

48:                                               ; preds = %33
  %49 = ptrtoint %"class.Ice::Variable"** %36 to i64
  %50 = bitcast %"class.Ice::Variable"*** %35 to i64*
  %51 = bitcast %"class.std::__1::vector.201"* %34 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %49, %52
  %54 = ashr exact i64 %53, 3
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::vector.201"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #13
  unreachable

59:                                               ; preds = %48
  %60 = bitcast %"class.Ice::Variable"*** %37 to i64*
  %61 = sub i64 %40, %52
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %55
  %67 = select i1 %66, i64 %55, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %64, %59
  %70 = phi i64 [ %67, %64 ], [ 2305843009213693951, %59 ]
  %71 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %72 = shl i64 %70, 3
  %73 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %71, i64 %72, i64 8) #14
  %74 = bitcast i8* %73 to %"class.Ice::Variable"**
  br label %75

75:                                               ; preds = %69, %64
  %76 = phi i64 [ %70, %69 ], [ 0, %64 ]
  %77 = phi %"class.Ice::Variable"** [ %74, %69 ], [ null, %64 ]
  %78 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %77, i64 %54
  %79 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %77, i64 %76
  %80 = ptrtoint %"class.Ice::Variable"** %79 to i64
  %81 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.Ice::Variable"** %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %78, i64 1
  %85 = ptrtoint %"class.Ice::Variable"** %84 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %34, i64 0, i32 0, i32 0
  %87 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %86, align 8
  %88 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %35, align 8
  %89 = icmp eq %"class.Ice::Variable"** %88, %87
  br i1 %89, label %99, label %90

90:                                               ; preds = %75, %90
  %91 = phi %"class.Ice::Variable"** [ %93, %90 ], [ %78, %75 ]
  %92 = phi %"class.Ice::Variable"** [ %94, %90 ], [ %88, %75 ]
  %93 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %91, i64 -1
  %94 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %92, i64 -1
  %95 = bitcast %"class.Ice::Variable"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.Ice::Variable"** %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = icmp eq %"class.Ice::Variable"** %94, %87
  br i1 %98, label %99, label %90

99:                                               ; preds = %90, %75
  %100 = phi %"class.Ice::Variable"** [ %78, %75 ], [ %93, %90 ]
  %101 = ptrtoint %"class.Ice::Variable"** %100 to i64
  store i64 %101, i64* %51, align 8
  store i64 %85, i64* %50, align 8
  store i64 %80, i64* %60, align 8
  br label %102

102:                                              ; preds = %41, %99
  ret void

103:                                              ; preds = %29, %103
  %104 = phi i32 [ %30, %29 ], [ %110, %103 ]
  %105 = zext i32 %104 to i64
  %106 = load i32*, i32** %32, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %105
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %14, i32 %104) #14
  %111 = icmp eq i32 %110, -1
  br i1 %111, label %33, label %103
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan20allocateFreeRegisterERNS0_14IterationStateEb(%"class.Ice::LinearScan"*, %"class.Ice::LinearScan::IterationState"* dereferenceable(680), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 7
  %5 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 8
  %6 = select i1 %2, %"class.Ice::SmallBitVector"* %4, %"class.Ice::SmallBitVector"* %5
  %7 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %6, i64 0, i32 0, i64 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #11, !range !4
  %12 = trunc i64 %11 to i32
  br label %21

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %6, i64 0, i32 0, i64 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @llvm.cttz.i64(i64 %15, i1 true) #11, !range !4
  %19 = trunc i64 %18 to i32
  %20 = or i32 %19, 64
  br label %21

21:                                               ; preds = %10, %13, %17
  %22 = phi i32 [ %12, %10 ], [ %20, %17 ], [ -1, %13 ]
  %23 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %24 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %23, align 8
  %25 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %24, i64 0, i32 10, i32 0
  store i32 %22, i32* %25, align 4
  %26 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %27 = zext i32 %22 to i64
  %28 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %26 to %"class.Ice::SmallBitVector"***
  %29 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %28, align 8
  %30 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %29, i64 %27
  %31 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %30, align 8
  %32 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %31, i64 0, i32 0, i64 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %21
  %36 = tail call i64 @llvm.cttz.i64(i64 %33, i1 true) #11, !range !4
  %37 = trunc i64 %36 to i32
  br label %46

38:                                               ; preds = %21
  %39 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %31, i64 0, i32 0, i64 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = tail call i64 @llvm.cttz.i64(i64 %40, i1 true) #11, !range !4
  %44 = trunc i64 %43 to i32
  %45 = or i32 %44, 64
  br label %46

46:                                               ; preds = %35, %42
  %47 = phi i32 [ %45, %42 ], [ %37, %35 ]
  %48 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %49 = bitcast %"class.llvm::SmallVector.284"* %48 to i32**
  br label %120

50:                                               ; preds = %120, %38
  %51 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %52 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %53 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %52, align 8
  %54 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %55 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %54, align 8
  %56 = icmp eq %"class.Ice::Variable"** %53, %55
  %57 = ptrtoint %"class.Ice::Variable"** %55 to i64
  br i1 %56, label %65, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.Ice::Variable"** %53 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %53, i64 1
  %63 = ptrtoint %"class.Ice::Variable"** %62 to i64
  %64 = bitcast %"class.Ice::Variable"*** %52 to i64*
  store i64 %63, i64* %64, align 8
  br label %119

65:                                               ; preds = %50
  %66 = ptrtoint %"class.Ice::Variable"** %53 to i64
  %67 = bitcast %"class.Ice::Variable"*** %52 to i64*
  %68 = bitcast %"class.std::__1::vector.201"* %51 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %66, %69
  %71 = ashr exact i64 %70, 3
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 2305843009213693951
  br i1 %73, label %74, label %76

74:                                               ; preds = %65
  %75 = bitcast %"class.std::__1::vector.201"* %51 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #13
  unreachable

76:                                               ; preds = %65
  %77 = bitcast %"class.Ice::Variable"*** %54 to i64*
  %78 = sub i64 %57, %69
  %79 = ashr exact i64 %78, 3
  %80 = icmp ult i64 %79, 1152921504606846975
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = ashr exact i64 %78, 2
  %83 = icmp ult i64 %82, %72
  %84 = select i1 %83, i64 %72, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %81, %76
  %87 = phi i64 [ %84, %81 ], [ 2305843009213693951, %76 ]
  %88 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %89 = shl i64 %87, 3
  %90 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %88, i64 %89, i64 8) #14
  %91 = bitcast i8* %90 to %"class.Ice::Variable"**
  br label %92

92:                                               ; preds = %86, %81
  %93 = phi i64 [ %87, %86 ], [ 0, %81 ]
  %94 = phi %"class.Ice::Variable"** [ %91, %86 ], [ null, %81 ]
  %95 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %94, i64 %71
  %96 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %94, i64 %93
  %97 = ptrtoint %"class.Ice::Variable"** %96 to i64
  %98 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.Ice::Variable"** %95 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %95, i64 1
  %102 = ptrtoint %"class.Ice::Variable"** %101 to i64
  %103 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %51, i64 0, i32 0, i32 0
  %104 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %103, align 8
  %105 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %52, align 8
  %106 = icmp eq %"class.Ice::Variable"** %105, %104
  br i1 %106, label %116, label %107

107:                                              ; preds = %92, %107
  %108 = phi %"class.Ice::Variable"** [ %110, %107 ], [ %95, %92 ]
  %109 = phi %"class.Ice::Variable"** [ %111, %107 ], [ %105, %92 ]
  %110 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %108, i64 -1
  %111 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %109, i64 -1
  %112 = bitcast %"class.Ice::Variable"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.Ice::Variable"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = icmp eq %"class.Ice::Variable"** %111, %104
  br i1 %115, label %116, label %107

116:                                              ; preds = %107, %92
  %117 = phi %"class.Ice::Variable"** [ %95, %92 ], [ %110, %107 ]
  %118 = ptrtoint %"class.Ice::Variable"** %117 to i64
  store i64 %118, i64* %68, align 8
  store i64 %102, i64* %67, align 8
  store i64 %97, i64* %77, align 8
  br label %119

119:                                              ; preds = %58, %116
  ret void

120:                                              ; preds = %46, %120
  %121 = phi i32 [ %47, %46 ], [ %127, %120 ]
  %122 = zext i32 %121 to i64
  %123 = load i32*, i32** %49, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %122
  %125 = load i32, i32* %124, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %124, align 4
  %127 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %31, i32 %121) #14
  %128 = icmp eq i32 %127, -1
  br i1 %128, label %50, label %120
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan21handleNoFreeRegistersERNS0_14IterationStateE(%"class.Ice::LinearScan"*, %"class.Ice::LinearScan::IterationState"* dereferenceable(680)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Ice::RegWeight", align 4
  %4 = alloca %"class.Ice::RegWeight", align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %8, align 8
  %10 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %11 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %10, align 8
  %12 = icmp eq %"class.Ice::Variable"** %9, %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %14 to %"class.Ice::SmallBitVector"***
  %16 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 10
  %18 = bitcast %"class.llvm::SmallVector.372"* %17 to %"class.Ice::RegWeight"**
  br label %33

19:                                               ; preds = %61, %2
  %20 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  %23 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 1
  %24 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %23, align 8
  %25 = icmp eq %"class.Ice::Variable"** %22, %24
  br i1 %25, label %84, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %28 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %29 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %28 to %"class.Ice::SmallBitVector"***
  %30 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 10
  %32 = bitcast %"class.llvm::SmallVector.372"* %31 to %"class.Ice::RegWeight"**
  br label %90

33:                                               ; preds = %13, %61
  %34 = phi %"class.Ice::Variable"** [ %9, %13 ], [ %62, %61 ]
  %35 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %34, align 8
  %36 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %35, i64 0, i32 10, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %15, align 8
  %40 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %39, i64 %38
  %41 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %40, align 8
  %42 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %16, align 8
  %43 = tail call i32 @_ZNK3Ice8Variable9getWeightEPKNS_3CfgE(%"class.Ice::Variable"* %35, %"class.Ice::Cfg"* %42) #14
  %44 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %41, i64 0, i32 0, i64 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %33
  %48 = tail call i64 @llvm.cttz.i64(i64 %45, i1 true) #11, !range !4
  %49 = trunc i64 %48 to i32
  br label %58

50:                                               ; preds = %33
  %51 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %41, i64 0, i32 0, i64 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = tail call i64 @llvm.cttz.i64(i64 %52, i1 true) #11, !range !4
  %56 = trunc i64 %55 to i32
  %57 = or i32 %56, 64
  br label %58

58:                                               ; preds = %47, %54
  %59 = phi i32 [ %57, %54 ], [ %49, %47 ]
  %60 = icmp eq i32 %43, -1
  br label %64

61:                                               ; preds = %81, %50
  %62 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %34, i64 1
  %63 = icmp eq %"class.Ice::Variable"** %62, %11
  br i1 %63, label %19, label %33

64:                                               ; preds = %58, %81
  %65 = phi i32 [ %59, %58 ], [ %82, %81 ]
  %66 = zext i32 %65 to i64
  %67 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %18, align 8
  %68 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %67, i64 %66, i32 0
  br i1 %60, label %79, label %69

69:                                               ; preds = %64
  %70 = load i32, i32* %68, align 4
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %81, label %72

72:                                               ; preds = %69
  %73 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %70, i32 %43) #11
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = icmp eq i32 %75, -1
  %77 = or i1 %74, %76
  %78 = select i1 %77, i32 -2, i32 %75
  br label %79

79:                                               ; preds = %64, %72
  %80 = phi i32 [ %78, %72 ], [ -1, %64 ]
  store i32 %80, i32* %68, align 4
  br label %81

81:                                               ; preds = %79, %69
  %82 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %41, i32 %65) #14
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %61, label %64

84:                                               ; preds = %143, %19
  %85 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 5
  %86 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 10
  %87 = tail call fastcc i32 @_ZN3Ice12_GLOBAL__N_118findMinWeightIndexERKNS_14SmallBitVectorERKN4llvm11SmallVectorINS_9RegWeightELj128EEE(%"class.Ice::SmallBitVector"* dereferenceable(24) %85, %"class.llvm::SmallVector.372"* dereferenceable(536) %86) #12
  %88 = icmp slt i32 %87, 0
  %89 = bitcast %"class.Ice::RegWeight"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #11
  br i1 %88, label %158, label %146

90:                                               ; preds = %26, %143
  %91 = phi %"class.Ice::Variable"** [ %22, %26 ], [ %144, %143 ]
  %92 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %91, align 8
  %93 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %27, align 8
  %94 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %92, i64 0, i32 12
  %95 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %93, i64 0, i32 12
  %96 = tail call zeroext i1 @_ZNK3Ice9LiveRange8overlapsERKS0_b(%"class.Ice::LiveRange"* %94, %"class.Ice::LiveRange"* dereferenceable(96) %95, i1 zeroext true) #14
  br i1 %96, label %97, label %143

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %92, i64 0, i32 10, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %29, align 8
  %102 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %101, i64 %100
  %103 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %102, align 8
  %104 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %30, align 8
  %105 = tail call i32 @_ZNK3Ice8Variable9getWeightEPKNS_3CfgE(%"class.Ice::Variable"* %92, %"class.Ice::Cfg"* %104) #14
  %106 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %103, i64 0, i32 0, i64 0
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %97
  %110 = tail call i64 @llvm.cttz.i64(i64 %107, i1 true) #11, !range !4
  %111 = trunc i64 %110 to i32
  br label %120

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %103, i64 0, i32 0, i64 1
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %143, label %116

116:                                              ; preds = %112
  %117 = tail call i64 @llvm.cttz.i64(i64 %114, i1 true) #11, !range !4
  %118 = trunc i64 %117 to i32
  %119 = or i32 %118, 64
  br label %120

120:                                              ; preds = %109, %116
  %121 = phi i32 [ %119, %116 ], [ %111, %109 ]
  %122 = icmp eq i32 %105, -1
  br label %123

123:                                              ; preds = %120, %140
  %124 = phi i32 [ %121, %120 ], [ %141, %140 ]
  %125 = zext i32 %124 to i64
  %126 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %32, align 8
  %127 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %126, i64 %125, i32 0
  br i1 %122, label %138, label %128

128:                                              ; preds = %123
  %129 = load i32, i32* %127, align 4
  %130 = icmp eq i32 %129, -1
  br i1 %130, label %140, label %131

131:                                              ; preds = %128
  %132 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %129, i32 %105) #11
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = icmp eq i32 %134, -1
  %136 = or i1 %133, %135
  %137 = select i1 %136, i32 -2, i32 %134
  br label %138

138:                                              ; preds = %123, %131
  %139 = phi i32 [ %137, %131 ], [ -1, %123 ]
  store i32 %139, i32* %127, align 4
  br label %140

140:                                              ; preds = %138, %128
  %141 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %103, i32 %124) #14
  %142 = icmp eq i32 %141, -1
  br i1 %142, label %143, label %123

143:                                              ; preds = %140, %112, %90
  %144 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %91, i64 1
  %145 = icmp eq %"class.Ice::Variable"** %144, %24
  br i1 %145, label %84, label %90

146:                                              ; preds = %84
  %147 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %148 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %147, align 8
  %149 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %150 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %149, align 8
  %151 = tail call i32 @_ZNK3Ice8Variable9getWeightEPKNS_3CfgE(%"class.Ice::Variable"* %148, %"class.Ice::Cfg"* %150) #14
  %152 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %3, i64 0, i32 0
  store i32 %151, i32* %152, align 4
  %153 = sext i32 %87 to i64
  %154 = bitcast %"class.llvm::SmallVector.372"* %86 to %"class.Ice::RegWeight"**
  %155 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %154, align 8
  %156 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %155, i64 %153
  %157 = call zeroext i1 @_ZN3IceleERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* nonnull dereferenceable(4) %3, %"class.Ice::RegWeight"* dereferenceable(4) %156) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #11
  br i1 %157, label %159, label %428

158:                                              ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #11
  br label %159

159:                                              ; preds = %158, %146
  %160 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %161 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %160, align 8
  %162 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %161, i64 0, i32 7
  %163 = load i8, i8* %162, align 4
  %164 = icmp eq i8 %163, 1
  %165 = ptrtoint %"class.Ice::Variable"* %161 to i64
  br i1 %164, label %234, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %168 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %169 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %168, align 8
  %170 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %171 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %170, align 8
  %172 = icmp eq %"class.Ice::Variable"** %169, %171
  %173 = ptrtoint %"class.Ice::Variable"** %171 to i64
  br i1 %172, label %179, label %174

174:                                              ; preds = %166
  %175 = bitcast %"class.Ice::Variable"** %169 to i64*
  store i64 %165, i64* %175, align 8
  %176 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %169, i64 1
  %177 = ptrtoint %"class.Ice::Variable"** %176 to i64
  %178 = bitcast %"class.Ice::Variable"*** %168 to i64*
  store i64 %177, i64* %178, align 8
  br label %929

179:                                              ; preds = %166
  %180 = ptrtoint %"class.Ice::Variable"** %169 to i64
  %181 = bitcast %"class.Ice::Variable"*** %168 to i64*
  %182 = bitcast %"class.std::__1::vector.201"* %167 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = sub i64 %180, %183
  %185 = ashr exact i64 %184, 3
  %186 = add nsw i64 %185, 1
  %187 = icmp ugt i64 %186, 2305843009213693951
  br i1 %187, label %188, label %190

188:                                              ; preds = %179
  %189 = bitcast %"class.std::__1::vector.201"* %167 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %189) #13
  unreachable

190:                                              ; preds = %179
  %191 = bitcast %"class.Ice::Variable"*** %170 to i64*
  %192 = sub i64 %173, %183
  %193 = ashr exact i64 %192, 3
  %194 = icmp ult i64 %193, 1152921504606846975
  br i1 %194, label %195, label %200

195:                                              ; preds = %190
  %196 = ashr exact i64 %192, 2
  %197 = icmp ult i64 %196, %186
  %198 = select i1 %197, i64 %186, i64 %196
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %195, %190
  %201 = phi i64 [ %198, %195 ], [ 2305843009213693951, %190 ]
  %202 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %203 = shl i64 %201, 3
  %204 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %202, i64 %203, i64 8) #14
  %205 = bitcast i8* %204 to %"class.Ice::Variable"**
  %206 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %207 = load i64, i64* %206, align 8
  br label %208

208:                                              ; preds = %195, %200
  %209 = phi i64 [ %207, %200 ], [ %165, %195 ]
  %210 = phi i64 [ %201, %200 ], [ 0, %195 ]
  %211 = phi %"class.Ice::Variable"** [ %205, %200 ], [ null, %195 ]
  %212 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %211, i64 %185
  %213 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %211, i64 %210
  %214 = ptrtoint %"class.Ice::Variable"** %213 to i64
  %215 = bitcast %"class.Ice::Variable"** %212 to i64*
  store i64 %209, i64* %215, align 8
  %216 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %212, i64 1
  %217 = ptrtoint %"class.Ice::Variable"** %216 to i64
  %218 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %167, i64 0, i32 0, i32 0
  %219 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %218, align 8
  %220 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %168, align 8
  %221 = icmp eq %"class.Ice::Variable"** %220, %219
  br i1 %221, label %231, label %222

222:                                              ; preds = %208, %222
  %223 = phi %"class.Ice::Variable"** [ %225, %222 ], [ %212, %208 ]
  %224 = phi %"class.Ice::Variable"** [ %226, %222 ], [ %220, %208 ]
  %225 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %223, i64 -1
  %226 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %224, i64 -1
  %227 = bitcast %"class.Ice::Variable"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.Ice::Variable"** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = icmp eq %"class.Ice::Variable"** %226, %219
  br i1 %230, label %231, label %222

231:                                              ; preds = %222, %208
  %232 = phi %"class.Ice::Variable"** [ %212, %208 ], [ %225, %222 ]
  %233 = ptrtoint %"class.Ice::Variable"** %232 to i64
  store i64 %233, i64* %182, align 8
  store i64 %217, i64* %181, align 8
  store i64 %214, i64* %191, align 8
  br label %929

234:                                              ; preds = %159
  %235 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 10
  %236 = load i32, i32* %235, align 8
  %237 = icmp eq i32 %236, 3
  br i1 %237, label %238, label %307

238:                                              ; preds = %234
  call void @_ZN3Ice10LinearScan12addSpillFillERNS0_14IterationStateE(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* dereferenceable(680) %1) #12
  %239 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %240 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %241 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %240, align 8
  %242 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %243 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %242, align 8
  %244 = icmp eq %"class.Ice::Variable"** %241, %243
  %245 = ptrtoint %"class.Ice::Variable"** %243 to i64
  br i1 %244, label %253, label %246

246:                                              ; preds = %238
  %247 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.Ice::Variable"** %241 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %241, i64 1
  %251 = ptrtoint %"class.Ice::Variable"** %250 to i64
  %252 = bitcast %"class.Ice::Variable"*** %240 to i64*
  store i64 %251, i64* %252, align 8
  br label %929

253:                                              ; preds = %238
  %254 = ptrtoint %"class.Ice::Variable"** %241 to i64
  %255 = bitcast %"class.Ice::Variable"*** %240 to i64*
  %256 = bitcast %"class.std::__1::vector.201"* %239 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = sub i64 %254, %257
  %259 = ashr exact i64 %258, 3
  %260 = add nsw i64 %259, 1
  %261 = icmp ugt i64 %260, 2305843009213693951
  br i1 %261, label %262, label %264

262:                                              ; preds = %253
  %263 = bitcast %"class.std::__1::vector.201"* %239 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %263) #13
  unreachable

264:                                              ; preds = %253
  %265 = bitcast %"class.Ice::Variable"*** %242 to i64*
  %266 = sub i64 %245, %257
  %267 = ashr exact i64 %266, 3
  %268 = icmp ult i64 %267, 1152921504606846975
  br i1 %268, label %269, label %274

269:                                              ; preds = %264
  %270 = ashr exact i64 %266, 2
  %271 = icmp ult i64 %270, %260
  %272 = select i1 %271, i64 %260, i64 %270
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %280, label %274

274:                                              ; preds = %269, %264
  %275 = phi i64 [ %272, %269 ], [ 2305843009213693951, %264 ]
  %276 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %277 = shl i64 %275, 3
  %278 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %276, i64 %277, i64 8) #14
  %279 = bitcast i8* %278 to %"class.Ice::Variable"**
  br label %280

280:                                              ; preds = %274, %269
  %281 = phi i64 [ %275, %274 ], [ 0, %269 ]
  %282 = phi %"class.Ice::Variable"** [ %279, %274 ], [ null, %269 ]
  %283 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %282, i64 %259
  %284 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %282, i64 %281
  %285 = ptrtoint %"class.Ice::Variable"** %284 to i64
  %286 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.Ice::Variable"** %283 to i64*
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %283, i64 1
  %290 = ptrtoint %"class.Ice::Variable"** %289 to i64
  %291 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %239, i64 0, i32 0, i32 0
  %292 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %291, align 8
  %293 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %240, align 8
  %294 = icmp eq %"class.Ice::Variable"** %293, %292
  br i1 %294, label %304, label %295

295:                                              ; preds = %280, %295
  %296 = phi %"class.Ice::Variable"** [ %298, %295 ], [ %283, %280 ]
  %297 = phi %"class.Ice::Variable"** [ %299, %295 ], [ %293, %280 ]
  %298 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %296, i64 -1
  %299 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %297, i64 -1
  %300 = bitcast %"class.Ice::Variable"** %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = bitcast %"class.Ice::Variable"** %298 to i64*
  store i64 %301, i64* %302, align 8
  %303 = icmp eq %"class.Ice::Variable"** %299, %292
  br i1 %303, label %304, label %295

304:                                              ; preds = %295, %280
  %305 = phi %"class.Ice::Variable"** [ %283, %280 ], [ %298, %295 ]
  %306 = ptrtoint %"class.Ice::Variable"** %305 to i64
  store i64 %306, i64* %256, align 8
  store i64 %290, i64* %255, align 8
  store i64 %285, i64* %265, align 8
  br label %929

307:                                              ; preds = %234
  %308 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 17
  %309 = load i8, i8* %308, align 1, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %324, label %313

311:                                              ; preds = %313
  %312 = icmp eq i64 %318, 2
  br i1 %312, label %320, label %313

313:                                              ; preds = %307, %311
  %314 = phi i64 [ %318, %311 ], [ 0, %307 ]
  %315 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 8, i32 0, i64 %314
  %316 = load i64, i64* %315, align 8
  %317 = icmp eq i64 %316, 0
  %318 = add nuw nsw i64 %314, 1
  br i1 %317, label %311, label %319

319:                                              ; preds = %313
  call void @_ZN3Ice10LinearScan20allocateFreeRegisterERNS0_14IterationStateEb(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* dereferenceable(680) %1, i1 zeroext false) #12
  br label %929

320:                                              ; preds = %311
  %321 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 6
  %322 = call fastcc i32 @_ZN3Ice12_GLOBAL__N_118findMinWeightIndexERKNS_14SmallBitVectorERKN4llvm11SmallVectorINS_9RegWeightELj128EEE(%"class.Ice::SmallBitVector"* dereferenceable(24) %321, %"class.llvm::SmallVector.372"* dereferenceable(536) %86) #12
  %323 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %160, align 8
  br label %324

324:                                              ; preds = %307, %320
  %325 = phi %"class.Ice::Variable"* [ %323, %320 ], [ %161, %307 ]
  %326 = phi i32 [ %322, %320 ], [ %87, %307 ]
  %327 = bitcast %"class.Ice::RegWeight"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %327) #11
  %328 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %329 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %328, align 8
  %330 = call i32 @_ZNK3Ice8Variable9getWeightEPKNS_3CfgE(%"class.Ice::Variable"* %325, %"class.Ice::Cfg"* %329) #14
  %331 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %4, i64 0, i32 0
  store i32 %330, i32* %331, align 4
  %332 = sext i32 %326 to i64
  %333 = bitcast %"class.llvm::SmallVector.372"* %86 to %"class.Ice::RegWeight"**
  %334 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %333, align 8
  %335 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %334, i64 %332
  %336 = call zeroext i1 @_ZN3IceleERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* nonnull dereferenceable(4) %4, %"class.Ice::RegWeight"* dereferenceable(4) %335) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %327) #11
  br i1 %336, label %337, label %428

337:                                              ; preds = %324
  %338 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %328, align 8
  %339 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %339) #11
  %340 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %340) #11
  %341 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %160, align 8
  call void @_ZNK3Ice8Variable7getNameEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.Ice::Variable"* %341) #12
  %342 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %6, i64 0, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.12, i64 0, i64 0)) #14, !noalias !11
  %343 = bitcast %"class.std::__1::basic_string"* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %339, i8* align 8 %343, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %343, i8 0, i64 24, i1 false) #11, !noalias !11
  call void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"* %338, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %344 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %345 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %344, i64 0, i32 1, i32 0
  %346 = load i8, i8* %345, align 1
  %347 = icmp slt i8 %346, 0
  br i1 %347, label %348, label %351

348:                                              ; preds = %337
  %349 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load i8*, i8** %349, align 8
  call void @_ZdlPv(i8* %350) #15
  br label %351

351:                                              ; preds = %337, %348
  %352 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %352, i64 0, i32 1, i32 0
  %354 = load i8, i8* %353, align 1
  %355 = icmp slt i8 %354, 0
  br i1 %355, label %356, label %359

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  call void @_ZdlPv(i8* %358) #15
  br label %359

359:                                              ; preds = %351, %356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %339) #11
  %360 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %361 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %362 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %361, align 8
  %363 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %364 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %363, align 8
  %365 = icmp eq %"class.Ice::Variable"** %362, %364
  %366 = ptrtoint %"class.Ice::Variable"** %364 to i64
  br i1 %365, label %374, label %367

367:                                              ; preds = %359
  %368 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %"class.Ice::Variable"** %362 to i64*
  store i64 %369, i64* %370, align 8
  %371 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %362, i64 1
  %372 = ptrtoint %"class.Ice::Variable"** %371 to i64
  %373 = bitcast %"class.Ice::Variable"*** %361 to i64*
  store i64 %372, i64* %373, align 8
  br label %929

374:                                              ; preds = %359
  %375 = ptrtoint %"class.Ice::Variable"** %362 to i64
  %376 = bitcast %"class.Ice::Variable"*** %361 to i64*
  %377 = bitcast %"class.std::__1::vector.201"* %360 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = sub i64 %375, %378
  %380 = ashr exact i64 %379, 3
  %381 = add nsw i64 %380, 1
  %382 = icmp ugt i64 %381, 2305843009213693951
  br i1 %382, label %383, label %385

383:                                              ; preds = %374
  %384 = bitcast %"class.std::__1::vector.201"* %360 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %384) #13
  unreachable

385:                                              ; preds = %374
  %386 = bitcast %"class.Ice::Variable"*** %363 to i64*
  %387 = sub i64 %366, %378
  %388 = ashr exact i64 %387, 3
  %389 = icmp ult i64 %388, 1152921504606846975
  br i1 %389, label %390, label %395

390:                                              ; preds = %385
  %391 = ashr exact i64 %387, 2
  %392 = icmp ult i64 %391, %381
  %393 = select i1 %392, i64 %381, i64 %391
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %401, label %395

395:                                              ; preds = %390, %385
  %396 = phi i64 [ %393, %390 ], [ 2305843009213693951, %385 ]
  %397 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %398 = shl i64 %396, 3
  %399 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %397, i64 %398, i64 8) #14
  %400 = bitcast i8* %399 to %"class.Ice::Variable"**
  br label %401

401:                                              ; preds = %395, %390
  %402 = phi i64 [ %396, %395 ], [ 0, %390 ]
  %403 = phi %"class.Ice::Variable"** [ %400, %395 ], [ null, %390 ]
  %404 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %403, i64 %380
  %405 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %403, i64 %402
  %406 = ptrtoint %"class.Ice::Variable"** %405 to i64
  %407 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = bitcast %"class.Ice::Variable"** %404 to i64*
  store i64 %408, i64* %409, align 8
  %410 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %404, i64 1
  %411 = ptrtoint %"class.Ice::Variable"** %410 to i64
  %412 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %360, i64 0, i32 0, i32 0
  %413 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %412, align 8
  %414 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %361, align 8
  %415 = icmp eq %"class.Ice::Variable"** %414, %413
  br i1 %415, label %425, label %416

416:                                              ; preds = %401, %416
  %417 = phi %"class.Ice::Variable"** [ %419, %416 ], [ %404, %401 ]
  %418 = phi %"class.Ice::Variable"** [ %420, %416 ], [ %414, %401 ]
  %419 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %417, i64 -1
  %420 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %418, i64 -1
  %421 = bitcast %"class.Ice::Variable"** %420 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = bitcast %"class.Ice::Variable"** %419 to i64*
  store i64 %422, i64* %423, align 8
  %424 = icmp eq %"class.Ice::Variable"** %420, %413
  br i1 %424, label %425, label %416

425:                                              ; preds = %416, %401
  %426 = phi %"class.Ice::Variable"** [ %404, %401 ], [ %419, %416 ]
  %427 = ptrtoint %"class.Ice::Variable"** %426 to i64
  store i64 %427, i64* %377, align 8
  store i64 %411, i64* %376, align 8
  store i64 %406, i64* %386, align 8
  br label %929

428:                                              ; preds = %324, %146
  %429 = phi i64 [ %332, %324 ], [ %153, %146 ]
  %430 = phi i32 [ %326, %324 ], [ %87, %146 ]
  %431 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %432 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %431 to %"class.Ice::SmallBitVector"***
  %433 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %432, align 8
  %434 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %433, i64 %429
  %435 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %434, align 8
  %436 = bitcast %"class.Ice::Variable"*** %10 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = bitcast %"class.std::__1::vector.201"* %7 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = sub i64 %437, %439
  %441 = lshr exact i64 %440, 3
  %442 = trunc i64 %441 to i32
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %463, label %444

444:                                              ; preds = %428
  %445 = inttoptr i64 %439 to %"class.Ice::Variable"**
  %446 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %447 = bitcast %"class.llvm::SmallVector.284"* %446 to i32**
  %448 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %449 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %450 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %451 = bitcast %"class.Ice::Variable"*** %449 to i64*
  %452 = bitcast %"class.std::__1::vector.201"* %448 to i64*
  %453 = bitcast %"class.Ice::Variable"*** %450 to i64*
  %454 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %448, i64 0, i32 0, i32 0
  %455 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8
  %456 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8, i32 0, i32 1
  %457 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %458 = bitcast %"class.Ice::Variable"*** %456 to i64*
  %459 = bitcast %"class.std::__1::vector.201"* %455 to i64*
  %460 = bitcast %"class.Ice::Variable"*** %457 to i64*
  %461 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %455, i64 0, i32 0, i32 0
  %462 = and i64 %441, 4294967295
  br label %490

463:                                              ; preds = %670, %428
  %464 = bitcast %"class.Ice::Variable"*** %23 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.std::__1::vector.201"* %20 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = sub i64 %465, %467
  %469 = lshr exact i64 %468, 3
  %470 = trunc i64 %469 to i32
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %675, label %472

472:                                              ; preds = %463
  %473 = inttoptr i64 %467 to %"class.Ice::Variable"**
  %474 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %475 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %476 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %477 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %478 = bitcast %"class.Ice::Variable"*** %476 to i64*
  %479 = bitcast %"class.std::__1::vector.201"* %475 to i64*
  %480 = bitcast %"class.Ice::Variable"*** %477 to i64*
  %481 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %475, i64 0, i32 0, i32 0
  %482 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8
  %483 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8, i32 0, i32 1
  %484 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %485 = bitcast %"class.Ice::Variable"*** %483 to i64*
  %486 = bitcast %"class.std::__1::vector.201"* %482 to i64*
  %487 = bitcast %"class.Ice::Variable"*** %484 to i64*
  %488 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %482, i64 0, i32 0, i32 0
  %489 = and i64 %469, 4294967295
  br label %697

490:                                              ; preds = %672, %444
  %491 = phi %"class.Ice::Variable"** [ %445, %444 ], [ %674, %672 ]
  %492 = phi i64 [ %462, %444 ], [ %673, %672 ]
  %493 = trunc i64 %492 to i32
  %494 = add i32 %493, -1
  %495 = zext i32 %494 to i64
  %496 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %491, i64 %495
  %497 = bitcast %"class.Ice::Variable"** %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %498 to %"class.Ice::Variable"*
  %500 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %499, i64 0, i32 10, i32 0
  %501 = load i32, i32* %500, align 4
  %502 = lshr i32 %501, 6
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %435, i64 0, i32 0, i64 %503
  %505 = load i64, i64* %504, align 8
  %506 = and i32 %501, 63
  %507 = zext i32 %506 to i64
  %508 = shl i64 1, %507
  %509 = and i64 %508, %505
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %670, label %511

511:                                              ; preds = %490
  %512 = zext i32 %501 to i64
  %513 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %432, align 8
  %514 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %513, i64 %512
  %515 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %514, align 8
  %516 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %515, i64 0, i32 0, i64 0
  %517 = load i64, i64* %516, align 8
  %518 = icmp eq i64 %517, 0
  br i1 %518, label %522, label %519

519:                                              ; preds = %511
  %520 = call i64 @llvm.cttz.i64(i64 %517, i1 true) #11, !range !4
  %521 = trunc i64 %520 to i32
  br label %530

522:                                              ; preds = %511
  %523 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %515, i64 0, i32 0, i64 1
  %524 = load i64, i64* %523, align 8
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %532, label %526

526:                                              ; preds = %522
  %527 = call i64 @llvm.cttz.i64(i64 %524, i1 true) #11, !range !4
  %528 = trunc i64 %527 to i32
  %529 = or i32 %528, 64
  br label %530

530:                                              ; preds = %519, %526
  %531 = phi i32 [ %521, %519 ], [ %529, %526 ]
  br label %661

532:                                              ; preds = %661, %522
  store i32 -1, i32* %500, align 4
  %533 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %8, align 8
  %534 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %533, i64 %495
  %535 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %449, align 8
  %536 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %450, align 8
  %537 = icmp eq %"class.Ice::Variable"** %535, %536
  %538 = ptrtoint %"class.Ice::Variable"** %536 to i64
  br i1 %537, label %545, label %539

539:                                              ; preds = %532
  %540 = bitcast %"class.Ice::Variable"** %534 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = bitcast %"class.Ice::Variable"** %535 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %535, i64 1
  %544 = ptrtoint %"class.Ice::Variable"** %543 to i64
  store i64 %544, i64* %451, align 8
  br label %595

545:                                              ; preds = %532
  %546 = ptrtoint %"class.Ice::Variable"** %535 to i64
  %547 = load i64, i64* %452, align 8
  %548 = sub i64 %546, %547
  %549 = ashr exact i64 %548, 3
  %550 = add nsw i64 %549, 1
  %551 = icmp ugt i64 %550, 2305843009213693951
  br i1 %551, label %552, label %554

552:                                              ; preds = %545
  %553 = bitcast %"class.std::__1::vector.201"* %448 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %553) #13
  unreachable

554:                                              ; preds = %545
  %555 = sub i64 %538, %547
  %556 = ashr exact i64 %555, 3
  %557 = icmp ult i64 %556, 1152921504606846975
  br i1 %557, label %558, label %563

558:                                              ; preds = %554
  %559 = ashr exact i64 %555, 2
  %560 = icmp ult i64 %559, %550
  %561 = select i1 %560, i64 %550, i64 %559
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %569, label %563

563:                                              ; preds = %558, %554
  %564 = phi i64 [ %561, %558 ], [ 2305843009213693951, %554 ]
  %565 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %566 = shl i64 %564, 3
  %567 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %565, i64 %566, i64 8) #14
  %568 = bitcast i8* %567 to %"class.Ice::Variable"**
  br label %569

569:                                              ; preds = %563, %558
  %570 = phi i64 [ %564, %563 ], [ 0, %558 ]
  %571 = phi %"class.Ice::Variable"** [ %568, %563 ], [ null, %558 ]
  %572 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %571, i64 %549
  %573 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %571, i64 %570
  %574 = ptrtoint %"class.Ice::Variable"** %573 to i64
  %575 = bitcast %"class.Ice::Variable"** %534 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = bitcast %"class.Ice::Variable"** %572 to i64*
  store i64 %576, i64* %577, align 8
  %578 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %572, i64 1
  %579 = ptrtoint %"class.Ice::Variable"** %578 to i64
  %580 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %454, align 8
  %581 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %449, align 8
  %582 = icmp eq %"class.Ice::Variable"** %581, %580
  br i1 %582, label %592, label %583

583:                                              ; preds = %569, %583
  %584 = phi %"class.Ice::Variable"** [ %586, %583 ], [ %572, %569 ]
  %585 = phi %"class.Ice::Variable"** [ %587, %583 ], [ %581, %569 ]
  %586 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %584, i64 -1
  %587 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %585, i64 -1
  %588 = bitcast %"class.Ice::Variable"** %587 to i64*
  %589 = load i64, i64* %588, align 8
  %590 = bitcast %"class.Ice::Variable"** %586 to i64*
  store i64 %589, i64* %590, align 8
  %591 = icmp eq %"class.Ice::Variable"** %587, %580
  br i1 %591, label %592, label %583

592:                                              ; preds = %583, %569
  %593 = phi %"class.Ice::Variable"** [ %572, %569 ], [ %586, %583 ]
  %594 = ptrtoint %"class.Ice::Variable"** %593 to i64
  store i64 %594, i64* %452, align 8
  store i64 %579, i64* %451, align 8
  store i64 %574, i64* %453, align 8
  br label %595

595:                                              ; preds = %539, %592
  %596 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %10, align 8
  %597 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %596, i64 -1
  %598 = bitcast %"class.Ice::Variable"** %597 to i64*
  %599 = load i64, i64* %598, align 8
  %600 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %8, align 8
  %601 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %600, i64 %495
  %602 = bitcast %"class.Ice::Variable"** %601 to i64*
  store i64 %599, i64* %602, align 8
  %603 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %10, align 8
  %604 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %603, i64 -1
  store %"class.Ice::Variable"** %604, %"class.Ice::Variable"*** %10, align 8
  %605 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %456, align 8
  %606 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %457, align 8
  %607 = icmp eq %"class.Ice::Variable"** %605, %606
  %608 = ptrtoint %"class.Ice::Variable"** %606 to i64
  br i1 %607, label %613, label %609

609:                                              ; preds = %595
  %610 = bitcast %"class.Ice::Variable"** %605 to i64*
  store i64 %498, i64* %610, align 8
  %611 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %605, i64 1
  %612 = ptrtoint %"class.Ice::Variable"** %611 to i64
  store i64 %612, i64* %458, align 8
  br label %670

613:                                              ; preds = %595
  %614 = ptrtoint %"class.Ice::Variable"** %605 to i64
  %615 = load i64, i64* %459, align 8
  %616 = sub i64 %614, %615
  %617 = ashr exact i64 %616, 3
  %618 = add nsw i64 %617, 1
  %619 = icmp ugt i64 %618, 2305843009213693951
  br i1 %619, label %620, label %622

620:                                              ; preds = %613
  %621 = bitcast %"class.std::__1::vector.201"* %455 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %621) #13
  unreachable

622:                                              ; preds = %613
  %623 = sub i64 %608, %615
  %624 = ashr exact i64 %623, 3
  %625 = icmp ult i64 %624, 1152921504606846975
  br i1 %625, label %626, label %631

626:                                              ; preds = %622
  %627 = ashr exact i64 %623, 2
  %628 = icmp ult i64 %627, %618
  %629 = select i1 %628, i64 %618, i64 %627
  %630 = icmp eq i64 %629, 0
  br i1 %630, label %637, label %631

631:                                              ; preds = %626, %622
  %632 = phi i64 [ %629, %626 ], [ 2305843009213693951, %622 ]
  %633 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %634 = shl i64 %632, 3
  %635 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %633, i64 %634, i64 8) #14
  %636 = bitcast i8* %635 to %"class.Ice::Variable"**
  br label %637

637:                                              ; preds = %631, %626
  %638 = phi i64 [ %632, %631 ], [ 0, %626 ]
  %639 = phi %"class.Ice::Variable"** [ %636, %631 ], [ null, %626 ]
  %640 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %639, i64 %617
  %641 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %639, i64 %638
  %642 = ptrtoint %"class.Ice::Variable"** %641 to i64
  %643 = bitcast %"class.Ice::Variable"** %640 to i64*
  store i64 %498, i64* %643, align 8
  %644 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %640, i64 1
  %645 = ptrtoint %"class.Ice::Variable"** %644 to i64
  %646 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %461, align 8
  %647 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %456, align 8
  %648 = icmp eq %"class.Ice::Variable"** %647, %646
  br i1 %648, label %658, label %649

649:                                              ; preds = %637, %649
  %650 = phi %"class.Ice::Variable"** [ %652, %649 ], [ %640, %637 ]
  %651 = phi %"class.Ice::Variable"** [ %653, %649 ], [ %647, %637 ]
  %652 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %650, i64 -1
  %653 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %651, i64 -1
  %654 = bitcast %"class.Ice::Variable"** %653 to i64*
  %655 = load i64, i64* %654, align 8
  %656 = bitcast %"class.Ice::Variable"** %652 to i64*
  store i64 %655, i64* %656, align 8
  %657 = icmp eq %"class.Ice::Variable"** %653, %646
  br i1 %657, label %658, label %649

658:                                              ; preds = %649, %637
  %659 = phi %"class.Ice::Variable"** [ %640, %637 ], [ %652, %649 ]
  %660 = ptrtoint %"class.Ice::Variable"** %659 to i64
  store i64 %660, i64* %459, align 8
  store i64 %645, i64* %458, align 8
  store i64 %642, i64* %460, align 8
  br label %670

661:                                              ; preds = %530, %661
  %662 = phi i32 [ %668, %661 ], [ %531, %530 ]
  %663 = zext i32 %662 to i64
  %664 = load i32*, i32** %447, align 8
  %665 = getelementptr inbounds i32, i32* %664, i64 %663
  %666 = load i32, i32* %665, align 4
  %667 = add nsw i32 %666, -1
  store i32 %667, i32* %665, align 4
  %668 = call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %515, i32 %662) #14
  %669 = icmp eq i32 %668, -1
  br i1 %669, label %532, label %661

670:                                              ; preds = %490, %658, %609
  %671 = icmp eq i32 %494, 0
  br i1 %671, label %463, label %672

672:                                              ; preds = %670
  %673 = add nsw i64 %492, -1
  %674 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %8, align 8
  br label %490

675:                                              ; preds = %852, %463
  %676 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %1, i64 0, i32 0
  %677 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %676, align 8
  %678 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %677, i64 0, i32 10, i32 0
  store i32 %430, i32* %678, align 4
  %679 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %435, i64 0, i32 0, i64 0
  %680 = load i64, i64* %679, align 8
  %681 = icmp eq i64 %680, 0
  br i1 %681, label %685, label %682

682:                                              ; preds = %675
  %683 = call i64 @llvm.cttz.i64(i64 %680, i1 true) #11, !range !4
  %684 = trunc i64 %683 to i32
  br label %693

685:                                              ; preds = %675
  %686 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %435, i64 0, i32 0, i64 1
  %687 = load i64, i64* %686, align 8
  %688 = icmp eq i64 %687, 0
  br i1 %688, label %857, label %689

689:                                              ; preds = %685
  %690 = call i64 @llvm.cttz.i64(i64 %687, i1 true) #11, !range !4
  %691 = trunc i64 %690 to i32
  %692 = or i32 %691, 64
  br label %693

693:                                              ; preds = %682, %689
  %694 = phi i32 [ %692, %689 ], [ %684, %682 ]
  %695 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %696 = bitcast %"class.llvm::SmallVector.284"* %695 to i32**
  br label %920

697:                                              ; preds = %854, %472
  %698 = phi %"class.Ice::Variable"** [ %473, %472 ], [ %856, %854 ]
  %699 = phi i64 [ %489, %472 ], [ %855, %854 ]
  %700 = trunc i64 %699 to i32
  %701 = add i32 %700, -1
  %702 = zext i32 %701 to i64
  %703 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %698, i64 %702
  %704 = bitcast %"class.Ice::Variable"** %703 to i64*
  %705 = load i64, i64* %704, align 8
  %706 = inttoptr i64 %705 to %"class.Ice::Variable"*
  %707 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %706, i64 0, i32 10, i32 0
  %708 = load i32, i32* %707, align 4
  %709 = lshr i32 %708, 6
  %710 = zext i32 %709 to i64
  %711 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %435, i64 0, i32 0, i64 %710
  %712 = load i64, i64* %711, align 8
  %713 = and i32 %708, 63
  %714 = zext i32 %713 to i64
  %715 = shl i64 1, %714
  %716 = and i64 %715, %712
  %717 = icmp eq i64 %716, 0
  br i1 %717, label %852, label %718

718:                                              ; preds = %697
  %719 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %474, align 8
  %720 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %706, i64 0, i32 12
  %721 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %719, i64 0, i32 12
  %722 = call zeroext i1 @_ZNK3Ice9LiveRange8overlapsERKS0_b(%"class.Ice::LiveRange"* %720, %"class.Ice::LiveRange"* dereferenceable(96) %721, i1 zeroext true) #14
  br i1 %722, label %723, label %852

723:                                              ; preds = %718
  store i32 -1, i32* %707, align 4
  %724 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  %725 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %724, i64 %702
  %726 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %476, align 8
  %727 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %477, align 8
  %728 = icmp eq %"class.Ice::Variable"** %726, %727
  %729 = ptrtoint %"class.Ice::Variable"** %727 to i64
  br i1 %728, label %736, label %730

730:                                              ; preds = %723
  %731 = bitcast %"class.Ice::Variable"** %725 to i64*
  %732 = load i64, i64* %731, align 8
  %733 = bitcast %"class.Ice::Variable"** %726 to i64*
  store i64 %732, i64* %733, align 8
  %734 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %726, i64 1
  %735 = ptrtoint %"class.Ice::Variable"** %734 to i64
  store i64 %735, i64* %478, align 8
  br label %786

736:                                              ; preds = %723
  %737 = ptrtoint %"class.Ice::Variable"** %726 to i64
  %738 = load i64, i64* %479, align 8
  %739 = sub i64 %737, %738
  %740 = ashr exact i64 %739, 3
  %741 = add nsw i64 %740, 1
  %742 = icmp ugt i64 %741, 2305843009213693951
  br i1 %742, label %743, label %745

743:                                              ; preds = %736
  %744 = bitcast %"class.std::__1::vector.201"* %475 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %744) #13
  unreachable

745:                                              ; preds = %736
  %746 = sub i64 %729, %738
  %747 = ashr exact i64 %746, 3
  %748 = icmp ult i64 %747, 1152921504606846975
  br i1 %748, label %749, label %754

749:                                              ; preds = %745
  %750 = ashr exact i64 %746, 2
  %751 = icmp ult i64 %750, %741
  %752 = select i1 %751, i64 %741, i64 %750
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %760, label %754

754:                                              ; preds = %749, %745
  %755 = phi i64 [ %752, %749 ], [ 2305843009213693951, %745 ]
  %756 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %757 = shl i64 %755, 3
  %758 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %756, i64 %757, i64 8) #14
  %759 = bitcast i8* %758 to %"class.Ice::Variable"**
  br label %760

760:                                              ; preds = %754, %749
  %761 = phi i64 [ %755, %754 ], [ 0, %749 ]
  %762 = phi %"class.Ice::Variable"** [ %759, %754 ], [ null, %749 ]
  %763 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %762, i64 %740
  %764 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %762, i64 %761
  %765 = ptrtoint %"class.Ice::Variable"** %764 to i64
  %766 = bitcast %"class.Ice::Variable"** %725 to i64*
  %767 = load i64, i64* %766, align 8
  %768 = bitcast %"class.Ice::Variable"** %763 to i64*
  store i64 %767, i64* %768, align 8
  %769 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %763, i64 1
  %770 = ptrtoint %"class.Ice::Variable"** %769 to i64
  %771 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %481, align 8
  %772 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %476, align 8
  %773 = icmp eq %"class.Ice::Variable"** %772, %771
  br i1 %773, label %783, label %774

774:                                              ; preds = %760, %774
  %775 = phi %"class.Ice::Variable"** [ %777, %774 ], [ %763, %760 ]
  %776 = phi %"class.Ice::Variable"** [ %778, %774 ], [ %772, %760 ]
  %777 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %775, i64 -1
  %778 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %776, i64 -1
  %779 = bitcast %"class.Ice::Variable"** %778 to i64*
  %780 = load i64, i64* %779, align 8
  %781 = bitcast %"class.Ice::Variable"** %777 to i64*
  store i64 %780, i64* %781, align 8
  %782 = icmp eq %"class.Ice::Variable"** %778, %771
  br i1 %782, label %783, label %774

783:                                              ; preds = %774, %760
  %784 = phi %"class.Ice::Variable"** [ %763, %760 ], [ %777, %774 ]
  %785 = ptrtoint %"class.Ice::Variable"** %784 to i64
  store i64 %785, i64* %479, align 8
  store i64 %770, i64* %478, align 8
  store i64 %765, i64* %480, align 8
  br label %786

786:                                              ; preds = %730, %783
  %787 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %23, align 8
  %788 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %787, i64 -1
  %789 = bitcast %"class.Ice::Variable"** %788 to i64*
  %790 = load i64, i64* %789, align 8
  %791 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  %792 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %791, i64 %702
  %793 = bitcast %"class.Ice::Variable"** %792 to i64*
  store i64 %790, i64* %793, align 8
  %794 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %23, align 8
  %795 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %794, i64 -1
  store %"class.Ice::Variable"** %795, %"class.Ice::Variable"*** %23, align 8
  %796 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %483, align 8
  %797 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %484, align 8
  %798 = icmp eq %"class.Ice::Variable"** %796, %797
  %799 = ptrtoint %"class.Ice::Variable"** %797 to i64
  br i1 %798, label %804, label %800

800:                                              ; preds = %786
  %801 = bitcast %"class.Ice::Variable"** %796 to i64*
  store i64 %705, i64* %801, align 8
  %802 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %796, i64 1
  %803 = ptrtoint %"class.Ice::Variable"** %802 to i64
  store i64 %803, i64* %485, align 8
  br label %852

804:                                              ; preds = %786
  %805 = ptrtoint %"class.Ice::Variable"** %796 to i64
  %806 = load i64, i64* %486, align 8
  %807 = sub i64 %805, %806
  %808 = ashr exact i64 %807, 3
  %809 = add nsw i64 %808, 1
  %810 = icmp ugt i64 %809, 2305843009213693951
  br i1 %810, label %811, label %813

811:                                              ; preds = %804
  %812 = bitcast %"class.std::__1::vector.201"* %482 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %812) #13
  unreachable

813:                                              ; preds = %804
  %814 = sub i64 %799, %806
  %815 = ashr exact i64 %814, 3
  %816 = icmp ult i64 %815, 1152921504606846975
  br i1 %816, label %817, label %822

817:                                              ; preds = %813
  %818 = ashr exact i64 %814, 2
  %819 = icmp ult i64 %818, %809
  %820 = select i1 %819, i64 %809, i64 %818
  %821 = icmp eq i64 %820, 0
  br i1 %821, label %828, label %822

822:                                              ; preds = %817, %813
  %823 = phi i64 [ %820, %817 ], [ 2305843009213693951, %813 ]
  %824 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %825 = shl i64 %823, 3
  %826 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %824, i64 %825, i64 8) #14
  %827 = bitcast i8* %826 to %"class.Ice::Variable"**
  br label %828

828:                                              ; preds = %822, %817
  %829 = phi i64 [ %823, %822 ], [ 0, %817 ]
  %830 = phi %"class.Ice::Variable"** [ %827, %822 ], [ null, %817 ]
  %831 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %830, i64 %808
  %832 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %830, i64 %829
  %833 = ptrtoint %"class.Ice::Variable"** %832 to i64
  %834 = bitcast %"class.Ice::Variable"** %831 to i64*
  store i64 %705, i64* %834, align 8
  %835 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %831, i64 1
  %836 = ptrtoint %"class.Ice::Variable"** %835 to i64
  %837 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %488, align 8
  %838 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %483, align 8
  %839 = icmp eq %"class.Ice::Variable"** %838, %837
  br i1 %839, label %849, label %840

840:                                              ; preds = %828, %840
  %841 = phi %"class.Ice::Variable"** [ %843, %840 ], [ %831, %828 ]
  %842 = phi %"class.Ice::Variable"** [ %844, %840 ], [ %838, %828 ]
  %843 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %841, i64 -1
  %844 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %842, i64 -1
  %845 = bitcast %"class.Ice::Variable"** %844 to i64*
  %846 = load i64, i64* %845, align 8
  %847 = bitcast %"class.Ice::Variable"** %843 to i64*
  store i64 %846, i64* %847, align 8
  %848 = icmp eq %"class.Ice::Variable"** %844, %837
  br i1 %848, label %849, label %840

849:                                              ; preds = %840, %828
  %850 = phi %"class.Ice::Variable"** [ %831, %828 ], [ %843, %840 ]
  %851 = ptrtoint %"class.Ice::Variable"** %850 to i64
  store i64 %851, i64* %486, align 8
  store i64 %836, i64* %485, align 8
  store i64 %833, i64* %487, align 8
  br label %852

852:                                              ; preds = %697, %849, %800, %718
  %853 = icmp eq i32 %701, 0
  br i1 %853, label %675, label %854

854:                                              ; preds = %852
  %855 = add nsw i64 %699, -1
  %856 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %21, align 8
  br label %697

857:                                              ; preds = %920, %685
  %858 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %10, align 8
  %859 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %860 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %859, align 8
  %861 = icmp eq %"class.Ice::Variable"** %858, %860
  %862 = ptrtoint %"class.Ice::Variable"** %860 to i64
  br i1 %861, label %869, label %863

863:                                              ; preds = %857
  %864 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %865 = load i64, i64* %864, align 8
  %866 = bitcast %"class.Ice::Variable"** %858 to i64*
  store i64 %865, i64* %866, align 8
  %867 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %858, i64 1
  %868 = ptrtoint %"class.Ice::Variable"** %867 to i64
  store i64 %868, i64* %436, align 8
  br label %929

869:                                              ; preds = %857
  %870 = ptrtoint %"class.Ice::Variable"** %858 to i64
  %871 = load i64, i64* %438, align 8
  %872 = sub i64 %870, %871
  %873 = ashr exact i64 %872, 3
  %874 = add nsw i64 %873, 1
  %875 = icmp ugt i64 %874, 2305843009213693951
  br i1 %875, label %876, label %878

876:                                              ; preds = %869
  %877 = bitcast %"class.std::__1::vector.201"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %877) #13
  unreachable

878:                                              ; preds = %869
  %879 = bitcast %"class.Ice::Variable"*** %859 to i64*
  %880 = sub i64 %862, %871
  %881 = ashr exact i64 %880, 3
  %882 = icmp ult i64 %881, 1152921504606846975
  br i1 %882, label %883, label %888

883:                                              ; preds = %878
  %884 = ashr exact i64 %880, 2
  %885 = icmp ult i64 %884, %874
  %886 = select i1 %885, i64 %874, i64 %884
  %887 = icmp eq i64 %886, 0
  br i1 %887, label %894, label %888

888:                                              ; preds = %883, %878
  %889 = phi i64 [ %886, %883 ], [ 2305843009213693951, %878 ]
  %890 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %891 = shl i64 %889, 3
  %892 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %890, i64 %891, i64 8) #14
  %893 = bitcast i8* %892 to %"class.Ice::Variable"**
  br label %894

894:                                              ; preds = %888, %883
  %895 = phi i64 [ %889, %888 ], [ 0, %883 ]
  %896 = phi %"class.Ice::Variable"** [ %893, %888 ], [ null, %883 ]
  %897 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %896, i64 %873
  %898 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %896, i64 %895
  %899 = ptrtoint %"class.Ice::Variable"** %898 to i64
  %900 = bitcast %"class.Ice::LinearScan::IterationState"* %1 to i64*
  %901 = load i64, i64* %900, align 8
  %902 = bitcast %"class.Ice::Variable"** %897 to i64*
  store i64 %901, i64* %902, align 8
  %903 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %897, i64 1
  %904 = ptrtoint %"class.Ice::Variable"** %903 to i64
  %905 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %8, align 8
  %906 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %10, align 8
  %907 = icmp eq %"class.Ice::Variable"** %906, %905
  br i1 %907, label %917, label %908

908:                                              ; preds = %894, %908
  %909 = phi %"class.Ice::Variable"** [ %911, %908 ], [ %897, %894 ]
  %910 = phi %"class.Ice::Variable"** [ %912, %908 ], [ %906, %894 ]
  %911 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %909, i64 -1
  %912 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %910, i64 -1
  %913 = bitcast %"class.Ice::Variable"** %912 to i64*
  %914 = load i64, i64* %913, align 8
  %915 = bitcast %"class.Ice::Variable"** %911 to i64*
  store i64 %914, i64* %915, align 8
  %916 = icmp eq %"class.Ice::Variable"** %912, %905
  br i1 %916, label %917, label %908

917:                                              ; preds = %908, %894
  %918 = phi %"class.Ice::Variable"** [ %897, %894 ], [ %911, %908 ]
  %919 = ptrtoint %"class.Ice::Variable"** %918 to i64
  store i64 %919, i64* %438, align 8
  store i64 %904, i64* %436, align 8
  store i64 %899, i64* %879, align 8
  br label %929

920:                                              ; preds = %693, %920
  %921 = phi i32 [ %694, %693 ], [ %927, %920 ]
  %922 = zext i32 %921 to i64
  %923 = load i32*, i32** %696, align 8
  %924 = getelementptr inbounds i32, i32* %923, i64 %922
  %925 = load i32, i32* %924, align 4
  %926 = add nsw i32 %925, 1
  store i32 %926, i32* %924, align 4
  %927 = call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %435, i32 %921) #14
  %928 = icmp eq i32 %927, -1
  br i1 %928, label %857, label %920

929:                                              ; preds = %917, %863, %425, %367, %304, %246, %231, %174, %319
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNK3Ice8Variable9getWeightEPKNS_3CfgE(%"class.Ice::Variable"*, %"class.Ice::Cfg"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @_ZN3Ice12_GLOBAL__N_118findMinWeightIndexERKNS_14SmallBitVectorERKN4llvm11SmallVectorINS_9RegWeightELj128EEE(%"class.Ice::SmallBitVector"* dereferenceable(24), %"class.llvm::SmallVector.372"* nocapture readonly dereferenceable(536)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @llvm.cttz.i64(i64 %4, i1 true) #11, !range !4
  %8 = trunc i64 %7 to i32
  br label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = tail call i64 @llvm.cttz.i64(i64 %11, i1 true) #11, !range !4
  %15 = trunc i64 %14 to i32
  %16 = or i32 %15, 64
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi i32 [ %16, %13 ], [ %8, %6 ]
  %19 = bitcast %"class.llvm::SmallVector.372"* %1 to %"class.Ice::RegWeight"**
  br label %22

20:                                               ; preds = %34, %9
  %21 = phi i32 [ -1, %9 ], [ %35, %34 ]
  ret i32 %21

22:                                               ; preds = %17, %34
  %23 = phi i32 [ -1, %17 ], [ %35, %34 ]
  %24 = phi i32 [ %18, %17 ], [ %36, %34 ]
  %25 = icmp slt i32 %23, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  %28 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %19, align 8
  %29 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %28, i64 %27
  %30 = sext i32 %23 to i64
  %31 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %28, i64 %30
  %32 = tail call zeroext i1 @_ZN3IceltERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* dereferenceable(4) %29, %"class.Ice::RegWeight"* dereferenceable(4) %31) #14
  br i1 %32, label %33, label %34

33:                                               ; preds = %26, %22
  br label %34

34:                                               ; preds = %33, %26
  %35 = phi i32 [ %24, %33 ], [ %23, %26 ]
  %36 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %0, i32 %24) #14
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %20, label %22
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3IceleERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* dereferenceable(4), %"class.Ice::RegWeight"* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice8Variable7getNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.Ice::Variable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 2, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ne i64 %5, 0
  %7 = and i64 %5, 1
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %24

10:                                               ; preds = %2
  %11 = inttoptr i64 %5 to %"class.std::__1::basic_string"*
  %12 = inttoptr i64 %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %18 = inttoptr i64 %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #11
  br label %39

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %21, i64 %23) #14
  br label %39

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %3, i32 %27) #14
  %28 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %3, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0)) #14, !noalias !14
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #11, !noalias !14
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %24, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  br label %39

39:                                               ; preds = %19, %16, %38
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan20assignFinalRegistersERKNS_14SmallBitVectorE(%"class.Ice::LinearScan"* nocapture readonly, %"class.Ice::SmallBitVector"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %5, align 8
  %7 = icmp eq %"class.Ice::Variable"** %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.Ice::Variable"** [ %15, %9 ], [ %4, %2 ]
  %11 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %10, align 8
  %12 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %11, i64 0, i32 10, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %11, i64 0, i32 9, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %10, i64 1
  %16 = icmp eq %"class.Ice::Variable"** %15, %6
  br i1 %16, label %8, label %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10LinearScan4scanERKNS_14SmallBitVectorE(%"class.Ice::LinearScan"*, %"class.Ice::SmallBitVector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Ice::LiveRange", align 8
  %4 = alloca %"class.Ice::SmallBitVector", align 8
  %5 = alloca %"class.Ice::LinearScan::IterationState", align 8
  %6 = alloca %"class.Ice::SmallBitVector", align 16
  %7 = alloca %"class.Ice::SmallBitVector", align 16
  %8 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 16
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 1
  %14 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %13, align 8
  %15 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %14, i64 0, i32 22
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %15) #14
  br label %16

16:                                               ; preds = %2, %12
  %17 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %8, align 8
  %18 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %17, i64 0, i32 28
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %18, align 8
  %19 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = bitcast %"class.Ice::LiveRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %22) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast (%"class.Ice::LiveRange"* @__const._ZN3Ice10LinearScan4scanERKNS_14SmallBitVectorE.KillsRange to i8*), i64 96, i1 false)
  %23 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 9
  call void @_ZN3Ice9LiveRangeC2ERKNSt3__16vectorIiNS_12sz_allocatorIiNS_18CfgAllocatorTraitsEEEEE(%"class.Ice::LiveRange"* nonnull %3, %"class.std::__1::vector.278"* dereferenceable(32) %23) #12
  %24 = bitcast %"class.Ice::LiveRange"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %3, i64 0, i32 2
  %27 = bitcast %"class.std::__1::__wrap_iter"* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12
  %29 = bitcast %"class.llvm::SmallVector.284"* %28 to %"class.llvm::SmallVectorImpl.285"*
  call void @_ZN4llvm15SmallVectorImplIiE6resizeEm(%"class.llvm::SmallVectorImpl.285"* %29, i64 %21) #12
  %30 = bitcast %"class.llvm::SmallVector.284"* %28 to i32**
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = ptrtoint i32* %31 to i64
  %36 = sub i64 %34, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %16
  %39 = bitcast i32* %31 to i8*
  %40 = and i64 %36, -4
  %41 = icmp ult i64 %36, 4
  %42 = sext i1 %41 to i64
  %43 = shl nsw i64 %42, 2
  %44 = sub i64 %40, %43
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 %44, i1 false)
  br label %45

45:                                               ; preds = %38, %16
  %46 = bitcast %"class.Ice::SmallBitVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %4, i64 0, i32 0, i64 0
  %48 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %4, i64 0, i32 0, i64 1
  %49 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 2
  %50 = bitcast %"class.Ice::SmallBitVector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  %51 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %49, align 8
  %52 = bitcast %"class.Ice::TargetLowering"* %51 to void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)***
  %53 = load void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)**, void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)*, void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)** %53, i64 24
  %55 = load void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)*, void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)** %54, align 8
  call void %55(%"class.Ice::SmallBitVector"* nonnull sret %4, %"class.Ice::TargetLowering"* %51, i32 1, i32 0) #14
  %56 = bitcast %"class.Ice::LinearScan::IterationState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 680, i8* nonnull %56) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 680, i1 false)
  %57 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %57, align 8
  %58 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 3
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 5
  %60 = bitcast %"class.Ice::SmallBitVector"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 20, i1 false) #11
  %61 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 6
  %62 = bitcast %"class.Ice::SmallBitVector"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 20, i1 false) #11
  %63 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 7
  %64 = bitcast %"class.Ice::SmallBitVector"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 20, i1 false) #11
  %65 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 8
  %66 = bitcast %"class.Ice::SmallBitVector"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 20, i1 false) #11
  %67 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 9
  %68 = bitcast %"class.Ice::SmallBitVector"* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 20, i1 false) #11
  %69 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 10
  %70 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %71 = getelementptr inbounds %"class.llvm::SmallVector.372", %"class.llvm::SmallVector.372"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.llvm::SmallVector.372", %"class.llvm::SmallVector.372"* %69, i64 1
  %75 = bitcast i8** %73 to %"class.llvm::SmallVector.372"**
  store %"class.llvm::SmallVector.372"* %74, %"class.llvm::SmallVector.372"** %75, align 8
  %76 = bitcast %"class.llvm::SmallVector.372"* %69 to %"class.llvm::SmallVectorImpl.373"*
  %77 = icmp ugt i32 %20, 128
  br i1 %77, label %78, label %81

78:                                               ; preds = %45
  %79 = shl nuw nsw i64 %21, 2
  %80 = getelementptr inbounds %"class.llvm::SmallVector.372", %"class.llvm::SmallVector.372"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %80, i8* %70, i64 %79, i64 4) #14
  br label %81

81:                                               ; preds = %45, %78
  %82 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %82, align 8
  %84 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 3, i32 0, i32 1
  %85 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %84, align 8
  %86 = icmp eq %"class.Ice::Variable"** %83, %85
  br i1 %86, label %309, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 0
  %89 = bitcast %"class.Ice::LinearScan::IterationState"* %5 to i64*
  %90 = bitcast %"class.Ice::SmallBitVector"* %6 to i8*
  %91 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %6, i64 0, i32 1
  %92 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 5, i32 1
  %93 = bitcast %"class.Ice::SmallBitVector"* %7 to i8*
  %94 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %7, i64 0, i32 1
  %95 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 6, i32 1
  %96 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 7, i32 1
  %97 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 8, i32 1
  %98 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %99 = bitcast %"class.llvm::SmallVectorTemplateCommon.294"* %98 to %"class.Ice::SmallBitVector"***
  %100 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 0
  %101 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %102 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 1
  %103 = bitcast %"class.llvm::SmallVector.372"* %69 to %"class.Ice::RegWeight"**
  %104 = bitcast i8** %72 to i64*
  %105 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 9, i32 1
  %106 = bitcast %"class.Ice::SmallBitVector"* %1 to <2 x i64>*
  %107 = bitcast %"class.Ice::SmallBitVector"* %6 to <2 x i64>*
  %108 = bitcast %"class.Ice::SmallBitVector"* %1 to <2 x i64>*
  %109 = bitcast %"class.Ice::SmallBitVector"* %7 to <2 x i64>*
  br label %110

110:                                              ; preds = %87, %165
  %111 = phi %"class.Ice::Variable"** [ %85, %87 ], [ %167, %165 ]
  %112 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %111, i64 -1
  %113 = bitcast %"class.Ice::Variable"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  store i64 %114, i64* %89, align 8
  store %"class.Ice::Variable"** %112, %"class.Ice::Variable"*** %84, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %115 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %49, align 8
  %116 = inttoptr i64 %114 to %"class.Ice::Variable"*
  %117 = bitcast %"class.Ice::TargetLowering"* %115 to %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)***
  %118 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)**, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)*** %117, align 8
  %119 = getelementptr inbounds %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)** %118, i64 25
  %120 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)** %119, align 8
  %121 = call dereferenceable(24) %"class.Ice::SmallBitVector"* %120(%"class.Ice::TargetLowering"* %115, %"class.Ice::Variable"* %116) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %90, i8 -86, i64 24, i1 false) #11, !alias.scope !17
  %122 = load i32, i32* %19, align 8, !noalias !17
  %123 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %121, i64 0, i32 1
  %124 = load i32, i32* %123, align 8, !noalias !17
  %125 = icmp ult i32 %122, %124
  %126 = select i1 %125, i32 %124, i32 %122
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %90, i8 0, i64 16, i1 false) #11, !alias.scope !17
  store i32 %126, i32* %91, align 16, !alias.scope !17
  %127 = load <2 x i64>, <2 x i64>* %106, align 8, !noalias !17
  %128 = bitcast %"class.Ice::SmallBitVector"* %121 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !noalias !17
  %130 = and <2 x i64> %129, %127
  store <2 x i64> %130, <2 x i64>* %107, align 16, !alias.scope !17
  %131 = load i32, i32* %91, align 16
  store i32 %131, i32* %92, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 16 %90, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %132 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %49, align 8
  %133 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, align 8
  %134 = bitcast %"class.Ice::TargetLowering"* %132 to %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)***
  %135 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)**, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)*** %134, align 8
  %136 = getelementptr inbounds %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)** %135, i64 26
  %137 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*)** %136, align 8
  %138 = call dereferenceable(24) %"class.Ice::SmallBitVector"* %137(%"class.Ice::TargetLowering"* %132, %"class.Ice::Variable"* %133) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 -86, i64 24, i1 false) #11, !alias.scope !20
  %139 = load i32, i32* %19, align 8, !noalias !20
  %140 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %138, i64 0, i32 1
  %141 = load i32, i32* %140, align 8, !noalias !20
  %142 = icmp ult i32 %139, %141
  %143 = select i1 %142, i32 %141, i32 %139
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 0, i64 16, i1 false) #11, !alias.scope !20
  store i32 %143, i32* %94, align 16, !alias.scope !20
  %144 = load <2 x i64>, <2 x i64>* %108, align 8, !noalias !20
  %145 = bitcast %"class.Ice::SmallBitVector"* %138 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !noalias !20
  %147 = and <2 x i64> %146, %144
  store <2 x i64> %147, <2 x i64>* %109, align 16, !alias.scope !20
  %148 = load i32, i32* %94, align 16
  store i32 %148, i32* %95, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 16 %93, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  %149 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, align 8
  %150 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %149, i64 0, i32 12, i32 0, i32 0, i32 0
  %151 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %150, align 8
  %152 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %149, i64 0, i32 12, i32 0, i32 0, i32 1
  %153 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %152, align 8
  %154 = icmp eq %"struct.std::__1::pair"* %151, %153
  br i1 %154, label %158, label %155

155:                                              ; preds = %110
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br label %158

158:                                              ; preds = %110, %155
  %159 = phi i32 [ %157, %155 ], [ -1, %110 ]
  call void @_ZN3Ice9LiveRange4trimEi(%"class.Ice::LiveRange"* nonnull %3, i32 %159) #14
  %160 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, align 8
  %161 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %160, i64 0, i32 9, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, -1
  br i1 %163, label %169, label %164

164:                                              ; preds = %158
  call void @_ZN3Ice10LinearScan26allocatePrecoloredRegisterEPNS_8VariableE(%"class.Ice::LinearScan"* %0, %"class.Ice::Variable"* %160) #12
  br label %165

165:                                              ; preds = %298, %308, %307, %164
  %166 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %82, align 8
  %167 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %84, align 8
  %168 = icmp eq %"class.Ice::Variable"** %166, %167
  br i1 %168, label %309, label %110

169:                                              ; preds = %158
  call void @_ZN3Ice10LinearScan34handleActiveRangeExpiredOrInactiveEPKNS_8VariableE(%"class.Ice::LinearScan"* %0, %"class.Ice::Variable"* %160) #12
  %170 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, align 8
  call void @_ZN3Ice10LinearScan39handleInactiveRangeExpiredOrReactivatedEPKNS_8VariableE(%"class.Ice::LinearScan"* %0, %"class.Ice::Variable"* %170) #12
  %171 = load i32, i32* %92, align 8
  store i32 %171, i32* %96, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %60, i64 16, i1 false) #11
  %172 = load i32, i32* %95, align 8
  store i32 %172, i32* %97, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %62, i64 16, i1 false) #11
  %173 = icmp eq i32 %171, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %169
  %175 = load i32*, i32** %30, align 8
  %176 = zext i32 %171 to i64
  br label %180

177:                                              ; preds = %197, %169
  call void @_ZN3Ice10LinearScan22findRegisterPreferenceERNS0_14IterationStateE(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* nonnull dereferenceable(680) %5) #12
  call void @_ZN3Ice10LinearScan28filterFreeWithInactiveRangesERNS0_14IterationStateE(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* nonnull dereferenceable(680) %5) #12
  %178 = load i8, i8* %58, align 4, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %234, label %200

180:                                              ; preds = %174, %197
  %181 = phi i64 [ 0, %174 ], [ %198, %197 ]
  %182 = getelementptr inbounds i32, i32* %175, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %180
  %186 = lshr i64 %181, 6
  %187 = and i64 %186, 67108863
  %188 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 7, i32 0, i64 %187
  %189 = and i64 %181, 63
  %190 = shl i64 1, %189
  %191 = xor i64 %190, -1
  %192 = load i64, i64* %188, align 8
  %193 = and i64 %192, %191
  store i64 %193, i64* %188, align 8
  %194 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 8, i32 0, i64 %187
  %195 = load i64, i64* %194, align 8
  %196 = and i64 %195, %191
  store i64 %196, i64* %194, align 8
  br label %197

197:                                              ; preds = %180, %185
  %198 = add nuw nsw i64 %181, 1
  %199 = icmp ult i64 %198, %176
  br i1 %199, label %180, label %177

200:                                              ; preds = %177
  %201 = load i32, i32* %57, align 8
  %202 = zext i32 %201 to i64
  %203 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %99, align 8
  %204 = getelementptr inbounds %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %203, i64 %202
  %205 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %204, align 8
  %206 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %100, align 8
  %207 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %101, align 8
  %208 = icmp eq %"class.Ice::Variable"** %206, %207
  br i1 %208, label %234, label %209

209:                                              ; preds = %200, %231
  %210 = phi %"class.Ice::Variable"** [ %232, %231 ], [ %206, %200 ]
  %211 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %210, align 8
  %212 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %211, i64 0, i32 10, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %102, align 8
  %215 = icmp eq %"class.Ice::Variable"* %211, %214
  br i1 %215, label %231, label %216

216:                                              ; preds = %209
  %217 = lshr i32 %213, 6
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %205, i64 0, i32 0, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = and i32 %213, 63
  %222 = zext i32 %221 to i64
  %223 = shl i64 1, %222
  %224 = and i64 %220, %223
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %216
  %227 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %8, align 8
  %228 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, align 8
  %229 = call fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112overlapsDefsEPKNS_3CfgEPKNS_8VariableES6_(%"class.Ice::Cfg"* %227, %"class.Ice::Variable"* %228, %"class.Ice::Variable"* %211) #12
  br i1 %229, label %230, label %231

230:                                              ; preds = %226
  store i8 0, i8* %58, align 4
  br label %231

231:                                              ; preds = %216, %209, %230, %226
  %232 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %210, i64 1
  %233 = icmp eq %"class.Ice::Variable"** %232, %207
  br i1 %233, label %234, label %209

234:                                              ; preds = %231, %200, %177
  %235 = load i32, i32* %92, align 8
  %236 = zext i32 %235 to i64
  call void @_ZN4llvm15SmallVectorImplIN3Ice9RegWeightEE6resizeEm(%"class.llvm::SmallVectorImpl.373"* %76, i64 %236) #12
  %237 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %103, align 8
  %238 = load i64, i64* %104, align 8
  %239 = ptrtoint %"class.Ice::RegWeight"* %237 to i64
  %240 = sub i64 %238, %239
  %241 = icmp sgt i64 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %234
  %243 = bitcast %"class.Ice::RegWeight"* %237 to i8*
  %244 = and i64 %240, -4
  %245 = icmp ult i64 %240, 4
  %246 = sext i1 %245 to i64
  %247 = shl nsw i64 %246, 2
  %248 = sub i64 %244, %247
  call void @llvm.memset.p0i8.i64(i8* align 4 %243, i8 0, i64 %248, i1 false)
  br label %249

249:                                              ; preds = %242, %234
  %250 = load i32, i32* %92, align 8
  store i32 %250, i32* %105, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  call void @_ZN3Ice10LinearScan30filterFreeWithPrecoloredRangesERNS0_14IterationStateE(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* nonnull dereferenceable(680) %5) #12
  %251 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, align 8
  %252 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %251, i64 0, i32 12
  %253 = call zeroext i1 @_ZNK3Ice9LiveRange8overlapsERKS0_b(%"class.Ice::LiveRange"* %252, %"class.Ice::LiveRange"* nonnull dereferenceable(96) %3, i1 zeroext true) #14
  br i1 %253, label %254, label %280

254:                                              ; preds = %249
  call void @_ZN3Ice14SmallBitVector5resetERKS0_(%"class.Ice::SmallBitVector"* %63, %"class.Ice::SmallBitVector"* nonnull dereferenceable(24) %4) #12
  call void @_ZN3Ice14SmallBitVector5resetERKS0_(%"class.Ice::SmallBitVector"* %65, %"class.Ice::SmallBitVector"* nonnull dereferenceable(24) %4) #12
  %255 = load i64, i64* %47, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %254
  %258 = call i64 @llvm.cttz.i64(i64 %255, i1 true) #11, !range !4
  %259 = trunc i64 %258 to i32
  br label %267

260:                                              ; preds = %254
  %261 = load i64, i64* %48, align 8
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %280, label %263

263:                                              ; preds = %260
  %264 = call i64 @llvm.cttz.i64(i64 %261, i1 true) #11, !range !4
  %265 = trunc i64 %264 to i32
  %266 = or i32 %265, 64
  br label %267

267:                                              ; preds = %257, %263
  %268 = phi i32 [ %259, %257 ], [ %266, %263 ]
  br label %269

269:                                              ; preds = %267, %277
  %270 = phi i32 [ %278, %277 ], [ %268, %267 ]
  %271 = zext i32 %270 to i64
  %272 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %103, align 8
  %273 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %272, i64 %271, i32 0
  store i32 -1, i32* %273, align 4
  %274 = load i32, i32* %57, align 8
  %275 = icmp eq i32 %274, %270
  br i1 %275, label %276, label %277

276:                                              ; preds = %269
  store i8 0, i8* %58, align 4
  br label %277

277:                                              ; preds = %276, %269
  %278 = call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* nonnull %4, i32 %270) #14
  %279 = icmp eq i32 %278, -1
  br i1 %279, label %280, label %269

280:                                              ; preds = %277, %260, %249
  %281 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %102, align 8
  %282 = icmp eq %"class.Ice::Variable"* %281, null
  br i1 %282, label %283, label %284

283:                                              ; preds = %287, %280
  br label %301

284:                                              ; preds = %280
  %285 = load i8, i8* %58, align 4, !range !2
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %298

287:                                              ; preds = %284
  %288 = load i32, i32* %57, align 8
  %289 = lshr i32 %288, 6
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 7, i32 0, i64 %290
  %292 = and i32 %288, 63
  %293 = load i64, i64* %291, align 8
  %294 = zext i32 %292 to i64
  %295 = shl i64 1, %294
  %296 = and i64 %295, %293
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %283, label %298

298:                                              ; preds = %287, %284
  call void @_ZN3Ice10LinearScan25allocatePreferredRegisterERNS0_14IterationStateE(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* nonnull dereferenceable(680) %5) #12
  br label %165

299:                                              ; preds = %301
  %300 = icmp eq i64 %306, 2
  br i1 %300, label %308, label %301

301:                                              ; preds = %283, %299
  %302 = phi i64 [ %306, %299 ], [ 0, %283 ]
  %303 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 7, i32 0, i64 %302
  %304 = load i64, i64* %303, align 8
  %305 = icmp eq i64 %304, 0
  %306 = add nuw nsw i64 %302, 1
  br i1 %305, label %299, label %307

307:                                              ; preds = %301
  call void @_ZN3Ice10LinearScan20allocateFreeRegisterERNS0_14IterationStateEb(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* nonnull dereferenceable(680) %5, i1 zeroext true) #12
  br label %165

308:                                              ; preds = %299
  call void @_ZN3Ice10LinearScan21handleNoFreeRegistersERNS0_14IterationStateE(%"class.Ice::LinearScan"* %0, %"class.Ice::LinearScan::IterationState"* nonnull dereferenceable(680) %5) #12
  br label %165

309:                                              ; preds = %165, %81
  %310 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7
  %311 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 1
  %312 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %311, align 8
  %313 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5
  %314 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %313, i64 0, i32 0, i32 0
  %315 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %314, align 8
  %316 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 5, i32 0, i32 1
  %317 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %316, align 8
  %318 = call %"class.Ice::Variable"** @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS3_EESD_SD_(%"class.std::__1::vector.201"* %310, %"class.Ice::Variable"** %312, %"class.Ice::Variable"** %315, %"class.Ice::Variable"** %317) #12
  %319 = bitcast %"class.std::__1::vector.201"* %313 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.Ice::Variable"*** %316 to i64*
  store i64 %320, i64* %321, align 8
  %322 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %311, align 8
  %323 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6
  %324 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %323, i64 0, i32 0, i32 0
  %325 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %324, align 8
  %326 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 6, i32 0, i32 1
  %327 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %326, align 8
  %328 = call %"class.Ice::Variable"** @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS3_EESD_SD_(%"class.std::__1::vector.201"* %310, %"class.Ice::Variable"** %322, %"class.Ice::Variable"** %325, %"class.Ice::Variable"** %327) #12
  %329 = bitcast %"class.std::__1::vector.201"* %323 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = bitcast %"class.Ice::Variable"*** %326 to i64*
  store i64 %330, i64* %331, align 8
  %332 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 7, i32 0, i32 0
  %333 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %332, align 8
  %334 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %311, align 8
  %335 = icmp eq %"class.Ice::Variable"** %333, %334
  br i1 %335, label %344, label %336

336:                                              ; preds = %309, %336
  %337 = phi %"class.Ice::Variable"** [ %342, %336 ], [ %333, %309 ]
  %338 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %337, align 8
  %339 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %338, i64 0, i32 10, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %338, i64 0, i32 9, i32 0
  store i32 %340, i32* %341, align 8
  %342 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %337, i64 1
  %343 = icmp eq %"class.Ice::Variable"** %342, %334
  br i1 %343, label %344, label %336

344:                                              ; preds = %336, %309
  %345 = load i8, i8* %9, align 2, !range !2
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %351, label %347

347:                                              ; preds = %344
  %348 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %0, i64 0, i32 1
  %349 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %348, align 8
  %350 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %349, i64 0, i32 22
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %350) #14
  br label %351

351:                                              ; preds = %344, %347
  %352 = getelementptr inbounds %"class.Ice::LinearScan::IterationState", %"class.Ice::LinearScan::IterationState"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, %70
  br i1 %354, label %356, label %355

355:                                              ; preds = %351
  call void @free(i8* %353) #14
  br label %356

356:                                              ; preds = %351, %355
  call void @llvm.lifetime.end.p0i8(i64 680, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  %357 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %358 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %357, align 8
  %359 = icmp eq %"struct.std::__1::__hash_node_base.309"* %358, null
  br i1 %359, label %365, label %360

360:                                              ; preds = %356, %360
  %361 = phi %"struct.std::__1::__hash_node_base.309"* [ %363, %360 ], [ %358, %356 ]
  %362 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %361, i64 0, i32 0
  %363 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %362, align 8
  %364 = icmp eq %"struct.std::__1::__hash_node_base.309"* %363, null
  br i1 %364, label %365, label %360

365:                                              ; preds = %360, %356
  %366 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %366, align 8
  %367 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %3, i64 0, i32 0, i32 0, i32 0
  %368 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %367, align 8
  %369 = icmp eq %"struct.std::__1::pair"* %368, null
  br i1 %369, label %374, label %370

370:                                              ; preds = %365
  %371 = ptrtoint %"struct.std::__1::pair"* %368 to i64
  %372 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %3, i64 0, i32 0, i32 0, i32 1
  %373 = bitcast %"struct.std::__1::pair"** %372 to i64*
  store i64 %371, i64* %373, align 8
  br label %374

374:                                              ; preds = %365, %370
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %22) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice9LiveRangeC2ERKNSt3__16vectorIiNS_12sz_allocatorIiNS_18CfgAllocatorTraitsEEEEE(%"class.Ice::LiveRange"*, %"class.std::__1::vector.278"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 1, i32 0, i32 3
  %5 = bitcast %"class.std::__1::__compressed_pair.324"* %4 to i32*
  %6 = bitcast %"class.Ice::LiveRange"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 80, i1 false)
  store i32 1065353216, i32* %5, align 4
  %7 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 2, i32 0
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %1, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.278"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  tail call void @_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.298"* %3, i64 %14) #12
  %15 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = load i32*, i32** %8, align 8
  %18 = icmp eq i32* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %20, %2
  ret void

20:                                               ; preds = %2, %20
  %21 = phi i32* [ %23, %20 ], [ %16, %2 ]
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"* %0, i32 %22, i32 %22, %"class.Ice::CfgNode"* null) #14
  %23 = getelementptr inbounds i32, i32* %21, i64 1
  %24 = icmp eq i32* %23, %17
  br i1 %24, label %19, label %20
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIiE6resizeEm(%"class.llvm::SmallVectorImpl.285"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorImpl.285", %"class.llvm::SmallVectorImpl.285"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.llvm::SmallVectorImpl.285"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = icmp ugt i64 %9, %1
  %11 = inttoptr i64 %5 to i32*
  %12 = inttoptr i64 %7 to i32*
  br i1 %10, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast i8** %3 to i32**
  br label %53

15:                                               ; preds = %2
  %16 = icmp ult i64 %9, %1
  br i1 %16, label %17, label %57

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.llvm::SmallVectorImpl.285", %"class.llvm::SmallVectorImpl.285"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %7
  %22 = ashr exact i64 %21, 2
  %23 = icmp ult i64 %22, %1
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast i8** %3 to i32**
  %26 = bitcast %"class.llvm::SmallVectorImpl.285"* %0 to i32**
  br label %35

27:                                               ; preds = %17
  %28 = shl i64 %1, 2
  %29 = getelementptr inbounds %"class.llvm::SmallVectorImpl.285", %"class.llvm::SmallVectorImpl.285"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.llvm::SmallVectorImpl.285", %"class.llvm::SmallVectorImpl.285"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %29, i8* %30, i64 %28, i64 4) #14
  %31 = bitcast i8** %3 to i32**
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %"class.llvm::SmallVectorImpl.285"* %0 to i32**
  %34 = load i32*, i32** %33, align 8
  br label %35

35:                                               ; preds = %24, %27
  %36 = phi i32** [ %26, %24 ], [ %33, %27 ]
  %37 = phi i32** [ %25, %24 ], [ %31, %27 ]
  %38 = phi i32* [ %12, %24 ], [ %34, %27 ]
  %39 = phi i32* [ %11, %24 ], [ %32, %27 ]
  %40 = getelementptr inbounds i32, i32* %38, i64 %1
  %41 = icmp eq i32* %39, %40
  br i1 %41, label %51, label %42

42:                                               ; preds = %35
  %43 = bitcast i32* %39 to i8*
  %44 = ptrtoint i32* %39 to i64
  %45 = add i64 %1, -1
  %46 = getelementptr i32, i32* %38, i64 %45
  %47 = ptrtoint i32* %46 to i64
  %48 = sub i64 %47, %44
  %49 = add i64 %48, 4
  %50 = and i64 %49, -4
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 %50, i1 false)
  br label %51

51:                                               ; preds = %42, %35
  %52 = load i32*, i32** %36, align 8
  br label %53

53:                                               ; preds = %13, %51
  %54 = phi i32* [ %52, %51 ], [ %12, %13 ]
  %55 = phi i32** [ %37, %51 ], [ %14, %13 ]
  %56 = getelementptr inbounds i32, i32* %54, i64 %1
  store i32* %56, i32** %55, align 8
  br label %57

57:                                               ; preds = %53, %15
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice9LiveRange4trimEi(%"class.Ice::LiveRange"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm15SmallVectorImplIN3Ice9RegWeightEE6resizeEm(%"class.llvm::SmallVectorImpl.373"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorImpl.373", %"class.llvm::SmallVectorImpl.373"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.llvm::SmallVectorImpl.373"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = icmp ugt i64 %9, %1
  %11 = inttoptr i64 %5 to %"class.Ice::RegWeight"*
  %12 = inttoptr i64 %7 to %"class.Ice::RegWeight"*
  br i1 %10, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast i8** %3 to %"class.Ice::RegWeight"**
  br label %53

15:                                               ; preds = %2
  %16 = icmp ult i64 %9, %1
  br i1 %16, label %17, label %57

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.llvm::SmallVectorImpl.373", %"class.llvm::SmallVectorImpl.373"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %7
  %22 = ashr exact i64 %21, 2
  %23 = icmp ult i64 %22, %1
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast i8** %3 to %"class.Ice::RegWeight"**
  %26 = bitcast %"class.llvm::SmallVectorImpl.373"* %0 to %"class.Ice::RegWeight"**
  br label %35

27:                                               ; preds = %17
  %28 = shl i64 %1, 2
  %29 = getelementptr inbounds %"class.llvm::SmallVectorImpl.373", %"class.llvm::SmallVectorImpl.373"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.llvm::SmallVectorImpl.373", %"class.llvm::SmallVectorImpl.373"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %29, i8* %30, i64 %28, i64 4) #14
  %31 = bitcast i8** %3 to %"class.Ice::RegWeight"**
  %32 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %31, align 8
  %33 = bitcast %"class.llvm::SmallVectorImpl.373"* %0 to %"class.Ice::RegWeight"**
  %34 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %33, align 8
  br label %35

35:                                               ; preds = %24, %27
  %36 = phi %"class.Ice::RegWeight"** [ %26, %24 ], [ %33, %27 ]
  %37 = phi %"class.Ice::RegWeight"** [ %25, %24 ], [ %31, %27 ]
  %38 = phi %"class.Ice::RegWeight"* [ %12, %24 ], [ %34, %27 ]
  %39 = phi %"class.Ice::RegWeight"* [ %11, %24 ], [ %32, %27 ]
  %40 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %38, i64 %1
  %41 = icmp eq %"class.Ice::RegWeight"* %39, %40
  br i1 %41, label %51, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.Ice::RegWeight"* %39 to i8*
  %44 = ptrtoint %"class.Ice::RegWeight"* %39 to i64
  %45 = add i64 %1, -1
  %46 = getelementptr %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %38, i64 %45, i32 0
  %47 = ptrtoint i32* %46 to i64
  %48 = sub i64 %47, %44
  %49 = add i64 %48, 4
  %50 = and i64 %49, -4
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 %50, i1 false)
  br label %51

51:                                               ; preds = %42, %35
  %52 = load %"class.Ice::RegWeight"*, %"class.Ice::RegWeight"** %36, align 8
  br label %53

53:                                               ; preds = %13, %51
  %54 = phi %"class.Ice::RegWeight"* [ %52, %51 ], [ %12, %13 ]
  %55 = phi %"class.Ice::RegWeight"** [ %37, %51 ], [ %14, %13 ]
  %56 = getelementptr inbounds %"class.Ice::RegWeight", %"class.Ice::RegWeight"* %54, i64 %1
  store %"class.Ice::RegWeight"* %56, %"class.Ice::RegWeight"** %55, align 8
  br label %57

57:                                               ; preds = %53, %15
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice9LiveRange8overlapsERKS0_b(%"class.Ice::LiveRange"*, %"class.Ice::LiveRange"* dereferenceable(96), i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14SmallBitVector5resetERKS0_(%"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %1, i64 0, i32 0, i64 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @llvm.cttz.i64(i64 %4, i1 true) #11, !range !4
  %8 = trunc i64 %7 to i32
  br label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %1, i64 0, i32 0, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = tail call i64 @llvm.cttz.i64(i64 %11, i1 true) #11, !range !4
  %15 = trunc i64 %14 to i32
  %16 = or i32 %15, 64
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi i32 [ %8, %6 ], [ %16, %13 ]
  br label %20

19:                                               ; preds = %20, %9
  ret void

20:                                               ; preds = %17, %20
  %21 = phi i32 [ %31, %20 ], [ %18, %17 ]
  %22 = lshr i32 %21, 6
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 %23
  %25 = and i32 %21, 63
  %26 = zext i32 %25 to i64
  %27 = shl i64 1, %26
  %28 = xor i64 %27, -1
  %29 = load i64, i64* %24, align 8
  %30 = and i64 %29, %28
  store i64 %30, i64* %24, align 8
  %31 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %1, i32 %21) #14
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %19, label %20
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice10LinearScan4dumpEPNS_3CfgE(%"class.Ice::LinearScan"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Variable"** @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS3_EESD_SD_(%"class.std::__1::vector.201"*, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__split_buffer.391", align 8
  %6 = ptrtoint %"class.Ice::Variable"** %1 to i64
  %7 = ptrtoint %"class.Ice::Variable"** %2 to i64
  %8 = ptrtoint %"class.Ice::Variable"** %3 to i64
  %9 = sub i64 %8, %7
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %152

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.Ice::Variable"*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %16, align 8
  %18 = ptrtoint %"class.Ice::Variable"** %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  br i1 %21, label %82, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.Ice::Variable"*** %16 to i64*
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %46

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, i64 %25
  %29 = icmp eq %"class.Ice::Variable"** %28, %3
  br i1 %29, label %41, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"class.Ice::Variable"** [ %37, %30 ], [ %17, %27 ]
  %32 = phi %"class.Ice::Variable"** [ %36, %30 ], [ %28, %27 ]
  %33 = bitcast %"class.Ice::Variable"** %31 to i64*
  %34 = bitcast %"class.Ice::Variable"** %32 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %32, i64 1
  %37 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %31, i64 1
  %38 = icmp eq %"class.Ice::Variable"** %36, %3
  br i1 %38, label %39, label %30

39:                                               ; preds = %30
  %40 = ptrtoint %"class.Ice::Variable"** %37 to i64
  br label %41

41:                                               ; preds = %39, %27
  %42 = phi i64 [ %18, %27 ], [ %40, %39 ]
  store i64 %42, i64* %23, align 8
  %43 = icmp sgt i64 %24, 0
  br i1 %43, label %44, label %152

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %"class.Ice::Variable"**
  br label %46

46:                                               ; preds = %44, %22
  %47 = phi i64 [ %42, %44 ], [ %18, %22 ]
  %48 = phi %"class.Ice::Variable"** [ %45, %44 ], [ %17, %22 ]
  %49 = phi %"class.Ice::Variable"** [ %28, %44 ], [ %3, %22 ]
  %50 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 %10
  %51 = ptrtoint %"class.Ice::Variable"** %50 to i64
  %52 = sub i64 %47, %51
  %53 = ashr exact i64 %52, 3
  %54 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 %53
  %55 = icmp ult %"class.Ice::Variable"** %54, %17
  br i1 %55, label %66, label %58

56:                                               ; preds = %66
  %57 = ptrtoint %"class.Ice::Variable"** %73 to i64
  br label %58

58:                                               ; preds = %56, %46
  %59 = phi i64 [ %57, %56 ], [ %47, %46 ]
  store i64 %59, i64* %23, align 8
  %60 = icmp eq i64 %52, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = sub nsw i64 0, %53
  %63 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %48, i64 %62
  %64 = bitcast %"class.Ice::Variable"** %63 to i8*
  %65 = bitcast %"class.Ice::Variable"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %52, i1 false) #11
  br label %75

66:                                               ; preds = %46, %66
  %67 = phi %"class.Ice::Variable"** [ %73, %66 ], [ %48, %46 ]
  %68 = phi %"class.Ice::Variable"** [ %72, %66 ], [ %54, %46 ]
  %69 = bitcast %"class.Ice::Variable"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.Ice::Variable"** %67 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %68, i64 1
  %73 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %67, i64 1
  %74 = icmp ult %"class.Ice::Variable"** %72, %17
  br i1 %74, label %66, label %56

75:                                               ; preds = %58, %61
  %76 = ptrtoint %"class.Ice::Variable"** %49 to i64
  %77 = sub i64 %76, %7
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %152, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.Ice::Variable"** %1 to i8*
  %81 = bitcast %"class.Ice::Variable"** %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %77, i1 false) #11
  br label %152

82:                                               ; preds = %12
  %83 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %84 = bitcast %"struct.std::__1::__split_buffer.391"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %5, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %5, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %5, i64 0, i32 2
  %88 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %5, i64 0, i32 3, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %5, i64 0, i32 3, i32 1, i32 0
  %90 = bitcast %"class.std::__1::vector.201"* %0 to i64*
  %91 = bitcast %"struct.std::__1::__split_buffer.391"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 40, i1 false)
  %92 = load i64, i64* %90, align 8
  %93 = sub i64 %18, %92
  %94 = ashr exact i64 %93, 3
  %95 = add nsw i64 %94, %10
  %96 = icmp ugt i64 %95, 2305843009213693951
  br i1 %96, label %97, label %99

97:                                               ; preds = %82
  %98 = bitcast %"class.std::__1::vector.201"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #13
  unreachable

99:                                               ; preds = %82
  %100 = sub i64 %15, %92
  %101 = ashr exact i64 %100, 3
  %102 = icmp ult i64 %101, 1152921504606846975
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = sub i64 %6, %92
  %105 = ashr exact i64 %104, 3
  store %"class.Ice::Variable"** null, %"class.Ice::Variable"*** %88, align 8
  store %"struct.Ice::sz_allocator.206"* %83, %"struct.Ice::sz_allocator.206"** %89, align 8
  br label %113

106:                                              ; preds = %99
  %107 = ashr exact i64 %100, 2
  %108 = icmp ult i64 %107, %95
  %109 = select i1 %108, i64 %95, i64 %107
  %110 = sub i64 %6, %92
  %111 = ashr exact i64 %110, 3
  store %"class.Ice::Variable"** null, %"class.Ice::Variable"*** %88, align 8
  store %"struct.Ice::sz_allocator.206"* %83, %"struct.Ice::sz_allocator.206"** %89, align 8
  %112 = icmp eq i64 %109, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %103, %106
  %114 = phi i64 [ %105, %103 ], [ %111, %106 ]
  %115 = phi i64 [ 2305843009213693951, %103 ], [ %109, %106 ]
  %116 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %117 = shl i64 %115, 3
  %118 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %116, i64 %117, i64 8) #14
  %119 = bitcast i8* %118 to %"class.Ice::Variable"**
  br label %120

120:                                              ; preds = %113, %106
  %121 = phi i64 [ %114, %113 ], [ %111, %106 ]
  %122 = phi i64 [ %115, %113 ], [ 0, %106 ]
  %123 = phi %"class.Ice::Variable"** [ %119, %113 ], [ null, %106 ]
  store %"class.Ice::Variable"** %123, %"class.Ice::Variable"*** %85, align 8
  %124 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %123, i64 %121
  store %"class.Ice::Variable"** %124, %"class.Ice::Variable"*** %87, align 8
  store %"class.Ice::Variable"** %124, %"class.Ice::Variable"*** %86, align 8
  %125 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %123, i64 %122
  store %"class.Ice::Variable"** %125, %"class.Ice::Variable"*** %88, align 8
  %126 = bitcast %"class.Ice::Variable"*** %87 to i64*
  %127 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %124, i64 %10
  br label %128

128:                                              ; preds = %120, %128
  %129 = phi %"class.Ice::Variable"** [ %134, %128 ], [ %124, %120 ]
  %130 = phi %"class.Ice::Variable"** [ %135, %128 ], [ %2, %120 ]
  %131 = bitcast %"class.Ice::Variable"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.Ice::Variable"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %129, i64 1
  %135 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %130, i64 1
  %136 = icmp eq %"class.Ice::Variable"** %127, %134
  br i1 %136, label %137, label %128

137:                                              ; preds = %128
  %138 = ptrtoint %"class.Ice::Variable"** %127 to i64
  store i64 %138, i64* %126, align 8
  %139 = call %"class.Ice::Variable"** @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EEPS3_(%"class.std::__1::vector.201"* %0, %"struct.std::__1::__split_buffer.391"* nonnull dereferenceable(40) %5, %"class.Ice::Variable"** %1) #12
  %140 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %86, align 8
  %141 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %87, align 8
  %142 = icmp eq %"class.Ice::Variable"** %141, %140
  br i1 %142, label %151, label %143

143:                                              ; preds = %137
  %144 = ptrtoint %"class.Ice::Variable"** %140 to i64
  %145 = getelementptr %"class.Ice::Variable"*, %"class.Ice::Variable"** %141, i64 -1
  %146 = ptrtoint %"class.Ice::Variable"** %145 to i64
  %147 = sub i64 %146, %144
  %148 = lshr i64 %147, 3
  %149 = xor i64 %148, -1
  %150 = getelementptr %"class.Ice::Variable"*, %"class.Ice::Variable"** %141, i64 %149
  store %"class.Ice::Variable"** %150, %"class.Ice::Variable"*** %87, align 8
  br label %151

151:                                              ; preds = %137, %143
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #11
  br label %152

152:                                              ; preds = %41, %75, %79, %151, %4
  %153 = phi %"class.Ice::Variable"** [ %139, %151 ], [ %1, %4 ], [ %1, %79 ], [ %1, %75 ], [ %1, %41 ]
  ret %"class.Ice::Variable"** %153
}

; Function Attrs: optsize
declare void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"*, i32, i32, %"class.Ice::CfgNode"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN3Ice11InstFakeDefC1EPNS_3CfgEPNS_8VariableES4_(%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*) unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.383", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #14
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.383"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"struct.std::__1::pair.383", %"struct.std::__1::pair.383"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.383", %"struct.std::__1::pair.383"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"* %30, %"struct.std::__1::pair.383"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #12
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"*, %"struct.std::__1::pair.383"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #14
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.383"**
  %15 = bitcast %"struct.std::__1::pair.383"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.383"*, %"struct.std::__1::pair.383"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.383", %"struct.std::__1::pair.383"* %16, i64 1
  store %"struct.std::__1::pair.383"* %17, %"struct.std::__1::pair.383"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = tail call noalias i8* @malloc(i64 %14) #14
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #12
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #14
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*) unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN3Ice11InstFakeUseC1EPNS_3CfgEPNS_8VariableEj(%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, i32) unnamed_addr #4

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice9LiveRange10endsBeforeERKS0_(%"class.Ice::LiveRange"*, %"class.Ice::LiveRange"* dereferenceable(96)) local_unnamed_addr #4

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice9LiveRange12overlapsInstEib(%"class.Ice::LiveRange"*, i32, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #8

; Function Attrs: optsize
declare %"class.Ice::Inst"* @_ZNK3Ice17VariablesMetadata18getFirstDefinitionEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #4

; Function Attrs: optsize
declare dereferenceable(32) %"class.std::__1::vector.230"* @_ZNK3Ice17VariablesMetadata20getLatterDefinitionsEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #8

; Function Attrs: optsize
declare zeroext i1 @_ZN3IceltERKNS_9RegWeightES2_(%"class.Ice::RegWeight"* dereferenceable(4), %"class.Ice::RegWeight"* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.298"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.298"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %42

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = ashr exact i64 %15, 3
  %17 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %18 = shl i64 %1, 3
  %19 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %17, i64 %18, i64 4) #14
  %20 = bitcast i8* %19 to %"struct.std::__1::pair"*
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %16
  %22 = ptrtoint %"struct.std::__1::pair"* %21 to i64
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %1
  %24 = ptrtoint %"struct.std::__1::pair"* %23 to i64
  %25 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %25, align 8
  %27 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %28 = icmp eq %"struct.std::__1::pair"* %27, %26
  br i1 %28, label %40, label %29

29:                                               ; preds = %11, %29
  %30 = phi %"struct.std::__1::pair"* [ %32, %29 ], [ %21, %11 ]
  %31 = phi %"struct.std::__1::pair"* [ %33, %29 ], [ %27, %11 ]
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 -1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 -1
  %34 = bitcast %"struct.std::__1::pair"* %33 to i64*
  %35 = bitcast %"struct.std::__1::pair"* %32 to i64*
  %36 = load i64, i64* %34, align 4
  store i64 %36, i64* %35, align 4
  %37 = icmp eq %"struct.std::__1::pair"* %33, %26
  br i1 %37, label %38, label %29

38:                                               ; preds = %29
  %39 = ptrtoint %"struct.std::__1::pair"* %32 to i64
  br label %40

40:                                               ; preds = %11, %38
  %41 = phi i64 [ %39, %38 ], [ %22, %11 ]
  store i64 %41, i64* %6, align 8
  store i64 %22, i64* %13, align 8
  store i64 %24, i64* %4, align 8
  ret void

42:                                               ; preds = %2
  ret void
}

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #4

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = add i32 %1, 1
  %4 = icmp ult i32 %3, 64
  br i1 %4, label %5, label %15

5:                                                ; preds = %2
  %6 = zext i32 %3 to i64
  %7 = shl nsw i64 -1, %6
  %8 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, %7
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.cttz.i64(i64 %10, i1 true) #11, !range !4
  %14 = trunc i64 %13 to i32
  br label %30

15:                                               ; preds = %2
  %16 = icmp ult i32 %1, 127
  br i1 %16, label %17, label %30

17:                                               ; preds = %5, %15
  %18 = phi i32 [ %1, %15 ], [ 63, %5 ]
  %19 = add nsw i32 %18, -63
  %20 = zext i32 %19 to i64
  %21 = shl nsw i64 -1, %20
  %22 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 1
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %21, %23
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = tail call i64 @llvm.cttz.i64(i64 %24, i1 true) #11, !range !4
  %28 = trunc i64 %27 to i32
  %29 = or i32 %28, 64
  br label %30

30:                                               ; preds = %26, %17, %15, %12
  %31 = phi i32 [ %14, %12 ], [ %29, %26 ], [ -1, %15 ], [ -1, %17 ]
  ret i32 %31
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiN3Ice12sz_allocatorIiNS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.278"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 4611686018427387903
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.278"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #13
  unreachable

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #14
  %8 = shl i64 %1, 2
  %9 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %7, i64 %8, i64 4) #14
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = bitcast %"class.std::__1::vector.278"* %0 to i8**
  store i8* %9, i8** %13, align 8
  %14 = getelementptr inbounds i32, i32* %10, i64 %1
  %15 = getelementptr inbounds %"class.std::__1::vector.278", %"class.std::__1::vector.278"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEvT0_SK_T_"(%"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::reverse_iterator", align 8
  %6 = alloca %"class.std::__1::reverse_iterator", align 8
  %7 = alloca %"class.std::__1::reverse_iterator", align 8
  %8 = alloca %"class.std::__1::reverse_iterator", align 8
  %9 = alloca %"class.std::__1::reverse_iterator", align 8
  %10 = ptrtoint %"class.Ice::Variable"** %1 to i64
  %11 = ptrtoint %"class.Ice::Variable"** %3 to i64
  %12 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %8, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %8, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %9, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %9, i64 0, i32 1, i32 0
  br label %16

16:                                               ; preds = %578, %4
  %17 = phi i64 [ %10, %4 ], [ %28, %578 ]
  %18 = phi i64 [ %11, %4 ], [ %527, %578 ]
  %19 = phi %"class.Ice::Variable"** [ %2, %4 ], [ %0, %578 ]
  %20 = inttoptr i64 %18 to %"class.Ice::Variable"**
  %21 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %20, i64 1
  %22 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %20, i64 2
  %23 = inttoptr i64 %18 to i64*
  %24 = inttoptr i64 %18 to %"class.Ice::Variable"**
  br label %25

25:                                               ; preds = %586, %16
  %26 = phi i64 [ %17, %16 ], [ %588, %586 ]
  br label %27

27:                                               ; preds = %391, %25
  %28 = phi i64 [ %26, %25 ], [ %333, %391 ]
  %29 = sub i64 %28, %18
  %30 = ashr exact i64 %29, 3
  switch i64 %30, label %102 [
    i64 0, label %592
    i64 1, label %592
    i64 2, label %31
    i64 3, label %71
    i64 4, label %77
    i64 5, label %88
  ]

31:                                               ; preds = %27
  %32 = inttoptr i64 %18 to %"class.Ice::Variable"**
  %33 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %32, align 8
  %34 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %35 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %34, i64 -1
  %36 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %35, align 8
  %37 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %33, i64 0, i32 12, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %37, align 8
  %39 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %33, i64 0, i32 12, i32 0, i32 0, i32 1
  %40 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %39, align 8
  %41 = icmp eq %"struct.std::__1::pair"* %38, %40
  %42 = ptrtoint %"class.Ice::Variable"* %36 to i64
  br i1 %41, label %46, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %43, %31
  %47 = phi i32 [ %45, %43 ], [ -1, %31 ]
  %48 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 0, i32 12, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %48, align 8
  %50 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 0, i32 12, i32 0, i32 0, i32 1
  %51 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %50, align 8
  %52 = icmp eq %"struct.std::__1::pair"* %49, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %53, %46
  %57 = phi i32 [ %55, %53 ], [ -1, %46 ]
  %58 = icmp eq i32 %47, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %33, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp ult i32 %61, %63
  br i1 %64, label %67, label %592

65:                                               ; preds = %56
  %66 = icmp slt i32 %47, %57
  br i1 %66, label %67, label %592

67:                                               ; preds = %59, %65
  %68 = bitcast %"class.Ice::Variable"** %35 to i64*
  %69 = inttoptr i64 %18 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %68, align 8
  store i64 %42, i64* %69, align 8
  br label %592

71:                                               ; preds = %27
  %72 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %73 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %72, i64 -1
  %74 = inttoptr i64 %18 to %"class.Ice::Variable"**
  %75 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %74, i64 1
  %76 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %72, %"class.Ice::Variable"** %73, %"class.Ice::Variable"** %73, %"class.Ice::Variable"** %19, %"class.Ice::Variable"** %75) #12
  br label %592

77:                                               ; preds = %27
  %78 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %79 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %78, i64 -1
  %80 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %78, i64 -2
  %81 = inttoptr i64 %18 to %"class.Ice::Variable"**
  %82 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %81, i64 1
  %83 = ptrtoint %"class.Ice::Variable"** %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %5, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %19, %"class.Ice::Variable"*** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %5, i64 0, i32 1
  %86 = bitcast %"class.std::__1::__wrap_iter.352"* %85 to i64*
  store i64 %83, i64* %86, align 8
  %87 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %78, %"class.Ice::Variable"** %79, %"class.Ice::Variable"** %79, %"class.Ice::Variable"** %80, %"class.Ice::Variable"** %80, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %5) #12
  br label %592

88:                                               ; preds = %27
  %89 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %90 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %89, i64 -1
  %91 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %89, i64 -2
  %92 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %89, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %92, %"class.Ice::Variable"*** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 1, i32 0
  store %"class.Ice::Variable"** %92, %"class.Ice::Variable"*** %94, align 8
  %95 = inttoptr i64 %18 to %"class.Ice::Variable"**
  %96 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %95, i64 1
  %97 = ptrtoint %"class.Ice::Variable"** %96 to i64
  %98 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %19, %"class.Ice::Variable"*** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 1
  %100 = bitcast %"class.std::__1::__wrap_iter.352"* %99 to i64*
  store i64 %97, i64* %100, align 8
  %101 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %89, %"class.Ice::Variable"** %90, %"class.Ice::Variable"** %90, %"class.Ice::Variable"** %91, %"class.Ice::Variable"** %91, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %6, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %7) #12
  br label %592

102:                                              ; preds = %27
  %103 = icmp slt i64 %29, 248
  %104 = inttoptr i64 %28 to %"class.Ice::Variable"**
  br i1 %103, label %105, label %199

105:                                              ; preds = %102
  %106 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %107 = inttoptr i64 %18 to %"class.Ice::Variable"**
  %108 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %106, i64 -2
  %109 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %106, i64 -1
  %110 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %106, %"class.Ice::Variable"** %109, %"class.Ice::Variable"** %109, %"class.Ice::Variable"** %108, %"class.Ice::Variable"** %108) #14
  %111 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %106, i64 -3
  %112 = icmp eq %"class.Ice::Variable"** %111, %107
  br i1 %112, label %592, label %113

113:                                              ; preds = %105, %197
  %114 = phi %"class.Ice::Variable"** [ %116, %197 ], [ %111, %105 ]
  %115 = phi %"class.Ice::Variable"** [ %114, %197 ], [ %108, %105 ]
  %116 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %114, i64 -1
  %117 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %116, align 8
  %118 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %115, i64 -1
  %119 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %118, align 8
  %120 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %117, i64 0, i32 12, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %120, align 8
  %122 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %117, i64 0, i32 12, i32 0, i32 0, i32 1
  %123 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %122, align 8
  %124 = icmp eq %"struct.std::__1::pair"* %121, %123
  %125 = ptrtoint %"class.Ice::Variable"* %117 to i64
  %126 = ptrtoint %"class.Ice::Variable"* %119 to i64
  br i1 %124, label %130, label %127

127:                                              ; preds = %113
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br label %130

130:                                              ; preds = %127, %113
  %131 = phi i32 [ %129, %127 ], [ -1, %113 ]
  %132 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %119, i64 0, i32 12, i32 0, i32 0, i32 0
  %133 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %132, align 8
  %134 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %119, i64 0, i32 12, i32 0, i32 0, i32 1
  %135 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %134, align 8
  %136 = icmp eq %"struct.std::__1::pair"* %133, %135
  br i1 %136, label %140, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %133, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br label %140

140:                                              ; preds = %137, %130
  %141 = phi i32 [ %139, %137 ], [ -1, %130 ]
  %142 = icmp eq i32 %131, %141
  br i1 %142, label %143, label %149

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %117, i64 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %119, i64 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = icmp ult i32 %145, %147
  br i1 %148, label %151, label %197

149:                                              ; preds = %140
  %150 = icmp slt i32 %131, %141
  br i1 %150, label %151, label %197

151:                                              ; preds = %149, %143
  %152 = bitcast %"class.Ice::Variable"** %116 to i64*
  %153 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %117, i64 0, i32 1
  %154 = bitcast %"class.Ice::Variable"** %118 to i64*
  store i64 %126, i64* %152, align 8
  %155 = icmp eq %"class.Ice::Variable"** %115, %106
  br i1 %155, label %195, label %156

156:                                              ; preds = %151, %188
  %157 = phi i64* [ %189, %188 ], [ %154, %151 ]
  %158 = phi %"class.Ice::Variable"** [ %159, %188 ], [ %115, %151 ]
  %159 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %158, i64 1
  %160 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %158, align 8
  %161 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %120, align 8
  %162 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %122, align 8
  %163 = icmp eq %"struct.std::__1::pair"* %161, %162
  %164 = ptrtoint %"class.Ice::Variable"* %160 to i64
  br i1 %163, label %168, label %165

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br label %168

168:                                              ; preds = %165, %156
  %169 = phi i32 [ %167, %165 ], [ -1, %156 ]
  %170 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %160, i64 0, i32 12, i32 0, i32 0, i32 0
  %171 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %170, align 8
  %172 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %160, i64 0, i32 12, i32 0, i32 0, i32 1
  %173 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %172, align 8
  %174 = icmp eq %"struct.std::__1::pair"* %171, %173
  br i1 %174, label %178, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br label %178

178:                                              ; preds = %175, %168
  %179 = phi i32 [ %177, %175 ], [ -1, %168 ]
  %180 = icmp eq i32 %169, %179
  br i1 %180, label %181, label %186

181:                                              ; preds = %178
  %182 = load i32, i32* %153, align 8
  %183 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %160, i64 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = icmp ult i32 %182, %184
  br i1 %185, label %188, label %195

186:                                              ; preds = %178
  %187 = icmp slt i32 %169, %179
  br i1 %187, label %188, label %195

188:                                              ; preds = %186, %181
  %189 = bitcast %"class.Ice::Variable"** %158 to i64*
  %190 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %158, i64 -1
  %191 = bitcast %"class.Ice::Variable"** %190 to i64*
  store i64 %164, i64* %191, align 8
  %192 = icmp eq %"class.Ice::Variable"** %159, %106
  br i1 %192, label %193, label %156

193:                                              ; preds = %188
  %194 = bitcast %"class.Ice::Variable"** %158 to i64*
  br label %195

195:                                              ; preds = %186, %181, %193, %151
  %196 = phi i64* [ %154, %151 ], [ %194, %193 ], [ %157, %181 ], [ %157, %186 ]
  store i64 %125, i64* %196, align 8
  br label %197

197:                                              ; preds = %195, %149, %143
  %198 = icmp eq %"class.Ice::Variable"** %116, %107
  br i1 %198, label %592, label %113

199:                                              ; preds = %102
  %200 = icmp sgt i64 %29, 7992
  %201 = lshr i64 %30, 1
  %202 = sub nsw i64 0, %201
  %203 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %104, i64 %202
  br i1 %200, label %204, label %210

204:                                              ; preds = %199
  %205 = lshr i64 %30, 2
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %104, i64 %206
  %208 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %203, i64 %206
  store %"class.Ice::Variable"** %208, %"class.Ice::Variable"*** %12, align 8
  store %"class.Ice::Variable"** %208, %"class.Ice::Variable"*** %13, align 8
  store %"class.Ice::Variable"** %19, %"class.Ice::Variable"*** %14, align 8
  store %"class.Ice::Variable"** %21, %"class.Ice::Variable"*** %15, align 8
  %209 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %104, %"class.Ice::Variable"** %207, %"class.Ice::Variable"** %207, %"class.Ice::Variable"** %0, %"class.Ice::Variable"** %203, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %8, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %9) #12
  br label %212

210:                                              ; preds = %199
  %211 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %104, %"class.Ice::Variable"** %0, %"class.Ice::Variable"** %203, %"class.Ice::Variable"** %19, %"class.Ice::Variable"** %21) #12
  br label %212

212:                                              ; preds = %210, %204
  %213 = phi i32 [ %209, %204 ], [ %211, %210 ]
  %214 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %104, i64 -1
  %215 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %214, align 8
  %216 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %203, i64 -1
  %217 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %216, align 8
  %218 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %215, i64 0, i32 12, i32 0, i32 0, i32 0
  %219 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %218, align 8
  %220 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %215, i64 0, i32 12, i32 0, i32 0, i32 1
  %221 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %220, align 8
  %222 = icmp eq %"struct.std::__1::pair"* %219, %221
  br i1 %222, label %226, label %223

223:                                              ; preds = %212
  %224 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %219, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi i32 [ %225, %223 ], [ -1, %212 ]
  %228 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %217, i64 0, i32 12, i32 0, i32 0, i32 0
  %229 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %228, align 8
  %230 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %217, i64 0, i32 12, i32 0, i32 0, i32 1
  %231 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %230, align 8
  %232 = icmp eq %"struct.std::__1::pair"* %229, %231
  br i1 %232, label %236, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %229, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br label %236

236:                                              ; preds = %233, %226
  %237 = phi i32 [ %235, %233 ], [ -1, %226 ]
  %238 = icmp eq i32 %227, %237
  br i1 %238, label %239, label %245

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %215, i64 0, i32 1
  %241 = load i32, i32* %240, align 8
  %242 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %217, i64 0, i32 1
  %243 = load i32, i32* %242, align 8
  %244 = icmp ult i32 %241, %243
  br i1 %244, label %433, label %247

245:                                              ; preds = %236
  %246 = icmp slt i32 %227, %237
  br i1 %246, label %433, label %247

247:                                              ; preds = %245, %239
  %248 = icmp eq %"class.Ice::Variable"** %22, %104
  br i1 %248, label %252, label %249

249:                                              ; preds = %247
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %229, i64 0, i32 0
  %251 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %217, i64 0, i32 1
  br label %398

252:                                              ; preds = %424, %247
  %253 = ptrtoint %"class.Ice::Variable"** %214 to i64
  %254 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %20, align 8
  br i1 %222, label %258, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %219, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br label %258

258:                                              ; preds = %255, %252
  %259 = phi i32 [ %257, %255 ], [ -1, %252 ]
  %260 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %254, i64 0, i32 12, i32 0, i32 0, i32 0
  %261 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %260, align 8
  %262 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %254, i64 0, i32 12, i32 0, i32 0, i32 1
  %263 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %262, align 8
  %264 = icmp eq %"struct.std::__1::pair"* %261, %263
  br i1 %264, label %268, label %265

265:                                              ; preds = %258
  %266 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %261, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br label %268

268:                                              ; preds = %265, %258
  %269 = phi i32 [ %267, %265 ], [ -1, %258 ]
  %270 = icmp eq i32 %259, %269
  br i1 %270, label %271, label %277

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %215, i64 0, i32 1
  %273 = load i32, i32* %272, align 8
  %274 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %254, i64 0, i32 1
  %275 = load i32, i32* %274, align 8
  %276 = icmp ult i32 %273, %275
  br i1 %276, label %317, label %279

277:                                              ; preds = %268
  %278 = icmp slt i32 %259, %269
  br i1 %278, label %317, label %279

279:                                              ; preds = %277, %271
  %280 = icmp eq %"class.Ice::Variable"** %214, %21
  br i1 %280, label %592, label %281

281:                                              ; preds = %279
  %282 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %219, i64 0, i32 0
  %283 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %215, i64 0, i32 1
  br label %284

284:                                              ; preds = %281, %315
  %285 = phi %"class.Ice::Variable"** [ %214, %281 ], [ %286, %315 ]
  %286 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %285, i64 -1
  %287 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %286, align 8
  br i1 %222, label %290, label %288

288:                                              ; preds = %284
  %289 = load i32, i32* %282, align 4
  br label %290

290:                                              ; preds = %288, %284
  %291 = phi i32 [ %289, %288 ], [ -1, %284 ]
  %292 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %287, i64 0, i32 12, i32 0, i32 0, i32 0
  %293 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %292, align 8
  %294 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %287, i64 0, i32 12, i32 0, i32 0, i32 1
  %295 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %294, align 8
  %296 = icmp eq %"struct.std::__1::pair"* %293, %295
  br i1 %296, label %300, label %297

297:                                              ; preds = %290
  %298 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %293, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br label %300

300:                                              ; preds = %297, %290
  %301 = phi i32 [ %299, %297 ], [ -1, %290 ]
  %302 = icmp eq i32 %291, %301
  br i1 %302, label %303, label %308

303:                                              ; preds = %300
  %304 = load i32, i32* %283, align 8
  %305 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %287, i64 0, i32 1
  %306 = load i32, i32* %305, align 8
  %307 = icmp ult i32 %304, %306
  br i1 %307, label %310, label %315

308:                                              ; preds = %300
  %309 = icmp slt i32 %291, %301
  br i1 %309, label %310, label %315

310:                                              ; preds = %303, %308
  %311 = ptrtoint %"class.Ice::Variable"* %287 to i64
  %312 = bitcast %"class.Ice::Variable"** %286 to i64*
  %313 = load i64, i64* %23, align 8
  store i64 %313, i64* %312, align 8
  store i64 %311, i64* %23, align 8
  %314 = ptrtoint %"class.Ice::Variable"** %286 to i64
  br label %317

315:                                              ; preds = %303, %308
  %316 = icmp eq %"class.Ice::Variable"** %286, %21
  br i1 %316, label %592, label %284

317:                                              ; preds = %271, %310, %277
  %318 = phi i64 [ %253, %277 ], [ %314, %310 ], [ %253, %271 ]
  %319 = inttoptr i64 %318 to %"class.Ice::Variable"**
  %320 = icmp eq %"class.Ice::Variable"** %21, %319
  br i1 %320, label %592, label %321

321:                                              ; preds = %317, %393
  %322 = phi i64 [ %397, %393 ], [ %318, %317 ]
  %323 = phi %"class.Ice::Variable"** [ %366, %393 ], [ %21, %317 ]
  %324 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %214, align 8
  %325 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %324, i64 0, i32 12, i32 0, i32 0, i32 0
  %326 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %325, align 8
  %327 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %324, i64 0, i32 12, i32 0, i32 0, i32 1
  %328 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %327, align 8
  %329 = icmp eq %"struct.std::__1::pair"* %326, %328
  %330 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %326, i64 0, i32 0
  %331 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %324, i64 0, i32 1
  br label %332

332:                                              ; preds = %362, %321
  %333 = phi i64 [ %322, %321 ], [ %363, %362 ]
  %334 = inttoptr i64 %333 to %"class.Ice::Variable"**
  %335 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %334, i64 -1
  %336 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %335, align 8
  br i1 %329, label %339, label %337

337:                                              ; preds = %332
  %338 = load i32, i32* %330, align 4
  br label %339

339:                                              ; preds = %337, %332
  %340 = phi i32 [ %338, %337 ], [ -1, %332 ]
  %341 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %336, i64 0, i32 12, i32 0, i32 0, i32 0
  %342 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %341, align 8
  %343 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %336, i64 0, i32 12, i32 0, i32 0, i32 1
  %344 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %343, align 8
  %345 = icmp eq %"struct.std::__1::pair"* %342, %344
  br i1 %345, label %349, label %346

346:                                              ; preds = %339
  %347 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %342, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br label %349

349:                                              ; preds = %346, %339
  %350 = phi i32 [ %348, %346 ], [ -1, %339 ]
  %351 = icmp eq i32 %340, %350
  br i1 %351, label %352, label %360

352:                                              ; preds = %349
  %353 = load i32, i32* %331, align 8
  %354 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %336, i64 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp ult i32 %353, %355
  br i1 %356, label %357, label %362

357:                                              ; preds = %360, %352
  %358 = inttoptr i64 %333 to %"class.Ice::Variable"**
  %359 = ptrtoint %"class.Ice::Variable"* %336 to i64
  br label %364

360:                                              ; preds = %349
  %361 = icmp slt i32 %340, %350
  br i1 %361, label %357, label %362

362:                                              ; preds = %352, %360
  %363 = ptrtoint %"class.Ice::Variable"** %335 to i64
  br label %332

364:                                              ; preds = %390, %357
  %365 = phi %"class.Ice::Variable"** [ %323, %357 ], [ %366, %390 ]
  %366 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %365, i64 1
  %367 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %365, align 8
  br i1 %329, label %370, label %368

368:                                              ; preds = %364
  %369 = load i32, i32* %330, align 4
  br label %370

370:                                              ; preds = %368, %364
  %371 = phi i32 [ %369, %368 ], [ -1, %364 ]
  %372 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %367, i64 0, i32 12, i32 0, i32 0, i32 0
  %373 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %372, align 8
  %374 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %367, i64 0, i32 12, i32 0, i32 0, i32 1
  %375 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %374, align 8
  %376 = icmp eq %"struct.std::__1::pair"* %373, %375
  br i1 %376, label %380, label %377

377:                                              ; preds = %370
  %378 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %373, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br label %380

380:                                              ; preds = %377, %370
  %381 = phi i32 [ %379, %377 ], [ -1, %370 ]
  %382 = icmp eq i32 %371, %381
  br i1 %382, label %383, label %388

383:                                              ; preds = %380
  %384 = load i32, i32* %331, align 8
  %385 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %367, i64 0, i32 1
  %386 = load i32, i32* %385, align 8
  %387 = icmp ult i32 %384, %386
  br i1 %387, label %390, label %391

388:                                              ; preds = %380
  %389 = icmp slt i32 %371, %381
  br i1 %389, label %390, label %391

390:                                              ; preds = %388, %383
  br label %364

391:                                              ; preds = %383, %388
  %392 = icmp ult %"class.Ice::Variable"** %366, %358
  br i1 %392, label %393, label %27

393:                                              ; preds = %391
  %394 = ptrtoint %"class.Ice::Variable"* %367 to i64
  %395 = bitcast %"class.Ice::Variable"** %335 to i64*
  %396 = bitcast %"class.Ice::Variable"** %365 to i64*
  store i64 %394, i64* %395, align 8
  store i64 %359, i64* %396, align 8
  %397 = ptrtoint %"class.Ice::Variable"** %335 to i64
  br label %321

398:                                              ; preds = %249, %424
  %399 = phi %"class.Ice::Variable"** [ %22, %249 ], [ %425, %424 ]
  %400 = phi %"class.Ice::Variable"** [ %21, %249 ], [ %399, %424 ]
  %401 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %400, align 8
  %402 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %401, i64 0, i32 12, i32 0, i32 0, i32 0
  %403 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %402, align 8
  %404 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %401, i64 0, i32 12, i32 0, i32 0, i32 1
  %405 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %404, align 8
  %406 = icmp eq %"struct.std::__1::pair"* %403, %405
  br i1 %406, label %410, label %407

407:                                              ; preds = %398
  %408 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %403, i64 0, i32 0
  %409 = load i32, i32* %408, align 4
  br label %410

410:                                              ; preds = %407, %398
  %411 = phi i32 [ %409, %407 ], [ -1, %398 ]
  br i1 %232, label %414, label %412

412:                                              ; preds = %410
  %413 = load i32, i32* %250, align 4
  br label %414

414:                                              ; preds = %412, %410
  %415 = phi i32 [ %413, %412 ], [ -1, %410 ]
  %416 = icmp eq i32 %411, %415
  br i1 %416, label %417, label %422

417:                                              ; preds = %414
  %418 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %401, i64 0, i32 1
  %419 = load i32, i32* %418, align 8
  %420 = load i32, i32* %251, align 8
  %421 = icmp ult i32 %419, %420
  br i1 %421, label %427, label %424

422:                                              ; preds = %414
  %423 = icmp slt i32 %411, %415
  br i1 %423, label %427, label %424

424:                                              ; preds = %422, %417
  %425 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %399, i64 1
  %426 = icmp eq %"class.Ice::Variable"** %425, %104
  br i1 %426, label %252, label %398

427:                                              ; preds = %417, %422
  %428 = ptrtoint %"class.Ice::Variable"* %215 to i64
  %429 = ptrtoint %"class.Ice::Variable"* %401 to i64
  %430 = bitcast %"class.Ice::Variable"** %214 to i64*
  %431 = bitcast %"class.Ice::Variable"** %400 to i64*
  store i64 %429, i64* %430, align 8
  store i64 %428, i64* %431, align 8
  %432 = add i32 %213, 1
  br label %433

433:                                              ; preds = %239, %245, %427
  %434 = phi %"class.Ice::Variable"** [ %399, %427 ], [ %21, %245 ], [ %21, %239 ]
  %435 = phi i32 [ %432, %427 ], [ %213, %245 ], [ %213, %239 ]
  %436 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %437 = ptrtoint %"class.Ice::Variable"** %214 to i64
  %438 = icmp ult %"class.Ice::Variable"** %434, %214
  br i1 %438, label %439, label %524

439:                                              ; preds = %433, %514
  %440 = phi %"class.Ice::Variable"** [ %520, %514 ], [ %203, %433 ]
  %441 = phi i64 [ %521, %514 ], [ %437, %433 ]
  %442 = phi %"class.Ice::Variable"** [ %487, %514 ], [ %434, %433 ]
  %443 = phi i32 [ %518, %514 ], [ %435, %433 ]
  %444 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %440, i64 -1
  %445 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %444, align 8
  %446 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %445, i64 0, i32 12, i32 0, i32 0, i32 0
  %447 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %446, align 8
  %448 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %445, i64 0, i32 12, i32 0, i32 0, i32 1
  %449 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %448, align 8
  %450 = icmp eq %"struct.std::__1::pair"* %447, %449
  %451 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %447, i64 0, i32 0
  %452 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %445, i64 0, i32 1
  br label %453

453:                                              ; preds = %483, %439
  %454 = phi i64 [ %441, %439 ], [ %484, %483 ]
  %455 = inttoptr i64 %454 to %"class.Ice::Variable"**
  %456 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %455, i64 -1
  %457 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %456, align 8
  %458 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %457, i64 0, i32 12, i32 0, i32 0, i32 0
  %459 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %458, align 8
  %460 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %457, i64 0, i32 12, i32 0, i32 0, i32 1
  %461 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %460, align 8
  %462 = icmp eq %"struct.std::__1::pair"* %459, %461
  br i1 %462, label %466, label %463

463:                                              ; preds = %453
  %464 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %459, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br label %466

466:                                              ; preds = %463, %453
  %467 = phi i32 [ %465, %463 ], [ -1, %453 ]
  br i1 %450, label %470, label %468

468:                                              ; preds = %466
  %469 = load i32, i32* %451, align 4
  br label %470

470:                                              ; preds = %468, %466
  %471 = phi i32 [ %469, %468 ], [ -1, %466 ]
  %472 = icmp eq i32 %467, %471
  br i1 %472, label %473, label %481

473:                                              ; preds = %470
  %474 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %457, i64 0, i32 1
  %475 = load i32, i32* %474, align 8
  %476 = load i32, i32* %452, align 8
  %477 = icmp ult i32 %475, %476
  br i1 %477, label %483, label %478

478:                                              ; preds = %481, %473
  %479 = inttoptr i64 %454 to %"class.Ice::Variable"**
  %480 = ptrtoint %"class.Ice::Variable"* %457 to i64
  br label %485

481:                                              ; preds = %470
  %482 = icmp slt i32 %467, %471
  br i1 %482, label %483, label %478

483:                                              ; preds = %473, %481
  %484 = ptrtoint %"class.Ice::Variable"** %456 to i64
  br label %453

485:                                              ; preds = %511, %478
  %486 = phi %"class.Ice::Variable"** [ %442, %478 ], [ %487, %511 ]
  %487 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %486, i64 1
  %488 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %486, align 8
  %489 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %488, i64 0, i32 12, i32 0, i32 0, i32 0
  %490 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %489, align 8
  %491 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %488, i64 0, i32 12, i32 0, i32 0, i32 1
  %492 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %491, align 8
  %493 = icmp eq %"struct.std::__1::pair"* %490, %492
  br i1 %493, label %497, label %494

494:                                              ; preds = %485
  %495 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %490, i64 0, i32 0
  %496 = load i32, i32* %495, align 4
  br label %497

497:                                              ; preds = %494, %485
  %498 = phi i32 [ %496, %494 ], [ -1, %485 ]
  br i1 %450, label %501, label %499

499:                                              ; preds = %497
  %500 = load i32, i32* %451, align 4
  br label %501

501:                                              ; preds = %499, %497
  %502 = phi i32 [ %500, %499 ], [ -1, %497 ]
  %503 = icmp eq i32 %498, %502
  br i1 %503, label %504, label %509

504:                                              ; preds = %501
  %505 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %488, i64 0, i32 1
  %506 = load i32, i32* %505, align 8
  %507 = load i32, i32* %452, align 8
  %508 = icmp ult i32 %506, %507
  br i1 %508, label %512, label %511

509:                                              ; preds = %501
  %510 = icmp slt i32 %498, %502
  br i1 %510, label %512, label %511

511:                                              ; preds = %509, %504
  br label %485

512:                                              ; preds = %504, %509
  %513 = icmp ugt %"class.Ice::Variable"** %487, %479
  br i1 %513, label %522, label %514

514:                                              ; preds = %512
  %515 = ptrtoint %"class.Ice::Variable"* %488 to i64
  %516 = bitcast %"class.Ice::Variable"** %456 to i64*
  %517 = bitcast %"class.Ice::Variable"** %486 to i64*
  store i64 %515, i64* %516, align 8
  store i64 %480, i64* %517, align 8
  %518 = add i32 %443, 1
  %519 = icmp eq %"class.Ice::Variable"** %440, %479
  %520 = select i1 %519, %"class.Ice::Variable"** %487, %"class.Ice::Variable"** %440
  %521 = ptrtoint %"class.Ice::Variable"** %456 to i64
  br label %439

522:                                              ; preds = %512
  %523 = inttoptr i64 %454 to %"class.Ice::Variable"**
  br label %524

524:                                              ; preds = %522, %433
  %525 = phi %"class.Ice::Variable"** [ %214, %433 ], [ %523, %522 ]
  %526 = phi %"class.Ice::Variable"** [ %203, %433 ], [ %440, %522 ]
  %527 = phi i64 [ %437, %433 ], [ %454, %522 ]
  %528 = phi i32 [ %435, %433 ], [ %443, %522 ]
  %529 = icmp eq %"class.Ice::Variable"** %526, %525
  br i1 %529, label %570, label %530

530:                                              ; preds = %524
  %531 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %526, i64 -1
  %532 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %531, align 8
  %533 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %525, i64 -1
  %534 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %533, align 8
  %535 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %532, i64 0, i32 12, i32 0, i32 0, i32 0
  %536 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %535, align 8
  %537 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %532, i64 0, i32 12, i32 0, i32 0, i32 1
  %538 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %537, align 8
  %539 = icmp eq %"struct.std::__1::pair"* %536, %538
  %540 = ptrtoint %"class.Ice::Variable"* %534 to i64
  %541 = ptrtoint %"class.Ice::Variable"* %532 to i64
  br i1 %539, label %545, label %542

542:                                              ; preds = %530
  %543 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %536, i64 0, i32 0
  %544 = load i32, i32* %543, align 4
  br label %545

545:                                              ; preds = %542, %530
  %546 = phi i32 [ %544, %542 ], [ -1, %530 ]
  %547 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %534, i64 0, i32 12, i32 0, i32 0, i32 0
  %548 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %547, align 8
  %549 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %534, i64 0, i32 12, i32 0, i32 0, i32 1
  %550 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %549, align 8
  %551 = icmp eq %"struct.std::__1::pair"* %548, %550
  br i1 %551, label %555, label %552

552:                                              ; preds = %545
  %553 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %548, i64 0, i32 0
  %554 = load i32, i32* %553, align 4
  br label %555

555:                                              ; preds = %552, %545
  %556 = phi i32 [ %554, %552 ], [ -1, %545 ]
  %557 = icmp eq i32 %546, %556
  br i1 %557, label %558, label %564

558:                                              ; preds = %555
  %559 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %532, i64 0, i32 1
  %560 = load i32, i32* %559, align 8
  %561 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %534, i64 0, i32 1
  %562 = load i32, i32* %561, align 8
  %563 = icmp ult i32 %560, %562
  br i1 %563, label %566, label %570

564:                                              ; preds = %555
  %565 = icmp slt i32 %546, %556
  br i1 %565, label %566, label %570

566:                                              ; preds = %558, %564
  %567 = bitcast %"class.Ice::Variable"** %533 to i64*
  %568 = bitcast %"class.Ice::Variable"** %531 to i64*
  store i64 %541, i64* %567, align 8
  store i64 %540, i64* %568, align 8
  %569 = add i32 %528, 1
  br label %570

570:                                              ; preds = %524, %558, %566, %564
  %571 = phi i32 [ %569, %566 ], [ %528, %564 ], [ %528, %524 ], [ %528, %558 ]
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %580

573:                                              ; preds = %570
  %574 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEbT0_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %436, %"class.Ice::Variable"** %0, %"class.Ice::Variable"** %525) #12
  %575 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %525, i64 -1
  %576 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEbT0_SK_T_"(%"class.Ice::Variable"** %575, %"class.Ice::Variable"** %575, %"class.Ice::Variable"** %19, %"class.Ice::Variable"** %24) #12
  br i1 %576, label %577, label %579

577:                                              ; preds = %573
  br i1 %574, label %592, label %578

578:                                              ; preds = %577, %589
  br label %16

579:                                              ; preds = %573
  br i1 %574, label %586, label %580

580:                                              ; preds = %579, %570
  %581 = sub i64 %28, %527
  %582 = sub i64 %527, %18
  %583 = icmp slt i64 %581, %582
  br i1 %583, label %584, label %589

584:                                              ; preds = %580
  tail call fastcc void @"_ZNSt3__16__sortIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEvT0_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %436, %"class.Ice::Variable"** %0, %"class.Ice::Variable"** %525) #12
  %585 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %525, i64 -1
  br label %586

586:                                              ; preds = %579, %584
  %587 = phi %"class.Ice::Variable"** [ %585, %584 ], [ %575, %579 ]
  %588 = ptrtoint %"class.Ice::Variable"** %587 to i64
  br label %25

589:                                              ; preds = %580
  %590 = inttoptr i64 %18 to %"class.Ice::Variable"**
  %591 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %525, i64 -1
  tail call fastcc void @"_ZNSt3__16__sortIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEvT0_SK_T_"(%"class.Ice::Variable"** %591, %"class.Ice::Variable"** %591, %"class.Ice::Variable"** %19, %"class.Ice::Variable"** %590) #12
  br label %578

592:                                              ; preds = %577, %317, %27, %27, %279, %315, %197, %105, %59, %65, %67, %71, %77, %88
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_T_"(%"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**) unnamed_addr #10 {
  %7 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, i64 -1
  %8 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %10 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %11 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 12, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 12, i32 0, i32 0, i32 1
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %12, %14
  %16 = ptrtoint %"class.Ice::Variable"* %8 to i64
  %17 = ptrtoint %"class.Ice::Variable"* %10 to i64
  br i1 %15, label %21, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %18, %6
  %22 = phi i32 [ %20, %18 ], [ -1, %6 ]
  %23 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %10, i64 0, i32 12, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %10, i64 0, i32 12, i32 0, i32 0, i32 1
  %26 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %25, align 8
  %27 = icmp eq %"struct.std::__1::pair"* %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %28, %21
  %32 = phi i32 [ %30, %28 ], [ -1, %21 ]
  %33 = icmp eq i32 %22, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %10, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %36, %38
  br label %42

40:                                               ; preds = %31
  %41 = icmp slt i32 %22, %32
  br label %42

42:                                               ; preds = %34, %40
  %43 = phi i1 [ %39, %34 ], [ %41, %40 ]
  %44 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %5, i64 -1
  %45 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %44, align 8
  %46 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %45, i64 0, i32 12, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %46, align 8
  %48 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %45, i64 0, i32 12, i32 0, i32 0, i32 1
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %48, align 8
  %50 = icmp eq %"struct.std::__1::pair"* %47, %49
  %51 = ptrtoint %"class.Ice::Variable"* %45 to i64
  br i1 %50, label %55, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi i32 [ %54, %52 ], [ -1, %42 ]
  br i1 %15, label %60, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi i32 [ %59, %57 ], [ -1, %55 ]
  %62 = icmp eq i32 %56, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %45, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp ult i32 %65, %67
  br label %71

69:                                               ; preds = %60
  %70 = icmp slt i32 %56, %61
  br label %71

71:                                               ; preds = %63, %69
  %72 = phi i1 [ %68, %63 ], [ %70, %69 ]
  br i1 %43, label %112, label %73

73:                                               ; preds = %71
  br i1 %72, label %74, label %149

74:                                               ; preds = %73
  %75 = bitcast %"class.Ice::Variable"** %7 to i64*
  %76 = bitcast %"class.Ice::Variable"** %44 to i64*
  store i64 %51, i64* %75, align 8
  store i64 %16, i64* %76, align 8
  %77 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %7, align 8
  %78 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %79 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %77, i64 0, i32 12, i32 0, i32 0, i32 0
  %80 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %79, align 8
  %81 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %77, i64 0, i32 12, i32 0, i32 0, i32 1
  %82 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %81, align 8
  %83 = icmp eq %"struct.std::__1::pair"* %80, %82
  %84 = ptrtoint %"class.Ice::Variable"* %78 to i64
  %85 = ptrtoint %"class.Ice::Variable"* %77 to i64
  br i1 %83, label %89, label %86

86:                                               ; preds = %74
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %74
  %90 = phi i32 [ %88, %86 ], [ -1, %74 ]
  %91 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %78, i64 0, i32 12, i32 0, i32 0, i32 0
  %92 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %91, align 8
  %93 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %78, i64 0, i32 12, i32 0, i32 0, i32 1
  %94 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %93, align 8
  %95 = icmp eq %"struct.std::__1::pair"* %92, %94
  br i1 %95, label %99, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %89
  %100 = phi i32 [ %98, %96 ], [ -1, %89 ]
  %101 = icmp eq i32 %90, %100
  br i1 %101, label %102, label %108

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %77, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %78, i64 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = icmp ult i32 %104, %106
  br i1 %107, label %110, label %149

108:                                              ; preds = %99
  %109 = icmp slt i32 %90, %100
  br i1 %109, label %110, label %149

110:                                              ; preds = %102, %108
  %111 = bitcast %"class.Ice::Variable"** %9 to i64*
  store i64 %85, i64* %111, align 8
  store i64 %84, i64* %75, align 8
  br label %149

112:                                              ; preds = %71
  %113 = bitcast %"class.Ice::Variable"** %9 to i64*
  br i1 %72, label %114, label %116

114:                                              ; preds = %112
  %115 = bitcast %"class.Ice::Variable"** %44 to i64*
  store i64 %51, i64* %113, align 8
  store i64 %17, i64* %115, align 8
  br label %149

116:                                              ; preds = %112
  %117 = bitcast %"class.Ice::Variable"** %7 to i64*
  store i64 %16, i64* %113, align 8
  store i64 %17, i64* %117, align 8
  %118 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %44, align 8
  %119 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %118, i64 0, i32 12, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %119, align 8
  %121 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %118, i64 0, i32 12, i32 0, i32 0, i32 1
  %122 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %121, align 8
  %123 = icmp eq %"struct.std::__1::pair"* %120, %122
  %124 = ptrtoint %"class.Ice::Variable"* %118 to i64
  br i1 %123, label %128, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br label %128

128:                                              ; preds = %125, %116
  %129 = phi i32 [ %127, %125 ], [ -1, %116 ]
  %130 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %131 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %25, align 8
  %132 = icmp eq %"struct.std::__1::pair"* %130, %131
  br i1 %132, label %136, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br label %136

136:                                              ; preds = %133, %128
  %137 = phi i32 [ %135, %133 ], [ -1, %128 ]
  %138 = icmp eq i32 %129, %137
  br i1 %138, label %139, label %145

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %118, i64 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %10, i64 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp ult i32 %141, %143
  br i1 %144, label %147, label %149

145:                                              ; preds = %136
  %146 = icmp slt i32 %129, %137
  br i1 %146, label %147, label %149

147:                                              ; preds = %139, %145
  %148 = bitcast %"class.Ice::Variable"** %44 to i64*
  store i64 %124, i64* %117, align 8
  store i64 %17, i64* %148, align 8
  br label %149

149:                                              ; preds = %139, %102, %145, %147, %108, %110, %73, %114
  %150 = phi i32 [ 1, %114 ], [ 0, %73 ], [ 2, %110 ], [ 1, %108 ], [ 2, %147 ], [ 1, %145 ], [ 1, %102 ], [ 1, %139 ]
  ret i32 %150
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_T_"(%"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::reverse_iterator"* nocapture readonly byval(%"class.std::__1::reverse_iterator") align 8) unnamed_addr #10 {
  %8 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %2, %"class.Ice::Variable"** %3, %"class.Ice::Variable"** %4, %"class.Ice::Variable"** %5) #12
  %9 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 1, i32 0
  %10 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %9, align 8
  %11 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %10, i64 -1
  %12 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %5, i64 -1
  %14 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %13, align 8
  %15 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %12, i64 0, i32 12, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %17 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %12, i64 0, i32 12, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %16, %18
  %20 = ptrtoint %"class.Ice::Variable"* %14 to i64
  %21 = ptrtoint %"class.Ice::Variable"* %12 to i64
  br i1 %19, label %25, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %22, %7
  %26 = phi i32 [ %24, %22 ], [ -1, %7 ]
  %27 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %14, i64 0, i32 12, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %27, align 8
  %29 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %14, i64 0, i32 12, i32 0, i32 0, i32 1
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %29, align 8
  %31 = icmp eq %"struct.std::__1::pair"* %28, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %32, %25
  %36 = phi i32 [ %34, %32 ], [ -1, %25 ]
  %37 = icmp eq i32 %26, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %12, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %14, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp ult i32 %40, %42
  br i1 %43, label %46, label %124

44:                                               ; preds = %35
  %45 = icmp slt i32 %26, %36
  br i1 %45, label %46, label %124

46:                                               ; preds = %38, %44
  %47 = bitcast %"class.Ice::Variable"** %13 to i64*
  %48 = bitcast %"class.Ice::Variable"** %11 to i64*
  store i64 %21, i64* %47, align 8
  store i64 %20, i64* %48, align 8
  %49 = add i32 %8, 1
  %50 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %13, align 8
  %51 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, i64 -1
  %52 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %51, align 8
  %53 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %50, i64 0, i32 12, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %53, align 8
  %55 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %50, i64 0, i32 12, i32 0, i32 0, i32 1
  %56 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %55, align 8
  %57 = icmp eq %"struct.std::__1::pair"* %54, %56
  %58 = ptrtoint %"class.Ice::Variable"* %52 to i64
  %59 = ptrtoint %"class.Ice::Variable"* %50 to i64
  br i1 %57, label %63, label %60

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br label %63

63:                                               ; preds = %60, %46
  %64 = phi i32 [ %62, %60 ], [ -1, %46 ]
  %65 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 12, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %65, align 8
  %67 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 12, i32 0, i32 0, i32 1
  %68 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %67, align 8
  %69 = icmp eq %"struct.std::__1::pair"* %66, %68
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %70, %63
  %74 = phi i32 [ %72, %70 ], [ -1, %63 ]
  %75 = icmp eq i32 %64, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %50, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %52, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp ult i32 %78, %80
  br i1 %81, label %84, label %124

82:                                               ; preds = %73
  %83 = icmp slt i32 %64, %74
  br i1 %83, label %84, label %124

84:                                               ; preds = %76, %82
  %85 = bitcast %"class.Ice::Variable"** %51 to i64*
  store i64 %59, i64* %85, align 8
  store i64 %58, i64* %47, align 8
  %86 = add i32 %8, 2
  %87 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %51, align 8
  %88 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %89 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, align 8
  %90 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %87, i64 0, i32 12, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %90, align 8
  %92 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %87, i64 0, i32 12, i32 0, i32 0, i32 1
  %93 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %92, align 8
  %94 = icmp eq %"struct.std::__1::pair"* %91, %93
  %95 = ptrtoint %"class.Ice::Variable"* %89 to i64
  %96 = ptrtoint %"class.Ice::Variable"* %87 to i64
  br i1 %94, label %100, label %97

97:                                               ; preds = %84
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br label %100

100:                                              ; preds = %97, %84
  %101 = phi i32 [ %99, %97 ], [ -1, %84 ]
  %102 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %89, i64 0, i32 12, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %102, align 8
  %104 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %89, i64 0, i32 12, i32 0, i32 0, i32 1
  %105 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %104, align 8
  %106 = icmp eq %"struct.std::__1::pair"* %103, %105
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br label %110

110:                                              ; preds = %107, %100
  %111 = phi i32 [ %109, %107 ], [ -1, %100 ]
  %112 = icmp eq i32 %101, %111
  br i1 %112, label %113, label %119

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %87, i64 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %89, i64 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = icmp ult i32 %115, %117
  br i1 %118, label %121, label %124

119:                                              ; preds = %110
  %120 = icmp slt i32 %101, %111
  br i1 %120, label %121, label %124

121:                                              ; preds = %113, %119
  %122 = bitcast %"class.Ice::Variable"** %88 to i64*
  store i64 %96, i64* %122, align 8
  store i64 %95, i64* %85, align 8
  %123 = add i32 %8, 3
  br label %124

124:                                              ; preds = %113, %76, %38, %82, %121, %119, %44
  %125 = phi i32 [ %123, %121 ], [ %86, %119 ], [ %49, %82 ], [ %8, %44 ], [ %8, %38 ], [ %49, %76 ], [ %86, %113 ]
  ret i32 %125
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_SK_T_"(%"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::reverse_iterator"* nocapture readonly byval(%"class.std::__1::reverse_iterator") align 8, %"class.std::__1::reverse_iterator"* nocapture readonly byval(%"class.std::__1::reverse_iterator") align 8) unnamed_addr #0 {
  %9 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %2, %"class.Ice::Variable"** %3, %"class.Ice::Variable"** %4, %"class.Ice::Variable"** %5, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %6) #12
  %10 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 1, i32 0
  %11 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %10, align 8
  %12 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %11, i64 -1
  %13 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 1, i32 0
  %15 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %14, align 8
  %16 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %15, i64 -1
  %17 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %13, i64 0, i32 12, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %13, i64 0, i32 12, i32 0, i32 0, i32 1
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %19, %21
  %23 = ptrtoint %"class.Ice::Variable"* %17 to i64
  %24 = ptrtoint %"class.Ice::Variable"* %13 to i64
  br i1 %22, label %28, label %25

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %25, %8
  %29 = phi i32 [ %27, %25 ], [ -1, %8 ]
  %30 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %17, i64 0, i32 12, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %32 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %17, i64 0, i32 12, i32 0, i32 0, i32 1
  %33 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %32, align 8
  %34 = icmp eq %"struct.std::__1::pair"* %31, %33
  br i1 %34, label %38, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br label %38

38:                                               ; preds = %35, %28
  %39 = phi i32 [ %37, %35 ], [ -1, %28 ]
  %40 = icmp eq i32 %29, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %13, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %17, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %49, label %164

47:                                               ; preds = %38
  %48 = icmp slt i32 %29, %39
  br i1 %48, label %49, label %164

49:                                               ; preds = %41, %47
  %50 = bitcast %"class.Ice::Variable"** %16 to i64*
  %51 = bitcast %"class.Ice::Variable"** %12 to i64*
  store i64 %24, i64* %50, align 8
  store i64 %23, i64* %51, align 8
  %52 = add i32 %9, 1
  %53 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %54 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %5, i64 -1
  %55 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %54, align 8
  %56 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 0, i32 12, i32 0, i32 0, i32 0
  %57 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %56, align 8
  %58 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 0, i32 12, i32 0, i32 0, i32 1
  %59 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %58, align 8
  %60 = icmp eq %"struct.std::__1::pair"* %57, %59
  %61 = ptrtoint %"class.Ice::Variable"* %55 to i64
  %62 = ptrtoint %"class.Ice::Variable"* %53 to i64
  br i1 %60, label %66, label %63

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br label %66

66:                                               ; preds = %63, %49
  %67 = phi i32 [ %65, %63 ], [ -1, %49 ]
  %68 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %55, i64 0, i32 12, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %68, align 8
  %70 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %55, i64 0, i32 12, i32 0, i32 0, i32 1
  %71 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %70, align 8
  %72 = icmp eq %"struct.std::__1::pair"* %69, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %73, %66
  %77 = phi i32 [ %75, %73 ], [ -1, %66 ]
  %78 = icmp eq i32 %67, %77
  br i1 %78, label %79, label %85

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %55, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp ult i32 %81, %83
  br i1 %84, label %87, label %164

85:                                               ; preds = %76
  %86 = icmp slt i32 %67, %77
  br i1 %86, label %87, label %164

87:                                               ; preds = %79, %85
  %88 = bitcast %"class.Ice::Variable"** %54 to i64*
  store i64 %62, i64* %88, align 8
  store i64 %61, i64* %50, align 8
  %89 = add i32 %9, 2
  %90 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %54, align 8
  %91 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, i64 -1
  %92 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %91, align 8
  %93 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %90, i64 0, i32 12, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %93, align 8
  %95 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %90, i64 0, i32 12, i32 0, i32 0, i32 1
  %96 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %95, align 8
  %97 = icmp eq %"struct.std::__1::pair"* %94, %96
  %98 = ptrtoint %"class.Ice::Variable"* %92 to i64
  %99 = ptrtoint %"class.Ice::Variable"* %90 to i64
  br i1 %97, label %103, label %100

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br label %103

103:                                              ; preds = %100, %87
  %104 = phi i32 [ %102, %100 ], [ -1, %87 ]
  %105 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %92, i64 0, i32 12, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %105, align 8
  %107 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %92, i64 0, i32 12, i32 0, i32 0, i32 1
  %108 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %107, align 8
  %109 = icmp eq %"struct.std::__1::pair"* %106, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %103
  %114 = phi i32 [ %112, %110 ], [ -1, %103 ]
  %115 = icmp eq i32 %104, %114
  br i1 %115, label %116, label %122

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %90, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %92, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = icmp ult i32 %118, %120
  br i1 %121, label %124, label %164

122:                                              ; preds = %113
  %123 = icmp slt i32 %104, %114
  br i1 %123, label %124, label %164

124:                                              ; preds = %116, %122
  %125 = bitcast %"class.Ice::Variable"** %91 to i64*
  store i64 %99, i64* %125, align 8
  store i64 %98, i64* %88, align 8
  %126 = add i32 %9, 3
  %127 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %91, align 8
  %128 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %129 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %128, align 8
  %130 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %127, i64 0, i32 12, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %130, align 8
  %132 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %127, i64 0, i32 12, i32 0, i32 0, i32 1
  %133 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %132, align 8
  %134 = icmp eq %"struct.std::__1::pair"* %131, %133
  %135 = ptrtoint %"class.Ice::Variable"* %129 to i64
  %136 = ptrtoint %"class.Ice::Variable"* %127 to i64
  br i1 %134, label %140, label %137

137:                                              ; preds = %124
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br label %140

140:                                              ; preds = %137, %124
  %141 = phi i32 [ %139, %137 ], [ -1, %124 ]
  %142 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %129, i64 0, i32 12, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %142, align 8
  %144 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %129, i64 0, i32 12, i32 0, i32 0, i32 1
  %145 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %144, align 8
  %146 = icmp eq %"struct.std::__1::pair"* %143, %145
  br i1 %146, label %150, label %147

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br label %150

150:                                              ; preds = %147, %140
  %151 = phi i32 [ %149, %147 ], [ -1, %140 ]
  %152 = icmp eq i32 %141, %151
  br i1 %152, label %153, label %159

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %127, i64 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %129, i64 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = icmp ult i32 %155, %157
  br i1 %158, label %161, label %164

159:                                              ; preds = %150
  %160 = icmp slt i32 %141, %151
  br i1 %160, label %161, label %164

161:                                              ; preds = %153, %159
  %162 = bitcast %"class.Ice::Variable"** %128 to i64*
  store i64 %136, i64* %162, align 8
  store i64 %135, i64* %125, align 8
  %163 = add i32 %9, 4
  br label %164

164:                                              ; preds = %153, %116, %79, %41, %85, %159, %161, %122, %47
  %165 = phi i32 [ %163, %161 ], [ %126, %159 ], [ %89, %122 ], [ %52, %85 ], [ %9, %47 ], [ %9, %41 ], [ %52, %79 ], [ %89, %116 ], [ %126, %153 ]
  ret i32 %165
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEbT0_SK_T_"(%"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.Ice::Variable"**) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::reverse_iterator", align 8
  %6 = alloca %"class.std::__1::reverse_iterator", align 8
  %7 = alloca %"class.std::__1::reverse_iterator", align 8
  %8 = ptrtoint %"class.Ice::Variable"** %1 to i64
  %9 = ptrtoint %"class.Ice::Variable"** %3 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  switch i64 %11, label %75 [
    i64 0, label %173
    i64 1, label %173
    i64 2, label %12
    i64 3, label %50
    i64 4, label %54
    i64 5, label %63
  ]

12:                                               ; preds = %4
  %13 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %14 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %15 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %14, align 8
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %13, i64 0, i32 12, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %13, i64 0, i32 12, i32 0, i32 0, i32 1
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = icmp eq %"struct.std::__1::pair"* %17, %19
  %21 = ptrtoint %"class.Ice::Variable"* %15 to i64
  %22 = ptrtoint %"class.Ice::Variable"* %13 to i64
  br i1 %20, label %26, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %23, %12
  %27 = phi i32 [ %25, %23 ], [ -1, %12 ]
  %28 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %15, i64 0, i32 12, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %15, i64 0, i32 12, i32 0, i32 0, i32 1
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %32 = icmp eq %"struct.std::__1::pair"* %29, %31
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %33, %26
  %37 = phi i32 [ %35, %33 ], [ -1, %26 ]
  %38 = icmp eq i32 %27, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %13, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %15, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %41, %43
  br i1 %44, label %47, label %173

45:                                               ; preds = %36
  %46 = icmp slt i32 %27, %37
  br i1 %46, label %47, label %173

47:                                               ; preds = %39, %45
  %48 = bitcast %"class.Ice::Variable"** %14 to i64*
  %49 = bitcast %"class.Ice::Variable"** %3 to i64*
  store i64 %22, i64* %48, align 8
  store i64 %21, i64* %49, align 8
  br label %173

50:                                               ; preds = %4
  %51 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %52 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, i64 1
  %53 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %51, %"class.Ice::Variable"** %51, %"class.Ice::Variable"** %2, %"class.Ice::Variable"** %52) #12
  br label %173

54:                                               ; preds = %4
  %55 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %56 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -2
  %57 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, i64 1
  %58 = ptrtoint %"class.Ice::Variable"** %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %5, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %2, %"class.Ice::Variable"*** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %5, i64 0, i32 1
  %61 = bitcast %"class.std::__1::__wrap_iter.352"* %60 to i64*
  store i64 %58, i64* %61, align 8
  %62 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %55, %"class.Ice::Variable"** %55, %"class.Ice::Variable"** %56, %"class.Ice::Variable"** %56, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %5) #12
  br label %173

63:                                               ; preds = %4
  %64 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %65 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -2
  %66 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -3
  %67 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %66, %"class.Ice::Variable"*** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 1, i32 0
  store %"class.Ice::Variable"** %66, %"class.Ice::Variable"*** %68, align 8
  %69 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, i64 1
  %70 = ptrtoint %"class.Ice::Variable"** %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %2, %"class.Ice::Variable"*** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 1
  %73 = bitcast %"class.std::__1::__wrap_iter.352"* %72 to i64*
  store i64 %70, i64* %73, align 8
  %74 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %64, %"class.Ice::Variable"** %64, %"class.Ice::Variable"** %65, %"class.Ice::Variable"** %65, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %6, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %7) #12
  br label %173

75:                                               ; preds = %4
  %76 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -2
  %77 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %78 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice10LinearScan4initENS1_12RegAllocKindENS_3setIPNS1_8VariableENS_4lessIS6_EENS1_12sz_allocatorIS6_NS1_18CfgAllocatorTraitsEEEEEE3$_0NS_16reverse_iteratorINS_11__wrap_iterIPS6_EEEEEEjT0_SK_SK_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %77, %"class.Ice::Variable"** %77, %"class.Ice::Variable"** %76, %"class.Ice::Variable"** %76) #12
  %79 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -3
  %80 = icmp eq %"class.Ice::Variable"** %79, %3
  br i1 %80, label %173, label %81

81:                                               ; preds = %75, %168
  %82 = phi i32 [ %169, %168 ], [ 0, %75 ]
  %83 = phi %"class.Ice::Variable"** [ %85, %168 ], [ %79, %75 ]
  %84 = phi %"class.Ice::Variable"** [ %83, %168 ], [ %76, %75 ]
  %85 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %83, i64 -1
  %86 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %85, align 8
  %87 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %84, i64 -1
  %88 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %87, align 8
  %89 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %86, i64 0, i32 12, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %91 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %86, i64 0, i32 12, i32 0, i32 0, i32 1
  %92 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %91, align 8
  %93 = icmp eq %"struct.std::__1::pair"* %90, %92
  %94 = ptrtoint %"class.Ice::Variable"* %86 to i64
  %95 = ptrtoint %"class.Ice::Variable"* %88 to i64
  br i1 %93, label %99, label %96

96:                                               ; preds = %81
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %81
  %100 = phi i32 [ %98, %96 ], [ -1, %81 ]
  %101 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %88, i64 0, i32 12, i32 0, i32 0, i32 0
  %102 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %101, align 8
  %103 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %88, i64 0, i32 12, i32 0, i32 0, i32 1
  %104 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %103, align 8
  %105 = icmp eq %"struct.std::__1::pair"* %102, %104
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %106, %99
  %110 = phi i32 [ %108, %106 ], [ -1, %99 ]
  %111 = icmp eq i32 %100, %110
  br i1 %111, label %112, label %118

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %86, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %88, i64 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = icmp ult i32 %114, %116
  br i1 %117, label %120, label %168

118:                                              ; preds = %109
  %119 = icmp slt i32 %100, %110
  br i1 %119, label %120, label %168

120:                                              ; preds = %112, %118
  %121 = bitcast %"class.Ice::Variable"** %85 to i64*
  %122 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %86, i64 0, i32 1
  %123 = bitcast %"class.Ice::Variable"** %87 to i64*
  store i64 %95, i64* %121, align 8
  %124 = icmp eq %"class.Ice::Variable"** %84, %1
  br i1 %124, label %164, label %125

125:                                              ; preds = %120, %157
  %126 = phi i64* [ %158, %157 ], [ %123, %120 ]
  %127 = phi %"class.Ice::Variable"** [ %128, %157 ], [ %84, %120 ]
  %128 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %127, i64 1
  %129 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %127, align 8
  %130 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %131 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %91, align 8
  %132 = icmp eq %"struct.std::__1::pair"* %130, %131
  %133 = ptrtoint %"class.Ice::Variable"* %129 to i64
  br i1 %132, label %137, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %125
  %138 = phi i32 [ %136, %134 ], [ -1, %125 ]
  %139 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %129, i64 0, i32 12, i32 0, i32 0, i32 0
  %140 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %139, align 8
  %141 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %129, i64 0, i32 12, i32 0, i32 0, i32 1
  %142 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %141, align 8
  %143 = icmp eq %"struct.std::__1::pair"* %140, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %137
  %148 = phi i32 [ %146, %144 ], [ -1, %137 ]
  %149 = icmp eq i32 %138, %148
  br i1 %149, label %150, label %155

150:                                              ; preds = %147
  %151 = load i32, i32* %122, align 8
  %152 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %129, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = icmp ult i32 %151, %153
  br i1 %154, label %157, label %164

155:                                              ; preds = %147
  %156 = icmp slt i32 %138, %148
  br i1 %156, label %157, label %164

157:                                              ; preds = %155, %150
  %158 = bitcast %"class.Ice::Variable"** %127 to i64*
  %159 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %127, i64 -1
  %160 = bitcast %"class.Ice::Variable"** %159 to i64*
  store i64 %133, i64* %160, align 8
  %161 = icmp eq %"class.Ice::Variable"** %128, %1
  br i1 %161, label %162, label %125

162:                                              ; preds = %157
  %163 = bitcast %"class.Ice::Variable"** %127 to i64*
  br label %164

164:                                              ; preds = %150, %155, %162, %120
  %165 = phi i64* [ %123, %120 ], [ %163, %162 ], [ %126, %155 ], [ %126, %150 ]
  store i64 %94, i64* %165, align 8
  %166 = add i32 %82, 1
  %167 = icmp eq i32 %166, 8
  br i1 %167, label %171, label %168

168:                                              ; preds = %164, %112, %118
  %169 = phi i32 [ %82, %118 ], [ %82, %112 ], [ %166, %164 ]
  %170 = icmp eq %"class.Ice::Variable"** %85, %3
  br i1 %170, label %173, label %81

171:                                              ; preds = %164
  %172 = icmp eq %"class.Ice::Variable"** %85, %3
  br label %173

173:                                              ; preds = %168, %75, %171, %39, %45, %47, %4, %4, %63, %54, %50
  %174 = phi i1 [ true, %63 ], [ true, %54 ], [ true, %50 ], [ true, %4 ], [ true, %4 ], [ true, %47 ], [ true, %45 ], [ true, %39 ], [ %172, %171 ], [ true, %75 ], [ true, %168 ]
  ret i1 %174
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Variable"** @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EEPS3_(%"class.std::__1::vector.201"*, %"struct.std::__1::__split_buffer.391"* dereferenceable(40), %"class.Ice::Variable"**) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %1, i64 0, i32 1
  %5 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %6, align 8
  %8 = icmp eq %"class.Ice::Variable"** %7, %2
  br i1 %8, label %20, label %9

9:                                                ; preds = %3, %9
  %10 = phi %"class.Ice::Variable"** [ %18, %9 ], [ %5, %3 ]
  %11 = phi %"class.Ice::Variable"** [ %13, %9 ], [ %2, %3 ]
  %12 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %10, i64 -1
  %13 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %11, i64 -1
  %14 = bitcast %"class.Ice::Variable"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.Ice::Variable"** %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %4, align 8
  %18 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %17, i64 -1
  store %"class.Ice::Variable"** %18, %"class.Ice::Variable"*** %4, align 8
  %19 = icmp eq %"class.Ice::Variable"** %13, %7
  br i1 %19, label %20, label %9

20:                                               ; preds = %9, %3
  %21 = phi %"class.Ice::Variable"** [ %5, %3 ], [ %18, %9 ]
  %22 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 1
  %23 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %1, i64 0, i32 2
  %25 = icmp eq %"class.Ice::Variable"** %23, %2
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = ptrtoint %"class.Ice::Variable"** %21 to i64
  %28 = bitcast %"class.Ice::Variable"*** %4 to i64*
  br label %45

29:                                               ; preds = %20
  %30 = bitcast %"class.Ice::Variable"*** %24 to i64**
  %31 = load i64*, i64** %30, align 8
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi i64* [ %31, %29 ], [ %41, %32 ]
  %34 = phi %"class.Ice::Variable"** [ %2, %29 ], [ %37, %32 ]
  %35 = bitcast %"class.Ice::Variable"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  %37 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %34, i64 1
  %38 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %24, align 8
  %39 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %38, i64 1
  store %"class.Ice::Variable"** %39, %"class.Ice::Variable"*** %24, align 8
  %40 = icmp eq %"class.Ice::Variable"** %37, %23
  %41 = bitcast %"class.Ice::Variable"** %39 to i64*
  br i1 %40, label %42, label %32

42:                                               ; preds = %32
  %43 = bitcast %"class.Ice::Variable"*** %4 to i64*
  %44 = load i64, i64* %43, align 8
  br label %45

45:                                               ; preds = %26, %42
  %46 = phi i64* [ %28, %26 ], [ %43, %42 ]
  %47 = phi i64 [ %27, %26 ], [ %44, %42 ]
  %48 = bitcast %"class.std::__1::vector.201"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 %47, i64* %48, align 8
  store i64 %49, i64* %46, align 8
  %50 = bitcast %"class.Ice::Variable"*** %22 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.Ice::Variable"*** %24 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %1, i64 0, i32 3, i32 0, i32 0
  %56 = bitcast %"class.Ice::Variable"*** %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.Ice::Variable"*** %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  %60 = load i64, i64* %46, align 8
  %61 = bitcast %"struct.std::__1::__split_buffer.391"* %1 to i64*
  store i64 %60, i64* %61, align 8
  ret %"class.Ice::Variable"** %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { optsize }
attributes #13 = { noreturn nounwind optsize }
attributes #14 = { nounwind optsize }
attributes #15 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK3Ice14SmallBitVectoranERKS0_: argument 0"}
!7 = distinct !{!7, !"_ZNK3Ice14SmallBitVectoranERKS0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3Ice13reverse_rangeINSt3__16vectorIPNS_8VariableENS_12sz_allocatorIS4_NS_18CfgAllocatorTraitsEEEEEEEN4llvm14iterator_rangeINT_16reverse_iteratorEEERSB_: argument 0"}
!10 = distinct !{!10, !"_ZN3Ice13reverse_rangeINSt3__16vectorIPNS_8VariableENS_12sz_allocatorIS4_NS_18CfgAllocatorTraitsEEEEEEEN4llvm14iterator_rangeINT_16reverse_iteratorEEERSB_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK3Ice14SmallBitVectoranERKS0_: argument 0"}
!19 = distinct !{!19, !"_ZNK3Ice14SmallBitVectoranERKS0_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK3Ice14SmallBitVectoranERKS0_: argument 0"}
!22 = distinct !{!22, !"_ZNK3Ice14SmallBitVectoranERKS0_"}
