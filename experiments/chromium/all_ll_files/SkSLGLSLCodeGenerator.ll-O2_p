; ModuleID = '../../third_party/skia/src/sksl/codegen/SkSLGLSLCodeGenerator.cpp'
source_filename = "../../third_party/skia/src/sksl/codegen/SkSLGLSLCodeGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::GLSLCodeGenerator" = type { %"class.SkSL::CodeGenerator", i8*, %"class.SkSL::Context"*, %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::String", i32, i32, i8, %"class.std::__1::set", i8, i8, i8, i8, i8, i8, i8, %"class.SkSL::String" }
%"class.SkSL::CodeGenerator" = type { i32 (...)**, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"*, %"class.SkSL::OutputStream"* }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.50", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.62", %"class.std::__1::vector.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::String"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.SkSL::ProgramConfig"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.49" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.49", %"class.std::__1::vector.117", i8, %"class.std::__1::vector.125", %"class.std::__1::forward_list", %class.SkTHashMap.138, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"class.std::__1::unique_ptr.119"*, %"class.std::__1::unique_ptr.119"*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.SkSL::Symbol"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.13", i32, i32, %"class.std::__1::vector.19", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.21" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::unique_ptr.119"* }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::unique_ptr.127"*, %"class.std::__1::unique_ptr.127"*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::unique_ptr.127"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.138 = type { %class.SkTHashTable.139 }
%class.SkTHashTable.139 = type { i32, i32, %class.SkAutoTArray.140 }
%class.SkAutoTArray.140 = type { %"class.std::__1::unique_ptr.141" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.233" }
%"struct.std::__1::pair.233" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::unique_ptr.64"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.46", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap, %class.SkTHashMap.97 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.235", [4 x i8] }
%"struct.std::__1::pair.base.235" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.147" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.237", [4 x i8] }
%"struct.std::__1::pair.base.237" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.193", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.155", %"class.std::__1::unordered_set.161", %"struct.SkSL::ASTNode"* }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.161" = type { %"class.std::__1::__hash_table.162" }
%"class.std::__1::__hash_table.162" = type <{ %"class.std::__1::unique_ptr.163", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.181", [4 x i8] }>
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165", %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base.166"** }
%"struct.std::__1::__hash_node_base.166" = type { %"struct.std::__1::__hash_node_base.166"* }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::__bucket_list_deallocator.168" }
%"class.std::__1::__bucket_list_deallocator.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.166" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.186"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.SkSL::Variable"** }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.SkSL::OutputStream" = type { i32 (...)** }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::StringStream" = type { %"class.SkSL::OutputStream", %class.SkDynamicMemoryWStream, %"class.SkSL::String" }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.SkSL::StructDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Type"* }
%"class.SkSL::BinaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.147", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.147" }
%"class.SkSL::Operator" = type { i32 }
%"class.SkSL::ConstructorDiagonalMatrix" = type { %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::Literal.153" }
%"class.SkSL::SingleArgumentConstructor" = type { %"class.SkSL::AnyConstructor", %"class.std::__1::unique_ptr.147" }
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.147" }
%"class.SkSL::Literal.153" = type <{ %"class.SkSL::Expression", float, [4 x i8] }>
%"class.SkSL::Literal.154" = type { %"class.SkSL::Expression", i64 }
%"class.SkSL::FieldAccess" = type { %"class.SkSL::Expression", i32, i8, %"class.std::__1::unique_ptr.147" }
%"class.SkSL::FunctionCall" = type { %"class.SkSL::Expression", %"class.SkSL::FunctionDeclaration"*, %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.147"*, i64 }
%"class.SkSL::PrefixExpression" = type { %"class.SkSL::Expression", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.147" }
%"class.SkSL::PostfixExpression" = type <{ %"class.SkSL::Expression", %"class.std::__1::unique_ptr.147", %"class.SkSL::Operator", [4 x i8] }>
%"class.SkSL::Setting" = type { %"class.SkSL::Expression", %"class.SkSL::String" }
%"struct.SkSL::Swizzle" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.147", %class.SkSTArray.200 }
%class.SkSTArray.200 = type { %class.SkAlignedSTStorage.201, %class.SkTArray.202 }
%class.SkAlignedSTStorage.201 = type { [4 x i8] }
%class.SkTArray.202 = type { i8*, i64 }
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%"class.SkSL::TernaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147" }
%"struct.SkSL::IndexExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147" }
%"class.SkSL::Literal" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { i32*, i32*, %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { i32* }
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray.212, %"class.std::__1::shared_ptr.49", i8, [7 x i8] }>
%class.SkSTArray.212 = type { %class.SkAlignedSTStorage.213, %class.SkTArray.214 }
%class.SkAlignedSTStorage.213 = type { [16 x i8] }
%class.SkTArray.214 = type { %"class.std::__1::unique_ptr.155"*, i64 }
%"class.SkSL::ReturnStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.147" }
%"class.SkSL::IfStatement" = type <{ %"class.SkSL::Statement", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8, [7 x i8] }>
%"class.SkSL::ForStatement" = type { %"class.SkSL::Statement", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.155" }
%"class.SkSL::DoStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.147" }
%"class.SkSL::SwitchStatement" = type { %"class.SkSL::Statement", i8, %"class.std::__1::unique_ptr.147", %class.SkSTArray.212, %"class.std::__1::shared_ptr.49" }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.SkSL::FunctionPrototype" = type <{ %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, [7 x i8] }>
%"class.SkSL::InterfaceBlock" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Variable"*, %"class.SkSL::String", %"class.SkSL::String", i32, %"class.std::__1::shared_ptr.49" }
%"class.SkSL::SwitchCase" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.155" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.SkSL::String" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZN4SkSL12StringStream9writeTextEPKc = comdat any

$_ZN4SkSL12StringStream5writeEPKvm = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZNK4SkSL12StringStream3strEv = comdat any

$_ZN4SkSL12StringStreamD2Ev = comdat any

$_ZNK4SkSL6Layout11descriptionEv = comdat any

$_ZN4SkSL17GLSLCodeGeneratorD2Ev = comdat any

$_ZN4SkSL17GLSLCodeGeneratorD0Ev = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZNK4SkSL12OutputStream7isValidEv = comdat any

$_ZN4SkSL12StringStream6write8Eh = comdat any

$_ZN4SkSL12StringStreamD0Ev = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

$_ZTVN4SkSL12StringStreamE = comdat any

@.str = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"#extension \00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c" : require\0A\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c" : enable\0A\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"vec\00", align 1
@.str.8 = private unnamed_addr constant [66 x i8] c"../../third_party/skia/src/sksl/codegen/SkSLGLSLCodeGenerator.cpp\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"unsupported vector type\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"mat\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"unsupported matrix type\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"%s[]\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"%s[%d]\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c" {\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"};\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"minAbsHackVar\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"((\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c") < (\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c") ? \00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"(1.0 / sqrt(\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"))\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"_determinant2\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"float \00", align 1
@.str.37 = private unnamed_addr constant [61 x i8] c"(mat2 m) {    return m[0][0] * m[1][1] - m[0][1] * m[1][0];}\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"_determinant3\00", align 1
@.str.39 = private unnamed_addr constant [334 x i8] c"(mat3 m) {    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];    float b01 = a22 * a11 - a12 * a21;    float b11 = -a22 * a10 + a12 * a20;    float b21 = a21 * a10 - a11 * a20;    return a00 * b01 + a01 * b11 + a02 * b21;}\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"_determinant4\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"mat4 \00", align 1
@.str.42 = private unnamed_addr constant [825 x i8] c"(mat4 m) {    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3];    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3];    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3];    float a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3];    float b00 = a00 * a11 - a01 * a10;    float b01 = a00 * a12 - a02 * a10;    float b02 = a00 * a13 - a03 * a10;    float b03 = a01 * a12 - a02 * a11;    float b04 = a01 * a13 - a03 * a11;    float b05 = a02 * a13 - a03 * a12;    float b06 = a20 * a31 - a21 * a30;    float b07 = a20 * a32 - a22 * a30;    float b08 = a20 * a33 - a23 * a30;    float b09 = a21 * a32 - a22 * a31;    float b10 = a21 * a33 - a23 * a31;    float b11 = a22 * a33 - a23 * a32;    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;}\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"_inverse2\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"mat2 \00", align 1
@.str.46 = private unnamed_addr constant [108 x i8] c"(mat2 m) {    return mat2(m[1][1], -m[0][1], -m[1][0], m[0][0]) / (m[0][0] * m[1][1] - m[0][1] * m[1][0]);}\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"_inverse3\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"mat3 \00", align 1
@.str.49 = private unnamed_addr constant [559 x i8] c"(mat3 m) {    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];    float b01 = a22 * a11 - a12 * a21;    float b11 = -a22 * a10 + a12 * a20;    float b21 = a21 * a10 - a11 * a20;    float det = a00 * b01 + a01 * b11 + a02 * b21;    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),                b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),                b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;}\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"_inverse4\00", align 1
@.str.51 = private unnamed_addr constant [1541 x i8] c"(mat4 m) {    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3];    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3];    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3];    float a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3];    float b00 = a00 * a11 - a01 * a10;    float b01 = a00 * a12 - a02 * a10;    float b02 = a00 * a13 - a03 * a10;    float b03 = a01 * a12 - a02 * a11;    float b04 = a01 * a13 - a03 * a11;    float b05 = a02 * a13 - a03 * a12;    float b06 = a20 * a31 - a21 * a30;    float b07 = a20 * a32 - a22 * a30;    float b08 = a20 * a33 - a23 * a30;    float b09 = a21 * a32 - a22 * a31;    float b10 = a21 * a33 - a23 * a31;    float b11 = a22 * a33 - a23 * a32;    float det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 -                 b04 * b07 + b05 * b06;    return mat4(        a11 * b11 - a12 * b10 + a13 * b09,        a02 * b10 - a01 * b11 - a03 * b09,        a31 * b05 - a32 * b04 + a33 * b03,        a22 * b04 - a21 * b05 - a23 * b03,        a12 * b08 - a10 * b11 - a13 * b07,        a00 * b11 - a02 * b08 + a03 * b07,        a32 * b02 - a30 * b05 - a33 * b01,        a20 * b05 - a22 * b02 + a23 * b01,        a10 * b10 - a11 * b08 + a13 * b06,        a01 * b08 - a00 * b10 - a03 * b06,        a30 * b04 - a31 * b02 + a33 * b00,        a21 * b02 - a20 * b04 - a23 * b00,        a11 * b07 - a10 * b09 - a12 * b06,        a00 * b09 - a01 * b07 + a02 * b06,        a31 * b01 - a30 * b03 - a32 * b00,        a20 * b03 - a21 * b01 + a22 * b00) / det;}\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"transpose\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c" m) {\0Areturn \00", align 1
@.str.54 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.55 = private unnamed_addr constant [3 x i8] c"m[\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"][\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"); }\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"_absemulation\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"int \00", align 1
@.str.61 = private unnamed_addr constant [37 x i8] c"(int x) {\0A    return x * sign(x);\0A}\0A\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"atan(\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c", -1.0 * \00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c"-dFdy\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c") * (\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c") + (\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"(0.5 - sign(\00", align 1
@.str.68 = private unnamed_addr constant [22 x i8] c") * (0.5 - fract(abs(\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"))))\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"exp2(\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c" * log2(\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"clamp(\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c", 0.0, 1.0)\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"1D\00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c"2D\00", align 1
@.str.76 = private unnamed_addr constant [3 x i8] c"3D\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"Cube\00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"2DRect\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"Buffer\00", align 1
@.str.80 = private unnamed_addr constant [12 x i8] c"SubpassData\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"texture\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"Proj\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c", -0.5\00", align 1
@.str.84 = private unnamed_addr constant [44 x i8] c"(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) * \00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"highp \00", align 1
@.str.86 = private unnamed_addr constant [63 x i8] c"    float sk_FragCoord_InvW = 1. / sk_FragCoord_Workaround.w;\0A\00", align 1
@.str.87 = private unnamed_addr constant [108 x i8] c"    vec4 sk_FragCoord_Resolved = vec4(sk_FragCoord_Workaround.xyz * sk_FragCoord_InvW, sk_FragCoord_InvW);\0A\00", align 1
@.str.88 = private unnamed_addr constant [76 x i8] c"    sk_FragCoord_Resolved.xy = floor(sk_FragCoord_Resolved.xy) + vec2(.5);\0A\00", align 1
@.str.89 = private unnamed_addr constant [22 x i8] c"sk_FragCoord_Resolved\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"gl_FragCoord\00", align 1
@.str.91 = private unnamed_addr constant [49 x i8] c"layout(origin_upper_left) in vec4 gl_FragCoord;\0A\00", align 1
@.str.92 = private unnamed_addr constant [110 x i8] c"    vec4 sk_FragCoord = vec4(gl_FragCoord.x, u_skRTHeight - gl_FragCoord.y, gl_FragCoord.z, gl_FragCoord.w);\0A\00", align 1
@.str.93 = private unnamed_addr constant [13 x i8] c"sk_FragCoord\00", align 1
@.str.94 = private unnamed_addr constant [13 x i8] c"sk_FragColor\00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c"gl_FragColor\00", align 1
@.str.96 = private unnamed_addr constant [18 x i8] c"(!gl_FrontFacing)\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"gl_FrontFacing\00", align 1
@.str.98 = private unnamed_addr constant [12 x i8] c"gl_VertexID\00", align 1
@.str.99 = private unnamed_addr constant [14 x i8] c"gl_InstanceID\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"gl_in\00", align 1
@.str.101 = private unnamed_addr constant [16 x i8] c"gl_InvocationID\00", align 1
@.str.102 = private unnamed_addr constant [12 x i8] c"sk_Position\00", align 1
@.str.103 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"gl_Position\00", align 1
@.str.105 = private unnamed_addr constant [13 x i8] c"sk_PointSize\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"gl_PointSize\00", align 1
@.str.107 = private unnamed_addr constant [9 x i8] c"x\00y\00z\00w\00\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"_tempMatrix\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c";\0A    \00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"), (\00", align 1
@.str.111 = private unnamed_addr constant [28 x i8] c"sk_FragCoord_Workaround = (\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c" ? \00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.115 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.116 = private unnamed_addr constant [73 x i8] c"internal error; setting was not folded to a constant during compilation\0A\00", align 1
@.str.117 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.118 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"flat \00", align 1
@.str.120 = private unnamed_addr constant [15 x i8] c"noperspective \00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"inout \00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"attribute \00", align 1
@.str.123 = private unnamed_addr constant [9 x i8] c"varying \00", align 1
@.str.124 = private unnamed_addr constant [4 x i8] c"in \00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"out \00", align 1
@.str.126 = private unnamed_addr constant [9 x i8] c"uniform \00", align 1
@.str.127 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.128 = private unnamed_addr constant [13 x i8] c"sk_PerVertex\00", align 1
@.str.129 = private unnamed_addr constant [9 x i8] c"mediump \00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"break;\00", align 1
@.str.131 = private unnamed_addr constant [10 x i8] c"continue;\00", align 1
@.str.132 = private unnamed_addr constant [9 x i8] c"discard;\00", align 1
@.str.133 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"if (\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.136 = private unnamed_addr constant [7 x i8] c" else \00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c"while (\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"for (\00", align 1
@.str.139 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c"do \00", align 1
@.str.141 = private unnamed_addr constant [9 x i8] c" while (\00", align 1
@.str.142 = private unnamed_addr constant [3 x i8] c");\00", align 1
@.str.143 = private unnamed_addr constant [17 x i8] c"_tmpLoopSeenOnce\00", align 1
@.str.144 = private unnamed_addr constant [6 x i8] c"bool \00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c" = false;\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"while (true) {\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c") {\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"if (!\00", align 1
@.str.149 = private unnamed_addr constant [9 x i8] c" = true;\00", align 1
@.str.150 = private unnamed_addr constant [9 x i8] c"switch (\00", align 1
@.str.151 = private unnamed_addr constant [6 x i8] c"case \00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.153 = private unnamed_addr constant [9 x i8] c"default:\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.155 = private unnamed_addr constant [19 x i8] c"vec4 sk_FragColor;\00", align 1
@.str.156 = private unnamed_addr constant [21 x i8] c"float u_skRTHeight;\0A\00", align 1
@.str.157 = private unnamed_addr constant [31 x i8] c"vec4 sk_FragCoord_Workaround;\0A\00", align 1
@.str.158 = private unnamed_addr constant [25 x i8] c"precision mediump float;\00", align 1
@.str.159 = private unnamed_addr constant [29 x i8] c"precision mediump sampler2D;\00", align 1
@.str.160 = private unnamed_addr constant [38 x i8] c"precision mediump samplerExternalOES;\00", align 1
@.str.161 = private unnamed_addr constant [33 x i8] c"precision mediump sampler2DRect;\00", align 1
@_ZTVN4SkSL17GLSLCodeGeneratorE = hidden unnamed_addr constant { [27 x i8*] } { [27 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*)* @_ZN4SkSL17GLSLCodeGeneratorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*)* @_ZN4SkSL17GLSLCodeGeneratorD0Ev to i8*), i8* bitcast (i1 (%"class.SkSL::GLSLCodeGenerator"*)* @_ZN4SkSL17GLSLCodeGenerator12generateCodeEv to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*)* @_ZN4SkSL17GLSLCodeGenerator11writeHeaderEv to i8*), i8* bitcast (i1 (%"class.SkSL::GLSLCodeGenerator"*)* @_ZNK4SkSL17GLSLCodeGenerator22usesPrecisionModifiersEv to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)* @_ZN4SkSL17GLSLCodeGenerator11getTypeNameERKNS_4TypeE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL17GLSLCodeGenerator13writeFunctionERKNS_18FunctionDefinitionE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*)* @_ZN4SkSL17GLSLCodeGenerator14writeInputVarsEv to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)* @_ZN4SkSL17GLSLCodeGenerator19writeVarInitializerERKNS_8VariableERKNS_10ExpressionE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)* @_ZN4SkSL17GLSLCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)* @_ZN4SkSL17GLSLCodeGenerator17writeFunctionCallERKNS_12FunctionCallE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)* @_ZN4SkSL17GLSLCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorENS_8Operator10PrecedenceE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)* @_ZN4SkSL17GLSLCodeGenerator20writeCastConstructorERKNS_14AnyConstructorENS_8Operator10PrecedenceE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)* @_ZN4SkSL17GLSLCodeGenerator16writeFieldAccessERKNS_11FieldAccessE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)* @_ZN4SkSL17GLSLCodeGenerator12writeSwizzleERKNS_7SwizzleE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)* @_ZN4SkSL17GLSLCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)* @_ZN4SkSL17GLSLCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionENS_8Operator10PrecedenceE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)* @_ZN4SkSL17GLSLCodeGenerator20writeIndexExpressionERKNS_15IndexExpressionE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)* @_ZN4SkSL17GLSLCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)* @_ZN4SkSL17GLSLCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)* @_ZN4SkSL17GLSLCodeGenerator12writeSettingERKNS_7SettingE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)* @_ZN4SkSL17GLSLCodeGenerator16writeIfStatementERKNS_11IfStatementE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)* @_ZN4SkSL17GLSLCodeGenerator20writeSwitchStatementERKNS_15SwitchStatementE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)* @_ZN4SkSL17GLSLCodeGenerator20writeReturnStatementERKNS_15ReturnStatementE to i8*), i8* bitcast (void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL17GLSLCodeGenerator19writeProgramElementERKNS_14ProgramElementE to i8*)] }, align 8
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL12StringStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.SkSL::OutputStream"*)* @_ZNK4SkSL12OutputStream7isValidEv to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8)* @_ZN4SkSL12StringStream6write8Eh to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*)* @_ZN4SkSL12StringStream9writeTextEPKc to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*, i64)* @_ZN4SkSL12StringStream5writeEPKvm to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD0Ev to i8*)] }, comdat, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@.str.163 = private unnamed_addr constant [12 x i8] c"location = \00", align 1
@.str.164 = private unnamed_addr constant [10 x i8] c"offset = \00", align 1
@.str.165 = private unnamed_addr constant [11 x i8] c"binding = \00", align 1
@.str.166 = private unnamed_addr constant [9 x i8] c"index = \00", align 1
@.str.167 = private unnamed_addr constant [7 x i8] c"set = \00", align 1
@.str.168 = private unnamed_addr constant [11 x i8] c"builtin = \00", align 1
@.str.169 = private unnamed_addr constant [26 x i8] c"input_attachment_index = \00", align 1
@.str.170 = private unnamed_addr constant [18 x i8] c"origin_upper_left\00", align 1
@.str.171 = private unnamed_addr constant [28 x i8] c"blend_support_all_equations\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"push_constant\00", align 1
@.str.173 = private unnamed_addr constant [14 x i8] c"srgb_unpremul\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.175 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.176 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.177 = private unnamed_addr constant [16 x i8] c"lines_adjacency\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.179 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"triangles_adjacency\00", align 1
@.str.181 = private unnamed_addr constant [16 x i8] c"max_vertices = \00", align 1
@.str.182 = private unnamed_addr constant [15 x i8] c"invocations = \00", align 1
@.str.183 = private unnamed_addr constant [8 x i8] c"when = \00", align 1
@.str.184 = private unnamed_addr constant [9 x i8] c"layout (\00", align 1
@.str.185 = private unnamed_addr constant [16 x i8] c"/* key */ const\00", align 1
@_ZTVN4SkSL16BinaryExpressionE = external unnamed_addr constant { [13 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator5writeEPKc(%"class.SkSL::GLSLCodeGenerator"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %9, %5
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* %1) #12
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %2, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator9writeLineEPKc(%"class.SkSL::GLSLCodeGenerator"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %9, %5
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* %1) #12
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %2, %25
  %33 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  tail call void %40(%"class.SkSL::OutputStream"* %34, i8* %36) #12
  %41 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  store i8 1, i8* %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator9writeLineEv(%"class.SkSL::GLSLCodeGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %3 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*)***
  %7 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %7, i64 2
  %9 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %8, align 8
  tail call void %9(%"class.SkSL::OutputStream"* %3, i8* %5) #12
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  store i8 1, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator5writeERKNS_6StringE(%"class.SkSL::GLSLCodeGenerator"* nocapture, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.SkSL::String"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i32 [ 0, %21 ], [ %30, %23 ]
  %25 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %22, align 8
  %26 = bitcast %"class.SkSL::OutputStream"* %25 to void (%"class.SkSL::OutputStream"*, i8*)***
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, i64 2
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, align 8
  tail call void %29(%"class.SkSL::OutputStream"* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %30 = add nuw nsw i32 %24, 1
  %31 = load i32, i32* %18, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %17, %13
  %34 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %35 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %34, align 8
  %36 = bitcast %"class.SkSL::OutputStream"* %35 to void (%"class.SkSL::OutputStream"*, i8*)***
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, i64 2
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, align 8
  tail call void %39(%"class.SkSL::OutputStream"* %35, i8* %10) #12
  store i8 0, i8* %14, align 8
  br label %40

40:                                               ; preds = %2, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator5writeENS_14StringFragmentE(%"class.SkSL::GLSLCodeGenerator"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %9, %5
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, i64 3
  %31 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* %1, i64 %2) #12
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %3, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator9writeLineERKNS_6StringE(%"class.SkSL::GLSLCodeGenerator"* nocapture, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.SkSL::String"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i32 [ 0, %21 ], [ %30, %23 ]
  %25 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %22, align 8
  %26 = bitcast %"class.SkSL::OutputStream"* %25 to void (%"class.SkSL::OutputStream"*, i8*)***
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, i64 2
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, align 8
  tail call void %29(%"class.SkSL::OutputStream"* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %30 = add nuw nsw i32 %24, 1
  %31 = load i32, i32* %18, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %17, %13
  %34 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %35 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %34, align 8
  %36 = bitcast %"class.SkSL::OutputStream"* %35 to void (%"class.SkSL::OutputStream"*, i8*)***
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, i64 2
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, align 8
  tail call void %39(%"class.SkSL::OutputStream"* %35, i8* %10) #12
  store i8 0, i8* %14, align 8
  br label %40

40:                                               ; preds = %2, %33
  %41 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %42 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.SkSL::OutputStream"* %42 to void (%"class.SkSL::OutputStream"*, i8*)***
  %46 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %46, i64 2
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, align 8
  tail call void %48(%"class.SkSL::OutputStream"* %42, i8* %44) #12
  %49 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  store i8 1, i8* %49, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator10finishLineEv(%"class.SkSL::GLSLCodeGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %7 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*)***
  %11 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %11, i64 2
  %13 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %12, align 8
  tail call void %13(%"class.SkSL::OutputStream"* %7, i8* %9) #12
  store i8 1, i8* %2, align 8
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator14writeExtensionERKNS_6StringE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %4 = bitcast %class.SkWStream* %3 to i1 (%class.SkWStream*, i8*, i64)***
  %5 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %5, i64 2
  %7 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkWStream* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %9 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.SkSL::String"* %1 to i8*
  %18 = zext i8 %11 to i64
  %19 = select i1 %12, i8* %14, i8* %17
  %20 = select i1 %12, i64 %16, i64 %18
  %21 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %22 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %21, i8* %19, i64 %20) #12
  %23 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %4, align 8
  %24 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %23, i64 2
  %25 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %24, align 8
  %26 = tail call zeroext i1 %25(%class.SkWStream* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator14writeExtensionERKNS_6StringEb(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::String"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %10 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.SkSL::String"* %1 to i8*
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i8* %15, i8* %18
  %21 = select i1 %13, i64 %17, i64 %19
  %22 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %23 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %22, i8* %20, i64 %21) #12
  %24 = select i1 %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)
  %25 = select i1 %2, i64 11, i64 10
  %26 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %27 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, i64 2
  %28 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %27, align 8
  %29 = tail call zeroext i1 %28(%class.SkWStream* %4, i8* %24, i64 %25) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream9writeTextEPKc(%"class.SkSL::StringStream"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  %4 = tail call i64 @strlen(i8* %1) #13
  %5 = bitcast %class.SkWStream* %3 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %3, i8* %1, i64 %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream5writeEPKvm(%"class.SkSL::StringStream"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %4, i8* %1, i64 %2) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4SkSL17GLSLCodeGenerator22usesPrecisionModifiersEv(%"class.SkSL::GLSLCodeGenerator"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %3 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %3, i64 0, i32 2
  %5 = load %class.GrShaderCaps*, %class.GrShaderCaps** %4, align 8
  %6 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %5, i64 0, i32 2
  %7 = bitcast i56* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 512
  %10 = icmp ne i64 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator11getTypeNameERKNS_4TypeE(%"class.SkSL::String"* noalias sret, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"struct.SkSL::StringFragment"*
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"struct.SkSL::StringFragment"*
  %16 = alloca <2 x i64>, align 16
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  switch i32 %27, label %331 [
    i32 11, label %28
    i32 4, label %138
    i32 0, label %214
    i32 8, label %243
    i32 1, label %326
  ]

28:                                               ; preds = %3
  %29 = bitcast <2 x i64>* %16 to %"struct.SkSL::StringFragment"*
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %31 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %30, align 8
  %32 = icmp eq %"class.SkSL::Type"* %31, null
  %33 = select i1 %32, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %31
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #12
  %36 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %1, i64 0, i32 2
  %37 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %38, align 8
  %40 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %33, i64 0, i32 0, i32 1, i32 0
  %42 = bitcast i8** %41 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  store <2 x i64> %43, <2 x i64>* %16, align 16
  %44 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %39, i64 0, i32 0, i32 1, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %39, i64 0, i32 0, i32 1, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %29, i8* %45, i64 %47) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #12
  br i1 %48, label %61, label %49

49:                                               ; preds = %28
  %50 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %36, align 8
  %51 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %50, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %51, align 8
  %53 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  %54 = bitcast i8** %41 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  store <2 x i64> %55, <2 x i64>* %14, align 16
  %56 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %15, i8* %57, i64 %59) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  br i1 %60, label %61, label %72

61:                                               ; preds = %49, %28
  %62 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #12
  %63 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 3, i8* %64, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #12
  %65 = getelementptr inbounds i8, i8* %62, i64 3
  store i8 0, i8* %65, align 1
  %66 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %124

70:                                               ; preds = %61
  %71 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %71) #14
  br label %124

72:                                               ; preds = %49
  %73 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %33, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  switch i32 %74, label %99 [
    i32 1, label %75
    i32 2, label %87
  ]

75:                                               ; preds = %72
  %76 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 4, i8* %78, align 1
  %79 = bitcast %"class.SkSL::String"* %18 to i32*
  store i32 1667593833, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %76, i64 4
  store i8 0, i8* %80, align 4
  %81 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %124

85:                                               ; preds = %75
  %86 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %86) #14
  br label %124

87:                                               ; preds = %72
  %88 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #12
  %89 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  store i8 4, i8* %90, align 1
  %91 = bitcast %"class.SkSL::String"* %19 to i32*
  store i32 1667593845, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 4
  store i8 0, i8* %92, align 4
  %93 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %124

97:                                               ; preds = %87
  %98 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %98) #14
  br label %124

99:                                               ; preds = %72
  %100 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %36, align 8
  %101 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %100, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %102 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %101, align 8
  %103 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #12
  %104 = bitcast i8** %41 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8
  store <2 x i64> %105, <2 x i64>* %12, align 16
  %106 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %102, i64 0, i32 0, i32 1, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %102, i64 0, i32 0, i32 1, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %13, i8* %107, i64 %109) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #12
  br i1 %110, label %111, label %123

111:                                              ; preds = %99
  %112 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #12
  %113 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 4, i8* %114, align 1
  %115 = bitcast %"class.SkSL::String"* %20 to i32*
  store i32 1667593826, i32* %115, align 8
  %116 = getelementptr inbounds i8, i8* %112, i64 4
  store i8 0, i8* %116, align 4
  %117 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %111
  %122 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %122) #14
  br label %124

123:                                              ; preds = %99
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i64 0, i64 0), i32 110, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

124:                                              ; preds = %111, %121, %87, %97, %75, %85, %61, %70
  %125 = phi i8* [ %62, %70 ], [ %62, %61 ], [ %76, %85 ], [ %76, %75 ], [ %88, %97 ], [ %88, %87 ], [ %112, %121 ], [ %112, %111 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %125, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #12
  %126 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #12
  %127 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %128 = load i32, i32* %127, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %21, i32 %128) #12
  %129 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %21) #12
  %130 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #14
  br label %137

137:                                              ; preds = %124, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #12
  br label %360

138:                                              ; preds = %3
  %139 = bitcast <2 x i64>* %11 to %"struct.SkSL::StringFragment"*
  %140 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #12
  %142 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %143 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %142, align 8
  %144 = icmp eq %"class.SkSL::Type"* %143, null
  %145 = select i1 %144, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %143
  %146 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %1, i64 0, i32 2
  %147 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %146, align 8
  %148 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %148, align 8
  %150 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #12
  %151 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %145, i64 0, i32 0, i32 1, i32 0
  %152 = bitcast i8** %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8
  store <2 x i64> %153, <2 x i64>* %11, align 16
  %154 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %149, i64 0, i32 0, i32 1, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %149, i64 0, i32 0, i32 1, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %139, i8* %155, i64 %157) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #12
  br i1 %158, label %171, label %159

159:                                              ; preds = %138
  %160 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %146, align 8
  %161 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %160, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %161, align 8
  %163 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #12
  %164 = bitcast i8** %151 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8
  store <2 x i64> %165, <2 x i64>* %9, align 16
  %166 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %162, i64 0, i32 0, i32 1, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %162, i64 0, i32 0, i32 1, i32 1
  %169 = load i64, i64* %168, align 8
  %170 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %10, i8* %167, i64 %169) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #12
  br i1 %170, label %171, label %200

171:                                              ; preds = %159, %138
  %172 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #12
  %173 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  store i8 3, i8* %174, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %172, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i64 3, i1 false) #12
  %175 = getelementptr inbounds i8, i8* %172, i64 3
  store i8 0, i8* %175, align 1
  %176 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %171
  %181 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %181) #14
  br label %182

182:                                              ; preds = %171, %180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 8 %172, i64 24, i1 false) #12
  %183 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %184 = load i32, i32* %183, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #12
  %185 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #12
  %186 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %23, i32 %184) #12
  %187 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #12
  %188 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %194) #14
  br label %195

195:                                              ; preds = %182, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #12
  %196 = load i32, i32* %186, align 8
  %197 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 9
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %196, %198
  br i1 %199, label %360, label %201

200:                                              ; preds = %159
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i64 0, i64 0), i32 122, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #15
  unreachable

201:                                              ; preds = %195
  %202 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %203 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #12
  %204 = load i32, i32* %197, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %24, i32 %204) #12
  %205 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %24) #12
  %206 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %201
  %211 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #14
  br label %213

213:                                              ; preds = %201, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #12
  br label %360

214:                                              ; preds = %3
  %215 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #12
  %216 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %218 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 -86, i64 24, i1 false)
  %219 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %217, align 8
  %220 = icmp eq %"class.SkSL::Type"* %219, null
  %221 = select i1 %220, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %219
  %222 = bitcast %"class.SkSL::GLSLCodeGenerator"* %1 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %223 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %223, i64 5
  %225 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %224, align 8
  call void %225(%"class.SkSL::String"* nonnull sret %25, %"class.SkSL::GLSLCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %221) #12
  %226 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, -1
  %229 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  %233 = load i8*, i8** %216, align 8
  %234 = select i1 %232, i8* %233, i8* %215
  br i1 %228, label %235, label %236

235:                                              ; preds = %214
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %234) #12
  br label %237

236:                                              ; preds = %214
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i8* %234, i32 %227) #12
  br label %237

237:                                              ; preds = %236, %235
  %238 = load i8, i8* %230, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %237
  %241 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %241) #14
  br label %242

242:                                              ; preds = %237, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #12
  br label %360

243:                                              ; preds = %3
  %244 = bitcast <2 x i64>* %6 to %"struct.SkSL::StringFragment"*
  %245 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %1, i64 0, i32 2
  %246 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %245, align 8
  %247 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %246, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %248 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %247, align 8
  %249 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #12
  %250 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %251 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %252 = bitcast i8** %250 to <2 x i64>*
  %253 = load <2 x i64>, <2 x i64>* %252, align 8
  store <2 x i64> %253, <2 x i64>* %6, align 16
  %254 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %248, i64 0, i32 0, i32 1, i32 0
  %255 = load i8*, i8** %254, align 8
  %256 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %248, i64 0, i32 0, i32 1, i32 1
  %257 = load i64, i64* %256, align 8
  %258 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %244, i8* %255, i64 %257) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #12
  br i1 %258, label %259, label %264

259:                                              ; preds = %243
  %260 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  store i8 5, i8* %261, align 1
  %262 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5, i1 false) #12
  %263 = getelementptr inbounds i8, i8* %262, i64 5
  store i8 0, i8* %263, align 1
  br label %360

264:                                              ; preds = %243
  %265 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %245, align 8
  %266 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %265, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %267 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %266, align 8
  %268 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #12
  %269 = bitcast i8** %250 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8
  store <2 x i64> %270, <2 x i64>* %4, align 16
  %271 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %267, i64 0, i32 0, i32 1, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %267, i64 0, i32 0, i32 1, i32 1
  %274 = load i64, i64* %273, align 8
  %275 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %272, i64 %274) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #12
  br i1 %275, label %276, label %281

276:                                              ; preds = %264
  %277 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %277, i64 0, i32 1, i32 0
  store i8 3, i8* %278, align 1
  %279 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i64 3, i1 false) #12
  %280 = getelementptr inbounds i8, i8* %279, i64 3
  store i8 0, i8* %280, align 1
  br label %360

281:                                              ; preds = %264
  %282 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %245, align 8
  %283 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %282, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %284 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %283, align 8
  %285 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %285) #12
  %286 = bitcast i8** %250 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8
  store <2 x i64> %287, <2 x i64>* %7, align 16
  %288 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %284, i64 0, i32 0, i32 1, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %284, i64 0, i32 0, i32 1, i32 1
  %291 = load i64, i64* %290, align 8
  %292 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %289, i64 %291) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %285) #12
  br i1 %292, label %293, label %299

293:                                              ; preds = %281
  %294 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %295 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %294, i64 0, i32 1, i32 0
  store i8 4, i8* %295, align 1
  %296 = bitcast %"class.SkSL::String"* %0 to i8*
  %297 = bitcast %"class.SkSL::String"* %0 to i32*
  store i32 1953393013, i32* %297, align 8
  %298 = getelementptr inbounds i8, i8* %296, i64 4
  store i8 0, i8* %298, align 4
  br label %360

299:                                              ; preds = %281
  %300 = load i8*, i8** %250, align 8
  %301 = load i64, i64* %251, align 8
  %302 = icmp ugt i64 %301, -17
  br i1 %302, label %303, label %305

303:                                              ; preds = %299
  %304 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %304) #15
  unreachable

305:                                              ; preds = %299
  %306 = icmp ult i64 %301, 23
  br i1 %306, label %315, label %307

307:                                              ; preds = %305
  %308 = add nuw i64 %301, 16
  %309 = and i64 %308, -16
  %310 = call i8* @_Znwm(i64 %309) #14
  %311 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %310, i8** %311, align 8
  %312 = or i64 %309, -9223372036854775808
  %313 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %312, i64* %313, align 8
  %314 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %301, i64* %314, align 8
  br label %321

315:                                              ; preds = %305
  %316 = trunc i64 %301 to i8
  %317 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %318 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %317, i64 0, i32 1, i32 0
  store i8 %316, i8* %318, align 1
  %319 = bitcast %"class.SkSL::String"* %0 to i8*
  %320 = icmp eq i64 %301, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %315, %307
  %322 = phi i8* [ %310, %307 ], [ %319, %315 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %322, i8* align 1 %300, i64 %301, i1 false) #12
  br label %323

323:                                              ; preds = %315, %321
  %324 = phi i8* [ %319, %315 ], [ %322, %321 ]
  %325 = getelementptr inbounds i8, i8* %324, i64 %301
  store i8 0, i8* %325, align 1
  br label %360

326:                                              ; preds = %3
  %327 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %328 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %327, i64 0, i32 1, i32 0
  store i8 3, i8* %328, align 1
  %329 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %329, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i64 3, i1 false) #12
  %330 = getelementptr inbounds i8, i8* %329, i64 3
  store i8 0, i8* %330, align 1
  br label %360

331:                                              ; preds = %3
  %332 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %333 = load i8*, i8** %332, align 8
  %334 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = icmp ugt i64 %335, -17
  br i1 %336, label %337, label %339

337:                                              ; preds = %331
  %338 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %338) #15
  unreachable

339:                                              ; preds = %331
  %340 = icmp ult i64 %335, 23
  br i1 %340, label %349, label %341

341:                                              ; preds = %339
  %342 = add nuw i64 %335, 16
  %343 = and i64 %342, -16
  %344 = tail call i8* @_Znwm(i64 %343) #14
  %345 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %344, i8** %345, align 8
  %346 = or i64 %343, -9223372036854775808
  %347 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %346, i64* %347, align 8
  %348 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %335, i64* %348, align 8
  br label %355

349:                                              ; preds = %339
  %350 = trunc i64 %335 to i8
  %351 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %352 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %351, i64 0, i32 1, i32 0
  store i8 %350, i8* %352, align 1
  %353 = bitcast %"class.SkSL::String"* %0 to i8*
  %354 = icmp eq i64 %335, 0
  br i1 %354, label %357, label %355

355:                                              ; preds = %349, %341
  %356 = phi i8* [ %344, %341 ], [ %353, %349 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %356, i8* align 1 %333, i64 %335, i1 false) #12
  br label %357

357:                                              ; preds = %349, %355
  %358 = phi i8* [ %353, %349 ], [ %356, %355 ]
  %359 = getelementptr inbounds i8, i8* %358, i64 %335
  store i8 0, i8* %359, align 1
  br label %360

360:                                              ; preds = %213, %195, %357, %326, %323, %293, %276, %259, %242, %137
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #4

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #4

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #4

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::StructDefinition"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %1, i64 0, i32 1
  %8 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i32 [ 0, %16 ], [ %25, %18 ]
  %20 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %17, align 8
  %21 = bitcast %"class.SkSL::OutputStream"* %20 to void (%"class.SkSL::OutputStream"*, i8*)***
  %22 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %22, i64 2
  %24 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, align 8
  tail call void %24(%"class.SkSL::OutputStream"* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %25 = add nuw nsw i32 %19, 1
  %26 = load i32, i32* %13, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %18, label %28

28:                                               ; preds = %18, %2, %12
  %29 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %30 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %31 = bitcast %"class.SkSL::OutputStream"* %30 to void (%"class.SkSL::OutputStream"*, i8*)***
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, i64 2
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, align 8
  tail call void %34(%"class.SkSL::OutputStream"* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0)) #12
  store i8 0, i8* %9, align 8
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 0, i32 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 0, i32 1, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %41 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, i64 3
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, align 8
  tail call void %45(%"class.SkSL::OutputStream"* %41, i8* %40, i64 %36) #12
  store i8 0, i8* %9, align 8
  br label %46

46:                                               ; preds = %28, %38
  %47 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %48 = bitcast %"class.SkSL::OutputStream"* %47 to void (%"class.SkSL::OutputStream"*, i8*)***
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, i64 2
  %51 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, align 8
  tail call void %51(%"class.SkSL::OutputStream"* %47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #12
  store i8 0, i8* %9, align 8
  %52 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %53 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %"class.SkSL::OutputStream"* %52 to void (%"class.SkSL::OutputStream"*, i8*)***
  %56 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, i64 2
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, align 8
  tail call void %58(%"class.SkSL::OutputStream"* %52, i8* %54) #12
  store i8 1, i8* %9, align 8
  %59 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %59, align 4
  %62 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 10, i32 0, i32 0
  %63 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %62, align 8
  %64 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 10, i32 0, i32 1
  %65 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %64, align 8
  %66 = icmp eq %"struct.SkSL::Type::Field"* %63, %65
  br i1 %66, label %87, label %67

67:                                               ; preds = %46
  %68 = bitcast %"class.SkSL::String"* %3 to i8*
  %69 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %70 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.SkSL::String"* %4 to i8*
  %74 = bitcast %"class.SkSL::String"* %5 to i8*
  %75 = bitcast %"class.SkSL::String"* %6 to i8*
  %76 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %113

85:                                               ; preds = %293
  %86 = load i32, i32* %59, align 4
  br label %87

87:                                               ; preds = %85, %46
  %88 = phi i32 [ %86, %85 ], [ %61, %46 ]
  %89 = add nsw i32 %88, -1
  store i32 %89, i32* %59, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %101

91:                                               ; preds = %87, %91
  %92 = phi i32 [ %98, %91 ], [ 0, %87 ]
  %93 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %94 = bitcast %"class.SkSL::OutputStream"* %93 to void (%"class.SkSL::OutputStream"*, i8*)***
  %95 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %95, i64 2
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, align 8
  call void %97(%"class.SkSL::OutputStream"* %93, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %98 = add nuw nsw i32 %92, 1
  %99 = load i32, i32* %59, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %91, label %101

101:                                              ; preds = %91, %87
  %102 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %103 = bitcast %"class.SkSL::OutputStream"* %102 to void (%"class.SkSL::OutputStream"*, i8*)***
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %104, i64 2
  %106 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, align 8
  call void %106(%"class.SkSL::OutputStream"* %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0)) #12
  store i8 0, i8* %9, align 8
  %107 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %108 = load i8*, i8** %53, align 8
  %109 = bitcast %"class.SkSL::OutputStream"* %107 to void (%"class.SkSL::OutputStream"*, i8*)***
  %110 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %110, i64 2
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %111, align 8
  call void %112(%"class.SkSL::OutputStream"* %107, i8* %108) #12
  store i8 1, i8* %9, align 8
  ret void

113:                                              ; preds = %67, %293
  %114 = phi %"struct.SkSL::Type::Field"* [ %63, %67 ], [ %305, %293 ]
  %115 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %114, i64 0, i32 0
  call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %115, i1 zeroext false)
  %116 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %114, i64 0, i32 2
  %117 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %116, align 8
  %118 = call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %117) #12
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %143, label %121

121:                                              ; preds = %113
  %122 = load i8, i8* %9, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = load i32, i32* %59, align 4
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %127, label %137

127:                                              ; preds = %124, %127
  %128 = phi i32 [ %134, %127 ], [ 0, %124 ]
  %129 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %130 = bitcast %"class.SkSL::OutputStream"* %129 to void (%"class.SkSL::OutputStream"*, i8*)***
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, i64 2
  %133 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %134 = add nuw nsw i32 %128, 1
  %135 = load i32, i32* %59, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %127, label %137

137:                                              ; preds = %127, %124, %121
  %138 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %139 = bitcast %"class.SkSL::OutputStream"* %138 to void (%"class.SkSL::OutputStream"*, i8*)***
  %140 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %140, i64 2
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %141, align 8
  call void %142(%"class.SkSL::OutputStream"* %138, i8* %118) #12
  store i8 0, i8* %9, align 8
  br label %143

143:                                              ; preds = %113, %137
  %144 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %116, align 8
  %145 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %144, i64 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %153

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %144, i64 0, i32 6
  %150 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %149, align 8
  %151 = icmp eq %"class.SkSL::Type"* %150, null
  %152 = select i1 %151, %"class.SkSL::Type"* %144, %"class.SkSL::Type"* %150
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi %"class.SkSL::Type"* [ %152, %148 ], [ %144, %143 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  %155 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %69, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %155, i64 5
  %157 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %156, align 8
  call void %157(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %154) #12
  %158 = load i8, i8* %71, align 1
  %159 = icmp slt i8 %158, 0
  %160 = load i8*, i8** %72, align 8
  %161 = select i1 %159, i8* %160, i8* %68
  %162 = load i8, i8* %161, align 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %187, label %164

164:                                              ; preds = %153
  %165 = load i8, i8* %9, align 8, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %59, align 4
  %169 = icmp sgt i32 %168, 0
  br i1 %169, label %170, label %180

170:                                              ; preds = %167, %170
  %171 = phi i32 [ %177, %170 ], [ 0, %167 ]
  %172 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %173 = bitcast %"class.SkSL::OutputStream"* %172 to void (%"class.SkSL::OutputStream"*, i8*)***
  %174 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, i64 2
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, align 8
  call void %176(%"class.SkSL::OutputStream"* %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %177 = add nuw nsw i32 %171, 1
  %178 = load i32, i32* %59, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %170, label %180

180:                                              ; preds = %170, %167, %164
  %181 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %182 = bitcast %"class.SkSL::OutputStream"* %181 to void (%"class.SkSL::OutputStream"*, i8*)***
  %183 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, i64 2
  %185 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %184, align 8
  call void %185(%"class.SkSL::OutputStream"* %181, i8* %161) #12
  store i8 0, i8* %9, align 8
  %186 = load i8, i8* %71, align 1
  br label %187

187:                                              ; preds = %180, %153
  %188 = phi i8 [ %158, %153 ], [ %186, %180 ]
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %187
  %191 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %191) #14
  br label %192

192:                                              ; preds = %187, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  %193 = load i8, i8* %9, align 8, !range !2
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = load i32, i32* %59, align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %208

198:                                              ; preds = %195, %198
  %199 = phi i32 [ %205, %198 ], [ 0, %195 ]
  %200 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %201 = bitcast %"class.SkSL::OutputStream"* %200 to void (%"class.SkSL::OutputStream"*, i8*)***
  %202 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %202, i64 2
  %204 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %203, align 8
  call void %204(%"class.SkSL::OutputStream"* %200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %205 = add nuw nsw i32 %199, 1
  %206 = load i32, i32* %59, align 4
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %198, label %208

208:                                              ; preds = %198, %192, %195
  %209 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %210 = bitcast %"class.SkSL::OutputStream"* %209 to void (%"class.SkSL::OutputStream"*, i8*)***
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, i64 2
  %213 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, align 8
  call void %213(%"class.SkSL::OutputStream"* %209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %9, align 8
  %214 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %114, i64 0, i32 1, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %225, label %217

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %114, i64 0, i32 1, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %221 = bitcast %"class.SkSL::OutputStream"* %220 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %222 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %222, i64 3
  %224 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %223, align 8
  call void %224(%"class.SkSL::OutputStream"* %220, i8* %219, i64 %215) #12
  store i8 0, i8* %9, align 8
  br label %225

225:                                              ; preds = %208, %217
  %226 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %116, align 8
  %227 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %226, i64 0, i32 3
  %228 = load i32, i32* %227, align 8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %293

230:                                              ; preds = %225
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %231 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %226, i64 0, i32 8
  %232 = load i32, i32* %231, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %232) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12
  %233 = load i8, i8* %77, align 1
  %234 = icmp slt i8 %233, 0
  %235 = load i8*, i8** %78, align 8
  %236 = select i1 %234, i8* %235, i8* %73
  %237 = load i8, i8* %236, align 1
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %262, label %239

239:                                              ; preds = %230
  %240 = load i8, i8* %9, align 8, !range !2
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %255, label %242

242:                                              ; preds = %239
  %243 = load i32, i32* %59, align 4
  %244 = icmp sgt i32 %243, 0
  br i1 %244, label %245, label %255

245:                                              ; preds = %242, %245
  %246 = phi i32 [ %252, %245 ], [ 0, %242 ]
  %247 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %248 = bitcast %"class.SkSL::OutputStream"* %247 to void (%"class.SkSL::OutputStream"*, i8*)***
  %249 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %248, align 8
  %250 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %249, i64 2
  %251 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %250, align 8
  call void %251(%"class.SkSL::OutputStream"* %247, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %252 = add nuw nsw i32 %246, 1
  %253 = load i32, i32* %59, align 4
  %254 = icmp slt i32 %252, %253
  br i1 %254, label %245, label %255

255:                                              ; preds = %245, %242, %239
  %256 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %257 = bitcast %"class.SkSL::OutputStream"* %256 to void (%"class.SkSL::OutputStream"*, i8*)***
  %258 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %258, i64 2
  %260 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %259, align 8
  call void %260(%"class.SkSL::OutputStream"* %256, i8* %236) #12
  store i8 0, i8* %9, align 8
  %261 = load i8, i8* %77, align 1
  br label %262

262:                                              ; preds = %230, %255
  %263 = phi i8 [ %233, %230 ], [ %261, %255 ]
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %262
  %266 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %266) #14
  br label %267

267:                                              ; preds = %262, %265
  %268 = load i8, i8* %80, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %267
  %271 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %271) #14
  br label %272

272:                                              ; preds = %267, %270
  %273 = load i8, i8* %83, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %272
  %276 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %276) #14
  br label %277

277:                                              ; preds = %275, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  %278 = load i8, i8* %9, align 8, !range !2
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = load i32, i32* %59, align 4
  %282 = icmp sgt i32 %281, 0
  br i1 %282, label %283, label %293

283:                                              ; preds = %280, %283
  %284 = phi i32 [ %290, %283 ], [ 0, %280 ]
  %285 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %286 = bitcast %"class.SkSL::OutputStream"* %285 to void (%"class.SkSL::OutputStream"*, i8*)***
  %287 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %287, i64 2
  %289 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %288, align 8
  call void %289(%"class.SkSL::OutputStream"* %285, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %290 = add nuw nsw i32 %284, 1
  %291 = load i32, i32* %59, align 4
  %292 = icmp slt i32 %290, %291
  br i1 %292, label %283, label %293

293:                                              ; preds = %283, %225, %277, %280
  %294 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %295 = bitcast %"class.SkSL::OutputStream"* %294 to void (%"class.SkSL::OutputStream"*, i8*)***
  %296 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %296, i64 2
  %298 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %297, align 8
  call void %298(%"class.SkSL::OutputStream"* %294, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %9, align 8
  %299 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %300 = load i8*, i8** %53, align 8
  %301 = bitcast %"class.SkSL::OutputStream"* %299 to void (%"class.SkSL::OutputStream"*, i8*)***
  %302 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %302, i64 2
  %304 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %303, align 8
  call void %304(%"class.SkSL::OutputStream"* %299, i8* %300) #12
  store i8 1, i8* %9, align 8
  %305 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %114, i64 1
  %306 = icmp eq %"struct.SkSL::Type::Field"* %305, %65
  br i1 %306, label %85, label %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Modifiers"* dereferenceable(80), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32 [ 0, %18 ], [ %27, %20 ]
  %22 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %19, align 8
  %23 = bitcast %"class.SkSL::OutputStream"* %22 to void (%"class.SkSL::OutputStream"*, i8*)***
  %24 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, align 8
  tail call void %26(%"class.SkSL::OutputStream"* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %27 = add nuw nsw i32 %21, 1
  %28 = load i32, i32* %15, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %20, label %30

30:                                               ; preds = %20, %10, %14
  %31 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %32 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %31, align 8
  %33 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*)***
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, i64 2
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, align 8
  tail call void %36(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0)) #12
  store i8 0, i8* %11, align 8
  %37 = load i32, i32* %6, align 8
  br label %38

38:                                               ; preds = %3, %30
  %39 = phi i32 [ %7, %3 ], [ %37, %30 ]
  %40 = and i32 %39, 32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i32 [ 0, %50 ], [ %59, %52 ]
  %54 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %51, align 8
  %55 = bitcast %"class.SkSL::OutputStream"* %54 to void (%"class.SkSL::OutputStream"*, i8*)***
  %56 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, i64 2
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, align 8
  tail call void %58(%"class.SkSL::OutputStream"* %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %59 = add nuw nsw i32 %53, 1
  %60 = load i32, i32* %47, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %52, label %62

62:                                               ; preds = %52, %42, %46
  %63 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %64 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %63, align 8
  %65 = bitcast %"class.SkSL::OutputStream"* %64 to void (%"class.SkSL::OutputStream"*, i8*)***
  %66 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, i64 2
  %68 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %67, align 8
  tail call void %68(%"class.SkSL::OutputStream"* %64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0)) #12
  store i8 0, i8* %43, align 8
  br label %69

69:                                               ; preds = %38, %62
  %70 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  %74 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  call void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"struct.SkSL::Layout"* %73)
  %75 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = load i64, i64* %72, align 8
  %80 = zext i8 %77 to i64
  %81 = select i1 %78, i64 %79, i64 %80
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %128, label %83

83:                                               ; preds = %69
  %84 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  %85 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = select i1 %88, i8* %90, i8* %84
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %122, label %94

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %114, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %100, 0
  br i1 %101, label %102, label %114

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i32 [ 0, %102 ], [ %111, %104 ]
  %106 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %103, align 8
  %107 = bitcast %"class.SkSL::OutputStream"* %106 to void (%"class.SkSL::OutputStream"*, i8*)***
  %108 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %108, i64 2
  %110 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %109, align 8
  call void %110(%"class.SkSL::OutputStream"* %106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %111 = add nuw nsw i32 %105, 1
  %112 = load i32, i32* %99, align 4
  %113 = icmp slt i32 %111, %112
  br i1 %113, label %104, label %114

114:                                              ; preds = %104, %98, %94
  %115 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %116 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %115, align 8
  %117 = bitcast %"class.SkSL::OutputStream"* %116 to void (%"class.SkSL::OutputStream"*, i8*)***
  %118 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, i64 2
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %116, i8* %91) #12
  store i8 0, i8* %95, align 8
  %121 = load i8, i8* %86, align 1
  br label %122

122:                                              ; preds = %83, %114
  %123 = phi i8 [ %87, %83 ], [ %121, %114 ]
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %126) #14
  br label %127

127:                                              ; preds = %122, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #12
  br label %128

128:                                              ; preds = %69, %127
  %129 = load i32, i32* %6, align 8
  %130 = and i32 %129, 4
  %131 = icmp eq i32 %130, 0
  %132 = and i32 %129, 6
  %133 = icmp eq i32 %132, 6
  br i1 %133, label %134, label %161

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i32 [ 0, %142 ], [ %151, %144 ]
  %146 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %143, align 8
  %147 = bitcast %"class.SkSL::OutputStream"* %146 to void (%"class.SkSL::OutputStream"*, i8*)***
  %148 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %148, i64 2
  %150 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %146, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %151 = add nuw nsw i32 %145, 1
  %152 = load i32, i32* %139, align 4
  %153 = icmp slt i32 %151, %152
  br i1 %153, label %144, label %154

154:                                              ; preds = %144, %134, %138
  %155 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %156 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %155, align 8
  %157 = bitcast %"class.SkSL::OutputStream"* %156 to void (%"class.SkSL::OutputStream"*, i8*)***
  %158 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %158, i64 2
  %160 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %156, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i64 0, i64 0)) #12
  store i8 0, i8* %135, align 8
  br label %302

161:                                              ; preds = %128
  %162 = and i32 %129, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %238, label %164

164:                                              ; preds = %161
  br i1 %2, label %165, label %211

165:                                              ; preds = %164
  %166 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %167 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %166, align 8
  %168 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %167, i64 0, i32 2
  %169 = load %class.GrShaderCaps*, %class.GrShaderCaps** %168, align 8
  %170 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %169, i64 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = icmp slt i32 %171, 1
  br i1 %172, label %173, label %211

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %175 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %174, align 8
  %176 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %175, i64 0, i32 1, i32 0, i32 0, i32 0
  %177 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %176, align 8
  %178 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %177, i64 0, i32 0
  %179 = load i8, i8* %178, align 8
  %180 = icmp eq i8 %179, 1
  %181 = select i1 %180, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i64 0, i64 0)
  %182 = load i8, i8* %181, align 1
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %302, label %184

184:                                              ; preds = %173
  %185 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %204, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %190 = load i32, i32* %189, align 4
  %191 = icmp sgt i32 %190, 0
  br i1 %191, label %192, label %204

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %194

194:                                              ; preds = %194, %192
  %195 = phi i32 [ 0, %192 ], [ %201, %194 ]
  %196 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %193, align 8
  %197 = bitcast %"class.SkSL::OutputStream"* %196 to void (%"class.SkSL::OutputStream"*, i8*)***
  %198 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %198, i64 2
  %200 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %199, align 8
  call void %200(%"class.SkSL::OutputStream"* %196, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %201 = add nuw nsw i32 %195, 1
  %202 = load i32, i32* %189, align 4
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %194, label %204

204:                                              ; preds = %194, %188, %184
  %205 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %206 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %205, align 8
  %207 = bitcast %"class.SkSL::OutputStream"* %206 to void (%"class.SkSL::OutputStream"*, i8*)***
  %208 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %208, i64 2
  %210 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %209, align 8
  call void %210(%"class.SkSL::OutputStream"* %206, i8* %181) #12
  store i8 0, i8* %185, align 8
  br label %302

211:                                              ; preds = %165, %164
  %212 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %213 = load i8, i8* %212, align 8, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %231, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %217 = load i32, i32* %216, align 4
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %221

221:                                              ; preds = %221, %219
  %222 = phi i32 [ 0, %219 ], [ %228, %221 ]
  %223 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %220, align 8
  %224 = bitcast %"class.SkSL::OutputStream"* %223 to void (%"class.SkSL::OutputStream"*, i8*)***
  %225 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %225, i64 2
  %227 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %226, align 8
  call void %227(%"class.SkSL::OutputStream"* %223, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %228 = add nuw nsw i32 %222, 1
  %229 = load i32, i32* %216, align 4
  %230 = icmp slt i32 %228, %229
  br i1 %230, label %221, label %231

231:                                              ; preds = %221, %211, %215
  %232 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %233 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %232, align 8
  %234 = bitcast %"class.SkSL::OutputStream"* %233 to void (%"class.SkSL::OutputStream"*, i8*)***
  %235 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %235, i64 2
  %237 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %236, align 8
  call void %237(%"class.SkSL::OutputStream"* %233, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0)) #12
  store i8 0, i8* %212, align 8
  br label %302

238:                                              ; preds = %161
  br i1 %131, label %302, label %239

239:                                              ; preds = %238
  br i1 %2, label %240, label %275

240:                                              ; preds = %239
  %241 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %242 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %241, align 8
  %243 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %242, i64 0, i32 2
  %244 = load %class.GrShaderCaps*, %class.GrShaderCaps** %243, align 8
  %245 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %244, i64 0, i32 1
  %246 = load i32, i32* %245, align 4
  %247 = icmp slt i32 %246, 1
  br i1 %247, label %248, label %275

248:                                              ; preds = %240
  %249 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %250 = load i8, i8* %249, align 8, !range !2
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %268, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %254 = load i32, i32* %253, align 4
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %256, label %268

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %258

258:                                              ; preds = %258, %256
  %259 = phi i32 [ 0, %256 ], [ %265, %258 ]
  %260 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %257, align 8
  %261 = bitcast %"class.SkSL::OutputStream"* %260 to void (%"class.SkSL::OutputStream"*, i8*)***
  %262 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %261, align 8
  %263 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %262, i64 2
  %264 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %263, align 8
  call void %264(%"class.SkSL::OutputStream"* %260, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %265 = add nuw nsw i32 %259, 1
  %266 = load i32, i32* %253, align 4
  %267 = icmp slt i32 %265, %266
  br i1 %267, label %258, label %268

268:                                              ; preds = %258, %248, %252
  %269 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %270 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %269, align 8
  %271 = bitcast %"class.SkSL::OutputStream"* %270 to void (%"class.SkSL::OutputStream"*, i8*)***
  %272 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, i64 2
  %274 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %273, align 8
  call void %274(%"class.SkSL::OutputStream"* %270, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i64 0, i64 0)) #12
  store i8 0, i8* %249, align 8
  br label %302

275:                                              ; preds = %240, %239
  %276 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %277 = load i8, i8* %276, align 8, !range !2
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %295, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %281 = load i32, i32* %280, align 4
  %282 = icmp sgt i32 %281, 0
  br i1 %282, label %283, label %295

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %285

285:                                              ; preds = %285, %283
  %286 = phi i32 [ 0, %283 ], [ %292, %285 ]
  %287 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %284, align 8
  %288 = bitcast %"class.SkSL::OutputStream"* %287 to void (%"class.SkSL::OutputStream"*, i8*)***
  %289 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %289, i64 2
  %291 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %290, align 8
  call void %291(%"class.SkSL::OutputStream"* %287, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %292 = add nuw nsw i32 %286, 1
  %293 = load i32, i32* %280, align 4
  %294 = icmp slt i32 %292, %293
  br i1 %294, label %285, label %295

295:                                              ; preds = %285, %275, %279
  %296 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %297 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %296, align 8
  %298 = bitcast %"class.SkSL::OutputStream"* %297 to void (%"class.SkSL::OutputStream"*, i8*)***
  %299 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %298, align 8
  %300 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %299, i64 2
  %301 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %300, align 8
  call void %301(%"class.SkSL::OutputStream"* %297, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i64 0, i64 0)) #12
  store i8 0, i8* %276, align 8
  br label %302

302:                                              ; preds = %204, %173, %238, %231, %268, %295, %154
  %303 = load i32, i32* %6, align 8
  %304 = and i32 %303, 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %334, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %326, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %312 = load i32, i32* %311, align 4
  %313 = icmp sgt i32 %312, 0
  br i1 %313, label %314, label %326

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %316

316:                                              ; preds = %316, %314
  %317 = phi i32 [ 0, %314 ], [ %323, %316 ]
  %318 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %315, align 8
  %319 = bitcast %"class.SkSL::OutputStream"* %318 to void (%"class.SkSL::OutputStream"*, i8*)***
  %320 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %320, i64 2
  %322 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %321, align 8
  call void %322(%"class.SkSL::OutputStream"* %318, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %323 = add nuw nsw i32 %317, 1
  %324 = load i32, i32* %311, align 4
  %325 = icmp slt i32 %323, %324
  br i1 %325, label %316, label %326

326:                                              ; preds = %316, %306, %310
  %327 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %328 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %327, align 8
  %329 = bitcast %"class.SkSL::OutputStream"* %328 to void (%"class.SkSL::OutputStream"*, i8*)***
  %330 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %329, align 8
  %331 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %330, i64 2
  %332 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %331, align 8
  call void %332(%"class.SkSL::OutputStream"* %328, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i64 0, i64 0)) #12
  store i8 0, i8* %307, align 8
  %333 = load i32, i32* %6, align 8
  br label %334

334:                                              ; preds = %302, %326
  %335 = phi i32 [ %303, %302 ], [ %333, %326 ]
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %365, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %340 = load i8, i8* %339, align 8, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %358, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %344 = load i32, i32* %343, align 4
  %345 = icmp sgt i32 %344, 0
  br i1 %345, label %346, label %358

346:                                              ; preds = %342
  %347 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %348

348:                                              ; preds = %348, %346
  %349 = phi i32 [ 0, %346 ], [ %355, %348 ]
  %350 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %347, align 8
  %351 = bitcast %"class.SkSL::OutputStream"* %350 to void (%"class.SkSL::OutputStream"*, i8*)***
  %352 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %351, align 8
  %353 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %352, i64 2
  %354 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %353, align 8
  call void %354(%"class.SkSL::OutputStream"* %350, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %355 = add nuw nsw i32 %349, 1
  %356 = load i32, i32* %343, align 4
  %357 = icmp slt i32 %355, %356
  br i1 %357, label %348, label %358

358:                                              ; preds = %348, %338, %342
  %359 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %360 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %359, align 8
  %361 = bitcast %"class.SkSL::OutputStream"* %360 to void (%"class.SkSL::OutputStream"*, i8*)***
  %362 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %362, i64 2
  %364 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %363, align 8
  call void %364(%"class.SkSL::OutputStream"* %360, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i64 0, i64 0)) #12
  store i8 0, i8* %339, align 8
  br label %365

365:                                              ; preds = %334, %358
  %366 = load i8, i8* %76, align 1
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %365
  %369 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %369) #14
  br label %370

370:                                              ; preds = %365, %368
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator18writeTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i32 [ 0, %14 ], [ %23, %16 ]
  %18 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %15, align 8
  %19 = bitcast %"class.SkSL::OutputStream"* %18 to void (%"class.SkSL::OutputStream"*, i8*)***
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, i64 2
  %22 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, align 8
  tail call void %22(%"class.SkSL::OutputStream"* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %23 = add nuw nsw i32 %17, 1
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %16, label %26

26:                                               ; preds = %16, %10, %6
  %27 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %28 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %27, align 8
  %29 = bitcast %"class.SkSL::OutputStream"* %28 to void (%"class.SkSL::OutputStream"*, i8*)***
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, align 8
  tail call void %32(%"class.SkSL::OutputStream"* %28, i8* %3) #12
  store i8 0, i8* %7, align 8
  br label %33

33:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator9writeTypeERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %6 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %6, i64 5
  %8 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %7, align 8
  call void %8(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1) #12
  %9 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %4
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i32 [ 0, %26 ], [ %35, %28 ]
  %30 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %27, align 8
  %31 = bitcast %"class.SkSL::OutputStream"* %30 to void (%"class.SkSL::OutputStream"*, i8*)***
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, i64 2
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %35 = add nuw nsw i32 %29, 1
  %36 = load i32, i32* %23, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %28, label %38

38:                                               ; preds = %28, %22, %18
  %39 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %40 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %39, align 8
  %41 = bitcast %"class.SkSL::OutputStream"* %40 to void (%"class.SkSL::OutputStream"*, i8*)***
  %42 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, i64 2
  %44 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, align 8
  call void %44(%"class.SkSL::OutputStream"* %40, i8* %15) #12
  store i8 0, i8* %19, align 8
  %45 = load i8, i8* %10, align 1
  br label %46

46:                                               ; preds = %2, %38
  %47 = phi i8 [ %11, %2 ], [ %45, %38 ]
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %119 [
    i32 30, label %6
    i32 31, label %12
    i32 36, label %47
    i32 33, label %49
    i32 34, label %49
    i32 37, label %49
    i32 39, label %49
    i32 40, label %49
    i32 38, label %55
    i32 35, label %55
    i32 43, label %61
    i32 44, label %67
    i32 45, label %73
    i32 47, label %79
    i32 49, label %85
    i32 50, label %87
    i32 51, label %89
    i32 52, label %95
    i32 55, label %101
    i32 53, label %107
    i32 48, label %113
  ]

6:                                                ; preds = %3
  %7 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::BinaryExpression"*
  %8 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)***
  %9 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)** %9, i64 15
  %11 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"*, i32)** %10, align 8
  tail call void %11(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::BinaryExpression"* dereferenceable(48) %7, i32 %2) #12
  br label %119

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %14 = bitcast %"class.SkSL::Expression"* %13 to i8*
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i64 0, i64 0)
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %119, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i32 [ 0, %28 ], [ %37, %30 ]
  %32 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %33 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*)***
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, i64 2
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, align 8
  tail call void %36(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %37 = add nuw nsw i32 %31, 1
  %38 = load i32, i32* %25, align 4
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %30, label %40

40:                                               ; preds = %30, %24, %20
  %41 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %42 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %43 = bitcast %"class.SkSL::OutputStream"* %42 to void (%"class.SkSL::OutputStream"*, i8*)***
  %44 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, i64 2
  %46 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %45, align 8
  tail call void %46(%"class.SkSL::OutputStream"* %42, i8* %17) #12
  store i8 0, i8* %21, align 8
  br label %119

47:                                               ; preds = %3
  %48 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorDiagonalMatrix"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator30writeConstructorDiagonalMatrixERKNS_25ConstructorDiagonalMatrixENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::ConstructorDiagonalMatrix"* dereferenceable(72) %48, i32 %2)
  br label %119

49:                                               ; preds = %3, %3, %3, %3, %3
  %50 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %1) #12
  %51 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)***
  %52 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %52, i64 11
  %54 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %53, align 8
  tail call void %54(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %50, i32 %2) #12
  br label %119

55:                                               ; preds = %3, %3
  %56 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %1) #12
  %57 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)***
  %58 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %58, i64 12
  %60 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %59, align 8
  tail call void %60(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %56, i32 %2) #12
  br label %119

61:                                               ; preds = %3
  %62 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Literal.154"*
  %63 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)***
  %64 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)** %64, i64 18
  %66 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.154"*)** %65, align 8
  tail call void %66(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Literal.154"* dereferenceable(32) %62) #12
  br label %119

67:                                               ; preds = %3
  %68 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::FieldAccess"*
  %69 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)***
  %70 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)** %70, i64 13
  %72 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"*)** %71, align 8
  tail call void %72(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::FieldAccess"* dereferenceable(40) %68) #12
  br label %119

73:                                               ; preds = %3
  %74 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Literal.153"*
  %75 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)***
  %76 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)** %76, i64 19
  %78 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Literal.153"*)** %77, align 8
  tail call void %78(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Literal.153"* dereferenceable(32) %74) #12
  br label %119

79:                                               ; preds = %3
  %80 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::FunctionCall"*
  %81 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)***
  %82 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)** %82, i64 10
  %84 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"*)** %83, align 8
  tail call void %84(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %80) #12
  br label %119

85:                                               ; preds = %3
  %86 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::PrefixExpression"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator21writePrefixExpressionERKNS_16PrefixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::PrefixExpression"* dereferenceable(40) %86, i32 %2)
  br label %119

87:                                               ; preds = %3
  %88 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::PostfixExpression"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator22writePostfixExpressionERKNS_17PostfixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::PostfixExpression"* dereferenceable(40) %88, i32 %2)
  br label %119

89:                                               ; preds = %3
  %90 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Setting"*
  %91 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)***
  %92 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)** %92, i64 20
  %94 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Setting"*)** %93, align 8
  tail call void %94(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Setting"* dereferenceable(48) %90) #12
  br label %119

95:                                               ; preds = %3
  %96 = bitcast %"class.SkSL::Expression"* %1 to %"struct.SkSL::Swizzle"*
  %97 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)***
  %98 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)** %98, i64 14
  %100 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"*)** %99, align 8
  tail call void %100(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Swizzle"* dereferenceable(56) %96) #12
  br label %119

101:                                              ; preds = %3
  %102 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::VariableReference"*
  %103 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)***
  %104 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)** %104, i64 9
  %106 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"*)** %105, align 8
  tail call void %106(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::VariableReference"* dereferenceable(40) %102) #12
  br label %119

107:                                              ; preds = %3
  %108 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::TernaryExpression"*
  %109 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)***
  %110 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)** %110, i64 16
  %112 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"*, i32)** %111, align 8
  tail call void %112(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::TernaryExpression"* dereferenceable(48) %108, i32 %2) #12
  br label %119

113:                                              ; preds = %3
  %114 = bitcast %"class.SkSL::Expression"* %1 to %"struct.SkSL::IndexExpression"*
  %115 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)***
  %116 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)** %116, i64 17
  %118 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"*)** %117, align 8
  tail call void %118(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::IndexExpression"* dereferenceable(40) %114) #12
  br label %119

119:                                              ; preds = %40, %12, %3, %113, %107, %101, %95, %89, %87, %85, %79, %73, %67, %61, %55, %49, %47, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator16writeBoolLiteralERKNS_7LiteralIbEE(%"class.SkSL::GLSLCodeGenerator"* nocapture, %"class.SkSL::Literal"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i64 0, i64 0)
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %36, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %9
  %30 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* %6) #12
  store i8 0, i8* %10, align 8
  br label %36

36:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator30writeConstructorDiagonalMatrixERKNS_25ConstructorDiagonalMatrixENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ConstructorDiagonalMatrix"* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::ConstructorDiagonalMatrix", %"class.SkSL::ConstructorDiagonalMatrix"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %10, label %132

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 9
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %132

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ 0, %22 ], [ %31, %24 ]
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %31 = add nuw nsw i32 %25, 1
  %32 = load i32, i32* %19, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %24, label %34

34:                                               ; preds = %24, %14, %18
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %36 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %36 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  tail call void %40(%"class.SkSL::OutputStream"* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %15, align 8
  %41 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %5, align 8
  %42 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  %43 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %44 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %44, i64 5
  %46 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %45, align 8
  call void %46(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %41) #12
  %47 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = select i1 %50, i8* %52, i8* %42
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %80, label %56

56:                                               ; preds = %34
  %57 = load i8, i8* %15, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %59, %63
  %64 = phi i32 [ %70, %63 ], [ 0, %59 ]
  %65 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %66 = bitcast %"class.SkSL::OutputStream"* %65 to void (%"class.SkSL::OutputStream"*, i8*)***
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %67, i64 2
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, align 8
  call void %69(%"class.SkSL::OutputStream"* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %70 = add nuw nsw i32 %64, 1
  %71 = load i32, i32* %60, align 4
  %72 = icmp slt i32 %70, %71
  br i1 %72, label %63, label %73

73:                                               ; preds = %63, %59, %56
  %74 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %75 = bitcast %"class.SkSL::OutputStream"* %74 to void (%"class.SkSL::OutputStream"*, i8*)***
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, align 8
  call void %78(%"class.SkSL::OutputStream"* %74, i8* %53) #12
  store i8 0, i8* %15, align 8
  %79 = load i8, i8* %48, align 1
  br label %80

80:                                               ; preds = %73, %34
  %81 = phi i8 [ %49, %34 ], [ %79, %73 ]
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  %84 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  %86 = load i8, i8* %15, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %102, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %88, %92
  %93 = phi i32 [ %99, %92 ], [ 0, %88 ]
  %94 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %95 = bitcast %"class.SkSL::OutputStream"* %94 to void (%"class.SkSL::OutputStream"*, i8*)***
  %96 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, i64 2
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, align 8
  call void %98(%"class.SkSL::OutputStream"* %94, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %99 = add nuw nsw i32 %93, 1
  %100 = load i32, i32* %89, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %92, label %102

102:                                              ; preds = %92, %85, %88
  %103 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %104 = bitcast %"class.SkSL::OutputStream"* %103 to void (%"class.SkSL::OutputStream"*, i8*)***
  %105 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, i64 2
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %106, align 8
  call void %107(%"class.SkSL::OutputStream"* %103, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.84, i64 0, i64 0)) #12
  store i8 0, i8* %15, align 8
  %108 = getelementptr inbounds %"class.SkSL::ConstructorDiagonalMatrix", %"class.SkSL::ConstructorDiagonalMatrix"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %108, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %109, i32 4)
  %110 = load i8, i8* %15, align 8, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %126, label %112

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %126

116:                                              ; preds = %112, %116
  %117 = phi i32 [ %123, %116 ], [ 0, %112 ]
  %118 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %119 = bitcast %"class.SkSL::OutputStream"* %118 to void (%"class.SkSL::OutputStream"*, i8*)***
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %120, i64 2
  %122 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, align 8
  call void %122(%"class.SkSL::OutputStream"* %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %123 = add nuw nsw i32 %117, 1
  %124 = load i32, i32* %113, align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %116, label %126

126:                                              ; preds = %116, %102, %112
  %127 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %128 = bitcast %"class.SkSL::OutputStream"* %127 to void (%"class.SkSL::OutputStream"*, i8*)***
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %129, i64 2
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, align 8
  call void %131(%"class.SkSL::OutputStream"* %127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %15, align 8
  br label %138

132:                                              ; preds = %10, %3
  %133 = getelementptr inbounds %"class.SkSL::ConstructorDiagonalMatrix", %"class.SkSL::ConstructorDiagonalMatrix"* %1, i64 0, i32 0, i32 0
  %134 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)***
  %135 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %135, i64 11
  %137 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %136, align 8
  tail call void %137(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %133, i32 %2) #12
  br label %138

138:                                              ; preds = %132, %126
  ret void
}

declare dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator21writePrefixExpressionERKNS_16PrefixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::PrefixExpression"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = icmp slt i32 %2, 4
  br i1 %5, label %6, label %33

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i32 [ 0, %14 ], [ %23, %16 ]
  %18 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %15, align 8
  %19 = bitcast %"class.SkSL::OutputStream"* %18 to void (%"class.SkSL::OutputStream"*, i8*)***
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, i64 2
  %22 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, align 8
  tail call void %22(%"class.SkSL::OutputStream"* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %23 = add nuw nsw i32 %17, 1
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %16, label %26

26:                                               ; preds = %16, %6, %10
  %27 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %28 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %27, align 8
  %29 = bitcast %"class.SkSL::OutputStream"* %28 to void (%"class.SkSL::OutputStream"*, i8*)***
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, align 8
  tail call void %32(%"class.SkSL::OutputStream"* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %7, align 8
  br label %33

33:                                               ; preds = %26, %3
  %34 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %36, i32* %37, align 4
  %38 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #12
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i32 [ 0, %49 ], [ %58, %51 ]
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %50, align 8
  %54 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, align 8
  call void %57(%"class.SkSL::OutputStream"* %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %58 = add nuw nsw i32 %52, 1
  %59 = load i32, i32* %46, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %51, label %61

61:                                               ; preds = %51, %45, %41
  %62 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %63 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %62, align 8
  %64 = bitcast %"class.SkSL::OutputStream"* %63 to void (%"class.SkSL::OutputStream"*, i8*)***
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %65, i64 2
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, align 8
  call void %67(%"class.SkSL::OutputStream"* %63, i8* %38) #12
  store i8 0, i8* %42, align 8
  br label %68

68:                                               ; preds = %33, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #12
  %69 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %69, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %70, i32 3)
  br i1 %5, label %71, label %98

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %91, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i32 [ 0, %79 ], [ %88, %81 ]
  %83 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %80, align 8
  %84 = bitcast %"class.SkSL::OutputStream"* %83 to void (%"class.SkSL::OutputStream"*, i8*)***
  %85 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %85, i64 2
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %88 = add nuw nsw i32 %82, 1
  %89 = load i32, i32* %76, align 4
  %90 = icmp slt i32 %88, %89
  br i1 %90, label %81, label %91

91:                                               ; preds = %81, %71, %75
  %92 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %93 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %92, align 8
  %94 = bitcast %"class.SkSL::OutputStream"* %93 to void (%"class.SkSL::OutputStream"*, i8*)***
  %95 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %95, i64 2
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, align 8
  call void %97(%"class.SkSL::OutputStream"* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %72, align 8
  br label %98

98:                                               ; preds = %91, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator22writePostfixExpressionERKNS_17PostfixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::PostfixExpression"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = icmp slt i32 %2, 3
  br i1 %5, label %6, label %33

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i32 [ 0, %14 ], [ %23, %16 ]
  %18 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %15, align 8
  %19 = bitcast %"class.SkSL::OutputStream"* %18 to void (%"class.SkSL::OutputStream"*, i8*)***
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, i64 2
  %22 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, align 8
  tail call void %22(%"class.SkSL::OutputStream"* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %23 = add nuw nsw i32 %17, 1
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %16, label %26

26:                                               ; preds = %16, %6, %10
  %27 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %28 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %27, align 8
  %29 = bitcast %"class.SkSL::OutputStream"* %28 to void (%"class.SkSL::OutputStream"*, i8*)***
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, align 8
  tail call void %32(%"class.SkSL::OutputStream"* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %7, align 8
  br label %33

33:                                               ; preds = %26, %3
  %34 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %34, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %35, i32 2)
  %36 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 2, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %38, i32* %39, align 4
  %40 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #12
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %70, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i32 [ 0, %51 ], [ %60, %53 ]
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %52, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  call void %59(%"class.SkSL::OutputStream"* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %60 = add nuw nsw i32 %54, 1
  %61 = load i32, i32* %48, align 4
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %53, label %63

63:                                               ; preds = %53, %47, %43
  %64 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %65 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %64, align 8
  %66 = bitcast %"class.SkSL::OutputStream"* %65 to void (%"class.SkSL::OutputStream"*, i8*)***
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %67, i64 2
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, align 8
  call void %69(%"class.SkSL::OutputStream"* %65, i8* %40) #12
  store i8 0, i8* %44, align 8
  br label %70

70:                                               ; preds = %33, %63
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #12
  br i1 %5, label %71, label %98

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %91, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i32 [ 0, %79 ], [ %88, %81 ]
  %83 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %80, align 8
  %84 = bitcast %"class.SkSL::OutputStream"* %83 to void (%"class.SkSL::OutputStream"*, i8*)***
  %85 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %85, i64 2
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %88 = add nuw nsw i32 %82, 1
  %89 = load i32, i32* %76, align 4
  %90 = icmp slt i32 %88, %89
  br i1 %90, label %81, label %91

91:                                               ; preds = %81, %71, %75
  %92 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %93 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %92, align 8
  %94 = bitcast %"class.SkSL::OutputStream"* %93 to void (%"class.SkSL::OutputStream"*, i8*)***
  %95 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %95, i64 2
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, align 8
  call void %97(%"class.SkSL::OutputStream"* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %72, align 8
  br label %98

98:                                               ; preds = %91, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator15writeMinAbsHackERNS_10ExpressionES2_(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.SkSL::String"* %5 to i8*
  %33 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %34 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 7
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %34, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %5, i32 %35) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #12
  %37 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %3, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  %45 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.SkSL::String"* %7 to i8*
  %48 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %49 = load i32, i32* %34, align 8
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %34, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %7, i32 %49) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #12
  %51 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %44, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  %59 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #12
  %62 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #12
  %63 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #12
  %64 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  store i8 4, i8* %66, align 1
  %67 = bitcast %"class.SkSL::String"* %13 to i32*
  store i32 538976288, i32* %67, align 8
  %68 = getelementptr inbounds i8, i8* %64, i64 4
  store i8 0, i8* %68, align 4
  %69 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %70 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %70, i64 3
  %72 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %71, align 8
  %73 = call dereferenceable(184) %"class.SkSL::Type"* %72(%"class.SkSL::Expression"* %1) #12
  %74 = call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %73)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* %74) #12
  %75 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %69, align 8
  %77 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %76, i64 3
  %78 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %77, align 8
  %79 = call dereferenceable(184) %"class.SkSL::Type"* %78(%"class.SkSL::Expression"* %1) #12
  %80 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %81 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %81, i64 5
  %83 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %82, align 8
  call void %83(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %79) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0)) #12
  %84 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6
  %85 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %84, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #12
  %86 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %58
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #14
  br label %93

93:                                               ; preds = %58, %90
  %94 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %93, %98
  %102 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #14
  br label %109

109:                                              ; preds = %101, %106
  %110 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %109, %114
  %118 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #14
  br label %125

125:                                              ; preds = %117, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  %126 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %132) #14
  br label %133

133:                                              ; preds = %125, %130
  %134 = load i8, i8* %66, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #14
  br label %139

139:                                              ; preds = %133, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  %140 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #12
  %141 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #12
  %142 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #12
  %143 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #12
  %144 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #12
  %145 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #12
  %146 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  store i8 4, i8* %147, align 1
  %148 = bitcast %"class.SkSL::String"* %20 to i32*
  store i32 538976288, i32* %148, align 8
  %149 = getelementptr inbounds i8, i8* %145, i64 4
  store i8 0, i8* %149, align 4
  %150 = bitcast %"class.SkSL::Expression"* %2 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %151 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %150, align 8
  %152 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %151, i64 3
  %153 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %152, align 8
  %154 = call dereferenceable(184) %"class.SkSL::Type"* %153(%"class.SkSL::Expression"* %2) #12
  %155 = call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %154)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, i8* %155) #12
  %156 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #12
  %157 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %150, align 8
  %158 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %157, i64 3
  %159 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %158, align 8
  %160 = call dereferenceable(184) %"class.SkSL::Type"* %159(%"class.SkSL::Expression"* %2) #12
  %161 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %80, align 8
  %162 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %161, i64 5
  %163 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %162, align 8
  call void %163(%"class.SkSL::String"* nonnull sret %21, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %160) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %18, %"class.SkSL::String"* nonnull %19, %"class.SkSL::String"* nonnull dereferenceable(24) %21) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::String"* nonnull %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0)) #12
  %164 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %84, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #12
  %165 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %139
  %170 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #14
  br label %172

172:                                              ; preds = %139, %169
  %173 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #14
  br label %180

180:                                              ; preds = %172, %177
  %181 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #14
  br label %188

188:                                              ; preds = %180, %185
  %189 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #14
  br label %196

196:                                              ; preds = %188, %193
  %197 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #14
  br label %204

204:                                              ; preds = %196, %201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #12
  %205 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %211) #14
  br label %212

212:                                              ; preds = %204, %209
  %213 = load i8, i8* %147, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #14
  br label %218

218:                                              ; preds = %212, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #12
  %219 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #12
  %220 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %220) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %22, %"class.SkSL::String"* nonnull %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #12
  %221 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  %223 = load i8, i8* %222, align 1
  %224 = icmp slt i8 %223, 0
  %225 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = select i1 %224, i8* %226, i8* %219
  %228 = load i8, i8* %227, align 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %258, label %230

230:                                              ; preds = %218
  %231 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %232 = load i8, i8* %231, align 8, !range !2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %250, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %236 = load i32, i32* %235, align 4
  %237 = icmp sgt i32 %236, 0
  br i1 %237, label %238, label %250

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %240

240:                                              ; preds = %240, %238
  %241 = phi i32 [ 0, %238 ], [ %247, %240 ]
  %242 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %239, align 8
  %243 = bitcast %"class.SkSL::OutputStream"* %242 to void (%"class.SkSL::OutputStream"*, i8*)***
  %244 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %244, i64 2
  %246 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %245, align 8
  call void %246(%"class.SkSL::OutputStream"* %242, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %247 = add nuw nsw i32 %241, 1
  %248 = load i32, i32* %235, align 4
  %249 = icmp slt i32 %247, %248
  br i1 %249, label %240, label %250

250:                                              ; preds = %240, %234, %230
  %251 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %252 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %251, align 8
  %253 = bitcast %"class.SkSL::OutputStream"* %252 to void (%"class.SkSL::OutputStream"*, i8*)***
  %254 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %254, i64 2
  %256 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %255, align 8
  call void %256(%"class.SkSL::OutputStream"* %252, i8* %227) #12
  store i8 0, i8* %231, align 8
  %257 = load i8, i8* %222, align 1
  br label %258

258:                                              ; preds = %218, %250
  %259 = phi i8 [ %223, %218 ], [ %257, %250 ]
  %260 = icmp slt i8 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %258
  %262 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %262) #14
  br label %263

263:                                              ; preds = %258, %261
  %264 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %264, i64 0, i32 1, i32 0
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  call void @_ZdlPv(i8* %270) #14
  br label %271

271:                                              ; preds = %263, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %220) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #12
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, i32 17)
  %272 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #12
  %273 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #12
  %274 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %275 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %274, i64 0, i32 1, i32 0
  %276 = load i8, i8* %275, align 1
  %277 = icmp slt i8 %276, 0
  %278 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = select i1 %277, i8* %279, i8* %272
  %281 = load i8, i8* %280, align 1
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %311, label %283

283:                                              ; preds = %271
  %284 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %285 = load i8, i8* %284, align 8, !range !2
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %303, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %289 = load i32, i32* %288, align 4
  %290 = icmp sgt i32 %289, 0
  br i1 %290, label %291, label %303

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %293

293:                                              ; preds = %293, %291
  %294 = phi i32 [ 0, %291 ], [ %300, %293 ]
  %295 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %292, align 8
  %296 = bitcast %"class.SkSL::OutputStream"* %295 to void (%"class.SkSL::OutputStream"*, i8*)***
  %297 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %296, align 8
  %298 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %297, i64 2
  %299 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %298, align 8
  call void %299(%"class.SkSL::OutputStream"* %295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %300 = add nuw nsw i32 %294, 1
  %301 = load i32, i32* %288, align 4
  %302 = icmp slt i32 %300, %301
  br i1 %302, label %293, label %303

303:                                              ; preds = %293, %287, %283
  %304 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %305 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %304, align 8
  %306 = bitcast %"class.SkSL::OutputStream"* %305 to void (%"class.SkSL::OutputStream"*, i8*)***
  %307 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %307, i64 2
  %309 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %308, align 8
  call void %309(%"class.SkSL::OutputStream"* %305, i8* %280) #12
  store i8 0, i8* %284, align 8
  %310 = load i8, i8* %275, align 1
  br label %311

311:                                              ; preds = %271, %303
  %312 = phi i8 [ %276, %271 ], [ %310, %303 ]
  %313 = icmp slt i8 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %311
  %315 = load i8*, i8** %278, align 8
  call void @_ZdlPv(i8* %315) #14
  br label %316

316:                                              ; preds = %311, %314
  %317 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %318 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %317, i64 0, i32 1, i32 0
  %319 = load i8, i8* %318, align 1
  %320 = icmp slt i8 %319, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load i8*, i8** %322, align 8
  call void @_ZdlPv(i8* %323) #14
  br label %324

324:                                              ; preds = %316, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %272) #12
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2, i32 16)
  %325 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #12
  %326 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %326) #12
  %327 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #12
  %328 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %26, %"class.SkSL::String"* nonnull %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  %329 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %330 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %329, i64 0, i32 1, i32 0
  %331 = load i8, i8* %330, align 1
  %332 = icmp slt i8 %331, 0
  %333 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  %335 = select i1 %332, i8* %334, i8* %325
  %336 = load i8, i8* %335, align 1
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %366, label %338

338:                                              ; preds = %324
  %339 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %340 = load i8, i8* %339, align 8, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %358, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %344 = load i32, i32* %343, align 4
  %345 = icmp sgt i32 %344, 0
  br i1 %345, label %346, label %358

346:                                              ; preds = %342
  %347 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %348

348:                                              ; preds = %348, %346
  %349 = phi i32 [ 0, %346 ], [ %355, %348 ]
  %350 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %347, align 8
  %351 = bitcast %"class.SkSL::OutputStream"* %350 to void (%"class.SkSL::OutputStream"*, i8*)***
  %352 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %351, align 8
  %353 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %352, i64 2
  %354 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %353, align 8
  call void %354(%"class.SkSL::OutputStream"* %350, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %355 = add nuw nsw i32 %349, 1
  %356 = load i32, i32* %343, align 4
  %357 = icmp slt i32 %355, %356
  br i1 %357, label %348, label %358

358:                                              ; preds = %348, %342, %338
  %359 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %360 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %359, align 8
  %361 = bitcast %"class.SkSL::OutputStream"* %360 to void (%"class.SkSL::OutputStream"*, i8*)***
  %362 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %362, i64 2
  %364 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %363, align 8
  call void %364(%"class.SkSL::OutputStream"* %360, i8* %335) #12
  store i8 0, i8* %339, align 8
  %365 = load i8, i8* %330, align 1
  br label %366

366:                                              ; preds = %324, %358
  %367 = phi i8 [ %331, %324 ], [ %365, %358 ]
  %368 = icmp slt i8 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %366
  %370 = load i8*, i8** %333, align 8
  call void @_ZdlPv(i8* %370) #14
  br label %371

371:                                              ; preds = %366, %369
  %372 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  %374 = load i8, i8* %373, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %379

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load i8*, i8** %377, align 8
  call void @_ZdlPv(i8* %378) #14
  br label %379

379:                                              ; preds = %371, %376
  %380 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %381 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %380, i64 0, i32 1, i32 0
  %382 = load i8, i8* %381, align 1
  %383 = icmp slt i8 %382, 0
  br i1 %383, label %384, label %387

384:                                              ; preds = %379
  %385 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load i8*, i8** %385, align 8
  call void @_ZdlPv(i8* %386) #14
  br label %387

387:                                              ; preds = %379, %384
  %388 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %389 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %388, i64 0, i32 1, i32 0
  %390 = load i8, i8* %389, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %395

392:                                              ; preds = %387
  %393 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load i8*, i8** %393, align 8
  call void @_ZdlPv(i8* %394) #14
  br label %395

395:                                              ; preds = %387, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %326) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #12
  %396 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %397 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %396, i64 0, i32 1, i32 0
  %398 = load i8, i8* %397, align 1
  %399 = icmp slt i8 %398, 0
  br i1 %399, label %400, label %402

400:                                              ; preds = %395
  %401 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %401) #14
  br label %402

402:                                              ; preds = %395, %400
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  %403 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %404 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %403, i64 0, i32 1, i32 0
  %405 = load i8, i8* %404, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %409

407:                                              ; preds = %402
  %408 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %408) #14
  br label %409

409:                                              ; preds = %402, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"struct.SkSL::StringFragment"*
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"struct.SkSL::StringFragment"*
  %15 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %16 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %16, i64 4
  %18 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  br i1 %19, label %20, label %131

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %131 [
    i32 8, label %23
    i32 11, label %125
    i32 4, label %125
    i32 0, label %125
  ]

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %25 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %25, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %27 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %26, align 8
  %28 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %30 = bitcast i8** %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  store <2 x i64> %31, <2 x i64>* %11, align 16
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 0, i32 1, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 0, i32 1, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %12, i8* %33, i64 %35) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  br i1 %36, label %49, label %37

37:                                               ; preds = %23
  %38 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %39 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %38, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %39, align 8
  %41 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #12
  %42 = bitcast i8** %29 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  store <2 x i64> %43, <2 x i64>* %7, align 16
  %44 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 0, i32 1, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 0, i32 1, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %45, i64 %47) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #12
  br i1 %48, label %49, label %67

49:                                               ; preds = %37, %23
  %50 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %51 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %50, align 8
  %52 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %51, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %52, align 8
  %54 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %53, i64 0, i32 1, i32 3
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %131

57:                                               ; preds = %49
  %58 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %59 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %58, i64 0, i32 2
  %60 = load %class.GrShaderCaps*, %class.GrShaderCaps** %59, align 8
  %61 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %60, i64 0, i32 2
  %62 = bitcast i56* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 17179869184
  %65 = icmp eq i64 %64, 0
  %66 = select i1 %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0)
  ret i8* %66

67:                                               ; preds = %37
  %68 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %69 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %68, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %69, align 8
  %71 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #12
  %72 = bitcast i8** %29 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  store <2 x i64> %73, <2 x i64>* %3, align 16
  %74 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %75, i64 %77) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #12
  br i1 %78, label %79, label %88

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %81 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %80, align 8
  %82 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %83, i64 0, i32 1, i32 3
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  %87 = select i1 %86, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0)
  br label %131

88:                                               ; preds = %67
  %89 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %90 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %90, align 8
  %92 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #12
  %93 = bitcast i8** %29 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8
  store <2 x i64> %94, <2 x i64>* %5, align 16
  %95 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %91, i64 0, i32 0, i32 1, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %91, i64 0, i32 0, i32 1, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %96, i64 %98) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #12
  br i1 %99, label %131, label %100

100:                                              ; preds = %88
  %101 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %102 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %101, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %103 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %102, align 8
  %104 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #12
  %105 = bitcast i8** %29 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8
  store <2 x i64> %106, <2 x i64>* %9, align 16
  %107 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %103, i64 0, i32 0, i32 1, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %103, i64 0, i32 0, i32 1, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %10, i8* %108, i64 %110) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #12
  br i1 %111, label %131, label %112

112:                                              ; preds = %100
  %113 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %114 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %113, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %115 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %114, align 8
  %116 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #12
  %117 = bitcast i8** %29 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 8
  store <2 x i64> %118, <2 x i64>* %13, align 16
  %119 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %115, i64 0, i32 0, i32 1, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %115, i64 0, i32 0, i32 1, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %14, i8* %120, i64 %122) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #12
  %124 = select i1 %123, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0)
  br label %131

125:                                              ; preds = %20, %20, %20
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %127 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %126, align 8
  %128 = icmp eq %"class.SkSL::Type"* %127, null
  %129 = select i1 %128, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %127
  %130 = tail call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %129)
  br label %131

131:                                              ; preds = %112, %2, %20, %88, %100, %49, %125, %79
  %132 = phi i8* [ %130, %125 ], [ %87, %79 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), %49 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), %100 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), %88 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), %20 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), %2 ], [ %124, %112 ]
  ret i8* %132
}

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator20writeInverseSqrtHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, i32 17)
  %29 = load i8, i8* %3, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %31, %35
  %36 = phi i32 [ %42, %35 ], [ 0, %31 ]
  %37 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %38 = bitcast %"class.SkSL::OutputStream"* %37 to void (%"class.SkSL::OutputStream"*, i8*)***
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, i64 2
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %40, align 8
  tail call void %41(%"class.SkSL::OutputStream"* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %42 = add nuw nsw i32 %36, 1
  %43 = load i32, i32* %32, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %35, label %45

45:                                               ; preds = %35, %22, %31
  %46 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %47 = bitcast %"class.SkSL::OutputStream"* %46 to void (%"class.SkSL::OutputStream"*, i8*)***
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, i64 2
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, align 8
  tail call void %50(%"class.SkSL::OutputStream"* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator20writeDeterminantHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"struct.SkSL::StringFragment"*
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #12
  %27 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %28 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %28, i64 3
  %30 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %29, align 8
  %31 = tail call dereferenceable(184) %"class.SkSL::Type"* %30(%"class.SkSL::Expression"* %1) #12
  %32 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %33 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %33, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %36 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %31, i64 0, i32 0, i32 1, i32 0
  %38 = bitcast i8** %37 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  store <2 x i64> %39, <2 x i64>* %12, align 16
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 0, i32 1, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 0, i32 1, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %13, i8* %41, i64 %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #12
  br i1 %44, label %58, label %45

45:                                               ; preds = %2
  %46 = bitcast <2 x i64>* %11 to %"struct.SkSL::StringFragment"*
  %47 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %48 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %47, i64 0, i32 0, i32 41, i32 0, i32 0, i32 0
  %49 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %48, align 8
  %50 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #12
  %51 = bitcast i8** %37 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  store <2 x i64> %52, <2 x i64>* %11, align 16
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %49, i64 0, i32 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %49, i64 0, i32 0, i32 1, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %46, i8* %54, i64 %56) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #12
  br i1 %57, label %58, label %105

58:                                               ; preds = %45, %2
  %59 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 13, i8* %61, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0), i64 13, i1 false) #12
  %62 = getelementptr inbounds i8, i8* %59, i64 13
  store i8 0, i8* %62, align 1
  %63 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %67, %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %59, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  %70 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %71 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %70, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %72 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %73 = icmp eq %"class.std::__1::__tree_end_node"* %71, %72
  br i1 %73, label %74, label %247

74:                                               ; preds = %69
  %75 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %70, %"class.SkSL::String"* nonnull dereferenceable(24) %14, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %76 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.37, i64 0, i64 0)) #12
  %78 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = select i1 %81, i8* %83, i8* %76
  %85 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %86 = call i64 @strlen(i8* %84) #13
  %87 = bitcast %class.SkWStream* %85 to i1 (%class.SkWStream*, i8*, i64)***
  %88 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %87, align 8
  %89 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %88, i64 2
  %90 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %89, align 8
  %91 = call zeroext i1 %90(%class.SkWStream* %85, i8* %84, i64 %86) #12
  %92 = load i8, i8* %79, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %74
  %95 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %74, %94
  %97 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %96, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  br label %247

105:                                              ; preds = %45
  %106 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %107 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %106, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %108 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %107, align 8
  %109 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #12
  %110 = bitcast i8** %37 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8
  store <2 x i64> %111, <2 x i64>* %9, align 16
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %108, i64 0, i32 0, i32 1, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %108, i64 0, i32 0, i32 1, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %10, i8* %113, i64 %115) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #12
  br i1 %116, label %129, label %117

117:                                              ; preds = %105
  %118 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %119 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %118, i64 0, i32 0, i32 45, i32 0, i32 0, i32 0
  %120 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %119, align 8
  %121 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #12
  %122 = bitcast i8** %37 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  store <2 x i64> %123, <2 x i64>* %7, align 16
  %124 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %125, i64 %127) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #12
  br i1 %128, label %129, label %176

129:                                              ; preds = %117, %105
  %130 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #12
  %131 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  store i8 13, i8* %132, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i64 0, i64 0), i64 13, i1 false) #12
  %133 = getelementptr inbounds i8, i8* %130, i64 13
  store i8 0, i8* %133, align 1
  %134 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %129
  %139 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %138, %129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %130, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #12
  %141 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %142 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %141, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %143 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %144 = icmp eq %"class.std::__1::__tree_end_node"* %142, %143
  br i1 %144, label %145, label %247

145:                                              ; preds = %140
  %146 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %141, %"class.SkSL::String"* nonnull dereferenceable(24) %14, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %147 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #12
  %148 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, i8* getelementptr inbounds ([334 x i8], [334 x i8]* @.str.39, i64 0, i64 0)) #12
  %149 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  %153 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = select i1 %152, i8* %154, i8* %147
  %156 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %157 = call i64 @strlen(i8* %155) #13
  %158 = bitcast %class.SkWStream* %156 to i1 (%class.SkWStream*, i8*, i64)***
  %159 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %158, align 8
  %160 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %159, i64 2
  %161 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %160, align 8
  %162 = call zeroext i1 %161(%class.SkWStream* %156, i8* %155, i64 %157) #12
  %163 = load i8, i8* %150, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %145
  %166 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %145, %165
  %168 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %167, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #12
  br label %247

176:                                              ; preds = %117
  %177 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %178 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %177, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %179 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %178, align 8
  %180 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #12
  %181 = bitcast i8** %37 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8
  store <2 x i64> %182, <2 x i64>* %5, align 16
  %183 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %179, i64 0, i32 0, i32 1, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %179, i64 0, i32 0, i32 1, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %184, i64 %186) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #12
  br i1 %187, label %200, label %188

188:                                              ; preds = %176
  %189 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %190 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %189, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0
  %191 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %190, align 8
  %192 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #12
  %193 = bitcast i8** %37 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8
  store <2 x i64> %194, <2 x i64>* %3, align 16
  %195 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %191, i64 0, i32 0, i32 1, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %191, i64 0, i32 0, i32 1, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %196, i64 %198) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #12
  br i1 %199, label %200, label %247

200:                                              ; preds = %188, %176
  %201 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #12
  %202 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  store i8 13, i8* %203, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), i64 13, i1 false) #12
  %204 = getelementptr inbounds i8, i8* %201, i64 13
  store i8 0, i8* %204, align 1
  %205 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %200
  %210 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %210) #14
  br label %211

211:                                              ; preds = %209, %200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %201, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #12
  %212 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %213 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %212, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %214 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %215 = icmp eq %"class.std::__1::__tree_end_node"* %213, %214
  br i1 %215, label %216, label %247

216:                                              ; preds = %211
  %217 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %212, %"class.SkSL::String"* nonnull dereferenceable(24) %14, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %218 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #12
  %219 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %22, %"class.SkSL::String"* nonnull %23, i8* getelementptr inbounds ([825 x i8], [825 x i8]* @.str.42, i64 0, i64 0)) #12
  %220 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  %224 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = select i1 %223, i8* %225, i8* %218
  %227 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %228 = call i64 @strlen(i8* %226) #13
  %229 = bitcast %class.SkWStream* %227 to i1 (%class.SkWStream*, i8*, i64)***
  %230 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %229, align 8
  %231 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %230, i64 2
  %232 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %231, align 8
  %233 = call zeroext i1 %232(%class.SkWStream* %227, i8* %226, i64 %228) #12
  %234 = load i8, i8* %221, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %216
  %237 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %237) #14
  br label %238

238:                                              ; preds = %216, %236
  %239 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #14
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #12
  br label %247

247:                                              ; preds = %175, %140, %188, %211, %246, %69, %104
  %248 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  %249 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  %253 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = select i1 %252, i8* %254, i8* %248
  %256 = load i8, i8* %255, align 1
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %286, label %258

258:                                              ; preds = %247
  %259 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %260 = load i8, i8* %259, align 8, !range !2
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i32 [ 0, %266 ], [ %275, %268 ]
  %270 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %271 = bitcast %"class.SkSL::OutputStream"* %270 to void (%"class.SkSL::OutputStream"*, i8*)***
  %272 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, i64 2
  %274 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %273, align 8
  call void %274(%"class.SkSL::OutputStream"* %270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %275 = add nuw nsw i32 %269, 1
  %276 = load i32, i32* %263, align 4
  %277 = icmp slt i32 %275, %276
  br i1 %277, label %268, label %278

278:                                              ; preds = %268, %262, %258
  %279 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %280 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %279, align 8
  %281 = bitcast %"class.SkSL::OutputStream"* %280 to void (%"class.SkSL::OutputStream"*, i8*)***
  %282 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %282, i64 2
  %284 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %283, align 8
  call void %284(%"class.SkSL::OutputStream"* %280, i8* %255) #12
  store i8 0, i8* %259, align 8
  %285 = load i8, i8* %250, align 1
  br label %286

286:                                              ; preds = %247, %278
  %287 = phi i8 [ %251, %247 ], [ %285, %278 ]
  %288 = icmp slt i8 %287, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %286
  %290 = load i8*, i8** %253, align 8
  call void @_ZdlPv(i8* %290) #14
  br label %291

291:                                              ; preds = %286, %289
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #12
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, i32 17)
  %292 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %293 = load i8, i8* %292, align 8, !range !2
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %311, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %297 = load i32, i32* %296, align 4
  %298 = icmp sgt i32 %297, 0
  br i1 %298, label %299, label %311

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %301

301:                                              ; preds = %301, %299
  %302 = phi i32 [ 0, %299 ], [ %308, %301 ]
  %303 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %300, align 8
  %304 = bitcast %"class.SkSL::OutputStream"* %303 to void (%"class.SkSL::OutputStream"*, i8*)***
  %305 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %305, i64 2
  %307 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %306, align 8
  call void %307(%"class.SkSL::OutputStream"* %303, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %308 = add nuw nsw i32 %302, 1
  %309 = load i32, i32* %296, align 4
  %310 = icmp slt i32 %308, %309
  br i1 %310, label %301, label %311

311:                                              ; preds = %301, %291, %295
  %312 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %313 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %312, align 8
  %314 = bitcast %"class.SkSL::OutputStream"* %313 to void (%"class.SkSL::OutputStream"*, i8*)***
  %315 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %315, i64 2
  %317 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %316, align 8
  call void %317(%"class.SkSL::OutputStream"* %313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %292, align 8
  %318 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %319 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %318, i64 0, i32 1, i32 0
  %320 = load i8, i8* %319, align 1
  %321 = icmp slt i8 %320, 0
  br i1 %321, label %322, label %324

322:                                              ; preds = %311
  %323 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %323) #14
  br label %324

324:                                              ; preds = %311, %322
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator16writeInverseHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"struct.SkSL::StringFragment"*
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #12
  %27 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %28 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %28, i64 3
  %30 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %29, align 8
  %31 = tail call dereferenceable(184) %"class.SkSL::Type"* %30(%"class.SkSL::Expression"* %1) #12
  %32 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %33 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %33, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %36 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %31, i64 0, i32 0, i32 1, i32 0
  %38 = bitcast i8** %37 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  store <2 x i64> %39, <2 x i64>* %12, align 16
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 0, i32 1, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 0, i32 1, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %13, i8* %41, i64 %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #12
  br i1 %44, label %58, label %45

45:                                               ; preds = %2
  %46 = bitcast <2 x i64>* %11 to %"struct.SkSL::StringFragment"*
  %47 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %48 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %47, i64 0, i32 0, i32 41, i32 0, i32 0, i32 0
  %49 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %48, align 8
  %50 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #12
  %51 = bitcast i8** %37 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  store <2 x i64> %52, <2 x i64>* %11, align 16
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %49, i64 0, i32 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %49, i64 0, i32 0, i32 1, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %46, i8* %54, i64 %56) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #12
  br i1 %57, label %58, label %105

58:                                               ; preds = %45, %2
  %59 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 9, i8* %61, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0), i64 9, i1 false) #12
  %62 = getelementptr inbounds i8, i8* %59, i64 9
  store i8 0, i8* %62, align 1
  %63 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %67, %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %59, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  %70 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %71 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %70, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %72 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %73 = icmp eq %"class.std::__1::__tree_end_node"* %71, %72
  br i1 %73, label %74, label %247

74:                                               ; preds = %69
  %75 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %70, %"class.SkSL::String"* nonnull dereferenceable(24) %14, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %76 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.46, i64 0, i64 0)) #12
  %78 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = select i1 %81, i8* %83, i8* %76
  %85 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %86 = call i64 @strlen(i8* %84) #13
  %87 = bitcast %class.SkWStream* %85 to i1 (%class.SkWStream*, i8*, i64)***
  %88 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %87, align 8
  %89 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %88, i64 2
  %90 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %89, align 8
  %91 = call zeroext i1 %90(%class.SkWStream* %85, i8* %84, i64 %86) #12
  %92 = load i8, i8* %79, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %74
  %95 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %74, %94
  %97 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %96, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  br label %247

105:                                              ; preds = %45
  %106 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %107 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %106, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %108 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %107, align 8
  %109 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #12
  %110 = bitcast i8** %37 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8
  store <2 x i64> %111, <2 x i64>* %9, align 16
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %108, i64 0, i32 0, i32 1, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %108, i64 0, i32 0, i32 1, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %10, i8* %113, i64 %115) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #12
  br i1 %116, label %129, label %117

117:                                              ; preds = %105
  %118 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %119 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %118, i64 0, i32 0, i32 45, i32 0, i32 0, i32 0
  %120 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %119, align 8
  %121 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #12
  %122 = bitcast i8** %37 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  store <2 x i64> %123, <2 x i64>* %7, align 16
  %124 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %125, i64 %127) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #12
  br i1 %128, label %129, label %176

129:                                              ; preds = %117, %105
  %130 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #12
  %131 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  store i8 9, i8* %132, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i64 9, i1 false) #12
  %133 = getelementptr inbounds i8, i8* %130, i64 9
  store i8 0, i8* %133, align 1
  %134 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %129
  %139 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %138, %129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %130, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #12
  %141 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %142 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %141, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %143 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %144 = icmp eq %"class.std::__1::__tree_end_node"* %142, %143
  br i1 %144, label %145, label %247

145:                                              ; preds = %140
  %146 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %141, %"class.SkSL::String"* nonnull dereferenceable(24) %14, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %147 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #12
  %148 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, i8* getelementptr inbounds ([559 x i8], [559 x i8]* @.str.49, i64 0, i64 0)) #12
  %149 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  %153 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = select i1 %152, i8* %154, i8* %147
  %156 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %157 = call i64 @strlen(i8* %155) #13
  %158 = bitcast %class.SkWStream* %156 to i1 (%class.SkWStream*, i8*, i64)***
  %159 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %158, align 8
  %160 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %159, i64 2
  %161 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %160, align 8
  %162 = call zeroext i1 %161(%class.SkWStream* %156, i8* %155, i64 %157) #12
  %163 = load i8, i8* %150, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %145
  %166 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %145, %165
  %168 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %167, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #12
  br label %247

176:                                              ; preds = %117
  %177 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %178 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %177, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %179 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %178, align 8
  %180 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #12
  %181 = bitcast i8** %37 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8
  store <2 x i64> %182, <2 x i64>* %5, align 16
  %183 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %179, i64 0, i32 0, i32 1, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %179, i64 0, i32 0, i32 1, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %184, i64 %186) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #12
  br i1 %187, label %200, label %188

188:                                              ; preds = %176
  %189 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %32, align 8
  %190 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %189, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0
  %191 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %190, align 8
  %192 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #12
  %193 = bitcast i8** %37 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8
  store <2 x i64> %194, <2 x i64>* %3, align 16
  %195 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %191, i64 0, i32 0, i32 1, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %191, i64 0, i32 0, i32 1, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %196, i64 %198) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #12
  br i1 %199, label %200, label %247

200:                                              ; preds = %188, %176
  %201 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #12
  %202 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  store i8 9, i8* %203, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i64 9, i1 false) #12
  %204 = getelementptr inbounds i8, i8* %201, i64 9
  store i8 0, i8* %204, align 1
  %205 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %200
  %210 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %210) #14
  br label %211

211:                                              ; preds = %209, %200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %201, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #12
  %212 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %213 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %212, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %214 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %215 = icmp eq %"class.std::__1::__tree_end_node"* %213, %214
  br i1 %215, label %216, label %247

216:                                              ; preds = %211
  %217 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %212, %"class.SkSL::String"* nonnull dereferenceable(24) %14, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %218 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #12
  %219 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %22, %"class.SkSL::String"* nonnull %23, i8* getelementptr inbounds ([1541 x i8], [1541 x i8]* @.str.51, i64 0, i64 0)) #12
  %220 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  %224 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = select i1 %223, i8* %225, i8* %218
  %227 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %228 = call i64 @strlen(i8* %226) #13
  %229 = bitcast %class.SkWStream* %227 to i1 (%class.SkWStream*, i8*, i64)***
  %230 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %229, align 8
  %231 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %230, i64 2
  %232 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %231, align 8
  %233 = call zeroext i1 %232(%class.SkWStream* %227, i8* %226, i64 %228) #12
  %234 = load i8, i8* %221, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %216
  %237 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %237) #14
  br label %238

238:                                              ; preds = %216, %236
  %239 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #14
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #12
  br label %247

247:                                              ; preds = %175, %140, %188, %211, %246, %69, %104
  %248 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  %249 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  %253 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = select i1 %252, i8* %254, i8* %248
  %256 = load i8, i8* %255, align 1
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %286, label %258

258:                                              ; preds = %247
  %259 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %260 = load i8, i8* %259, align 8, !range !2
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i32 [ 0, %266 ], [ %275, %268 ]
  %270 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %271 = bitcast %"class.SkSL::OutputStream"* %270 to void (%"class.SkSL::OutputStream"*, i8*)***
  %272 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, i64 2
  %274 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %273, align 8
  call void %274(%"class.SkSL::OutputStream"* %270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %275 = add nuw nsw i32 %269, 1
  %276 = load i32, i32* %263, align 4
  %277 = icmp slt i32 %275, %276
  br i1 %277, label %268, label %278

278:                                              ; preds = %268, %262, %258
  %279 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %280 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %279, align 8
  %281 = bitcast %"class.SkSL::OutputStream"* %280 to void (%"class.SkSL::OutputStream"*, i8*)***
  %282 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %282, i64 2
  %284 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %283, align 8
  call void %284(%"class.SkSL::OutputStream"* %280, i8* %255) #12
  store i8 0, i8* %259, align 8
  %285 = load i8, i8* %250, align 1
  br label %286

286:                                              ; preds = %247, %278
  %287 = phi i8 [ %251, %247 ], [ %285, %278 ]
  %288 = icmp slt i8 %287, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %286
  %290 = load i8*, i8** %253, align 8
  call void @_ZdlPv(i8* %290) #14
  br label %291

291:                                              ; preds = %286, %289
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #12
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, i32 17)
  %292 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %293 = load i8, i8* %292, align 8, !range !2
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %311, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %297 = load i32, i32* %296, align 4
  %298 = icmp sgt i32 %297, 0
  br i1 %298, label %299, label %311

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %301

301:                                              ; preds = %301, %299
  %302 = phi i32 [ 0, %299 ], [ %308, %301 ]
  %303 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %300, align 8
  %304 = bitcast %"class.SkSL::OutputStream"* %303 to void (%"class.SkSL::OutputStream"*, i8*)***
  %305 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %305, i64 2
  %307 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %306, align 8
  call void %307(%"class.SkSL::OutputStream"* %303, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %308 = add nuw nsw i32 %302, 1
  %309 = load i32, i32* %296, align 4
  %310 = icmp slt i32 %308, %309
  br i1 %310, label %301, label %311

311:                                              ; preds = %301, %291, %295
  %312 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %313 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %312, align 8
  %314 = bitcast %"class.SkSL::OutputStream"* %313 to void (%"class.SkSL::OutputStream"*, i8*)***
  %315 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %315, i64 2
  %317 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %316, align 8
  call void %317(%"class.SkSL::OutputStream"* %313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %292, align 8
  %318 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %319 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %318, i64 0, i32 1, i32 0
  %320 = load i8, i8* %319, align 1
  %321 = icmp slt i8 %320, 0
  br i1 %321, label %322, label %324

322:                                              ; preds = %311
  %323 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %323) #14
  br label %324

324:                                              ; preds = %311, %322
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator18writeTransposeHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %24 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %24, i64 3
  %26 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %25, align 8
  %27 = tail call dereferenceable(184) %"class.SkSL::Type"* %26(%"class.SkSL::Expression"* %1) #12
  %28 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.SkSL::String"* %4 to i8*
  %31 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %32 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 8
  %34 = load i32, i32* %33, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %5, i32 %34) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #12
  %35 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 9
  %37 = load i32, i32* %36, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %37) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  %38 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %2, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  %46 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %45, %50
  %54 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %62 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %63 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %62, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #12
  %64 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %63, %64
  br i1 %65, label %66, label %275

66:                                               ; preds = %61
  %67 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %62, %"class.SkSL::String"* nonnull dereferenceable(24) %3, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #12
  %68 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  %69 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %71 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  %72 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %70, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %72, i64 5
  %74 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %73, align 8
  call void %74(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %27) #12
  %75 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 6
  %76 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %75, align 8
  %77 = icmp eq %"class.SkSL::Type"* %76, null
  %78 = select i1 %77, %"class.SkSL::Type"* %27, %"class.SkSL::Type"* %76
  %79 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #12
  %80 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %82 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  %83 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %81, align 8
  %84 = load i32, i32* %36, align 4
  %85 = load i32, i32* %33, align 8
  %86 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %78, %"class.SkSL::Context"* dereferenceable(744) %83, i32 %84, i32 %85) #12
  %87 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %70, align 8
  %88 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %87, i64 5
  %89 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %88, align 8
  call void %89(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %86) #12
  %90 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #12
  %92 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  %93 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #12
  %94 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #12
  %95 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  %96 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  %97 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  %101 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = select i1 %100, i8* %102, i8* %90
  %104 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %105 = call i64 @strlen(i8* %103) #13
  %106 = bitcast %class.SkWStream* %104 to i1 (%class.SkWStream*, i8*, i64)***
  %107 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %106, align 8
  %108 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %107, i64 2
  %109 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %108, align 8
  %110 = call zeroext i1 %109(%class.SkWStream* %104, i8* %103, i64 %105) #12
  %111 = load i8, i8* %98, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %66
  %114 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %114) #14
  br label %115

115:                                              ; preds = %66, %113
  %116 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %115, %120
  %124 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #14
  br label %131

131:                                              ; preds = %123, %128
  %132 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #14
  br label %139

139:                                              ; preds = %131, %136
  %140 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %146) #14
  br label %147

147:                                              ; preds = %139, %144
  %148 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #14
  br label %155

155:                                              ; preds = %147, %152
  %156 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #14
  br label %163

163:                                              ; preds = %155, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  %164 = load i32, i32* %36, align 4
  %165 = icmp sgt i32 %164, 0
  br i1 %165, label %166, label %198

166:                                              ; preds = %163
  %167 = bitcast %"class.SkSL::String"* %16 to i8*
  %168 = bitcast %"class.SkSL::String"* %17 to i8*
  %169 = bitcast %"class.SkSL::String"* %18 to i8*
  %170 = bitcast %"class.SkSL::String"* %19 to i8*
  %171 = bitcast %"class.SkSL::String"* %20 to i8*
  %172 = bitcast %"class.SkSL::String"* %21 to i8*
  %173 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i32, i32* %33, align 8
  br label %192

192:                                              ; preds = %166, %219
  %193 = phi i32 [ %164, %166 ], [ %220, %219 ]
  %194 = phi i32 [ %191, %166 ], [ %221, %219 ]
  %195 = phi i32 [ 0, %166 ], [ %223, %219 ]
  %196 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), %166 ], [ %222, %219 ]
  %197 = icmp sgt i32 %194, 0
  br i1 %197, label %225, label %219

198:                                              ; preds = %219, %163
  %199 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %106, align 8
  %200 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %199, i64 2
  %201 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %200, align 8
  %202 = call zeroext i1 %201(%class.SkWStream* %104, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i64 4) #12
  %203 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %198
  %208 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %208) #14
  br label %209

209:                                              ; preds = %198, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #12
  %210 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  %215 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %215) #14
  br label %216

216:                                              ; preds = %209, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  br label %275

217:                                              ; preds = %271
  %218 = load i32, i32* %36, align 4
  br label %219

219:                                              ; preds = %217, %192
  %220 = phi i32 [ %193, %192 ], [ %218, %217 ]
  %221 = phi i32 [ %194, %192 ], [ %273, %217 ]
  %222 = phi i8* [ %196, %192 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), %217 ]
  %223 = add nuw nsw i32 %195, 1
  %224 = icmp slt i32 %223, %220
  br i1 %224, label %192, label %198

225:                                              ; preds = %192, %271
  %226 = phi i32 [ %272, %271 ], [ 0, %192 ]
  %227 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), %271 ], [ %196, %192 ]
  %228 = call i64 @strlen(i8* %227) #13
  %229 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %106, align 8
  %230 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %229, i64 2
  %231 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %230, align 8
  %232 = call zeroext i1 %231(%class.SkWStream* %104, i8* %227, i64 %228) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #12
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %20, i32 %226) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %20) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %18, %"class.SkSL::String"* nonnull %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #12
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %21, i32 %195) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::String"* nonnull %18, %"class.SkSL::String"* nonnull dereferenceable(24) %21) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12
  %233 = load i8, i8* %174, align 1
  %234 = icmp slt i8 %233, 0
  %235 = load i8*, i8** %175, align 8
  %236 = select i1 %234, i8* %235, i8* %167
  %237 = call i64 @strlen(i8* %236) #13
  %238 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %106, align 8
  %239 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %238, i64 2
  %240 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %239, align 8
  %241 = call zeroext i1 %240(%class.SkWStream* %104, i8* %236, i64 %237) #12
  %242 = load i8, i8* %174, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %225
  %245 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %245) #14
  br label %246

246:                                              ; preds = %225, %244
  %247 = load i8, i8* %177, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %246
  %250 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %250) #14
  br label %251

251:                                              ; preds = %246, %249
  %252 = load i8, i8* %180, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %251
  %255 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %255) #14
  br label %256

256:                                              ; preds = %251, %254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #12
  %257 = load i8, i8* %183, align 1
  %258 = icmp slt i8 %257, 0
  br i1 %258, label %259, label %261

259:                                              ; preds = %256
  %260 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %260) #14
  br label %261

261:                                              ; preds = %256, %259
  %262 = load i8, i8* %186, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %261
  %265 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %265) #14
  br label %266

266:                                              ; preds = %261, %264
  %267 = load i8, i8* %189, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %269, label %271

269:                                              ; preds = %266
  %270 = load i8*, i8** %190, align 8
  call void @_ZdlPv(i8* %270) #14
  br label %271

271:                                              ; preds = %266, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #12
  %272 = add nuw nsw i32 %226, 1
  %273 = load i32, i32* %33, align 8
  %274 = icmp slt i32 %272, %273
  br i1 %274, label %225, label %217

275:                                              ; preds = %216, %61
  %276 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %22, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  %277 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %277, i64 0, i32 1, i32 0
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  %281 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = select i1 %280, i8* %282, i8* %276
  %284 = load i8, i8* %283, align 1
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %314, label %286

286:                                              ; preds = %275
  %287 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %288 = load i8, i8* %287, align 8, !range !2
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %306, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %292 = load i32, i32* %291, align 4
  %293 = icmp sgt i32 %292, 0
  br i1 %293, label %294, label %306

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %296

296:                                              ; preds = %296, %294
  %297 = phi i32 [ 0, %294 ], [ %303, %296 ]
  %298 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %295, align 8
  %299 = bitcast %"class.SkSL::OutputStream"* %298 to void (%"class.SkSL::OutputStream"*, i8*)***
  %300 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %300, i64 2
  %302 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %301, align 8
  call void %302(%"class.SkSL::OutputStream"* %298, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %303 = add nuw nsw i32 %297, 1
  %304 = load i32, i32* %291, align 4
  %305 = icmp slt i32 %303, %304
  br i1 %305, label %296, label %306

306:                                              ; preds = %296, %290, %286
  %307 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %308 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %307, align 8
  %309 = bitcast %"class.SkSL::OutputStream"* %308 to void (%"class.SkSL::OutputStream"*, i8*)***
  %310 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %309, align 8
  %311 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %310, i64 2
  %312 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %311, align 8
  call void %312(%"class.SkSL::OutputStream"* %308, i8* %283) #12
  store i8 0, i8* %287, align 8
  %313 = load i8, i8* %278, align 1
  br label %314

314:                                              ; preds = %275, %306
  %315 = phi i8 [ %279, %275 ], [ %313, %306 ]
  %316 = icmp slt i8 %315, 0
  br i1 %316, label %317, label %319

317:                                              ; preds = %314
  %318 = load i8*, i8** %281, align 8
  call void @_ZdlPv(i8* %318) #14
  br label %319

319:                                              ; preds = %314, %317
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #12
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, i32 17)
  %320 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %321 = load i8, i8* %320, align 8, !range !2
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %339, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %325 = load i32, i32* %324, align 4
  %326 = icmp sgt i32 %325, 0
  br i1 %326, label %327, label %339

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %329

329:                                              ; preds = %329, %327
  %330 = phi i32 [ 0, %327 ], [ %336, %329 ]
  %331 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %328, align 8
  %332 = bitcast %"class.SkSL::OutputStream"* %331 to void (%"class.SkSL::OutputStream"*, i8*)***
  %333 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %332, align 8
  %334 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %333, i64 2
  %335 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %334, align 8
  call void %335(%"class.SkSL::OutputStream"* %331, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %336 = add nuw nsw i32 %330, 1
  %337 = load i32, i32* %324, align 4
  %338 = icmp slt i32 %336, %337
  br i1 %338, label %329, label %339

339:                                              ; preds = %329, %319, %323
  %340 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %341 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %340, align 8
  %342 = bitcast %"class.SkSL::OutputStream"* %341 to void (%"class.SkSL::OutputStream"*, i8*)***
  %343 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %342, align 8
  %344 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %343, i64 2
  %345 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %344, align 8
  call void %345(%"class.SkSL::OutputStream"* %341, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %320, align 8
  %346 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %347 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %346, i64 0, i32 1, i32 0
  %348 = load i8, i8* %347, align 1
  %349 = icmp slt i8 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %339
  %351 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %351) #14
  br label %352

352:                                              ; preds = %339, %350
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  ret void
}

declare dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"*, %"class.SkSL::Context"* dereferenceable(744), i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator17writeFunctionCallERKNS_12FunctionCallE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"struct.SkSL::StringFragment"*
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 1
  %19 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %19, i64 0, i32 7
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %982 [
    i32 0, label %22
    i32 8, label %135
    i32 18, label %242
    i32 17, label %277
    i32 35, label %277
    i32 16, label %346
    i32 32, label %362
    i32 33, label %476
    i32 40, label %565
    i32 39, label %579
    i32 53, label %593
    i32 67, label %636
    i32 74, label %725
    i32 73, label %779
    i32 84, label %966
  ]

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %24 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %24, i64 0, i32 2
  %26 = load %class.GrShaderCaps*, %class.GrShaderCaps** %25, align 8
  %27 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %26, i64 0, i32 2
  %28 = bitcast i56* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 137438953472
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %982, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %34 = bitcast i8* %33 to %"class.std::__1::unique_ptr.147"**
  %35 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %36, align 8
  %38 = bitcast %"class.SkSL::Expression"* %37 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %39 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %39, i64 3
  %41 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %40, align 8
  %42 = tail call dereferenceable(184) %"class.SkSL::Type"* %41(%"class.SkSL::Expression"* %37) #12
  %43 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %23, align 8
  %44 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %43, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %45 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %44, align 8
  %46 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %42, i64 0, i32 0, i32 1, i32 0
  %48 = bitcast i8** %47 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  store <2 x i64> %49, <2 x i64>* %11, align 16
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %45, i64 0, i32 0, i32 1, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %45, i64 0, i32 0, i32 1, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %12, i8* %51, i64 %53) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  br i1 %54, label %982, label %55

55:                                               ; preds = %32
  %56 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false)
  store i8 13, i8* %59, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0), i64 13, i1 false) #12
  %61 = getelementptr inbounds i8, i8* %56, i64 13
  store i8 0, i8* %61, align 1
  %62 = bitcast %"class.SkSL::String"* %13 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i32 [ 0, %74 ], [ %83, %76 ]
  %78 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %79 = bitcast %"class.SkSL::OutputStream"* %78 to void (%"class.SkSL::OutputStream"*, i8*)***
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, i64 2
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, align 8
  call void %82(%"class.SkSL::OutputStream"* %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %83 = add nuw nsw i32 %77, 1
  %84 = load i32, i32* %71, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %76, label %86

86:                                               ; preds = %76, %70, %66
  %87 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %87, align 8
  %89 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, align 8
  call void %92(%"class.SkSL::OutputStream"* %88, i8* nonnull %56) #12
  store i8 0, i8* %67, align 8
  br label %93

93:                                               ; preds = %55, %86
  %94 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %95 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %94, %"class.SkSL::String"* nonnull dereferenceable(24) %13) #12
  %96 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %97 = icmp eq %"class.std::__1::__tree_end_node"* %95, %96
  br i1 %97, label %98, label %129

98:                                               ; preds = %93
  %99 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %94, %"class.SkSL::String"* nonnull dereferenceable(24) %13, %"class.SkSL::String"* nonnull dereferenceable(24) %13) #12
  %100 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #12
  %101 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %13) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.61, i64 0, i64 0)) #12
  %102 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = select i1 %105, i8* %107, i8* %100
  %109 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1, i32 0
  %110 = call i64 @strlen(i8* %108) #13
  %111 = bitcast %class.SkWStream* %109 to i1 (%class.SkWStream*, i8*, i64)***
  %112 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %111, align 8
  %113 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %112, i64 2
  %114 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %113, align 8
  %115 = call zeroext i1 %114(%class.SkWStream* %109, i8* %108, i64 %110) #12
  %116 = load i8, i8* %103, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %98
  %119 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %98, %118
  %121 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #14
  br label %128

128:                                              ; preds = %120, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #12
  br label %129

129:                                              ; preds = %128, %93
  %130 = load i8, i8* %59, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %129, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  br label %1027

135:                                              ; preds = %2
  %136 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %137 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %136, align 8
  %138 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %137, i64 0, i32 2
  %139 = load %class.GrShaderCaps*, %class.GrShaderCaps** %138, align 8
  %140 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %139, i64 0, i32 2
  %141 = bitcast i56* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = and i64 %142, 67108864
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %982, label %145

145:                                              ; preds = %135
  %146 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %147 = bitcast i8* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 4294967294
  %150 = icmp eq i64 %149, 4
  br i1 %150, label %151, label %982

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %153 = bitcast i8* %152 to %"class.std::__1::unique_ptr.147"**
  %154 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %154, i64 1, i32 0, i32 0, i32 0
  %156 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %155, align 8
  %157 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %156, i64 0, i32 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 49
  br i1 %159, label %160, label %982

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %156, i64 1
  %162 = bitcast %"class.SkSL::Expression"* %161 to i32*
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 47
  br i1 %164, label %165, label %982

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %171 = load i32, i32* %170, align 4
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %185

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i32 [ 0, %173 ], [ %182, %175 ]
  %177 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %174, align 8
  %178 = bitcast %"class.SkSL::OutputStream"* %177 to void (%"class.SkSL::OutputStream"*, i8*)***
  %179 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %179, i64 2
  %181 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %180, align 8
  tail call void %181(%"class.SkSL::OutputStream"* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %182 = add nuw nsw i32 %176, 1
  %183 = load i32, i32* %170, align 4
  %184 = icmp slt i32 %182, %183
  br i1 %184, label %175, label %185

185:                                              ; preds = %175, %165, %169
  %186 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %187 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %186, align 8
  %188 = bitcast %"class.SkSL::OutputStream"* %187 to void (%"class.SkSL::OutputStream"*, i8*)***
  %189 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %189, i64 2
  %191 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, align 8
  tail call void %191(%"class.SkSL::OutputStream"* %187, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0)) #12
  store i8 0, i8* %166, align 8
  %192 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %153, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %193, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %194, i32 17)
  %195 = load i8, i8* %166, align 8, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %211, label %197

197:                                              ; preds = %185
  %198 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %199 = load i32, i32* %198, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %211

201:                                              ; preds = %197, %201
  %202 = phi i32 [ %208, %201 ], [ 0, %197 ]
  %203 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %186, align 8
  %204 = bitcast %"class.SkSL::OutputStream"* %203 to void (%"class.SkSL::OutputStream"*, i8*)***
  %205 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %205, i64 2
  %207 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %206, align 8
  tail call void %207(%"class.SkSL::OutputStream"* %203, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %208 = add nuw nsw i32 %202, 1
  %209 = load i32, i32* %198, align 4
  %210 = icmp slt i32 %208, %209
  br i1 %210, label %201, label %211

211:                                              ; preds = %201, %185, %197
  %212 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %186, align 8
  %213 = bitcast %"class.SkSL::OutputStream"* %212 to void (%"class.SkSL::OutputStream"*, i8*)***
  %214 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %214, i64 2
  %216 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %215, align 8
  tail call void %216(%"class.SkSL::OutputStream"* %212, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0)) #12
  store i8 0, i8* %166, align 8
  %217 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %156, i64 1, i32 0, i32 1
  %218 = bitcast i32* %217 to %"class.SkSL::Expression"**
  %219 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %218, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %219, i32 4)
  %220 = load i8, i8* %166, align 8, !range !2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %236, label %222

222:                                              ; preds = %211
  %223 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %224 = load i32, i32* %223, align 4
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %222, %226
  %227 = phi i32 [ %233, %226 ], [ 0, %222 ]
  %228 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %186, align 8
  %229 = bitcast %"class.SkSL::OutputStream"* %228 to void (%"class.SkSL::OutputStream"*, i8*)***
  %230 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %230, i64 2
  %232 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %231, align 8
  tail call void %232(%"class.SkSL::OutputStream"* %228, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %233 = add nuw nsw i32 %227, 1
  %234 = load i32, i32* %223, align 4
  %235 = icmp slt i32 %233, %234
  br i1 %235, label %226, label %236

236:                                              ; preds = %226, %211, %222
  %237 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %186, align 8
  %238 = bitcast %"class.SkSL::OutputStream"* %237 to void (%"class.SkSL::OutputStream"*, i8*)***
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %239, i64 2
  %241 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %240, align 8
  tail call void %241(%"class.SkSL::OutputStream"* %237, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %166, align 8
  br label %1158

242:                                              ; preds = %2
  %243 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %244 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %243, align 8
  %245 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %244, i64 0, i32 1, i32 0, i32 0, i32 0
  %246 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %245, align 8
  %247 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %246, i64 0, i32 1, i32 0
  %248 = load i8, i8* %247, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %277, label %250

250:                                              ; preds = %242
  %251 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %252 = load i8, i8* %251, align 8, !range !2
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %270, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %256 = load i32, i32* %255, align 4
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %258, label %270

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %260

260:                                              ; preds = %260, %258
  %261 = phi i32 [ 0, %258 ], [ %267, %260 ]
  %262 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %259, align 8
  %263 = bitcast %"class.SkSL::OutputStream"* %262 to void (%"class.SkSL::OutputStream"*, i8*)***
  %264 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %263, align 8
  %265 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %264, i64 2
  %266 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %265, align 8
  tail call void %266(%"class.SkSL::OutputStream"* %262, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %267 = add nuw nsw i32 %261, 1
  %268 = load i32, i32* %255, align 4
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %260, label %270

270:                                              ; preds = %260, %250, %254
  %271 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %272 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %271, align 8
  %273 = bitcast %"class.SkSL::OutputStream"* %272 to void (%"class.SkSL::OutputStream"*, i8*)***
  %274 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %273, align 8
  %275 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %274, i64 2
  %276 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %275, align 8
  tail call void %276(%"class.SkSL::OutputStream"* %272, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0)) #12
  store i8 0, i8* %251, align 8
  br label %277

277:                                              ; preds = %242, %270, %2, %2
  %278 = phi i8 [ 0, %2 ], [ 0, %2 ], [ 1, %270 ], [ 0, %242 ]
  %279 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 11
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %980

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %284 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %283, align 8
  %285 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %284, i64 0, i32 2
  %286 = load %class.GrShaderCaps*, %class.GrShaderCaps** %285, align 8
  %287 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %286, i64 0, i32 4
  %288 = load i8*, i8** %287, align 8
  %289 = icmp eq i8* %288, null
  br i1 %289, label %980, label %290

290:                                              ; preds = %282
  %291 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %291) #12
  %292 = tail call i64 @strlen(i8* nonnull %288) #12
  %293 = icmp ugt i64 %292, -17
  br i1 %293, label %294, label %296

294:                                              ; preds = %290
  %295 = bitcast %"class.SkSL::String"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %295) #15
  unreachable

296:                                              ; preds = %290
  %297 = icmp ult i64 %292, 23
  br i1 %297, label %307, label %298

298:                                              ; preds = %296
  %299 = add nuw i64 %292, 16
  %300 = and i64 %299, -16
  %301 = tail call i8* @_Znwm(i64 %300) #14
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %301, i8** %302, align 8
  %303 = or i64 %300, -9223372036854775808
  %304 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %292, i64* %305, align 8
  %306 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %312

307:                                              ; preds = %296
  %308 = trunc i64 %292 to i8
  %309 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  store i8 %308, i8* %310, align 1
  %311 = icmp eq i64 %292, 0
  br i1 %311, label %315, label %312

312:                                              ; preds = %307, %298
  %313 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %309, %307 ], [ %306, %298 ]
  %314 = phi i8* [ %291, %307 ], [ %301, %298 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %314, i8* nonnull align 1 %288, i64 %292, i1 false) #12
  br label %315

315:                                              ; preds = %307, %312
  %316 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %309, %307 ], [ %313, %312 ]
  %317 = phi i8* [ %291, %307 ], [ %314, %312 ]
  %318 = getelementptr inbounds i8, i8* %317, i64 %292
  store i8 0, i8* %318, align 1
  %319 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %320 = bitcast %class.SkWStream* %319 to i1 (%class.SkWStream*, i8*, i64)***
  %321 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %320, align 8
  %322 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %321, i64 2
  %323 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %322, align 8
  %324 = tail call zeroext i1 %323(%class.SkWStream* %319, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %325 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %316, i64 0, i32 1, i32 0
  %326 = load i8, i8* %325, align 1
  %327 = icmp slt i8 %326, 0
  %328 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load i8*, i8** %328, align 8
  %330 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %331 = load i64, i64* %330, align 8
  %332 = zext i8 %326 to i64
  %333 = select i1 %327, i8* %329, i8* %291
  %334 = select i1 %327, i64 %331, i64 %332
  %335 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %336 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %335, i8* %333, i64 %334) #12
  %337 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %320, align 8
  %338 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %337, i64 2
  %339 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %338, align 8
  %340 = call zeroext i1 %339(%class.SkWStream* %319, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  %341 = load i8, i8* %325, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %345

343:                                              ; preds = %315
  %344 = load i8*, i8** %328, align 8
  call void @_ZdlPv(i8* %344) #14
  br label %345

345:                                              ; preds = %315, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %291) #12
  store i8 1, i8* %279, align 8
  br label %980

346:                                              ; preds = %2
  %347 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %348 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %347, align 8
  %349 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %348, i64 0, i32 2
  %350 = load %class.GrShaderCaps*, %class.GrShaderCaps** %349, align 8
  %351 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %350, i64 0, i32 2
  %352 = bitcast i56* %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = and i64 %353, 4194304
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %982

356:                                              ; preds = %346
  %357 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %358 = bitcast i8* %357 to %"class.std::__1::unique_ptr.147"**
  %359 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %358, align 8
  %360 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %359, i64 0, i32 0, i32 0, i32 0
  %361 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %360, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator20writeDeterminantHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %361)
  br label %1158

362:                                              ; preds = %2
  %363 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %364 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %363, align 8
  %365 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %364, i64 0, i32 2
  %366 = load %class.GrShaderCaps*, %class.GrShaderCaps** %365, align 8
  %367 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %366, i64 0, i32 2
  %368 = bitcast i56* %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = and i64 %369, 2097152
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %982

372:                                              ; preds = %362
  %373 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %374 = load i8, i8* %373, align 8, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %392, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %378 = load i32, i32* %377, align 4
  %379 = icmp sgt i32 %378, 0
  br i1 %379, label %380, label %392

380:                                              ; preds = %376
  %381 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i32 [ 0, %380 ], [ %389, %382 ]
  %384 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %381, align 8
  %385 = bitcast %"class.SkSL::OutputStream"* %384 to void (%"class.SkSL::OutputStream"*, i8*)***
  %386 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %386, i64 2
  %388 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %387, align 8
  tail call void %388(%"class.SkSL::OutputStream"* %384, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %389 = add nuw nsw i32 %383, 1
  %390 = load i32, i32* %377, align 4
  %391 = icmp slt i32 %389, %390
  br i1 %391, label %382, label %392

392:                                              ; preds = %382, %372, %376
  %393 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %394 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %395 = bitcast %"class.SkSL::OutputStream"* %394 to void (%"class.SkSL::OutputStream"*, i8*)***
  %396 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %395, align 8
  %397 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %396, i64 2
  %398 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %397, align 8
  tail call void %398(%"class.SkSL::OutputStream"* %394, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0)) #12
  store i8 0, i8* %373, align 8
  %399 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %400 = bitcast i8* %399 to %"class.std::__1::unique_ptr.147"**
  %401 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %400, align 8
  %402 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %401, i64 0, i32 0, i32 0, i32 0
  %403 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %402, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %403, i32 17)
  %404 = load i8, i8* %373, align 8, !range !2
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %420, label %406

406:                                              ; preds = %392
  %407 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %408 = load i32, i32* %407, align 4
  %409 = icmp sgt i32 %408, 0
  br i1 %409, label %410, label %420

410:                                              ; preds = %406, %410
  %411 = phi i32 [ %417, %410 ], [ 0, %406 ]
  %412 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %413 = bitcast %"class.SkSL::OutputStream"* %412 to void (%"class.SkSL::OutputStream"*, i8*)***
  %414 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %413, align 8
  %415 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %414, i64 2
  %416 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %415, align 8
  tail call void %416(%"class.SkSL::OutputStream"* %412, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %417 = add nuw nsw i32 %411, 1
  %418 = load i32, i32* %407, align 4
  %419 = icmp slt i32 %417, %418
  br i1 %419, label %410, label %420

420:                                              ; preds = %410, %392, %406
  %421 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %422 = bitcast %"class.SkSL::OutputStream"* %421 to void (%"class.SkSL::OutputStream"*, i8*)***
  %423 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %422, align 8
  %424 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %423, i64 2
  %425 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %424, align 8
  tail call void %425(%"class.SkSL::OutputStream"* %421, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0)) #12
  store i8 0, i8* %373, align 8
  %426 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %400, align 8
  %427 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %426, i64 1, i32 0, i32 0, i32 0
  %428 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %427, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %428, i32 17)
  %429 = load i8, i8* %373, align 8, !range !2
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %445, label %431

431:                                              ; preds = %420
  %432 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %433 = load i32, i32* %432, align 4
  %434 = icmp sgt i32 %433, 0
  br i1 %434, label %435, label %445

435:                                              ; preds = %431, %435
  %436 = phi i32 [ %442, %435 ], [ 0, %431 ]
  %437 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %438 = bitcast %"class.SkSL::OutputStream"* %437 to void (%"class.SkSL::OutputStream"*, i8*)***
  %439 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %438, align 8
  %440 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %439, i64 2
  %441 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %440, align 8
  tail call void %441(%"class.SkSL::OutputStream"* %437, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %442 = add nuw nsw i32 %436, 1
  %443 = load i32, i32* %432, align 4
  %444 = icmp slt i32 %442, %443
  br i1 %444, label %435, label %445

445:                                              ; preds = %435, %420, %431
  %446 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %447 = bitcast %"class.SkSL::OutputStream"* %446 to void (%"class.SkSL::OutputStream"*, i8*)***
  %448 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %448, i64 2
  %450 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %449, align 8
  tail call void %450(%"class.SkSL::OutputStream"* %446, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0)) #12
  store i8 0, i8* %373, align 8
  %451 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %400, align 8
  %452 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %451, i64 2, i32 0, i32 0, i32 0
  %453 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %452, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %453, i32 17)
  %454 = load i8, i8* %373, align 8, !range !2
  %455 = icmp eq i8 %454, 0
  br i1 %455, label %470, label %456

456:                                              ; preds = %445
  %457 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %458 = load i32, i32* %457, align 4
  %459 = icmp sgt i32 %458, 0
  br i1 %459, label %460, label %470

460:                                              ; preds = %456, %460
  %461 = phi i32 [ %467, %460 ], [ 0, %456 ]
  %462 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %463 = bitcast %"class.SkSL::OutputStream"* %462 to void (%"class.SkSL::OutputStream"*, i8*)***
  %464 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %463, align 8
  %465 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %464, i64 2
  %466 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %465, align 8
  tail call void %466(%"class.SkSL::OutputStream"* %462, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %467 = add nuw nsw i32 %461, 1
  %468 = load i32, i32* %457, align 4
  %469 = icmp slt i32 %467, %468
  br i1 %469, label %460, label %470

470:                                              ; preds = %460, %445, %456
  %471 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %472 = bitcast %"class.SkSL::OutputStream"* %471 to void (%"class.SkSL::OutputStream"*, i8*)***
  %473 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %472, align 8
  %474 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %473, i64 2
  %475 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %474, align 8
  tail call void %475(%"class.SkSL::OutputStream"* %471, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #12
  store i8 0, i8* %373, align 8
  br label %1158

476:                                              ; preds = %2
  %477 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %478 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %477, align 8
  %479 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %478, i64 0, i32 2
  %480 = load %class.GrShaderCaps*, %class.GrShaderCaps** %479, align 8
  %481 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %480, i64 0, i32 2
  %482 = bitcast i56* %481 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = and i64 %483, 33554432
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %486, label %982

486:                                              ; preds = %476
  %487 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %488 = load i8, i8* %487, align 8, !range !2
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %506, label %490

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %492 = load i32, i32* %491, align 4
  %493 = icmp sgt i32 %492, 0
  br i1 %493, label %494, label %506

494:                                              ; preds = %490
  %495 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %496

496:                                              ; preds = %496, %494
  %497 = phi i32 [ 0, %494 ], [ %503, %496 ]
  %498 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %495, align 8
  %499 = bitcast %"class.SkSL::OutputStream"* %498 to void (%"class.SkSL::OutputStream"*, i8*)***
  %500 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %499, align 8
  %501 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %500, i64 2
  %502 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %501, align 8
  tail call void %502(%"class.SkSL::OutputStream"* %498, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %503 = add nuw nsw i32 %497, 1
  %504 = load i32, i32* %491, align 4
  %505 = icmp slt i32 %503, %504
  br i1 %505, label %496, label %506

506:                                              ; preds = %496, %486, %490
  %507 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %508 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %507, align 8
  %509 = bitcast %"class.SkSL::OutputStream"* %508 to void (%"class.SkSL::OutputStream"*, i8*)***
  %510 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %510, i64 2
  %512 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %511, align 8
  tail call void %512(%"class.SkSL::OutputStream"* %508, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i64 0, i64 0)) #12
  store i8 0, i8* %487, align 8
  %513 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %514 = bitcast i8* %513 to %"class.std::__1::unique_ptr.147"**
  %515 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %514, align 8
  %516 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %515, i64 0, i32 0, i32 0, i32 0
  %517 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %516, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %517, i32 17)
  %518 = load i8, i8* %487, align 8, !range !2
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %534, label %520

520:                                              ; preds = %506
  %521 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %522 = load i32, i32* %521, align 4
  %523 = icmp sgt i32 %522, 0
  br i1 %523, label %524, label %534

524:                                              ; preds = %520, %524
  %525 = phi i32 [ %531, %524 ], [ 0, %520 ]
  %526 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %507, align 8
  %527 = bitcast %"class.SkSL::OutputStream"* %526 to void (%"class.SkSL::OutputStream"*, i8*)***
  %528 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %527, align 8
  %529 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %528, i64 2
  %530 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %529, align 8
  tail call void %530(%"class.SkSL::OutputStream"* %526, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %531 = add nuw nsw i32 %525, 1
  %532 = load i32, i32* %521, align 4
  %533 = icmp slt i32 %531, %532
  br i1 %533, label %524, label %534

534:                                              ; preds = %524, %506, %520
  %535 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %507, align 8
  %536 = bitcast %"class.SkSL::OutputStream"* %535 to void (%"class.SkSL::OutputStream"*, i8*)***
  %537 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %536, align 8
  %538 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %537, i64 2
  %539 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %538, align 8
  tail call void %539(%"class.SkSL::OutputStream"* %535, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.68, i64 0, i64 0)) #12
  store i8 0, i8* %487, align 8
  %540 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %514, align 8
  %541 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %540, i64 0, i32 0, i32 0, i32 0
  %542 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %541, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %542, i32 17)
  %543 = load i8, i8* %487, align 8, !range !2
  %544 = icmp eq i8 %543, 0
  br i1 %544, label %559, label %545

545:                                              ; preds = %534
  %546 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %547 = load i32, i32* %546, align 4
  %548 = icmp sgt i32 %547, 0
  br i1 %548, label %549, label %559

549:                                              ; preds = %545, %549
  %550 = phi i32 [ %556, %549 ], [ 0, %545 ]
  %551 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %507, align 8
  %552 = bitcast %"class.SkSL::OutputStream"* %551 to void (%"class.SkSL::OutputStream"*, i8*)***
  %553 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %552, align 8
  %554 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %553, i64 2
  %555 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %554, align 8
  tail call void %555(%"class.SkSL::OutputStream"* %551, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %556 = add nuw nsw i32 %550, 1
  %557 = load i32, i32* %546, align 4
  %558 = icmp slt i32 %556, %557
  br i1 %558, label %549, label %559

559:                                              ; preds = %549, %534, %545
  %560 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %507, align 8
  %561 = bitcast %"class.SkSL::OutputStream"* %560 to void (%"class.SkSL::OutputStream"*, i8*)***
  %562 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %561, align 8
  %563 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %562, i64 2
  %564 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %563, align 8
  tail call void %564(%"class.SkSL::OutputStream"* %560, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0)) #12
  store i8 0, i8* %487, align 8
  br label %1158

565:                                              ; preds = %2
  %566 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %567 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %566, align 8
  %568 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %567, i64 0, i32 2
  %569 = load %class.GrShaderCaps*, %class.GrShaderCaps** %568, align 8
  %570 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %569, i64 0, i32 1
  %571 = load i32, i32* %570, align 4
  %572 = icmp slt i32 %571, 2
  br i1 %572, label %573, label %982

573:                                              ; preds = %565
  %574 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %575 = bitcast i8* %574 to %"class.std::__1::unique_ptr.147"**
  %576 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %575, align 8
  %577 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %576, i64 0, i32 0, i32 0, i32 0
  %578 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %577, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator16writeInverseHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %578)
  br label %1158

579:                                              ; preds = %2
  %580 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %581 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %580, align 8
  %582 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %581, i64 0, i32 2
  %583 = load %class.GrShaderCaps*, %class.GrShaderCaps** %582, align 8
  %584 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %583, i64 0, i32 1
  %585 = load i32, i32* %584, align 4
  %586 = icmp slt i32 %585, 1
  br i1 %586, label %587, label %982

587:                                              ; preds = %579
  %588 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %589 = bitcast i8* %588 to %"class.std::__1::unique_ptr.147"**
  %590 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %589, align 8
  %591 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %590, i64 0, i32 0, i32 0, i32 0
  %592 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %591, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator20writeInverseSqrtHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %592)
  br label %1158

593:                                              ; preds = %2
  %594 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %595 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %594, align 8
  %596 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %595, i64 0, i32 2
  %597 = load %class.GrShaderCaps*, %class.GrShaderCaps** %596, align 8
  %598 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %597, i64 0, i32 2
  %599 = bitcast i56* %598 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = and i64 %600, 16777216
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %603, label %982

603:                                              ; preds = %593
  %604 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %605 = bitcast i8* %604 to %"class.std::__1::unique_ptr.147"**
  %606 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %605, align 8
  %607 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %606, i64 0, i32 0, i32 0, i32 0
  %608 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %607, align 8
  %609 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %608, i64 0, i32 0, i32 2
  %610 = load i32, i32* %609, align 4
  %611 = icmp eq i32 %610, 47
  br i1 %611, label %612, label %622

612:                                              ; preds = %603
  %613 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %608, i64 1
  %614 = bitcast %"class.SkSL::Expression"* %613 to %"class.SkSL::FunctionDeclaration"**
  %615 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %614, align 8
  %616 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %615, i64 0, i32 7
  %617 = load i32, i32* %616, align 4
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %622

619:                                              ; preds = %612
  %620 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %606, i64 1, i32 0, i32 0, i32 0
  %621 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %620, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeMinAbsHackERNS_10ExpressionES2_(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %608, %"class.SkSL::Expression"* dereferenceable(24) %621)
  br label %1158

622:                                              ; preds = %603, %612
  %623 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %606, i64 1, i32 0, i32 0, i32 0
  %624 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %623, align 8
  %625 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %624, i64 0, i32 0, i32 2
  %626 = load i32, i32* %625, align 4
  %627 = icmp eq i32 %626, 47
  br i1 %627, label %628, label %982

628:                                              ; preds = %622
  %629 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %624, i64 1
  %630 = bitcast %"class.SkSL::Expression"* %629 to %"class.SkSL::FunctionDeclaration"**
  %631 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %630, align 8
  %632 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %631, i64 0, i32 7
  %633 = load i32, i32* %632, align 4
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %982

635:                                              ; preds = %628
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeMinAbsHackERNS_10ExpressionES2_(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %624, %"class.SkSL::Expression"* dereferenceable(24) %608)
  br label %1158

636:                                              ; preds = %2
  %637 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %638 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %637, align 8
  %639 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %638, i64 0, i32 2
  %640 = load %class.GrShaderCaps*, %class.GrShaderCaps** %639, align 8
  %641 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %640, i64 0, i32 2
  %642 = bitcast i56* %641 to i64*
  %643 = load i64, i64* %642, align 8
  %644 = and i64 %643, 549755813888
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %982, label %646

646:                                              ; preds = %636
  %647 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %648 = load i8, i8* %647, align 8, !range !2
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %666, label %650

650:                                              ; preds = %646
  %651 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %652 = load i32, i32* %651, align 4
  %653 = icmp sgt i32 %652, 0
  br i1 %653, label %654, label %666

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %656

656:                                              ; preds = %656, %654
  %657 = phi i32 [ 0, %654 ], [ %663, %656 ]
  %658 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %655, align 8
  %659 = bitcast %"class.SkSL::OutputStream"* %658 to void (%"class.SkSL::OutputStream"*, i8*)***
  %660 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %659, align 8
  %661 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %660, i64 2
  %662 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %661, align 8
  tail call void %662(%"class.SkSL::OutputStream"* %658, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %663 = add nuw nsw i32 %657, 1
  %664 = load i32, i32* %651, align 4
  %665 = icmp slt i32 %663, %664
  br i1 %665, label %656, label %666

666:                                              ; preds = %656, %646, %650
  %667 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %668 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %667, align 8
  %669 = bitcast %"class.SkSL::OutputStream"* %668 to void (%"class.SkSL::OutputStream"*, i8*)***
  %670 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %669, align 8
  %671 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %670, i64 2
  %672 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %671, align 8
  tail call void %672(%"class.SkSL::OutputStream"* %668, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)) #12
  store i8 0, i8* %647, align 8
  %673 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %674 = bitcast i8* %673 to %"class.std::__1::unique_ptr.147"**
  %675 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %674, align 8
  %676 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %675, i64 1, i32 0, i32 0, i32 0
  %677 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %676, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %677, i32 4)
  %678 = load i8, i8* %647, align 8, !range !2
  %679 = icmp eq i8 %678, 0
  br i1 %679, label %694, label %680

680:                                              ; preds = %666
  %681 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %682 = load i32, i32* %681, align 4
  %683 = icmp sgt i32 %682, 0
  br i1 %683, label %684, label %694

684:                                              ; preds = %680, %684
  %685 = phi i32 [ %691, %684 ], [ 0, %680 ]
  %686 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %667, align 8
  %687 = bitcast %"class.SkSL::OutputStream"* %686 to void (%"class.SkSL::OutputStream"*, i8*)***
  %688 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %687, align 8
  %689 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %688, i64 2
  %690 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %689, align 8
  tail call void %690(%"class.SkSL::OutputStream"* %686, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %691 = add nuw nsw i32 %685, 1
  %692 = load i32, i32* %681, align 4
  %693 = icmp slt i32 %691, %692
  br i1 %693, label %684, label %694

694:                                              ; preds = %684, %666, %680
  %695 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %667, align 8
  %696 = bitcast %"class.SkSL::OutputStream"* %695 to void (%"class.SkSL::OutputStream"*, i8*)***
  %697 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %696, align 8
  %698 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %697, i64 2
  %699 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %698, align 8
  tail call void %699(%"class.SkSL::OutputStream"* %695, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0)) #12
  store i8 0, i8* %647, align 8
  %700 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %674, align 8
  %701 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %700, i64 0, i32 0, i32 0, i32 0
  %702 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %701, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %702, i32 17)
  %703 = load i8, i8* %647, align 8, !range !2
  %704 = icmp eq i8 %703, 0
  br i1 %704, label %719, label %705

705:                                              ; preds = %694
  %706 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %707 = load i32, i32* %706, align 4
  %708 = icmp sgt i32 %707, 0
  br i1 %708, label %709, label %719

709:                                              ; preds = %705, %709
  %710 = phi i32 [ %716, %709 ], [ 0, %705 ]
  %711 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %667, align 8
  %712 = bitcast %"class.SkSL::OutputStream"* %711 to void (%"class.SkSL::OutputStream"*, i8*)***
  %713 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %712, align 8
  %714 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %713, i64 2
  %715 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %714, align 8
  tail call void %715(%"class.SkSL::OutputStream"* %711, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %716 = add nuw nsw i32 %710, 1
  %717 = load i32, i32* %706, align 4
  %718 = icmp slt i32 %716, %717
  br i1 %718, label %709, label %719

719:                                              ; preds = %709, %694, %705
  %720 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %667, align 8
  %721 = bitcast %"class.SkSL::OutputStream"* %720 to void (%"class.SkSL::OutputStream"*, i8*)***
  %722 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %721, align 8
  %723 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %722, i64 2
  %724 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %723, align 8
  tail call void %724(%"class.SkSL::OutputStream"* %720, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #12
  store i8 0, i8* %647, align 8
  br label %1158

725:                                              ; preds = %2
  %726 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %727 = load i8, i8* %726, align 8, !range !2
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %745, label %729

729:                                              ; preds = %725
  %730 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %731 = load i32, i32* %730, align 4
  %732 = icmp sgt i32 %731, 0
  br i1 %732, label %733, label %745

733:                                              ; preds = %729
  %734 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %735

735:                                              ; preds = %735, %733
  %736 = phi i32 [ 0, %733 ], [ %742, %735 ]
  %737 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %734, align 8
  %738 = bitcast %"class.SkSL::OutputStream"* %737 to void (%"class.SkSL::OutputStream"*, i8*)***
  %739 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %738, align 8
  %740 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %739, i64 2
  %741 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %740, align 8
  tail call void %741(%"class.SkSL::OutputStream"* %737, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %742 = add nuw nsw i32 %736, 1
  %743 = load i32, i32* %730, align 4
  %744 = icmp slt i32 %742, %743
  br i1 %744, label %735, label %745

745:                                              ; preds = %735, %725, %729
  %746 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %747 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %746, align 8
  %748 = bitcast %"class.SkSL::OutputStream"* %747 to void (%"class.SkSL::OutputStream"*, i8*)***
  %749 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %748, align 8
  %750 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %749, i64 2
  %751 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %750, align 8
  tail call void %751(%"class.SkSL::OutputStream"* %747, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0)) #12
  store i8 0, i8* %726, align 8
  %752 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %753 = bitcast i8* %752 to %"class.std::__1::unique_ptr.147"**
  %754 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %753, align 8
  %755 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %754, i64 0, i32 0, i32 0, i32 0
  %756 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %755, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %756, i32 17)
  %757 = load i8, i8* %726, align 8, !range !2
  %758 = icmp eq i8 %757, 0
  br i1 %758, label %773, label %759

759:                                              ; preds = %745
  %760 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %761 = load i32, i32* %760, align 4
  %762 = icmp sgt i32 %761, 0
  br i1 %762, label %763, label %773

763:                                              ; preds = %759, %763
  %764 = phi i32 [ %770, %763 ], [ 0, %759 ]
  %765 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %746, align 8
  %766 = bitcast %"class.SkSL::OutputStream"* %765 to void (%"class.SkSL::OutputStream"*, i8*)***
  %767 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %766, align 8
  %768 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %767, i64 2
  %769 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %768, align 8
  tail call void %769(%"class.SkSL::OutputStream"* %765, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %770 = add nuw nsw i32 %764, 1
  %771 = load i32, i32* %760, align 4
  %772 = icmp slt i32 %770, %771
  br i1 %772, label %763, label %773

773:                                              ; preds = %763, %745, %759
  %774 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %746, align 8
  %775 = bitcast %"class.SkSL::OutputStream"* %774 to void (%"class.SkSL::OutputStream"*, i8*)***
  %776 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %775, align 8
  %777 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %776, i64 2
  %778 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %777, align 8
  tail call void %778(%"class.SkSL::OutputStream"* %774, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i64 0, i64 0)) #12
  store i8 0, i8* %726, align 8
  br label %1158

779:                                              ; preds = %2
  %780 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %781 = bitcast i8* %780 to %"class.std::__1::unique_ptr.147"**
  %782 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %781, align 8
  %783 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %782, i64 0, i32 0, i32 0, i32 0
  %784 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %783, align 8
  %785 = bitcast %"class.SkSL::Expression"* %784 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %786 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %785, align 8
  %787 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %786, i64 3
  %788 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %787, align 8
  %789 = tail call dereferenceable(184) %"class.SkSL::Type"* %788(%"class.SkSL::Expression"* %784) #12
  %790 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %781, align 8
  %791 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %790, i64 1, i32 0, i32 0, i32 0
  %792 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %791, align 8
  %793 = bitcast %"class.SkSL::Expression"* %792 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %794 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %793, align 8
  %795 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %794, i64 3
  %796 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %795, align 8
  %797 = tail call dereferenceable(184) %"class.SkSL::Type"* %796(%"class.SkSL::Expression"* %792) #12
  %798 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %789, i64 0, i32 11
  %799 = load i32, i32* %798, align 8
  switch i32 %799, label %862 [
    i32 0, label %800
    i32 1, label %815
    i32 2, label %843
    i32 3, label %858
    i32 4, label %859
    i32 5, label %860
    i32 6, label %861
  ]

800:                                              ; preds = %779
  %801 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %802 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %801, align 8
  %803 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %802, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %804 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %803, align 8
  %805 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %805) #12
  %806 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %797, i64 0, i32 0, i32 1, i32 0
  %807 = bitcast i8** %806 to <2 x i64>*
  %808 = load <2 x i64>, <2 x i64>* %807, align 8
  store <2 x i64> %808, <2 x i64>* %3, align 16
  %809 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %804, i64 0, i32 0, i32 1, i32 0
  %810 = load i8*, i8** %809, align 8
  %811 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %804, i64 0, i32 0, i32 1, i32 1
  %812 = load i64, i64* %811, align 8
  %813 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %810, i64 %812) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %805) #12
  %814 = xor i1 %813, true
  br label %862

815:                                              ; preds = %779
  %816 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %817 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %816, align 8
  %818 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %817, i64 0, i32 0, i32 60, i32 0, i32 0, i32 0
  %819 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %818, align 8
  %820 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %820) #12
  %821 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %789, i64 0, i32 0, i32 1, i32 0
  %822 = bitcast i8** %821 to <2 x i64>*
  %823 = load <2 x i64>, <2 x i64>* %822, align 8
  store <2 x i64> %823, <2 x i64>* %5, align 16
  %824 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %819, i64 0, i32 0, i32 1, i32 0
  %825 = load i8*, i8** %824, align 8
  %826 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %819, i64 0, i32 0, i32 1, i32 1
  %827 = load i64, i64* %826, align 8
  %828 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %825, i64 %827) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %820) #12
  %829 = zext i1 %828 to i8
  %830 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %816, align 8
  %831 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %830, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %832 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %831, align 8
  %833 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %833) #12
  %834 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %797, i64 0, i32 0, i32 1, i32 0
  %835 = bitcast i8** %834 to <2 x i64>*
  %836 = load <2 x i64>, <2 x i64>* %835, align 8
  store <2 x i64> %836, <2 x i64>* %7, align 16
  %837 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %832, i64 0, i32 0, i32 1, i32 0
  %838 = load i8*, i8** %837, align 8
  %839 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %832, i64 0, i32 0, i32 1, i32 1
  %840 = load i64, i64* %839, align 8
  %841 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %838, i64 %840) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %833) #12
  %842 = xor i1 %841, true
  br label %862

843:                                              ; preds = %779
  %844 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %845 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %844, align 8
  %846 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %845, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %847 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %846, align 8
  %848 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %848) #12
  %849 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %797, i64 0, i32 0, i32 1, i32 0
  %850 = bitcast i8** %849 to <2 x i64>*
  %851 = load <2 x i64>, <2 x i64>* %850, align 8
  store <2 x i64> %851, <2 x i64>* %9, align 16
  %852 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %847, i64 0, i32 0, i32 1, i32 0
  %853 = load i8*, i8** %852, align 8
  %854 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %847, i64 0, i32 0, i32 1, i32 1
  %855 = load i64, i64* %854, align 8
  %856 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %10, i8* %853, i64 %855) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %848) #12
  %857 = xor i1 %856, true
  br label %862

858:                                              ; preds = %779
  br label %862

859:                                              ; preds = %779
  br label %862

860:                                              ; preds = %779
  br label %862

861:                                              ; preds = %779
  br label %862

862:                                              ; preds = %815, %843, %800, %779, %861, %860, %859, %858
  %863 = phi i8 [ 0, %779 ], [ 0, %861 ], [ 0, %860 ], [ 0, %859 ], [ 1, %858 ], [ 1, %800 ], [ 1, %843 ], [ %829, %815 ]
  %864 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), %779 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.80, i64 0, i64 0), %861 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i64 0, i64 0), %860 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0), %859 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), %858 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), %800 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i64 0, i64 0), %843 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i64 0, i64 0), %815 ]
  %865 = phi i1 [ false, %779 ], [ false, %861 ], [ false, %860 ], [ false, %859 ], [ false, %858 ], [ %814, %800 ], [ %857, %843 ], [ %842, %815 ]
  %866 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 18, i32 0
  %867 = bitcast %"class.std::__1::basic_string"* %866 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %868 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %867, i64 0, i32 1, i32 0
  %869 = load i8, i8* %868, align 1
  %870 = icmp slt i8 %869, 0
  br i1 %870, label %871, label %874

871:                                              ; preds = %862
  %872 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %873 = load i64, i64* %872, align 8
  br label %876

874:                                              ; preds = %862
  %875 = zext i8 %869 to i64
  br label %876

876:                                              ; preds = %871, %874
  %877 = phi i64 [ %873, %871 ], [ %875, %874 ]
  %878 = icmp eq i64 %877, 0
  br i1 %878, label %916, label %879

879:                                              ; preds = %876
  br i1 %870, label %880, label %883

880:                                              ; preds = %879
  %881 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %866, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %882 = load i8*, i8** %881, align 8
  br label %885

883:                                              ; preds = %879
  %884 = bitcast %"class.std::__1::basic_string"* %866 to i8*
  br label %885

885:                                              ; preds = %880, %883
  %886 = phi i8* [ %882, %880 ], [ %884, %883 ]
  %887 = load i8, i8* %886, align 1
  %888 = icmp eq i8 %887, 0
  br i1 %888, label %1027, label %889

889:                                              ; preds = %885
  %890 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %891 = load i8, i8* %890, align 8, !range !2
  %892 = icmp eq i8 %891, 0
  br i1 %892, label %909, label %893

893:                                              ; preds = %889
  %894 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %895 = load i32, i32* %894, align 4
  %896 = icmp sgt i32 %895, 0
  br i1 %896, label %897, label %909

897:                                              ; preds = %893
  %898 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %899

899:                                              ; preds = %899, %897
  %900 = phi i32 [ 0, %897 ], [ %906, %899 ]
  %901 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %898, align 8
  %902 = bitcast %"class.SkSL::OutputStream"* %901 to void (%"class.SkSL::OutputStream"*, i8*)***
  %903 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %902, align 8
  %904 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %903, i64 2
  %905 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %904, align 8
  call void %905(%"class.SkSL::OutputStream"* %901, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %906 = add nuw nsw i32 %900, 1
  %907 = load i32, i32* %894, align 4
  %908 = icmp slt i32 %906, %907
  br i1 %908, label %899, label %909

909:                                              ; preds = %899, %893, %889
  %910 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %911 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %910, align 8
  %912 = bitcast %"class.SkSL::OutputStream"* %911 to void (%"class.SkSL::OutputStream"*, i8*)***
  %913 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %912, align 8
  %914 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %913, i64 2
  %915 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %914, align 8
  call void %915(%"class.SkSL::OutputStream"* %911, i8* %886) #12
  store i8 0, i8* %890, align 8
  br label %1027

916:                                              ; preds = %876
  %917 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %918 = load i8, i8* %917, align 8, !range !2
  %919 = icmp eq i8 %918, 0
  br i1 %919, label %936, label %920

920:                                              ; preds = %916
  %921 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %922 = load i32, i32* %921, align 4
  %923 = icmp sgt i32 %922, 0
  br i1 %923, label %924, label %936

924:                                              ; preds = %920
  %925 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %926

926:                                              ; preds = %926, %924
  %927 = phi i32 [ 0, %924 ], [ %933, %926 ]
  %928 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %925, align 8
  %929 = bitcast %"class.SkSL::OutputStream"* %928 to void (%"class.SkSL::OutputStream"*, i8*)***
  %930 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %929, align 8
  %931 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %930, i64 2
  %932 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %931, align 8
  call void %932(%"class.SkSL::OutputStream"* %928, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %933 = add nuw nsw i32 %927, 1
  %934 = load i32, i32* %921, align 4
  %935 = icmp slt i32 %933, %934
  br i1 %935, label %926, label %936

936:                                              ; preds = %926, %916, %920
  %937 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %938 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %937, align 8
  %939 = bitcast %"class.SkSL::OutputStream"* %938 to void (%"class.SkSL::OutputStream"*, i8*)***
  %940 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %939, align 8
  %941 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %940, i64 2
  %942 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %941, align 8
  call void %942(%"class.SkSL::OutputStream"* %938, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0)) #12
  store i8 0, i8* %917, align 8
  %943 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %944 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %943, align 8
  %945 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %944, i64 0, i32 2
  %946 = load %class.GrShaderCaps*, %class.GrShaderCaps** %945, align 8
  %947 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %946, i64 0, i32 1
  %948 = load i32, i32* %947, align 4
  %949 = icmp slt i32 %948, 1
  br i1 %949, label %950, label %959

950:                                              ; preds = %936
  %951 = load i8, i8* %864, align 1
  %952 = icmp eq i8 %951, 0
  br i1 %952, label %959, label %953

953:                                              ; preds = %950
  %954 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %937, align 8
  %955 = bitcast %"class.SkSL::OutputStream"* %954 to void (%"class.SkSL::OutputStream"*, i8*)***
  %956 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %955, align 8
  %957 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %956, i64 2
  %958 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %957, align 8
  call void %958(%"class.SkSL::OutputStream"* %954, i8* %864) #12
  store i8 0, i8* %917, align 8
  br label %959

959:                                              ; preds = %953, %950, %936
  br i1 %865, label %960, label %1027

960:                                              ; preds = %959
  %961 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %937, align 8
  %962 = bitcast %"class.SkSL::OutputStream"* %961 to void (%"class.SkSL::OutputStream"*, i8*)***
  %963 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %962, align 8
  %964 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %963, i64 2
  %965 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %964, align 8
  call void %965(%"class.SkSL::OutputStream"* %961, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0)) #12
  store i8 0, i8* %917, align 8
  br label %1027

966:                                              ; preds = %2
  %967 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %968 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %967, align 8
  %969 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %968, i64 0, i32 2
  %970 = load %class.GrShaderCaps*, %class.GrShaderCaps** %969, align 8
  %971 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %970, i64 0, i32 1
  %972 = load i32, i32* %971, align 4
  %973 = icmp slt i32 %972, 1
  br i1 %973, label %974, label %982

974:                                              ; preds = %966
  %975 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %976 = bitcast i8* %975 to %"class.std::__1::unique_ptr.147"**
  %977 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %976, align 8
  %978 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %977, i64 0, i32 0, i32 0, i32 0
  %979 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %978, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator18writeTransposeHackERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %979)
  br label %1158

980:                                              ; preds = %282, %277, %345
  %981 = icmp eq i8 %278, 0
  br i1 %981, label %982, label %1027

982:                                              ; preds = %22, %135, %346, %362, %476, %593, %636, %622, %160, %32, %145, %151, %565, %579, %628, %966, %2, %980
  %983 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %983) #12
  call void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::FunctionDeclaration"* %19) #12
  %984 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %985 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %984, i64 0, i32 1, i32 0
  %986 = load i8, i8* %985, align 1
  %987 = icmp slt i8 %986, 0
  %988 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %989 = load i8*, i8** %988, align 8
  %990 = select i1 %987, i8* %989, i8* %983
  %991 = load i8, i8* %990, align 1
  %992 = icmp eq i8 %991, 0
  br i1 %992, label %1021, label %993

993:                                              ; preds = %982
  %994 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %995 = load i8, i8* %994, align 8, !range !2
  %996 = icmp eq i8 %995, 0
  br i1 %996, label %1013, label %997

997:                                              ; preds = %993
  %998 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %999 = load i32, i32* %998, align 4
  %1000 = icmp sgt i32 %999, 0
  br i1 %1000, label %1001, label %1013

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1003

1003:                                             ; preds = %1003, %1001
  %1004 = phi i32 [ 0, %1001 ], [ %1010, %1003 ]
  %1005 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1002, align 8
  %1006 = bitcast %"class.SkSL::OutputStream"* %1005 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1007 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1006, align 8
  %1008 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1007, i64 2
  %1009 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1008, align 8
  call void %1009(%"class.SkSL::OutputStream"* %1005, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %1010 = add nuw nsw i32 %1004, 1
  %1011 = load i32, i32* %998, align 4
  %1012 = icmp slt i32 %1010, %1011
  br i1 %1012, label %1003, label %1013

1013:                                             ; preds = %1003, %997, %993
  %1014 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1015 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1014, align 8
  %1016 = bitcast %"class.SkSL::OutputStream"* %1015 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1017 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1016, align 8
  %1018 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1017, i64 2
  %1019 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1018, align 8
  call void %1019(%"class.SkSL::OutputStream"* %1015, i8* %990) #12
  store i8 0, i8* %994, align 8
  %1020 = load i8, i8* %985, align 1
  br label %1021

1021:                                             ; preds = %982, %1013
  %1022 = phi i8 [ %986, %982 ], [ %1020, %1013 ]
  %1023 = icmp slt i8 %1022, 0
  br i1 %1023, label %1024, label %1026

1024:                                             ; preds = %1021
  %1025 = load i8*, i8** %988, align 8
  call void @_ZdlPv(i8* %1025) #14
  br label %1026

1026:                                             ; preds = %1021, %1024
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %983) #12
  br label %1027

1027:                                             ; preds = %909, %885, %960, %959, %134, %980, %1026
  %1028 = phi i8 [ 0, %980 ], [ 0, %1026 ], [ %863, %909 ], [ %863, %885 ], [ %863, %960 ], [ %863, %959 ], [ 0, %134 ]
  %1029 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %1030 = load i8, i8* %1029, align 8, !range !2
  %1031 = icmp eq i8 %1030, 0
  br i1 %1031, label %1048, label %1032

1032:                                             ; preds = %1027
  %1033 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %1034 = load i32, i32* %1033, align 4
  %1035 = icmp sgt i32 %1034, 0
  br i1 %1035, label %1036, label %1048

1036:                                             ; preds = %1032
  %1037 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1038

1038:                                             ; preds = %1038, %1036
  %1039 = phi i32 [ 0, %1036 ], [ %1045, %1038 ]
  %1040 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1037, align 8
  %1041 = bitcast %"class.SkSL::OutputStream"* %1040 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1042 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1041, align 8
  %1043 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1042, i64 2
  %1044 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1043, align 8
  call void %1044(%"class.SkSL::OutputStream"* %1040, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %1045 = add nuw nsw i32 %1039, 1
  %1046 = load i32, i32* %1033, align 4
  %1047 = icmp slt i32 %1045, %1046
  br i1 %1047, label %1038, label %1048

1048:                                             ; preds = %1038, %1027, %1032
  %1049 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1050 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1049, align 8
  %1051 = bitcast %"class.SkSL::OutputStream"* %1050 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1052 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1051, align 8
  %1053 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1052, i64 2
  %1054 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1053, align 8
  call void %1054(%"class.SkSL::OutputStream"* %1050, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %1029, align 8
  %1055 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1056 = bitcast i8* %1055 to %"class.std::__1::unique_ptr.147"**
  %1057 = load %"class.std::__1::unique_ptr.147"*, %"class.std::__1::unique_ptr.147"** %1056, align 8
  %1058 = icmp eq %"class.std::__1::unique_ptr.147"* %1057, null
  br i1 %1058, label %1072, label %1059

1059:                                             ; preds = %1048
  %1060 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %1061 = bitcast i8* %1060 to i64*
  %1062 = load i64, i64* %1061, align 8
  %1063 = lshr i64 %1062, 1
  %1064 = and i64 %1063, 2147483647
  %1065 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %1057, i64 %1064
  %1066 = icmp eq i64 %1064, 0
  br i1 %1066, label %1072, label %1067

1067:                                             ; preds = %1059
  %1068 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  br label %1084

1069:                                             ; preds = %1111
  %1070 = load i8, i8* %1029, align 8
  %1071 = icmp eq i8 %1070, 0
  br label %1072

1072:                                             ; preds = %1048, %1069, %1059
  %1073 = phi i1 [ %1071, %1069 ], [ true, %1059 ], [ true, %1048 ]
  %1074 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %1075 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %1074, align 8
  %1076 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1075, i64 0, i32 1, i32 0, i32 0, i32 0
  %1077 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %1076, align 8
  %1078 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %1077, i64 0, i32 1, i32 4
  %1079 = load i8, i8* %1078, align 4, !range !2
  %1080 = icmp eq i8 %1079, 0
  %1081 = and i8 %1028, 1
  %1082 = icmp eq i8 %1081, 0
  %1083 = or i1 %1082, %1080
  br i1 %1083, label %1137, label %1116

1084:                                             ; preds = %1067, %1111
  %1085 = phi %"class.std::__1::unique_ptr.147"* [ %1057, %1067 ], [ %1114, %1111 ]
  %1086 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), %1067 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), %1111 ]
  %1087 = load i8, i8* %1086, align 1
  %1088 = icmp eq i8 %1087, 0
  br i1 %1088, label %1111, label %1089

1089:                                             ; preds = %1084
  %1090 = load i8, i8* %1029, align 8, !range !2
  %1091 = icmp eq i8 %1090, 0
  br i1 %1091, label %1105, label %1092

1092:                                             ; preds = %1089
  %1093 = load i32, i32* %1068, align 4
  %1094 = icmp sgt i32 %1093, 0
  br i1 %1094, label %1095, label %1105

1095:                                             ; preds = %1092, %1095
  %1096 = phi i32 [ %1102, %1095 ], [ 0, %1092 ]
  %1097 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1049, align 8
  %1098 = bitcast %"class.SkSL::OutputStream"* %1097 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1099 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1098, align 8
  %1100 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1099, i64 2
  %1101 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1100, align 8
  call void %1101(%"class.SkSL::OutputStream"* %1097, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %1102 = add nuw nsw i32 %1096, 1
  %1103 = load i32, i32* %1068, align 4
  %1104 = icmp slt i32 %1102, %1103
  br i1 %1104, label %1095, label %1105

1105:                                             ; preds = %1095, %1092, %1089
  %1106 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1049, align 8
  %1107 = bitcast %"class.SkSL::OutputStream"* %1106 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1108 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1107, align 8
  %1109 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1108, i64 2
  %1110 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1109, align 8
  call void %1110(%"class.SkSL::OutputStream"* %1106, i8* %1086) #12
  store i8 0, i8* %1029, align 8
  br label %1111

1111:                                             ; preds = %1084, %1105
  %1112 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %1085, i64 0, i32 0, i32 0, i32 0
  %1113 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1112, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1113, i32 17)
  %1114 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %1085, i64 1
  %1115 = icmp eq %"class.std::__1::unique_ptr.147"* %1114, %1065
  br i1 %1115, label %1069, label %1084

1116:                                             ; preds = %1072
  br i1 %1073, label %1131, label %1117

1117:                                             ; preds = %1116
  %1118 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %1119 = load i32, i32* %1118, align 4
  %1120 = icmp sgt i32 %1119, 0
  br i1 %1120, label %1121, label %1131

1121:                                             ; preds = %1117, %1121
  %1122 = phi i32 [ %1128, %1121 ], [ 0, %1117 ]
  %1123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1049, align 8
  %1124 = bitcast %"class.SkSL::OutputStream"* %1123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1124, align 8
  %1126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1125, i64 2
  %1127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1126, align 8
  call void %1127(%"class.SkSL::OutputStream"* %1123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %1128 = add nuw nsw i32 %1122, 1
  %1129 = load i32, i32* %1118, align 4
  %1130 = icmp slt i32 %1128, %1129
  br i1 %1130, label %1121, label %1131

1131:                                             ; preds = %1121, %1117, %1116
  %1132 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1049, align 8
  %1133 = bitcast %"class.SkSL::OutputStream"* %1132 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1134 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1133, align 8
  %1135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1134, i64 2
  %1136 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1135, align 8
  call void %1136(%"class.SkSL::OutputStream"* %1132, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i64 0, i64 0)) #12
  store i8 0, i8* %1029, align 8
  br label %1152

1137:                                             ; preds = %1072
  br i1 %1073, label %1152, label %1138

1138:                                             ; preds = %1137
  %1139 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %1140 = load i32, i32* %1139, align 4
  %1141 = icmp sgt i32 %1140, 0
  br i1 %1141, label %1142, label %1152

1142:                                             ; preds = %1138, %1142
  %1143 = phi i32 [ %1149, %1142 ], [ 0, %1138 ]
  %1144 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1049, align 8
  %1145 = bitcast %"class.SkSL::OutputStream"* %1144 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1146 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1145, align 8
  %1147 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1146, i64 2
  %1148 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1147, align 8
  call void %1148(%"class.SkSL::OutputStream"* %1144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %1149 = add nuw nsw i32 %1143, 1
  %1150 = load i32, i32* %1139, align 4
  %1151 = icmp slt i32 %1149, %1150
  br i1 %1151, label %1142, label %1152

1152:                                             ; preds = %1142, %1131, %1137, %1138
  %1153 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1049, align 8
  %1154 = bitcast %"class.SkSL::OutputStream"* %1153 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1155 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1154, align 8
  %1156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1155, i64 2
  %1157 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1156, align 8
  call void %1157(%"class.SkSL::OutputStream"* %1153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %1029, align 8
  br label %1158

1158:                                             ; preds = %236, %1152, %974, %773, %719, %635, %619, %587, %573, %559, %470, %356
  ret void
}

declare void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator20writeCastConstructorERKNS_14AnyConstructorENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), i32) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %8 = load { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %7, align 8
  %9 = getelementptr inbounds { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)** %8, i64 12
  %10 = load { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)** %9, align 8
  %11 = tail call { %"class.std::__1::unique_ptr.147"*, i64 } %10(%"class.SkSL::AnyConstructor"* %1) #12
  %12 = extractvalue { %"class.std::__1::unique_ptr.147"*, i64 } %11, 0
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %13, align 8
  %15 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %17 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %18 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %18, i64 3
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call dereferenceable(184) %"class.SkSL::Type"* %20(%"class.SkSL::Expression"* %16) #12
  %22 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %23 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %23, i64 5
  %25 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %24, align 8
  call void %25(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %21) #12
  %26 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = bitcast %"class.SkSL::Expression"* %14 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %28 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %28, i64 3
  %30 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %29, align 8
  %31 = call dereferenceable(184) %"class.SkSL::Type"* %30(%"class.SkSL::Expression"* %14) #12
  %32 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %22, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %32, i64 5
  %34 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %33, align 8
  call void %34(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31) #12
  %35 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* nonnull %5, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  br i1 %35, label %71, label %36

36:                                               ; preds = %3
  %37 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %38 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %27, align 8
  %39 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %38, i64 3
  %40 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %39, align 8
  %41 = call dereferenceable(184) %"class.SkSL::Type"* %40(%"class.SkSL::Expression"* %14) #12
  %42 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %43 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %43, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %45 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %44, align 8
  %46 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 0, i32 1, i32 0
  %48 = bitcast i8** %47 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  store <2 x i64> %49, <2 x i64>* %4, align 16
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %45, i64 0, i32 0, i32 1, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %45, i64 0, i32 0, i32 1, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %37, i8* %51, i64 %53) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  %55 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %36
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %36, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %63 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %54, label %88, label %89

71:                                               ; preds = %3
  %72 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %71, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %80 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #14
  br label %87

87:                                               ; preds = %79, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %88

88:                                               ; preds = %87, %70
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %14, i32 %2)
  br label %94

89:                                               ; preds = %70
  %90 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)***
  %91 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %91, i64 11
  %93 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"*, i32)** %92, align 8
  call void %93(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %1, i32 %2) #12
  br label %94

94:                                               ; preds = %89, %88
  ret void
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %6 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %7 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %7, i64 3
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %8, align 8
  %10 = tail call dereferenceable(184) %"class.SkSL::Type"* %9(%"class.SkSL::Expression"* %5) #12
  %11 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %13 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %13, i64 5
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %14, align 8
  call void %15(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %10) #12
  %16 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %11
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %53, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i32 [ 0, %33 ], [ %42, %35 ]
  %37 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %34, align 8
  %38 = bitcast %"class.SkSL::OutputStream"* %37 to void (%"class.SkSL::OutputStream"*, i8*)***
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, i64 2
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %40, align 8
  call void %41(%"class.SkSL::OutputStream"* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %42 = add nuw nsw i32 %36, 1
  %43 = load i32, i32* %30, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %35, label %45

45:                                               ; preds = %35, %29, %25
  %46 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %47 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %46, align 8
  %48 = bitcast %"class.SkSL::OutputStream"* %47 to void (%"class.SkSL::OutputStream"*, i8*)***
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, i64 2
  %51 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, align 8
  call void %51(%"class.SkSL::OutputStream"* %47, i8* %22) #12
  store i8 0, i8* %26, align 8
  %52 = load i8, i8* %17, align 1
  br label %53

53:                                               ; preds = %45, %3
  %54 = phi i8 [ %18, %3 ], [ %52, %45 ]
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %59 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i32 [ 0, %66 ], [ %75, %68 ]
  %70 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %67, align 8
  %71 = bitcast %"class.SkSL::OutputStream"* %70 to void (%"class.SkSL::OutputStream"*, i8*)***
  %72 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %72, i64 2
  %74 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, align 8
  call void %74(%"class.SkSL::OutputStream"* %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %75 = add nuw nsw i32 %69, 1
  %76 = load i32, i32* %63, align 4
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %68, label %78

78:                                               ; preds = %68, %58, %62
  %79 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %80 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %79, align 8
  %81 = bitcast %"class.SkSL::OutputStream"* %80 to void (%"class.SkSL::OutputStream"*, i8*)***
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %82, i64 2
  %84 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %83, align 8
  call void %84(%"class.SkSL::OutputStream"* %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %59, align 8
  %85 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %86 = load { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %85, align 8
  %87 = getelementptr inbounds { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)** %86, i64 12
  %88 = load { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.147"*, i64 } (%"class.SkSL::AnyConstructor"*)** %87, align 8
  %89 = call { %"class.std::__1::unique_ptr.147"*, i64 } %88(%"class.SkSL::AnyConstructor"* %1) #12
  %90 = extractvalue { %"class.std::__1::unique_ptr.147"*, i64 } %89, 0
  %91 = extractvalue { %"class.std::__1::unique_ptr.147"*, i64 } %89, 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %90, i64 %91
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %78
  %95 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  br label %119

96:                                               ; preds = %146, %78
  %97 = load i8, i8* %59, align 8, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %113

103:                                              ; preds = %99, %103
  %104 = phi i32 [ %110, %103 ], [ 0, %99 ]
  %105 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %79, align 8
  %106 = bitcast %"class.SkSL::OutputStream"* %105 to void (%"class.SkSL::OutputStream"*, i8*)***
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %107, i64 2
  %109 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %108, align 8
  call void %109(%"class.SkSL::OutputStream"* %105, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %110 = add nuw nsw i32 %104, 1
  %111 = load i32, i32* %100, align 4
  %112 = icmp slt i32 %110, %111
  br i1 %112, label %103, label %113

113:                                              ; preds = %103, %96, %99
  %114 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %79, align 8
  %115 = bitcast %"class.SkSL::OutputStream"* %114 to void (%"class.SkSL::OutputStream"*, i8*)***
  %116 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %116, i64 2
  %118 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %117, align 8
  call void %118(%"class.SkSL::OutputStream"* %114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %59, align 8
  ret void

119:                                              ; preds = %94, %146
  %120 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), %94 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), %146 ]
  %121 = phi %"class.std::__1::unique_ptr.147"* [ %90, %94 ], [ %149, %146 ]
  %122 = load i8, i8* %120, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %146, label %124

124:                                              ; preds = %119
  %125 = load i8, i8* %59, align 8, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %140, label %127

127:                                              ; preds = %124
  %128 = load i32, i32* %95, align 4
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %140

130:                                              ; preds = %127, %130
  %131 = phi i32 [ %137, %130 ], [ 0, %127 ]
  %132 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %79, align 8
  %133 = bitcast %"class.SkSL::OutputStream"* %132 to void (%"class.SkSL::OutputStream"*, i8*)***
  %134 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %134, i64 2
  %136 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, align 8
  call void %136(%"class.SkSL::OutputStream"* %132, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %137 = add nuw nsw i32 %131, 1
  %138 = load i32, i32* %95, align 4
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %130, label %140

140:                                              ; preds = %130, %127, %124
  %141 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %79, align 8
  %142 = bitcast %"class.SkSL::OutputStream"* %141 to void (%"class.SkSL::OutputStream"*, i8*)***
  %143 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %143, i64 2
  %145 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %144, align 8
  call void %145(%"class.SkSL::OutputStream"* %141, i8* %120) #12
  store i8 0, i8* %59, align 8
  br label %146

146:                                              ; preds = %119, %140
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %121, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %147, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %148, i32 17)
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %121, i64 1
  %150 = icmp eq %"class.std::__1::unique_ptr.147"* %149, %92
  br i1 %150, label %96, label %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator14writeFragCoordEv(%"class.SkSL::GLSLCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %4 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %4, i64 0, i32 2
  %6 = load %class.GrShaderCaps*, %class.GrShaderCaps** %5, align 8
  %7 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %6, i64 0, i32 2
  %8 = bitcast i56* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 8589934592
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %56

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 17
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %12
  %17 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %18 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %18, i64 4
  %20 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %22 = select i1 %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0)
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6
  %24 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %23, i8* %22) #12
  %25 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %23, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.86, i64 0, i64 0)) #12
  %26 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %23, i8* %22) #12
  %27 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %23, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.87, i64 0, i64 0)) #12
  %28 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %23, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.88, i64 0, i64 0)) #12
  store i8 1, i8* %13, align 2
  br label %29

29:                                               ; preds = %12, %16
  %30 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i32 [ 0, %37 ], [ %46, %39 ]
  %41 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %38, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %41 to void (%"class.SkSL::OutputStream"*, i8*)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, align 8
  tail call void %45(%"class.SkSL::OutputStream"* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %46 = add nuw nsw i32 %40, 1
  %47 = load i32, i32* %34, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %39, label %49

49:                                               ; preds = %39, %29, %33
  %50 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %51 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %50, align 8
  %52 = bitcast %"class.SkSL::OutputStream"* %51 to void (%"class.SkSL::OutputStream"*, i8*)***
  %53 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, i64 2
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, align 8
  tail call void %55(%"class.SkSL::OutputStream"* %51, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.89, i64 0, i64 0)) #12
  br label %234

56:                                               ; preds = %1
  %57 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %58 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %57, align 8
  %59 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %59, align 8
  %61 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %91

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %84, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i32 [ 0, %72 ], [ %81, %74 ]
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %73, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  tail call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %81 = add nuw nsw i32 %75, 1
  %82 = load i32, i32* %69, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %74, label %84

84:                                               ; preds = %74, %64, %68
  %85 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %86 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %87 = bitcast %"class.SkSL::OutputStream"* %86 to void (%"class.SkSL::OutputStream"*, i8*)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, i64 2
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, align 8
  tail call void %90(%"class.SkSL::OutputStream"* %86, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i64 0, i64 0)) #12
  br label %234

91:                                               ; preds = %56
  %92 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %6, i64 0, i32 7
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %193, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 15
  %97 = load i8, i8* %96, align 4, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %166

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %6, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, 3
  br i1 %102, label %103, label %159

103:                                              ; preds = %99
  %104 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = tail call i64 @strlen(i8* nonnull %93) #12
  %106 = icmp ugt i64 %105, -17
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = bitcast %"class.SkSL::String"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %108) #15
  unreachable

109:                                              ; preds = %103
  %110 = icmp ult i64 %105, 23
  br i1 %110, label %120, label %111

111:                                              ; preds = %109
  %112 = add nuw i64 %105, 16
  %113 = and i64 %112, -16
  %114 = tail call i8* @_Znwm(i64 %113) #14
  %115 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %114, i8** %115, align 8
  %116 = or i64 %113, -9223372036854775808
  %117 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %105, i64* %118, align 8
  %119 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %125

120:                                              ; preds = %109
  %121 = trunc i64 %105 to i8
  %122 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  store i8 %121, i8* %123, align 1
  %124 = icmp eq i64 %105, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %120, %111
  %126 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %122, %120 ], [ %119, %111 ]
  %127 = phi i8* [ %104, %120 ], [ %114, %111 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %127, i8* nonnull align 1 %93, i64 %105, i1 false) #12
  br label %128

128:                                              ; preds = %120, %125
  %129 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %122, %120 ], [ %126, %125 ]
  %130 = phi i8* [ %104, %120 ], [ %127, %125 ]
  %131 = getelementptr inbounds i8, i8* %130, i64 %105
  store i8 0, i8* %131, align 1
  %132 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %133 = bitcast %class.SkWStream* %132 to i1 (%class.SkWStream*, i8*, i64)***
  %134 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %133, align 8
  %135 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %134, i64 2
  %136 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %135, align 8
  %137 = tail call zeroext i1 %136(%class.SkWStream* %132, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  %141 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %139 to i64
  %146 = select i1 %140, i8* %142, i8* %104
  %147 = select i1 %140, i64 %144, i64 %145
  %148 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %149 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %148, i8* %146, i64 %147) #12
  %150 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %133, align 8
  %151 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %150, i64 2
  %152 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %151, align 8
  %153 = call zeroext i1 %152(%class.SkWStream* %132, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  %154 = load i8, i8* %138, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %128
  %157 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %157) #14
  br label %158

158:                                              ; preds = %128, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br label %159

159:                                              ; preds = %158, %99
  %160 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 1, i32 0
  %161 = bitcast %class.SkWStream* %160 to i1 (%class.SkWStream*, i8*, i64)***
  %162 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %161, align 8
  %163 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %162, i64 2
  %164 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %163, align 8
  %165 = call zeroext i1 %164(%class.SkWStream* %160, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91, i64 0, i64 0), i64 48) #12
  store i8 1, i8* %96, align 4
  br label %166

166:                                              ; preds = %95, %159
  %167 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %168 = load i8, i8* %167, align 8, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %186, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %172 = load i32, i32* %171, align 4
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %186

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i32 [ 0, %174 ], [ %183, %176 ]
  %178 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %175, align 8
  %179 = bitcast %"class.SkSL::OutputStream"* %178 to void (%"class.SkSL::OutputStream"*, i8*)***
  %180 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %180, i64 2
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %181, align 8
  call void %182(%"class.SkSL::OutputStream"* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %183 = add nuw nsw i32 %177, 1
  %184 = load i32, i32* %171, align 4
  %185 = icmp slt i32 %183, %184
  br i1 %185, label %176, label %186

186:                                              ; preds = %176, %166, %170
  %187 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %188 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %187, align 8
  %189 = bitcast %"class.SkSL::OutputStream"* %188 to void (%"class.SkSL::OutputStream"*, i8*)***
  %190 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, i64 2
  %192 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %191, align 8
  call void %192(%"class.SkSL::OutputStream"* %188, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i64 0, i64 0)) #12
  br label %234

193:                                              ; preds = %91
  %194 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 16
  %195 = load i8, i8* %194, align 1, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %207

197:                                              ; preds = %193
  %198 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %199 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %198, align 8
  %200 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %199, i64 4
  %201 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %200, align 8
  %202 = tail call zeroext i1 %201(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %203 = select i1 %202, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0)
  %204 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6
  %205 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %204, i8* %203) #12
  %206 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %204, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.92, i64 0, i64 0)) #12
  store i8 1, i8* %194, align 1
  br label %207

207:                                              ; preds = %193, %197
  %208 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %209 = load i8, i8* %208, align 8, !range !2
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %213 = load i32, i32* %212, align 4
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %217

217:                                              ; preds = %217, %215
  %218 = phi i32 [ 0, %215 ], [ %224, %217 ]
  %219 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %216, align 8
  %220 = bitcast %"class.SkSL::OutputStream"* %219 to void (%"class.SkSL::OutputStream"*, i8*)***
  %221 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %221, i64 2
  %223 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %222, align 8
  tail call void %223(%"class.SkSL::OutputStream"* %219, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %224 = add nuw nsw i32 %218, 1
  %225 = load i32, i32* %212, align 4
  %226 = icmp slt i32 %224, %225
  br i1 %226, label %217, label %227

227:                                              ; preds = %217, %207, %211
  %228 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %229 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %228, align 8
  %230 = bitcast %"class.SkSL::OutputStream"* %229 to void (%"class.SkSL::OutputStream"*, i8*)***
  %231 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %231, i64 2
  %233 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %232, align 8
  tail call void %233(%"class.SkSL::OutputStream"* %229, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.93, i64 0, i64 0)) #12
  br label %234

234:                                              ; preds = %186, %227, %49, %84
  %235 = phi i8* [ %167, %186 ], [ %208, %227 ], [ %30, %49 ], [ %65, %84 ]
  store i8 0, i8* %235, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VariableReference"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 1
  %4 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %4, i64 0, i32 2
  %6 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 6
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %251 [
    i32 10001, label %9
    i32 15, label %68
    i32 17, label %69
    i32 42, label %107
    i32 43, label %134
    i32 10002, label %161
    i32 8, label %188
    i32 10008, label %215
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %11 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %11, i64 0, i32 2
  %13 = load %class.GrShaderCaps*, %class.GrShaderCaps** %12, align 8
  %14 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  %17 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %16, label %20, label %44

20:                                               ; preds = %9
  br i1 %19, label %37, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i32 [ 0, %25 ], [ %34, %27 ]
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  tail call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %34 = add nuw nsw i32 %28, 1
  %35 = load i32, i32* %22, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %27, %20, %21
  %38 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %38, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i64 0, i64 0)) #12
  store i8 0, i8* %17, align 8
  br label %284

44:                                               ; preds = %9
  br i1 %19, label %61, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i32 [ 0, %49 ], [ %58, %51 ]
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %50, align 8
  %54 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, align 8
  tail call void %57(%"class.SkSL::OutputStream"* %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %58 = add nuw nsw i32 %52, 1
  %59 = load i32, i32* %46, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %51, label %61

61:                                               ; preds = %51, %44, %45
  %62 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %63 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %62, align 8
  %64 = bitcast %"class.SkSL::OutputStream"* %63 to void (%"class.SkSL::OutputStream"*, i8*)***
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %65, i64 2
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, align 8
  tail call void %67(%"class.SkSL::OutputStream"* %63, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)) #12
  store i8 0, i8* %17, align 8
  br label %284

68:                                               ; preds = %2
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeFragCoordEv(%"class.SkSL::GLSLCodeGenerator"* %0)
  br label %284

69:                                               ; preds = %2
  %70 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %71 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %71, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %72, align 8
  %74 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = select i1 %76, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.96, i64 0, i64 0)
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %284, label %80

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i32 [ 0, %88 ], [ %97, %90 ]
  %92 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %89, align 8
  %93 = bitcast %"class.SkSL::OutputStream"* %92 to void (%"class.SkSL::OutputStream"*, i8*)***
  %94 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %94, i64 2
  %96 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %95, align 8
  tail call void %96(%"class.SkSL::OutputStream"* %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %97 = add nuw nsw i32 %91, 1
  %98 = load i32, i32* %85, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %90, label %100

100:                                              ; preds = %90, %84, %80
  %101 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %102 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %101, align 8
  %103 = bitcast %"class.SkSL::OutputStream"* %102 to void (%"class.SkSL::OutputStream"*, i8*)***
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %104, i64 2
  %106 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, align 8
  tail call void %106(%"class.SkSL::OutputStream"* %102, i8* %77) #12
  store i8 0, i8* %81, align 8
  br label %284

107:                                              ; preds = %2
  %108 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %127, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %113 = load i32, i32* %112, align 4
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %117

117:                                              ; preds = %117, %115
  %118 = phi i32 [ 0, %115 ], [ %124, %117 ]
  %119 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %116, align 8
  %120 = bitcast %"class.SkSL::OutputStream"* %119 to void (%"class.SkSL::OutputStream"*, i8*)***
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, align 8
  tail call void %123(%"class.SkSL::OutputStream"* %119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %124 = add nuw nsw i32 %118, 1
  %125 = load i32, i32* %112, align 4
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %117, label %127

127:                                              ; preds = %117, %107, %111
  %128 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %129 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %128, align 8
  %130 = bitcast %"class.SkSL::OutputStream"* %129 to void (%"class.SkSL::OutputStream"*, i8*)***
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, i64 2
  %133 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %132, align 8
  tail call void %133(%"class.SkSL::OutputStream"* %129, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.98, i64 0, i64 0)) #12
  store i8 0, i8* %108, align 8
  br label %284

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i32 [ 0, %142 ], [ %151, %144 ]
  %146 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %143, align 8
  %147 = bitcast %"class.SkSL::OutputStream"* %146 to void (%"class.SkSL::OutputStream"*, i8*)***
  %148 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %148, i64 2
  %150 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, align 8
  tail call void %150(%"class.SkSL::OutputStream"* %146, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %151 = add nuw nsw i32 %145, 1
  %152 = load i32, i32* %139, align 4
  %153 = icmp slt i32 %151, %152
  br i1 %153, label %144, label %154

154:                                              ; preds = %144, %134, %138
  %155 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %156 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %155, align 8
  %157 = bitcast %"class.SkSL::OutputStream"* %156 to void (%"class.SkSL::OutputStream"*, i8*)***
  %158 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %158, i64 2
  %160 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, align 8
  tail call void %160(%"class.SkSL::OutputStream"* %156, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.99, i64 0, i64 0)) #12
  store i8 0, i8* %135, align 8
  br label %284

161:                                              ; preds = %2
  %162 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %167 = load i32, i32* %166, align 4
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %171

171:                                              ; preds = %171, %169
  %172 = phi i32 [ 0, %169 ], [ %178, %171 ]
  %173 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %170, align 8
  %174 = bitcast %"class.SkSL::OutputStream"* %173 to void (%"class.SkSL::OutputStream"*, i8*)***
  %175 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, i64 2
  %177 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %176, align 8
  tail call void %177(%"class.SkSL::OutputStream"* %173, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %178 = add nuw nsw i32 %172, 1
  %179 = load i32, i32* %166, align 4
  %180 = icmp slt i32 %178, %179
  br i1 %180, label %171, label %181

181:                                              ; preds = %171, %161, %165
  %182 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %183 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %182, align 8
  %184 = bitcast %"class.SkSL::OutputStream"* %183 to void (%"class.SkSL::OutputStream"*, i8*)***
  %185 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %185, i64 2
  %187 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %186, align 8
  tail call void %187(%"class.SkSL::OutputStream"* %183, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0)) #12
  store i8 0, i8* %162, align 8
  br label %284

188:                                              ; preds = %2
  %189 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %190 = load i8, i8* %189, align 8, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %208, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %194 = load i32, i32* %193, align 4
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %198

198:                                              ; preds = %198, %196
  %199 = phi i32 [ 0, %196 ], [ %205, %198 ]
  %200 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %197, align 8
  %201 = bitcast %"class.SkSL::OutputStream"* %200 to void (%"class.SkSL::OutputStream"*, i8*)***
  %202 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %202, i64 2
  %204 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %203, align 8
  tail call void %204(%"class.SkSL::OutputStream"* %200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %205 = add nuw nsw i32 %199, 1
  %206 = load i32, i32* %193, align 4
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %198, label %208

208:                                              ; preds = %198, %188, %192
  %209 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %210 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %209, align 8
  %211 = bitcast %"class.SkSL::OutputStream"* %210 to void (%"class.SkSL::OutputStream"*, i8*)***
  %212 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, i64 2
  %214 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %213, align 8
  tail call void %214(%"class.SkSL::OutputStream"* %210, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.101, i64 0, i64 0)) #12
  store i8 0, i8* %189, align 8
  br label %284

215:                                              ; preds = %2
  %216 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %217 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %216, align 8
  %218 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %217, i64 0, i32 2
  %219 = load %class.GrShaderCaps*, %class.GrShaderCaps** %218, align 8
  %220 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %219, i64 0, i32 14
  %221 = load i8*, i8** %220, align 8
  %222 = load i8, i8* %221, align 1
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %284, label %224

224:                                              ; preds = %215
  %225 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %226 = load i8, i8* %225, align 8, !range !2
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %244, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %230 = load i32, i32* %229, align 4
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %232, label %244

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i32 [ 0, %232 ], [ %241, %234 ]
  %236 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %233, align 8
  %237 = bitcast %"class.SkSL::OutputStream"* %236 to void (%"class.SkSL::OutputStream"*, i8*)***
  %238 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %238, i64 2
  %240 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %239, align 8
  tail call void %240(%"class.SkSL::OutputStream"* %236, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %241 = add nuw nsw i32 %235, 1
  %242 = load i32, i32* %229, align 4
  %243 = icmp slt i32 %241, %242
  br i1 %243, label %234, label %244

244:                                              ; preds = %234, %228, %224
  %245 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %246 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %245, align 8
  %247 = bitcast %"class.SkSL::OutputStream"* %246 to void (%"class.SkSL::OutputStream"*, i8*)***
  %248 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %248, i64 2
  %250 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %249, align 8
  tail call void %250(%"class.SkSL::OutputStream"* %246, i8* %221) #12
  store i8 0, i8* %225, align 8
  br label %284

251:                                              ; preds = %2
  %252 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %4, i64 0, i32 0, i32 1, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %4, i64 0, i32 0, i32 1, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %284, label %257

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %277, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %263 = load i32, i32* %262, align 4
  %264 = icmp sgt i32 %263, 0
  br i1 %264, label %265, label %277

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %267

267:                                              ; preds = %267, %265
  %268 = phi i32 [ 0, %265 ], [ %274, %267 ]
  %269 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %270 = bitcast %"class.SkSL::OutputStream"* %269 to void (%"class.SkSL::OutputStream"*, i8*)***
  %271 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %271, i64 2
  %273 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, align 8
  tail call void %273(%"class.SkSL::OutputStream"* %269, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %274 = add nuw nsw i32 %268, 1
  %275 = load i32, i32* %262, align 4
  %276 = icmp slt i32 %274, %275
  br i1 %276, label %267, label %277

277:                                              ; preds = %267, %261, %257
  %278 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %279 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %278, align 8
  %280 = bitcast %"class.SkSL::OutputStream"* %279 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %281 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %280, align 8
  %282 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %281, i64 3
  %283 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %282, align 8
  tail call void %283(%"class.SkSL::OutputStream"* %279, i8* %253, i64 %255) #12
  store i8 0, i8* %258, align 8
  br label %284

284:                                              ; preds = %277, %251, %244, %215, %100, %69, %37, %61, %208, %181, %154, %127, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator20writeIndexExpressionERKNS_15IndexExpressionE(%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::IndexExpression"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %4, i32 2)
  %5 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 0, %12 ], [ %21, %14 ]
  %16 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %13, align 8
  %17 = bitcast %"class.SkSL::OutputStream"* %16 to void (%"class.SkSL::OutputStream"*, i8*)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::OutputStream"* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %21 = add nuw nsw i32 %15, 1
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %14, label %24

24:                                               ; preds = %14, %2, %8
  %25 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #12
  store i8 0, i8* %5, align 8
  %31 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %31, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %32, i32 17)
  %33 = load i8, i8* %5, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %46, %39 ], [ 0, %35 ]
  %41 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %41 to void (%"class.SkSL::OutputStream"*, i8*)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, align 8
  tail call void %45(%"class.SkSL::OutputStream"* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %46 = add nuw nsw i32 %40, 1
  %47 = load i32, i32* %36, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %39, label %49

49:                                               ; preds = %39, %24, %35
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL14is_sk_positionERKNS_11FieldAccessE(%"class.SkSL::FieldAccess"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2, align 8
  %4 = bitcast %"class.SkSL::Expression"* %3 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %5 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, i64 3
  %7 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %6, align 8
  %8 = tail call dereferenceable(184) %"class.SkSL::Type"* %7(%"class.SkSL::Expression"* %3) #12
  %9 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 10, i32 0, i32 0
  %13 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %13, i64 %11, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %13, i64 %11, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZN4SkSLeqEPKcNS_14StringFragmentE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0), i8* %15, i64 %17) #12
  ret i1 %18
}

declare zeroext i1 @_ZN4SkSLeqEPKcNS_14StringFragmentE(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator16writeFieldAccessERKNS_11FieldAccessE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FieldAccess"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::StringFragment", align 8
  %4 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %36

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %9, i32 2)
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %7, %13
  %30 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i64 0, i64 0)) #12
  store i8 0, i8* %10, align 8
  br label %36

36:                                               ; preds = %29, %2
  %37 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %37, align 8
  %39 = bitcast %"class.SkSL::Expression"* %38 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %40 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %40, i64 3
  %42 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %41, align 8
  %43 = tail call dereferenceable(184) %"class.SkSL::Type"* %42(%"class.SkSL::Expression"* %38) #12
  %44 = bitcast %"struct.SkSL::StringFragment"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  %45 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 1
  %46 = bitcast %"struct.SkSL::StringFragment"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  %47 = load i32, i32* %45, align 8
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %43, i64 0, i32 10, i32 0, i32 0
  %50 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %49, align 8
  %51 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %50, i64 %48, i32 1
  %52 = bitcast %"struct.SkSL::StringFragment"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %52, i64 16, i1 false)
  %53 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0)) #12
  br i1 %53, label %54, label %81

54:                                               ; preds = %36
  %55 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i32 [ 0, %62 ], [ %71, %64 ]
  %66 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %63, align 8
  %67 = bitcast %"class.SkSL::OutputStream"* %66 to void (%"class.SkSL::OutputStream"*, i8*)***
  %68 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, i64 2
  %70 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, align 8
  call void %70(%"class.SkSL::OutputStream"* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %71 = add nuw nsw i32 %65, 1
  %72 = load i32, i32* %59, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %64, label %74

74:                                               ; preds = %64, %54, %58
  %75 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i64 0, i64 0)) #12
  br label %146

81:                                               ; preds = %36
  %82 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i64 0, i64 0)) #12
  br i1 %82, label %83, label %110

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i32 [ 0, %91 ], [ %100, %93 ]
  %95 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %92, align 8
  %96 = bitcast %"class.SkSL::OutputStream"* %95 to void (%"class.SkSL::OutputStream"*, i8*)***
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, align 8
  call void %99(%"class.SkSL::OutputStream"* %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %100 = add nuw nsw i32 %94, 1
  %101 = load i32, i32* %88, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %93, label %103

103:                                              ; preds = %93, %83, %87
  %104 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %105 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %104, align 8
  %106 = bitcast %"class.SkSL::OutputStream"* %105 to void (%"class.SkSL::OutputStream"*, i8*)***
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %107, i64 2
  %109 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %108, align 8
  call void %109(%"class.SkSL::OutputStream"* %105, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i64 0, i64 0)) #12
  br label %146

110:                                              ; preds = %81
  %111 = load i32, i32* %45, align 8
  %112 = sext i32 %111 to i64
  %113 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %49, align 8
  %114 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %113, i64 %112, i32 1, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %113, i64 %112, i32 1, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %148, label %119

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %125 = load i32, i32* %124, align 4
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i32 [ 0, %127 ], [ %136, %129 ]
  %131 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %128, align 8
  %132 = bitcast %"class.SkSL::OutputStream"* %131 to void (%"class.SkSL::OutputStream"*, i8*)***
  %133 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %133, i64 2
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %134, align 8
  call void %135(%"class.SkSL::OutputStream"* %131, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %136 = add nuw nsw i32 %130, 1
  %137 = load i32, i32* %124, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %129, label %139

139:                                              ; preds = %129, %123, %119
  %140 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %141 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %140, align 8
  %142 = bitcast %"class.SkSL::OutputStream"* %141 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, i64 3
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, align 8
  call void %145(%"class.SkSL::OutputStream"* %141, i8* %115, i64 %117) #12
  br label %146

146:                                              ; preds = %74, %103, %139
  %147 = phi i8* [ %120, %139 ], [ %84, %103 ], [ %55, %74 ]
  store i8 0, i8* %147, align 8
  br label %148

148:                                              ; preds = %146, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  ret void
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator12writeSwizzleERKNS_7SwizzleE(%"class.SkSL::GLSLCodeGenerator"*, %"struct.SkSL::Swizzle"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %4, i32 2)
  %5 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 0, %12 ], [ %21, %14 ]
  %16 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %13, align 8
  %17 = bitcast %"class.SkSL::OutputStream"* %16 to void (%"class.SkSL::OutputStream"*, i8*)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::OutputStream"* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %21 = add nuw nsw i32 %15, 1
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %14, label %24

24:                                               ; preds = %14, %2, %8
  %25 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i64 0, i64 0)) #12
  store i8 0, i8* %5, align 8
  %31 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 8
  %32 = bitcast i8* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %38, 1
  %40 = and i64 %39, 2147483647
  %41 = getelementptr inbounds i8, i8* %33, i64 %40
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %60, %24, %35
  ret void

44:                                               ; preds = %35, %60
  %45 = phi i8* [ %61, %60 ], [ %33, %35 ]
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = shl nsw i32 %47, 1
  %49 = sext i32 %48 to i64
  %50 = lshr i64 426, %49
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %44
  %54 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.107, i64 0, i64 %49
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %55, i8* %54) #12
  store i8 0, i8* %5, align 8
  br label %60

60:                                               ; preds = %44, %53
  %61 = getelementptr inbounds i8, i8* %45, i64 1
  %62 = icmp eq i8* %61, %41
  br i1 %62, label %43, label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator31writeMatrixComparisonWorkaroundERKNS_16BinaryExpressionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::Operator", align 4
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  %31 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %31, align 8
  %33 = bitcast %"class.SkSL::Operator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %3, i64 0, i32 0
  %35 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 2, i32 0
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 4
  %37 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.SkSL::String"* %5 to i8*
  %40 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %41 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 7
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %41, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %5, i32 %42) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #12
  %44 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %2, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  %52 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.SkSL::String"* %7 to i8*
  %55 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %56 = load i32, i32* %41, align 8
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %41, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %7, i32 %56) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #12
  %58 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %51, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %66 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #12
  %67 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  %68 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  %69 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #12
  %70 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %72 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #12
  %73 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  %74 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #12
  %75 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 4, i8* %78, align 1
  %79 = bitcast %"class.SkSL::String"* %18 to i32*
  store i32 538976288, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %76, i64 4
  store i8 0, i8* %80, align 4
  %81 = bitcast %"class.SkSL::Expression"* %30 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %82 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %82, i64 3
  %84 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %83, align 8
  %85 = call dereferenceable(184) %"class.SkSL::Type"* %84(%"class.SkSL::Expression"* %30) #12
  %86 = call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %85)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::String"* nonnull %18, i8* %86) #12
  %87 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #12
  %88 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %81, align 8
  %89 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %88, i64 3
  %90 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %89, align 8
  %91 = call dereferenceable(184) %"class.SkSL::Type"* %90(%"class.SkSL::Expression"* %30) #12
  %92 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %93 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %93, i64 5
  %95 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %94, align 8
  call void %95(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %91) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0)) #12
  %96 = bitcast %"class.SkSL::Expression"* %32 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %97 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %96, align 8
  %98 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %97, i64 3
  %99 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %98, align 8
  %100 = call dereferenceable(184) %"class.SkSL::Type"* %99(%"class.SkSL::Expression"* %32) #12
  %101 = call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %100)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* %101) #12
  %102 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #12
  %103 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %96, align 8
  %104 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %103, i64 3
  %105 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %104, align 8
  %106 = call dereferenceable(184) %"class.SkSL::Type"* %105(%"class.SkSL::Expression"* %32) #12
  %107 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %92, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %107, i64 5
  %109 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %108, align 8
  call void %109(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %106) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %20) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0)) #12
  %110 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6
  %111 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %110, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #12
  %112 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %65
  %117 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %65, %116
  %120 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #14
  br label %127

127:                                              ; preds = %119, %124
  %128 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %127, %132
  %136 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %142) #14
  br label %143

143:                                              ; preds = %135, %140
  %144 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #14
  br label %151

151:                                              ; preds = %143, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #12
  %152 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #14
  br label %159

159:                                              ; preds = %151, %156
  %160 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %159, %164
  %168 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %167, %172
  %176 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #14
  br label %183

183:                                              ; preds = %175, %180
  %184 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %190) #14
  br label %191

191:                                              ; preds = %183, %188
  %192 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %198) #14
  br label %199

199:                                              ; preds = %191, %196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #12
  %200 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %206) #14
  br label %207

207:                                              ; preds = %199, %204
  %208 = load i8, i8* %78, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #14
  br label %213

213:                                              ; preds = %207, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #12
  %214 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #12
  %215 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %21, %"class.SkSL::String"* nonnull %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #12
  %216 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  %220 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = select i1 %219, i8* %221, i8* %214
  %223 = load i8, i8* %222, align 1
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %253, label %225

225:                                              ; preds = %213
  %226 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %227 = load i8, i8* %226, align 8, !range !2
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %231 = load i32, i32* %230, align 4
  %232 = icmp sgt i32 %231, 0
  br i1 %232, label %233, label %245

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %235

235:                                              ; preds = %235, %233
  %236 = phi i32 [ 0, %233 ], [ %242, %235 ]
  %237 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %234, align 8
  %238 = bitcast %"class.SkSL::OutputStream"* %237 to void (%"class.SkSL::OutputStream"*, i8*)***
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %239, i64 2
  %241 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %240, align 8
  call void %241(%"class.SkSL::OutputStream"* %237, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %242 = add nuw nsw i32 %236, 1
  %243 = load i32, i32* %230, align 4
  %244 = icmp slt i32 %242, %243
  br i1 %244, label %235, label %245

245:                                              ; preds = %235, %229, %225
  %246 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %247 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %246, align 8
  %248 = bitcast %"class.SkSL::OutputStream"* %247 to void (%"class.SkSL::OutputStream"*, i8*)***
  %249 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %248, align 8
  %250 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %249, i64 2
  %251 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %250, align 8
  call void %251(%"class.SkSL::OutputStream"* %247, i8* %222) #12
  store i8 0, i8* %226, align 8
  %252 = load i8, i8* %217, align 1
  br label %253

253:                                              ; preds = %213, %245
  %254 = phi i8 [ %218, %213 ], [ %252, %245 ]
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load i8*, i8** %220, align 8
  call void @_ZdlPv(i8* %257) #14
  br label %258

258:                                              ; preds = %253, %256
  %259 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %260 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %259, i64 0, i32 1, i32 0
  %261 = load i8, i8* %260, align 1
  %262 = icmp slt i8 %261, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  call void @_ZdlPv(i8* %265) #14
  br label %266

266:                                              ; preds = %258, %263
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #12
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %30, i32 16)
  %267 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #12
  %268 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #12
  %269 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  %271 = load i8, i8* %270, align 1
  %272 = icmp slt i8 %271, 0
  %273 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = select i1 %272, i8* %274, i8* %267
  %276 = load i8, i8* %275, align 1
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %306, label %278

278:                                              ; preds = %266
  %279 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %298, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %284 = load i32, i32* %283, align 4
  %285 = icmp sgt i32 %284, 0
  br i1 %285, label %286, label %298

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i32 [ 0, %286 ], [ %295, %288 ]
  %290 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %287, align 8
  %291 = bitcast %"class.SkSL::OutputStream"* %290 to void (%"class.SkSL::OutputStream"*, i8*)***
  %292 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %291, align 8
  %293 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %292, i64 2
  %294 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %293, align 8
  call void %294(%"class.SkSL::OutputStream"* %290, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %295 = add nuw nsw i32 %289, 1
  %296 = load i32, i32* %283, align 4
  %297 = icmp slt i32 %295, %296
  br i1 %297, label %288, label %298

298:                                              ; preds = %288, %282, %278
  %299 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %300 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %299, align 8
  %301 = bitcast %"class.SkSL::OutputStream"* %300 to void (%"class.SkSL::OutputStream"*, i8*)***
  %302 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %302, i64 2
  %304 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %303, align 8
  call void %304(%"class.SkSL::OutputStream"* %300, i8* %275) #12
  store i8 0, i8* %279, align 8
  %305 = load i8, i8* %270, align 1
  br label %306

306:                                              ; preds = %266, %298
  %307 = phi i8 [ %271, %266 ], [ %305, %298 ]
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %306
  %310 = load i8*, i8** %273, align 8
  call void @_ZdlPv(i8* %310) #14
  br label %311

311:                                              ; preds = %306, %309
  %312 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %312, i64 0, i32 1, i32 0
  %314 = load i8, i8* %313, align 1
  %315 = icmp slt i8 %314, 0
  br i1 %315, label %316, label %319

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load i8*, i8** %317, align 8
  call void @_ZdlPv(i8* %318) #14
  br label %319

319:                                              ; preds = %311, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #12
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %32, i32 16)
  %320 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %320) #12
  %321 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %321) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %25, %"class.SkSL::String"* nonnull %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  %322 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %323 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %322, i64 0, i32 1, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = icmp slt i8 %324, 0
  %326 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = select i1 %325, i8* %327, i8* %320
  %329 = load i8, i8* %328, align 1
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %359, label %331

331:                                              ; preds = %319
  %332 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %333 = load i8, i8* %332, align 8, !range !2
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %351, label %335

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %337 = load i32, i32* %336, align 4
  %338 = icmp sgt i32 %337, 0
  br i1 %338, label %339, label %351

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %341

341:                                              ; preds = %341, %339
  %342 = phi i32 [ 0, %339 ], [ %348, %341 ]
  %343 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %340, align 8
  %344 = bitcast %"class.SkSL::OutputStream"* %343 to void (%"class.SkSL::OutputStream"*, i8*)***
  %345 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %344, align 8
  %346 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %345, i64 2
  %347 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %346, align 8
  call void %347(%"class.SkSL::OutputStream"* %343, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %348 = add nuw nsw i32 %342, 1
  %349 = load i32, i32* %336, align 4
  %350 = icmp slt i32 %348, %349
  br i1 %350, label %341, label %351

351:                                              ; preds = %341, %335, %331
  %352 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %353 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %352, align 8
  %354 = bitcast %"class.SkSL::OutputStream"* %353 to void (%"class.SkSL::OutputStream"*, i8*)***
  %355 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %354, align 8
  %356 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %355, i64 2
  %357 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %356, align 8
  call void %357(%"class.SkSL::OutputStream"* %353, i8* %328) #12
  store i8 0, i8* %332, align 8
  %358 = load i8, i8* %323, align 1
  br label %359

359:                                              ; preds = %319, %351
  %360 = phi i8 [ %324, %319 ], [ %358, %351 ]
  %361 = icmp slt i8 %360, 0
  br i1 %361, label %362, label %364

362:                                              ; preds = %359
  %363 = load i8*, i8** %326, align 8
  call void @_ZdlPv(i8* %363) #14
  br label %364

364:                                              ; preds = %359, %362
  %365 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %366 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %365, i64 0, i32 1, i32 0
  %367 = load i8, i8* %366, align 1
  %368 = icmp slt i8 %367, 0
  br i1 %368, label %369, label %372

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load i8*, i8** %370, align 8
  call void @_ZdlPv(i8* %371) #14
  br label %372

372:                                              ; preds = %364, %369
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %321) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %320) #12
  %373 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %3) #12
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %403, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %378 = load i8, i8* %377, align 8, !range !2
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %382 = load i32, i32* %381, align 4
  %383 = icmp sgt i32 %382, 0
  br i1 %383, label %384, label %396

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %386

386:                                              ; preds = %386, %384
  %387 = phi i32 [ 0, %384 ], [ %393, %386 ]
  %388 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %385, align 8
  %389 = bitcast %"class.SkSL::OutputStream"* %388 to void (%"class.SkSL::OutputStream"*, i8*)***
  %390 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %390, i64 2
  %392 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %391, align 8
  call void %392(%"class.SkSL::OutputStream"* %388, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %393 = add nuw nsw i32 %387, 1
  %394 = load i32, i32* %381, align 4
  %395 = icmp slt i32 %393, %394
  br i1 %395, label %386, label %396

396:                                              ; preds = %386, %380, %376
  %397 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %398 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %397, align 8
  %399 = bitcast %"class.SkSL::OutputStream"* %398 to void (%"class.SkSL::OutputStream"*, i8*)***
  %400 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %399, align 8
  %401 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %400, i64 2
  %402 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %401, align 8
  call void %402(%"class.SkSL::OutputStream"* %398, i8* %373) #12
  store i8 0, i8* %377, align 8
  br label %403

403:                                              ; preds = %372, %396
  %404 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %404) #12
  %405 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %405) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0)) #12
  %406 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %407 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %406, i64 0, i32 1, i32 0
  %408 = load i8, i8* %407, align 1
  %409 = icmp slt i8 %408, 0
  %410 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load i8*, i8** %410, align 8
  %412 = select i1 %409, i8* %411, i8* %404
  %413 = load i8, i8* %412, align 1
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %443, label %415

415:                                              ; preds = %403
  %416 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %417 = load i8, i8* %416, align 8, !range !2
  %418 = icmp eq i8 %417, 0
  br i1 %418, label %435, label %419

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %421 = load i32, i32* %420, align 4
  %422 = icmp sgt i32 %421, 0
  br i1 %422, label %423, label %435

423:                                              ; preds = %419
  %424 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %425

425:                                              ; preds = %425, %423
  %426 = phi i32 [ 0, %423 ], [ %432, %425 ]
  %427 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %424, align 8
  %428 = bitcast %"class.SkSL::OutputStream"* %427 to void (%"class.SkSL::OutputStream"*, i8*)***
  %429 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %428, align 8
  %430 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %429, i64 2
  %431 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %430, align 8
  call void %431(%"class.SkSL::OutputStream"* %427, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %432 = add nuw nsw i32 %426, 1
  %433 = load i32, i32* %420, align 4
  %434 = icmp slt i32 %432, %433
  br i1 %434, label %425, label %435

435:                                              ; preds = %425, %419, %415
  %436 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %437 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %436, align 8
  %438 = bitcast %"class.SkSL::OutputStream"* %437 to void (%"class.SkSL::OutputStream"*, i8*)***
  %439 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %438, align 8
  %440 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %439, i64 2
  %441 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %440, align 8
  call void %441(%"class.SkSL::OutputStream"* %437, i8* %412) #12
  store i8 0, i8* %416, align 8
  %442 = load i8, i8* %407, align 1
  br label %443

443:                                              ; preds = %403, %435
  %444 = phi i8 [ %408, %403 ], [ %442, %435 ]
  %445 = icmp slt i8 %444, 0
  br i1 %445, label %446, label %448

446:                                              ; preds = %443
  %447 = load i8*, i8** %410, align 8
  call void @_ZdlPv(i8* %447) #14
  br label %448

448:                                              ; preds = %443, %446
  %449 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %450 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %449, i64 0, i32 1, i32 0
  %451 = load i8, i8* %450, align 1
  %452 = icmp slt i8 %451, 0
  br i1 %452, label %453, label %456

453:                                              ; preds = %448
  %454 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = load i8*, i8** %454, align 8
  call void @_ZdlPv(i8* %455) #14
  br label %456

456:                                              ; preds = %448, %453
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %405) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %404) #12
  %457 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %458 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %457, i64 0, i32 1, i32 0
  %459 = load i8, i8* %458, align 1
  %460 = icmp slt i8 %459, 0
  br i1 %460, label %461, label %463

461:                                              ; preds = %456
  %462 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %462) #14
  br label %463

463:                                              ; preds = %456, %461
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  %464 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %465 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %464, i64 0, i32 1, i32 0
  %466 = load i8, i8* %465, align 1
  %467 = icmp slt i8 %466, 0
  br i1 %467, label %468, label %470

468:                                              ; preds = %463
  %469 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %469) #14
  br label %470

470:                                              ; preds = %463, %468
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  ret void
}

declare i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"* nocapture readonly dereferenceable(48), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  %9 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %14 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %14, i64 0, i32 2
  %16 = load %class.GrShaderCaps*, %class.GrShaderCaps** %15, align 8
  %17 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %16, i64 0, i32 2
  %18 = bitcast i56* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 68719476736
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  switch i32 %12, label %24 [
    i32 59, label %23
    i32 57, label %23
  ]

23:                                               ; preds = %22, %22
  tail call void @_ZN4SkSL17GLSLCodeGenerator37writeShortCircuitWorkaroundExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::BinaryExpression"* dereferenceable(48) %1, i32 %2)
  br label %348

24:                                               ; preds = %3, %22
  %25 = and i64 %19, 8796093022208
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.SkSL::Expression"* %6 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %29 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %29, i64 3
  %31 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %30, align 8
  %32 = tail call dereferenceable(184) %"class.SkSL::Type"* %31(%"class.SkSL::Expression"* %6) #12
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %32, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %36, label %49

36:                                               ; preds = %27
  %37 = bitcast %"class.SkSL::Expression"* %8 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %38 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %38, i64 3
  %40 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %39, align 8
  %41 = tail call dereferenceable(184) %"class.SkSL::Type"* %40(%"class.SkSL::Expression"* %8) #12
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 4
  %45 = add i32 %12, -65
  %46 = icmp ult i32 %45, 2
  %47 = and i1 %44, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %36
  tail call void @_ZN4SkSL17GLSLCodeGenerator31writeMatrixComparisonWorkaroundERKNS_16BinaryExpressionE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::BinaryExpression"* dereferenceable(48) %1)
  br label %348

49:                                               ; preds = %24, %36, %27
  %50 = call i32 @_ZNK4SkSL8Operator19getBinaryPrecedenceEv(%"class.SkSL::Operator"* nonnull %4) #12
  %51 = icmp sge i32 %50, %2
  br i1 %51, label %52, label %79

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i32 [ 0, %60 ], [ %69, %62 ]
  %64 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %61, align 8
  %65 = bitcast %"class.SkSL::OutputStream"* %64 to void (%"class.SkSL::OutputStream"*, i8*)***
  %66 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, i64 2
  %68 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %67, align 8
  call void %68(%"class.SkSL::OutputStream"* %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %69 = add nuw nsw i32 %63, 1
  %70 = load i32, i32* %57, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %62, label %72

72:                                               ; preds = %62, %52, %56
  %73 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %74 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %73, align 8
  %75 = bitcast %"class.SkSL::OutputStream"* %74 to void (%"class.SkSL::OutputStream"*, i8*)***
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, align 8
  call void %78(%"class.SkSL::OutputStream"* %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %53, align 8
  br label %79

79:                                               ; preds = %72, %49
  %80 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %81 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %80, align 8
  %82 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %83, i64 0, i32 0
  %85 = load i8, i8* %84, align 8
  %86 = icmp eq i8 %85, 1
  br i1 %86, label %87, label %246

87:                                               ; preds = %79
  %88 = call zeroext i1 @_ZNK4SkSL8Operator12isAssignmentEv(%"class.SkSL::Operator"* nonnull %4) #12
  br i1 %88, label %89, label %246

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %6, i64 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 44
  br i1 %92, label %93, label %246

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %6, i64 1, i32 0, i32 1
  %95 = bitcast i32* %94 to %"class.SkSL::Expression"**
  %96 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %95, align 8
  %97 = bitcast %"class.SkSL::Expression"* %96 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %98 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %98, i64 3
  %100 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %99, align 8
  %101 = call dereferenceable(184) %"class.SkSL::Type"* %100(%"class.SkSL::Expression"* %96) #12
  %102 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %6, i64 1
  %103 = bitcast %"class.SkSL::Expression"* %102 to i32*
  %104 = load i32, i32* %103, align 8
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %101, i64 0, i32 10, i32 0, i32 0
  %107 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %106, align 8
  %108 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %107, i64 %105, i32 1, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %107, i64 %105, i32 1, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = call zeroext i1 @_ZN4SkSLeqEPKcNS_14StringFragmentE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i64 0, i64 0), i8* %109, i64 %111) #12
  br i1 %112, label %113, label %246

113:                                              ; preds = %93
  %114 = bitcast %"class.SkSL::Expression"* %8 to i1 (%"class.SkSL::Expression"*, i32)***
  %115 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %114, align 8
  %116 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %115, i64 7
  %117 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %116, align 8
  %118 = call zeroext i1 %117(%"class.SkSL::Expression"* %8, i32 1) #12
  br i1 %118, label %246, label %119

119:                                              ; preds = %113
  %120 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %13, align 8
  %121 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %120, i64 0, i32 2
  %122 = load %class.GrShaderCaps*, %class.GrShaderCaps** %121, align 8
  %123 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %122, i64 0, i32 2
  %124 = bitcast i56* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 8589934592
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %246

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %130 = load i8, i8* %129, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %148, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i32 [ 0, %136 ], [ %145, %138 ]
  %140 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %137, align 8
  %141 = bitcast %"class.SkSL::OutputStream"* %140 to void (%"class.SkSL::OutputStream"*, i8*)***
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %142, i64 2
  %144 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %145 = add nuw nsw i32 %139, 1
  %146 = load i32, i32* %133, align 4
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %138, label %148

148:                                              ; preds = %138, %128, %132
  %149 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %150 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %151 = bitcast %"class.SkSL::OutputStream"* %150 to void (%"class.SkSL::OutputStream"*, i8*)***
  %152 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %152, i64 2
  %154 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %153, align 8
  call void %154(%"class.SkSL::OutputStream"* %150, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.111, i64 0, i64 0)) #12
  store i8 0, i8* %129, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %6, i32 %50)
  %155 = load i8, i8* %129, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %171, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %171

161:                                              ; preds = %157, %161
  %162 = phi i32 [ %168, %161 ], [ 0, %157 ]
  %163 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %164 = bitcast %"class.SkSL::OutputStream"* %163 to void (%"class.SkSL::OutputStream"*, i8*)***
  %165 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %165, i64 2
  %167 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, align 8
  call void %167(%"class.SkSL::OutputStream"* %163, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %168 = add nuw nsw i32 %162, 1
  %169 = load i32, i32* %158, align 4
  %170 = icmp slt i32 %168, %169
  br i1 %170, label %161, label %171

171:                                              ; preds = %161, %148, %157
  %172 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %173 = bitcast %"class.SkSL::OutputStream"* %172 to void (%"class.SkSL::OutputStream"*, i8*)***
  %174 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, i64 2
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, align 8
  call void %176(%"class.SkSL::OutputStream"* %172, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %129, align 8
  %177 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #12
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 0
  %180 = load i8, i8* %129, align 8
  %181 = icmp eq i8 %180, 0
  br i1 %179, label %203, label %182

182:                                              ; preds = %171
  br i1 %181, label %197, label %183

183:                                              ; preds = %182
  %184 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %197

187:                                              ; preds = %183, %187
  %188 = phi i32 [ %194, %187 ], [ 0, %183 ]
  %189 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %190 = bitcast %"class.SkSL::OutputStream"* %189 to void (%"class.SkSL::OutputStream"*, i8*)***
  %191 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %191, i64 2
  %193 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %192, align 8
  call void %193(%"class.SkSL::OutputStream"* %189, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %194 = add nuw nsw i32 %188, 1
  %195 = load i32, i32* %184, align 4
  %196 = icmp slt i32 %194, %195
  br i1 %196, label %187, label %197

197:                                              ; preds = %187, %182, %183
  %198 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %199 = bitcast %"class.SkSL::OutputStream"* %198 to void (%"class.SkSL::OutputStream"*, i8*)***
  %200 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %200, i64 2
  %202 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %201, align 8
  call void %202(%"class.SkSL::OutputStream"* %198, i8* %177) #12
  store i8 0, i8* %129, align 8
  br label %218

203:                                              ; preds = %171
  br i1 %181, label %218, label %204

204:                                              ; preds = %203
  %205 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %206 = load i32, i32* %205, align 4
  %207 = icmp sgt i32 %206, 0
  br i1 %207, label %208, label %218

208:                                              ; preds = %204, %208
  %209 = phi i32 [ %215, %208 ], [ 0, %204 ]
  %210 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %211 = bitcast %"class.SkSL::OutputStream"* %210 to void (%"class.SkSL::OutputStream"*, i8*)***
  %212 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, i64 2
  %214 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %213, align 8
  call void %214(%"class.SkSL::OutputStream"* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %215 = add nuw nsw i32 %209, 1
  %216 = load i32, i32* %205, align 4
  %217 = icmp slt i32 %215, %216
  br i1 %217, label %208, label %218

218:                                              ; preds = %208, %197, %203, %204
  %219 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %220 = bitcast %"class.SkSL::OutputStream"* %219 to void (%"class.SkSL::OutputStream"*, i8*)***
  %221 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %221, i64 2
  %223 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %222, align 8
  call void %223(%"class.SkSL::OutputStream"* %219, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %129, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %8, i32 %50)
  %224 = load i8, i8* %129, align 8, !range !2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %240, label %226

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %228 = load i32, i32* %227, align 4
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %240

230:                                              ; preds = %226, %230
  %231 = phi i32 [ %237, %230 ], [ 0, %226 ]
  %232 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %233 = bitcast %"class.SkSL::OutputStream"* %232 to void (%"class.SkSL::OutputStream"*, i8*)***
  %234 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %234, i64 2
  %236 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %235, align 8
  call void %236(%"class.SkSL::OutputStream"* %232, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %237 = add nuw nsw i32 %231, 1
  %238 = load i32, i32* %227, align 4
  %239 = icmp slt i32 %237, %238
  br i1 %239, label %230, label %240

240:                                              ; preds = %230, %218, %226
  %241 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %242 = bitcast %"class.SkSL::OutputStream"* %241 to void (%"class.SkSL::OutputStream"*, i8*)***
  %243 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %243, i64 2
  %245 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %244, align 8
  call void %245(%"class.SkSL::OutputStream"* %241, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %129, align 8
  br label %320

246:                                              ; preds = %79, %87, %89, %93, %113, %119
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %6, i32 %50)
  %247 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %248 = load i8, i8* %247, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %266, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %252 = load i32, i32* %251, align 4
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %266

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %256

256:                                              ; preds = %256, %254
  %257 = phi i32 [ 0, %254 ], [ %263, %256 ]
  %258 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %255, align 8
  %259 = bitcast %"class.SkSL::OutputStream"* %258 to void (%"class.SkSL::OutputStream"*, i8*)***
  %260 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %260, i64 2
  %262 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %261, align 8
  call void %262(%"class.SkSL::OutputStream"* %258, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %263 = add nuw nsw i32 %257, 1
  %264 = load i32, i32* %251, align 4
  %265 = icmp slt i32 %263, %264
  br i1 %265, label %256, label %266

266:                                              ; preds = %256, %246, %250
  %267 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %268 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %269 = bitcast %"class.SkSL::OutputStream"* %268 to void (%"class.SkSL::OutputStream"*, i8*)***
  %270 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %269, align 8
  %271 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %270, i64 2
  %272 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %271, align 8
  call void %272(%"class.SkSL::OutputStream"* %268, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %247, align 8
  %273 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #12
  %274 = load i8, i8* %273, align 1
  %275 = icmp eq i8 %274, 0
  %276 = load i8, i8* %247, align 8
  %277 = icmp eq i8 %276, 0
  br i1 %275, label %299, label %278

278:                                              ; preds = %266
  br i1 %277, label %293, label %279

279:                                              ; preds = %278
  %280 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %281 = load i32, i32* %280, align 4
  %282 = icmp sgt i32 %281, 0
  br i1 %282, label %283, label %293

283:                                              ; preds = %279, %283
  %284 = phi i32 [ %290, %283 ], [ 0, %279 ]
  %285 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %286 = bitcast %"class.SkSL::OutputStream"* %285 to void (%"class.SkSL::OutputStream"*, i8*)***
  %287 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %287, i64 2
  %289 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %288, align 8
  call void %289(%"class.SkSL::OutputStream"* %285, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %290 = add nuw nsw i32 %284, 1
  %291 = load i32, i32* %280, align 4
  %292 = icmp slt i32 %290, %291
  br i1 %292, label %283, label %293

293:                                              ; preds = %283, %278, %279
  %294 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %295 = bitcast %"class.SkSL::OutputStream"* %294 to void (%"class.SkSL::OutputStream"*, i8*)***
  %296 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %296, i64 2
  %298 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %297, align 8
  call void %298(%"class.SkSL::OutputStream"* %294, i8* %273) #12
  store i8 0, i8* %247, align 8
  br label %314

299:                                              ; preds = %266
  br i1 %277, label %314, label %300

300:                                              ; preds = %299
  %301 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %302 = load i32, i32* %301, align 4
  %303 = icmp sgt i32 %302, 0
  br i1 %303, label %304, label %314

304:                                              ; preds = %300, %304
  %305 = phi i32 [ %311, %304 ], [ 0, %300 ]
  %306 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %307 = bitcast %"class.SkSL::OutputStream"* %306 to void (%"class.SkSL::OutputStream"*, i8*)***
  %308 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %308, i64 2
  %310 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %309, align 8
  call void %310(%"class.SkSL::OutputStream"* %306, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %311 = add nuw nsw i32 %305, 1
  %312 = load i32, i32* %301, align 4
  %313 = icmp slt i32 %311, %312
  br i1 %313, label %304, label %314

314:                                              ; preds = %304, %293, %299, %300
  %315 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %316 = bitcast %"class.SkSL::OutputStream"* %315 to void (%"class.SkSL::OutputStream"*, i8*)***
  %317 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %317, i64 2
  %319 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %318, align 8
  call void %319(%"class.SkSL::OutputStream"* %315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %247, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %8, i32 %50)
  br label %320

320:                                              ; preds = %314, %240
  br i1 %51, label %321, label %348

321:                                              ; preds = %320
  %322 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %323 = load i8, i8* %322, align 8, !range !2
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %341, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %327 = load i32, i32* %326, align 4
  %328 = icmp sgt i32 %327, 0
  br i1 %328, label %329, label %341

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %331

331:                                              ; preds = %331, %329
  %332 = phi i32 [ 0, %329 ], [ %338, %331 ]
  %333 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %330, align 8
  %334 = bitcast %"class.SkSL::OutputStream"* %333 to void (%"class.SkSL::OutputStream"*, i8*)***
  %335 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %335, i64 2
  %337 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %336, align 8
  call void %337(%"class.SkSL::OutputStream"* %333, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %338 = add nuw nsw i32 %332, 1
  %339 = load i32, i32* %326, align 4
  %340 = icmp slt i32 %338, %339
  br i1 %340, label %331, label %341

341:                                              ; preds = %331, %321, %325
  %342 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %343 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %342, align 8
  %344 = bitcast %"class.SkSL::OutputStream"* %343 to void (%"class.SkSL::OutputStream"*, i8*)***
  %345 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %344, align 8
  %346 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %345, i64 2
  %347 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %346, align 8
  call void %347(%"class.SkSL::OutputStream"* %343, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %322, align 8
  br label %348

348:                                              ; preds = %320, %341, %48, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator37writeShortCircuitWorkaroundExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::BinaryExpression"* nocapture readonly dereferenceable(48), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 16
  br i1 %4, label %5, label %32

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %5, %9
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %25, %3
  %33 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %33, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %34, i32 15)
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i32 [ 0, %42 ], [ %51, %44 ]
  %46 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %43, align 8
  %47 = bitcast %"class.SkSL::OutputStream"* %46 to void (%"class.SkSL::OutputStream"*, i8*)***
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, i64 2
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, align 8
  tail call void %50(%"class.SkSL::OutputStream"* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %51 = add nuw nsw i32 %45, 1
  %52 = load i32, i32* %39, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %44, label %54

54:                                               ; preds = %44, %32, %38
  %55 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %56 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %57 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, align 8
  tail call void %60(%"class.SkSL::OutputStream"* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  %61 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 2, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 59
  br i1 %63, label %70, label %64

64:                                               ; preds = %54
  %65 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %66 = bitcast %"class.SkSL::OutputStream"* %65 to void (%"class.SkSL::OutputStream"*, i8*)***
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %67, i64 2
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, align 8
  tail call void %69(%"class.SkSL::OutputStream"* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  br label %89

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %71, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %72, i32 15)
  %73 = load i8, i8* %35, align 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %89

79:                                               ; preds = %75, %79
  %80 = phi i32 [ %86, %79 ], [ 0, %75 ]
  %81 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %82 = bitcast %"class.SkSL::OutputStream"* %81 to void (%"class.SkSL::OutputStream"*, i8*)***
  %83 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %83, i64 2
  %85 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %84, align 8
  tail call void %85(%"class.SkSL::OutputStream"* %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %86 = add nuw nsw i32 %80, 1
  %87 = load i32, i32* %76, align 4
  %88 = icmp slt i32 %86, %87
  br i1 %88, label %79, label %89

89:                                               ; preds = %79, %64, %70, %75
  %90 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %91 = bitcast %"class.SkSL::OutputStream"* %90 to void (%"class.SkSL::OutputStream"*, i8*)***
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %92, i64 2
  %94 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %93, align 8
  tail call void %94(%"class.SkSL::OutputStream"* %90, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  %95 = load i32, i32* %61, align 8
  %96 = icmp eq i32 %95, 59
  br i1 %96, label %97, label %103

97:                                               ; preds = %89
  %98 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %99 = bitcast %"class.SkSL::OutputStream"* %98 to void (%"class.SkSL::OutputStream"*, i8*)***
  %100 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %100, i64 2
  %102 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %101, align 8
  tail call void %102(%"class.SkSL::OutputStream"* %98, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  br label %106

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %104, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %105, i32 15)
  br label %106

106:                                              ; preds = %103, %97
  br i1 %4, label %107, label %130

107:                                              ; preds = %106
  %108 = load i8, i8* %35, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %124, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %110, %114
  %115 = phi i32 [ %121, %114 ], [ 0, %110 ]
  %116 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %117 = bitcast %"class.SkSL::OutputStream"* %116 to void (%"class.SkSL::OutputStream"*, i8*)***
  %118 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, i64 2
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %119, align 8
  tail call void %120(%"class.SkSL::OutputStream"* %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %121 = add nuw nsw i32 %115, 1
  %122 = load i32, i32* %111, align 4
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %114, label %124

124:                                              ; preds = %114, %107, %110
  %125 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %126 = bitcast %"class.SkSL::OutputStream"* %125 to void (%"class.SkSL::OutputStream"*, i8*)***
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %127, i64 2
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %128, align 8
  tail call void %129(%"class.SkSL::OutputStream"* %125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  br label %130

130:                                              ; preds = %124, %106
  ret void
}

declare i32 @_ZNK4SkSL8Operator19getBinaryPrecedenceEv(%"class.SkSL::Operator"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK4SkSL8Operator12isAssignmentEv(%"class.SkSL::Operator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::TernaryExpression"* nocapture readonly dereferenceable(48), i32) unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 16
  br i1 %4, label %5, label %32

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %5, %9
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %25, %3
  %33 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %33, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %34, i32 15)
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i32 [ 0, %42 ], [ %51, %44 ]
  %46 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %43, align 8
  %47 = bitcast %"class.SkSL::OutputStream"* %46 to void (%"class.SkSL::OutputStream"*, i8*)***
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, i64 2
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, align 8
  tail call void %50(%"class.SkSL::OutputStream"* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %51 = add nuw nsw i32 %45, 1
  %52 = load i32, i32* %39, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %44, label %54

54:                                               ; preds = %44, %32, %38
  %55 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %56 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %57 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, align 8
  tail call void %60(%"class.SkSL::OutputStream"* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  %61 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %62, i32 15)
  %63 = load i8, i8* %35, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %79

69:                                               ; preds = %65, %69
  %70 = phi i32 [ %76, %69 ], [ 0, %65 ]
  %71 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %72 = bitcast %"class.SkSL::OutputStream"* %71 to void (%"class.SkSL::OutputStream"*, i8*)***
  %73 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, i64 2
  %75 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %74, align 8
  tail call void %75(%"class.SkSL::OutputStream"* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %76 = add nuw nsw i32 %70, 1
  %77 = load i32, i32* %66, align 4
  %78 = icmp slt i32 %76, %77
  br i1 %78, label %69, label %79

79:                                               ; preds = %69, %54, %65
  %80 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %81 = bitcast %"class.SkSL::OutputStream"* %80 to void (%"class.SkSL::OutputStream"*, i8*)***
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %82, i64 2
  %84 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %83, align 8
  tail call void %84(%"class.SkSL::OutputStream"* %80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  %85 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %85, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %86, i32 15)
  br i1 %4, label %87, label %110

87:                                               ; preds = %79
  %88 = load i8, i8* %35, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %104, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %104

94:                                               ; preds = %90, %94
  %95 = phi i32 [ %101, %94 ], [ 0, %90 ]
  %96 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %97 = bitcast %"class.SkSL::OutputStream"* %96 to void (%"class.SkSL::OutputStream"*, i8*)***
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, i64 2
  %100 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %99, align 8
  tail call void %100(%"class.SkSL::OutputStream"* %96, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %101 = add nuw nsw i32 %95, 1
  %102 = load i32, i32* %91, align 4
  %103 = icmp slt i32 %101, %102
  br i1 %103, label %94, label %104

104:                                              ; preds = %94, %87, %90
  %105 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %106 = bitcast %"class.SkSL::OutputStream"* %105 to void (%"class.SkSL::OutputStream"*, i8*)***
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %107, i64 2
  %109 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %108, align 8
  tail call void %109(%"class.SkSL::OutputStream"* %105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %35, align 8
  br label %110

110:                                              ; preds = %104, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::GLSLCodeGenerator"* nocapture, %"class.SkSL::Literal.154"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = getelementptr inbounds %"class.SkSL::Literal.154", %"class.SkSL::Literal.154"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %14 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %14, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %15, align 8
  %17 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 0
  %19 = bitcast i8** %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  store <2 x i64> %20, <2 x i64>* %4, align 16
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %22, i64 %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  br i1 %25, label %26, label %83

26:                                               ; preds = %2
  %27 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.SkSL::Literal.154", %"class.SkSL::Literal.154"* %1, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 4294967295
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %7, i64 %31) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115, i64 0, i64 0)) #12
  %32 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %27
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %69, label %41

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i32 [ 0, %49 ], [ %58, %51 ]
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %50, align 8
  %54 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, align 8
  call void %57(%"class.SkSL::OutputStream"* %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %58 = add nuw nsw i32 %52, 1
  %59 = load i32, i32* %46, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %51, label %61

61:                                               ; preds = %51, %45, %41
  %62 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %63 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %62, align 8
  %64 = bitcast %"class.SkSL::OutputStream"* %63 to void (%"class.SkSL::OutputStream"*, i8*)***
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %65, i64 2
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, align 8
  call void %67(%"class.SkSL::OutputStream"* %63, i8* %38) #12
  store i8 0, i8* %42, align 8
  %68 = load i8, i8* %33, align 1
  br label %69

69:                                               ; preds = %26, %61
  %70 = phi i8 [ %34, %26 ], [ %68, %61 ]
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %73) #14
  br label %74

74:                                               ; preds = %69, %72
  %75 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  br label %199

83:                                               ; preds = %2
  %84 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %85 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %13, align 8
  %86 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %85, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %87 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %86, align 8
  %88 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #12
  %89 = bitcast i8** %18 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8
  store <2 x i64> %90, <2 x i64>* %3, align 16
  %91 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %87, i64 0, i32 0, i32 1, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %87, i64 0, i32 0, i32 1, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %84, i8* %92, i64 %94) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #12
  br i1 %95, label %96, label %153

96:                                               ; preds = %83
  %97 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #12
  %98 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %99 = getelementptr inbounds %"class.SkSL::Literal.154", %"class.SkSL::Literal.154"* %1, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 65535
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %9, i64 %101) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115, i64 0, i64 0)) #12
  %102 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = select i1 %105, i8* %107, i8* %97
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %139, label %111

111:                                              ; preds = %96
  %112 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i32 [ 0, %119 ], [ %128, %121 ]
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %120, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %128 = add nuw nsw i32 %122, 1
  %129 = load i32, i32* %116, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %121, label %131

131:                                              ; preds = %121, %115, %111
  %132 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %132, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %133, i8* %108) #12
  store i8 0, i8* %112, align 8
  %138 = load i8, i8* %103, align 1
  br label %139

139:                                              ; preds = %96, %131
  %140 = phi i8 [ %104, %96 ], [ %138, %131 ]
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %143) #14
  br label %144

144:                                              ; preds = %139, %142
  %145 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #14
  br label %152

152:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  br label %199

153:                                              ; preds = %83
  %154 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #12
  %155 = getelementptr inbounds %"class.SkSL::Literal.154", %"class.SkSL::Literal.154"* %1, i64 0, i32 1
  %156 = load i64, i64* %155, align 8
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %10, i64 %156) #12
  %157 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  %161 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = select i1 %160, i8* %162, i8* %154
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %194, label %166

166:                                              ; preds = %153
  %167 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %168 = load i8, i8* %167, align 8, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %186, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %172 = load i32, i32* %171, align 4
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %186

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i32 [ 0, %174 ], [ %183, %176 ]
  %178 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %175, align 8
  %179 = bitcast %"class.SkSL::OutputStream"* %178 to void (%"class.SkSL::OutputStream"*, i8*)***
  %180 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %180, i64 2
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %181, align 8
  call void %182(%"class.SkSL::OutputStream"* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %183 = add nuw nsw i32 %177, 1
  %184 = load i32, i32* %171, align 4
  %185 = icmp slt i32 %183, %184
  br i1 %185, label %176, label %186

186:                                              ; preds = %176, %170, %166
  %187 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %188 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %187, align 8
  %189 = bitcast %"class.SkSL::OutputStream"* %188 to void (%"class.SkSL::OutputStream"*, i8*)***
  %190 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, i64 2
  %192 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %191, align 8
  call void %192(%"class.SkSL::OutputStream"* %188, i8* %163) #12
  store i8 0, i8* %167, align 8
  %193 = load i8, i8* %158, align 1
  br label %194

194:                                              ; preds = %153, %186
  %195 = phi i8 [ %159, %153 ], [ %193, %186 ]
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %194
  %198 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %198) #14
  br label %199

199:                                              ; preds = %197, %194, %152, %82
  %200 = phi i8* [ %97, %152 ], [ %27, %82 ], [ %154, %194 ], [ %154, %197 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #12
  ret void
}

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::GLSLCodeGenerator"* nocapture, %"class.SkSL::Literal.153"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.SkSL::Literal.153", %"class.SkSL::Literal.153"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = fpext float %6 to double
  call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* nonnull sret %3, double %7) #12
  %8 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %4
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i32 [ 0, %25 ], [ %34, %27 ]
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %34 = add nuw nsw i32 %28, 1
  %35 = load i32, i32* %22, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %27, %21, %17
  %38 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %38, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  call void %43(%"class.SkSL::OutputStream"* %39, i8* %14) #12
  store i8 0, i8* %18, align 8
  %44 = load i8, i8* %9, align 1
  br label %45

45:                                               ; preds = %2, %37
  %46 = phi i8 [ %10, %2 ], [ %44, %37 ]
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

declare void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret, double) local_unnamed_addr #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator12writeSettingERKNS_7SettingE(%"class.SkSL::GLSLCodeGenerator"* nocapture readnone, %"class.SkSL::Setting"* nocapture readnone dereferenceable(48)) unnamed_addr #5 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i64 0, i64 0), i32 1013, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.116, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.std::__1::vector.204", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 4
  %15 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %14, align 8
  %16 = tail call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %15) #12
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i32 [ 0, %27 ], [ %36, %29 ]
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %36 = add nuw nsw i32 %30, 1
  %37 = load i32, i32* %24, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %29, label %39

39:                                               ; preds = %29, %23, %19
  %40 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %41 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %41 to void (%"class.SkSL::OutputStream"*, i8*)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, align 8
  tail call void %45(%"class.SkSL::OutputStream"* %41, i8* %16) #12
  store i8 0, i8* %20, align 8
  br label %46

46:                                               ; preds = %2, %39
  %47 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %14, align 8
  %48 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  %49 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %50 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %50, i64 5
  %52 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %51, align 8
  call void %52(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %47) #12
  %53 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = select i1 %56, i8* %58, i8* %48
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %90, label %62

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %82, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i32 [ 0, %70 ], [ %79, %72 ]
  %74 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %71, align 8
  %75 = bitcast %"class.SkSL::OutputStream"* %74 to void (%"class.SkSL::OutputStream"*, i8*)***
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, align 8
  call void %78(%"class.SkSL::OutputStream"* %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %79 = add nuw nsw i32 %73, 1
  %80 = load i32, i32* %67, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %72, label %82

82:                                               ; preds = %72, %66, %62
  %83 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %84 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %83, align 8
  %85 = bitcast %"class.SkSL::OutputStream"* %84 to void (%"class.SkSL::OutputStream"*, i8*)***
  %86 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, i64 2
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, align 8
  call void %88(%"class.SkSL::OutputStream"* %84, i8* %59) #12
  store i8 0, i8* %63, align 8
  %89 = load i8, i8* %54, align 1
  br label %90

90:                                               ; preds = %82, %46
  %91 = phi i8 [ %55, %46 ], [ %89, %82 ]
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %90, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  %96 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  %97 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #12
  %98 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  call void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::FunctionDeclaration"* %1) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #12
  %99 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = select i1 %102, i8* %104, i8* %96
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %136, label %108

108:                                              ; preds = %95
  %109 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %128, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i32 [ 0, %116 ], [ %125, %118 ]
  %120 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %117, align 8
  %121 = bitcast %"class.SkSL::OutputStream"* %120 to void (%"class.SkSL::OutputStream"*, i8*)***
  %122 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, i64 2
  %124 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %125 = add nuw nsw i32 %119, 1
  %126 = load i32, i32* %113, align 4
  %127 = icmp slt i32 %125, %126
  br i1 %127, label %118, label %128

128:                                              ; preds = %118, %112, %108
  %129 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %130 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %129, align 8
  %131 = bitcast %"class.SkSL::OutputStream"* %130 to void (%"class.SkSL::OutputStream"*, i8*)***
  %132 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %132, i64 2
  %134 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %133, align 8
  call void %134(%"class.SkSL::OutputStream"* %130, i8* %105) #12
  store i8 0, i8* %109, align 8
  %135 = load i8, i8* %100, align 1
  br label %136

136:                                              ; preds = %95, %128
  %137 = phi i8 [ %101, %95 ], [ %135, %128 ]
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %140) #14
  br label %141

141:                                              ; preds = %136, %139
  %142 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #14
  br label %149

149:                                              ; preds = %141, %146
  %150 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  call void @_ZdlPv(i8* %156) #14
  br label %157

157:                                              ; preds = %149, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  %158 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 0
  %159 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %158, align 8
  %160 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %161 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %160, align 8
  %162 = icmp eq %"class.SkSL::Variable"** %159, %161
  br i1 %162, label %201, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 6
  %165 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %166 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %167 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %168 = bitcast %"class.std::__1::vector.204"* %8 to i8*
  %169 = getelementptr inbounds %"class.std::__1::vector.204", %"class.std::__1::vector.204"* %8, i64 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.std::__1::vector.204", %"class.std::__1::vector.204"* %8, i64 0, i32 0, i32 1
  %171 = getelementptr inbounds %"class.std::__1::vector.204", %"class.std::__1::vector.204"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %172 = bitcast i32** %170 to i64*
  %173 = bitcast %"class.std::__1::vector.204"* %8 to i64*
  %174 = bitcast i32** %171 to i64*
  %175 = bitcast %"class.SkSL::String"* %3 to i8*
  %176 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.SkSL::String"* %9 to i8*
  %180 = bitcast %"class.SkSL::String"* %10 to i8*
  %181 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %183 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %184 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.SkSL::String"* %11 to i8*
  %190 = bitcast %"class.SkSL::String"* %12 to i8*
  %191 = bitcast %"class.SkSL::String"* %13 to i8*
  %192 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %195, i64 0, i32 1, i32 0
  %197 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %228

201:                                              ; preds = %504, %157
  %202 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %203 = load i8, i8* %202, align 8, !range !2
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %221, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %207 = load i32, i32* %206, align 4
  %208 = icmp sgt i32 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %211

211:                                              ; preds = %211, %209
  %212 = phi i32 [ 0, %209 ], [ %218, %211 ]
  %213 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %210, align 8
  %214 = bitcast %"class.SkSL::OutputStream"* %213 to void (%"class.SkSL::OutputStream"*, i8*)***
  %215 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %215, i64 2
  %217 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %216, align 8
  call void %217(%"class.SkSL::OutputStream"* %213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %218 = add nuw nsw i32 %212, 1
  %219 = load i32, i32* %206, align 4
  %220 = icmp slt i32 %218, %219
  br i1 %220, label %211, label %221

221:                                              ; preds = %211, %201, %205
  %222 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %223 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %222, align 8
  %224 = bitcast %"class.SkSL::OutputStream"* %223 to void (%"class.SkSL::OutputStream"*, i8*)***
  %225 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %225, i64 2
  %227 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %226, align 8
  call void %227(%"class.SkSL::OutputStream"* %223, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  store i8 0, i8* %202, align 8
  ret void

228:                                              ; preds = %163, %504
  %229 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), %163 ], [ %505, %504 ]
  %230 = phi %"class.SkSL::Variable"** [ %159, %163 ], [ %506, %504 ]
  %231 = load i8, i8* %164, align 1, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %240, label %233

233:                                              ; preds = %228
  %234 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %230, align 8
  %235 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %234, i64 0, i32 2
  %236 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %235, align 8
  %237 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %236, i64 0, i32 0, i32 6
  %238 = load i32, i32* %237, align 8
  %239 = icmp eq i32 %238, -1
  br i1 %239, label %240, label %504

240:                                              ; preds = %228, %233
  %241 = load i8, i8* %229, align 1
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %265, label %243

243:                                              ; preds = %240
  %244 = load i8, i8* %165, align 8, !range !2
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %259, label %246

246:                                              ; preds = %243
  %247 = load i32, i32* %166, align 4
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %259

249:                                              ; preds = %246, %249
  %250 = phi i32 [ %256, %249 ], [ 0, %246 ]
  %251 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %252 = bitcast %"class.SkSL::OutputStream"* %251 to void (%"class.SkSL::OutputStream"*, i8*)***
  %253 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %252, align 8
  %254 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %253, i64 2
  %255 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %254, align 8
  call void %255(%"class.SkSL::OutputStream"* %251, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %256 = add nuw nsw i32 %250, 1
  %257 = load i32, i32* %166, align 4
  %258 = icmp slt i32 %256, %257
  br i1 %258, label %249, label %259

259:                                              ; preds = %249, %246, %243
  %260 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %261 = bitcast %"class.SkSL::OutputStream"* %260 to void (%"class.SkSL::OutputStream"*, i8*)***
  %262 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %261, align 8
  %263 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %262, i64 2
  %264 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %263, align 8
  call void %264(%"class.SkSL::OutputStream"* %260, i8* %229) #12
  store i8 0, i8* %165, align 8
  br label %265

265:                                              ; preds = %240, %259
  %266 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %230, align 8
  %267 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %266, i64 0, i32 2
  %268 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %267, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %268, i1 zeroext false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 0, i64 24, i1 false) #12
  %269 = bitcast %"class.SkSL::Variable"** %230 to %"class.SkSL::Symbol"**
  %270 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %269, align 8
  %271 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %270, i64 0, i32 2
  %272 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %271, align 8
  %273 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %272, i64 0, i32 3
  %274 = load i32, i32* %273, align 8
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %265
  %277 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %272, i64 0, i32 8
  %278 = load i32, i32* %277, align 8
  %279 = call i8* @_Znwm(i64 4) #14
  %280 = bitcast i8* %279 to i32*
  %281 = getelementptr inbounds i8, i8* %279, i64 4
  %282 = ptrtoint i8* %281 to i64
  store i32 %278, i32* %280, align 4
  %283 = ptrtoint i8* %279 to i64
  store i64 %283, i64* %173, align 8
  store i64 %282, i64* %172, align 8
  store i64 %282, i64* %174, align 8
  %284 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %272, i64 0, i32 6
  %285 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %284, align 8
  %286 = icmp eq %"class.SkSL::Type"* %285, null
  %287 = select i1 %286, %"class.SkSL::Type"* %272, %"class.SkSL::Type"* %285
  br label %288

288:                                              ; preds = %276, %265
  %289 = phi %"class.SkSL::Type"* [ %287, %276 ], [ %272, %265 ]
  %290 = call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %289) #12
  %291 = load i8, i8* %290, align 1
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %315, label %293

293:                                              ; preds = %288
  %294 = load i8, i8* %165, align 8, !range !2
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %309, label %296

296:                                              ; preds = %293
  %297 = load i32, i32* %166, align 4
  %298 = icmp sgt i32 %297, 0
  br i1 %298, label %299, label %309

299:                                              ; preds = %296, %299
  %300 = phi i32 [ %306, %299 ], [ 0, %296 ]
  %301 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %302 = bitcast %"class.SkSL::OutputStream"* %301 to void (%"class.SkSL::OutputStream"*, i8*)***
  %303 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %303, i64 2
  %305 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %304, align 8
  call void %305(%"class.SkSL::OutputStream"* %301, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %306 = add nuw nsw i32 %300, 1
  %307 = load i32, i32* %166, align 4
  %308 = icmp slt i32 %306, %307
  br i1 %308, label %299, label %309

309:                                              ; preds = %299, %296, %293
  %310 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %311 = bitcast %"class.SkSL::OutputStream"* %310 to void (%"class.SkSL::OutputStream"*, i8*)***
  %312 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %312, i64 2
  %314 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %313, align 8
  call void %314(%"class.SkSL::OutputStream"* %310, i8* %290) #12
  store i8 0, i8* %165, align 8
  br label %315

315:                                              ; preds = %288, %309
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #12
  %316 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %49, align 8
  %317 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %316, i64 5
  %318 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %317, align 8
  call void %318(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %289) #12
  %319 = load i8, i8* %177, align 1
  %320 = icmp slt i8 %319, 0
  %321 = load i8*, i8** %178, align 8
  %322 = select i1 %320, i8* %321, i8* %175
  %323 = load i8, i8* %322, align 1
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %348, label %325

325:                                              ; preds = %315
  %326 = load i8, i8* %165, align 8, !range !2
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %341, label %328

328:                                              ; preds = %325
  %329 = load i32, i32* %166, align 4
  %330 = icmp sgt i32 %329, 0
  br i1 %330, label %331, label %341

331:                                              ; preds = %328, %331
  %332 = phi i32 [ %338, %331 ], [ 0, %328 ]
  %333 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %334 = bitcast %"class.SkSL::OutputStream"* %333 to void (%"class.SkSL::OutputStream"*, i8*)***
  %335 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %335, i64 2
  %337 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %336, align 8
  call void %337(%"class.SkSL::OutputStream"* %333, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %338 = add nuw nsw i32 %332, 1
  %339 = load i32, i32* %166, align 4
  %340 = icmp slt i32 %338, %339
  br i1 %340, label %331, label %341

341:                                              ; preds = %331, %328, %325
  %342 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %343 = bitcast %"class.SkSL::OutputStream"* %342 to void (%"class.SkSL::OutputStream"*, i8*)***
  %344 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %343, align 8
  %345 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %344, i64 2
  %346 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %345, align 8
  call void %346(%"class.SkSL::OutputStream"* %342, i8* %322) #12
  store i8 0, i8* %165, align 8
  %347 = load i8, i8* %177, align 1
  br label %348

348:                                              ; preds = %341, %315
  %349 = phi i8 [ %319, %315 ], [ %347, %341 ]
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %353

351:                                              ; preds = %348
  %352 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %352) #14
  br label %353

353:                                              ; preds = %348, %351
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #12
  %354 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %269, align 8
  %355 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %354, i64 0, i32 1, i32 0
  %356 = load i8*, i8** %355, align 8
  %357 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %354, i64 0, i32 1, i32 1
  %358 = load i64, i64* %357, align 8
  %359 = icmp ugt i64 %358, -17
  br i1 %359, label %360, label %362

360:                                              ; preds = %353
  %361 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %361) #15
  unreachable

362:                                              ; preds = %353
  %363 = icmp ult i64 %358, 23
  br i1 %363, label %369, label %364

364:                                              ; preds = %362
  %365 = add nuw i64 %358, 16
  %366 = and i64 %365, -16
  %367 = call i8* @_Znwm(i64 %366) #14
  store i8* %367, i8** %181, align 8
  %368 = or i64 %366, -9223372036854775808
  store i64 %368, i64* %182, align 8
  store i64 %358, i64* %183, align 8
  br label %372

369:                                              ; preds = %362
  %370 = trunc i64 %358 to i8
  store i8 %370, i8* %185, align 1
  %371 = icmp eq i64 %358, 0
  br i1 %371, label %374, label %372

372:                                              ; preds = %369, %364
  %373 = phi i8* [ %367, %364 ], [ %180, %369 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %373, i8* align 1 %356, i64 %358, i1 false) #12
  br label %374

374:                                              ; preds = %369, %372
  %375 = phi i8* [ %180, %369 ], [ %373, %372 ]
  %376 = getelementptr inbounds i8, i8* %375, i64 %358
  store i8 0, i8* %376, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %10) #12
  %377 = load i8, i8* %187, align 1
  %378 = icmp slt i8 %377, 0
  %379 = load i8*, i8** %188, align 8
  %380 = select i1 %378, i8* %379, i8* %179
  %381 = load i8, i8* %380, align 1
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %406, label %383

383:                                              ; preds = %374
  %384 = load i8, i8* %165, align 8, !range !2
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %399, label %386

386:                                              ; preds = %383
  %387 = load i32, i32* %166, align 4
  %388 = icmp sgt i32 %387, 0
  br i1 %388, label %389, label %399

389:                                              ; preds = %386, %389
  %390 = phi i32 [ %396, %389 ], [ 0, %386 ]
  %391 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %392 = bitcast %"class.SkSL::OutputStream"* %391 to void (%"class.SkSL::OutputStream"*, i8*)***
  %393 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %392, align 8
  %394 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %393, i64 2
  %395 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %394, align 8
  call void %395(%"class.SkSL::OutputStream"* %391, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %396 = add nuw nsw i32 %390, 1
  %397 = load i32, i32* %166, align 4
  %398 = icmp slt i32 %396, %397
  br i1 %398, label %389, label %399

399:                                              ; preds = %389, %386, %383
  %400 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %401 = bitcast %"class.SkSL::OutputStream"* %400 to void (%"class.SkSL::OutputStream"*, i8*)***
  %402 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %401, align 8
  %403 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %402, i64 2
  %404 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %403, align 8
  call void %404(%"class.SkSL::OutputStream"* %400, i8* %380) #12
  store i8 0, i8* %165, align 8
  %405 = load i8, i8* %187, align 1
  br label %406

406:                                              ; preds = %374, %399
  %407 = phi i8 [ %377, %374 ], [ %405, %399 ]
  %408 = icmp slt i8 %407, 0
  br i1 %408, label %409, label %411

409:                                              ; preds = %406
  %410 = load i8*, i8** %188, align 8
  call void @_ZdlPv(i8* %410) #14
  br label %411

411:                                              ; preds = %406, %409
  %412 = load i8, i8* %185, align 1
  %413 = icmp slt i8 %412, 0
  br i1 %413, label %414, label %416

414:                                              ; preds = %411
  %415 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %415) #14
  br label %416

416:                                              ; preds = %411, %414
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #12
  %417 = load i32*, i32** %169, align 8
  %418 = load i32*, i32** %170, align 8
  %419 = icmp eq i32* %417, %418
  br i1 %419, label %422, label %429

420:                                              ; preds = %501
  %421 = load i32*, i32** %169, align 8
  br label %422

422:                                              ; preds = %420, %416
  %423 = phi i32* [ %421, %420 ], [ %417, %416 ]
  %424 = icmp eq i32* %423, null
  br i1 %424, label %428, label %425

425:                                              ; preds = %422
  %426 = ptrtoint i32* %423 to i64
  store i64 %426, i64* %172, align 8
  %427 = bitcast i32* %423 to i8*
  call void @_ZdlPv(i8* %427) #14
  br label %428

428:                                              ; preds = %422, %425
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #12
  br label %504

429:                                              ; preds = %416, %501
  %430 = phi i32* [ %502, %501 ], [ %417, %416 ]
  %431 = load i32, i32* %430, align 4
  %432 = icmp eq i32 %431, -1
  br i1 %432, label %433, label %455

433:                                              ; preds = %429
  %434 = load i8, i8* %165, align 8, !range !2
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %449, label %436

436:                                              ; preds = %433
  %437 = load i32, i32* %166, align 4
  %438 = icmp sgt i32 %437, 0
  br i1 %438, label %439, label %449

439:                                              ; preds = %436, %439
  %440 = phi i32 [ %446, %439 ], [ 0, %436 ]
  %441 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %442 = bitcast %"class.SkSL::OutputStream"* %441 to void (%"class.SkSL::OutputStream"*, i8*)***
  %443 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %442, align 8
  %444 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %443, i64 2
  %445 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %444, align 8
  call void %445(%"class.SkSL::OutputStream"* %441, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %446 = add nuw nsw i32 %440, 1
  %447 = load i32, i32* %166, align 4
  %448 = icmp slt i32 %446, %447
  br i1 %448, label %439, label %449

449:                                              ; preds = %439, %433, %436
  %450 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %451 = bitcast %"class.SkSL::OutputStream"* %450 to void (%"class.SkSL::OutputStream"*, i8*)***
  %452 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %451, align 8
  %453 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %452, i64 2
  %454 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %453, align 8
  call void %454(%"class.SkSL::OutputStream"* %450, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i64 0, i64 0)) #12
  store i8 0, i8* %165, align 8
  br label %501

455:                                              ; preds = %429
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #12
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %13, i32 %431) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %13) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12
  %456 = load i8, i8* %193, align 1
  %457 = icmp slt i8 %456, 0
  %458 = load i8*, i8** %194, align 8
  %459 = select i1 %457, i8* %458, i8* %189
  %460 = load i8, i8* %459, align 1
  %461 = icmp eq i8 %460, 0
  br i1 %461, label %485, label %462

462:                                              ; preds = %455
  %463 = load i8, i8* %165, align 8, !range !2
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %478, label %465

465:                                              ; preds = %462
  %466 = load i32, i32* %166, align 4
  %467 = icmp sgt i32 %466, 0
  br i1 %467, label %468, label %478

468:                                              ; preds = %465, %468
  %469 = phi i32 [ %475, %468 ], [ 0, %465 ]
  %470 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %471 = bitcast %"class.SkSL::OutputStream"* %470 to void (%"class.SkSL::OutputStream"*, i8*)***
  %472 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %471, align 8
  %473 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %472, i64 2
  %474 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %473, align 8
  call void %474(%"class.SkSL::OutputStream"* %470, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %475 = add nuw nsw i32 %469, 1
  %476 = load i32, i32* %166, align 4
  %477 = icmp slt i32 %475, %476
  br i1 %477, label %468, label %478

478:                                              ; preds = %468, %465, %462
  %479 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %167, align 8
  %480 = bitcast %"class.SkSL::OutputStream"* %479 to void (%"class.SkSL::OutputStream"*, i8*)***
  %481 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %480, align 8
  %482 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %481, i64 2
  %483 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %482, align 8
  call void %483(%"class.SkSL::OutputStream"* %479, i8* %459) #12
  store i8 0, i8* %165, align 8
  %484 = load i8, i8* %193, align 1
  br label %485

485:                                              ; preds = %455, %478
  %486 = phi i8 [ %456, %455 ], [ %484, %478 ]
  %487 = icmp slt i8 %486, 0
  br i1 %487, label %488, label %490

488:                                              ; preds = %485
  %489 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %489) #14
  br label %490

490:                                              ; preds = %485, %488
  %491 = load i8, i8* %196, align 1
  %492 = icmp slt i8 %491, 0
  br i1 %492, label %493, label %495

493:                                              ; preds = %490
  %494 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %494) #14
  br label %495

495:                                              ; preds = %490, %493
  %496 = load i8, i8* %199, align 1
  %497 = icmp slt i8 %496, 0
  br i1 %497, label %498, label %500

498:                                              ; preds = %495
  %499 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %499) #14
  br label %500

500:                                              ; preds = %495, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #12
  br label %501

501:                                              ; preds = %500, %449
  %502 = getelementptr inbounds i32, i32* %430, i64 1
  %503 = icmp eq i32* %502, %418
  br i1 %503, label %420, label %429

504:                                              ; preds = %233, %428
  %505 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), %428 ], [ %229, %233 ]
  %506 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %230, i64 1
  %507 = icmp eq %"class.SkSL::Variable"** %506, %161
  br i1 %507, label %201, label %228
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator13writeFunctionERKNS_18FunctionDefinitionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"* nocapture readonly dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::StringStream", align 16
  %4 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 16
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 17
  store i8 0, i8* %5, align 2
  %6 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %7 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %6, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %7)
  %8 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32 [ 0, %15 ], [ %24, %17 ]
  %19 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %16, align 8
  %20 = bitcast %"class.SkSL::OutputStream"* %19 to void (%"class.SkSL::OutputStream"*, i8*)***
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, i64 2
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %22, align 8
  tail call void %23(%"class.SkSL::OutputStream"* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %24 = add nuw nsw i32 %18, 1
  %25 = load i32, i32* %12, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %17, label %27

27:                                               ; preds = %17, %2, %11
  %28 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  tail call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #12
  store i8 0, i8* %8, align 8
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  tail call void %40(%"class.SkSL::OutputStream"* %34, i8* %36) #12
  store i8 1, i8* %8, align 8
  %41 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %41, align 4
  %44 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6
  %45 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %27
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %52, align 8
  br label %55

53:                                               ; preds = %27
  %54 = bitcast %"class.SkSL::String"* %44 to i8*
  store i8 0, i8* %54, align 1
  store i8 0, i8* %46, align 1
  br label %55

55:                                               ; preds = %49, %53
  %56 = bitcast %"class.SkSL::OutputStream"** %28 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.SkSL::StringStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 0, i32 0
  %60 = bitcast %"class.SkSL::StringStream"* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %60, align 16
  %61 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 1, i32 1
  %62 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 48, i1 false) #12
  %63 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 0
  store %"class.SkSL::OutputStream"* %63, %"class.SkSL::OutputStream"** %28, align 8
  %64 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = bitcast %"class.SkSL::Statement"** %64 to %"class.SkSL::Block"**
  %66 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %65, align 8
  %67 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %66, i64 0, i32 1, i32 0, i32 0, i64 16
  %68 = bitcast i8* %67 to %"class.std::__1::unique_ptr.155"**
  %69 = load %"class.std::__1::unique_ptr.155"*, %"class.std::__1::unique_ptr.155"** %68, align 8
  %70 = icmp eq %"class.std::__1::unique_ptr.155"* %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %55
  %72 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %66, i64 0, i32 1, i32 0, i32 0, i64 24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %69, i64 %76
  %78 = icmp eq i64 %76, 0
  br i1 %78, label %79, label %182

79:                                               ; preds = %202, %55, %71
  %80 = load i32, i32* %41, align 4
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %41, align 4
  %82 = load i8, i8* %8, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp sgt i32 %81, 0
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %96

86:                                               ; preds = %79, %86
  %87 = phi i32 [ %93, %86 ], [ 0, %79 ]
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %89 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, align 8
  call void %92(%"class.SkSL::OutputStream"* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %93 = add nuw nsw i32 %87, 1
  %94 = load i32, i32* %41, align 4
  %95 = icmp slt i32 %93, %94
  br i1 %95, label %86, label %96

96:                                               ; preds = %86, %79
  %97 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %98 = bitcast %"class.SkSL::OutputStream"* %97 to void (%"class.SkSL::OutputStream"*, i8*)***
  %99 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %99, i64 2
  %101 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %100, align 8
  call void %101(%"class.SkSL::OutputStream"* %97, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #12
  store i8 0, i8* %8, align 8
  %102 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %103 = load i8*, i8** %35, align 8
  %104 = bitcast %"class.SkSL::OutputStream"* %102 to void (%"class.SkSL::OutputStream"*, i8*)***
  %105 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, i64 2
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %106, align 8
  call void %107(%"class.SkSL::OutputStream"* %102, i8* %103) #12
  store i8 1, i8* %8, align 8
  store i64 %57, i64* %56, align 8
  %108 = load i8, i8* %46, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = bitcast %"class.SkSL::String"* %44 to i8*
  %113 = select i1 %109, i8* %111, i8* %112
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 0
  %116 = inttoptr i64 %57 to %"class.SkSL::OutputStream"*
  br i1 %115, label %137, label %117

117:                                              ; preds = %96
  %118 = load i32, i32* %41, align 4
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %120, label %131

120:                                              ; preds = %117, %120
  %121 = phi %"class.SkSL::OutputStream"* [ %130, %120 ], [ %116, %117 ]
  %122 = phi i32 [ %127, %120 ], [ 0, %117 ]
  %123 = bitcast %"class.SkSL::OutputStream"* %121 to void (%"class.SkSL::OutputStream"*, i8*)***
  %124 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %124, i64 2
  %126 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, align 8
  call void %126(%"class.SkSL::OutputStream"* %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %127 = add nuw nsw i32 %122, 1
  %128 = load i32, i32* %41, align 4
  %129 = icmp slt i32 %127, %128
  %130 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  br i1 %129, label %120, label %131

131:                                              ; preds = %120, %117
  %132 = phi %"class.SkSL::OutputStream"* [ %116, %117 ], [ %130, %120 ]
  %133 = bitcast %"class.SkSL::OutputStream"* %132 to void (%"class.SkSL::OutputStream"*, i8*)***
  %134 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %134, i64 2
  %136 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, align 8
  call void %136(%"class.SkSL::OutputStream"* %132, i8* %113) #12
  store i8 0, i8* %8, align 8
  br label %137

137:                                              ; preds = %96, %131
  %138 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* nonnull %3)
  %139 = bitcast %"class.SkSL::String"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  %143 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = bitcast %"class.SkSL::String"* %138 to i8*
  %146 = select i1 %142, i8* %144, i8* %145
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %171, label %149

149:                                              ; preds = %137
  %150 = load i8, i8* %8, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = load i32, i32* %41, align 4
  %154 = icmp sgt i32 %153, 0
  br i1 %154, label %155, label %165

155:                                              ; preds = %152, %155
  %156 = phi i32 [ %162, %155 ], [ 0, %152 ]
  %157 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %158 = bitcast %"class.SkSL::OutputStream"* %157 to void (%"class.SkSL::OutputStream"*, i8*)***
  %159 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, i64 2
  %161 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %162 = add nuw nsw i32 %156, 1
  %163 = load i32, i32* %41, align 4
  %164 = icmp slt i32 %162, %163
  br i1 %164, label %155, label %165

165:                                              ; preds = %155, %152, %149
  %166 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %167 = bitcast %"class.SkSL::OutputStream"* %166 to void (%"class.SkSL::OutputStream"*, i8*)***
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %168, i64 2
  %170 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %169, align 8
  call void %170(%"class.SkSL::OutputStream"* %166, i8* %146) #12
  store i8 0, i8* %8, align 8
  br label %171

171:                                              ; preds = %137, %165
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 16
  %172 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 2, i32 0
  %173 = bitcast %"class.std::__1::basic_string"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #14
  br label %180

180:                                              ; preds = %171, %177
  %181 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %181) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %58) #12
  ret void

182:                                              ; preds = %71, %202
  %183 = phi %"class.std::__1::unique_ptr.155"* [ %203, %202 ], [ %69, %71 ]
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %184, align 8
  %186 = bitcast %"class.SkSL::Statement"* %185 to i1 (%"class.SkSL::Statement"*)***
  %187 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %187, i64 3
  %189 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %188, align 8
  %190 = call zeroext i1 %189(%"class.SkSL::Statement"* %185) #12
  br i1 %190, label %202, label %191

191:                                              ; preds = %182
  %192 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %184, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %192)
  %193 = load i8, i8* %8, align 8, !range !2
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %202

195:                                              ; preds = %191
  %196 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %197 = load i8*, i8** %35, align 8
  %198 = bitcast %"class.SkSL::OutputStream"* %196 to void (%"class.SkSL::OutputStream"*, i8*)***
  %199 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %199, i64 2
  %201 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %200, align 8
  call void %201(%"class.SkSL::OutputStream"* %196, i8* %197) #12
  store i8 1, i8* %8, align 8
  br label %202

202:                                              ; preds = %195, %191, %182
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %183, i64 1
  %204 = icmp eq %"class.std::__1::unique_ptr.155"* %203, %77
  br i1 %204, label %79, label %182
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Statement"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %169 [
    i32 16, label %5
    i32 21, label %7
    i32 26, label %37
    i32 29, label %43
    i32 23, label %45
    i32 22, label %51
    i32 20, label %53
    i32 27, label %55
    i32 17, label %61
    i32 18, label %88
    i32 19, label %115
    i32 24, label %142
    i32 25, label %142
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::Block"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator10writeBlockERKNS_5BlockE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Block"* dereferenceable(72) %6)
  br label %169

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %9 = bitcast %"class.SkSL::Statement"* %8 to %"class.SkSL::Expression"**
  %10 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %9, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %10, i32 17)
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32 [ 0, %18 ], [ %27, %20 ]
  %22 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %19, align 8
  %23 = bitcast %"class.SkSL::OutputStream"* %22 to void (%"class.SkSL::OutputStream"*, i8*)***
  %24 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, align 8
  tail call void %26(%"class.SkSL::OutputStream"* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %27 = add nuw nsw i32 %21, 1
  %28 = load i32, i32* %15, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %20, label %30

30:                                               ; preds = %20, %7, %14
  %31 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %32 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %31, align 8
  %33 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*)***
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, i64 2
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, align 8
  tail call void %36(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %11, align 8
  br label %169

37:                                               ; preds = %2
  %38 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::ReturnStatement"*
  %39 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)***
  %40 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)** %40, i64 23
  %42 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"*)** %41, align 8
  tail call void %42(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::ReturnStatement"* dereferenceable(24) %38) #12
  br label %169

43:                                               ; preds = %2
  %44 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::VarDeclaration"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::VarDeclaration"* dereferenceable(48) %44, i1 zeroext false)
  br label %169

45:                                               ; preds = %2
  %46 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::IfStatement"*
  %47 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)***
  %48 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)** %48, i64 21
  %50 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"*)** %49, align 8
  tail call void %50(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::IfStatement"* dereferenceable(48) %46) #12
  br label %169

51:                                               ; preds = %2
  %52 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::ForStatement"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator17writeForStatementERKNS_12ForStatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::ForStatement"* dereferenceable(64) %52)
  br label %169

53:                                               ; preds = %2
  %54 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::DoStatement"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator16writeDoStatementERKNS_11DoStatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::DoStatement"* dereferenceable(32) %54)
  br label %169

55:                                               ; preds = %2
  %56 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::SwitchStatement"*
  %57 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)***
  %58 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)** %58, i64 22
  %60 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"*)** %59, align 8
  tail call void %60(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::SwitchStatement"* dereferenceable(80) %56) #12
  br label %169

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %81, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i32 [ 0, %69 ], [ %78, %71 ]
  %73 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %70, align 8
  %74 = bitcast %"class.SkSL::OutputStream"* %73 to void (%"class.SkSL::OutputStream"*, i8*)***
  %75 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %75, i64 2
  %77 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, align 8
  tail call void %77(%"class.SkSL::OutputStream"* %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %78 = add nuw nsw i32 %72, 1
  %79 = load i32, i32* %66, align 4
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %71, label %81

81:                                               ; preds = %71, %61, %65
  %82 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %83 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %82, align 8
  %84 = bitcast %"class.SkSL::OutputStream"* %83 to void (%"class.SkSL::OutputStream"*, i8*)***
  %85 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %85, i64 2
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, align 8
  tail call void %87(%"class.SkSL::OutputStream"* %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i64 0, i64 0)) #12
  store i8 0, i8* %62, align 8
  br label %169

88:                                               ; preds = %2
  %89 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %108, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i32 [ 0, %96 ], [ %105, %98 ]
  %100 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %97, align 8
  %101 = bitcast %"class.SkSL::OutputStream"* %100 to void (%"class.SkSL::OutputStream"*, i8*)***
  %102 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %102, i64 2
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %103, align 8
  tail call void %104(%"class.SkSL::OutputStream"* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %105 = add nuw nsw i32 %99, 1
  %106 = load i32, i32* %93, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %98, label %108

108:                                              ; preds = %98, %88, %92
  %109 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %110 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %109, align 8
  %111 = bitcast %"class.SkSL::OutputStream"* %110 to void (%"class.SkSL::OutputStream"*, i8*)***
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, i64 2
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %113, align 8
  tail call void %114(%"class.SkSL::OutputStream"* %110, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.131, i64 0, i64 0)) #12
  store i8 0, i8* %89, align 8
  br label %169

115:                                              ; preds = %2
  %116 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %117 = load i8, i8* %116, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i32 [ 0, %123 ], [ %132, %125 ]
  %127 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %124, align 8
  %128 = bitcast %"class.SkSL::OutputStream"* %127 to void (%"class.SkSL::OutputStream"*, i8*)***
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %129, i64 2
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, align 8
  tail call void %131(%"class.SkSL::OutputStream"* %127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %132 = add nuw nsw i32 %126, 1
  %133 = load i32, i32* %120, align 4
  %134 = icmp slt i32 %132, %133
  br i1 %134, label %125, label %135

135:                                              ; preds = %125, %115, %119
  %136 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %137 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %136, align 8
  %138 = bitcast %"class.SkSL::OutputStream"* %137 to void (%"class.SkSL::OutputStream"*, i8*)***
  %139 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %139, i64 2
  %141 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %140, align 8
  tail call void %141(%"class.SkSL::OutputStream"* %137, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i64 0, i64 0)) #12
  store i8 0, i8* %116, align 8
  br label %169

142:                                              ; preds = %2, %2
  %143 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %144 = load i8, i8* %143, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %162, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i32 %148, 0
  br i1 %149, label %150, label %162

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %152

152:                                              ; preds = %152, %150
  %153 = phi i32 [ 0, %150 ], [ %159, %152 ]
  %154 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %151, align 8
  %155 = bitcast %"class.SkSL::OutputStream"* %154 to void (%"class.SkSL::OutputStream"*, i8*)***
  %156 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %156, i64 2
  %158 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %157, align 8
  tail call void %158(%"class.SkSL::OutputStream"* %154, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %159 = add nuw nsw i32 %153, 1
  %160 = load i32, i32* %147, align 4
  %161 = icmp slt i32 %159, %160
  br i1 %161, label %152, label %162

162:                                              ; preds = %152, %142, %146
  %163 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %164 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %163, align 8
  %165 = bitcast %"class.SkSL::OutputStream"* %164 to void (%"class.SkSL::OutputStream"*, i8*)***
  %166 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, i64 2
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %167, align 8
  tail call void %168(%"class.SkSL::OutputStream"* %164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %143, align 8
  br label %169

169:                                              ; preds = %2, %162, %135, %108, %81, %55, %53, %51, %45, %43, %37, %30, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2
  %5 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %66

17:                                               ; preds = %14
  %18 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* nonnull sret %2, %class.SkDynamicMemoryWStream* %20) #12
  %21 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = load %class.SkData*, %class.SkData** %19, align 8
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %17
  %29 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #15
  unreachable

30:                                               ; preds = %17
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #14
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %21, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %24, i64 %26, i1 false) #12
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %21, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  %50 = load i8, i8* %6, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %21, i64 24, i1 false) #12
  %57 = load %class.SkData*, %class.SkData** %19, align 8
  %58 = bitcast %class.SkData* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %59 = icmp eq %class.SkData* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %57) #12
  call void @_ZN6SkDatadlEPv(i8* nonnull %58) #12
  br label %65

65:                                               ; preds = %55, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %66

66:                                               ; preds = %14, %65
  ret %"class.SkSL::String"* %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD2Ev(%"class.SkSL::StringStream"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator22writeFunctionPrototypeERKNS_17FunctionPrototypeE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionPrototype"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::FunctionPrototype", %"class.SkSL::FunctionPrototype"* %1, i64 0, i32 1
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %3, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %4)
  %5 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 0, %12 ], [ %21, %14 ]
  %16 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %13, align 8
  %17 = bitcast %"class.SkSL::OutputStream"* %16 to void (%"class.SkSL::OutputStream"*, i8*)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::OutputStream"* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %21 = add nuw nsw i32 %15, 1
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %14, label %24

24:                                               ; preds = %14, %2, %8
  %25 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %5, align 8
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %32 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %31, i8* %33) #12
  store i8 1, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Layout"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = alloca %"class.SkSL::String", align 8
  %48 = alloca %"class.SkSL::String", align 8
  %49 = alloca %"class.SkSL::String", align 8
  %50 = alloca %"class.SkSL::String", align 8
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %"class.SkSL::String", align 8
  %53 = alloca %"class.SkSL::String", align 8
  %54 = alloca %"class.SkSL::String", align 8
  %55 = alloca %"class.SkSL::String", align 8
  %56 = alloca %"class.SkSL::String", align 8
  %57 = alloca %"class.SkSL::String", align 8
  %58 = alloca %"class.SkSL::String", align 8
  %59 = alloca %"class.SkSL::String", align 8
  %60 = alloca %"class.SkSL::String", align 8
  %61 = alloca %"class.SkSL::String", align 8
  %62 = alloca %"class.SkSL::String", align 8
  %63 = alloca %"class.SkSL::String", align 8
  %64 = alloca %"class.SkSL::String", align 8
  %65 = alloca %"class.SkSL::String", align 8
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #12
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %111

72:                                               ; preds = %2
  %73 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  %74 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #12
  %75 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 0, i8* %77, align 1, !alias.scope !3
  store i8 0, i8* %75, align 8, !alias.scope !3
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i64 0, i64 0)) #12
  %78 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #12
  %79 = load i32, i32* %69, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %79) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #12
  %80 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #12
  %81 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #14
  br label %88

88:                                               ; preds = %72, %85
  %89 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #12
  %97 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %96, %101
  %105 = load i8, i8* %77, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  br label %111

111:                                              ; preds = %110, %2
  %112 = phi i8 [ 0, %110 ], [ 1, %2 ]
  %113 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, -1
  br i1 %115, label %116, label %161

116:                                              ; preds = %111
  %117 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  %118 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #12
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #12
  %120 = icmp eq i8 %112, 0
  %121 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  br i1 %120, label %124, label %123

123:                                              ; preds = %116
  store i8 0, i8* %122, align 1, !alias.scope !6
  store i8 0, i8* %119, align 8, !alias.scope !6
  br label %127

124:                                              ; preds = %116
  store i8 2, i8* %122, align 1, !alias.scope !6
  %125 = bitcast %"class.SkSL::String"* %9 to i16*
  store i16 8236, i16* %125, align 8, !alias.scope !6
  %126 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 0, i8* %126, align 2, !alias.scope !6
  br label %127

127:                                              ; preds = %123, %124
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i64 0, i64 0)) #12
  %128 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #12
  %129 = load i32, i32* %113, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %129) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #12
  %130 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #12
  %131 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #14
  br label %138

138:                                              ; preds = %127, %135
  %139 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #14
  br label %146

146:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #12
  %147 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %146, %151
  %155 = load i8, i8* %122, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #14
  br label %160

160:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  br label %161

161:                                              ; preds = %160, %111
  %162 = phi i8 [ 0, %160 ], [ %112, %111 ]
  %163 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %211

166:                                              ; preds = %161
  %167 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #12
  %168 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #12
  %169 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #12
  %170 = icmp eq i8 %162, 0
  %171 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  br i1 %170, label %174, label %173

173:                                              ; preds = %166
  store i8 0, i8* %172, align 1, !alias.scope !9
  store i8 0, i8* %169, align 8, !alias.scope !9
  br label %177

174:                                              ; preds = %166
  store i8 2, i8* %172, align 1, !alias.scope !9
  %175 = bitcast %"class.SkSL::String"* %13 to i16*
  store i16 8236, i16* %175, align 8, !alias.scope !9
  %176 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 0, i8* %176, align 2, !alias.scope !9
  br label %177

177:                                              ; preds = %173, %174
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.165, i64 0, i64 0)) #12
  %178 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #12
  %179 = load i32, i32* %163, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %14, i32 %179) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #12
  %180 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #12
  %181 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #14
  br label %188

188:                                              ; preds = %177, %185
  %189 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #14
  br label %196

196:                                              ; preds = %188, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #12
  %197 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #14
  br label %204

204:                                              ; preds = %196, %201
  %205 = load i8, i8* %172, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #14
  br label %210

210:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #12
  br label %211

211:                                              ; preds = %210, %161
  %212 = phi i8 [ 0, %210 ], [ %162, %161 ]
  %213 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %216, label %261

216:                                              ; preds = %211
  %217 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #12
  %218 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #12
  %219 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #12
  %220 = icmp eq i8 %212, 0
  %221 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  br i1 %220, label %224, label %223

223:                                              ; preds = %216
  store i8 0, i8* %222, align 1, !alias.scope !12
  store i8 0, i8* %219, align 8, !alias.scope !12
  br label %227

224:                                              ; preds = %216
  store i8 2, i8* %222, align 1, !alias.scope !12
  %225 = bitcast %"class.SkSL::String"* %17 to i16*
  store i16 8236, i16* %225, align 8, !alias.scope !12
  %226 = getelementptr inbounds i8, i8* %219, i64 2
  store i8 0, i8* %226, align 2, !alias.scope !12
  br label %227

227:                                              ; preds = %223, %224
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.166, i64 0, i64 0)) #12
  %228 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #12
  %229 = load i32, i32* %213, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %229) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, %"class.SkSL::String"* nonnull dereferenceable(24) %18) #12
  %230 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #12
  %231 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #14
  br label %238

238:                                              ; preds = %227, %235
  %239 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #14
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #12
  %247 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #14
  br label %254

254:                                              ; preds = %246, %251
  %255 = load i8, i8* %222, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #14
  br label %260

260:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #12
  br label %261

261:                                              ; preds = %260, %211
  %262 = phi i8 [ 0, %260 ], [ %212, %211 ]
  %263 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, -1
  br i1 %265, label %266, label %311

266:                                              ; preds = %261
  %267 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #12
  %268 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #12
  %269 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #12
  %270 = icmp eq i8 %262, 0
  %271 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  br i1 %270, label %274, label %273

273:                                              ; preds = %266
  store i8 0, i8* %272, align 1, !alias.scope !15
  store i8 0, i8* %269, align 8, !alias.scope !15
  br label %277

274:                                              ; preds = %266
  store i8 2, i8* %272, align 1, !alias.scope !15
  %275 = bitcast %"class.SkSL::String"* %21 to i16*
  store i16 8236, i16* %275, align 8, !alias.scope !15
  %276 = getelementptr inbounds i8, i8* %269, i64 2
  store i8 0, i8* %276, align 2, !alias.scope !15
  br label %277

277:                                              ; preds = %273, %274
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.167, i64 0, i64 0)) #12
  %278 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #12
  %279 = load i32, i32* %263, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %22, i32 %279) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %22) #12
  %280 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #12
  %281 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #14
  br label %288

288:                                              ; preds = %277, %285
  %289 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #14
  br label %296

296:                                              ; preds = %288, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #12
  %297 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #14
  br label %304

304:                                              ; preds = %296, %301
  %305 = load i8, i8* %272, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #12
  br label %311

311:                                              ; preds = %310, %261
  %312 = phi i8 [ 0, %310 ], [ %262, %261 ]
  %313 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, -1
  br i1 %315, label %316, label %361

316:                                              ; preds = %311
  %317 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #12
  %318 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #12
  %319 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #12
  %320 = icmp eq i8 %312, 0
  %321 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  br i1 %320, label %324, label %323

323:                                              ; preds = %316
  store i8 0, i8* %322, align 1, !alias.scope !18
  store i8 0, i8* %319, align 8, !alias.scope !18
  br label %327

324:                                              ; preds = %316
  store i8 2, i8* %322, align 1, !alias.scope !18
  %325 = bitcast %"class.SkSL::String"* %25 to i16*
  store i16 8236, i16* %325, align 8, !alias.scope !18
  %326 = getelementptr inbounds i8, i8* %319, i64 2
  store i8 0, i8* %326, align 2, !alias.scope !18
  br label %327

327:                                              ; preds = %323, %324
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.168, i64 0, i64 0)) #12
  %328 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #12
  %329 = load i32, i32* %313, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %26, i32 %329) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, %"class.SkSL::String"* nonnull dereferenceable(24) %26) #12
  %330 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #12
  %331 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #14
  br label %338

338:                                              ; preds = %327, %335
  %339 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #14
  br label %346

346:                                              ; preds = %338, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #12
  %347 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %353) #14
  br label %354

354:                                              ; preds = %346, %351
  %355 = load i8, i8* %322, align 1
  %356 = icmp slt i8 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %359) #14
  br label %360

360:                                              ; preds = %354, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #12
  br label %361

361:                                              ; preds = %360, %311
  %362 = phi i8 [ 0, %360 ], [ %312, %311 ]
  %363 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %411

366:                                              ; preds = %361
  %367 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %367) #12
  %368 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #12
  %369 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #12
  %370 = icmp eq i8 %362, 0
  %371 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  br i1 %370, label %374, label %373

373:                                              ; preds = %366
  store i8 0, i8* %372, align 1, !alias.scope !21
  store i8 0, i8* %369, align 8, !alias.scope !21
  br label %377

374:                                              ; preds = %366
  store i8 2, i8* %372, align 1, !alias.scope !21
  %375 = bitcast %"class.SkSL::String"* %29 to i16*
  store i16 8236, i16* %375, align 8, !alias.scope !21
  %376 = getelementptr inbounds i8, i8* %369, i64 2
  store i8 0, i8* %376, align 2, !alias.scope !21
  br label %377

377:                                              ; preds = %373, %374
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.169, i64 0, i64 0)) #12
  %378 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #12
  %379 = load i32, i32* %363, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %30, i32 %379) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %30) #12
  %380 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %27) #12
  %381 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #14
  br label %388

388:                                              ; preds = %377, %385
  %389 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #14
  br label %396

396:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #12
  %397 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  call void @_ZdlPv(i8* %403) #14
  br label %404

404:                                              ; preds = %396, %401
  %405 = load i8, i8* %372, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %410

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #14
  br label %410

410:                                              ; preds = %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %367) #12
  br label %411

411:                                              ; preds = %410, %361
  %412 = phi i8 [ 0, %410 ], [ %362, %361 ]
  %413 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %444, label %417

417:                                              ; preds = %411
  %418 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #12
  %419 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #12
  %420 = icmp eq i8 %412, 0
  %421 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  br i1 %420, label %424, label %423

423:                                              ; preds = %417
  store i8 0, i8* %422, align 1, !alias.scope !24
  store i8 0, i8* %419, align 8, !alias.scope !24
  br label %427

424:                                              ; preds = %417
  store i8 2, i8* %422, align 1, !alias.scope !24
  %425 = bitcast %"class.SkSL::String"* %32 to i16*
  store i16 8236, i16* %425, align 8, !alias.scope !24
  %426 = getelementptr inbounds i8, i8* %419, i64 2
  store i8 0, i8* %426, align 2, !alias.scope !24
  br label %427

427:                                              ; preds = %423, %424
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %31, %"class.SkSL::String"* nonnull %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.170, i64 0, i64 0)) #12
  %428 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %31) #12
  %429 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  %431 = load i8, i8* %430, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %427
  %434 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #14
  br label %436

436:                                              ; preds = %427, %433
  %437 = load i8, i8* %422, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %442

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  call void @_ZdlPv(i8* %441) #14
  br label %442

442:                                              ; preds = %436, %439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #12
  %443 = load i32, i32* %413, align 8
  br label %444

444:                                              ; preds = %411, %442
  %445 = phi i32 [ %414, %411 ], [ %443, %442 ]
  %446 = phi i8 [ %412, %411 ], [ 0, %442 ]
  %447 = and i32 %445, 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %476, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #12
  %451 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #12
  %452 = icmp eq i8 %446, 0
  %453 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %453, i64 0, i32 1, i32 0
  br i1 %452, label %456, label %455

455:                                              ; preds = %449
  store i8 0, i8* %454, align 1, !alias.scope !27
  store i8 0, i8* %451, align 8, !alias.scope !27
  br label %459

456:                                              ; preds = %449
  store i8 2, i8* %454, align 1, !alias.scope !27
  %457 = bitcast %"class.SkSL::String"* %34 to i16*
  store i16 8236, i16* %457, align 8, !alias.scope !27
  %458 = getelementptr inbounds i8, i8* %451, i64 2
  store i8 0, i8* %458, align 2, !alias.scope !27
  br label %459

459:                                              ; preds = %455, %456
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %33, %"class.SkSL::String"* nonnull %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.171, i64 0, i64 0)) #12
  %460 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %33) #12
  %461 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i8*, i8** %466, align 8
  call void @_ZdlPv(i8* %467) #14
  br label %468

468:                                              ; preds = %459, %465
  %469 = load i8, i8* %454, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  call void @_ZdlPv(i8* %473) #14
  br label %474

474:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #12
  %475 = load i32, i32* %413, align 8
  br label %476

476:                                              ; preds = %444, %474
  %477 = phi i32 [ %445, %444 ], [ %475, %474 ]
  %478 = phi i8 [ %446, %444 ], [ 0, %474 ]
  %479 = and i32 %477, 2
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %508, label %481

481:                                              ; preds = %476
  %482 = bitcast %"class.SkSL::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #12
  %483 = bitcast %"class.SkSL::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #12
  %484 = icmp eq i8 %478, 0
  %485 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  br i1 %484, label %488, label %487

487:                                              ; preds = %481
  store i8 0, i8* %486, align 1, !alias.scope !30
  store i8 0, i8* %483, align 8, !alias.scope !30
  br label %491

488:                                              ; preds = %481
  store i8 2, i8* %486, align 1, !alias.scope !30
  %489 = bitcast %"class.SkSL::String"* %36 to i16*
  store i16 8236, i16* %489, align 8, !alias.scope !30
  %490 = getelementptr inbounds i8, i8* %483, i64 2
  store i8 0, i8* %490, align 2, !alias.scope !30
  br label %491

491:                                              ; preds = %487, %488
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %35, %"class.SkSL::String"* nonnull %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0)) #12
  %492 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %35) #12
  %493 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #14
  br label %500

500:                                              ; preds = %491, %497
  %501 = load i8, i8* %486, align 1
  %502 = icmp slt i8 %501, 0
  br i1 %502, label %503, label %506

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  call void @_ZdlPv(i8* %505) #14
  br label %506

506:                                              ; preds = %500, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #12
  %507 = load i32, i32* %413, align 8
  br label %508

508:                                              ; preds = %476, %506
  %509 = phi i32 [ %477, %476 ], [ %507, %506 ]
  %510 = phi i8 [ %478, %476 ], [ 0, %506 ]
  %511 = and i32 %509, 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %539, label %513

513:                                              ; preds = %508
  %514 = bitcast %"class.SkSL::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #12
  %515 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %515) #12
  %516 = icmp eq i8 %510, 0
  %517 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %518 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %517, i64 0, i32 1, i32 0
  br i1 %516, label %520, label %519

519:                                              ; preds = %513
  store i8 0, i8* %518, align 1, !alias.scope !33
  store i8 0, i8* %515, align 8, !alias.scope !33
  br label %523

520:                                              ; preds = %513
  store i8 2, i8* %518, align 1, !alias.scope !33
  %521 = bitcast %"class.SkSL::String"* %38 to i16*
  store i16 8236, i16* %521, align 8, !alias.scope !33
  %522 = getelementptr inbounds i8, i8* %515, i64 2
  store i8 0, i8* %522, align 2, !alias.scope !33
  br label %523

523:                                              ; preds = %519, %520
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.173, i64 0, i64 0)) #12
  %524 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %37) #12
  %525 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %526 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %525, i64 0, i32 1, i32 0
  %527 = load i8, i8* %526, align 1
  %528 = icmp slt i8 %527, 0
  br i1 %528, label %529, label %532

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  call void @_ZdlPv(i8* %531) #14
  br label %532

532:                                              ; preds = %523, %529
  %533 = load i8, i8* %518, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %537) #14
  br label %538

538:                                              ; preds = %532, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %515) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #12
  br label %539

539:                                              ; preds = %508, %538
  %540 = phi i8 [ %510, %508 ], [ 0, %538 ]
  %541 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %542 = load i32, i32* %541, align 8
  switch i32 %542, label %721 [
    i32 0, label %543
    i32 1, label %568
    i32 2, label %593
    i32 3, label %618
    i32 4, label %643
    i32 5, label %668
    i32 6, label %693
  ]

543:                                              ; preds = %539
  %544 = bitcast %"class.SkSL::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #12
  %545 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #12
  %546 = icmp eq i8 %540, 0
  %547 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %548 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %547, i64 0, i32 1, i32 0
  br i1 %546, label %550, label %549

549:                                              ; preds = %543
  store i8 0, i8* %548, align 1, !alias.scope !36
  store i8 0, i8* %545, align 8, !alias.scope !36
  br label %553

550:                                              ; preds = %543
  store i8 2, i8* %548, align 1, !alias.scope !36
  %551 = bitcast %"class.SkSL::String"* %40 to i16*
  store i16 8236, i16* %551, align 8, !alias.scope !36
  %552 = getelementptr inbounds i8, i8* %545, i64 2
  store i8 0, i8* %552, align 2, !alias.scope !36
  br label %553

553:                                              ; preds = %549, %550
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %39, %"class.SkSL::String"* nonnull %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0)) #12
  %554 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %39) #12
  %555 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %553
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #14
  br label %562

562:                                              ; preds = %553, %559
  %563 = load i8, i8* %548, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %718

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  call void @_ZdlPv(i8* %567) #14
  br label %718

568:                                              ; preds = %539
  %569 = bitcast %"class.SkSL::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #12
  %570 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %570) #12
  %571 = icmp eq i8 %540, 0
  %572 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  br i1 %571, label %575, label %574

574:                                              ; preds = %568
  store i8 0, i8* %573, align 1, !alias.scope !39
  store i8 0, i8* %570, align 8, !alias.scope !39
  br label %578

575:                                              ; preds = %568
  store i8 2, i8* %573, align 1, !alias.scope !39
  %576 = bitcast %"class.SkSL::String"* %42 to i16*
  store i16 8236, i16* %576, align 8, !alias.scope !39
  %577 = getelementptr inbounds i8, i8* %570, i64 2
  store i8 0, i8* %577, align 2, !alias.scope !39
  br label %578

578:                                              ; preds = %574, %575
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %41, %"class.SkSL::String"* nonnull %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i64 0, i64 0)) #12
  %579 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %41) #12
  %580 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %581 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %580, i64 0, i32 1, i32 0
  %582 = load i8, i8* %581, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %578
  %585 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load i8*, i8** %585, align 8
  call void @_ZdlPv(i8* %586) #14
  br label %587

587:                                              ; preds = %578, %584
  %588 = load i8, i8* %573, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %718

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #14
  br label %718

593:                                              ; preds = %539
  %594 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %594) #12
  %595 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #12
  %596 = icmp eq i8 %540, 0
  %597 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  br i1 %596, label %600, label %599

599:                                              ; preds = %593
  store i8 0, i8* %598, align 1, !alias.scope !42
  store i8 0, i8* %595, align 8, !alias.scope !42
  br label %603

600:                                              ; preds = %593
  store i8 2, i8* %598, align 1, !alias.scope !42
  %601 = bitcast %"class.SkSL::String"* %44 to i16*
  store i16 8236, i16* %601, align 8, !alias.scope !42
  %602 = getelementptr inbounds i8, i8* %595, i64 2
  store i8 0, i8* %602, align 2, !alias.scope !42
  br label %603

603:                                              ; preds = %599, %600
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::String"* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i64 0, i64 0)) #12
  %604 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %43) #12
  %605 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %603
  %610 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #14
  br label %612

612:                                              ; preds = %603, %609
  %613 = load i8, i8* %598, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %718

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load i8*, i8** %616, align 8
  call void @_ZdlPv(i8* %617) #14
  br label %718

618:                                              ; preds = %539
  %619 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %619) #12
  %620 = bitcast %"class.SkSL::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %620) #12
  %621 = icmp eq i8 %540, 0
  %622 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  br i1 %621, label %625, label %624

624:                                              ; preds = %618
  store i8 0, i8* %623, align 1, !alias.scope !45
  store i8 0, i8* %620, align 8, !alias.scope !45
  br label %628

625:                                              ; preds = %618
  store i8 2, i8* %623, align 1, !alias.scope !45
  %626 = bitcast %"class.SkSL::String"* %46 to i16*
  store i16 8236, i16* %626, align 8, !alias.scope !45
  %627 = getelementptr inbounds i8, i8* %620, i64 2
  store i8 0, i8* %627, align 2, !alias.scope !45
  br label %628

628:                                              ; preds = %624, %625
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::String"* nonnull %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.177, i64 0, i64 0)) #12
  %629 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %45) #12
  %630 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #14
  br label %637

637:                                              ; preds = %628, %634
  %638 = load i8, i8* %623, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %718

640:                                              ; preds = %637
  %641 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i8*, i8** %641, align 8
  call void @_ZdlPv(i8* %642) #14
  br label %718

643:                                              ; preds = %539
  %644 = bitcast %"class.SkSL::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #12
  %645 = bitcast %"class.SkSL::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %645) #12
  %646 = icmp eq i8 %540, 0
  %647 = bitcast %"class.SkSL::String"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %648 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %647, i64 0, i32 1, i32 0
  br i1 %646, label %650, label %649

649:                                              ; preds = %643
  store i8 0, i8* %648, align 1, !alias.scope !48
  store i8 0, i8* %645, align 8, !alias.scope !48
  br label %653

650:                                              ; preds = %643
  store i8 2, i8* %648, align 1, !alias.scope !48
  %651 = bitcast %"class.SkSL::String"* %48 to i16*
  store i16 8236, i16* %651, align 8, !alias.scope !48
  %652 = getelementptr inbounds i8, i8* %645, i64 2
  store i8 0, i8* %652, align 2, !alias.scope !48
  br label %653

653:                                              ; preds = %649, %650
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %47, %"class.SkSL::String"* nonnull %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0)) #12
  %654 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %47) #12
  %655 = bitcast %"class.SkSL::String"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #14
  br label %662

662:                                              ; preds = %653, %659
  %663 = load i8, i8* %648, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %718

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load i8*, i8** %666, align 8
  call void @_ZdlPv(i8* %667) #14
  br label %718

668:                                              ; preds = %539
  %669 = bitcast %"class.SkSL::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %669) #12
  %670 = bitcast %"class.SkSL::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %670) #12
  %671 = icmp eq i8 %540, 0
  %672 = bitcast %"class.SkSL::String"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  br i1 %671, label %675, label %674

674:                                              ; preds = %668
  store i8 0, i8* %673, align 1, !alias.scope !51
  store i8 0, i8* %670, align 8, !alias.scope !51
  br label %678

675:                                              ; preds = %668
  store i8 2, i8* %673, align 1, !alias.scope !51
  %676 = bitcast %"class.SkSL::String"* %50 to i16*
  store i16 8236, i16* %676, align 8, !alias.scope !51
  %677 = getelementptr inbounds i8, i8* %670, i64 2
  store i8 0, i8* %677, align 2, !alias.scope !51
  br label %678

678:                                              ; preds = %674, %675
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %49, %"class.SkSL::String"* nonnull %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.179, i64 0, i64 0)) #12
  %679 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %49) #12
  %680 = bitcast %"class.SkSL::String"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %681 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %680, i64 0, i32 1, i32 0
  %682 = load i8, i8* %681, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %678
  %685 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = load i8*, i8** %685, align 8
  call void @_ZdlPv(i8* %686) #14
  br label %687

687:                                              ; preds = %678, %684
  %688 = load i8, i8* %673, align 1
  %689 = icmp slt i8 %688, 0
  br i1 %689, label %690, label %718

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i8*, i8** %691, align 8
  call void @_ZdlPv(i8* %692) #14
  br label %718

693:                                              ; preds = %539
  %694 = bitcast %"class.SkSL::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #12
  %695 = bitcast %"class.SkSL::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %695) #12
  %696 = icmp eq i8 %540, 0
  %697 = bitcast %"class.SkSL::String"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  br i1 %696, label %700, label %699

699:                                              ; preds = %693
  store i8 0, i8* %698, align 1, !alias.scope !54
  store i8 0, i8* %695, align 8, !alias.scope !54
  br label %703

700:                                              ; preds = %693
  store i8 2, i8* %698, align 1, !alias.scope !54
  %701 = bitcast %"class.SkSL::String"* %52 to i16*
  store i16 8236, i16* %701, align 8, !alias.scope !54
  %702 = getelementptr inbounds i8, i8* %695, i64 2
  store i8 0, i8* %702, align 2, !alias.scope !54
  br label %703

703:                                              ; preds = %699, %700
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %51, %"class.SkSL::String"* nonnull %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i64 0, i64 0)) #12
  %704 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %51) #12
  %705 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %706 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %705, i64 0, i32 1, i32 0
  %707 = load i8, i8* %706, align 1
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %709, label %712

709:                                              ; preds = %703
  %710 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  call void @_ZdlPv(i8* %711) #14
  br label %712

712:                                              ; preds = %703, %709
  %713 = load i8, i8* %698, align 1
  %714 = icmp slt i8 %713, 0
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8
  call void @_ZdlPv(i8* %717) #14
  br label %718

718:                                              ; preds = %715, %712, %690, %687, %665, %662, %640, %637, %615, %612, %590, %587, %565, %562
  %719 = phi i8* [ %545, %562 ], [ %545, %565 ], [ %570, %587 ], [ %570, %590 ], [ %595, %612 ], [ %595, %615 ], [ %620, %637 ], [ %620, %640 ], [ %645, %662 ], [ %645, %665 ], [ %670, %687 ], [ %670, %690 ], [ %695, %712 ], [ %695, %715 ]
  %720 = phi i8* [ %544, %562 ], [ %544, %565 ], [ %569, %587 ], [ %569, %590 ], [ %594, %612 ], [ %594, %615 ], [ %619, %637 ], [ %619, %640 ], [ %644, %662 ], [ %644, %665 ], [ %669, %687 ], [ %669, %690 ], [ %694, %712 ], [ %694, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %719) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %720) #12
  br label %721

721:                                              ; preds = %718, %539
  %722 = phi i8 [ %540, %539 ], [ 0, %718 ]
  %723 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %724 = load i32, i32* %723, align 4
  %725 = icmp sgt i32 %724, -1
  br i1 %725, label %726, label %771

726:                                              ; preds = %721
  %727 = bitcast %"class.SkSL::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #12
  %728 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %728) #12
  %729 = bitcast %"class.SkSL::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %729) #12
  %730 = icmp eq i8 %722, 0
  %731 = bitcast %"class.SkSL::String"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  br i1 %730, label %734, label %733

733:                                              ; preds = %726
  store i8 0, i8* %732, align 1, !alias.scope !57
  store i8 0, i8* %729, align 8, !alias.scope !57
  br label %737

734:                                              ; preds = %726
  store i8 2, i8* %732, align 1, !alias.scope !57
  %735 = bitcast %"class.SkSL::String"* %55 to i16*
  store i16 8236, i16* %735, align 8, !alias.scope !57
  %736 = getelementptr inbounds i8, i8* %729, i64 2
  store i8 0, i8* %736, align 2, !alias.scope !57
  br label %737

737:                                              ; preds = %733, %734
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %54, %"class.SkSL::String"* nonnull %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.181, i64 0, i64 0)) #12
  %738 = bitcast %"class.SkSL::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %738) #12
  %739 = load i32, i32* %723, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %56, i32 %739) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %53, %"class.SkSL::String"* nonnull %54, %"class.SkSL::String"* nonnull dereferenceable(24) %56) #12
  %740 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %53) #12
  %741 = bitcast %"class.SkSL::String"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %742 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %741, i64 0, i32 1, i32 0
  %743 = load i8, i8* %742, align 1
  %744 = icmp slt i8 %743, 0
  br i1 %744, label %745, label %748

745:                                              ; preds = %737
  %746 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = load i8*, i8** %746, align 8
  call void @_ZdlPv(i8* %747) #14
  br label %748

748:                                              ; preds = %737, %745
  %749 = bitcast %"class.SkSL::String"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %750 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %749, i64 0, i32 1, i32 0
  %751 = load i8, i8* %750, align 1
  %752 = icmp slt i8 %751, 0
  br i1 %752, label %753, label %756

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i8*, i8** %754, align 8
  call void @_ZdlPv(i8* %755) #14
  br label %756

756:                                              ; preds = %748, %753
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %738) #12
  %757 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %758 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %757, i64 0, i32 1, i32 0
  %759 = load i8, i8* %758, align 1
  %760 = icmp slt i8 %759, 0
  br i1 %760, label %761, label %764

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load i8*, i8** %762, align 8
  call void @_ZdlPv(i8* %763) #14
  br label %764

764:                                              ; preds = %756, %761
  %765 = load i8, i8* %732, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %770

767:                                              ; preds = %764
  %768 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load i8*, i8** %768, align 8
  call void @_ZdlPv(i8* %769) #14
  br label %770

770:                                              ; preds = %764, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %729) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %728) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #12
  br label %771

771:                                              ; preds = %770, %721
  %772 = phi i8 [ 0, %770 ], [ %722, %721 ]
  %773 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %774 = load i32, i32* %773, align 8
  %775 = icmp sgt i32 %774, -1
  br i1 %775, label %776, label %821

776:                                              ; preds = %771
  %777 = bitcast %"class.SkSL::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #12
  %778 = bitcast %"class.SkSL::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %778) #12
  %779 = bitcast %"class.SkSL::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %779) #12
  %780 = icmp eq i8 %772, 0
  %781 = bitcast %"class.SkSL::String"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  br i1 %780, label %784, label %783

783:                                              ; preds = %776
  store i8 0, i8* %782, align 1, !alias.scope !60
  store i8 0, i8* %779, align 8, !alias.scope !60
  br label %787

784:                                              ; preds = %776
  store i8 2, i8* %782, align 1, !alias.scope !60
  %785 = bitcast %"class.SkSL::String"* %59 to i16*
  store i16 8236, i16* %785, align 8, !alias.scope !60
  %786 = getelementptr inbounds i8, i8* %779, i64 2
  store i8 0, i8* %786, align 2, !alias.scope !60
  br label %787

787:                                              ; preds = %783, %784
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %58, %"class.SkSL::String"* nonnull %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.182, i64 0, i64 0)) #12
  %788 = bitcast %"class.SkSL::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %788) #12
  %789 = load i32, i32* %773, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %60, i32 %789) #12
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %57, %"class.SkSL::String"* nonnull %58, %"class.SkSL::String"* nonnull dereferenceable(24) %60) #12
  %790 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %57) #12
  %791 = bitcast %"class.SkSL::String"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %792 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %791, i64 0, i32 1, i32 0
  %793 = load i8, i8* %792, align 1
  %794 = icmp slt i8 %793, 0
  br i1 %794, label %795, label %798

795:                                              ; preds = %787
  %796 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  call void @_ZdlPv(i8* %797) #14
  br label %798

798:                                              ; preds = %787, %795
  %799 = bitcast %"class.SkSL::String"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %799, i64 0, i32 1, i32 0
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %798
  %804 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #14
  br label %806

806:                                              ; preds = %798, %803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %788) #12
  %807 = bitcast %"class.SkSL::String"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %807, i64 0, i32 1, i32 0
  %809 = load i8, i8* %808, align 1
  %810 = icmp slt i8 %809, 0
  br i1 %810, label %811, label %814

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8
  call void @_ZdlPv(i8* %813) #14
  br label %814

814:                                              ; preds = %806, %811
  %815 = load i8, i8* %782, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #14
  br label %820

820:                                              ; preds = %814, %817
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %779) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %778) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #12
  br label %821

821:                                              ; preds = %820, %771
  %822 = phi i8 [ 0, %820 ], [ %772, %771 ]
  %823 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %824 = load i64, i64* %823, align 8
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %864, label %826

826:                                              ; preds = %821
  %827 = bitcast %"class.SkSL::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #12
  %828 = bitcast %"class.SkSL::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %828) #12
  %829 = bitcast %"class.SkSL::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #12
  %830 = icmp eq i8 %822, 0
  %831 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %832 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %831, i64 0, i32 1, i32 0
  br i1 %830, label %834, label %833

833:                                              ; preds = %826
  store i8 0, i8* %832, align 1, !alias.scope !63
  store i8 0, i8* %829, align 8, !alias.scope !63
  br label %837

834:                                              ; preds = %826
  store i8 2, i8* %832, align 1, !alias.scope !63
  %835 = bitcast %"class.SkSL::String"* %63 to i16*
  store i16 8236, i16* %835, align 8, !alias.scope !63
  %836 = getelementptr inbounds i8, i8* %829, i64 2
  store i8 0, i8* %836, align 2, !alias.scope !63
  br label %837

837:                                              ; preds = %833, %834
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %62, %"class.SkSL::String"* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.183, i64 0, i64 0)) #12
  %838 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = load i64, i64* %823, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %61, %"class.SkSL::String"* nonnull %62, i8* %839, i64 %840) #12
  %841 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %61) #12
  %842 = bitcast %"class.SkSL::String"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %843 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %842, i64 0, i32 1, i32 0
  %844 = load i8, i8* %843, align 1
  %845 = icmp slt i8 %844, 0
  br i1 %845, label %846, label %849

846:                                              ; preds = %837
  %847 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  call void @_ZdlPv(i8* %848) #14
  br label %849

849:                                              ; preds = %837, %846
  %850 = bitcast %"class.SkSL::String"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %851 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %850, i64 0, i32 1, i32 0
  %852 = load i8, i8* %851, align 1
  %853 = icmp slt i8 %852, 0
  br i1 %853, label %854, label %857

854:                                              ; preds = %849
  %855 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  call void @_ZdlPv(i8* %856) #14
  br label %857

857:                                              ; preds = %849, %854
  %858 = load i8, i8* %832, align 1
  %859 = icmp slt i8 %858, 0
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i8*, i8** %861, align 8
  call void @_ZdlPv(i8* %862) #14
  br label %863

863:                                              ; preds = %857, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %828) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #12
  br label %864

864:                                              ; preds = %821, %863
  %865 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %866 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %865, i64 0, i32 1, i32 0
  %867 = load i8, i8* %866, align 1
  %868 = icmp slt i8 %867, 0
  %869 = load i64, i64* %67, align 8
  %870 = zext i8 %867 to i64
  %871 = select i1 %868, i64 %869, i64 %870
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %891, label %873

873:                                              ; preds = %864
  %874 = bitcast %"class.SkSL::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #12
  %875 = bitcast %"class.SkSL::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.184, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %0) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %64, %"class.SkSL::String"* nonnull %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12
  %876 = load i8, i8* %866, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %879) #14
  br label %880

880:                                              ; preds = %873, %878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %874, i64 24, i1 false) #12
  %881 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %882 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %881, i64 0, i32 1, i32 0
  store i8 0, i8* %882, align 1
  store i8 0, i8* %874, align 8
  %883 = bitcast %"class.SkSL::String"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %883, i64 0, i32 1, i32 0
  %885 = load i8, i8* %884, align 1
  %886 = icmp slt i8 %885, 0
  br i1 %886, label %887, label %890

887:                                              ; preds = %880
  %888 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = load i8*, i8** %888, align 8
  call void @_ZdlPv(i8* %889) #14
  br label %890

890:                                              ; preds = %880, %887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #12
  br label %891

891:                                              ; preds = %864, %890
  %892 = load i32, i32* %413, align 8
  %893 = and i32 %892, 16
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %897, label %895

895:                                              ; preds = %891
  %896 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.185, i64 0, i64 0)) #12
  br label %897

897:                                              ; preds = %891, %895
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::InterfaceBlock"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 2
  %10 = tail call zeroext i1 @_ZNK4SkSL6StringeqEPKc(%"class.SkSL::String"* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.128, i64 0, i64 0)) #12
  br i1 %10, label %399, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 1
  %13 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %13, i64 0, i32 2
  %15 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %14, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %15, i1 zeroext true)
  %16 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #12
  %17 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = select i1 %20, i8* %22, i8* %16
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %53, label %26

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i32 [ 0, %34 ], [ %43, %36 ]
  %38 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %39 = bitcast %"class.SkSL::OutputStream"* %38 to void (%"class.SkSL::OutputStream"*, i8*)***
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %40, i64 2
  %42 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, align 8
  call void %42(%"class.SkSL::OutputStream"* %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %43 = add nuw nsw i32 %37, 1
  %44 = load i32, i32* %31, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %36, label %46

46:                                               ; preds = %36, %30, %26
  %47 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %48 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %47, align 8
  %49 = bitcast %"class.SkSL::OutputStream"* %48 to void (%"class.SkSL::OutputStream"*, i8*)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %48, i8* %23) #12
  store i8 0, i8* %27, align 8
  br label %53

53:                                               ; preds = %11, %46
  %54 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %56 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, i64 2
  %61 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %60, align 8
  call void %61(%"class.SkSL::OutputStream"* %55, i8* %57) #12
  %62 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  store i8 1, i8* %62, align 8
  %63 = load i8, i8* %18, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %53
  %66 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %53, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %68 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %69 = load i32, i32* %68, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %68, align 4
  %71 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %12, align 8
  %72 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %71, i64 0, i32 0, i32 2
  %73 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %73, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %73, i64 0, i32 6
  %79 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %78, align 8
  %80 = icmp eq %"class.SkSL::Type"* %79, null
  %81 = select i1 %80, %"class.SkSL::Type"* %73, %"class.SkSL::Type"* %79
  br label %82

82:                                               ; preds = %77, %67
  %83 = phi %"class.SkSL::Type"* [ %81, %77 ], [ %73, %67 ]
  %84 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %83, i64 0, i32 10, i32 0, i32 0
  %85 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %84, align 8
  %86 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %83, i64 0, i32 10, i32 0, i32 1
  %87 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %86, align 8
  %88 = icmp eq %"struct.SkSL::Type::Field"* %85, %87
  br i1 %88, label %111, label %89

89:                                               ; preds = %82
  %90 = bitcast %"class.SkSL::String"* %3 to i8*
  %91 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %92 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.SkSL::String"* %5 to i8*
  %96 = bitcast %"class.SkSL::String"* %6 to i8*
  %97 = bitcast %"class.SkSL::String"* %7 to i8*
  %98 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %144

109:                                              ; preds = %285
  %110 = load i32, i32* %68, align 4
  br label %111

111:                                              ; preds = %109, %82
  %112 = phi i32 [ %110, %109 ], [ %70, %82 ]
  %113 = add nsw i32 %112, -1
  store i32 %113, i32* %68, align 4
  %114 = load i8, i8* %62, align 8, !range !2
  %115 = icmp ne i8 %114, 0
  %116 = icmp sgt i32 %113, 0
  %117 = and i1 %116, %115
  br i1 %117, label %118, label %128

118:                                              ; preds = %111, %118
  %119 = phi i32 [ %125, %118 ], [ 0, %111 ]
  %120 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %121 = bitcast %"class.SkSL::OutputStream"* %120 to void (%"class.SkSL::OutputStream"*, i8*)***
  %122 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, i64 2
  %124 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %125 = add nuw nsw i32 %119, 1
  %126 = load i32, i32* %68, align 4
  %127 = icmp slt i32 %125, %126
  br i1 %127, label %118, label %128

128:                                              ; preds = %118, %111
  %129 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %130 = bitcast %"class.SkSL::OutputStream"* %129 to void (%"class.SkSL::OutputStream"*, i8*)***
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, i64 2
  %133 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #12
  store i8 0, i8* %62, align 8
  %134 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3
  %135 = bitcast %"class.SkSL::String"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %137 to i64
  %142 = select i1 %138, i64 %140, i64 %141
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %387, label %288

144:                                              ; preds = %89, %285
  %145 = phi %"struct.SkSL::Type::Field"* [ %85, %89 ], [ %286, %285 ]
  %146 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %145, i64 0, i32 0
  call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %146, i1 zeroext false)
  %147 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %145, i64 0, i32 2
  %148 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %147, align 8
  %149 = call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %148) #12
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %174, label %152

152:                                              ; preds = %144
  %153 = load i8, i8* %62, align 8, !range !2
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = load i32, i32* %68, align 4
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %168

158:                                              ; preds = %155, %158
  %159 = phi i32 [ %165, %158 ], [ 0, %155 ]
  %160 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %161 = bitcast %"class.SkSL::OutputStream"* %160 to void (%"class.SkSL::OutputStream"*, i8*)***
  %162 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %162, i64 2
  %164 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %163, align 8
  call void %164(%"class.SkSL::OutputStream"* %160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %165 = add nuw nsw i32 %159, 1
  %166 = load i32, i32* %68, align 4
  %167 = icmp slt i32 %165, %166
  br i1 %167, label %158, label %168

168:                                              ; preds = %158, %155, %152
  %169 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %170 = bitcast %"class.SkSL::OutputStream"* %169 to void (%"class.SkSL::OutputStream"*, i8*)***
  %171 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %171, i64 2
  %173 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %172, align 8
  call void %173(%"class.SkSL::OutputStream"* %169, i8* %149) #12
  store i8 0, i8* %62, align 8
  br label %174

174:                                              ; preds = %144, %168
  %175 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %147, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %176 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %91, align 8
  %177 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %176, i64 5
  %178 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %177, align 8
  call void %178(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %175) #12
  %179 = load i8, i8* %93, align 1
  %180 = icmp slt i8 %179, 0
  %181 = load i8*, i8** %94, align 8
  %182 = select i1 %180, i8* %181, i8* %90
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %208, label %185

185:                                              ; preds = %174
  %186 = load i8, i8* %62, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = load i32, i32* %68, align 4
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %191, label %201

191:                                              ; preds = %188, %191
  %192 = phi i32 [ %198, %191 ], [ 0, %188 ]
  %193 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %194 = bitcast %"class.SkSL::OutputStream"* %193 to void (%"class.SkSL::OutputStream"*, i8*)***
  %195 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %195, i64 2
  %197 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %196, align 8
  call void %197(%"class.SkSL::OutputStream"* %193, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %198 = add nuw nsw i32 %192, 1
  %199 = load i32, i32* %68, align 4
  %200 = icmp slt i32 %198, %199
  br i1 %200, label %191, label %201

201:                                              ; preds = %191, %188, %185
  %202 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %203 = bitcast %"class.SkSL::OutputStream"* %202 to void (%"class.SkSL::OutputStream"*, i8*)***
  %204 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %204, i64 2
  %206 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %205, align 8
  call void %206(%"class.SkSL::OutputStream"* %202, i8* %182) #12
  store i8 0, i8* %62, align 8
  %207 = load i8, i8* %93, align 1
  br label %208

208:                                              ; preds = %201, %174
  %209 = phi i8 [ %179, %174 ], [ %207, %201 ]
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %208
  %212 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %212) #14
  br label %213

213:                                              ; preds = %208, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #12
  %214 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %145, i64 0, i32 1, i32 0
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %145, i64 0, i32 1, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = icmp ugt i64 %217, -17
  br i1 %218, label %219, label %221

219:                                              ; preds = %213
  %220 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %220) #15
  unreachable

221:                                              ; preds = %213
  %222 = icmp ult i64 %217, 23
  br i1 %222, label %228, label %223

223:                                              ; preds = %221
  %224 = add nuw i64 %217, 16
  %225 = and i64 %224, -16
  %226 = call i8* @_Znwm(i64 %225) #14
  store i8* %226, i8** %98, align 8
  %227 = or i64 %225, -9223372036854775808
  store i64 %227, i64* %99, align 8
  store i64 %217, i64* %100, align 8
  br label %231

228:                                              ; preds = %221
  %229 = trunc i64 %217 to i8
  store i8 %229, i8* %102, align 1
  %230 = icmp eq i64 %217, 0
  br i1 %230, label %233, label %231

231:                                              ; preds = %228, %223
  %232 = phi i8* [ %226, %223 ], [ %97, %228 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %232, i8* align 1 %215, i64 %217, i1 false) #12
  br label %233

233:                                              ; preds = %228, %231
  %234 = phi i8* [ %97, %228 ], [ %232, %231 ]
  %235 = getelementptr inbounds i8, i8* %234, i64 %217
  store i8 0, i8* %235, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #12
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  %236 = load i8, i8* %104, align 1
  %237 = icmp slt i8 %236, 0
  %238 = load i8*, i8** %105, align 8
  %239 = select i1 %237, i8* %238, i8* %95
  %240 = load i8, i8* %239, align 1
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %264, label %242

242:                                              ; preds = %233
  %243 = load i8, i8* %62, align 8, !range !2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = load i32, i32* %68, align 4
  %247 = icmp sgt i32 %246, 0
  br i1 %247, label %248, label %258

248:                                              ; preds = %245, %248
  %249 = phi i32 [ %255, %248 ], [ 0, %245 ]
  %250 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %251 = bitcast %"class.SkSL::OutputStream"* %250 to void (%"class.SkSL::OutputStream"*, i8*)***
  %252 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %252, i64 2
  %254 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %253, align 8
  call void %254(%"class.SkSL::OutputStream"* %250, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %255 = add nuw nsw i32 %249, 1
  %256 = load i32, i32* %68, align 4
  %257 = icmp slt i32 %255, %256
  br i1 %257, label %248, label %258

258:                                              ; preds = %248, %245, %242
  %259 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %260 = bitcast %"class.SkSL::OutputStream"* %259 to void (%"class.SkSL::OutputStream"*, i8*)***
  %261 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %260, align 8
  %262 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %261, i64 2
  %263 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %262, align 8
  call void %263(%"class.SkSL::OutputStream"* %259, i8* %239) #12
  store i8 0, i8* %62, align 8
  br label %264

264:                                              ; preds = %233, %258
  %265 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %266 = load i8*, i8** %56, align 8
  %267 = bitcast %"class.SkSL::OutputStream"* %265 to void (%"class.SkSL::OutputStream"*, i8*)***
  %268 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %268, i64 2
  %270 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %269, align 8
  call void %270(%"class.SkSL::OutputStream"* %265, i8* %266) #12
  store i8 1, i8* %62, align 8
  %271 = load i8, i8* %104, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %264
  %274 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %274) #14
  br label %275

275:                                              ; preds = %264, %273
  %276 = load i8, i8* %107, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %278, label %280

278:                                              ; preds = %275
  %279 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %279) #14
  br label %280

280:                                              ; preds = %275, %278
  %281 = load i8, i8* %102, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %280
  %284 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %284) #14
  br label %285

285:                                              ; preds = %280, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  %286 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %145, i64 1
  %287 = icmp eq %"struct.SkSL::Type::Field"* %286, %87
  br i1 %287, label %109, label %144

288:                                              ; preds = %128
  %289 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %290 = bitcast %"class.SkSL::OutputStream"* %289 to void (%"class.SkSL::OutputStream"*, i8*)***
  %291 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %290, align 8
  %292 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %291, i64 2
  %293 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %292, align 8
  call void %293(%"class.SkSL::OutputStream"* %289, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %62, align 8
  %294 = load i8, i8* %136, align 1
  %295 = icmp slt i8 %294, 0
  %296 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i8*, i8** %296, align 8
  %298 = bitcast %"class.SkSL::String"* %134 to i8*
  %299 = select i1 %295, i8* %297, i8* %298
  %300 = load i8, i8* %299, align 1
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %308, label %302

302:                                              ; preds = %288
  %303 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %304 = bitcast %"class.SkSL::OutputStream"* %303 to void (%"class.SkSL::OutputStream"*, i8*)***
  %305 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %304, align 8
  %306 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %305, i64 2
  %307 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %306, align 8
  call void %307(%"class.SkSL::OutputStream"* %303, i8* %299) #12
  store i8 0, i8* %62, align 8
  br label %308

308:                                              ; preds = %288, %302
  %309 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 4
  %310 = load i32, i32* %309, align 8
  %311 = icmp sgt i32 %310, 0
  br i1 %311, label %312, label %379

312:                                              ; preds = %308
  %313 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %314 = bitcast %"class.SkSL::OutputStream"* %313 to void (%"class.SkSL::OutputStream"*, i8*)***
  %315 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %315, i64 2
  %317 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %316, align 8
  call void %317(%"class.SkSL::OutputStream"* %313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #12
  store i8 0, i8* %62, align 8
  %318 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #12
  %319 = load i32, i32* %309, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %8, i32 %319) #12
  %320 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %320, i64 0, i32 1, i32 0
  %322 = load i8, i8* %321, align 1
  %323 = icmp slt i8 %322, 0
  %324 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i8*, i8** %324, align 8
  %326 = select i1 %323, i8* %325, i8* %318
  %327 = load i8, i8* %326, align 1
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %352, label %329

329:                                              ; preds = %312
  %330 = load i8, i8* %62, align 8, !range !2
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %345, label %332

332:                                              ; preds = %329
  %333 = load i32, i32* %68, align 4
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %335, label %345

335:                                              ; preds = %332, %335
  %336 = phi i32 [ %342, %335 ], [ 0, %332 ]
  %337 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %338 = bitcast %"class.SkSL::OutputStream"* %337 to void (%"class.SkSL::OutputStream"*, i8*)***
  %339 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %338, align 8
  %340 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %339, i64 2
  %341 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %340, align 8
  call void %341(%"class.SkSL::OutputStream"* %337, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %342 = add nuw nsw i32 %336, 1
  %343 = load i32, i32* %68, align 4
  %344 = icmp slt i32 %342, %343
  br i1 %344, label %335, label %345

345:                                              ; preds = %335, %332, %329
  %346 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %347 = bitcast %"class.SkSL::OutputStream"* %346 to void (%"class.SkSL::OutputStream"*, i8*)***
  %348 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %348, i64 2
  %350 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %349, align 8
  call void %350(%"class.SkSL::OutputStream"* %346, i8* %326) #12
  store i8 0, i8* %62, align 8
  %351 = load i8, i8* %321, align 1
  br label %352

352:                                              ; preds = %312, %345
  %353 = phi i8 [ %322, %312 ], [ %351, %345 ]
  %354 = icmp slt i8 %353, 0
  br i1 %354, label %355, label %357

355:                                              ; preds = %352
  %356 = load i8*, i8** %324, align 8
  call void @_ZdlPv(i8* %356) #14
  br label %357

357:                                              ; preds = %352, %355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #12
  %358 = load i8, i8* %62, align 8, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %373, label %360

360:                                              ; preds = %357
  %361 = load i32, i32* %68, align 4
  %362 = icmp sgt i32 %361, 0
  br i1 %362, label %363, label %373

363:                                              ; preds = %360, %363
  %364 = phi i32 [ %370, %363 ], [ 0, %360 ]
  %365 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %366 = bitcast %"class.SkSL::OutputStream"* %365 to void (%"class.SkSL::OutputStream"*, i8*)***
  %367 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %367, i64 2
  %369 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %368, align 8
  call void %369(%"class.SkSL::OutputStream"* %365, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %370 = add nuw nsw i32 %364, 1
  %371 = load i32, i32* %68, align 4
  %372 = icmp slt i32 %370, %371
  br i1 %372, label %363, label %373

373:                                              ; preds = %363, %357, %360
  %374 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %375 = bitcast %"class.SkSL::OutputStream"* %374 to void (%"class.SkSL::OutputStream"*, i8*)***
  %376 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %376, i64 2
  %378 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %377, align 8
  call void %378(%"class.SkSL::OutputStream"* %374, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12
  store i8 0, i8* %62, align 8
  br label %387

379:                                              ; preds = %308
  %380 = icmp eq i32 %310, -1
  br i1 %380, label %381, label %387

381:                                              ; preds = %379
  %382 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %383 = bitcast %"class.SkSL::OutputStream"* %382 to void (%"class.SkSL::OutputStream"*, i8*)***
  %384 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %383, align 8
  %385 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %384, i64 2
  %386 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %385, align 8
  call void %386(%"class.SkSL::OutputStream"* %382, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i64 0, i64 0)) #12
  store i8 0, i8* %62, align 8
  br label %387

387:                                              ; preds = %379, %128, %381, %373
  %388 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %389 = bitcast %"class.SkSL::OutputStream"* %388 to void (%"class.SkSL::OutputStream"*, i8*)***
  %390 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %390, i64 2
  %392 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %391, align 8
  call void %392(%"class.SkSL::OutputStream"* %388, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %62, align 8
  %393 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %394 = load i8*, i8** %56, align 8
  %395 = bitcast %"class.SkSL::OutputStream"* %393 to void (%"class.SkSL::OutputStream"*, i8*)***
  %396 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %395, align 8
  %397 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %396, i64 2
  %398 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %397, align 8
  call void %398(%"class.SkSL::OutputStream"* %393, i8* %394) #12
  store i8 1, i8* %62, align 8
  br label %399

399:                                              ; preds = %2, %387
  ret void
}

declare zeroext i1 @_ZNK4SkSL6StringeqEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator19writeVarInitializerERKNS_8VariableERKNS_10ExpressionE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"* nocapture readnone dereferenceable(64), %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2, i32 17)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationEb(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::VarDeclaration"* nocapture readonly dereferenceable(48), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 1
  %13 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %13, i64 0, i32 2
  %15 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %14, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %15, i1 zeroext %2)
  %16 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 2
  %17 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %16, align 8
  %18 = tail call i8* @_ZN4SkSL17GLSLCodeGenerator16getTypePrecisionERKNS_4TypeE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %17) #12
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %48, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i32 [ 0, %29 ], [ %38, %31 ]
  %33 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %33 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %38 = add nuw nsw i32 %32, 1
  %39 = load i32, i32* %26, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %31, label %41

41:                                               ; preds = %31, %25, %21
  %42 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %43 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %42, align 8
  %44 = bitcast %"class.SkSL::OutputStream"* %43 to void (%"class.SkSL::OutputStream"*, i8*)***
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %45, i64 2
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %46, align 8
  tail call void %47(%"class.SkSL::OutputStream"* %43, i8* %18) #12
  store i8 0, i8* %22, align 8
  br label %48

48:                                               ; preds = %3, %41
  %49 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %16, align 8
  %50 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  %51 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)***
  %52 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)**, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %52, i64 5
  %54 = load void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)*, void (%"class.SkSL::String"*, %"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Type"*)** %53, align 8
  call void %54(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %49) #12
  %55 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = select i1 %58, i8* %60, i8* %50
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %92, label %64

64:                                               ; preds = %48
  %65 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %84, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i32 [ 0, %72 ], [ %81, %74 ]
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %73, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %81 = add nuw nsw i32 %75, 1
  %82 = load i32, i32* %69, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %74, label %84

84:                                               ; preds = %74, %68, %64
  %85 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %86 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %87 = bitcast %"class.SkSL::OutputStream"* %86 to void (%"class.SkSL::OutputStream"*, i8*)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, i64 2
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %86, i8* %61) #12
  store i8 0, i8* %65, align 8
  %91 = load i8, i8* %56, align 1
  br label %92

92:                                               ; preds = %84, %48
  %93 = phi i8 [ %57, %48 ], [ %91, %84 ]
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %96) #14
  br label %97

97:                                               ; preds = %92, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  %98 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %103 = load i32, i32* %102, align 4
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i32 [ 0, %105 ], [ %114, %107 ]
  %109 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %106, align 8
  %110 = bitcast %"class.SkSL::OutputStream"* %109 to void (%"class.SkSL::OutputStream"*, i8*)***
  %111 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %111, i64 2
  %113 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %114 = add nuw nsw i32 %108, 1
  %115 = load i32, i32* %102, align 4
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %107, label %117

117:                                              ; preds = %107, %97, %101
  %118 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %119 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %120 = bitcast %"class.SkSL::OutputStream"* %119 to void (%"class.SkSL::OutputStream"*, i8*)***
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, align 8
  call void %123(%"class.SkSL::OutputStream"* %119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %98, align 8
  %124 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %12, align 8
  %125 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %124, i64 0, i32 0, i32 1, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %117
  %129 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %124, i64 0, i32 0, i32 1, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %132 = bitcast %"class.SkSL::OutputStream"* %131 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %133, i64 3
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %134, align 8
  call void %135(%"class.SkSL::OutputStream"* %131, i8* %130, i64 %126) #12
  store i8 0, i8* %98, align 8
  br label %136

136:                                              ; preds = %117, %128
  %137 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = icmp sgt i32 %138, 0
  br i1 %139, label %140, label %209

140:                                              ; preds = %136
  %141 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %142 = bitcast %"class.SkSL::OutputStream"* %141 to void (%"class.SkSL::OutputStream"*, i8*)***
  %143 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %143, i64 2
  %145 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %144, align 8
  call void %145(%"class.SkSL::OutputStream"* %141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #12
  store i8 0, i8* %98, align 8
  %146 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #12
  %147 = load i32, i32* %137, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %9, i32 %147) #12
  %148 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = select i1 %151, i8* %153, i8* %146
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %181, label %157

157:                                              ; preds = %140
  %158 = load i8, i8* %98, align 8, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %174, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %162 = load i32, i32* %161, align 4
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %174

164:                                              ; preds = %160, %164
  %165 = phi i32 [ %171, %164 ], [ 0, %160 ]
  %166 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %167 = bitcast %"class.SkSL::OutputStream"* %166 to void (%"class.SkSL::OutputStream"*, i8*)***
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %168, i64 2
  %170 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %169, align 8
  call void %170(%"class.SkSL::OutputStream"* %166, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %171 = add nuw nsw i32 %165, 1
  %172 = load i32, i32* %161, align 4
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %164, label %174

174:                                              ; preds = %164, %160, %157
  %175 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %176 = bitcast %"class.SkSL::OutputStream"* %175 to void (%"class.SkSL::OutputStream"*, i8*)***
  %177 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %177, i64 2
  %179 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %178, align 8
  call void %179(%"class.SkSL::OutputStream"* %175, i8* %154) #12
  store i8 0, i8* %98, align 8
  %180 = load i8, i8* %149, align 1
  br label %181

181:                                              ; preds = %140, %174
  %182 = phi i8 [ %150, %140 ], [ %180, %174 ]
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  %185 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %185) #14
  br label %186

186:                                              ; preds = %181, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #12
  %187 = load i8, i8* %98, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %203, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %203

193:                                              ; preds = %189, %193
  %194 = phi i32 [ %200, %193 ], [ 0, %189 ]
  %195 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %196 = bitcast %"class.SkSL::OutputStream"* %195 to void (%"class.SkSL::OutputStream"*, i8*)***
  %197 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %197, i64 2
  %199 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %198, align 8
  call void %199(%"class.SkSL::OutputStream"* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %200 = add nuw nsw i32 %194, 1
  %201 = load i32, i32* %190, align 4
  %202 = icmp slt i32 %200, %201
  br i1 %202, label %193, label %203

203:                                              ; preds = %193, %186, %189
  %204 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %205 = bitcast %"class.SkSL::OutputStream"* %204 to void (%"class.SkSL::OutputStream"*, i8*)***
  %206 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %205, align 8
  %207 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %206, i64 2
  %208 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %207, align 8
  call void %208(%"class.SkSL::OutputStream"* %204, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12
  br label %217

209:                                              ; preds = %136
  %210 = icmp eq i32 %138, -1
  br i1 %210, label %211, label %218

211:                                              ; preds = %209
  %212 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %213 = bitcast %"class.SkSL::OutputStream"* %212 to void (%"class.SkSL::OutputStream"*, i8*)***
  %214 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %214, i64 2
  %216 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %215, align 8
  call void %216(%"class.SkSL::OutputStream"* %212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i64 0, i64 0)) #12
  br label %217

217:                                              ; preds = %203, %211
  store i8 0, i8* %98, align 8
  br label %218

218:                                              ; preds = %217, %209
  %219 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %220 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %219, align 8
  %221 = icmp eq %"class.SkSL::Expression"* %220, null
  br i1 %221, label %234, label %222

222:                                              ; preds = %218
  %223 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %224 = bitcast %"class.SkSL::OutputStream"* %223 to void (%"class.SkSL::OutputStream"*, i8*)***
  %225 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %225, i64 2
  %227 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %226, align 8
  call void %227(%"class.SkSL::OutputStream"* %223, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #12
  store i8 0, i8* %98, align 8
  %228 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %12, align 8
  %229 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %219, align 8
  %230 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)***
  %231 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)** %231, i64 8
  %233 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)** %232, align 8
  call void %233(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Variable"* dereferenceable(64) %228, %"class.SkSL::Expression"* dereferenceable(24) %229) #12
  br label %234

234:                                              ; preds = %218, %222
  %235 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 12
  %236 = load i8, i8* %235, align 1, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %238, label %383

238:                                              ; preds = %234
  %239 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %12, align 8
  %240 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %239, i64 0, i32 0, i32 2
  %241 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %240, align 8
  %242 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %243 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %242, align 8
  %244 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %243, i64 0, i32 0, i32 60, i32 0, i32 0, i32 0
  %245 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %244, align 8
  %246 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #12
  %247 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %241, i64 0, i32 0, i32 1, i32 0
  %248 = bitcast i8** %247 to <2 x i64>*
  %249 = load <2 x i64>, <2 x i64>* %248, align 8
  store <2 x i64> %249, <2 x i64>* %4, align 16
  %250 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %245, i64 0, i32 0, i32 1, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %245, i64 0, i32 0, i32 1, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %251, i64 %253) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #12
  br i1 %254, label %255, label %383

255:                                              ; preds = %238
  %256 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %242, align 8
  %257 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %256, i64 0, i32 2
  %258 = load %class.GrShaderCaps*, %class.GrShaderCaps** %257, align 8
  %259 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %258, i64 0, i32 9
  %260 = load i8*, i8** %259, align 8
  %261 = icmp eq i8* %260, null
  br i1 %261, label %321, label %262

262:                                              ; preds = %255
  %263 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #12
  %264 = call i64 @strlen(i8* nonnull %260) #12
  %265 = icmp ugt i64 %264, -17
  br i1 %265, label %266, label %268

266:                                              ; preds = %262
  %267 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %267) #15
  unreachable

268:                                              ; preds = %262
  %269 = icmp ult i64 %264, 23
  br i1 %269, label %279, label %270

270:                                              ; preds = %268
  %271 = add nuw i64 %264, 16
  %272 = and i64 %271, -16
  %273 = call i8* @_Znwm(i64 %272) #14
  %274 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %273, i8** %274, align 8
  %275 = or i64 %272, -9223372036854775808
  %276 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %264, i64* %277, align 8
  %278 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %284

279:                                              ; preds = %268
  %280 = trunc i64 %264 to i8
  %281 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  store i8 %280, i8* %282, align 1
  %283 = icmp eq i64 %264, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %279, %270
  %285 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %281, %279 ], [ %278, %270 ]
  %286 = phi i8* [ %263, %279 ], [ %273, %270 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %286, i8* nonnull align 1 %260, i64 %264, i1 false) #12
  br label %287

287:                                              ; preds = %279, %284
  %288 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %281, %279 ], [ %285, %284 ]
  %289 = phi i8* [ %263, %279 ], [ %286, %284 ]
  %290 = getelementptr inbounds i8, i8* %289, i64 %264
  store i8 0, i8* %290, align 1
  %291 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %292 = bitcast %class.SkWStream* %291 to i1 (%class.SkWStream*, i8*, i64)***
  %293 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %292, align 8
  %294 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %293, i64 2
  %295 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %294, align 8
  %296 = call zeroext i1 %295(%class.SkWStream* %291, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %288, i64 0, i32 1, i32 0
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  %300 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load i8*, i8** %300, align 8
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %303 = load i64, i64* %302, align 8
  %304 = zext i8 %298 to i64
  %305 = select i1 %299, i8* %301, i8* %263
  %306 = select i1 %299, i64 %303, i64 %304
  %307 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %308 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %307, i8* %305, i64 %306) #12
  %309 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %292, align 8
  %310 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %309, i64 2
  %311 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %310, align 8
  %312 = call zeroext i1 %311(%class.SkWStream* %291, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  %313 = load i8, i8* %297, align 1
  %314 = icmp slt i8 %313, 0
  br i1 %314, label %315, label %317

315:                                              ; preds = %287
  %316 = load i8*, i8** %300, align 8
  call void @_ZdlPv(i8* %316) #14
  br label %317

317:                                              ; preds = %287, %315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #12
  %318 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %242, align 8
  %319 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %318, i64 0, i32 2
  %320 = load %class.GrShaderCaps*, %class.GrShaderCaps** %319, align 8
  br label %321

321:                                              ; preds = %255, %317
  %322 = phi %class.GrShaderCaps* [ %258, %255 ], [ %320, %317 ]
  %323 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %322, i64 0, i32 10
  %324 = load i8*, i8** %323, align 8
  %325 = icmp eq i8* %324, null
  br i1 %325, label %382, label %326

326:                                              ; preds = %321
  %327 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #12
  %328 = call i64 @strlen(i8* nonnull %324) #12
  %329 = icmp ugt i64 %328, -17
  br i1 %329, label %330, label %332

330:                                              ; preds = %326
  %331 = bitcast %"class.SkSL::String"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %331) #15
  unreachable

332:                                              ; preds = %326
  %333 = icmp ult i64 %328, 23
  br i1 %333, label %343, label %334

334:                                              ; preds = %332
  %335 = add nuw i64 %328, 16
  %336 = and i64 %335, -16
  %337 = call i8* @_Znwm(i64 %336) #14
  %338 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %337, i8** %338, align 8
  %339 = or i64 %336, -9223372036854775808
  %340 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %339, i64* %340, align 8
  %341 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %328, i64* %341, align 8
  %342 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %348

343:                                              ; preds = %332
  %344 = trunc i64 %328 to i8
  %345 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %345, i64 0, i32 1, i32 0
  store i8 %344, i8* %346, align 1
  %347 = icmp eq i64 %328, 0
  br i1 %347, label %351, label %348

348:                                              ; preds = %343, %334
  %349 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %345, %343 ], [ %342, %334 ]
  %350 = phi i8* [ %327, %343 ], [ %337, %334 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %350, i8* nonnull align 1 %324, i64 %328, i1 false) #12
  br label %351

351:                                              ; preds = %343, %348
  %352 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %345, %343 ], [ %349, %348 ]
  %353 = phi i8* [ %327, %343 ], [ %350, %348 ]
  %354 = getelementptr inbounds i8, i8* %353, i64 %328
  store i8 0, i8* %354, align 1
  %355 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %356 = bitcast %class.SkWStream* %355 to i1 (%class.SkWStream*, i8*, i64)***
  %357 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %356, align 8
  %358 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %357, i64 2
  %359 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %358, align 8
  %360 = call zeroext i1 %359(%class.SkWStream* %355, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %352, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %362, 0
  %364 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %367 = load i64, i64* %366, align 8
  %368 = zext i8 %362 to i64
  %369 = select i1 %363, i8* %365, i8* %327
  %370 = select i1 %363, i64 %367, i64 %368
  %371 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %372 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %371, i8* %369, i64 %370) #12
  %373 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %356, align 8
  %374 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %373, i64 2
  %375 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %374, align 8
  %376 = call zeroext i1 %375(%class.SkWStream* %355, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  %377 = load i8, i8* %361, align 1
  %378 = icmp slt i8 %377, 0
  br i1 %378, label %379, label %381

379:                                              ; preds = %351
  %380 = load i8*, i8** %364, align 8
  call void @_ZdlPv(i8* %380) #14
  br label %381

381:                                              ; preds = %351, %379
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #12
  br label %382

382:                                              ; preds = %321, %381
  store i8 1, i8* %235, align 1
  br label %383

383:                                              ; preds = %234, %382, %238
  %384 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 13
  %385 = load i8, i8* %384, align 2, !range !2
  %386 = icmp eq i8 %385, 0
  br i1 %386, label %387, label %405

387:                                              ; preds = %383
  %388 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %12, align 8
  %389 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %388, i64 0, i32 0, i32 2
  %390 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %389, align 8
  %391 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %392 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %391, align 8
  %393 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %392, i64 0, i32 0, i32 61, i32 0, i32 0, i32 0
  %394 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %393, align 8
  %395 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %395) #12
  %396 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %390, i64 0, i32 0, i32 1, i32 0
  %397 = bitcast i8** %396 to <2 x i64>*
  %398 = load <2 x i64>, <2 x i64>* %397, align 8
  store <2 x i64> %398, <2 x i64>* %7, align 16
  %399 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %394, i64 0, i32 0, i32 1, i32 0
  %400 = load i8*, i8** %399, align 8
  %401 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %394, i64 0, i32 0, i32 1, i32 1
  %402 = load i64, i64* %401, align 8
  %403 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %400, i64 %402) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %395) #12
  br i1 %403, label %404, label %405

404:                                              ; preds = %387
  store i8 1, i8* %384, align 2
  br label %405

405:                                              ; preds = %383, %404, %387
  %406 = load i8, i8* %98, align 8, !range !2
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %422, label %408

408:                                              ; preds = %405
  %409 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %410 = load i32, i32* %409, align 4
  %411 = icmp sgt i32 %410, 0
  br i1 %411, label %412, label %422

412:                                              ; preds = %408, %412
  %413 = phi i32 [ %419, %412 ], [ 0, %408 ]
  %414 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %415 = bitcast %"class.SkSL::OutputStream"* %414 to void (%"class.SkSL::OutputStream"*, i8*)***
  %416 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %415, align 8
  %417 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %416, i64 2
  %418 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %417, align 8
  call void %418(%"class.SkSL::OutputStream"* %414, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %419 = add nuw nsw i32 %413, 1
  %420 = load i32, i32* %409, align 4
  %421 = icmp slt i32 %419, %420
  br i1 %421, label %412, label %422

422:                                              ; preds = %412, %405, %408
  %423 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %118, align 8
  %424 = bitcast %"class.SkSL::OutputStream"* %423 to void (%"class.SkSL::OutputStream"*, i8*)***
  %425 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %424, align 8
  %426 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %425, i64 2
  %427 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %426, align 8
  call void %427(%"class.SkSL::OutputStream"* %423, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %98, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator10writeBlockERKNS_5BlockE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::Block"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = bitcast i8* %7 to %"class.std::__1::unique_ptr.155"**
  %9 = load %"class.std::__1::unique_ptr.155"*, %"class.std::__1::unique_ptr.155"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.155"* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 1
  %16 = and i64 %15, 2147483647
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %9, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %31, label %21

19:                                               ; preds = %21
  %20 = icmp eq %"class.std::__1::unique_ptr.155"* %30, %17
  br i1 %20, label %31, label %21

21:                                               ; preds = %11, %19
  %22 = phi %"class.std::__1::unique_ptr.155"* [ %30, %19 ], [ %9, %11 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %23, align 8
  %25 = bitcast %"class.SkSL::Statement"* %24 to i1 (%"class.SkSL::Statement"*)***
  %26 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %26, i64 3
  %28 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.SkSL::Statement"* %24) #12
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %22, i64 1
  br i1 %29, label %19, label %68

31:                                               ; preds = %19, %2, %11, %6
  %32 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 0, %39 ], [ %48, %41 ]
  %43 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %44 = bitcast %"class.SkSL::OutputStream"* %43 to void (%"class.SkSL::OutputStream"*, i8*)***
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %45, i64 2
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %46, align 8
  tail call void %47(%"class.SkSL::OutputStream"* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %48 = add nuw nsw i32 %42, 1
  %49 = load i32, i32* %36, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %41, label %51

51:                                               ; preds = %41, %31, %35
  %52 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %52, align 8
  %54 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, align 8
  tail call void %57(%"class.SkSL::OutputStream"* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.133, i64 0, i64 0)) #12
  store i8 0, i8* %32, align 8
  %58 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %52, align 8
  %59 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %58 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::OutputStream"* %58, i8* %60) #12
  store i8 1, i8* %32, align 8
  %65 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %65, align 4
  br label %68

68:                                               ; preds = %21, %51
  %69 = phi i1 [ true, %51 ], [ false, %21 ]
  %70 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %71 = bitcast i8* %70 to %"class.std::__1::unique_ptr.155"**
  %72 = load %"class.std::__1::unique_ptr.155"*, %"class.std::__1::unique_ptr.155"** %71, align 8
  %73 = icmp eq %"class.std::__1::unique_ptr.155"* %72, null
  br i1 %73, label %86, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %72, i64 %79
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %84 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %85 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  br label %87

86:                                               ; preds = %107, %68, %74
  br i1 %69, label %110, label %138

87:                                               ; preds = %82, %107
  %88 = phi %"class.std::__1::unique_ptr.155"* [ %72, %82 ], [ %108, %107 ]
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %89, align 8
  %91 = bitcast %"class.SkSL::Statement"* %90 to i1 (%"class.SkSL::Statement"*)***
  %92 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %92, i64 3
  %94 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %93, align 8
  %95 = tail call zeroext i1 %94(%"class.SkSL::Statement"* %90) #12
  br i1 %95, label %107, label %96

96:                                               ; preds = %87
  %97 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %89, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %97)
  %98 = load i8, i8* %83, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %96
  %101 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %84, align 8
  %102 = load i8*, i8** %85, align 8
  %103 = bitcast %"class.SkSL::OutputStream"* %101 to void (%"class.SkSL::OutputStream"*, i8*)***
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %104, i64 2
  %106 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, align 8
  tail call void %106(%"class.SkSL::OutputStream"* %101, i8* %102) #12
  store i8 1, i8* %83, align 8
  br label %107

107:                                              ; preds = %100, %96, %87
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %88, i64 1
  %109 = icmp eq %"class.std::__1::unique_ptr.155"* %108, %80
  br i1 %109, label %86, label %87

110:                                              ; preds = %86
  %111 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %112, -1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %115 = load i8, i8* %114, align 8, !range !2
  %116 = icmp ne i8 %115, 0
  %117 = icmp sgt i32 %113, 0
  %118 = and i1 %117, %116
  br i1 %118, label %119, label %131

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i32 [ 0, %119 ], [ %128, %121 ]
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %120, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  tail call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %128 = add nuw nsw i32 %122, 1
  %129 = load i32, i32* %111, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %121, label %131

131:                                              ; preds = %121, %110
  %132 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %132, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  tail call void %137(%"class.SkSL::OutputStream"* %133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #12
  store i8 0, i8* %114, align 8
  br label %138

138:                                              ; preds = %131, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator17writeForStatementERKNS_12ForStatementE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ForStatement"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %6, label %64

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  %9 = icmp eq %"class.SkSL::Expression"* %8, null
  br i1 %9, label %64, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8
  %13 = icmp eq %"class.SkSL::Expression"* %12, null
  br i1 %13, label %14, label %64

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ 0, %22 ], [ %31, %24 ]
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %31 = add nuw nsw i32 %25, 1
  %32 = load i32, i32* %19, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %24, label %34

34:                                               ; preds = %24, %14, %18
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %36 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %36 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  tail call void %40(%"class.SkSL::OutputStream"* %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i64 0, i64 0)) #12
  store i8 0, i8* %15, align 8
  %41 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %41, i32 17)
  %42 = load i8, i8* %15, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %44 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %45, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %34, %44
  %59 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %60 = bitcast %"class.SkSL::OutputStream"* %59 to void (%"class.SkSL::OutputStream"*, i8*)***
  %61 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %61, i64 2
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, align 8
  tail call void %63(%"class.SkSL::OutputStream"* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i64 0, i64 0)) #12
  br label %235

64:                                               ; preds = %10, %6, %2
  %65 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %84, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i32 [ 0, %72 ], [ %81, %74 ]
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %73, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  tail call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %81 = add nuw nsw i32 %75, 1
  %82 = load i32, i32* %69, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %74, label %84

84:                                               ; preds = %74, %64, %68
  %85 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %86 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %87 = bitcast %"class.SkSL::OutputStream"* %86 to void (%"class.SkSL::OutputStream"*, i8*)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, i64 2
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, align 8
  tail call void %90(%"class.SkSL::OutputStream"* %86, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i64 0, i64 0)) #12
  store i8 0, i8* %65, align 8
  %91 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %92 = icmp eq %"class.SkSL::Statement"* %91, null
  br i1 %92, label %118, label %93

93:                                               ; preds = %84
  %94 = bitcast %"class.SkSL::Statement"* %91 to i1 (%"class.SkSL::Statement"*)***
  %95 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %95, i64 3
  %97 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.SkSL::Statement"* nonnull %91) #12
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %100)
  br label %124

101:                                              ; preds = %93
  %102 = load i8, i8* %65, align 8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %118, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %118

108:                                              ; preds = %104, %108
  %109 = phi i32 [ %115, %108 ], [ 0, %104 ]
  %110 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %111 = bitcast %"class.SkSL::OutputStream"* %110 to void (%"class.SkSL::OutputStream"*, i8*)***
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, i64 2
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %113, align 8
  tail call void %114(%"class.SkSL::OutputStream"* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %115 = add nuw nsw i32 %109, 1
  %116 = load i32, i32* %105, align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %108, label %118

118:                                              ; preds = %108, %84, %101, %104
  %119 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %120 = bitcast %"class.SkSL::OutputStream"* %119 to void (%"class.SkSL::OutputStream"*, i8*)***
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, align 8
  tail call void %123(%"class.SkSL::OutputStream"* %119, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.139, i64 0, i64 0)) #12
  store i8 0, i8* %65, align 8
  br label %124

124:                                              ; preds = %118, %99
  %125 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %125, align 8
  %127 = icmp eq %"class.SkSL::Expression"* %126, null
  br i1 %127, label %186, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %130 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %129, align 8
  %131 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %130, i64 0, i32 2
  %132 = load %class.GrShaderCaps*, %class.GrShaderCaps** %131, align 8
  %133 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %132, i64 0, i32 2
  %134 = bitcast i56* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, 34359738368
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %185, label %138

138:                                              ; preds = %128
  %139 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #12
  %140 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %125, align 8
  %141 = bitcast %"class.SkSL::Expression"* %140 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %142 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %141, align 8
  %143 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %142, i64 10
  %144 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %143, align 8
  %145 = tail call %"class.SkSL::Expression"* %144(%"class.SkSL::Expression"* %140) #12
  %146 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %129, align 8
  %147 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %146, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %148 = bitcast %"class.SkSL::Type"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #12
  %151 = bitcast i8* %150 to i32 (...)***
  %152 = getelementptr inbounds i8, i8* %150, i64 8
  %153 = bitcast i8* %152 to i32*
  store i32 -1, i32* %153, align 8
  %154 = getelementptr inbounds i8, i8* %150, i64 12
  %155 = bitcast i8* %154 to i32*
  store i32 31, i32* %155, align 4
  %156 = getelementptr inbounds i8, i8* %150, i64 16
  %157 = bitcast i8* %156 to i64*
  store i64 %149, i64* %157, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %158 = getelementptr inbounds i8, i8* %150, i64 24
  store i8 1, i8* %158, align 8
  %159 = ptrtoint i8* %150 to i64
  %160 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %129, align 8
  %161 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %160, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %162 = bitcast %"class.SkSL::Type"** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = ptrtoint %"class.SkSL::Expression"* %145 to i64
  %165 = bitcast i8* %139 to i32 (...)***
  %166 = getelementptr inbounds i8, i8* %139, i64 8
  %167 = bitcast i8* %166 to i32*
  store i32 -1, i32* %167, align 8
  %168 = getelementptr inbounds i8, i8* %139, i64 12
  %169 = bitcast i8* %168 to i32*
  store i32 30, i32* %169, align 4
  %170 = getelementptr inbounds i8, i8* %139, i64 16
  %171 = bitcast i8* %170 to i64*
  store i64 %163, i64* %171, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16BinaryExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %172 = getelementptr inbounds i8, i8* %139, i64 24
  %173 = bitcast i8* %172 to i64*
  store i64 %164, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %139, i64 32
  %175 = bitcast i8* %174 to i32*
  store i32 59, i32* %175, align 8
  %176 = getelementptr inbounds i8, i8* %139, i64 40
  %177 = bitcast i8* %176 to i64*
  store i64 %159, i64* %177, align 8
  %178 = bitcast i8* %139 to %"class.SkSL::Expression"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %178, i32 17)
  %179 = icmp eq i8* %139, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %138
  %181 = bitcast i8* %139 to void (%"class.SkSL::Expression"*)***
  %182 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %182, i64 1
  %184 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %183, align 8
  tail call void %184(%"class.SkSL::Expression"* nonnull %178) #12
  br label %186

185:                                              ; preds = %128
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %126, i32 17)
  br label %186

186:                                              ; preds = %124, %180, %138, %185
  %187 = load i8, i8* %65, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %203, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %203

193:                                              ; preds = %189, %193
  %194 = phi i32 [ %200, %193 ], [ 0, %189 ]
  %195 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %196 = bitcast %"class.SkSL::OutputStream"* %195 to void (%"class.SkSL::OutputStream"*, i8*)***
  %197 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %197, i64 2
  %199 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %198, align 8
  tail call void %199(%"class.SkSL::OutputStream"* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %200 = add nuw nsw i32 %194, 1
  %201 = load i32, i32* %190, align 4
  %202 = icmp slt i32 %200, %201
  br i1 %202, label %193, label %203

203:                                              ; preds = %193, %186, %189
  %204 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %205 = bitcast %"class.SkSL::OutputStream"* %204 to void (%"class.SkSL::OutputStream"*, i8*)***
  %206 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %205, align 8
  %207 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %206, i64 2
  %208 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %207, align 8
  tail call void %208(%"class.SkSL::OutputStream"* %204, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.139, i64 0, i64 0)) #12
  store i8 0, i8* %65, align 8
  %209 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %210 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %209, align 8
  %211 = icmp eq %"class.SkSL::Expression"* %210, null
  br i1 %211, label %229, label %212

212:                                              ; preds = %203
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %210, i32 17)
  %213 = load i8, i8* %65, align 8
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %229, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %217 = load i32, i32* %216, align 4
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %219, label %229

219:                                              ; preds = %215, %219
  %220 = phi i32 [ %226, %219 ], [ 0, %215 ]
  %221 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %222 = bitcast %"class.SkSL::OutputStream"* %221 to void (%"class.SkSL::OutputStream"*, i8*)***
  %223 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %223, i64 2
  %225 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %224, align 8
  tail call void %225(%"class.SkSL::OutputStream"* %221, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %226 = add nuw nsw i32 %220, 1
  %227 = load i32, i32* %216, align 4
  %228 = icmp slt i32 %226, %227
  br i1 %228, label %219, label %229

229:                                              ; preds = %219, %203, %212, %215
  %230 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %231 = bitcast %"class.SkSL::OutputStream"* %230 to void (%"class.SkSL::OutputStream"*, i8*)***
  %232 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %232, i64 2
  %234 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %233, align 8
  tail call void %234(%"class.SkSL::OutputStream"* %230, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i64 0, i64 0)) #12
  br label %235

235:                                              ; preds = %229, %58
  %236 = phi i8* [ %65, %229 ], [ %15, %58 ]
  store i8 0, i8* %236, align 8
  %237 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %238 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %237, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %238)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator16writeDoStatementERKNS_11DoStatementE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::DoStatement"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %6 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 2
  %8 = load %class.GrShaderCaps*, %class.GrShaderCaps** %7, align 8
  %9 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %8, i64 0, i32 2
  %10 = bitcast i56* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 274877906944
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %89

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ 0, %22 ], [ %31, %24 ]
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %31 = add nuw nsw i32 %25, 1
  %32 = load i32, i32* %19, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %24, label %34

34:                                               ; preds = %24, %14, %18
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %36 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %36 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  tail call void %40(%"class.SkSL::OutputStream"* %36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.140, i64 0, i64 0)) #12
  store i8 0, i8* %15, align 8
  %41 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %41, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %42)
  %43 = load i8, i8* %15, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %59, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %45, %49
  %50 = phi i32 [ %56, %49 ], [ 0, %45 ]
  %51 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %52 = bitcast %"class.SkSL::OutputStream"* %51 to void (%"class.SkSL::OutputStream"*, i8*)***
  %53 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, i64 2
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, align 8
  tail call void %55(%"class.SkSL::OutputStream"* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %56 = add nuw nsw i32 %50, 1
  %57 = load i32, i32* %46, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %49, label %59

59:                                               ; preds = %49, %34, %45
  %60 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %60 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::OutputStream"* %60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.141, i64 0, i64 0)) #12
  store i8 0, i8* %15, align 8
  %65 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %66 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %65, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %66, i32 17)
  %67 = load i8, i8* %15, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %69, %73
  %74 = phi i32 [ %80, %73 ], [ 0, %69 ]
  %75 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %76 = bitcast %"class.SkSL::OutputStream"* %75 to void (%"class.SkSL::OutputStream"*, i8*)***
  %77 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, i64 2
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, align 8
  tail call void %79(%"class.SkSL::OutputStream"* %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %80 = add nuw nsw i32 %74, 1
  %81 = load i32, i32* %70, align 4
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %73, label %83

83:                                               ; preds = %73, %59, %69
  %84 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %85 = bitcast %"class.SkSL::OutputStream"* %84 to void (%"class.SkSL::OutputStream"*, i8*)***
  %86 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, i64 2
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, align 8
  tail call void %88(%"class.SkSL::OutputStream"* %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.142, i64 0, i64 0)) #12
  store i8 0, i8* %15, align 8
  br label %433

89:                                               ; preds = %2
  %90 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.SkSL::String"* %4 to i8*
  %93 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  %94 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 7
  %95 = load i32, i32* %94, align 8
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %94, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %4, i32 %95) #12
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.143, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #12
  %97 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %89, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  %105 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %124, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %114

114:                                              ; preds = %114, %112
  %115 = phi i32 [ 0, %112 ], [ %121, %114 ]
  %116 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %113, align 8
  %117 = bitcast %"class.SkSL::OutputStream"* %116 to void (%"class.SkSL::OutputStream"*, i8*)***
  %118 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, i64 2
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %121 = add nuw nsw i32 %115, 1
  %122 = load i32, i32* %109, align 4
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %114, label %124

124:                                              ; preds = %114, %104, %108
  %125 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %126 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %127 = bitcast %"class.SkSL::OutputStream"* %126 to void (%"class.SkSL::OutputStream"*, i8*)***
  %128 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %128, i64 2
  %130 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %129, align 8
  call void %130(%"class.SkSL::OutputStream"* %126, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.144, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %131 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = load i8*, i8** %91, align 8
  %136 = select i1 %134, i8* %135, i8* %90
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %124
  %140 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %141 = bitcast %"class.SkSL::OutputStream"* %140 to void (%"class.SkSL::OutputStream"*, i8*)***
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %142, i64 2
  %144 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %140, i8* %136) #12
  store i8 0, i8* %105, align 8
  br label %145

145:                                              ; preds = %124, %139
  %146 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %147 = bitcast %"class.SkSL::OutputStream"* %146 to void (%"class.SkSL::OutputStream"*, i8*)***
  %148 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %148, i64 2
  %150 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %146, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %151 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %152 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %153 = load i8*, i8** %152, align 8
  %154 = bitcast %"class.SkSL::OutputStream"* %151 to void (%"class.SkSL::OutputStream"*, i8*)***
  %155 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %155, i64 2
  %157 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %151, i8* %153) #12
  store i8 1, i8* %105, align 8
  %158 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %171

161:                                              ; preds = %145, %161
  %162 = phi i32 [ %168, %161 ], [ 0, %145 ]
  %163 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %164 = bitcast %"class.SkSL::OutputStream"* %163 to void (%"class.SkSL::OutputStream"*, i8*)***
  %165 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %165, i64 2
  %167 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, align 8
  call void %167(%"class.SkSL::OutputStream"* %163, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %168 = add nuw nsw i32 %162, 1
  %169 = load i32, i32* %158, align 4
  %170 = icmp slt i32 %168, %169
  br i1 %170, label %161, label %171

171:                                              ; preds = %161, %145
  %172 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %173 = bitcast %"class.SkSL::OutputStream"* %172 to void (%"class.SkSL::OutputStream"*, i8*)***
  %174 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, i64 2
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, align 8
  call void %176(%"class.SkSL::OutputStream"* %172, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %177 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %178 = load i8*, i8** %152, align 8
  %179 = bitcast %"class.SkSL::OutputStream"* %177 to void (%"class.SkSL::OutputStream"*, i8*)***
  %180 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %180, i64 2
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %181, align 8
  call void %182(%"class.SkSL::OutputStream"* %177, i8* %178) #12
  store i8 1, i8* %105, align 8
  %183 = load i32, i32* %158, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %158, align 4
  %185 = icmp sgt i32 %183, -1
  br i1 %185, label %186, label %196

186:                                              ; preds = %171, %186
  %187 = phi i32 [ %193, %186 ], [ 0, %171 ]
  %188 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %189 = bitcast %"class.SkSL::OutputStream"* %188 to void (%"class.SkSL::OutputStream"*, i8*)***
  %190 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, i64 2
  %192 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %191, align 8
  call void %192(%"class.SkSL::OutputStream"* %188, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %193 = add nuw nsw i32 %187, 1
  %194 = load i32, i32* %158, align 4
  %195 = icmp slt i32 %193, %194
  br i1 %195, label %186, label %196

196:                                              ; preds = %186, %171
  %197 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %198 = bitcast %"class.SkSL::OutputStream"* %197 to void (%"class.SkSL::OutputStream"*, i8*)***
  %199 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %199, i64 2
  %201 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %200, align 8
  call void %201(%"class.SkSL::OutputStream"* %197, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %202 = load i8, i8* %132, align 1
  %203 = icmp slt i8 %202, 0
  %204 = load i8*, i8** %91, align 8
  %205 = select i1 %203, i8* %204, i8* %90
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %214, label %208

208:                                              ; preds = %196
  %209 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %210 = bitcast %"class.SkSL::OutputStream"* %209 to void (%"class.SkSL::OutputStream"*, i8*)***
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, i64 2
  %213 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, align 8
  call void %213(%"class.SkSL::OutputStream"* %209, i8* %205) #12
  store i8 0, i8* %105, align 8
  br label %214

214:                                              ; preds = %196, %208
  %215 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %216 = bitcast %"class.SkSL::OutputStream"* %215 to void (%"class.SkSL::OutputStream"*, i8*)***
  %217 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %216, align 8
  %218 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %217, i64 2
  %219 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %218, align 8
  call void %219(%"class.SkSL::OutputStream"* %215, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %220 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %221 = load i8*, i8** %152, align 8
  %222 = bitcast %"class.SkSL::OutputStream"* %220 to void (%"class.SkSL::OutputStream"*, i8*)***
  %223 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %223, i64 2
  %225 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %224, align 8
  call void %225(%"class.SkSL::OutputStream"* %220, i8* %221) #12
  store i8 1, i8* %105, align 8
  %226 = load i32, i32* %158, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %158, align 4
  %228 = icmp sgt i32 %226, -1
  br i1 %228, label %229, label %239

229:                                              ; preds = %214, %229
  %230 = phi i32 [ %236, %229 ], [ 0, %214 ]
  %231 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %232 = bitcast %"class.SkSL::OutputStream"* %231 to void (%"class.SkSL::OutputStream"*, i8*)***
  %233 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %233, i64 2
  %235 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %234, align 8
  call void %235(%"class.SkSL::OutputStream"* %231, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %236 = add nuw nsw i32 %230, 1
  %237 = load i32, i32* %158, align 4
  %238 = icmp slt i32 %236, %237
  br i1 %238, label %229, label %239

239:                                              ; preds = %229, %214
  %240 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %241 = bitcast %"class.SkSL::OutputStream"* %240 to void (%"class.SkSL::OutputStream"*, i8*)***
  %242 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %241, align 8
  %243 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %242, i64 2
  %244 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %243, align 8
  call void %244(%"class.SkSL::OutputStream"* %240, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.148, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %245 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %246 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %245, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %246, i32 3)
  %247 = load i8, i8* %105, align 8, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %262, label %249

249:                                              ; preds = %239
  %250 = load i32, i32* %158, align 4
  %251 = icmp sgt i32 %250, 0
  br i1 %251, label %252, label %262

252:                                              ; preds = %249, %252
  %253 = phi i32 [ %259, %252 ], [ 0, %249 ]
  %254 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %255 = bitcast %"class.SkSL::OutputStream"* %254 to void (%"class.SkSL::OutputStream"*, i8*)***
  %256 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %255, align 8
  %257 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %256, i64 2
  %258 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %257, align 8
  call void %258(%"class.SkSL::OutputStream"* %254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %259 = add nuw nsw i32 %253, 1
  %260 = load i32, i32* %158, align 4
  %261 = icmp slt i32 %259, %260
  br i1 %261, label %252, label %262

262:                                              ; preds = %252, %249, %239
  %263 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %264 = bitcast %"class.SkSL::OutputStream"* %263 to void (%"class.SkSL::OutputStream"*, i8*)***
  %265 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %265, i64 2
  %267 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %266, align 8
  call void %267(%"class.SkSL::OutputStream"* %263, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %268 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %269 = load i8*, i8** %152, align 8
  %270 = bitcast %"class.SkSL::OutputStream"* %268 to void (%"class.SkSL::OutputStream"*, i8*)***
  %271 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %271, i64 2
  %273 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, align 8
  call void %273(%"class.SkSL::OutputStream"* %268, i8* %269) #12
  store i8 1, i8* %105, align 8
  %274 = load i32, i32* %158, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %158, align 4
  %276 = icmp sgt i32 %274, -1
  br i1 %276, label %277, label %287

277:                                              ; preds = %262, %277
  %278 = phi i32 [ %284, %277 ], [ 0, %262 ]
  %279 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %280 = bitcast %"class.SkSL::OutputStream"* %279 to void (%"class.SkSL::OutputStream"*, i8*)***
  %281 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %280, align 8
  %282 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %281, i64 2
  %283 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %282, align 8
  call void %283(%"class.SkSL::OutputStream"* %279, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %284 = add nuw nsw i32 %278, 1
  %285 = load i32, i32* %158, align 4
  %286 = icmp slt i32 %284, %285
  br i1 %286, label %277, label %287

287:                                              ; preds = %277, %262
  %288 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %289 = bitcast %"class.SkSL::OutputStream"* %288 to void (%"class.SkSL::OutputStream"*, i8*)***
  %290 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %289, align 8
  %291 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %290, i64 2
  %292 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %291, align 8
  call void %292(%"class.SkSL::OutputStream"* %288, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %293 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %294 = load i8*, i8** %152, align 8
  %295 = bitcast %"class.SkSL::OutputStream"* %293 to void (%"class.SkSL::OutputStream"*, i8*)***
  %296 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %296, i64 2
  %298 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %297, align 8
  call void %298(%"class.SkSL::OutputStream"* %293, i8* %294) #12
  store i8 1, i8* %105, align 8
  %299 = load i32, i32* %158, align 4
  %300 = add nsw i32 %299, -1
  store i32 %300, i32* %158, align 4
  %301 = icmp sgt i32 %300, 0
  br i1 %301, label %302, label %312

302:                                              ; preds = %287, %302
  %303 = phi i32 [ %309, %302 ], [ 0, %287 ]
  %304 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %305 = bitcast %"class.SkSL::OutputStream"* %304 to void (%"class.SkSL::OutputStream"*, i8*)***
  %306 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %305, align 8
  %307 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %306, i64 2
  %308 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %307, align 8
  call void %308(%"class.SkSL::OutputStream"* %304, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %309 = add nuw nsw i32 %303, 1
  %310 = load i32, i32* %158, align 4
  %311 = icmp slt i32 %309, %310
  br i1 %311, label %302, label %312

312:                                              ; preds = %302, %287
  %313 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %314 = bitcast %"class.SkSL::OutputStream"* %313 to void (%"class.SkSL::OutputStream"*, i8*)***
  %315 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %315, i64 2
  %317 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %316, align 8
  call void %317(%"class.SkSL::OutputStream"* %313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %318 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %319 = load i8*, i8** %152, align 8
  %320 = bitcast %"class.SkSL::OutputStream"* %318 to void (%"class.SkSL::OutputStream"*, i8*)***
  %321 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %320, align 8
  %322 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %321, i64 2
  %323 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %322, align 8
  call void %323(%"class.SkSL::OutputStream"* %318, i8* %319) #12
  store i8 1, i8* %105, align 8
  %324 = load i32, i32* %158, align 4
  %325 = add nsw i32 %324, -1
  store i32 %325, i32* %158, align 4
  %326 = icmp sgt i32 %325, 0
  br i1 %326, label %327, label %337

327:                                              ; preds = %312, %327
  %328 = phi i32 [ %334, %327 ], [ 0, %312 ]
  %329 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %330 = bitcast %"class.SkSL::OutputStream"* %329 to void (%"class.SkSL::OutputStream"*, i8*)***
  %331 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %331, i64 2
  %333 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %332, align 8
  call void %333(%"class.SkSL::OutputStream"* %329, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %334 = add nuw nsw i32 %328, 1
  %335 = load i32, i32* %158, align 4
  %336 = icmp slt i32 %334, %335
  br i1 %336, label %327, label %337

337:                                              ; preds = %327, %312
  %338 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %339 = bitcast %"class.SkSL::OutputStream"* %338 to void (%"class.SkSL::OutputStream"*, i8*)***
  %340 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %339, align 8
  %341 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %340, i64 2
  %342 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %341, align 8
  call void %342(%"class.SkSL::OutputStream"* %338, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %343 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %344 = load i8*, i8** %152, align 8
  %345 = bitcast %"class.SkSL::OutputStream"* %343 to void (%"class.SkSL::OutputStream"*, i8*)***
  %346 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %345, align 8
  %347 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %346, i64 2
  %348 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %347, align 8
  call void %348(%"class.SkSL::OutputStream"* %343, i8* %344) #12
  store i8 1, i8* %105, align 8
  %349 = load i8, i8* %132, align 1
  %350 = icmp slt i8 %349, 0
  %351 = load i8*, i8** %91, align 8
  %352 = select i1 %350, i8* %351, i8* %90
  %353 = load i8, i8* %352, align 1
  %354 = icmp eq i8 %353, 0
  %355 = load i32, i32* %158, align 4
  %356 = icmp sgt i32 %355, 0
  br i1 %354, label %374, label %357

357:                                              ; preds = %337
  br i1 %356, label %358, label %368

358:                                              ; preds = %357, %358
  %359 = phi i32 [ %365, %358 ], [ 0, %357 ]
  %360 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %361 = bitcast %"class.SkSL::OutputStream"* %360 to void (%"class.SkSL::OutputStream"*, i8*)***
  %362 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %362, i64 2
  %364 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %363, align 8
  call void %364(%"class.SkSL::OutputStream"* %360, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %365 = add nuw nsw i32 %359, 1
  %366 = load i32, i32* %158, align 4
  %367 = icmp slt i32 %365, %366
  br i1 %367, label %358, label %368

368:                                              ; preds = %358, %357
  %369 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %370 = bitcast %"class.SkSL::OutputStream"* %369 to void (%"class.SkSL::OutputStream"*, i8*)***
  %371 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %370, align 8
  %372 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %371, i64 2
  %373 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %372, align 8
  call void %373(%"class.SkSL::OutputStream"* %369, i8* %352) #12
  store i8 0, i8* %105, align 8
  br label %385

374:                                              ; preds = %337
  br i1 %356, label %375, label %385

375:                                              ; preds = %374, %375
  %376 = phi i32 [ %382, %375 ], [ 0, %374 ]
  %377 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %378 = bitcast %"class.SkSL::OutputStream"* %377 to void (%"class.SkSL::OutputStream"*, i8*)***
  %379 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %378, align 8
  %380 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %379, i64 2
  %381 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %380, align 8
  call void %381(%"class.SkSL::OutputStream"* %377, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %382 = add nuw nsw i32 %376, 1
  %383 = load i32, i32* %158, align 4
  %384 = icmp slt i32 %382, %383
  br i1 %384, label %375, label %385

385:                                              ; preds = %375, %368, %374
  %386 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %387 = bitcast %"class.SkSL::OutputStream"* %386 to void (%"class.SkSL::OutputStream"*, i8*)***
  %388 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %387, align 8
  %389 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %388, i64 2
  %390 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %389, align 8
  call void %390(%"class.SkSL::OutputStream"* %386, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %391 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %392 = load i8*, i8** %152, align 8
  %393 = bitcast %"class.SkSL::OutputStream"* %391 to void (%"class.SkSL::OutputStream"*, i8*)***
  %394 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %394, i64 2
  %396 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %395, align 8
  call void %396(%"class.SkSL::OutputStream"* %391, i8* %392) #12
  store i8 1, i8* %105, align 8
  %397 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %398 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %397, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %398)
  %399 = load i8, i8* %105, align 8, !range !2
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %401, label %408

401:                                              ; preds = %385
  %402 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %403 = load i8*, i8** %152, align 8
  %404 = bitcast %"class.SkSL::OutputStream"* %402 to void (%"class.SkSL::OutputStream"*, i8*)***
  %405 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %404, align 8
  %406 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %405, i64 2
  %407 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %406, align 8
  call void %407(%"class.SkSL::OutputStream"* %402, i8* %403) #12
  store i8 1, i8* %105, align 8
  br label %408

408:                                              ; preds = %401, %385
  %409 = load i32, i32* %158, align 4
  %410 = add nsw i32 %409, -1
  store i32 %410, i32* %158, align 4
  %411 = icmp sgt i32 %410, 0
  br i1 %411, label %412, label %422

412:                                              ; preds = %408, %412
  %413 = phi i32 [ %419, %412 ], [ 0, %408 ]
  %414 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %415 = bitcast %"class.SkSL::OutputStream"* %414 to void (%"class.SkSL::OutputStream"*, i8*)***
  %416 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %415, align 8
  %417 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %416, i64 2
  %418 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %417, align 8
  call void %418(%"class.SkSL::OutputStream"* %414, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %419 = add nuw nsw i32 %413, 1
  %420 = load i32, i32* %158, align 4
  %421 = icmp slt i32 %419, %420
  br i1 %421, label %412, label %422

422:                                              ; preds = %412, %408
  %423 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %424 = bitcast %"class.SkSL::OutputStream"* %423 to void (%"class.SkSL::OutputStream"*, i8*)***
  %425 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %424, align 8
  %426 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %425, i64 2
  %427 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %426, align 8
  call void %427(%"class.SkSL::OutputStream"* %423, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #12
  store i8 0, i8* %105, align 8
  %428 = load i8, i8* %132, align 1
  %429 = icmp slt i8 %428, 0
  br i1 %429, label %430, label %432

430:                                              ; preds = %422
  %431 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %431) #14
  br label %432

432:                                              ; preds = %422, %430
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  br label %433

433:                                              ; preds = %432, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator16writeIfStatementERKNS_11IfStatementE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::IfStatement"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %29 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %30, i32 17)
  %31 = load i8, i8* %3, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %37
  %38 = phi i32 [ %44, %37 ], [ 0, %33 ]
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %44 = add nuw nsw i32 %38, 1
  %45 = load i32, i32* %34, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %37, label %47

47:                                               ; preds = %37, %22, %33
  %48 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %49 = bitcast %"class.SkSL::OutputStream"* %48 to void (%"class.SkSL::OutputStream"*, i8*)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, align 8
  tail call void %52(%"class.SkSL::OutputStream"* %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %53 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %53, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %54)
  %55 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %55, align 8
  %57 = icmp eq %"class.SkSL::Statement"* %56, null
  br i1 %57, label %82, label %58

58:                                               ; preds = %47
  %59 = load i8, i8* %3, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %61, %65
  %66 = phi i32 [ %72, %65 ], [ 0, %61 ]
  %67 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %68 = bitcast %"class.SkSL::OutputStream"* %67 to void (%"class.SkSL::OutputStream"*, i8*)***
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, i64 2
  %71 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, align 8
  tail call void %71(%"class.SkSL::OutputStream"* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %72 = add nuw nsw i32 %66, 1
  %73 = load i32, i32* %62, align 4
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58, %61
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  tail call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %81 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %55, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %81)
  br label %82

82:                                               ; preds = %47, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator20writeSwitchStatementERKNS_15SwitchStatementE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::SwitchStatement"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.150, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %29 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %30, i32 17)
  %31 = load i8, i8* %3, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %37
  %38 = phi i32 [ %44, %37 ], [ 0, %33 ]
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %44 = add nuw nsw i32 %38, 1
  %45 = load i32, i32* %34, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %37, label %47

47:                                               ; preds = %37, %22, %33
  %48 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %49 = bitcast %"class.SkSL::OutputStream"* %48 to void (%"class.SkSL::OutputStream"*, i8*)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, align 8
  tail call void %52(%"class.SkSL::OutputStream"* %48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %54 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %55 = load i8*, i8** %54, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %53, i8* %55) #12
  store i8 1, i8* %3, align 8
  %60 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 16
  %64 = bitcast i8* %63 to %"class.std::__1::unique_ptr.155"**
  %65 = load %"class.std::__1::unique_ptr.155"*, %"class.std::__1::unique_ptr.155"** %64, align 8
  %66 = icmp eq %"class.std::__1::unique_ptr.155"* %65, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 24
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %65, i64 %72
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %108

75:                                               ; preds = %67, %47
  store i32 %61, i32* %60, align 4
  br label %89

76:                                               ; preds = %215
  %77 = load i32, i32* %60, align 4
  %78 = load i8, i8* %3, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  %80 = add nsw i32 %77, -1
  store i32 %80, i32* %60, align 4
  br i1 %79, label %81, label %89

81:                                               ; preds = %76
  %82 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %83 = load i8*, i8** %54, align 8
  %84 = bitcast %"class.SkSL::OutputStream"* %82 to void (%"class.SkSL::OutputStream"*, i8*)***
  %85 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %85, i64 2
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, align 8
  tail call void %87(%"class.SkSL::OutputStream"* %82, i8* %83) #12
  store i8 1, i8* %3, align 8
  %88 = load i32, i32* %60, align 4
  br label %89

89:                                               ; preds = %75, %81, %76
  %90 = phi i32 [ %88, %81 ], [ %80, %76 ], [ %61, %75 ]
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %89, %92
  %93 = phi i32 [ %99, %92 ], [ 0, %89 ]
  %94 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %95 = bitcast %"class.SkSL::OutputStream"* %94 to void (%"class.SkSL::OutputStream"*, i8*)***
  %96 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, i64 2
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, align 8
  tail call void %98(%"class.SkSL::OutputStream"* %94, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %99 = add nuw nsw i32 %93, 1
  %100 = load i32, i32* %60, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %92, label %102

102:                                              ; preds = %92, %89
  %103 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %104 = bitcast %"class.SkSL::OutputStream"* %103 to void (%"class.SkSL::OutputStream"*, i8*)***
  %105 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, i64 2
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %106, align 8
  tail call void %107(%"class.SkSL::OutputStream"* %103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  ret void

108:                                              ; preds = %67, %218
  %109 = phi i8 [ %219, %218 ], [ 1, %67 ]
  %110 = phi %"class.std::__1::unique_ptr.155"* [ %216, %218 ], [ %65, %67 ]
  %111 = bitcast %"class.std::__1::unique_ptr.155"* %110 to %"class.SkSL::SwitchCase"**
  %112 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %111, align 8
  %113 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %112, i64 0, i32 1, i32 0, i32 0, i32 0
  %114 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %113, align 8
  %115 = icmp eq %"class.SkSL::Expression"* %114, null
  %116 = icmp eq i8 %109, 0
  br i1 %115, label %165, label %117

117:                                              ; preds = %108
  br i1 %116, label %131, label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %60, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %121, label %131

121:                                              ; preds = %118, %121
  %122 = phi i32 [ %128, %121 ], [ 0, %118 ]
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  tail call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %128 = add nuw nsw i32 %122, 1
  %129 = load i32, i32* %60, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %121, label %131

131:                                              ; preds = %121, %117, %118
  %132 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %133 = bitcast %"class.SkSL::OutputStream"* %132 to void (%"class.SkSL::OutputStream"*, i8*)***
  %134 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %134, i64 2
  %136 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, align 8
  tail call void %136(%"class.SkSL::OutputStream"* %132, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.151, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %137 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %113, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %137, i32 17)
  %138 = load i8, i8* %3, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %153, label %140

140:                                              ; preds = %131
  %141 = load i32, i32* %60, align 4
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %143, label %153

143:                                              ; preds = %140, %143
  %144 = phi i32 [ %150, %143 ], [ 0, %140 ]
  %145 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %146 = bitcast %"class.SkSL::OutputStream"* %145 to void (%"class.SkSL::OutputStream"*, i8*)***
  %147 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %147, i64 2
  %149 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %148, align 8
  tail call void %149(%"class.SkSL::OutputStream"* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %150 = add nuw nsw i32 %144, 1
  %151 = load i32, i32* %60, align 4
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %143, label %153

153:                                              ; preds = %143, %131, %140
  %154 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %155 = bitcast %"class.SkSL::OutputStream"* %154 to void (%"class.SkSL::OutputStream"*, i8*)***
  %156 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %156, i64 2
  %158 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %157, align 8
  tail call void %158(%"class.SkSL::OutputStream"* %154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %159 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %160 = load i8*, i8** %54, align 8
  %161 = bitcast %"class.SkSL::OutputStream"* %159 to void (%"class.SkSL::OutputStream"*, i8*)***
  %162 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %162, i64 2
  %164 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %163, align 8
  tail call void %164(%"class.SkSL::OutputStream"* %159, i8* %160) #12
  br label %191

165:                                              ; preds = %108
  br i1 %116, label %179, label %166

166:                                              ; preds = %165
  %167 = load i32, i32* %60, align 4
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %179

169:                                              ; preds = %166, %169
  %170 = phi i32 [ %176, %169 ], [ 0, %166 ]
  %171 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %172 = bitcast %"class.SkSL::OutputStream"* %171 to void (%"class.SkSL::OutputStream"*, i8*)***
  %173 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %173, i64 2
  %175 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, align 8
  tail call void %175(%"class.SkSL::OutputStream"* %171, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %176 = add nuw nsw i32 %170, 1
  %177 = load i32, i32* %60, align 4
  %178 = icmp slt i32 %176, %177
  br i1 %178, label %169, label %179

179:                                              ; preds = %169, %165, %166
  %180 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %181 = bitcast %"class.SkSL::OutputStream"* %180 to void (%"class.SkSL::OutputStream"*, i8*)***
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %182, i64 2
  %184 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, align 8
  tail call void %184(%"class.SkSL::OutputStream"* %180, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.153, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %185 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %186 = load i8*, i8** %54, align 8
  %187 = bitcast %"class.SkSL::OutputStream"* %185 to void (%"class.SkSL::OutputStream"*, i8*)***
  %188 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %188, i64 2
  %190 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %189, align 8
  tail call void %190(%"class.SkSL::OutputStream"* %185, i8* %186) #12
  br label %191

191:                                              ; preds = %179, %153
  store i8 1, i8* %3, align 8
  %192 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %112, i64 0, i32 2, i32 0, i32 0, i32 0
  %193 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %192, align 8
  %194 = bitcast %"class.SkSL::Statement"* %193 to i1 (%"class.SkSL::Statement"*)***
  %195 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %194, align 8
  %196 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %195, i64 3
  %197 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %196, align 8
  %198 = tail call zeroext i1 %197(%"class.SkSL::Statement"* %193) #12
  br i1 %198, label %215, label %199

199:                                              ; preds = %191
  %200 = load i32, i32* %60, align 4
  %201 = add nsw i32 %200, 1
  store i32 %201, i32* %60, align 4
  %202 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %192, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %202)
  %203 = load i8, i8* %3, align 8, !range !2
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %212

205:                                              ; preds = %199
  %206 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %207 = load i8*, i8** %54, align 8
  %208 = bitcast %"class.SkSL::OutputStream"* %206 to void (%"class.SkSL::OutputStream"*, i8*)***
  %209 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %209, i64 2
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %210, align 8
  tail call void %211(%"class.SkSL::OutputStream"* %206, i8* %207) #12
  store i8 1, i8* %3, align 8
  br label %212

212:                                              ; preds = %199, %205
  %213 = load i32, i32* %60, align 4
  %214 = add nsw i32 %213, -1
  store i32 %214, i32* %60, align 4
  br label %215

215:                                              ; preds = %212, %191
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155"* %110, i64 1
  %217 = icmp eq %"class.std::__1::unique_ptr.155"* %216, %73
  br i1 %217, label %76, label %218

218:                                              ; preds = %215
  %219 = load i8, i8* %3, align 8, !range !2
  br label %108
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator20writeReturnStatementERKNS_15ReturnStatementE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ReturnStatement"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %29 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  %31 = icmp eq %"class.SkSL::Expression"* %30, null
  br i1 %31, label %55, label %32

32:                                               ; preds = %22
  %33 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %33 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  %38 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %38, i32 17)
  %39 = load i8, i8* %3, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %41, %45
  %46 = phi i32 [ %52, %45 ], [ 0, %41 ]
  %47 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %48 = bitcast %"class.SkSL::OutputStream"* %47 to void (%"class.SkSL::OutputStream"*, i8*)***
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, i64 2
  %51 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, align 8
  tail call void %51(%"class.SkSL::OutputStream"* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %52 = add nuw nsw i32 %46, 1
  %53 = load i32, i32* %42, align 4
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %45, label %55

55:                                               ; preds = %45, %22, %32, %41
  %56 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %57 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, align 8
  tail call void %60(%"class.SkSL::OutputStream"* %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator11writeHeaderEv(%"class.SkSL::GLSLCodeGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %3 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %3, i64 0, i32 2
  %5 = load %class.GrShaderCaps*, %class.GrShaderCaps** %4, align 8
  %6 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %5, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %1
  %10 = load i8, i8* %7, align 1
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %11, label %39, label %15

15:                                               ; preds = %9
  br i1 %14, label %32, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i32 [ 0, %20 ], [ %29, %22 ]
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %21, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %29 = add nuw nsw i32 %23, 1
  %30 = load i32, i32* %17, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %22, label %32

32:                                               ; preds = %22, %15, %16
  %33 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %35 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, i64 2
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, align 8
  tail call void %38(%"class.SkSL::OutputStream"* %34, i8* nonnull %7) #12
  store i8 0, i8* %12, align 8
  br label %40

39:                                               ; preds = %9
  br i1 %14, label %40, label %50

40:                                               ; preds = %32, %39
  %41 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %42 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %43 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.SkSL::OutputStream"* %43 to void (%"class.SkSL::OutputStream"*, i8*)***
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, align 8
  tail call void %49(%"class.SkSL::OutputStream"* %43, i8* %45) #12
  store i8 1, i8* %41, align 8
  br label %50

50:                                               ; preds = %40, %39, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator19writeProgramElementERKNS_14ProgramElementE(%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %343 [
    i32 1, label %6
    i32 4, label %33
    i32 5, label %186
    i32 2, label %188
    i32 3, label %194
    i32 6, label %231
    i32 8, label %341
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1
  %8 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %9 = bitcast %class.SkWStream* %8 to i1 (%class.SkWStream*, i8*, i64)***
  %10 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %10, i64 2
  %12 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %11, align 8
  %13 = tail call zeroext i1 %12(%class.SkWStream* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %14 = bitcast %"class.SkSL::ProgramElement"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = bitcast %"class.SkSL::ProgramElement"* %7 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1, i32 0, i32 1
  %21 = bitcast i32* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.SkSL::ProgramElement"* %7 to i8*
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i8* %19, i8* %23
  %26 = select i1 %17, i64 %22, i64 %24
  %27 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %28 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %27, i8* %25, i64 %26) #12
  %29 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %9, align 8
  %30 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %29, i64 2
  %31 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %30, align 8
  %32 = tail call zeroext i1 %31(%class.SkWStream* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  br label %343

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1
  %35 = bitcast %"class.SkSL::ProgramElement"* %34 to %"class.SkSL::VarDeclaration"**
  %36 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %35, align 8
  %37 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %36, i64 0, i32 1
  %38 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %38, i64 0, i32 2
  %40 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %40, i64 0, i32 0, i32 6
  %42 = load i32, i32* %41, align 8
  switch i32 %42, label %343 [
    i32 -1, label %43
    i32 10001, label %56
  ]

43:                                               ; preds = %33
  tail call void @_ZN4SkSL17GLSLCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::VarDeclaration"* dereferenceable(48) %36, i1 zeroext true)
  %44 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %343

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %49 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"class.SkSL::OutputStream"* %49 to void (%"class.SkSL::OutputStream"*, i8*)***
  %53 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, i64 2
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, align 8
  tail call void %55(%"class.SkSL::OutputStream"* %49, i8* %51) #12
  store i8 1, i8* %44, align 8
  br label %343

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %58 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %57, align 8
  %59 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %58, i64 0, i32 2
  %60 = load %class.GrShaderCaps*, %class.GrShaderCaps** %59, align 8
  %61 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %343

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %66 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %65, align 8
  %67 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %71, label %99, label %75

75:                                               ; preds = %64
  br i1 %74, label %92, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i32 [ 0, %80 ], [ %89, %82 ]
  %84 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %81, align 8
  %85 = bitcast %"class.SkSL::OutputStream"* %84 to void (%"class.SkSL::OutputStream"*, i8*)***
  %86 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, i64 2
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, align 8
  tail call void %88(%"class.SkSL::OutputStream"* %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %89 = add nuw nsw i32 %83, 1
  %90 = load i32, i32* %77, align 4
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %82, label %92

92:                                               ; preds = %82, %75, %76
  %93 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %94 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %93, align 8
  %95 = bitcast %"class.SkSL::OutputStream"* %94 to void (%"class.SkSL::OutputStream"*, i8*)***
  %96 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, i64 2
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, align 8
  tail call void %98(%"class.SkSL::OutputStream"* %94, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i64 0, i64 0)) #12
  br label %123

99:                                               ; preds = %64
  br i1 %74, label %116, label %100

100:                                              ; preds = %99
  %101 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i32 [ 0, %104 ], [ %113, %106 ]
  %108 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %105, align 8
  %109 = bitcast %"class.SkSL::OutputStream"* %108 to void (%"class.SkSL::OutputStream"*, i8*)***
  %110 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %110, i64 2
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %111, align 8
  tail call void %112(%"class.SkSL::OutputStream"* %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %113 = add nuw nsw i32 %107, 1
  %114 = load i32, i32* %101, align 4
  %115 = icmp slt i32 %113, %114
  br i1 %115, label %106, label %116

116:                                              ; preds = %106, %99, %100
  %117 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %118 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %117, align 8
  %119 = bitcast %"class.SkSL::OutputStream"* %118 to void (%"class.SkSL::OutputStream"*, i8*)***
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %120, i64 2
  %122 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, align 8
  tail call void %122(%"class.SkSL::OutputStream"* %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i64 0, i64 0)) #12
  br label %123

123:                                              ; preds = %116, %92
  store i8 0, i8* %72, align 8
  %124 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %125 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %125, i64 4
  %127 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %129 = load i8, i8* %72, align 8, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %128, label %131, label %155

131:                                              ; preds = %123
  br i1 %130, label %148, label %132

132:                                              ; preds = %131
  %133 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i32 [ 0, %136 ], [ %145, %138 ]
  %140 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %137, align 8
  %141 = bitcast %"class.SkSL::OutputStream"* %140 to void (%"class.SkSL::OutputStream"*, i8*)***
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %142, i64 2
  %144 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %143, align 8
  tail call void %144(%"class.SkSL::OutputStream"* %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %145 = add nuw nsw i32 %139, 1
  %146 = load i32, i32* %133, align 4
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %138, label %148

148:                                              ; preds = %138, %132, %131
  %149 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %150 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %149, align 8
  %151 = bitcast %"class.SkSL::OutputStream"* %150 to void (%"class.SkSL::OutputStream"*, i8*)***
  %152 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %152, i64 2
  %154 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %153, align 8
  tail call void %154(%"class.SkSL::OutputStream"* %150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i64 0, i64 0)) #12
  store i8 0, i8* %72, align 8
  br label %172

155:                                              ; preds = %123
  br i1 %130, label %172, label %156

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %158 = load i32, i32* %157, align 4
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %162

162:                                              ; preds = %162, %160
  %163 = phi i32 [ 0, %160 ], [ %169, %162 ]
  %164 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %161, align 8
  %165 = bitcast %"class.SkSL::OutputStream"* %164 to void (%"class.SkSL::OutputStream"*, i8*)***
  %166 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, i64 2
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %167, align 8
  tail call void %168(%"class.SkSL::OutputStream"* %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %169 = add nuw nsw i32 %163, 1
  %170 = load i32, i32* %157, align 4
  %171 = icmp slt i32 %169, %170
  br i1 %171, label %162, label %172

172:                                              ; preds = %162, %148, %155, %156
  %173 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %174 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %173, align 8
  %175 = bitcast %"class.SkSL::OutputStream"* %174 to void (%"class.SkSL::OutputStream"*, i8*)***
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %176, i64 2
  %178 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %177, align 8
  tail call void %178(%"class.SkSL::OutputStream"* %174, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.155, i64 0, i64 0)) #12
  store i8 0, i8* %72, align 8
  %179 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %173, align 8
  %180 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %181 = load i8*, i8** %180, align 8
  %182 = bitcast %"class.SkSL::OutputStream"* %179 to void (%"class.SkSL::OutputStream"*, i8*)***
  %183 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, i64 2
  %185 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %184, align 8
  tail call void %185(%"class.SkSL::OutputStream"* %179, i8* %181) #12
  store i8 1, i8* %72, align 8
  br label %343

186:                                              ; preds = %2
  %187 = bitcast %"class.SkSL::ProgramElement"* %1 to %"class.SkSL::InterfaceBlock"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::InterfaceBlock"* dereferenceable(96) %187)
  br label %343

188:                                              ; preds = %2
  %189 = bitcast %"class.SkSL::ProgramElement"* %1 to %"class.SkSL::FunctionDefinition"*
  %190 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)***
  %191 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)** %191, i64 6
  %193 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::FunctionDefinition"*)** %192, align 8
  tail call void %193(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %189) #12
  br label %343

194:                                              ; preds = %2
  %195 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1
  %196 = bitcast %"class.SkSL::ProgramElement"* %195 to %"class.SkSL::FunctionDeclaration"**
  %197 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %196, align 8
  tail call void @_ZN4SkSL17GLSLCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %197) #12
  %198 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %199 = load i8, i8* %198, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %217, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %203 = load i32, i32* %202, align 4
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %207

207:                                              ; preds = %207, %205
  %208 = phi i32 [ 0, %205 ], [ %214, %207 ]
  %209 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %206, align 8
  %210 = bitcast %"class.SkSL::OutputStream"* %209 to void (%"class.SkSL::OutputStream"*, i8*)***
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, i64 2
  %213 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, align 8
  tail call void %213(%"class.SkSL::OutputStream"* %209, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %214 = add nuw nsw i32 %208, 1
  %215 = load i32, i32* %202, align 4
  %216 = icmp slt i32 %214, %215
  br i1 %216, label %207, label %217

217:                                              ; preds = %207, %194, %201
  %218 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %219 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %218, align 8
  %220 = bitcast %"class.SkSL::OutputStream"* %219 to void (%"class.SkSL::OutputStream"*, i8*)***
  %221 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %221, i64 2
  %223 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %222, align 8
  tail call void %223(%"class.SkSL::OutputStream"* %219, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %198, align 8
  %224 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %218, align 8
  %225 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %226 = load i8*, i8** %225, align 8
  %227 = bitcast %"class.SkSL::OutputStream"* %224 to void (%"class.SkSL::OutputStream"*, i8*)***
  %228 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %227, align 8
  %229 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %228, i64 2
  %230 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %229, align 8
  tail call void %230(%"class.SkSL::OutputStream"* %224, i8* %226) #12
  store i8 1, i8* %198, align 8
  br label %343

231:                                              ; preds = %2
  %232 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1
  %233 = bitcast %"class.SkSL::ProgramElement"* %232 to %"struct.SkSL::Modifiers"**
  %234 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %233, align 8
  %235 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 14
  %236 = load i8, i8* %235, align 1, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %238, label %307

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %234, i64 0, i32 0, i32 10
  %240 = load i32, i32* %239, align 8
  %241 = icmp sgt i32 %240, -1
  br i1 %241, label %242, label %307

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %244 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %243, align 8
  %245 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %244, i64 0, i32 2
  %246 = load %class.GrShaderCaps*, %class.GrShaderCaps** %245, align 8
  %247 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %246, i64 0, i32 6
  %248 = load i8*, i8** %247, align 8
  %249 = icmp eq i8* %248, null
  br i1 %249, label %306, label %250

250:                                              ; preds = %242
  %251 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %251) #12
  %252 = tail call i64 @strlen(i8* nonnull %248) #12
  %253 = icmp ugt i64 %252, -17
  br i1 %253, label %254, label %256

254:                                              ; preds = %250
  %255 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %255) #15
  unreachable

256:                                              ; preds = %250
  %257 = icmp ult i64 %252, 23
  br i1 %257, label %267, label %258

258:                                              ; preds = %256
  %259 = add nuw i64 %252, 16
  %260 = and i64 %259, -16
  %261 = tail call i8* @_Znwm(i64 %260) #14
  %262 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %261, i8** %262, align 8
  %263 = or i64 %260, -9223372036854775808
  %264 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %252, i64* %265, align 8
  %266 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %272

267:                                              ; preds = %256
  %268 = trunc i64 %252 to i8
  %269 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  store i8 %268, i8* %270, align 1
  %271 = icmp eq i64 %252, 0
  br i1 %271, label %275, label %272

272:                                              ; preds = %267, %258
  %273 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %269, %267 ], [ %266, %258 ]
  %274 = phi i8* [ %251, %267 ], [ %261, %258 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %274, i8* nonnull align 1 %248, i64 %252, i1 false) #12
  br label %275

275:                                              ; preds = %267, %272
  %276 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %269, %267 ], [ %273, %272 ]
  %277 = phi i8* [ %251, %267 ], [ %274, %272 ]
  %278 = getelementptr inbounds i8, i8* %277, i64 %252
  store i8 0, i8* %278, align 1
  %279 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %280 = bitcast %class.SkWStream* %279 to i1 (%class.SkWStream*, i8*, i64)***
  %281 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %280, align 8
  %282 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %281, i64 2
  %283 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %282, align 8
  %284 = tail call zeroext i1 %283(%class.SkWStream* %279, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %276, i64 0, i32 1, i32 0
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  %288 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %291 = load i64, i64* %290, align 8
  %292 = zext i8 %286 to i64
  %293 = select i1 %287, i8* %289, i8* %251
  %294 = select i1 %287, i64 %291, i64 %292
  %295 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %296 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %295, i8* %293, i64 %294) #12
  %297 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %280, align 8
  %298 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %297, i64 2
  %299 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %298, align 8
  %300 = call zeroext i1 %299(%class.SkWStream* %279, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  %301 = load i8, i8* %285, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %275
  %304 = load i8*, i8** %288, align 8
  call void @_ZdlPv(i8* %304) #14
  br label %305

305:                                              ; preds = %275, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %251) #12
  br label %306

306:                                              ; preds = %242, %305
  store i8 1, i8* %235, align 1
  br label %307

307:                                              ; preds = %231, %306, %238
  call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %234, i1 zeroext true)
  %308 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %309 = load i8, i8* %308, align 8, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %313 = load i32, i32* %312, align 4
  %314 = icmp sgt i32 %313, 0
  br i1 %314, label %315, label %327

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %317

317:                                              ; preds = %317, %315
  %318 = phi i32 [ 0, %315 ], [ %324, %317 ]
  %319 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %316, align 8
  %320 = bitcast %"class.SkSL::OutputStream"* %319 to void (%"class.SkSL::OutputStream"*, i8*)***
  %321 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %320, align 8
  %322 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %321, i64 2
  %323 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %322, align 8
  call void %323(%"class.SkSL::OutputStream"* %319, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %324 = add nuw nsw i32 %318, 1
  %325 = load i32, i32* %312, align 4
  %326 = icmp slt i32 %324, %325
  br i1 %326, label %317, label %327

327:                                              ; preds = %317, %307, %311
  %328 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %329 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %328, align 8
  %330 = bitcast %"class.SkSL::OutputStream"* %329 to void (%"class.SkSL::OutputStream"*, i8*)***
  %331 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %331, i64 2
  %333 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %332, align 8
  call void %333(%"class.SkSL::OutputStream"* %329, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  store i8 0, i8* %308, align 8
  %334 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %328, align 8
  %335 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %336 = load i8*, i8** %335, align 8
  %337 = bitcast %"class.SkSL::OutputStream"* %334 to void (%"class.SkSL::OutputStream"*, i8*)***
  %338 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %337, align 8
  %339 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %338, i64 2
  %340 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %339, align 8
  call void %340(%"class.SkSL::OutputStream"* %334, i8* %336) #12
  store i8 1, i8* %308, align 8
  br label %343

341:                                              ; preds = %2
  %342 = bitcast %"class.SkSL::ProgramElement"* %1 to %"class.SkSL::StructDefinition"*
  tail call void @_ZN4SkSL17GLSLCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::StructDefinition"* dereferenceable(24) %342)
  br label %343

343:                                              ; preds = %47, %43, %172, %56, %33, %2, %341, %327, %217, %188, %186, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17GLSLCodeGenerator14writeInputVarsEv(%"class.SkSL::GLSLCodeGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 5, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %9 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %9, i64 4
  %11 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %13 = select i1 %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0)
  %14 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 1, i32 0
  %15 = bitcast %class.SkWStream* %14 to i1 (%class.SkWStream*, i8*, i64)***
  %16 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %16, i64 2
  %18 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.SkWStream* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i64 0, i64 0), i64 8) #12
  %20 = select i1 %12, i64 6, i64 0
  %21 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %22 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %21, i64 2
  %23 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %22, align 8
  %24 = tail call zeroext i1 %23(%class.SkWStream* %14, i8* %13, i64 %20) #12
  %25 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %26 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %25, i64 2
  %27 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%class.SkWStream* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.156, i64 0, i64 0), i64 20) #12
  br label %29

29:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL17GLSLCodeGenerator12generateCodeEv(%"class.SkSL::GLSLCodeGenerator"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::StringStream", align 16
  %4 = alloca [40 x i8], align 4
  %5 = alloca %"struct.SkSL::Modifiers", align 8
  %6 = alloca %"struct.SkSL::Modifiers", align 8
  %7 = getelementptr inbounds [40 x i8], [40 x i8]* %4, i64 0, i64 0
  %8 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*)***
  %9 = load void (%"class.SkSL::GLSLCodeGenerator"*)**, void (%"class.SkSL::GLSLCodeGenerator"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*)*, void (%"class.SkSL::GLSLCodeGenerator"*)** %9, i64 3
  %11 = load void (%"class.SkSL::GLSLCodeGenerator"*)*, void (%"class.SkSL::GLSLCodeGenerator"*)** %10, align 8
  tail call void %11(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %12 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 1
  %13 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %15, i64 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %84

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %21 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %21, i64 0, i32 2
  %23 = load %class.GrShaderCaps*, %class.GrShaderCaps** %22, align 8
  %24 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %23, i64 0, i32 5
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %84, label %27

27:                                               ; preds = %19
  %28 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = tail call i64 @strlen(i8* nonnull %25) #12
  %30 = icmp ugt i64 %29, -17
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = bitcast %"class.SkSL::String"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #15
  unreachable

33:                                               ; preds = %27
  %34 = icmp ult i64 %29, 23
  br i1 %34, label %44, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %29, 16
  %37 = and i64 %36, -16
  %38 = tail call i8* @_Znwm(i64 %37) #14
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8
  %40 = or i64 %37, -9223372036854775808
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %42, align 8
  %43 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %49

44:                                               ; preds = %33
  %45 = trunc i64 %29 to i8
  %46 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 %45, i8* %47, align 1
  %48 = icmp eq i64 %29, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %35
  %50 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %46, %44 ], [ %43, %35 ]
  %51 = phi i8* [ %28, %44 ], [ %38, %35 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* nonnull align 1 %25, i64 %29, i1 false) #12
  br label %52

52:                                               ; preds = %44, %49
  %53 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %46, %44 ], [ %50, %49 ]
  %54 = phi i8* [ %28, %44 ], [ %51, %49 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %29
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1, i32 0
  %57 = bitcast %class.SkWStream* %56 to i1 (%class.SkWStream*, i8*, i64)***
  %58 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %57, align 8
  %59 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %58, i64 2
  %60 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %59, align 8
  %61 = tail call zeroext i1 %60(%class.SkWStream* %56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %63 to i64
  %70 = select i1 %64, i8* %66, i8* %28
  %71 = select i1 %64, i64 %68, i64 %69
  %72 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  %73 = call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %72, i8* %70, i64 %71) #12
  %74 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %57, align 8
  %75 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %74, i64 2
  %76 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %75, align 8
  %77 = call zeroext i1 %76(%class.SkWStream* %56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  %78 = load i8, i8* %62, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %52
  %81 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %52, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  %83 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %12, align 8
  br label %84

84:                                               ; preds = %19, %82, %1
  %85 = phi %"struct.SkSL::Program"* [ %13, %19 ], [ %83, %82 ], [ %13, %1 ]
  %86 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 3
  %87 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %88 = bitcast %"class.SkSL::StringStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 0, i32 0
  %90 = bitcast %"class.SkSL::StringStream"* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %90, align 16
  %91 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 1, i32 1
  %92 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 48, i1 false) #12
  %93 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 0
  store %"class.SkSL::OutputStream"* %93, %"class.SkSL::OutputStream"** %86, align 8
  %94 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %85, i64 0, i32 6
  %95 = bitcast %"class.std::__1::vector.62"* %94 to i64*
  %96 = load i64, i64* %95, align 8, !noalias !66
  %97 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %85, i64 0, i32 6, i32 0, i32 1
  %98 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %85, i64 0, i32 7
  %99 = bitcast %"class.std::__1::vector.75"* %98 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !66
  %101 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %85, i64 0, i32 7, i32 0, i32 1
  %102 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %101, align 8, !noalias !66
  %103 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %97, align 8, !noalias !69
  %104 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)***
  %105 = inttoptr i64 %96 to %"class.std::__1::unique_ptr.64"*
  %106 = icmp eq %"class.std::__1::unique_ptr.64"* %103, %105
  %107 = inttoptr i64 %100 to %"class.SkSL::ProgramElement"**
  %108 = icmp eq %"class.SkSL::ProgramElement"** %102, %107
  %109 = and i1 %106, %108
  br i1 %109, label %110, label %127

110:                                              ; preds = %143, %84
  %111 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %12, align 8
  %112 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %111, i64 0, i32 6
  %113 = bitcast %"class.std::__1::vector.62"* %112 to i64*
  %114 = load i64, i64* %113, align 8, !noalias !72
  %115 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %111, i64 0, i32 6, i32 0, i32 1
  %116 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %111, i64 0, i32 7
  %117 = bitcast %"class.std::__1::vector.75"* %116 to i64*
  %118 = load i64, i64* %117, align 8, !noalias !72
  %119 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %111, i64 0, i32 7, i32 0, i32 1
  %120 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %119, align 8, !noalias !72
  %121 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %115, align 8, !noalias !75
  %122 = inttoptr i64 %114 to %"class.std::__1::unique_ptr.64"*
  %123 = icmp eq %"class.std::__1::unique_ptr.64"* %121, %122
  %124 = inttoptr i64 %118 to %"class.SkSL::ProgramElement"**
  %125 = icmp eq %"class.SkSL::ProgramElement"** %120, %124
  %126 = and i1 %123, %125
  br i1 %126, label %155, label %170

127:                                              ; preds = %84, %143
  %128 = phi i1 [ %153, %143 ], [ %108, %84 ]
  %129 = phi %"class.SkSL::ProgramElement"** [ %152, %143 ], [ %107, %84 ]
  %130 = phi %"class.std::__1::unique_ptr.64"* [ %150, %143 ], [ %105, %84 ]
  %131 = phi i64 [ %149, %143 ], [ %100, %84 ]
  %132 = phi i64 [ %148, %143 ], [ %96, %84 ]
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %130, i64 0, i32 0, i32 0, i32 0
  %134 = select i1 %128, %"class.SkSL::ProgramElement"** %133, %"class.SkSL::ProgramElement"** %129
  %135 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %134, align 8
  %136 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %135, i64 0, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 2
  br i1 %138, label %143, label %139

139:                                              ; preds = %127
  %140 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)*** %104, align 8
  %141 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)** %140, i64 24
  %142 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)** %141, align 8
  call void %142(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::ProgramElement"* dereferenceable(16) %135) #12
  br label %143

143:                                              ; preds = %139, %127
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %130, i64 1
  %145 = ptrtoint %"class.std::__1::unique_ptr.64"* %144 to i64
  %146 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %129, i64 1
  %147 = ptrtoint %"class.SkSL::ProgramElement"** %146 to i64
  %148 = select i1 %128, i64 %145, i64 %132
  %149 = select i1 %128, i64 %131, i64 %147
  %150 = inttoptr i64 %148 to %"class.std::__1::unique_ptr.64"*
  %151 = icmp eq %"class.std::__1::unique_ptr.64"* %103, %150
  %152 = inttoptr i64 %149 to %"class.SkSL::ProgramElement"**
  %153 = icmp eq %"class.SkSL::ProgramElement"** %102, %152
  %154 = and i1 %151, %153
  br i1 %154, label %110, label %127

155:                                              ; preds = %186, %110
  store %"class.SkSL::OutputStream"* %87, %"class.SkSL::OutputStream"** %86, align 8
  %156 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %156, %"class.SkSL::OutputStream"* dereferenceable(8) %87) #12
  %157 = load void (%"class.SkSL::GLSLCodeGenerator"*)**, void (%"class.SkSL::GLSLCodeGenerator"*)*** %8, align 8
  %158 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*)*, void (%"class.SkSL::GLSLCodeGenerator"*)** %157, i64 7
  %159 = load void (%"class.SkSL::GLSLCodeGenerator"*)*, void (%"class.SkSL::GLSLCodeGenerator"*)** %158, align 8
  call void %159(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %160 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %160, %"class.SkSL::OutputStream"* dereferenceable(8) %87) #12
  %161 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 2
  %162 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %161, align 8
  %163 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %162, i64 0, i32 2
  %164 = load %class.GrShaderCaps*, %class.GrShaderCaps** %163, align 8
  %165 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %164, i64 0, i32 2
  %166 = bitcast i56* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = and i64 %167, 8589934592
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %198, label %342

170:                                              ; preds = %110, %186
  %171 = phi i1 [ %196, %186 ], [ %125, %110 ]
  %172 = phi %"class.SkSL::ProgramElement"** [ %195, %186 ], [ %124, %110 ]
  %173 = phi %"class.std::__1::unique_ptr.64"* [ %193, %186 ], [ %122, %110 ]
  %174 = phi i64 [ %192, %186 ], [ %114, %110 ]
  %175 = phi i64 [ %191, %186 ], [ %118, %110 ]
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %173, i64 0, i32 0, i32 0, i32 0
  %177 = select i1 %171, %"class.SkSL::ProgramElement"** %176, %"class.SkSL::ProgramElement"** %172
  %178 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %177, align 8
  %179 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %178, i64 0, i32 0, i32 2
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 2
  br i1 %181, label %182, label %186

182:                                              ; preds = %170
  %183 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)*** %104, align 8
  %184 = getelementptr inbounds void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)** %183, i64 24
  %185 = load void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::GLSLCodeGenerator"*, %"class.SkSL::ProgramElement"*)** %184, align 8
  call void %185(%"class.SkSL::GLSLCodeGenerator"* %0, %"class.SkSL::ProgramElement"* dereferenceable(16) %178) #12
  br label %186

186:                                              ; preds = %182, %170
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %173, i64 1
  %188 = ptrtoint %"class.std::__1::unique_ptr.64"* %187 to i64
  %189 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %172, i64 1
  %190 = ptrtoint %"class.SkSL::ProgramElement"** %189 to i64
  %191 = select i1 %171, i64 %175, i64 %190
  %192 = select i1 %171, i64 %188, i64 %174
  %193 = inttoptr i64 %192 to %"class.std::__1::unique_ptr.64"*
  %194 = icmp eq %"class.std::__1::unique_ptr.64"* %121, %193
  %195 = inttoptr i64 %191 to %"class.SkSL::ProgramElement"**
  %196 = icmp eq %"class.SkSL::ProgramElement"** %120, %195
  %197 = and i1 %194, %196
  br i1 %197, label %155, label %170

198:                                              ; preds = %155
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -1, i64 40, i1 false)
  %199 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %12, align 8
  %200 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %199, i64 0, i32 1, i32 0, i32 0, i32 0
  %201 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %200, align 8
  %202 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %201, i64 0, i32 0
  %203 = load i8, i8* %202, align 8
  switch i8 %203, label %341 [
    i8 1, label %204
    i8 0, label %271
  ]

204:                                              ; preds = %198
  %205 = bitcast %"struct.SkSL::Modifiers"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %205) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 80, i1 false)
  %206 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %206, align 8
  %207 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 0, i32 1
  %208 = bitcast i32* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* nonnull align 4 %7, i64 40, i1 false)
  %209 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 0, i32 11
  %210 = bitcast [4 x i8]* %209 to i32*
  store i32 -1431655766, i32* %210, align 4
  %211 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), i8** %211, align 8
  %212 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %212, align 8
  %213 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 0, i32 13
  store i32 0, i32* %213, align 8
  %214 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 0, i32 14
  %215 = bitcast [4 x i8]* %214 to i32*
  store i32 -1431655766, i32* %215, align 4
  %216 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %5, i64 0, i32 1
  store i32 4, i32* %216, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %5, i1 zeroext true)
  %217 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %218 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %217, align 8
  %219 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %218, i64 4
  %220 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %219, align 8
  %221 = call zeroext i1 %220(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %222 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %223 = load i8, i8* %222, align 8, !range !2
  br i1 %221, label %224, label %247

224:                                              ; preds = %204
  %225 = icmp eq i8 %223, 0
  br i1 %225, label %240, label %226

226:                                              ; preds = %224
  %227 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %228 = load i32, i32* %227, align 4
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %240

230:                                              ; preds = %226, %230
  %231 = phi i32 [ %237, %230 ], [ 0, %226 ]
  %232 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %233 = bitcast %"class.SkSL::OutputStream"* %232 to void (%"class.SkSL::OutputStream"*, i8*)***
  %234 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %234, i64 2
  %236 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %235, align 8
  call void %236(%"class.SkSL::OutputStream"* %232, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %237 = add nuw nsw i32 %231, 1
  %238 = load i32, i32* %227, align 4
  %239 = icmp slt i32 %237, %238
  br i1 %239, label %230, label %240

240:                                              ; preds = %230, %226, %224
  %241 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %242 = bitcast %"class.SkSL::OutputStream"* %241 to void (%"class.SkSL::OutputStream"*, i8*)***
  %243 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %243, i64 2
  %245 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %244, align 8
  call void %245(%"class.SkSL::OutputStream"* %241, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0)) #12
  store i8 0, i8* %222, align 8
  %246 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  br label %264

247:                                              ; preds = %204
  %248 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %249 = icmp eq i8 %223, 0
  br i1 %249, label %264, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %252 = load i32, i32* %251, align 4
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %264

254:                                              ; preds = %250, %254
  %255 = phi i32 [ %261, %254 ], [ 0, %250 ]
  %256 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %257 = bitcast %"class.SkSL::OutputStream"* %256 to void (%"class.SkSL::OutputStream"*, i8*)***
  %258 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %258, i64 2
  %260 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %259, align 8
  call void %260(%"class.SkSL::OutputStream"* %256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %261 = add nuw nsw i32 %255, 1
  %262 = load i32, i32* %251, align 4
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %254, label %264

264:                                              ; preds = %254, %240, %247, %250
  %265 = phi i8* [ %246, %240 ], [ %248, %247 ], [ %248, %250 ], [ %248, %254 ]
  %266 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %267 = bitcast %"class.SkSL::OutputStream"* %266 to void (%"class.SkSL::OutputStream"*, i8*)***
  %268 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %268, i64 2
  %270 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %269, align 8
  call void %270(%"class.SkSL::OutputStream"* %266, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.157, i64 0, i64 0)) #12
  br label %338

271:                                              ; preds = %198
  %272 = bitcast %"struct.SkSL::Modifiers"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %272) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %272, i8 -86, i64 80, i1 false)
  %273 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %273, align 8
  %274 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 1
  %275 = bitcast i32* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %275, i8* nonnull align 4 %7, i64 40, i1 false)
  %276 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 11
  %277 = bitcast [4 x i8]* %276 to i32*
  store i32 -1431655766, i32* %277, align 4
  %278 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.54, i64 0, i64 0), i8** %278, align 8
  %279 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %279, align 8
  %280 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 13
  store i32 0, i32* %280, align 8
  %281 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 0, i32 14
  %282 = bitcast [4 x i8]* %281 to i32*
  store i32 -1431655766, i32* %282, align 4
  %283 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 1
  store i32 2, i32* %283, align 8
  call void @_ZN4SkSL17GLSLCodeGenerator14writeModifiersERKNS_9ModifiersEb(%"class.SkSL::GLSLCodeGenerator"* %0, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %6, i1 zeroext true)
  %284 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %285 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %284, align 8
  %286 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %285, i64 4
  %287 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %286, align 8
  %288 = call zeroext i1 %287(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %289 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %290 = load i8, i8* %289, align 8, !range !2
  br i1 %288, label %291, label %314

291:                                              ; preds = %271
  %292 = icmp eq i8 %290, 0
  br i1 %292, label %307, label %293

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %295 = load i32, i32* %294, align 4
  %296 = icmp sgt i32 %295, 0
  br i1 %296, label %297, label %307

297:                                              ; preds = %293, %297
  %298 = phi i32 [ %304, %297 ], [ 0, %293 ]
  %299 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %300 = bitcast %"class.SkSL::OutputStream"* %299 to void (%"class.SkSL::OutputStream"*, i8*)***
  %301 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %301, i64 2
  %303 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %302, align 8
  call void %303(%"class.SkSL::OutputStream"* %299, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %304 = add nuw nsw i32 %298, 1
  %305 = load i32, i32* %294, align 4
  %306 = icmp slt i32 %304, %305
  br i1 %306, label %297, label %307

307:                                              ; preds = %297, %293, %291
  %308 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %309 = bitcast %"class.SkSL::OutputStream"* %308 to void (%"class.SkSL::OutputStream"*, i8*)***
  %310 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %309, align 8
  %311 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %310, i64 2
  %312 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %311, align 8
  call void %312(%"class.SkSL::OutputStream"* %308, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0)) #12
  store i8 0, i8* %289, align 8
  %313 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  br label %331

314:                                              ; preds = %271
  %315 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %316 = icmp eq i8 %290, 0
  br i1 %316, label %331, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, 0
  br i1 %320, label %321, label %331

321:                                              ; preds = %317, %321
  %322 = phi i32 [ %328, %321 ], [ 0, %317 ]
  %323 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %324 = bitcast %"class.SkSL::OutputStream"* %323 to void (%"class.SkSL::OutputStream"*, i8*)***
  %325 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %324, align 8
  %326 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %325, i64 2
  %327 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %326, align 8
  call void %327(%"class.SkSL::OutputStream"* %323, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %328 = add nuw nsw i32 %322, 1
  %329 = load i32, i32* %318, align 4
  %330 = icmp slt i32 %328, %329
  br i1 %330, label %321, label %331

331:                                              ; preds = %321, %307, %314, %317
  %332 = phi i8* [ %313, %307 ], [ %315, %314 ], [ %315, %317 ], [ %315, %321 ]
  %333 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %334 = bitcast %"class.SkSL::OutputStream"* %333 to void (%"class.SkSL::OutputStream"*, i8*)***
  %335 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %335, i64 2
  %337 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %336, align 8
  call void %337(%"class.SkSL::OutputStream"* %333, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.157, i64 0, i64 0)) #12
  br label %338

338:                                              ; preds = %264, %331
  %339 = phi i8* [ %332, %331 ], [ %265, %264 ]
  %340 = phi i8* [ %272, %331 ], [ %205, %264 ]
  store i8 0, i8* %339, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %340) #12
  br label %341

341:                                              ; preds = %338, %198
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7)
  br label %342

342:                                              ; preds = %155, %341
  %343 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i1 (%"class.SkSL::GLSLCodeGenerator"*)***
  %344 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)**, i1 (%"class.SkSL::GLSLCodeGenerator"*)*** %343, align 8
  %345 = getelementptr inbounds i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %344, i64 4
  %346 = load i1 (%"class.SkSL::GLSLCodeGenerator"*)*, i1 (%"class.SkSL::GLSLCodeGenerator"*)** %345, align 8
  %347 = call zeroext i1 %346(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  br i1 %347, label %348, label %470

348:                                              ; preds = %342
  %349 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 9
  %350 = load i8, i8* %349, align 8, !range !2
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %366, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %354 = load i32, i32* %353, align 4
  %355 = icmp sgt i32 %354, 0
  br i1 %355, label %356, label %366

356:                                              ; preds = %352, %356
  %357 = phi i32 [ %363, %356 ], [ 0, %352 ]
  %358 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %359 = bitcast %"class.SkSL::OutputStream"* %358 to void (%"class.SkSL::OutputStream"*, i8*)***
  %360 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %359, align 8
  %361 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %360, i64 2
  %362 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %361, align 8
  call void %362(%"class.SkSL::OutputStream"* %358, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %363 = add nuw nsw i32 %357, 1
  %364 = load i32, i32* %353, align 4
  %365 = icmp slt i32 %363, %364
  br i1 %365, label %356, label %366

366:                                              ; preds = %356, %352, %348
  %367 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %368 = bitcast %"class.SkSL::OutputStream"* %367 to void (%"class.SkSL::OutputStream"*, i8*)***
  %369 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %368, align 8
  %370 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %369, i64 2
  %371 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %370, align 8
  call void %371(%"class.SkSL::OutputStream"* %367, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.158, i64 0, i64 0)) #12
  store i8 0, i8* %349, align 8
  %372 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %373 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 1
  %374 = load i8*, i8** %373, align 8
  %375 = bitcast %"class.SkSL::OutputStream"* %372 to void (%"class.SkSL::OutputStream"*, i8*)***
  %376 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %376, i64 2
  %378 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %377, align 8
  call void %378(%"class.SkSL::OutputStream"* %372, i8* %374) #12
  store i8 1, i8* %349, align 8
  %379 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 8
  %380 = load i32, i32* %379, align 4
  %381 = icmp sgt i32 %380, 0
  br i1 %381, label %382, label %392

382:                                              ; preds = %366, %382
  %383 = phi i32 [ %389, %382 ], [ 0, %366 ]
  %384 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %385 = bitcast %"class.SkSL::OutputStream"* %384 to void (%"class.SkSL::OutputStream"*, i8*)***
  %386 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %386, i64 2
  %388 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %387, align 8
  call void %388(%"class.SkSL::OutputStream"* %384, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %389 = add nuw nsw i32 %383, 1
  %390 = load i32, i32* %379, align 4
  %391 = icmp slt i32 %389, %390
  br i1 %391, label %382, label %392

392:                                              ; preds = %382, %366
  %393 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %394 = bitcast %"class.SkSL::OutputStream"* %393 to void (%"class.SkSL::OutputStream"*, i8*)***
  %395 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %394, align 8
  %396 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %395, i64 2
  %397 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %396, align 8
  call void %397(%"class.SkSL::OutputStream"* %393, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i64 0, i64 0)) #12
  store i8 0, i8* %349, align 8
  %398 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %399 = load i8*, i8** %373, align 8
  %400 = bitcast %"class.SkSL::OutputStream"* %398 to void (%"class.SkSL::OutputStream"*, i8*)***
  %401 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %400, align 8
  %402 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %401, i64 2
  %403 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %402, align 8
  call void %403(%"class.SkSL::OutputStream"* %398, i8* %399) #12
  store i8 1, i8* %349, align 8
  %404 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 12
  %405 = load i8, i8* %404, align 1, !range !2
  %406 = icmp eq i8 %405, 0
  br i1 %406, label %441, label %407

407:                                              ; preds = %392
  %408 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %161, align 8
  %409 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %408, i64 0, i32 2
  %410 = load %class.GrShaderCaps*, %class.GrShaderCaps** %409, align 8
  %411 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %410, i64 0, i32 2
  %412 = bitcast i56* %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = and i64 %413, 2199023255552
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %416, label %441

416:                                              ; preds = %407
  %417 = load i32, i32* %379, align 4
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %419, label %429

419:                                              ; preds = %416, %419
  %420 = phi i32 [ %426, %419 ], [ 0, %416 ]
  %421 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %422 = bitcast %"class.SkSL::OutputStream"* %421 to void (%"class.SkSL::OutputStream"*, i8*)***
  %423 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %422, align 8
  %424 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %423, i64 2
  %425 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %424, align 8
  call void %425(%"class.SkSL::OutputStream"* %421, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %426 = add nuw nsw i32 %420, 1
  %427 = load i32, i32* %379, align 4
  %428 = icmp slt i32 %426, %427
  br i1 %428, label %419, label %429

429:                                              ; preds = %419, %416
  %430 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %431 = bitcast %"class.SkSL::OutputStream"* %430 to void (%"class.SkSL::OutputStream"*, i8*)***
  %432 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %431, align 8
  %433 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %432, i64 2
  %434 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %433, align 8
  call void %434(%"class.SkSL::OutputStream"* %430, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.160, i64 0, i64 0)) #12
  store i8 0, i8* %349, align 8
  %435 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %436 = load i8*, i8** %373, align 8
  %437 = bitcast %"class.SkSL::OutputStream"* %435 to void (%"class.SkSL::OutputStream"*, i8*)***
  %438 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %437, align 8
  %439 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %438, i64 2
  %440 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %439, align 8
  call void %440(%"class.SkSL::OutputStream"* %435, i8* %436) #12
  store i8 1, i8* %349, align 8
  br label %441

441:                                              ; preds = %407, %392, %429
  %442 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 13
  %443 = load i8, i8* %442, align 2, !range !2
  %444 = icmp eq i8 %443, 0
  br i1 %444, label %470, label %445

445:                                              ; preds = %441
  %446 = load i32, i32* %379, align 4
  %447 = icmp sgt i32 %446, 0
  br i1 %447, label %448, label %458

448:                                              ; preds = %445, %448
  %449 = phi i32 [ %455, %448 ], [ 0, %445 ]
  %450 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %451 = bitcast %"class.SkSL::OutputStream"* %450 to void (%"class.SkSL::OutputStream"*, i8*)***
  %452 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %451, align 8
  %453 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %452, i64 2
  %454 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %453, align 8
  call void %454(%"class.SkSL::OutputStream"* %450, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %455 = add nuw nsw i32 %449, 1
  %456 = load i32, i32* %379, align 4
  %457 = icmp slt i32 %455, %456
  br i1 %457, label %448, label %458

458:                                              ; preds = %448, %445
  %459 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %460 = bitcast %"class.SkSL::OutputStream"* %459 to void (%"class.SkSL::OutputStream"*, i8*)***
  %461 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %460, align 8
  %462 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %461, i64 2
  %463 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %462, align 8
  call void %463(%"class.SkSL::OutputStream"* %459, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.161, i64 0, i64 0)) #12
  store i8 0, i8* %349, align 8
  %464 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %465 = load i8*, i8** %373, align 8
  %466 = bitcast %"class.SkSL::OutputStream"* %464 to void (%"class.SkSL::OutputStream"*, i8*)***
  %467 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %466, align 8
  %468 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %467, i64 2
  %469 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %468, align 8
  call void %469(%"class.SkSL::OutputStream"* %464, i8* %465) #12
  store i8 1, i8* %349, align 8
  br label %470

470:                                              ; preds = %441, %458, %342
  %471 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %471, %"class.SkSL::OutputStream"* dereferenceable(8) %87) #12
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* nonnull dereferenceable(64) %3, %"class.SkSL::OutputStream"* dereferenceable(8) %87) #12
  %472 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 2
  %473 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %472, align 8
  %474 = bitcast %"class.SkSL::ErrorReporter"* %473 to i32 (%"class.SkSL::ErrorReporter"*)***
  %475 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %474, align 8
  %476 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %475, i64 3
  %477 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %476, align 8
  %478 = call i32 %477(%"class.SkSL::ErrorReporter"* %473) #12
  %479 = icmp eq i32 %478, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 16
  %480 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 2, i32 0
  %481 = bitcast %"class.std::__1::basic_string"* %480 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %482 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %481, i64 0, i32 1, i32 0
  %483 = load i8, i8* %482, align 1
  %484 = icmp slt i8 %483, 0
  br i1 %484, label %485, label %488

485:                                              ; preds = %470
  %486 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %480, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = load i8*, i8** %486, align 8
  call void @_ZdlPv(i8* %487) #14
  br label %488

488:                                              ; preds = %470, %485
  %489 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %489) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %88) #12
  ret i1 %479
}

declare void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17GLSLCodeGeneratorD2Ev(%"class.SkSL::GLSLCodeGenerator"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN4SkSL17GLSLCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 18, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0
  %13 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %12, %"class.std::__1::__tree_node"* %15) #12
  %16 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 6, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %11, %21
  %25 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %24, %31
  %35 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 5, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %35) #12
  %36 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 2, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %34, %42
  %46 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 4, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %46) #12
  %47 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 2, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %45, %53
  %57 = getelementptr inbounds %"class.SkSL::GLSLCodeGenerator", %"class.SkSL::GLSLCodeGenerator"* %0, i64 0, i32 3, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %57) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17GLSLCodeGeneratorD0Ev(%"class.SkSL::GLSLCodeGenerator"*) unnamed_addr #6 comdat align 2 {
  tail call void @_ZN4SkSL17GLSLCodeGeneratorD2Ev(%"class.SkSL::GLSLCodeGenerator"* %0) #12
  %2 = bitcast %"class.SkSL::GLSLCodeGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream*, i8*, i64) unnamed_addr #4

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #12
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #12
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #12
  ret { i64, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #12
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #4

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL12OutputStream7isValidEv(%"class.SkSL::OutputStream"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream6write8Eh(%"class.SkSL::StringStream"*, i8 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 %1, i8* %3, align 1
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = call zeroext i1 %8(%class.SkWStream* %4, i8* nonnull %3, i64 1) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD0Ev(%"class.SkSL::StringStream"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #12
  %13 = bitcast %"class.SkSL::StringStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #10

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #4

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.SkSL::String"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.SkSL::String"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #12
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.SkSL::String"* dereferenceable(24), %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.SkSL::String"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #14, !noalias !78
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !78
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #12, !noalias !78
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !78
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !78
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #12, !noalias !78
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #12
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #12
  %46 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.SkSL::String"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.SkSL::String"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.SkSL::String"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!5 = distinct !{!5, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!8 = distinct !{!8, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!11 = distinct !{!11, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!14 = distinct !{!14, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!17 = distinct !{!17, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!20 = distinct !{!20, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!23 = distinct !{!23, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!26 = distinct !{!26, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!29 = distinct !{!29, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!32 = distinct !{!32, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!35 = distinct !{!35, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!38 = distinct !{!38, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!41 = distinct !{!41, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!44 = distinct !{!44, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!47 = distinct !{!47, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!50 = distinct !{!50, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!53 = distinct !{!53, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!56 = distinct !{!56, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!59 = distinct !{!59, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!62 = distinct !{!62, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!65 = distinct !{!65, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!68 = distinct !{!68, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!71 = distinct !{!71, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!74 = distinct !{!74, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!77 = distinct !{!77, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!80 = distinct !{!80, !"_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
