; ModuleID = '../../v8/src/snapshot/deserializer.cc'
source_filename = "../../v8/src/snapshot/deserializer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Deserializer" = type { %"class.v8::internal::SerializerDeserializer", %"class.v8::internal::Isolate"*, %"class.std::__1::vector.972", %"class.v8::internal::SnapshotByteSource", i32, [4 x i8], %"class.v8::internal::Deserializer::HotObjectsList", %"class.std::__1::vector.1133", %"class.std::__1::vector.1141", %"class.std::__1::vector.1149", %"class.std::__1::vector.1157", %"class.std::__1::vector.1165", %"class.std::__1::vector.1173", %"class.std::__1::vector.1181", %"class.std::__1::vector.1189", %"class.std::__1::vector.1197", %"class.std::__1::vector.972", %"class.std::__1::vector.1204", i32, i8, i8, i8, %"class.std::__1::vector.972" }
%"class.v8::internal::SerializerDeserializer" = type { %"class.v8::internal::RootVisitor" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::SnapshotByteSource" = type { i8*, i32, i32 }
%"class.v8::internal::Deserializer::HotObjectsList" = type <{ [8 x %"class.v8::internal::Handle.974"], i32, [4 x i8] }>
%"class.v8::internal::Handle.974" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.std::__1::vector.1133" = type { %"class.std::__1::__vector_base.1134" }
%"class.std::__1::__vector_base.1134" = type { %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"*, %"class.std::__1::__compressed_pair.1136" }
%"class.v8::internal::Handle.1135" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::Handle.1135"* }
%"class.std::__1::vector.1141" = type { %"class.std::__1::__vector_base.1142" }
%"class.std::__1::__vector_base.1142" = type { %"class.v8::internal::Handle.1143"*, %"class.v8::internal::Handle.1143"*, %"class.std::__1::__compressed_pair.1144" }
%"class.v8::internal::Handle.1143" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::internal::Handle.1143"* }
%"class.std::__1::vector.1149" = type { %"class.std::__1::__vector_base.1150" }
%"class.std::__1::__vector_base.1150" = type { %"class.v8::internal::Handle.1151"*, %"class.v8::internal::Handle.1151"*, %"class.std::__1::__compressed_pair.1152" }
%"class.v8::internal::Handle.1151" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.v8::internal::Handle.1151"* }
%"class.std::__1::vector.1157" = type { %"class.std::__1::__vector_base.1158" }
%"class.std::__1::__vector_base.1158" = type { %"class.v8::internal::Handle.1159"*, %"class.v8::internal::Handle.1159"*, %"class.std::__1::__compressed_pair.1160" }
%"class.v8::internal::Handle.1159" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.v8::internal::Handle.1159"* }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"*, %"class.std::__1::__compressed_pair.1168" }
%"class.v8::internal::Handle.1167" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.v8::internal::Handle.1167"* }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"class.v8::internal::Handle.1175"*, %"class.v8::internal::Handle.1175"*, %"class.std::__1::__compressed_pair.1176" }
%"class.v8::internal::Handle.1175" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"class.v8::internal::Handle.1175"* }
%"class.std::__1::vector.1181" = type { %"class.std::__1::__vector_base.1182" }
%"class.std::__1::__vector_base.1182" = type { %"class.v8::internal::Handle.1183"*, %"class.v8::internal::Handle.1183"*, %"class.std::__1::__compressed_pair.1184" }
%"class.v8::internal::Handle.1183" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.v8::internal::Handle.1183"* }
%"class.std::__1::vector.1189" = type { %"class.std::__1::__vector_base.1190" }
%"class.std::__1::__vector_base.1190" = type { %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"*, %"class.std::__1::__compressed_pair.1192" }
%"class.v8::internal::Handle.1191" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.v8::internal::Handle.1191"* }
%"class.std::__1::vector.1197" = type { %"class.std::__1::__vector_base.1198" }
%"class.std::__1::__vector_base.1198" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.std::__1::shared_ptr"* }
%"class.std::__1::vector.1204" = type { %"class.std::__1::__vector_base.1205" }
%"class.std::__1::__vector_base.1205" = type { %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"class.std::__1::__compressed_pair.1206" }
%"struct.v8::internal::Deserializer::UnresolvedForwardRef" = type { %"class.v8::internal::Handle.974", i32, i32 }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* }
%"class.std::__1::vector.972" = type { %"class.std::__1::__vector_base.973" }
%"class.std::__1::__vector_base.973" = type { %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"*, %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::Handle.974"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.972"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.980", i32, i8, i8, i32, i32, %"class.std::__1::vector.986", %"class.std::__1::vector.986", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.993", i64, %"class.std::__1::unordered_map.994", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1050", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1088", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1122", %"class.std::__1::vector.1126", %"class.std::__1::vector.1126", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1055", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1059", %"class.std::__1::unique_ptr.1065", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1071", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1055" = type { %"struct.std::__1::__atomic_base.1056" }
%"struct.std::__1::__atomic_base.1056" = type { %"struct.std::__1::__cxx_atomic_impl.1057" }
%"struct.std::__1::__cxx_atomic_impl.1057" = type { %"struct.std::__1::__cxx_atomic_base_impl.1058" }
%"struct.std::__1::__cxx_atomic_base_impl.1058" = type { i32 }
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1071" = type { %"class.std::__1::__vector_base.1072" }
%"class.std::__1::__vector_base.1072" = type { %"struct.std::__1::pair.1073"*, %"struct.std::__1::pair.1073"*, %"class.std::__1::__compressed_pair.1074" }
%"struct.std::__1::pair.1073" = type opaque
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.std::__1::pair.1073"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type { i32 (...)**, %"class.v8::internal::Isolate"*, [768 x i64], %"class.std::__1::unique_ptr.956", i64 }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.967" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.961"**, %"struct.std::__1::pair.961"**, %"struct.std::__1::pair.961"**, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::pair.961" = type opaque
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.std::__1::pair.961"** }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.993" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.994" = type { %"class.std::__1::__hash_table.995" }
%"class.std::__1::__hash_table.995" = type <{ %"class.std::__1::unique_ptr.996", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1011", %"class.std::__1::__compressed_pair.1014", [4 x i8] }>
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998", %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"struct.std::__1::__hash_node_base.999"** }
%"struct.std::__1::__hash_node_base.999" = type { %"struct.std::__1::__hash_node_base.999"* }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.std::__1::__bucket_list_deallocator.1001" }
%"class.std::__1::__bucket_list_deallocator.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"struct.std::__1::__hash_node_base.999" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1018", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1047", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1048", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1018" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1043, %union.anon.1045, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1043 = type { i64 }
%union.anon.1045 = type { i64 }
%"class.std::__1::weak_ptr.1047" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1048" = type { %"class.v8::PersistentBase.1049" }
%"class.v8::PersistentBase.1049" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1019", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1019" = type { %"class.std::__1::__hash_table.1020" }
%"class.std::__1::__hash_table.1020" = type <{ %"class.std::__1::unique_ptr.1021", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1036", %"class.std::__1::__compressed_pair.1039", [4 x i8] }>
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023", %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"struct.std::__1::__hash_node_base.1024"** }
%"struct.std::__1::__hash_node_base.1024" = type { %"struct.std::__1::__hash_node_base.1024"* }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.std::__1::__bucket_list_deallocator.1026" }
%"class.std::__1::__bucket_list_deallocator.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"struct.std::__1::__hash_node_base.1024" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1079", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1096" }
%"class.std::__1::unordered_map.1096" = type { %"class.std::__1::__hash_table.1097" }
%"class.std::__1::__hash_table.1097" = type <{ %"class.std::__1::unique_ptr.1098", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1113", %"class.std::__1::__compressed_pair.1116", [4 x i8] }>
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100", %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"struct.std::__1::__hash_node_base.1101"** }
%"struct.std::__1::__hash_node_base.1101" = type { %"struct.std::__1::__hash_node_base.1101"* }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.std::__1::__bucket_list_deallocator.1103" }
%"class.std::__1::__bucket_list_deallocator.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"struct.std::__1::__hash_node_base.1101" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1122" = type { %"struct.std::__1::__atomic_base.1123" }
%"struct.std::__1::__atomic_base.1123" = type { %"struct.std::__1::__cxx_atomic_impl.1124" }
%"struct.std::__1::__cxx_atomic_impl.1124" = type { %"struct.std::__1::__cxx_atomic_base_impl.1125" }
%"struct.std::__1::__cxx_atomic_base_impl.1125" = type { %"class.std::__1::vector.1126"* }
%"class.std::__1::vector.1126" = type { %"class.std::__1::__vector_base.1127" }
%"class.std::__1::__vector_base.1127" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1128" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::StringTableInsertionKey" = type { %"class.v8::internal::StringTableKey", %"class.v8::internal::Handle.1218" }
%"class.v8::internal::StringTableKey" = type { i32 (...)**, i32, i32 }
%"class.v8::internal::Handle.1218" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef" = type { %"class.v8::internal::ExternalString" }
%"class.v8::internal::ExternalString" = type { %"class.v8::internal::String" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::internal::Deserializer::RelocInfoVisitor" = type <{ %"class.v8::internal::Deserializer"*, %"class.std::__1::vector.972"*, i32, [4 x i8] }>
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::EmbeddedData" = type <{ i8*, i32, [4 x i8], i8*, i32, [4 x i8] }>
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::SlotAccessorForRootSlots" = type { %"class.v8::internal::FullMaybeObjectSlot" }
%"class.v8::internal::FullMaybeObjectSlot" = type { %"class.v8::internal::SlotBase.1212" }
%"class.v8::internal::SlotBase.1212" = type { i64 }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.v8::internal::BackingStore"* }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZN2v88internal14StringTableKeyD2Ev = comdat any

$_ZN2v88internal14ExternalString23set_address_as_resourceEPNS0_7IsolateEm = comdat any

$_ZN2v88internal18SnapshotByteSource6GetIntEv = comdat any

$_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_ = comdat any

$_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_25SlotAccessorForHeapObjectEEEihT_ = comdat any

$_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_24SlotAccessorForRootSlotsEEEihT_ = comdat any

$_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE = comdat any

$_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v88internal23StringTableInsertionKeyD0Ev = comdat any

$_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal12Deserializer20UnresolvedForwardRefENS_9allocatorIS4_EEE12emplace_backIJNS2_6HandleINS2_10HeapObjectEEEiRNS2_23HeapObjectReferenceTypeEEEEvDpOT_ = comdat any

$_ZN2v88internal9RelocInfo5VisitINS0_12Deserializer16RelocInfoVisitorEEEvPT_ = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZN2v88internal12Deserializer18ReadRepeatedObjectINS0_25SlotAccessorForHeapObjectEEEiT_i = comdat any

$_ZNK2v88internal24SlotAccessorForRootSlots6objectEv = comdat any

$_ZTVN2v88internal23StringTableInsertionKeyE = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = comdat any

@_ZTVN2v88internal12DeserializerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Deserializer"*)* @_ZN2v88internal12DeserializerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Deserializer"*)* @_ZN2v88internal12DeserializerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Deserializer"*, i32, i8*, i64, i64)* @_ZN2v88internal12Deserializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)* @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::Deserializer"*, i32)* @_ZN2v88internal12Deserializer11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"magic_number_ == SerializedData::kMagicNumber\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"expected == source_.Get()\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal23StringTableInsertionKeyE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StringTableKey"*)* @_ZN2v88internal14StringTableKeyD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::StringTableInsertionKey"*)* @_ZN2v88internal23StringTableInsertionKeyD0Ev to i8*)] }, comdat, align 8
@_ZN2v88internal20FLAG_rehash_snapshotE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal17FLAG_thin_stringsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal13FLAG_log_mapsE = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [83 x i8] c"ReadSingleBytecodeData(source_.Get(), SlotAccessorForHandle(&ret, isolate())) == 1\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"data == kExternalReference\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"data == kInternalReference\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"data == kOffHeapTarget\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"(isolate()->embedded_blob_code()) != nullptr\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"kNullAddress != address\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"current == end_slot_index\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"current == end\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"(backing_store) != nullptr\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"2 <= repeat_count\00", align 1
@_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@.str.15 = private unnamed_addr constant [40 x i8] c"No external references provided via API\00", align 1

@_ZN2v88internal12DeserializerC1EPNS0_7IsolateENS0_6VectorIKhEEjbb = hidden unnamed_addr alias void (%"class.v8::internal::Deserializer"*, %"class.v8::internal::Isolate"*, i8*, i64, i32, i1, i1), void (%"class.v8::internal::Deserializer"*, %"class.v8::internal::Isolate"*, i8*, i64, i32, i1, i1)* @_ZN2v88internal12DeserializerC2EPNS0_7IsolateENS0_6VectorIKhEEjbb
@_ZN2v88internal12DeserializerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::Deserializer"*), void (%"class.v8::internal::Deserializer"*)* @_ZN2v88internal12DeserializerD2Ev
@_ZN2v88internal23StringTableInsertionKeyC1ENS0_6HandleINS0_6StringEEE = hidden unnamed_addr alias void (%"class.v8::internal::StringTableInsertionKey"*, i64*), void (%"class.v8::internal::StringTableInsertionKey"*, i64*)* @_ZN2v88internal23StringTableInsertionKeyC2ENS0_6HandleINS0_6StringEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12DeserializerC2EPNS0_7IsolateENS0_6VectorIKhEEjbb(%"class.v8::internal::Deserializer"*, %"class.v8::internal::Isolate"*, i8*, i64, i32, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::shared_ptr", align 8
  %9 = zext i1 %5 to i8
  %10 = zext i1 %6 to i8
  %11 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal12DeserializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::vector.972"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  %15 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  store i8* %2, i8** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 1
  %17 = trunc i64 %3 to i32
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 4
  store i32 %4, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6
  %21 = bitcast %"class.v8::internal::Deserializer::HotObjectsList"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 68, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7
  %23 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 19
  %24 = bitcast %"class.std::__1::vector.1133"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 268, i1 false)
  store i8 %9, i8* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 21
  store i8 %10, i8* %26, align 2
  %27 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22
  %28 = bitcast %"class.std::__1::vector.972"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #9
  %29 = bitcast %"class.std::__1::shared_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #9
  %30 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1197"* %30, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %8) #9
  %31 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %8, i64 0, i32 1
  %32 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %31, align 8
  %33 = bitcast %"class.std::__1::__shared_weak_count"* %32 to void (%"class.std::__1::__shared_count"*)***
  %34 = icmp eq %"class.std::__1::__shared_weak_count"* %32, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %7
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0, i32 1
  %37 = atomicrmw add i64* %36, i64 -1 acq_rel
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0
  %41 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %33, align 8
  %42 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %41, i64 2
  %43 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %42, align 8
  call void %43(%"class.std::__1::__shared_count"* %40) #9
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %32) #9
  br label %44

44:                                               ; preds = %7, %35, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9
  %45 = load i32, i32* %19, align 8
  %46 = icmp eq i32 %45, -1059191790
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %44
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

48:                                               ; preds = %44
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer6RehashEv(%"class.v8::internal::Deserializer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 0
  %4 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 1
  %6 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Handle.974"* %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2 to i8*
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  br label %14

13:                                               ; preds = %14, %1
  ret void

14:                                               ; preds = %8, %14
  %15 = phi %"class.v8::internal::Handle.974"* [ %4, %8 ], [ %20, %14 ]
  %16 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %15, i64 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %10, align 8
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  call void @_ZN2v88internal10HeapObject16RehashBasedOnMapEPNS0_7IsolateE(%"class.v8::internal::HeapObject"* nonnull %11, %"class.v8::internal::Isolate"* %19) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %20 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %15, i64 1
  %21 = icmp eq %"class.v8::internal::Handle.974"* %20, %6
  br i1 %21, label %13, label %14
}

declare void @_ZN2v88internal10HeapObject16RehashBasedOnMapEPNS0_7IsolateE(%"class.v8::internal::HeapObject"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12DeserializerD2Ev(%"class.v8::internal::Deserializer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal12DeserializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 0
  %4 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Handle.974"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Handle.974"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Handle.974"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Handle.974"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 17, i32 0, i32 0
  %13 = load %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %12, align 8
  %14 = icmp eq %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %13 to i64
  %17 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 17, i32 0, i32 1
  %18 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 0
  %22 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %21, align 8
  %23 = icmp eq %"class.v8::internal::Handle.974"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.v8::internal::Handle.974"* %22 to i64
  %26 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::Handle.974"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.v8::internal::Handle.974"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15
  %31 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %31, align 8
  %33 = icmp eq %"class.std::__1::shared_ptr"* %32, null
  br i1 %33, label %62, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::shared_ptr"* %32 to i8*
  %36 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 1
  %37 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %36, align 8
  %38 = icmp eq %"class.std::__1::shared_ptr"* %37, %32
  br i1 %38, label %60, label %39

39:                                               ; preds = %34, %55
  %40 = phi %"class.std::__1::shared_ptr"* [ %41, %55 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %40, i64 -1, i32 1
  %43 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %42, align 8
  %44 = icmp eq %"class.std::__1::__shared_weak_count"* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %43, i64 0, i32 0, i32 1
  %47 = atomicrmw add i64* %46, i64 -1 acq_rel
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %43, i64 0, i32 0
  %51 = bitcast %"class.std::__1::__shared_weak_count"* %43 to void (%"class.std::__1::__shared_count"*)***
  %52 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %52, i64 2
  %54 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, align 8
  tail call void %54(%"class.std::__1::__shared_count"* %50) #9
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %43) #9
  br label %55

55:                                               ; preds = %49, %45, %39
  %56 = icmp eq %"class.std::__1::shared_ptr"* %41, %32
  br i1 %56, label %57, label %39

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.1197"* %30 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %34
  %61 = phi i8* [ %59, %57 ], [ %35, %34 ]
  store %"class.std::__1::shared_ptr"* %32, %"class.std::__1::shared_ptr"** %36, align 8
  tail call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %29, %60
  %63 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 14, i32 0, i32 0
  %64 = load %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"** %63, align 8
  %65 = icmp eq %"class.v8::internal::Handle.1191"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = ptrtoint %"class.v8::internal::Handle.1191"* %64 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 14, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::Handle.1191"** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = bitcast %"class.v8::internal::Handle.1191"* %64 to i8*
  tail call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %62, %66
  %72 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 13, i32 0, i32 0
  %73 = load %"class.v8::internal::Handle.1183"*, %"class.v8::internal::Handle.1183"** %72, align 8
  %74 = icmp eq %"class.v8::internal::Handle.1183"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint %"class.v8::internal::Handle.1183"* %73 to i64
  %77 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 13, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::Handle.1183"** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.v8::internal::Handle.1183"* %73 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %71, %75
  %81 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 12, i32 0, i32 0
  %82 = load %"class.v8::internal::Handle.1175"*, %"class.v8::internal::Handle.1175"** %81, align 8
  %83 = icmp eq %"class.v8::internal::Handle.1175"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"class.v8::internal::Handle.1175"* %82 to i64
  %86 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = bitcast %"class.v8::internal::Handle.1175"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast %"class.v8::internal::Handle.1175"* %82 to i8*
  tail call void @_ZdlPv(i8* %88) #14
  br label %89

89:                                               ; preds = %80, %84
  %90 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 11, i32 0, i32 0
  %91 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %90, align 8
  %92 = icmp eq %"class.v8::internal::Handle.1167"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = ptrtoint %"class.v8::internal::Handle.1167"* %91 to i64
  %95 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 11, i32 0, i32 1
  %96 = bitcast %"class.v8::internal::Handle.1167"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"class.v8::internal::Handle.1167"* %91 to i8*
  tail call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %89, %93
  %99 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 10, i32 0, i32 0
  %100 = load %"class.v8::internal::Handle.1159"*, %"class.v8::internal::Handle.1159"** %99, align 8
  %101 = icmp eq %"class.v8::internal::Handle.1159"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint %"class.v8::internal::Handle.1159"* %100 to i64
  %104 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 10, i32 0, i32 1
  %105 = bitcast %"class.v8::internal::Handle.1159"** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast %"class.v8::internal::Handle.1159"* %100 to i8*
  tail call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %98, %102
  %108 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 9, i32 0, i32 0
  %109 = load %"class.v8::internal::Handle.1151"*, %"class.v8::internal::Handle.1151"** %108, align 8
  %110 = icmp eq %"class.v8::internal::Handle.1151"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = ptrtoint %"class.v8::internal::Handle.1151"* %109 to i64
  %113 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 9, i32 0, i32 1
  %114 = bitcast %"class.v8::internal::Handle.1151"** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast %"class.v8::internal::Handle.1151"* %109 to i8*
  tail call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %107, %111
  %117 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 8, i32 0, i32 0
  %118 = load %"class.v8::internal::Handle.1143"*, %"class.v8::internal::Handle.1143"** %117, align 8
  %119 = icmp eq %"class.v8::internal::Handle.1143"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = ptrtoint %"class.v8::internal::Handle.1143"* %118 to i64
  %122 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 8, i32 0, i32 1
  %123 = bitcast %"class.v8::internal::Handle.1143"** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast %"class.v8::internal::Handle.1143"* %118 to i8*
  tail call void @_ZdlPv(i8* %124) #14
  br label %125

125:                                              ; preds = %116, %120
  %126 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7, i32 0, i32 0
  %127 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %126, align 8
  %128 = icmp eq %"class.v8::internal::Handle.1135"* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint %"class.v8::internal::Handle.1135"* %127 to i64
  %131 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7, i32 0, i32 1
  %132 = bitcast %"class.v8::internal::Handle.1135"** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast %"class.v8::internal::Handle.1135"* %127 to i8*
  tail call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %125, %129
  %135 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %135, align 8
  %137 = icmp eq %"class.v8::internal::Handle.974"* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  %139 = ptrtoint %"class.v8::internal::Handle.974"* %136 to i64
  %140 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 2, i32 0, i32 1
  %141 = bitcast %"class.v8::internal::Handle.974"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = bitcast %"class.v8::internal::Handle.974"* %136 to i8*
  tail call void @_ZdlPv(i8* %142) #14
  br label %143

143:                                              ; preds = %134, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12DeserializerD0Ev(%"class.v8::internal::Deserializer"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal12DeserializerD2Ev(%"class.v8::internal::Deserializer"* %0) #9
  %2 = bitcast %"class.v8::internal::Deserializer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::Deserializer"*, i32, i8* nocapture readnone, i64, i64) unnamed_addr #0 align 2 {
  %6 = icmp ult i64 %3, %4
  br i1 %6, label %7, label %23

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  br label %10

10:                                               ; preds = %10, %7
  %11 = phi i64 [ %3, %7 ], [ %21, %10 ]
  %12 = load i8*, i8** %8, align 8
  %13 = load i32, i32* %9, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %9, align 4
  %15 = sext i32 %13 to i64
  %16 = getelementptr inbounds i8, i8* %12, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = tail call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_24SlotAccessorForRootSlotsEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %17, i64 %11) #9
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 3
  %21 = add i64 %20, %11
  %22 = icmp ult i64 %21, %4
  br i1 %22, label %10, label %23

23:                                               ; preds = %10, %5
  %24 = phi i64 [ %3, %5 ], [ %21, %10 ]
  %25 = icmp eq i64 %24, %4
  br i1 %25, label %27, label %26, !prof !2

26:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer8ReadDataENS0_19FullMaybeObjectSlotES2_(%"class.v8::internal::Deserializer"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %1, %2
  br i1 %4, label %5, label %21

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  br label %8

8:                                                ; preds = %5, %8
  %9 = phi i64 [ %1, %5 ], [ %19, %8 ]
  %10 = load i8*, i8** %6, align 8
  %11 = load i32, i32* %7, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %7, align 4
  %13 = sext i32 %11 to i64
  %14 = getelementptr inbounds i8, i8* %10, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = tail call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_24SlotAccessorForRootSlotsEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %15, i64 %9)
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 3
  %19 = add i64 %18, %9
  %20 = icmp ult i64 %19, %2
  br i1 %20, label %8, label %21

21:                                               ; preds = %8, %3
  %22 = phi i64 [ %1, %3 ], [ %19, %8 ]
  %23 = icmp eq i64 %22, %2
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #13
  unreachable

25:                                               ; preds = %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer11SynchronizeENS0_22VisitorSynchronization7SyncTagE(%"class.v8::internal::Deserializer"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 11
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

13:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer26DeserializeDeferredObjectsEv(%"class.v8::internal::Deserializer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = sext i32 %5 to i64
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 11
  br i1 %10, label %11, label %12

11:                                               ; preds = %12, %1
  ret void

12:                                               ; preds = %1, %12
  %13 = phi i8 [ %20, %12 ], [ %9, %1 ]
  %14 = tail call i64* @_ZN2v88internal12Deserializer10ReadObjectENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"* %0, i8 zeroext %13)
  %15 = load i8*, i8** %2, align 8
  %16 = load i32, i32* %4, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %4, align 4
  %18 = sext i32 %16 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 11
  br i1 %21, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12Deserializer10ReadObjectENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle.974", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %5, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = add nsw i32 %7, 1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %5, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %17, %11
  %19 = add nsw i32 %7, 2
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 16
  %25 = or i32 %18, %24
  %26 = add nsw i32 %7, 3
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %5, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw i32 %30, 24
  %32 = or i32 %25, %31
  %33 = and i32 %11, 3
  %34 = add nuw nsw i32 %33, 1
  %35 = add nsw i32 %34, %7
  %36 = shl nuw nsw i32 %34, 3
  %37 = sub nuw nsw i32 32, %36
  %38 = lshr i32 -1, %37
  %39 = and i32 %32, %38
  %40 = lshr i32 %39, 2
  %41 = bitcast %"class.v8::internal::Handle.974"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %3, i64 0, i32 0, i32 0
  store i64* null, i64** %42, align 8
  %43 = add nsw i32 %35, 1
  store i32 %43, i32* %6, align 4
  %44 = sext i32 %35 to i64
  %45 = getelementptr inbounds i8, i8* %5, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %46, %"class.v8::internal::Handle.974"* nonnull %3, %"class.v8::internal::Isolate"* %48) #9
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %2
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

52:                                               ; preds = %2
  %53 = and i32 %39, -4
  %54 = load i64*, i64** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %55 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %55, i64 0, i32 2
  %57 = zext i8 %1 to i32
  %58 = shl nuw nsw i32 %57, 3
  %59 = lshr i32 50462980, %58
  %60 = trunc i32 %59 to i8
  %61 = call i64 @_ZN2v88internal4Heap34AllocateRawWithRetryOrFailSlowPathEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %56, i32 %53, i8 zeroext %60, i32 1, i32 0) #9
  %62 = load i64, i64* %54, align 8
  %63 = add i64 %61, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = trunc i64 %62 to i32
  store atomic volatile i32 %65, i32* %64 monotonic, align 4
  %66 = and i64 %62, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %52
  %69 = and i64 %61, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 262144
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %68
  %76 = or i64 %69, 16
  %77 = inttoptr i64 %76 to %"class.v8::internal::Heap"**
  %78 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %77, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %78, i64 %61, i64 0, i64 %62) #9
  br label %79

79:                                               ; preds = %52, %68, %75
  %80 = add i64 %61, 3
  %81 = add nsw i32 %40, -1
  %82 = sext i32 %81 to i64
  %83 = inttoptr i64 %80 to i32*
  %84 = call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 %82, i32* %83) #9, !srcloc !3
  %85 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %85, i64 0, i32 0, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = load atomic i32, i32* %64 monotonic, align 4
  %89 = and i64 %87, 4294967295
  %90 = icmp eq i64 %89, 0
  call void @llvm.assume(i1 %90) #9
  %91 = zext i32 %88 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp eq i16 %95, 133
  br i1 %96, label %97, label %101

97:                                               ; preds = %79
  %98 = add i64 %61, 32
  %99 = inttoptr i64 %98 to i8*
  store atomic volatile i8 0, i8* %99 monotonic, align 1
  %100 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  br label %101

101:                                              ; preds = %97, %79
  %102 = phi %"class.v8::internal::Isolate"* [ %100, %97 ], [ %85, %79 ]
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 31, i32 4
  %104 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %103, align 8
  %105 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %104, i64 %61) #9
  %108 = ptrtoint i64* %107 to i64
  br label %122

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 31, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 31, i32 1
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %102) #9
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i64* [ %116, %115 ], [ %111, %109 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %110, align 8
  store i64 %61, i64* %118, align 8
  br label %122

122:                                              ; preds = %106, %117
  %123 = phi i64 [ %108, %106 ], [ %119, %117 ]
  %124 = phi i64* [ %107, %106 ], [ %118, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16
  %126 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 1
  %127 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %129 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %128, align 8
  %130 = icmp eq %"class.v8::internal::Handle.974"* %127, %129
  %131 = ptrtoint %"class.v8::internal::Handle.974"* %129 to i64
  br i1 %130, label %137, label %132

132:                                              ; preds = %122
  %133 = bitcast %"class.v8::internal::Handle.974"* %127 to i64*
  store i64 %123, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %127, i64 1
  %135 = ptrtoint %"class.v8::internal::Handle.974"* %134 to i64
  %136 = bitcast %"class.v8::internal::Handle.974"** %126 to i64*
  store i64 %135, i64* %136, align 8
  br label %194

137:                                              ; preds = %122
  %138 = ptrtoint %"class.v8::internal::Handle.974"* %127 to i64
  %139 = bitcast %"class.v8::internal::Handle.974"** %126 to i64*
  %140 = bitcast %"class.std::__1::vector.972"* %125 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %138, %141
  %143 = ashr exact i64 %142, 3
  %144 = add nsw i64 %143, 1
  %145 = icmp ugt i64 %144, 2305843009213693951
  br i1 %145, label %146, label %148

146:                                              ; preds = %137
  %147 = bitcast %"class.std::__1::vector.972"* %125 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #13
  unreachable

148:                                              ; preds = %137
  %149 = bitcast %"class.v8::internal::Handle.974"** %128 to i64*
  %150 = sub i64 %131, %141
  %151 = ashr exact i64 %150, 3
  %152 = icmp ult i64 %151, 1152921504606846975
  br i1 %152, label %153, label %161

153:                                              ; preds = %148
  %154 = ashr exact i64 %150, 2
  %155 = icmp ult i64 %154, %144
  %156 = select i1 %155, i64 %144, i64 %154
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %166, label %158

158:                                              ; preds = %153
  %159 = icmp ugt i64 %156, 2305843009213693951
  br i1 %159, label %160, label %161

160:                                              ; preds = %158
  call void @abort() #13
  unreachable

161:                                              ; preds = %158, %148
  %162 = phi i64 [ %156, %158 ], [ 2305843009213693951, %148 ]
  %163 = shl i64 %162, 3
  %164 = call i8* @_Znwm(i64 %163) #14
  %165 = bitcast i8* %164 to %"class.v8::internal::Handle.974"*
  br label %166

166:                                              ; preds = %161, %153
  %167 = phi i64 [ %162, %161 ], [ 0, %153 ]
  %168 = phi %"class.v8::internal::Handle.974"* [ %165, %161 ], [ null, %153 ]
  %169 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %168, i64 %143
  %170 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %168, i64 %167
  %171 = ptrtoint %"class.v8::internal::Handle.974"* %170 to i64
  %172 = bitcast %"class.v8::internal::Handle.974"* %169 to i64*
  store i64 %123, i64* %172, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %169, i64 1
  %174 = ptrtoint %"class.v8::internal::Handle.974"* %173 to i64
  %175 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %125, i64 0, i32 0, i32 0
  %176 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %175, align 8
  %177 = load i64, i64* %139, align 8
  %178 = ptrtoint %"class.v8::internal::Handle.974"* %176 to i64
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 3
  %181 = sub nsw i64 0, %180
  %182 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %169, i64 %181
  %183 = ptrtoint %"class.v8::internal::Handle.974"* %182 to i64
  %184 = icmp sgt i64 %179, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %166
  %186 = bitcast %"class.v8::internal::Handle.974"* %182 to i8*
  %187 = bitcast %"class.v8::internal::Handle.974"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 %179, i1 false) #9
  %188 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %175, align 8
  br label %189

189:                                              ; preds = %185, %166
  %190 = phi %"class.v8::internal::Handle.974"* [ %176, %166 ], [ %188, %185 ]
  store i64 %183, i64* %140, align 8
  store i64 %174, i64* %139, align 8
  store i64 %171, i64* %149, align 8
  %191 = icmp eq %"class.v8::internal::Handle.974"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = bitcast %"class.v8::internal::Handle.974"* %190 to i8*
  call void @_ZdlPv(i8* %193) #14
  br label %194

194:                                              ; preds = %132, %189, %192
  %195 = icmp ugt i32 %39, 7
  br i1 %195, label %196, label %208

196:                                              ; preds = %194, %196
  %197 = phi i32 [ %206, %196 ], [ 1, %194 ]
  %198 = load i8*, i8** %4, align 8
  %199 = load i32, i32* %6, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %6, align 4
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds i8, i8* %198, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = shl nsw i32 %197, 2
  %205 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_25SlotAccessorForHeapObjectEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %203, i64* %124, i32 %204) #9
  %206 = add nsw i32 %205, %197
  %207 = icmp slt i32 %206, %40
  br i1 %207, label %196, label %208

208:                                              ; preds = %196, %194
  %209 = phi i32 [ 1, %194 ], [ %206, %196 ]
  %210 = icmp eq i32 %209, %40
  br i1 %210, label %212, label %211, !prof !2

211:                                              ; preds = %208
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

212:                                              ; preds = %208
  call void @_ZN2v88internal12Deserializer20PostProcessNewObjectENS0_6HandleINS0_3MapEEENS2_INS0_10HeapObjectEEENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"* %0, i64* %54, i64* %124, i8 zeroext %1)
  ret i64* %124
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer15LogNewMapEventsEv(%"class.v8::internal::Deserializer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7, i32 0, i32 1
  %5 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Handle.1135"* %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  br label %10

9:                                                ; preds = %28, %1
  ret void

10:                                               ; preds = %7, %28
  %11 = phi %"class.v8::internal::Handle.1135"* [ %3, %7 ], [ %29, %28 ]
  %12 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %11, i64 0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 21
  %19 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %18, align 8
  %20 = load i64, i64* %16, align 8
  tail call void @_ZN2v88internal6Logger9MapCreateENS0_3MapE(%"class.v8::internal::Logger"* %19, i64 %20) #9
  %21 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %14
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 21
  %26 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %25, align 8
  %27 = load i64, i64* %16, align 8
  tail call void @_ZN2v88internal6Logger10MapDetailsENS0_3MapE(%"class.v8::internal::Logger"* %26, i64 %27) #9
  br label %28

28:                                               ; preds = %10, %14, %23
  %29 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %11, i64 1
  %30 = icmp eq %"class.v8::internal::Handle.1135"* %29, %5
  br i1 %30, label %9, label %10
}

declare void @_ZN2v88internal6Logger9MapCreateENS0_3MapE(%"class.v8::internal::Logger"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal6Logger10MapDetailsENS0_3MapE(%"class.v8::internal::Logger"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer22WeakenDescriptorArraysEv(%"class.v8::internal::Deserializer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 14, i32 0, i32 1
  %5 = load %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Handle.1191"* %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  br label %10

9:                                                ; preds = %52, %1
  ret void

10:                                               ; preds = %7, %52
  %11 = phi %"class.v8::internal::Handle.1191"* [ %3, %7 ], [ %53, %52 ]
  %12 = getelementptr inbounds %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1191"* %11, i64 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 562
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %14, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = trunc i64 %17 to i32
  store atomic volatile i32 %20, i32* %19 monotonic, align 4
  %21 = icmp eq i32 %20, 0
  %22 = and i64 %17, 1
  %23 = icmp eq i64 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %10
  %26 = and i64 %14, -262144
  %27 = or i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 262144
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %25
  %33 = or i64 %26, 16
  %34 = inttoptr i64 %33 to %"class.v8::internal::Heap"**
  %35 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %34, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %35, i64 %14, i64 0, i64 %17) #9
  br label %36

36:                                               ; preds = %10, %25, %32
  %37 = load i64, i64* %13, align 8
  %38 = add i64 %37, 5
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = and i64 %37, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %36
  %48 = sext i16 %40 to i32
  %49 = or i64 %41, 16
  %50 = inttoptr i64 %49 to %"class.v8::internal::Heap"**
  %51 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %50, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_15DescriptorArrayEi(%"class.v8::internal::Heap"* %51, i64 %37, i32 %48) #9
  br label %52

52:                                               ; preds = %36, %47
  %53 = getelementptr inbounds %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1191"* %11, i64 1
  %54 = icmp eq %"class.v8::internal::Handle.1191"* %53, %5
  br i1 %54, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer15LogScriptEventsENS0_6ScriptE(%"class.v8::internal::Deserializer"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 21
  %9 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %8, align 8
  %10 = add i64 %1, 31
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = ashr i32 %12, 1
  tail call void @_ZN2v88internal6Logger11ScriptEventENS1_15ScriptEventTypeEi(%"class.v8::internal::Logger"* %9, i32 2, i32 %13) #9
  %14 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %5
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 21
  %19 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %18, align 8
  tail call void @_ZN2v88internal6Logger13ScriptDetailsENS0_6ScriptE(%"class.v8::internal::Logger"* %19, i64 %1) #9
  br label %20

20:                                               ; preds = %2, %5, %16
  ret void
}

declare void @_ZN2v88internal6Logger11ScriptEventENS1_15ScriptEventTypeEi(%"class.v8::internal::Logger"*, i32, i32) local_unnamed_addr #3

declare void @_ZN2v88internal6Logger13ScriptDetailsENS0_6ScriptE(%"class.v8::internal::Logger"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23StringTableInsertionKeyC2ENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTableInsertionKey"* nocapture, i64*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = ptrtoint i64* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23StringTableInsertionKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %14, align 8
  %15 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %16 = load i32, i32* %8, align 4
  %17 = load i64, i64* %1, align 8
  br label %18

18:                                               ; preds = %2, %12
  %19 = phi i64 [ %6, %2 ], [ %17, %12 ]
  %20 = phi i32 [ %9, %2 ], [ %16, %12 ]
  %21 = add i64 %19, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %0, i64 0, i32 0, i32 1
  store i32 %20, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %0, i64 0, i32 0, i32 2
  store i32 %23, i32* %25, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23StringTableInsertionKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %26 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %0, i64 0, i32 1
  %27 = bitcast %"class.v8::internal::Handle.1218"* %26 to i64*
  store i64 %4, i64* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal23StringTableInsertionKey19ComputeRawHashFieldENS0_6StringE(%"class.v8::internal::StringTableInsertionKey"* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = add i64 %1, 3
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %11, align 8
  %12 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %13 = load i32, i32* %5, align 4
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i32 [ %6, %2 ], [ %13, %9 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal23StringTableInsertionKey7IsMatchEPNS0_7IsolateENS0_6StringE(%"class.v8::internal::StringTableInsertionKey"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  %11 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %10, i64 %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %11
}

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64* @_ZN2v88internal23StringTableInsertionKey8AsHandleEPNS0_7IsolateE(%"class.v8::internal::StringTableInsertionKey"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readnone) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  ret i64* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer20PostProcessNewObjectENS0_6HandleINS0_3MapEEENS2_INS0_10HeapObjectEEENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"*, i64*, i64*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::StringTableInsertionKey", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", align 8
  %11 = ptrtoint i64* %2 to i64
  %12 = load i64, i64* %1, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = load i8, i8* @_ZN2v88internal20FLAG_rehash_snapshotE, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 21
  %20 = load i8, i8* %19, align 2, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18, %4
  %23 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 19
  %24 = load i8, i8* %23, align 4, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %179, label %26

26:                                               ; preds = %22, %18
  %27 = icmp ult i16 %15, 64
  br i1 %27, label %28, label %103

28:                                               ; preds = %26
  %29 = load i64, i64* %2, align 8
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to i32*
  store i32 3, i32* %31, align 4
  %32 = icmp eq i8 %3, 0
  br i1 %32, label %33, label %179

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22
  %35 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 1
  %36 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %37, align 8
  %39 = icmp eq %"class.v8::internal::Handle.974"* %36, %38
  %40 = ptrtoint %"class.v8::internal::Handle.974"* %38 to i64
  br i1 %39, label %46, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.v8::internal::Handle.974"* %36 to i64*
  store i64 %11, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %36, i64 1
  %44 = ptrtoint %"class.v8::internal::Handle.974"* %43 to i64
  %45 = bitcast %"class.v8::internal::Handle.974"** %35 to i64*
  store i64 %44, i64* %45, align 8
  br label %179

46:                                               ; preds = %33
  %47 = ptrtoint %"class.v8::internal::Handle.974"* %36 to i64
  %48 = bitcast %"class.v8::internal::Handle.974"** %35 to i64*
  %49 = bitcast %"class.std::__1::vector.972"* %34 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = ashr exact i64 %51, 3
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = bitcast %"class.std::__1::vector.972"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #13
  unreachable

57:                                               ; preds = %46
  %58 = bitcast %"class.v8::internal::Handle.974"** %37 to i64*
  %59 = sub i64 %40, %50
  %60 = ashr exact i64 %59, 3
  %61 = icmp ult i64 %60, 1152921504606846975
  br i1 %61, label %62, label %70

62:                                               ; preds = %57
  %63 = ashr exact i64 %59, 2
  %64 = icmp ult i64 %63, %53
  %65 = select i1 %64, i64 %53, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @abort() #13
  unreachable

70:                                               ; preds = %67, %57
  %71 = phi i64 [ %65, %67 ], [ 2305843009213693951, %57 ]
  %72 = shl i64 %71, 3
  %73 = tail call i8* @_Znwm(i64 %72) #14
  %74 = bitcast i8* %73 to %"class.v8::internal::Handle.974"*
  br label %75

75:                                               ; preds = %70, %62
  %76 = phi i64 [ %71, %70 ], [ 0, %62 ]
  %77 = phi %"class.v8::internal::Handle.974"* [ %74, %70 ], [ null, %62 ]
  %78 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %77, i64 %52
  %79 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %77, i64 %76
  %80 = ptrtoint %"class.v8::internal::Handle.974"* %79 to i64
  %81 = bitcast %"class.v8::internal::Handle.974"* %78 to i64*
  store i64 %11, i64* %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %78, i64 1
  %83 = ptrtoint %"class.v8::internal::Handle.974"* %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %34, i64 0, i32 0, i32 0
  %85 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %84, align 8
  %86 = load i64, i64* %48, align 8
  %87 = ptrtoint %"class.v8::internal::Handle.974"* %85 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = sub nsw i64 0, %89
  %91 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %78, i64 %90
  %92 = ptrtoint %"class.v8::internal::Handle.974"* %91 to i64
  %93 = icmp sgt i64 %88, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %75
  %95 = bitcast %"class.v8::internal::Handle.974"* %91 to i8*
  %96 = bitcast %"class.v8::internal::Handle.974"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 %88, i1 false) #9
  %97 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %84, align 8
  br label %98

98:                                               ; preds = %94, %75
  %99 = phi %"class.v8::internal::Handle.974"* [ %85, %75 ], [ %97, %94 ]
  store i64 %92, i64* %49, align 8
  store i64 %83, i64* %48, align 8
  store i64 %80, i64* %58, align 8
  %100 = icmp eq %"class.v8::internal::Handle.974"* %99, null
  br i1 %100, label %179, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::internal::Handle.974"* %99 to i8*
  tail call void @_ZdlPv(i8* %102) #14
  br label %179

103:                                              ; preds = %26
  %104 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #9
  %105 = load i64, i64* %2, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %6, i64 0, i32 0
  %108 = call zeroext i1 @_ZNK2v88internal10HeapObject14NeedsRehashingENS0_12InstanceTypeE(%"class.v8::internal::HeapObject"* nonnull %107, i16 zeroext %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #9
  br i1 %108, label %109, label %179

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22
  %111 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 1
  %112 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  %114 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %113, align 8
  %115 = icmp eq %"class.v8::internal::Handle.974"* %112, %114
  %116 = ptrtoint %"class.v8::internal::Handle.974"* %114 to i64
  br i1 %115, label %122, label %117

117:                                              ; preds = %109
  %118 = bitcast %"class.v8::internal::Handle.974"* %112 to i64*
  store i64 %11, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %112, i64 1
  %120 = ptrtoint %"class.v8::internal::Handle.974"* %119 to i64
  %121 = bitcast %"class.v8::internal::Handle.974"** %111 to i64*
  store i64 %120, i64* %121, align 8
  br label %179

122:                                              ; preds = %109
  %123 = ptrtoint %"class.v8::internal::Handle.974"* %112 to i64
  %124 = bitcast %"class.v8::internal::Handle.974"** %111 to i64*
  %125 = bitcast %"class.std::__1::vector.972"* %110 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %123, %126
  %128 = ashr exact i64 %127, 3
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 2305843009213693951
  br i1 %130, label %131, label %133

131:                                              ; preds = %122
  %132 = bitcast %"class.std::__1::vector.972"* %110 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #13
  unreachable

133:                                              ; preds = %122
  %134 = bitcast %"class.v8::internal::Handle.974"** %113 to i64*
  %135 = sub i64 %116, %126
  %136 = ashr exact i64 %135, 3
  %137 = icmp ult i64 %136, 1152921504606846975
  br i1 %137, label %138, label %146

138:                                              ; preds = %133
  %139 = ashr exact i64 %135, 2
  %140 = icmp ult i64 %139, %129
  %141 = select i1 %140, i64 %129, i64 %139
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %138
  %144 = icmp ugt i64 %141, 2305843009213693951
  br i1 %144, label %145, label %146

145:                                              ; preds = %143
  call void @abort() #13
  unreachable

146:                                              ; preds = %143, %133
  %147 = phi i64 [ %141, %143 ], [ 2305843009213693951, %133 ]
  %148 = shl i64 %147, 3
  %149 = call i8* @_Znwm(i64 %148) #14
  %150 = bitcast i8* %149 to %"class.v8::internal::Handle.974"*
  br label %151

151:                                              ; preds = %146, %138
  %152 = phi i64 [ %147, %146 ], [ 0, %138 ]
  %153 = phi %"class.v8::internal::Handle.974"* [ %150, %146 ], [ null, %138 ]
  %154 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %153, i64 %128
  %155 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %153, i64 %152
  %156 = ptrtoint %"class.v8::internal::Handle.974"* %155 to i64
  %157 = bitcast %"class.v8::internal::Handle.974"* %154 to i64*
  store i64 %11, i64* %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %154, i64 1
  %159 = ptrtoint %"class.v8::internal::Handle.974"* %158 to i64
  %160 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %110, i64 0, i32 0, i32 0
  %161 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %160, align 8
  %162 = load i64, i64* %124, align 8
  %163 = ptrtoint %"class.v8::internal::Handle.974"* %161 to i64
  %164 = sub i64 %162, %163
  %165 = ashr exact i64 %164, 3
  %166 = sub nsw i64 0, %165
  %167 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %154, i64 %166
  %168 = ptrtoint %"class.v8::internal::Handle.974"* %167 to i64
  %169 = icmp sgt i64 %164, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %151
  %171 = bitcast %"class.v8::internal::Handle.974"* %167 to i8*
  %172 = bitcast %"class.v8::internal::Handle.974"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 %164, i1 false) #9
  %173 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %160, align 8
  br label %174

174:                                              ; preds = %170, %151
  %175 = phi %"class.v8::internal::Handle.974"* [ %161, %151 ], [ %173, %170 ]
  store i64 %168, i64* %125, align 8
  store i64 %159, i64* %124, align 8
  store i64 %156, i64* %134, align 8
  %176 = icmp eq %"class.v8::internal::Handle.974"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %174
  %178 = bitcast %"class.v8::internal::Handle.974"* %175 to i8*
  call void @_ZdlPv(i8* %178) #14
  br label %179

179:                                              ; preds = %22, %177, %174, %117, %28, %41, %98, %101, %103
  %180 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 19
  %181 = load i8, i8* %180, align 4, !range !4
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %372, label %183

183:                                              ; preds = %179
  %184 = icmp ult i16 %15, 32
  br i1 %184, label %185, label %231

185:                                              ; preds = %183
  %186 = bitcast %"class.v8::internal::StringTableInsertionKey"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #9
  %187 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23StringTableInsertionKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %188 = load i64, i64* %2, align 8
  %189 = add i64 %188, 3
  %190 = inttoptr i64 %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %200, label %194

194:                                              ; preds = %185
  %195 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #9
  %196 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %188, i64* %196, align 8
  %197 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #9
  %198 = load i32, i32* %190, align 4
  %199 = load i64, i64* %2, align 8
  br label %200

200:                                              ; preds = %185, %194
  %201 = phi i64 [ %188, %185 ], [ %199, %194 ]
  %202 = phi i32 [ %191, %185 ], [ %198, %194 ]
  %203 = add i64 %201, 7
  %204 = inttoptr i64 %203 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %7, i64 0, i32 0, i32 1
  store i32 %202, i32* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %7, i64 0, i32 0, i32 2
  store i32 %205, i32* %207, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23StringTableInsertionKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %208 = getelementptr inbounds %"class.v8::internal::StringTableInsertionKey", %"class.v8::internal::StringTableInsertionKey"* %7, i64 0, i32 1
  %209 = bitcast %"class.v8::internal::Handle.1218"* %208 to i64*
  store i64 %11, i64* %209, align 8
  %210 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %211 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 5, i32 0, i32 0, i32 0
  %213 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %212, align 8
  %214 = call i64* @_ZN2v88internal11StringTable9LookupKeyINS0_23StringTableInsertionKeyENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"* %213, %"class.v8::internal::Isolate"* %211, %"class.v8::internal::StringTableInsertionKey"* nonnull %7) #9
  %215 = load i8, i8* @_ZN2v88internal17FLAG_thin_stringsE, align 1, !range !4
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %230, label %217

217:                                              ; preds = %200
  %218 = load i64, i64* %214, align 8
  %219 = load i64, i64* %2, align 8
  %220 = trunc i64 %218 to i32
  %221 = trunc i64 %219 to i32
  %222 = icmp eq i32 %220, %221
  br i1 %222, label %230, label %223

223:                                              ; preds = %217
  %224 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #9
  %225 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %219, i64* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0
  %227 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %210, align 8
  %228 = load i64, i64* %214, align 8
  call void @_ZN2v88internal6String8MakeThinEPNS0_7IsolateES1_(%"class.v8::internal::String"* nonnull %226, %"class.v8::internal::Isolate"* %227, i64 %228) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #9
  %229 = load i64, i64* %214, align 8
  store i64 %229, i64* %2, align 8
  br label %230

230:                                              ; preds = %217, %200, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #9
  br label %988

231:                                              ; preds = %183
  switch i16 %15, label %535 [
    i16 112, label %232
    i16 90, label %302
    i16 162, label %392
    i16 172, label %462
    i16 86, label %988
    i16 98, label %988
  ]

232:                                              ; preds = %231
  %233 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 12
  %234 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 12, i32 0, i32 1
  %235 = load %"class.v8::internal::Handle.1175"*, %"class.v8::internal::Handle.1175"** %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %237 = load %"class.v8::internal::Handle.1175"*, %"class.v8::internal::Handle.1175"** %236, align 8
  %238 = icmp eq %"class.v8::internal::Handle.1175"* %235, %237
  %239 = ptrtoint %"class.v8::internal::Handle.1175"* %237 to i64
  br i1 %238, label %245, label %240

240:                                              ; preds = %232
  %241 = bitcast %"class.v8::internal::Handle.1175"* %235 to i64*
  store i64 %11, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1175"* %235, i64 1
  %243 = ptrtoint %"class.v8::internal::Handle.1175"* %242 to i64
  %244 = bitcast %"class.v8::internal::Handle.1175"** %234 to i64*
  store i64 %243, i64* %244, align 8
  br label %373

245:                                              ; preds = %232
  %246 = ptrtoint %"class.v8::internal::Handle.1175"* %235 to i64
  %247 = bitcast %"class.v8::internal::Handle.1175"** %234 to i64*
  %248 = bitcast %"class.std::__1::vector.1173"* %233 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = sub i64 %246, %249
  %251 = ashr exact i64 %250, 3
  %252 = add nsw i64 %251, 1
  %253 = icmp ugt i64 %252, 2305843009213693951
  br i1 %253, label %254, label %256

254:                                              ; preds = %245
  %255 = bitcast %"class.std::__1::vector.1173"* %233 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %255) #13
  unreachable

256:                                              ; preds = %245
  %257 = bitcast %"class.v8::internal::Handle.1175"** %236 to i64*
  %258 = sub i64 %239, %249
  %259 = ashr exact i64 %258, 3
  %260 = icmp ult i64 %259, 1152921504606846975
  br i1 %260, label %261, label %269

261:                                              ; preds = %256
  %262 = ashr exact i64 %258, 2
  %263 = icmp ult i64 %262, %252
  %264 = select i1 %263, i64 %252, i64 %262
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %274, label %266

266:                                              ; preds = %261
  %267 = icmp ugt i64 %264, 2305843009213693951
  br i1 %267, label %268, label %269

268:                                              ; preds = %266
  call void @abort() #13
  unreachable

269:                                              ; preds = %266, %256
  %270 = phi i64 [ %264, %266 ], [ 2305843009213693951, %256 ]
  %271 = shl i64 %270, 3
  %272 = call i8* @_Znwm(i64 %271) #14
  %273 = bitcast i8* %272 to %"class.v8::internal::Handle.1175"*
  br label %274

274:                                              ; preds = %269, %261
  %275 = phi i64 [ %270, %269 ], [ 0, %261 ]
  %276 = phi %"class.v8::internal::Handle.1175"* [ %273, %269 ], [ null, %261 ]
  %277 = getelementptr inbounds %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1175"* %276, i64 %251
  %278 = getelementptr inbounds %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1175"* %276, i64 %275
  %279 = ptrtoint %"class.v8::internal::Handle.1175"* %278 to i64
  %280 = bitcast %"class.v8::internal::Handle.1175"* %277 to i64*
  store i64 %11, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1175"* %277, i64 1
  %282 = ptrtoint %"class.v8::internal::Handle.1175"* %281 to i64
  %283 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %233, i64 0, i32 0, i32 0
  %284 = load %"class.v8::internal::Handle.1175"*, %"class.v8::internal::Handle.1175"** %283, align 8
  %285 = load i64, i64* %247, align 8
  %286 = ptrtoint %"class.v8::internal::Handle.1175"* %284 to i64
  %287 = sub i64 %285, %286
  %288 = ashr exact i64 %287, 3
  %289 = sub nsw i64 0, %288
  %290 = getelementptr inbounds %"class.v8::internal::Handle.1175", %"class.v8::internal::Handle.1175"* %277, i64 %289
  %291 = ptrtoint %"class.v8::internal::Handle.1175"* %290 to i64
  %292 = icmp sgt i64 %287, 0
  br i1 %292, label %293, label %297

293:                                              ; preds = %274
  %294 = bitcast %"class.v8::internal::Handle.1175"* %290 to i8*
  %295 = bitcast %"class.v8::internal::Handle.1175"* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %295, i64 %287, i1 false) #9
  %296 = load %"class.v8::internal::Handle.1175"*, %"class.v8::internal::Handle.1175"** %283, align 8
  br label %297

297:                                              ; preds = %293, %274
  %298 = phi %"class.v8::internal::Handle.1175"* [ %284, %274 ], [ %296, %293 ]
  store i64 %291, i64* %248, align 8
  store i64 %282, i64* %247, align 8
  store i64 %279, i64* %257, align 8
  %299 = icmp eq %"class.v8::internal::Handle.1175"* %298, null
  br i1 %299, label %373, label %300

300:                                              ; preds = %297
  %301 = bitcast %"class.v8::internal::Handle.1175"* %298 to i8*
  call void @_ZdlPv(i8* %301) #14
  br label %373

302:                                              ; preds = %231
  %303 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 8
  %304 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 8, i32 0, i32 1
  %305 = load %"class.v8::internal::Handle.1143"*, %"class.v8::internal::Handle.1143"** %304, align 8
  %306 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %307 = load %"class.v8::internal::Handle.1143"*, %"class.v8::internal::Handle.1143"** %306, align 8
  %308 = icmp eq %"class.v8::internal::Handle.1143"* %305, %307
  %309 = ptrtoint %"class.v8::internal::Handle.1143"* %307 to i64
  br i1 %308, label %315, label %310

310:                                              ; preds = %302
  %311 = bitcast %"class.v8::internal::Handle.1143"* %305 to i64*
  store i64 %11, i64* %311, align 8
  %312 = getelementptr inbounds %"class.v8::internal::Handle.1143", %"class.v8::internal::Handle.1143"* %305, i64 1
  %313 = ptrtoint %"class.v8::internal::Handle.1143"* %312 to i64
  %314 = bitcast %"class.v8::internal::Handle.1143"** %304 to i64*
  store i64 %313, i64* %314, align 8
  br label %988

315:                                              ; preds = %302
  %316 = ptrtoint %"class.v8::internal::Handle.1143"* %305 to i64
  %317 = bitcast %"class.v8::internal::Handle.1143"** %304 to i64*
  %318 = bitcast %"class.std::__1::vector.1141"* %303 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %316, %319
  %321 = ashr exact i64 %320, 3
  %322 = add nsw i64 %321, 1
  %323 = icmp ugt i64 %322, 2305843009213693951
  br i1 %323, label %324, label %326

324:                                              ; preds = %315
  %325 = bitcast %"class.std::__1::vector.1141"* %303 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %325) #13
  unreachable

326:                                              ; preds = %315
  %327 = bitcast %"class.v8::internal::Handle.1143"** %306 to i64*
  %328 = sub i64 %309, %319
  %329 = ashr exact i64 %328, 3
  %330 = icmp ult i64 %329, 1152921504606846975
  br i1 %330, label %331, label %339

331:                                              ; preds = %326
  %332 = ashr exact i64 %328, 2
  %333 = icmp ult i64 %332, %322
  %334 = select i1 %333, i64 %322, i64 %332
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %344, label %336

336:                                              ; preds = %331
  %337 = icmp ugt i64 %334, 2305843009213693951
  br i1 %337, label %338, label %339

338:                                              ; preds = %336
  call void @abort() #13
  unreachable

339:                                              ; preds = %336, %326
  %340 = phi i64 [ %334, %336 ], [ 2305843009213693951, %326 ]
  %341 = shl i64 %340, 3
  %342 = call i8* @_Znwm(i64 %341) #14
  %343 = bitcast i8* %342 to %"class.v8::internal::Handle.1143"*
  br label %344

344:                                              ; preds = %339, %331
  %345 = phi i64 [ %340, %339 ], [ 0, %331 ]
  %346 = phi %"class.v8::internal::Handle.1143"* [ %343, %339 ], [ null, %331 ]
  %347 = getelementptr inbounds %"class.v8::internal::Handle.1143", %"class.v8::internal::Handle.1143"* %346, i64 %321
  %348 = getelementptr inbounds %"class.v8::internal::Handle.1143", %"class.v8::internal::Handle.1143"* %346, i64 %345
  %349 = ptrtoint %"class.v8::internal::Handle.1143"* %348 to i64
  %350 = bitcast %"class.v8::internal::Handle.1143"* %347 to i64*
  store i64 %11, i64* %350, align 8
  %351 = getelementptr inbounds %"class.v8::internal::Handle.1143", %"class.v8::internal::Handle.1143"* %347, i64 1
  %352 = ptrtoint %"class.v8::internal::Handle.1143"* %351 to i64
  %353 = getelementptr inbounds %"class.std::__1::vector.1141", %"class.std::__1::vector.1141"* %303, i64 0, i32 0, i32 0
  %354 = load %"class.v8::internal::Handle.1143"*, %"class.v8::internal::Handle.1143"** %353, align 8
  %355 = load i64, i64* %317, align 8
  %356 = ptrtoint %"class.v8::internal::Handle.1143"* %354 to i64
  %357 = sub i64 %355, %356
  %358 = ashr exact i64 %357, 3
  %359 = sub nsw i64 0, %358
  %360 = getelementptr inbounds %"class.v8::internal::Handle.1143", %"class.v8::internal::Handle.1143"* %347, i64 %359
  %361 = ptrtoint %"class.v8::internal::Handle.1143"* %360 to i64
  %362 = icmp sgt i64 %357, 0
  br i1 %362, label %363, label %367

363:                                              ; preds = %344
  %364 = bitcast %"class.v8::internal::Handle.1143"* %360 to i8*
  %365 = bitcast %"class.v8::internal::Handle.1143"* %354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %364, i8* align 8 %365, i64 %357, i1 false) #9
  %366 = load %"class.v8::internal::Handle.1143"*, %"class.v8::internal::Handle.1143"** %353, align 8
  br label %367

367:                                              ; preds = %363, %344
  %368 = phi %"class.v8::internal::Handle.1143"* [ %354, %344 ], [ %366, %363 ]
  store i64 %361, i64* %318, align 8
  store i64 %352, i64* %317, align 8
  store i64 %349, i64* %327, align 8
  %369 = icmp eq %"class.v8::internal::Handle.1143"* %368, null
  br i1 %369, label %988, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.v8::internal::Handle.1143"* %368 to i8*
  call void @_ZdlPv(i8* %371) #14
  br label %988

372:                                              ; preds = %179
  switch i16 %15, label %535 [
    i16 112, label %373
    i16 162, label %988
    i16 172, label %462
    i16 86, label %988
    i16 98, label %988
  ]

373:                                              ; preds = %372, %240, %297, %300
  %374 = load i64, i64* %2, align 8
  %375 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !4
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %988, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %379 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %379, i64 0, i32 21
  %381 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %380, align 8
  %382 = add i64 %374, 31
  %383 = inttoptr i64 %382 to i32*
  %384 = load i32, i32* %383, align 4
  %385 = ashr i32 %384, 1
  call void @_ZN2v88internal6Logger11ScriptEventENS1_15ScriptEventTypeEi(%"class.v8::internal::Logger"* %381, i32 2, i32 %385) #9
  %386 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %988, label %388

388:                                              ; preds = %377
  %389 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %378, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %389, i64 0, i32 21
  %391 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %390, align 8
  call void @_ZN2v88internal6Logger13ScriptDetailsENS0_6ScriptE(%"class.v8::internal::Logger"* %391, i64 %374) #9
  br label %988

392:                                              ; preds = %231
  %393 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 9
  %394 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 9, i32 0, i32 1
  %395 = load %"class.v8::internal::Handle.1151"*, %"class.v8::internal::Handle.1151"** %394, align 8
  %396 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %397 = load %"class.v8::internal::Handle.1151"*, %"class.v8::internal::Handle.1151"** %396, align 8
  %398 = icmp eq %"class.v8::internal::Handle.1151"* %395, %397
  %399 = ptrtoint %"class.v8::internal::Handle.1151"* %397 to i64
  br i1 %398, label %405, label %400

400:                                              ; preds = %392
  %401 = bitcast %"class.v8::internal::Handle.1151"* %395 to i64*
  store i64 %11, i64* %401, align 8
  %402 = getelementptr inbounds %"class.v8::internal::Handle.1151", %"class.v8::internal::Handle.1151"* %395, i64 1
  %403 = ptrtoint %"class.v8::internal::Handle.1151"* %402 to i64
  %404 = bitcast %"class.v8::internal::Handle.1151"** %394 to i64*
  store i64 %403, i64* %404, align 8
  br label %988

405:                                              ; preds = %392
  %406 = ptrtoint %"class.v8::internal::Handle.1151"* %395 to i64
  %407 = bitcast %"class.v8::internal::Handle.1151"** %394 to i64*
  %408 = bitcast %"class.std::__1::vector.1149"* %393 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = sub i64 %406, %409
  %411 = ashr exact i64 %410, 3
  %412 = add nsw i64 %411, 1
  %413 = icmp ugt i64 %412, 2305843009213693951
  br i1 %413, label %414, label %416

414:                                              ; preds = %405
  %415 = bitcast %"class.std::__1::vector.1149"* %393 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %415) #13
  unreachable

416:                                              ; preds = %405
  %417 = bitcast %"class.v8::internal::Handle.1151"** %396 to i64*
  %418 = sub i64 %399, %409
  %419 = ashr exact i64 %418, 3
  %420 = icmp ult i64 %419, 1152921504606846975
  br i1 %420, label %421, label %429

421:                                              ; preds = %416
  %422 = ashr exact i64 %418, 2
  %423 = icmp ult i64 %422, %412
  %424 = select i1 %423, i64 %412, i64 %422
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %434, label %426

426:                                              ; preds = %421
  %427 = icmp ugt i64 %424, 2305843009213693951
  br i1 %427, label %428, label %429

428:                                              ; preds = %426
  call void @abort() #13
  unreachable

429:                                              ; preds = %426, %416
  %430 = phi i64 [ %424, %426 ], [ 2305843009213693951, %416 ]
  %431 = shl i64 %430, 3
  %432 = call i8* @_Znwm(i64 %431) #14
  %433 = bitcast i8* %432 to %"class.v8::internal::Handle.1151"*
  br label %434

434:                                              ; preds = %429, %421
  %435 = phi i64 [ %430, %429 ], [ 0, %421 ]
  %436 = phi %"class.v8::internal::Handle.1151"* [ %433, %429 ], [ null, %421 ]
  %437 = getelementptr inbounds %"class.v8::internal::Handle.1151", %"class.v8::internal::Handle.1151"* %436, i64 %411
  %438 = getelementptr inbounds %"class.v8::internal::Handle.1151", %"class.v8::internal::Handle.1151"* %436, i64 %435
  %439 = ptrtoint %"class.v8::internal::Handle.1151"* %438 to i64
  %440 = bitcast %"class.v8::internal::Handle.1151"* %437 to i64*
  store i64 %11, i64* %440, align 8
  %441 = getelementptr inbounds %"class.v8::internal::Handle.1151", %"class.v8::internal::Handle.1151"* %437, i64 1
  %442 = ptrtoint %"class.v8::internal::Handle.1151"* %441 to i64
  %443 = getelementptr inbounds %"class.std::__1::vector.1149", %"class.std::__1::vector.1149"* %393, i64 0, i32 0, i32 0
  %444 = load %"class.v8::internal::Handle.1151"*, %"class.v8::internal::Handle.1151"** %443, align 8
  %445 = load i64, i64* %407, align 8
  %446 = ptrtoint %"class.v8::internal::Handle.1151"* %444 to i64
  %447 = sub i64 %445, %446
  %448 = ashr exact i64 %447, 3
  %449 = sub nsw i64 0, %448
  %450 = getelementptr inbounds %"class.v8::internal::Handle.1151", %"class.v8::internal::Handle.1151"* %437, i64 %449
  %451 = ptrtoint %"class.v8::internal::Handle.1151"* %450 to i64
  %452 = icmp sgt i64 %447, 0
  br i1 %452, label %453, label %457

453:                                              ; preds = %434
  %454 = bitcast %"class.v8::internal::Handle.1151"* %450 to i8*
  %455 = bitcast %"class.v8::internal::Handle.1151"* %444 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %454, i8* align 8 %455, i64 %447, i1 false) #9
  %456 = load %"class.v8::internal::Handle.1151"*, %"class.v8::internal::Handle.1151"** %443, align 8
  br label %457

457:                                              ; preds = %453, %434
  %458 = phi %"class.v8::internal::Handle.1151"* [ %444, %434 ], [ %456, %453 ]
  store i64 %451, i64* %408, align 8
  store i64 %442, i64* %407, align 8
  store i64 %439, i64* %417, align 8
  %459 = icmp eq %"class.v8::internal::Handle.1151"* %458, null
  br i1 %459, label %988, label %460

460:                                              ; preds = %457
  %461 = bitcast %"class.v8::internal::Handle.1151"* %458 to i8*
  call void @_ZdlPv(i8* %461) #14
  br label %988

462:                                              ; preds = %231, %372
  %463 = load i8, i8* @_ZN2v88internal13FLAG_log_mapsE, align 1, !range !4
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %988, label %465

465:                                              ; preds = %462
  %466 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7
  %467 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7, i32 0, i32 1
  %468 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %467, align 8
  %469 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %470 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %469, align 8
  %471 = icmp eq %"class.v8::internal::Handle.1135"* %468, %470
  %472 = ptrtoint %"class.v8::internal::Handle.1135"* %470 to i64
  br i1 %471, label %478, label %473

473:                                              ; preds = %465
  %474 = bitcast %"class.v8::internal::Handle.1135"* %468 to i64*
  store i64 %11, i64* %474, align 8
  %475 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %468, i64 1
  %476 = ptrtoint %"class.v8::internal::Handle.1135"* %475 to i64
  %477 = bitcast %"class.v8::internal::Handle.1135"** %467 to i64*
  store i64 %476, i64* %477, align 8
  br label %988

478:                                              ; preds = %465
  %479 = ptrtoint %"class.v8::internal::Handle.1135"* %468 to i64
  %480 = bitcast %"class.v8::internal::Handle.1135"** %467 to i64*
  %481 = bitcast %"class.std::__1::vector.1133"* %466 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = sub i64 %479, %482
  %484 = ashr exact i64 %483, 3
  %485 = add nsw i64 %484, 1
  %486 = icmp ugt i64 %485, 2305843009213693951
  br i1 %486, label %487, label %489

487:                                              ; preds = %478
  %488 = bitcast %"class.std::__1::vector.1133"* %466 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %488) #13
  unreachable

489:                                              ; preds = %478
  %490 = bitcast %"class.v8::internal::Handle.1135"** %469 to i64*
  %491 = sub i64 %472, %482
  %492 = ashr exact i64 %491, 3
  %493 = icmp ult i64 %492, 1152921504606846975
  br i1 %493, label %494, label %502

494:                                              ; preds = %489
  %495 = ashr exact i64 %491, 2
  %496 = icmp ult i64 %495, %485
  %497 = select i1 %496, i64 %485, i64 %495
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %507, label %499

499:                                              ; preds = %494
  %500 = icmp ugt i64 %497, 2305843009213693951
  br i1 %500, label %501, label %502

501:                                              ; preds = %499
  call void @abort() #13
  unreachable

502:                                              ; preds = %499, %489
  %503 = phi i64 [ %497, %499 ], [ 2305843009213693951, %489 ]
  %504 = shl i64 %503, 3
  %505 = call i8* @_Znwm(i64 %504) #14
  %506 = bitcast i8* %505 to %"class.v8::internal::Handle.1135"*
  br label %507

507:                                              ; preds = %502, %494
  %508 = phi i64 [ %503, %502 ], [ 0, %494 ]
  %509 = phi %"class.v8::internal::Handle.1135"* [ %506, %502 ], [ null, %494 ]
  %510 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %509, i64 %484
  %511 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %509, i64 %508
  %512 = ptrtoint %"class.v8::internal::Handle.1135"* %511 to i64
  %513 = bitcast %"class.v8::internal::Handle.1135"* %510 to i64*
  store i64 %11, i64* %513, align 8
  %514 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %510, i64 1
  %515 = ptrtoint %"class.v8::internal::Handle.1135"* %514 to i64
  %516 = getelementptr inbounds %"class.std::__1::vector.1133", %"class.std::__1::vector.1133"* %466, i64 0, i32 0, i32 0
  %517 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %516, align 8
  %518 = load i64, i64* %480, align 8
  %519 = ptrtoint %"class.v8::internal::Handle.1135"* %517 to i64
  %520 = sub i64 %518, %519
  %521 = ashr exact i64 %520, 3
  %522 = sub nsw i64 0, %521
  %523 = getelementptr inbounds %"class.v8::internal::Handle.1135", %"class.v8::internal::Handle.1135"* %510, i64 %522
  %524 = ptrtoint %"class.v8::internal::Handle.1135"* %523 to i64
  %525 = icmp sgt i64 %520, 0
  br i1 %525, label %526, label %530

526:                                              ; preds = %507
  %527 = bitcast %"class.v8::internal::Handle.1135"* %523 to i8*
  %528 = bitcast %"class.v8::internal::Handle.1135"* %517 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %527, i8* align 8 %528, i64 %520, i1 false) #9
  %529 = load %"class.v8::internal::Handle.1135"*, %"class.v8::internal::Handle.1135"** %516, align 8
  br label %530

530:                                              ; preds = %526, %507
  %531 = phi %"class.v8::internal::Handle.1135"* [ %517, %507 ], [ %529, %526 ]
  store i64 %524, i64* %481, align 8
  store i64 %515, i64* %480, align 8
  store i64 %512, i64* %490, align 8
  %532 = icmp eq %"class.v8::internal::Handle.1135"* %531, null
  br i1 %532, label %988, label %533

533:                                              ; preds = %530
  %534 = bitcast %"class.v8::internal::Handle.1135"* %531 to i8*
  call void @_ZdlPv(i8* %534) #14
  br label %988

535:                                              ; preds = %231, %372
  %536 = and i16 %15, -57
  %537 = icmp eq i16 %536, 2
  br i1 %537, label %538, label %718

538:                                              ; preds = %535
  %539 = load i64, i64* %2, align 8
  %540 = add i64 %539, 11
  %541 = inttoptr i64 %540 to i64*
  %542 = load i64, i64* %541, align 1
  %543 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %544 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %543, align 8
  %545 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %544, i64 0, i32 94
  %546 = load i64*, i64** %545, align 8
  %547 = and i64 %542, 4294967295
  %548 = getelementptr inbounds i64, i64* %546, i64 %547
  %549 = load i64, i64* %548, align 8
  %550 = and i64 %539, -4294967296
  %551 = add i64 %539, -1
  %552 = inttoptr i64 %551 to i32*
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = zext i32 %553 to i64
  %555 = or i64 %550, %554
  %556 = add i64 %555, 7
  %557 = inttoptr i64 %556 to i16*
  %558 = load atomic i16, i16* %557 monotonic, align 2
  %559 = bitcast %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %559) #9
  %560 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %539, i64* %560, align 8
  %561 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal14ExternalString23set_address_as_resourceEPNS0_7IsolateEm(%"class.v8::internal::ExternalString"* nonnull %561, %"class.v8::internal::Isolate"* %544, i64 %549)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %559) #9
  %562 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %543, align 8
  %563 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 2
  %564 = load i64, i64* %2, align 8
  %565 = bitcast %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %565) #9
  %566 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %564, i64* %566, align 8
  %567 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %10, i64 0, i32 0
  %568 = call i32 @_ZNK2v88internal14ExternalString19ExternalPayloadSizeEv(%"class.v8::internal::ExternalString"* nonnull %567) #9
  %569 = sext i32 %568 to i64
  call void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"* %563, i64 %564, i64 0, i64 %569) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %565) #9
  %570 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %543, align 8
  %571 = load i64, i64* %2, align 8
  %572 = and i64 %571, -262144
  %573 = inttoptr i64 %572 to %"class.v8::internal::BasicMemoryChunk"*
  %574 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %573, i64 0, i32 1
  %575 = load i64, i64* %574, align 8
  %576 = and i64 %575, 24
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %648, label %578

578:                                              ; preds = %538
  %579 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 2, i32 119, i32 1
  %580 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 2, i32 119, i32 1, i32 0, i32 1
  %581 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %580, align 8
  %582 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 2, i32 119, i32 1, i32 0, i32 2, i32 0, i32 0
  %583 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %582, align 8
  %584 = icmp eq %"class.v8::internal::Object"* %581, %583
  %585 = ptrtoint %"class.v8::internal::Object"* %583 to i64
  br i1 %584, label %591, label %586

586:                                              ; preds = %578
  %587 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %581, i64 0, i32 0, i32 0
  store i64 %571, i64* %587, align 8
  %588 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %581, i64 1
  %589 = ptrtoint %"class.v8::internal::Object"* %588 to i64
  %590 = bitcast %"class.v8::internal::Object"** %580 to i64*
  store i64 %589, i64* %590, align 8
  br label %988

591:                                              ; preds = %578
  %592 = ptrtoint %"class.v8::internal::Object"* %581 to i64
  %593 = bitcast %"class.v8::internal::Object"** %580 to i64*
  %594 = bitcast %"class.std::__1::vector.541"* %579 to i64*
  %595 = load i64, i64* %594, align 8
  %596 = sub i64 %592, %595
  %597 = ashr exact i64 %596, 3
  %598 = add nsw i64 %597, 1
  %599 = icmp ugt i64 %598, 2305843009213693951
  br i1 %599, label %600, label %602

600:                                              ; preds = %591
  %601 = bitcast %"class.std::__1::vector.541"* %579 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %601) #13
  unreachable

602:                                              ; preds = %591
  %603 = bitcast %"class.v8::internal::Object"** %582 to i64*
  %604 = sub i64 %585, %595
  %605 = ashr exact i64 %604, 3
  %606 = icmp ult i64 %605, 1152921504606846975
  br i1 %606, label %607, label %615

607:                                              ; preds = %602
  %608 = ashr exact i64 %604, 2
  %609 = icmp ult i64 %608, %598
  %610 = select i1 %609, i64 %598, i64 %608
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %620, label %612

612:                                              ; preds = %607
  %613 = icmp ugt i64 %610, 2305843009213693951
  br i1 %613, label %614, label %615

614:                                              ; preds = %612
  call void @abort() #13
  unreachable

615:                                              ; preds = %612, %602
  %616 = phi i64 [ %610, %612 ], [ 2305843009213693951, %602 ]
  %617 = shl i64 %616, 3
  %618 = call i8* @_Znwm(i64 %617) #14
  %619 = bitcast i8* %618 to %"class.v8::internal::Object"*
  br label %620

620:                                              ; preds = %615, %607
  %621 = phi i64 [ %616, %615 ], [ 0, %607 ]
  %622 = phi %"class.v8::internal::Object"* [ %619, %615 ], [ null, %607 ]
  %623 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %622, i64 %597
  %624 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %622, i64 %621
  %625 = ptrtoint %"class.v8::internal::Object"* %624 to i64
  %626 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %623, i64 0, i32 0, i32 0
  store i64 %571, i64* %626, align 8
  %627 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %623, i64 1
  %628 = ptrtoint %"class.v8::internal::Object"* %627 to i64
  %629 = getelementptr inbounds %"class.std::__1::vector.541", %"class.std::__1::vector.541"* %579, i64 0, i32 0, i32 0
  %630 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %629, align 8
  %631 = load i64, i64* %593, align 8
  %632 = ptrtoint %"class.v8::internal::Object"* %630 to i64
  %633 = sub i64 %631, %632
  %634 = ashr exact i64 %633, 3
  %635 = sub nsw i64 0, %634
  %636 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %623, i64 %635
  %637 = ptrtoint %"class.v8::internal::Object"* %636 to i64
  %638 = icmp sgt i64 %633, 0
  br i1 %638, label %639, label %643

639:                                              ; preds = %620
  %640 = bitcast %"class.v8::internal::Object"* %636 to i8*
  %641 = bitcast %"class.v8::internal::Object"* %630 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %640, i8* align 8 %641, i64 %633, i1 false) #9
  %642 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %629, align 8
  br label %643

643:                                              ; preds = %639, %620
  %644 = phi %"class.v8::internal::Object"* [ %630, %620 ], [ %642, %639 ]
  store i64 %637, i64* %594, align 8
  store i64 %628, i64* %593, align 8
  store i64 %625, i64* %603, align 8
  %645 = icmp eq %"class.v8::internal::Object"* %644, null
  br i1 %645, label %988, label %646

646:                                              ; preds = %643
  %647 = bitcast %"class.v8::internal::Object"* %644 to i8*
  call void @_ZdlPv(i8* %647) #14
  br label %988

648:                                              ; preds = %538
  %649 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 2, i32 119, i32 2
  %650 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 2, i32 119, i32 2, i32 0, i32 1
  %651 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %650, align 8
  %652 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 2, i32 119, i32 2, i32 0, i32 2, i32 0, i32 0
  %653 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %652, align 8
  %654 = icmp eq %"class.v8::internal::Object"* %651, %653
  %655 = ptrtoint %"class.v8::internal::Object"* %653 to i64
  br i1 %654, label %661, label %656

656:                                              ; preds = %648
  %657 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %651, i64 0, i32 0, i32 0
  store i64 %571, i64* %657, align 8
  %658 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %651, i64 1
  %659 = ptrtoint %"class.v8::internal::Object"* %658 to i64
  %660 = bitcast %"class.v8::internal::Object"** %650 to i64*
  store i64 %659, i64* %660, align 8
  br label %988

661:                                              ; preds = %648
  %662 = ptrtoint %"class.v8::internal::Object"* %651 to i64
  %663 = bitcast %"class.v8::internal::Object"** %650 to i64*
  %664 = bitcast %"class.std::__1::vector.541"* %649 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = sub i64 %662, %665
  %667 = ashr exact i64 %666, 3
  %668 = add nsw i64 %667, 1
  %669 = icmp ugt i64 %668, 2305843009213693951
  br i1 %669, label %670, label %672

670:                                              ; preds = %661
  %671 = bitcast %"class.std::__1::vector.541"* %649 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %671) #13
  unreachable

672:                                              ; preds = %661
  %673 = bitcast %"class.v8::internal::Object"** %652 to i64*
  %674 = sub i64 %655, %665
  %675 = ashr exact i64 %674, 3
  %676 = icmp ult i64 %675, 1152921504606846975
  br i1 %676, label %677, label %685

677:                                              ; preds = %672
  %678 = ashr exact i64 %674, 2
  %679 = icmp ult i64 %678, %668
  %680 = select i1 %679, i64 %668, i64 %678
  %681 = icmp eq i64 %680, 0
  br i1 %681, label %690, label %682

682:                                              ; preds = %677
  %683 = icmp ugt i64 %680, 2305843009213693951
  br i1 %683, label %684, label %685

684:                                              ; preds = %682
  call void @abort() #13
  unreachable

685:                                              ; preds = %682, %672
  %686 = phi i64 [ %680, %682 ], [ 2305843009213693951, %672 ]
  %687 = shl i64 %686, 3
  %688 = call i8* @_Znwm(i64 %687) #14
  %689 = bitcast i8* %688 to %"class.v8::internal::Object"*
  br label %690

690:                                              ; preds = %685, %677
  %691 = phi i64 [ %686, %685 ], [ 0, %677 ]
  %692 = phi %"class.v8::internal::Object"* [ %689, %685 ], [ null, %677 ]
  %693 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %692, i64 %667
  %694 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %692, i64 %691
  %695 = ptrtoint %"class.v8::internal::Object"* %694 to i64
  %696 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %693, i64 0, i32 0, i32 0
  store i64 %571, i64* %696, align 8
  %697 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %693, i64 1
  %698 = ptrtoint %"class.v8::internal::Object"* %697 to i64
  %699 = getelementptr inbounds %"class.std::__1::vector.541", %"class.std::__1::vector.541"* %649, i64 0, i32 0, i32 0
  %700 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %699, align 8
  %701 = load i64, i64* %663, align 8
  %702 = ptrtoint %"class.v8::internal::Object"* %700 to i64
  %703 = sub i64 %701, %702
  %704 = ashr exact i64 %703, 3
  %705 = sub nsw i64 0, %704
  %706 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %693, i64 %705
  %707 = ptrtoint %"class.v8::internal::Object"* %706 to i64
  %708 = icmp sgt i64 %703, 0
  br i1 %708, label %709, label %713

709:                                              ; preds = %690
  %710 = bitcast %"class.v8::internal::Object"* %706 to i8*
  %711 = bitcast %"class.v8::internal::Object"* %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %710, i8* align 8 %711, i64 %703, i1 false) #9
  %712 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %699, align 8
  br label %713

713:                                              ; preds = %709, %690
  %714 = phi %"class.v8::internal::Object"* [ %700, %690 ], [ %712, %709 ]
  store i64 %707, i64* %664, align 8
  store i64 %698, i64* %663, align 8
  store i64 %695, i64* %673, align 8
  %715 = icmp eq %"class.v8::internal::Object"* %714, null
  br i1 %715, label %988, label %716

716:                                              ; preds = %713
  %717 = bitcast %"class.v8::internal::Object"* %714 to i8*
  call void @_ZdlPv(i8* %717) #14
  br label %988

718:                                              ; preds = %535
  switch i16 %15, label %915 [
    i16 1079, label %719
    i16 1080, label %749
    i16 1086, label %833
    i16 133, label %911
  ]

719:                                              ; preds = %718
  %720 = load i64, i64* %2, align 8
  %721 = and i64 %720, -4294967296
  %722 = add i64 %720, 11
  %723 = inttoptr i64 %722 to i32*
  %724 = load i32, i32* %723, align 4
  %725 = zext i32 %724 to i64
  %726 = or i64 %721, %725
  %727 = add i64 %726, 27
  %728 = inttoptr i64 %727 to i64*
  %729 = load i64, i64* %728, align 1
  %730 = trunc i64 %729 to i32
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %740, label %732

732:                                              ; preds = %719
  %733 = and i64 %729, 4294967295
  %734 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 0
  %735 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %734, align 8
  %736 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %735, i64 %733, i32 0
  %737 = load %"class.v8::internal::BackingStore"*, %"class.v8::internal::BackingStore"** %736, align 8
  %738 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %737, i64 0, i32 0
  %739 = load i8*, i8** %738, align 8
  br label %740

740:                                              ; preds = %719, %732
  %741 = phi i8* [ %739, %732 ], [ null, %719 ]
  %742 = add i64 %720, 15
  %743 = inttoptr i64 %742 to i64*
  %744 = load i64, i64* %743, align 1
  %745 = getelementptr inbounds i8, i8* %741, i64 %744
  %746 = ptrtoint i8* %745 to i64
  %747 = add i64 %720, 31
  %748 = inttoptr i64 %747 to i64*
  store i64 %746, i64* %748, align 1
  br label %988

749:                                              ; preds = %718
  %750 = load i64, i64* %2, align 8
  %751 = add i64 %750, 47
  %752 = inttoptr i64 %751 to i32*
  %753 = load i32, i32* %752, align 4
  %754 = icmp eq i32 %753, 0
  %755 = add i64 %750, 39
  %756 = inttoptr i64 %755 to i64*
  %757 = load i64, i64* %756, align 1
  br i1 %754, label %795, label %758

758:                                              ; preds = %749
  %759 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %760 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %759, align 8
  %761 = and i64 %750, -4294967296
  %762 = zext i32 %753 to i64
  %763 = or i64 %761, %762
  store atomic volatile i32 %753, i32* %752 monotonic, align 4
  %764 = and i64 %762, 1
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %789, label %766

766:                                              ; preds = %758
  %767 = and i64 %750, -262144
  %768 = or i64 %767, 8
  %769 = inttoptr i64 %768 to i64*
  %770 = load i64, i64* %769, align 8
  %771 = and i64 %770, 262144
  %772 = icmp eq i64 %771, 0
  br i1 %772, label %777, label %773

773:                                              ; preds = %766
  %774 = or i64 %767, 16
  %775 = inttoptr i64 %774 to %"class.v8::internal::Heap"**
  %776 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %775, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %776, i64 %750, i64 %751, i64 %763) #9
  br label %777

777:                                              ; preds = %773, %766
  %778 = and i64 %763, -262144
  %779 = or i64 %778, 8
  %780 = inttoptr i64 %779 to i64*
  %781 = load i64, i64* %780, align 8
  %782 = and i64 %781, 24
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %789, label %784

784:                                              ; preds = %777
  %785 = load i64, i64* %769, align 8
  %786 = and i64 %785, 24
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %788, label %789

788:                                              ; preds = %784
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %750, i64 %751, i64 %763) #9
  br label %789

789:                                              ; preds = %758, %777, %784, %788
  %790 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %760, i64 0, i32 0, i32 4
  %791 = load i64, i64* %790, align 8
  %792 = and i64 %791, 4294967295
  %793 = icmp eq i64 %792, 0
  call void @llvm.assume(i1 %793) #9
  %794 = add i64 %791, %757
  store i64 %794, i64* %756, align 1
  br label %988

795:                                              ; preds = %749
  %796 = and i64 %757, 4294967295
  %797 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 0
  %798 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %797, align 8
  %799 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %798, i64 %796, i32 0
  %800 = load %"class.v8::internal::BackingStore"*, %"class.v8::internal::BackingStore"** %799, align 8
  %801 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %798, i64 %796, i32 1
  %802 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %801, align 8
  %803 = icmp eq %"class.std::__1::__shared_weak_count"* %802, null
  br i1 %803, label %807, label %804

804:                                              ; preds = %795
  %805 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %802, i64 0, i32 0, i32 1
  %806 = atomicrmw add i64* %805, i64 1 monotonic
  br label %807

807:                                              ; preds = %795, %804
  %808 = icmp eq %"class.v8::internal::BackingStore"* %800, null
  br i1 %808, label %812, label %809

809:                                              ; preds = %807
  %810 = bitcast %"class.v8::internal::BackingStore"* %800 to i64*
  %811 = load i64, i64* %810, align 8
  br label %812

812:                                              ; preds = %807, %809
  %813 = phi i64 [ %811, %809 ], [ 0, %807 ]
  %814 = load i64, i64* %2, align 8
  %815 = add i64 %814, 15
  %816 = inttoptr i64 %815 to i64*
  %817 = load i64, i64* %816, align 1
  %818 = add i64 %817, %813
  %819 = add i64 %814, 39
  %820 = inttoptr i64 %819 to i64*
  store i64 %818, i64* %820, align 1
  %821 = add i64 %814, 47
  %822 = inttoptr i64 %821 to i32*
  store atomic volatile i32 0, i32* %822 release, align 4
  br i1 %803, label %988, label %823

823:                                              ; preds = %812
  %824 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %802, i64 0, i32 0, i32 1
  %825 = atomicrmw add i64* %824, i64 -1 acq_rel
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %988

827:                                              ; preds = %823
  %828 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %802, i64 0, i32 0
  %829 = bitcast %"class.std::__1::__shared_weak_count"* %802 to void (%"class.std::__1::__shared_count"*)***
  %830 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %829, align 8
  %831 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %830, i64 2
  %832 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %831, align 8
  call void %832(%"class.std::__1::__shared_count"* %828) #9
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %802) #9
  br label %988

833:                                              ; preds = %718
  %834 = load i64, i64* %2, align 8
  %835 = add i64 %834, 27
  %836 = inttoptr i64 %835 to i64*
  %837 = load i64, i64* %836, align 1
  %838 = trunc i64 %837 to i32
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %910, label %840

840:                                              ; preds = %833
  %841 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 13
  %842 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 13, i32 0, i32 1
  %843 = load %"class.v8::internal::Handle.1183"*, %"class.v8::internal::Handle.1183"** %842, align 8
  %844 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %845 = load %"class.v8::internal::Handle.1183"*, %"class.v8::internal::Handle.1183"** %844, align 8
  %846 = icmp eq %"class.v8::internal::Handle.1183"* %843, %845
  %847 = ptrtoint %"class.v8::internal::Handle.1183"* %845 to i64
  br i1 %846, label %853, label %848

848:                                              ; preds = %840
  %849 = bitcast %"class.v8::internal::Handle.1183"* %843 to i64*
  store i64 %11, i64* %849, align 8
  %850 = getelementptr inbounds %"class.v8::internal::Handle.1183", %"class.v8::internal::Handle.1183"* %843, i64 1
  %851 = ptrtoint %"class.v8::internal::Handle.1183"* %850 to i64
  %852 = bitcast %"class.v8::internal::Handle.1183"** %842 to i64*
  store i64 %851, i64* %852, align 8
  br label %988

853:                                              ; preds = %840
  %854 = ptrtoint %"class.v8::internal::Handle.1183"* %843 to i64
  %855 = bitcast %"class.v8::internal::Handle.1183"** %842 to i64*
  %856 = bitcast %"class.std::__1::vector.1181"* %841 to i64*
  %857 = load i64, i64* %856, align 8
  %858 = sub i64 %854, %857
  %859 = ashr exact i64 %858, 3
  %860 = add nsw i64 %859, 1
  %861 = icmp ugt i64 %860, 2305843009213693951
  br i1 %861, label %862, label %864

862:                                              ; preds = %853
  %863 = bitcast %"class.std::__1::vector.1181"* %841 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %863) #13
  unreachable

864:                                              ; preds = %853
  %865 = bitcast %"class.v8::internal::Handle.1183"** %844 to i64*
  %866 = sub i64 %847, %857
  %867 = ashr exact i64 %866, 3
  %868 = icmp ult i64 %867, 1152921504606846975
  br i1 %868, label %869, label %877

869:                                              ; preds = %864
  %870 = ashr exact i64 %866, 2
  %871 = icmp ult i64 %870, %860
  %872 = select i1 %871, i64 %860, i64 %870
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %882, label %874

874:                                              ; preds = %869
  %875 = icmp ugt i64 %872, 2305843009213693951
  br i1 %875, label %876, label %877

876:                                              ; preds = %874
  call void @abort() #13
  unreachable

877:                                              ; preds = %874, %864
  %878 = phi i64 [ %872, %874 ], [ 2305843009213693951, %864 ]
  %879 = shl i64 %878, 3
  %880 = call i8* @_Znwm(i64 %879) #14
  %881 = bitcast i8* %880 to %"class.v8::internal::Handle.1183"*
  br label %882

882:                                              ; preds = %877, %869
  %883 = phi i64 [ %878, %877 ], [ 0, %869 ]
  %884 = phi %"class.v8::internal::Handle.1183"* [ %881, %877 ], [ null, %869 ]
  %885 = getelementptr inbounds %"class.v8::internal::Handle.1183", %"class.v8::internal::Handle.1183"* %884, i64 %859
  %886 = getelementptr inbounds %"class.v8::internal::Handle.1183", %"class.v8::internal::Handle.1183"* %884, i64 %883
  %887 = ptrtoint %"class.v8::internal::Handle.1183"* %886 to i64
  %888 = bitcast %"class.v8::internal::Handle.1183"* %885 to i64*
  store i64 %11, i64* %888, align 8
  %889 = getelementptr inbounds %"class.v8::internal::Handle.1183", %"class.v8::internal::Handle.1183"* %885, i64 1
  %890 = ptrtoint %"class.v8::internal::Handle.1183"* %889 to i64
  %891 = getelementptr inbounds %"class.std::__1::vector.1181", %"class.std::__1::vector.1181"* %841, i64 0, i32 0, i32 0
  %892 = load %"class.v8::internal::Handle.1183"*, %"class.v8::internal::Handle.1183"** %891, align 8
  %893 = load i64, i64* %855, align 8
  %894 = ptrtoint %"class.v8::internal::Handle.1183"* %892 to i64
  %895 = sub i64 %893, %894
  %896 = ashr exact i64 %895, 3
  %897 = sub nsw i64 0, %896
  %898 = getelementptr inbounds %"class.v8::internal::Handle.1183", %"class.v8::internal::Handle.1183"* %885, i64 %897
  %899 = ptrtoint %"class.v8::internal::Handle.1183"* %898 to i64
  %900 = icmp sgt i64 %895, 0
  br i1 %900, label %901, label %905

901:                                              ; preds = %882
  %902 = bitcast %"class.v8::internal::Handle.1183"* %898 to i8*
  %903 = bitcast %"class.v8::internal::Handle.1183"* %892 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %902, i8* align 8 %903, i64 %895, i1 false) #9
  %904 = load %"class.v8::internal::Handle.1183"*, %"class.v8::internal::Handle.1183"** %891, align 8
  br label %905

905:                                              ; preds = %901, %882
  %906 = phi %"class.v8::internal::Handle.1183"* [ %892, %882 ], [ %904, %901 ]
  store i64 %899, i64* %856, align 8
  store i64 %890, i64* %855, align 8
  store i64 %887, i64* %865, align 8
  %907 = icmp eq %"class.v8::internal::Handle.1183"* %906, null
  br i1 %907, label %988, label %908

908:                                              ; preds = %905
  %909 = bitcast %"class.v8::internal::Handle.1183"* %906 to i8*
  call void @_ZdlPv(i8* %909) #14
  br label %988

910:                                              ; preds = %833
  store i64 0, i64* %836, align 1
  br label %988

911:                                              ; preds = %718
  %912 = load i64, i64* %2, align 8
  %913 = add i64 %912, 31
  %914 = inttoptr i64 %913 to i8*
  store i8 0, i8* %914, align 1
  br label %988

915:                                              ; preds = %718
  %916 = add i16 %15, -153
  %917 = icmp ult i16 %916, 2
  br i1 %917, label %918, label %988

918:                                              ; preds = %915
  %919 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 14
  %920 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 14, i32 0, i32 1
  %921 = load %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"** %920, align 8
  %922 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %923 = load %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"** %922, align 8
  %924 = icmp eq %"class.v8::internal::Handle.1191"* %921, %923
  %925 = ptrtoint %"class.v8::internal::Handle.1191"* %923 to i64
  br i1 %924, label %931, label %926

926:                                              ; preds = %918
  %927 = bitcast %"class.v8::internal::Handle.1191"* %921 to i64*
  store i64 %11, i64* %927, align 8
  %928 = getelementptr inbounds %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1191"* %921, i64 1
  %929 = ptrtoint %"class.v8::internal::Handle.1191"* %928 to i64
  %930 = bitcast %"class.v8::internal::Handle.1191"** %920 to i64*
  store i64 %929, i64* %930, align 8
  br label %988

931:                                              ; preds = %918
  %932 = ptrtoint %"class.v8::internal::Handle.1191"* %921 to i64
  %933 = bitcast %"class.v8::internal::Handle.1191"** %920 to i64*
  %934 = bitcast %"class.std::__1::vector.1189"* %919 to i64*
  %935 = load i64, i64* %934, align 8
  %936 = sub i64 %932, %935
  %937 = ashr exact i64 %936, 3
  %938 = add nsw i64 %937, 1
  %939 = icmp ugt i64 %938, 2305843009213693951
  br i1 %939, label %940, label %942

940:                                              ; preds = %931
  %941 = bitcast %"class.std::__1::vector.1189"* %919 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %941) #13
  unreachable

942:                                              ; preds = %931
  %943 = bitcast %"class.v8::internal::Handle.1191"** %922 to i64*
  %944 = sub i64 %925, %935
  %945 = ashr exact i64 %944, 3
  %946 = icmp ult i64 %945, 1152921504606846975
  br i1 %946, label %947, label %955

947:                                              ; preds = %942
  %948 = ashr exact i64 %944, 2
  %949 = icmp ult i64 %948, %938
  %950 = select i1 %949, i64 %938, i64 %948
  %951 = icmp eq i64 %950, 0
  br i1 %951, label %960, label %952

952:                                              ; preds = %947
  %953 = icmp ugt i64 %950, 2305843009213693951
  br i1 %953, label %954, label %955

954:                                              ; preds = %952
  call void @abort() #13
  unreachable

955:                                              ; preds = %952, %942
  %956 = phi i64 [ %950, %952 ], [ 2305843009213693951, %942 ]
  %957 = shl i64 %956, 3
  %958 = call i8* @_Znwm(i64 %957) #14
  %959 = bitcast i8* %958 to %"class.v8::internal::Handle.1191"*
  br label %960

960:                                              ; preds = %955, %947
  %961 = phi i64 [ %956, %955 ], [ 0, %947 ]
  %962 = phi %"class.v8::internal::Handle.1191"* [ %959, %955 ], [ null, %947 ]
  %963 = getelementptr inbounds %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1191"* %962, i64 %937
  %964 = getelementptr inbounds %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1191"* %962, i64 %961
  %965 = ptrtoint %"class.v8::internal::Handle.1191"* %964 to i64
  %966 = bitcast %"class.v8::internal::Handle.1191"* %963 to i64*
  store i64 %11, i64* %966, align 8
  %967 = getelementptr inbounds %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1191"* %963, i64 1
  %968 = ptrtoint %"class.v8::internal::Handle.1191"* %967 to i64
  %969 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %919, i64 0, i32 0, i32 0
  %970 = load %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"** %969, align 8
  %971 = load i64, i64* %933, align 8
  %972 = ptrtoint %"class.v8::internal::Handle.1191"* %970 to i64
  %973 = sub i64 %971, %972
  %974 = ashr exact i64 %973, 3
  %975 = sub nsw i64 0, %974
  %976 = getelementptr inbounds %"class.v8::internal::Handle.1191", %"class.v8::internal::Handle.1191"* %963, i64 %975
  %977 = ptrtoint %"class.v8::internal::Handle.1191"* %976 to i64
  %978 = icmp sgt i64 %973, 0
  br i1 %978, label %979, label %983

979:                                              ; preds = %960
  %980 = bitcast %"class.v8::internal::Handle.1191"* %976 to i8*
  %981 = bitcast %"class.v8::internal::Handle.1191"* %970 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %980, i8* align 8 %981, i64 %973, i1 false) #9
  %982 = load %"class.v8::internal::Handle.1191"*, %"class.v8::internal::Handle.1191"** %969, align 8
  br label %983

983:                                              ; preds = %979, %960
  %984 = phi %"class.v8::internal::Handle.1191"* [ %970, %960 ], [ %982, %979 ]
  store i64 %977, i64* %934, align 8
  store i64 %968, i64* %933, align 8
  store i64 %965, i64* %943, align 8
  %985 = icmp eq %"class.v8::internal::Handle.1191"* %984, null
  br i1 %985, label %988, label %986

986:                                              ; preds = %983
  %987 = bitcast %"class.v8::internal::Handle.1191"* %984 to i8*
  call void @_ZdlPv(i8* %987) #14
  br label %988

988:                                              ; preds = %372, %230, %462, %911, %740, %373, %377, %388, %400, %457, %460, %473, %530, %533, %716, %713, %656, %646, %643, %586, %827, %823, %812, %789, %908, %905, %848, %910, %926, %983, %986, %310, %367, %370, %372, %372, %231, %231, %915
  ret void
}

declare zeroext i1 @_ZNK2v88internal10HeapObject14NeedsRehashingENS0_12InstanceTypeE(%"class.v8::internal::HeapObject"*, i16 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable9LookupKeyINS0_23StringTableInsertionKeyENS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT0_PT_(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::StringTableInsertionKey"*) local_unnamed_addr #3

declare void @_ZN2v88internal6String8MakeThinEPNS0_7IsolateES1_(%"class.v8::internal::String"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14StringTableKeyD2Ev(%"class.v8::internal::StringTableKey"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14ExternalString23set_address_as_resourceEPNS0_7IsolateEm(%"class.v8::internal::ExternalString"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ExternalString", %"class.v8::internal::ExternalString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7, align 1
  %8 = load i64, i64* %4, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp ult i16 %17, 64
  br i1 %18, label %19, label %67

19:                                               ; preds = %3
  %20 = load atomic i32, i32* %11 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %9, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = and i16 %25, 7
  %27 = icmp eq i16 %26, 2
  br i1 %27, label %28, label %67

28:                                               ; preds = %19
  %29 = load atomic i32, i32* %11 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %9, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = and i16 %34, 8
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = load atomic i32, i32* %11 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %9, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = and i16 %43, 16
  %45 = icmp eq i16 %44, 0
  %46 = add i64 %8, 11
  %47 = inttoptr i64 %46 to %"class.v8::String::ExternalOneByteStringResource"**
  %48 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %47, align 1
  br i1 %45, label %58, label %49

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %48, i64 0, i32 0
  %51 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %48 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %52 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %52, i64 2
  %54 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.v8::String::ExternalStringResourceBase"* %50) #9
  br i1 %55, label %56, label %97

56:                                               ; preds = %49
  %57 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %47, align 1
  tail call void @_ZN2v86String29ExternalOneByteStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalOneByteStringResource"* %57) #9
  br label %97

58:                                               ; preds = %37
  %59 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %48 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %60 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %60, i64 6
  %62 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %61, align 8
  %63 = tail call i8* %62(%"class.v8::String::ExternalOneByteStringResource"* %48) #9
  %64 = ptrtoint i8* %63 to i64
  %65 = add i64 %8, 19
  %66 = inttoptr i64 %65 to i64*
  store i64 %64, i64* %66, align 1
  br label %97

67:                                               ; preds = %28, %19, %3
  %68 = load atomic i32, i32* %11 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %9, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = and i16 %73, 16
  %75 = icmp eq i16 %74, 0
  %76 = add i64 %8, 11
  %77 = inttoptr i64 %76 to %"class.v8::String::ExternalStringResource"**
  %78 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %77, align 1
  br i1 %75, label %88, label %79

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %78, i64 0, i32 0
  %81 = bitcast %"class.v8::String::ExternalStringResource"* %78 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %82 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %82, i64 2
  %84 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.v8::String::ExternalStringResourceBase"* %80) #9
  br i1 %85, label %86, label %97

86:                                               ; preds = %79
  %87 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %77, align 1
  tail call void @_ZN2v86String22ExternalStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalStringResource"* %87) #9
  br label %97

88:                                               ; preds = %67
  %89 = bitcast %"class.v8::String::ExternalStringResource"* %78 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %90 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %89, align 8
  %91 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %90, i64 6
  %92 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %91, align 8
  %93 = tail call i16* %92(%"class.v8::String::ExternalStringResource"* %78) #9
  %94 = ptrtoint i16* %93 to i64
  %95 = add i64 %8, 19
  %96 = inttoptr i64 %95 to i64*
  store i64 %94, i64* %96, align 1
  br label %97

97:                                               ; preds = %88, %86, %79, %58, %56, %49
  ret void
}

declare void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare i32 @_ZNK2v88internal14ExternalString19ExternalPayloadSizeEv(%"class.v8::internal::ExternalString"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2v88internal12Deserializer28GetAndResetNextReferenceTypeEv(%"class.v8::internal::Deserializer"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = xor i8 %3, 1
  %5 = zext i8 %4 to i32
  store i8 0, i8* %2, align 1
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12Deserializer23GetBackReferencedObjectEv(%"class.v8::internal::Deserializer"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %5, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %3, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %15, %9
  %17 = add nsw i32 %5, 2
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 16
  %23 = or i32 %16, %22
  %24 = add nsw i32 %5, 3
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %3, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw i32 %28, 24
  %30 = or i32 %23, %29
  %31 = and i32 %9, 3
  %32 = add nuw nsw i32 %31, 1
  %33 = add nsw i32 %32, %5
  store i32 %33, i32* %4, align 4
  %34 = shl nuw nsw i32 %32, 3
  %35 = sub nuw nsw i32 32, %34
  %36 = lshr i32 -1, %35
  %37 = and i32 %30, %36
  %38 = lshr i32 %37, 2
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 0
  %41 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %41, i64 %39, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %46, i32 0, i32 0
  store i64* %43, i64** %47, align 8
  %48 = load i32, i32* %44, align 8
  %49 = add nsw i32 %48, 1
  %50 = and i32 %49, 7
  store i32 %50, i32* %44, align 8
  ret i64* %43
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal18SnapshotByteSource6GetIntEv(%"class.v8::internal::SnapshotByteSource"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SnapshotByteSource", %"class.v8::internal::SnapshotByteSource"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::SnapshotByteSource", %"class.v8::internal::SnapshotByteSource"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %5, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %3, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %15, %9
  %17 = add nsw i32 %5, 2
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 16
  %23 = or i32 %16, %22
  %24 = add nsw i32 %5, 3
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %3, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw i32 %28, 24
  %30 = or i32 %23, %29
  %31 = and i32 %9, 3
  %32 = add nuw nsw i32 %31, 1
  %33 = add nsw i32 %32, %5
  store i32 %33, i32* %4, align 4
  %34 = shl nuw nsw i32 %32, 3
  %35 = sub nuw nsw i32 32, %34
  %36 = lshr i32 -1, %35
  %37 = and i32 %30, %36
  %38 = lshr i32 %37, 2
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12Deserializer10ReadObjectEv(%"class.v8::internal::Deserializer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle.974", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* null, i64** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %11, %"class.v8::internal::Handle.974"* nonnull %2, %"class.v8::internal::Isolate"* %13)
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %1
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %1
  %18 = load i64*, i64** %3, align 8
  ret i64* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"*, i8 zeroext, %"class.v8::internal::Handle.974"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle.974", align 8
  %6 = alloca %"class.v8::internal::Handle.974", align 8
  %7 = alloca %"class.std::__1::shared_ptr", align 8
  switch i8 %1, label %664 [
    i8 1, label %8
    i8 2, label %8
    i8 3, label %8
    i8 0, label %8
    i8 4, label %12
    i8 5, label %66
    i8 7, label %172
    i8 6, label %217
    i8 9, label %295
    i8 26, label %361
    i8 19, label %364
    i8 17, label %364
    i8 20, label %376
    i8 23, label %376
    i8 8, label %377
    i8 10, label %665
    i8 24, label %423
    i8 25, label %425
    i8 11, label %426
    i8 15, label %427
    i8 27, label %439
    i8 12, label %451
    i8 13, label %505
    i8 18, label %601
    i8 16, label %601
    i8 21, label %613
    i8 22, label %620
    i8 64, label %622
    i8 65, label %622
    i8 66, label %622
    i8 67, label %622
    i8 68, label %622
    i8 69, label %622
    i8 70, label %622
    i8 71, label %622
    i8 72, label %622
    i8 73, label %622
    i8 74, label %622
    i8 75, label %622
    i8 76, label %622
    i8 77, label %622
    i8 78, label %622
    i8 79, label %622
    i8 80, label %622
    i8 81, label %622
    i8 82, label %622
    i8 83, label %622
    i8 84, label %622
    i8 85, label %622
    i8 86, label %622
    i8 87, label %622
    i8 88, label %622
    i8 89, label %622
    i8 90, label %622
    i8 91, label %622
    i8 92, label %622
    i8 93, label %622
    i8 94, label %622
    i8 95, label %622
    i8 -112, label %630
    i8 -111, label %630
    i8 -110, label %630
    i8 -109, label %630
    i8 -108, label %630
    i8 -107, label %630
    i8 -106, label %630
    i8 -105, label %630
    i8 96, label %638
    i8 97, label %638
    i8 98, label %638
    i8 99, label %638
    i8 100, label %638
    i8 101, label %638
    i8 102, label %638
    i8 103, label %638
    i8 104, label %638
    i8 105, label %638
    i8 106, label %638
    i8 107, label %638
    i8 108, label %638
    i8 109, label %638
    i8 110, label %638
    i8 111, label %638
    i8 112, label %638
    i8 113, label %638
    i8 114, label %638
    i8 115, label %638
    i8 116, label %638
    i8 117, label %638
    i8 118, label %638
    i8 119, label %638
    i8 120, label %638
    i8 121, label %638
    i8 122, label %638
    i8 123, label %638
    i8 124, label %638
    i8 125, label %638
    i8 126, label %638
    i8 127, label %638
    i8 -128, label %639
    i8 -127, label %639
    i8 -126, label %639
    i8 -125, label %639
    i8 -124, label %639
    i8 -123, label %639
    i8 -122, label %639
    i8 -121, label %639
    i8 -120, label %639
    i8 -119, label %639
    i8 -118, label %639
    i8 -117, label %639
    i8 -116, label %639
    i8 -115, label %639
    i8 -114, label %639
    i8 -113, label %639
  ]

8:                                                ; preds = %4, %4, %4, %4
  %9 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %9, align 1
  %10 = tail call i64* @_ZN2v88internal12Deserializer10ReadObjectENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"* %0, i8 zeroext %1)
  %11 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  br label %665

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = add nsw i32 %16, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %14, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 8
  %27 = or i32 %26, %20
  %28 = add nsw i32 %16, 2
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %14, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 16
  %34 = or i32 %27, %33
  %35 = add nsw i32 %16, 3
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %14, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw i32 %39, 24
  %41 = or i32 %34, %40
  %42 = and i32 %20, 3
  %43 = add nuw nsw i32 %42, 1
  %44 = add nsw i32 %43, %16
  store i32 %44, i32* %15, align 4
  %45 = shl nuw nsw i32 %43, 3
  %46 = sub nuw nsw i32 32, %45
  %47 = lshr i32 -1, %46
  %48 = and i32 %41, %47
  %49 = lshr i32 %48, 2
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 0
  %52 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %52, i64 %50, i32 0, i32 0
  %54 = bitcast i64** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %58, i32 0, i32 0
  %60 = bitcast i64** %59 to i64*
  store i64 %55, i64* %60, align 8
  %61 = load i32, i32* %56, align 8
  %62 = add nsw i32 %61, 1
  %63 = and i32 %62, 7
  store i32 %63, i32* %56, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %64, align 1
  %65 = bitcast %"class.v8::internal::Handle.974"* %2 to i64*
  store i64 %55, i64* %65, align 8
  br label %665

66:                                               ; preds = %4
  %67 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %68, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = add nsw i32 %70, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %68, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %79, 8
  %81 = or i32 %80, %74
  %82 = add nsw i32 %70, 2
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %68, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 16
  %88 = or i32 %81, %87
  %89 = add nsw i32 %70, 3
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %68, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = shl nuw i32 %93, 24
  %95 = or i32 %88, %94
  %96 = and i32 %74, 3
  %97 = add nuw nsw i32 %96, 1
  %98 = add nsw i32 %97, %70
  store i32 %98, i32* %69, align 4
  %99 = shl nuw nsw i32 %97, 3
  %100 = sub nuw nsw i32 32, %99
  %101 = lshr i32 -1, %100
  %102 = and i32 %95, %101
  %103 = lshr i32 %102, 2
  %104 = sext i32 %98 to i64
  %105 = getelementptr inbounds i8, i8* %68, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = add nsw i32 %98, 1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %68, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw nsw i32 %112, 8
  %114 = or i32 %113, %107
  %115 = add nsw i32 %98, 2
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %68, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = shl nuw nsw i32 %119, 16
  %121 = or i32 %114, %120
  %122 = add nsw i32 %98, 3
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %68, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = shl nuw i32 %126, 24
  %128 = or i32 %121, %127
  %129 = and i32 %107, 3
  %130 = add nuw nsw i32 %129, 1
  %131 = add nsw i32 %130, %98
  store i32 %131, i32* %69, align 4
  %132 = shl nuw nsw i32 %130, 3
  %133 = sub nuw nsw i32 32, %132
  %134 = lshr i32 -1, %133
  %135 = and i32 %128, %134
  %136 = lshr i32 %135, 2
  %137 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %138 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 2, i32 31
  %140 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %139, align 8
  %141 = zext i32 %103 to i64
  %142 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %140, i64 0, i32 3, i32 0, i32 0
  %143 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage"*, %"class.v8::internal::ReadOnlyPage"** %143, i64 %141
  %145 = bitcast %"class.v8::internal::ReadOnlyPage"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = zext i32 %136 to i64
  %148 = add i64 %146, 1
  %149 = add i64 %148, %147
  %150 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %150, align 1
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 4
  %152 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %151, align 8
  %153 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %66
  %155 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %152, i64 %149) #9
  br label %169

156:                                              ; preds = %66
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 0
  %158 = load i64*, i64** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 1
  %160 = load i64*, i64** %159, align 8
  %161 = icmp eq i64* %158, %160
  br i1 %161, label %162, label %164

162:                                              ; preds = %156
  %163 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %3) #9
  br label %164

164:                                              ; preds = %162, %156
  %165 = phi i64* [ %163, %162 ], [ %158, %156 ]
  %166 = ptrtoint i64* %165 to i64
  %167 = add i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  store i64* %168, i64** %157, align 8
  store i64 %149, i64* %165, align 8
  br label %169

169:                                              ; preds = %154, %164
  %170 = phi i64* [ %155, %154 ], [ %165, %164 ]
  %171 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* %170, i64** %171, align 8
  br label %665

172:                                              ; preds = %4
  %173 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %174, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = add nsw i32 %176, 1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8, i8* %174, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = shl nuw nsw i32 %185, 8
  %187 = or i32 %186, %180
  %188 = add nsw i32 %176, 2
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %174, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = shl nuw nsw i32 %192, 16
  %194 = or i32 %187, %193
  %195 = and i32 %180, 3
  %196 = add nuw nsw i32 %195, 1
  %197 = add nsw i32 %196, %176
  store i32 %197, i32* %175, align 4
  %198 = shl nuw nsw i32 %196, 3
  %199 = sub nuw nsw i32 32, %198
  %200 = lshr i32 -1, %199
  %201 = and i32 %200, %194
  %202 = lshr i32 %201, 2
  %203 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %204 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %203, align 8
  %205 = and i32 %202, 65535
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %204, i64 0, i32 0, i32 7, i32 0, i64 %206
  %208 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %210, i32 0, i32 0
  store i64* %207, i64** %211, align 8
  %212 = load i32, i32* %208, align 8
  %213 = add nsw i32 %212, 1
  %214 = and i32 %213, 7
  store i32 %214, i32* %208, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %215, align 1
  %216 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* %207, i64** %216, align 8
  br label %665

217:                                              ; preds = %4
  %218 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %219, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = add nsw i32 %221, 1
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %219, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = shl nuw nsw i32 %230, 8
  %232 = or i32 %231, %225
  %233 = add nsw i32 %221, 2
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %219, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = shl nuw nsw i32 %237, 16
  %239 = or i32 %232, %238
  %240 = add nsw i32 %221, 3
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %219, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = shl nuw i32 %244, 24
  %246 = or i32 %239, %245
  %247 = and i32 %225, 3
  %248 = add nuw nsw i32 %247, 1
  %249 = add nsw i32 %248, %221
  store i32 %249, i32* %220, align 4
  %250 = shl nuw nsw i32 %248, 3
  %251 = sub nuw nsw i32 32, %250
  %252 = lshr i32 -1, %251
  %253 = and i32 %246, %252
  %254 = lshr i32 %253, 2
  %255 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %256 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %255, align 8
  %257 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %256, i64 0, i32 139
  %258 = zext i32 %254 to i64
  %259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %256, i64 0, i32 139, i32 0, i32 1
  %260 = bitcast %"class.v8::internal::Object"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.std::__1::vector.541"* %257 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = sub i64 %261, %263
  %265 = ashr exact i64 %264, 3
  %266 = icmp ugt i64 %265, %258
  br i1 %266, label %269, label %267

267:                                              ; preds = %217
  %268 = bitcast %"class.std::__1::vector.541"* %257 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %268) #13
  unreachable

269:                                              ; preds = %217
  %270 = inttoptr i64 %263 to %"class.v8::internal::Object"*
  %271 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %270, i64 %258, i32 0, i32 0
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %273, align 1
  %274 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 4
  %275 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %274, align 8
  %276 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %269
  %278 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %275, i64 %272) #9
  br label %292

279:                                              ; preds = %269
  %280 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 0
  %281 = load i64*, i64** %280, align 8
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 1
  %283 = load i64*, i64** %282, align 8
  %284 = icmp eq i64* %281, %283
  br i1 %284, label %285, label %287

285:                                              ; preds = %279
  %286 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %3) #9
  br label %287

287:                                              ; preds = %285, %279
  %288 = phi i64* [ %286, %285 ], [ %281, %279 ]
  %289 = ptrtoint i64* %288 to i64
  %290 = add i64 %289, 8
  %291 = inttoptr i64 %290 to i64*
  store i64* %291, i64** %280, align 8
  store i64 %272, i64* %288, align 8
  br label %292

292:                                              ; preds = %277, %287
  %293 = phi i64* [ %278, %277 ], [ %288, %287 ]
  %294 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* %293, i64** %294, align 8
  br label %665

295:                                              ; preds = %4
  %296 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %297 = load i8*, i8** %296, align 8
  %298 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %297, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = add nsw i32 %299, 1
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* %297, i64 %305
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = shl nuw nsw i32 %308, 8
  %310 = or i32 %309, %303
  %311 = add nsw i32 %299, 2
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i8, i8* %297, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = shl nuw nsw i32 %315, 16
  %317 = or i32 %310, %316
  %318 = add nsw i32 %299, 3
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i8, i8* %297, i64 %319
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i32
  %323 = shl nuw i32 %322, 24
  %324 = or i32 %317, %323
  %325 = and i32 %303, 3
  %326 = add nuw nsw i32 %325, 1
  %327 = add nsw i32 %326, %299
  store i32 %327, i32* %298, align 4
  %328 = shl nuw nsw i32 %326, 3
  %329 = sub nuw nsw i32 32, %328
  %330 = lshr i32 -1, %329
  %331 = and i32 %324, %330
  %332 = lshr i32 %331, 2
  %333 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %334 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %333, align 8
  %335 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %334, i64 0, i32 3
  %336 = load %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"** %335, align 8
  %337 = zext i32 %332 to i64
  %338 = tail call i64 @_ZNK2v88internal12ReadOnlyHeap23cached_read_only_objectEm(%"class.v8::internal::ReadOnlyHeap"* %336, i64 %337) #9
  %339 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %339, align 1
  %340 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 4
  %341 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %340, align 8
  %342 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %341, null
  br i1 %342, label %345, label %343

343:                                              ; preds = %295
  %344 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %341, i64 %338) #9
  br label %358

345:                                              ; preds = %295
  %346 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 0
  %347 = load i64*, i64** %346, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 1
  %349 = load i64*, i64** %348, align 8
  %350 = icmp eq i64* %347, %349
  br i1 %350, label %351, label %353

351:                                              ; preds = %345
  %352 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %3) #9
  br label %353

353:                                              ; preds = %351, %345
  %354 = phi i64* [ %352, %351 ], [ %347, %345 ]
  %355 = ptrtoint i64* %354 to i64
  %356 = add i64 %355, 8
  %357 = inttoptr i64 %356 to i64*
  store i64* %357, i64** %346, align 8
  store i64 %338, i64* %354, align 8
  br label %358

358:                                              ; preds = %343, %353
  %359 = phi i64* [ %344, %343 ], [ %354, %353 ]
  %360 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* %359, i64** %360, align 8
  br label %665

361:                                              ; preds = %4
  %362 = tail call i64* @_ZN2v88internal12Deserializer11ReadMetaMapEv(%"class.v8::internal::Deserializer"* %0)
  %363 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* %362, i64** %363, align 8
  br label %665

364:                                              ; preds = %4, %4
  %365 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %368 = load i32, i32* %367, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds i8, i8* %366, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = and i8 %371, 3
  %373 = add nuw nsw i8 %372, 1
  %374 = zext i8 %373 to i32
  %375 = add nsw i32 %368, %374
  store i32 %375, i32* %367, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

376:                                              ; preds = %4, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

377:                                              ; preds = %4
  %378 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %381 = load i32, i32* %380, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds i8, i8* %379, i64 %382
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  %386 = add nsw i32 %381, 1
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds i8, i8* %379, i64 %387
  %389 = load i8, i8* %388, align 1
  %390 = zext i8 %389 to i32
  %391 = shl nuw nsw i32 %390, 8
  %392 = or i32 %391, %385
  %393 = add nsw i32 %381, 2
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds i8, i8* %379, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i32
  %398 = shl nuw nsw i32 %397, 16
  %399 = or i32 %392, %398
  %400 = add nsw i32 %381, 3
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds i8, i8* %379, i64 %401
  %403 = load i8, i8* %402, align 1
  %404 = zext i8 %403 to i32
  %405 = shl nuw i32 %404, 24
  %406 = or i32 %399, %405
  %407 = and i32 %385, 3
  %408 = add nuw nsw i32 %407, 1
  %409 = add nsw i32 %408, %381
  store i32 %409, i32* %380, align 4
  %410 = shl nuw nsw i32 %408, 3
  %411 = sub nuw nsw i32 32, %410
  %412 = lshr i32 -1, %411
  %413 = and i32 %406, %412
  %414 = lshr i32 %413, 2
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 2, i32 0, i32 0
  %417 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %416, align 8
  %418 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %417, i64 %415, i32 0, i32 0
  %419 = bitcast i64** %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %421, align 1
  %422 = bitcast %"class.v8::internal::Handle.974"* %2 to i64*
  store i64 %420, i64* %422, align 8
  br label %665

423:                                              ; preds = %4
  %424 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %424, align 1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

425:                                              ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

426:                                              ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

427:                                              ; preds = %4
  %428 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %429 = load i8*, i8** %428, align 8
  %430 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %431 = load i32, i32* %430, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds i8, i8* %429, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = and i8 %434, 3
  %436 = add nuw nsw i8 %435, 1
  %437 = zext i8 %436 to i32
  %438 = add nsw i32 %431, %437
  store i32 %438, i32* %430, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

439:                                              ; preds = %4
  %440 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %441 = load i8*, i8** %440, align 8
  %442 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %443 = load i32, i32* %442, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i8, i8* %441, i64 %444
  %446 = load i8, i8* %445, align 1
  %447 = and i8 %446, 3
  %448 = add nuw nsw i8 %447, 1
  %449 = zext i8 %448 to i32
  %450 = add nsw i32 %443, %449
  store i32 %450, i32* %442, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

451:                                              ; preds = %4
  %452 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %453 = load i8*, i8** %452, align 8
  %454 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %455 = load i32, i32* %454, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds i8, i8* %453, i64 %456
  %458 = load i8, i8* %457, align 1
  %459 = zext i8 %458 to i32
  %460 = add nsw i32 %455, 1
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i8, i8* %453, i64 %461
  %463 = load i8, i8* %462, align 1
  %464 = add nsw i32 %455, 2
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds i8, i8* %453, i64 %465
  %467 = load i8, i8* %466, align 1
  %468 = add nsw i32 %455, 3
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds i8, i8* %453, i64 %469
  %471 = load i8, i8* %470, align 1
  %472 = and i32 %459, 3
  %473 = add nuw nsw i32 %472, 1
  %474 = add nsw i32 %473, %455
  %475 = bitcast %"class.v8::internal::Handle.974"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %475)
  %476 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %5, i64 0, i32 0, i32 0
  store i64* null, i64** %476, align 8
  %477 = add nsw i32 %474, 1
  store i32 %477, i32* %454, align 4
  %478 = sext i32 %474 to i64
  %479 = getelementptr inbounds i8, i8* %453, i64 %478
  %480 = load i8, i8* %479, align 1
  %481 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %482 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %481, align 8
  %483 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %480, %"class.v8::internal::Handle.974"* nonnull %5, %"class.v8::internal::Isolate"* %482) #9
  %484 = icmp eq i32 %483, 1
  br i1 %484, label %486, label %485, !prof !2

485:                                              ; preds = %451
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

486:                                              ; preds = %451
  %487 = zext i8 %463 to i32
  %488 = shl nuw nsw i32 %487, 8
  %489 = or i32 %488, %459
  %490 = zext i8 %467 to i32
  %491 = shl nuw nsw i32 %490, 16
  %492 = or i32 %489, %491
  %493 = zext i8 %471 to i32
  %494 = shl nuw i32 %493, 24
  %495 = or i32 %492, %494
  %496 = shl nuw nsw i32 %473, 3
  %497 = sub nuw nsw i32 32, %496
  %498 = lshr i32 -1, %497
  %499 = and i32 %495, %498
  %500 = lshr i32 %499, 2
  %501 = add nuw nsw i32 %500, 18
  %502 = bitcast %"class.v8::internal::Handle.974"* %5 to i64*
  %503 = load i64, i64* %502, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %475)
  %504 = bitcast %"class.v8::internal::Handle.974"* %2 to i64*
  store i64 %503, i64* %504, align 8
  br label %665

505:                                              ; preds = %4
  %506 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %507 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %506, align 8
  %508 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %507, i64 0, i32 2, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = atomicrmw add i64* %508, i64 1 seq_cst
  %510 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %511 = load i8*, i8** %510, align 8
  %512 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %513 = load i32, i32* %512, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds i8, i8* %511, i64 %514
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i32
  %518 = add nsw i32 %513, 1
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8, i8* %511, i64 %519
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i32
  %523 = shl nuw nsw i32 %522, 8
  %524 = or i32 %523, %517
  %525 = add nsw i32 %513, 2
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds i8, i8* %511, i64 %526
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i32
  %530 = shl nuw nsw i32 %529, 16
  %531 = or i32 %524, %530
  %532 = add nsw i32 %513, 3
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds i8, i8* %511, i64 %533
  %535 = load i8, i8* %534, align 1
  %536 = zext i8 %535 to i32
  %537 = shl nuw i32 %536, 24
  %538 = or i32 %531, %537
  %539 = and i32 %517, 3
  %540 = add nuw nsw i32 %539, 1
  %541 = add nsw i32 %540, %513
  store i32 %541, i32* %512, align 4
  %542 = shl nuw nsw i32 %540, 3
  %543 = sub nuw nsw i32 32, %542
  %544 = lshr i32 -1, %543
  %545 = and i32 %538, %544
  %546 = lshr i32 %545, 2
  %547 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %506, align 8
  %548 = zext i32 %546 to i64
  %549 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore8AllocateEPNS0_7IsolateEmNS0_10SharedFlagENS0_15InitializedFlagE(%"class.v8::internal::Isolate"* %547, i64 %548, i8 zeroext 0, i8 zeroext 0) #9
  %550 = icmp eq %"class.v8::internal::BackingStore"* %549, null
  br i1 %550, label %551, label %552, !prof !5

551:                                              ; preds = %505
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  unreachable

552:                                              ; preds = %505
  %553 = ptrtoint %"class.v8::internal::BackingStore"* %549 to i64
  %554 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %549, i64 0, i32 0
  %555 = load i8*, i8** %554, align 8
  %556 = load i8*, i8** %510, align 8
  %557 = load i32, i32* %512, align 4
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i8, i8* %556, i64 %558
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %555, i8* align 1 %559, i64 %548, i1 false) #9
  %560 = load i32, i32* %512, align 4
  %561 = add nsw i32 %560, %546
  store i32 %561, i32* %512, align 4
  %562 = bitcast %"class.std::__1::shared_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %562) #9
  %563 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %7, i64 0, i32 0
  store %"class.v8::internal::BackingStore"* %549, %"class.v8::internal::BackingStore"** %563, align 8
  %564 = tail call i8* @_Znwm(i64 32) #14
  %565 = bitcast i8* %564 to i32 (...)***
  %566 = getelementptr inbounds i8, i8* %564, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %566, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %565, align 8
  %567 = getelementptr inbounds i8, i8* %564, i64 24
  %568 = bitcast i8* %567 to i64*
  store i64 %553, i64* %568, align 8
  %569 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %7, i64 0, i32 1
  %570 = bitcast %"class.std::__1::__shared_weak_count"** %569 to i8**
  store i8* %564, i8** %570, align 8
  %571 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 1
  %572 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %571, align 8
  %573 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %574 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %573, align 8
  %575 = icmp ult %"class.std::__1::shared_ptr"* %572, %574
  br i1 %575, label %576, label %585

576:                                              ; preds = %552
  %577 = bitcast %"class.std::__1::shared_ptr"* %572 to i64*
  store i64 %553, i64* %577, align 8
  %578 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %572, i64 0, i32 1
  %579 = bitcast %"class.std::__1::__shared_weak_count"** %569 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = bitcast %"class.std::__1::__shared_weak_count"** %578 to i64*
  store i64 %580, i64* %581, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %562, i8 0, i64 16, i1 false) #9
  %582 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %572, i64 1
  %583 = ptrtoint %"class.std::__1::shared_ptr"* %582 to i64
  %584 = bitcast %"class.std::__1::shared_ptr"** %571 to i64*
  store i64 %583, i64* %584, align 8
  br label %599

585:                                              ; preds = %552
  %586 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1197"* %586, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %7) #9
  %587 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %569, align 8
  %588 = bitcast %"class.std::__1::__shared_weak_count"* %587 to void (%"class.std::__1::__shared_count"*)***
  %589 = icmp eq %"class.std::__1::__shared_weak_count"* %587, null
  br i1 %589, label %599, label %590

590:                                              ; preds = %585
  %591 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %587, i64 0, i32 0, i32 1
  %592 = atomicrmw add i64* %591, i64 -1 acq_rel
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %594, label %599

594:                                              ; preds = %590
  %595 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %587, i64 0, i32 0
  %596 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %588, align 8
  %597 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %596, i64 2
  %598 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %597, align 8
  call void %598(%"class.std::__1::__shared_count"* %595) #9
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %587) #9
  br label %599

599:                                              ; preds = %576, %594, %590, %585
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %562) #9
  %600 = atomicrmw sub i64* %508, i64 1 seq_cst
  br label %665

601:                                              ; preds = %4, %4
  %602 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %603 = load i8*, i8** %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %605 = load i32, i32* %604, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds i8, i8* %603, i64 %606
  %608 = load i8, i8* %607, align 1
  %609 = and i8 %608, 3
  %610 = add nuw nsw i8 %609, 1
  %611 = zext i8 %610 to i32
  %612 = add nsw i32 %605, %611
  store i32 %612, i32* %604, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

613:                                              ; preds = %4
  %614 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %615 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %614, align 8
  %616 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %615, i64 0, i32 0, i32 4
  %617 = load i64, i64* %616, align 8
  %618 = and i64 %617, 4294967295
  %619 = icmp eq i64 %618, 0
  tail call void @llvm.assume(i1 %619) #9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

620:                                              ; preds = %4
  %621 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 1, i8* %621, align 1
  br label %665

622:                                              ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %623 = zext i8 %1 to i64
  %624 = add nuw nsw i64 %623, 65472
  %625 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %626 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %625, align 8
  %627 = and i64 %624, 65535
  %628 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %626, i64 0, i32 0, i32 7, i32 0, i64 %627
  %629 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %2, i64 0, i32 0, i32 0
  store i64* %628, i64** %629, align 8
  br label %665

630:                                              ; preds = %4, %4, %4, %4, %4, %4, %4, %4
  %631 = zext i8 %1 to i64
  %632 = add nsw i64 %631, -144
  %633 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %632, i32 0, i32 0
  %634 = bitcast i64** %633 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %636, align 1
  %637 = bitcast %"class.v8::internal::Handle.974"* %2 to i64*
  store i64 %635, i64* %637, align 8
  br label %665

638:                                              ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

639:                                              ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %640 = zext i8 %1 to i32
  %641 = add nsw i32 %640, -126
  %642 = icmp sgt i32 %641, 1
  br i1 %642, label %644, label %643, !prof !2

643:                                              ; preds = %639
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #13
  unreachable

644:                                              ; preds = %639
  %645 = bitcast %"class.v8::internal::Handle.974"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %645)
  %646 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %6, i64 0, i32 0, i32 0
  store i64* null, i64** %646, align 8
  %647 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %648 = load i8*, i8** %647, align 8
  %649 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %650 = load i32, i32* %649, align 4
  %651 = add nsw i32 %650, 1
  store i32 %651, i32* %649, align 4
  %652 = sext i32 %650 to i64
  %653 = getelementptr inbounds i8, i8* %648, i64 %652
  %654 = load i8, i8* %653, align 1
  %655 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %656 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %655, align 8
  %657 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %654, %"class.v8::internal::Handle.974"* nonnull %6, %"class.v8::internal::Isolate"* %656) #9
  %658 = icmp eq i32 %657, 1
  br i1 %658, label %660, label %659, !prof !2

659:                                              ; preds = %644
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

660:                                              ; preds = %644
  %661 = bitcast %"class.v8::internal::Handle.974"* %6 to i64*
  %662 = load i64, i64* %661, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %645)
  %663 = bitcast %"class.v8::internal::Handle.974"* %2 to i64*
  store i64 %662, i64* %663, align 8
  br label %665

664:                                              ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

665:                                              ; preds = %660, %486, %4, %630, %622, %620, %599, %377, %361, %358, %292, %172, %169, %12, %8
  %666 = phi i32 [ 1, %630 ], [ 1, %622 ], [ 0, %620 ], [ 0, %599 ], [ 1, %377 ], [ 1, %361 ], [ 1, %358 ], [ 1, %292 ], [ 1, %172 ], [ 1, %169 ], [ 1, %12 ], [ 1, %8 ], [ 0, %4 ], [ %501, %486 ], [ %641, %660 ]
  ret i32 %666
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal12Deserializer8AllocateENS0_13SnapshotSpaceEiNS0_19AllocationAlignmentE(%"class.v8::internal::Deserializer"* nocapture readonly, i8 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 2
  %8 = zext i8 %1 to i32
  %9 = shl nuw nsw i32 %8, 3
  %10 = lshr i32 50462980, %9
  %11 = trunc i32 %10 to i8
  %12 = tail call i64 @_ZN2v88internal4Heap34AllocateRawWithRetryOrFailSlowPathEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %7, i32 %2, i8 zeroext %11, i32 1, i32 %3) #9
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer8ReadDataENS0_6HandleINS0_10HeapObjectEEEii(%"class.v8::internal::Deserializer"*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp slt i32 %2, %3
  br i1 %5, label %6, label %21

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  br label %9

9:                                                ; preds = %6, %9
  %10 = phi i32 [ %2, %6 ], [ %19, %9 ]
  %11 = load i8*, i8** %7, align 8
  %12 = load i32, i32* %8, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %8, align 4
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds i8, i8* %11, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = shl nsw i32 %10, 2
  %18 = tail call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_25SlotAccessorForHeapObjectEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %16, i64* %1, i32 %17)
  %19 = add nsw i32 %18, %10
  %20 = icmp slt i32 %19, %3
  br i1 %20, label %9, label %21

21:                                               ; preds = %9, %4
  %22 = phi i32 [ %2, %4 ], [ %19, %9 ]
  %23 = icmp eq i32 %22, %3
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

25:                                               ; preds = %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12Deserializer11ReadMetaMapEv(%"class.v8::internal::Deserializer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 2
  %5 = tail call i64 @_ZN2v88internal4Heap34AllocateRawWithRetryOrFailSlowPathEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %4, i32 40, i8 zeroext 4, i32 1, i32 0) #9
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = trunc i64 %5 to i32
  store atomic volatile i32 %8, i32* %7 monotonic, align 4
  %9 = and i64 %5, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %1
  %12 = and i64 %5, -262144
  %13 = or i64 %12, 8
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 262144
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = or i64 %12, 16
  %20 = inttoptr i64 %19 to %"class.v8::internal::Heap"**
  %21 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %20, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %21, i64 %5, i64 0, i64 %5) #9
  br label %22

22:                                               ; preds = %1, %11, %18
  %23 = add i64 %5, 3
  %24 = inttoptr i64 %23 to i32*
  %25 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 9, i32* %24) #9, !srcloc !3
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %5) #9
  %32 = ptrtoint i64* %31 to i64
  br label %46

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %26) #9
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64* [ %40, %39 ], [ %35, %33 ]
  %43 = ptrtoint i64* %42 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  store i64* %45, i64** %34, align 8
  store i64 %5, i64* %42, align 8
  br label %46

46:                                               ; preds = %30, %41
  %47 = phi i64 [ %32, %30 ], [ %43, %41 ]
  %48 = phi i64* [ %31, %30 ], [ %42, %41 ]
  %49 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16
  %50 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 1
  %51 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %53 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %52, align 8
  %54 = icmp eq %"class.v8::internal::Handle.974"* %51, %53
  %55 = ptrtoint %"class.v8::internal::Handle.974"* %53 to i64
  br i1 %54, label %61, label %56

56:                                               ; preds = %46
  %57 = bitcast %"class.v8::internal::Handle.974"* %51 to i64*
  store i64 %47, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %51, i64 1
  %59 = ptrtoint %"class.v8::internal::Handle.974"* %58 to i64
  %60 = bitcast %"class.v8::internal::Handle.974"** %50 to i64*
  store i64 %59, i64* %60, align 8
  br label %118

61:                                               ; preds = %46
  %62 = ptrtoint %"class.v8::internal::Handle.974"* %51 to i64
  %63 = bitcast %"class.v8::internal::Handle.974"** %50 to i64*
  %64 = bitcast %"class.std::__1::vector.972"* %49 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %62, %65
  %67 = ashr exact i64 %66, 3
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %61
  %71 = bitcast %"class.std::__1::vector.972"* %49 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #13
  unreachable

72:                                               ; preds = %61
  %73 = bitcast %"class.v8::internal::Handle.974"** %52 to i64*
  %74 = sub i64 %55, %65
  %75 = ashr exact i64 %74, 3
  %76 = icmp ult i64 %75, 1152921504606846975
  br i1 %76, label %77, label %85

77:                                               ; preds = %72
  %78 = ashr exact i64 %74, 2
  %79 = icmp ult i64 %78, %68
  %80 = select i1 %79, i64 %68, i64 %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = icmp ugt i64 %80, 2305843009213693951
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  tail call void @abort() #13
  unreachable

85:                                               ; preds = %82, %72
  %86 = phi i64 [ %80, %82 ], [ 2305843009213693951, %72 ]
  %87 = shl i64 %86, 3
  %88 = tail call i8* @_Znwm(i64 %87) #14
  %89 = bitcast i8* %88 to %"class.v8::internal::Handle.974"*
  br label %90

90:                                               ; preds = %85, %77
  %91 = phi i64 [ %86, %85 ], [ 0, %77 ]
  %92 = phi %"class.v8::internal::Handle.974"* [ %89, %85 ], [ null, %77 ]
  %93 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %92, i64 %67
  %94 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %92, i64 %91
  %95 = ptrtoint %"class.v8::internal::Handle.974"* %94 to i64
  %96 = bitcast %"class.v8::internal::Handle.974"* %93 to i64*
  store i64 %47, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %93, i64 1
  %98 = ptrtoint %"class.v8::internal::Handle.974"* %97 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %49, i64 0, i32 0, i32 0
  %100 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %99, align 8
  %101 = load i64, i64* %63, align 8
  %102 = ptrtoint %"class.v8::internal::Handle.974"* %100 to i64
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 3
  %105 = sub nsw i64 0, %104
  %106 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %93, i64 %105
  %107 = ptrtoint %"class.v8::internal::Handle.974"* %106 to i64
  %108 = icmp sgt i64 %103, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %90
  %110 = bitcast %"class.v8::internal::Handle.974"* %106 to i8*
  %111 = bitcast %"class.v8::internal::Handle.974"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 %103, i1 false) #9
  %112 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %99, align 8
  br label %113

113:                                              ; preds = %109, %90
  %114 = phi %"class.v8::internal::Handle.974"* [ %100, %90 ], [ %112, %109 ]
  store i64 %107, i64* %64, align 8
  store i64 %98, i64* %63, align 8
  store i64 %95, i64* %73, align 8
  %115 = icmp eq %"class.v8::internal::Handle.974"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = bitcast %"class.v8::internal::Handle.974"* %114 to i8*
  tail call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %56, %113, %116
  %119 = load i64, i64* %48, align 8
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  store atomic volatile i16 172, i16* %121 monotonic, align 2
  %122 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %123 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  br label %124

124:                                              ; preds = %118, %124
  %125 = phi i32 [ 1, %118 ], [ %134, %124 ]
  %126 = load i8*, i8** %122, align 8
  %127 = load i32, i32* %123, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %123, align 4
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds i8, i8* %126, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = shl nsw i32 %125, 2
  %133 = tail call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_25SlotAccessorForHeapObjectEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %131, i64* %48, i32 %132) #9
  %134 = add nsw i32 %133, %125
  %135 = icmp slt i32 %134, 10
  br i1 %135, label %124, label %136

136:                                              ; preds = %124
  %137 = icmp eq i32 %134, 10
  br i1 %137, label %139, label %138, !prof !2

138:                                              ; preds = %136
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

139:                                              ; preds = %136
  tail call void @_ZN2v88internal12Deserializer20PostProcessNewObjectENS0_6HandleINS0_3MapEEENS2_INS0_10HeapObjectEEENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"* %0, i64* %48, i64* %48, i8 zeroext 0)
  ret i64* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer16RelocInfoVisitor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* nocapture, i64, %"class.v8::internal::RelocInfo"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::vector.972"*, %"class.std::__1::vector.972"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %5, i64 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::Handle.974"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.972"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %16, %9
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::vector.972"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %19) #13
  unreachable

20:                                               ; preds = %3
  %21 = inttoptr i64 %14 to %"class.v8::internal::Handle.974"*
  %22 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %21, i64 %9, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 63
  tail call void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"* %2, i64 %25, i32 4, i32 0) #9
  ret void
}

declare void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer16RelocInfoVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* nocapture, i64, %"class.v8::internal::RelocInfo"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::vector.972"*, %"class.std::__1::vector.972"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %5, i64 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::Handle.974"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.972"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %16, %9
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::vector.972"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %19) #13
  unreachable

20:                                               ; preds = %3
  %21 = inttoptr i64 %14 to %"class.v8::internal::Handle.974"*
  %22 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %21, i64 %9, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 3
  br i1 %27, label %28, label %32

28:                                               ; preds = %20
  %29 = trunc i64 %24 to i32
  %30 = bitcast %"class.v8::internal::RelocInfo"* %2 to i32**
  %31 = load i32*, i32** %30, align 8
  store i32 %29, i32* %31, align 1
  br label %35

32:                                               ; preds = %20
  %33 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %34 = load i64*, i64** %33, align 8
  store i64 %24, i64* %34, align 1
  br label %35

35:                                               ; preds = %32, %28
  %36 = bitcast %"class.v8::internal::RelocInfo"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %37, i64 8) #9
  %38 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %61, label %42

42:                                               ; preds = %35
  %43 = and i64 %24, -262144
  %44 = or i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 24
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %42
  tail call void @_ZN2v88internal35Heap_GenerationalBarrierForCodeSlowENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64 %39, %"class.v8::internal::RelocInfo"* %2, i64 %24) #9
  br label %50

50:                                               ; preds = %49, %42
  %51 = and i64 %39, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 262144
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = or i64 %51, 16
  %59 = inttoptr i64 %58 to %"class.v8::internal::Heap"**
  %60 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %59, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"* %60, i64 %39, %"class.v8::internal::RelocInfo"* %2, i64 %24) #9
  br label %61

61:                                               ; preds = %35, %50, %57
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer16RelocInfoVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* nocapture readnone, i64, %"class.v8::internal::RelocInfo"* nocapture readnone) local_unnamed_addr #8 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer16RelocInfoVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* nocapture readonly, i64, %"class.v8::internal::RelocInfo"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %6, i64 0, i32 3, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %6, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds i8, i8* %8, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 17
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %3
  %18 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %5, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %18, i64 0, i32 3, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %18, i64 0, i32 3, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add nsw i32 %22, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %20, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 8
  %33 = or i32 %32, %26
  %34 = add nsw i32 %22, 2
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %20, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 16
  %40 = or i32 %33, %39
  %41 = add nsw i32 %22, 3
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %20, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 %45, 24
  %47 = or i32 %40, %46
  %48 = and i32 %26, 3
  %49 = add nuw nsw i32 %48, 1
  %50 = add nsw i32 %49, %22
  store i32 %50, i32* %21, align 4
  %51 = shl nuw nsw i32 %49, 3
  %52 = sub nuw nsw i32 32, %51
  %53 = lshr i32 -1, %52
  %54 = and i32 %47, %53
  %55 = lshr i32 %54, 2
  %56 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %18, i64 0, i32 1
  %57 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %56, align 8
  %58 = zext i32 %55 to i64
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 0, i32 8, i32 0, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = tail call zeroext i1 @_ZN2v88internal9RelocInfo16IsCodedSpeciallyEv(%"class.v8::internal::RelocInfo"* %2) #9
  %62 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  br i1 %61, label %64, label %86

64:                                               ; preds = %17
  %65 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %66, align 8
  %67 = trunc i64 %1 to i32
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %64
  %70 = call zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nonnull %4) #9
  br i1 %70, label %71, label %80

71:                                               ; preds = %69
  %72 = load i64, i64* %66, align 8
  %73 = add i64 %72, 27
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 536870912
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78, !prof !2

78:                                               ; preds = %71
  %79 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %4) #9
  br label %80

80:                                               ; preds = %64, %69, %71, %78
  %81 = sub i64 %60, %63
  %82 = trunc i64 %81 to i32
  %83 = add i32 %82, -4
  %84 = inttoptr i64 %63 to i32*
  store i32 %83, i32* %84, align 1
  %85 = inttoptr i64 %63 to i8*
  call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %85, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  br label %88

86:                                               ; preds = %17
  %87 = inttoptr i64 %63 to i64*
  store i64 %60, i64* %87, align 1
  br label %88

88:                                               ; preds = %86, %80
  ret void
}

declare zeroext i1 @_ZN2v88internal9RelocInfo16IsCodedSpeciallyEv(%"class.v8::internal::RelocInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer16RelocInfoVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* nocapture readonly, i64, %"class.v8::internal::RelocInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %5, i64 0, i32 3, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %5, i64 0, i32 3, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 4
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, i8* %7, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 20
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #13
  unreachable

16:                                               ; preds = %3
  %17 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %4, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %17, i64 0, i32 3, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %17, i64 0, i32 3, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = add nsw i32 %21, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %19, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %31, %25
  %33 = add nsw i32 %21, 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %19, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 16
  %39 = or i32 %32, %38
  %40 = add nsw i32 %21, 3
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %19, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw i32 %44, 24
  %46 = or i32 %39, %45
  %47 = and i32 %25, 3
  %48 = add nuw nsw i32 %47, 1
  %49 = add nsw i32 %48, %21
  store i32 %49, i32* %20, align 4
  %50 = shl nuw nsw i32 %48, 3
  %51 = sub nuw nsw i32 32, %50
  %52 = lshr i32 -1, %51
  %53 = and i32 %46, %52
  %54 = lshr i32 %53, 2
  %55 = add i64 %1, 63
  %56 = zext i32 %54 to i64
  %57 = add i64 %55, %56
  %58 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %59 = load i64*, i64** %58, align 8
  store i64 %57, i64* %59, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12Deserializer16RelocInfoVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* nocapture readonly, i64, %"class.v8::internal::RelocInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = alloca %"class.v8::internal::EmbeddedData", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %7, i64 0, i32 3, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %7, i64 0, i32 3, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4
  %13 = sext i32 %11 to i64
  %14 = getelementptr inbounds i8, i8* %9, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 23
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

18:                                               ; preds = %3
  %19 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %6, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %19, i64 0, i32 3, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %19, i64 0, i32 3, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %23, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %21, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = add nsw i32 %23, 2
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %21, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = add nsw i32 %23, 3
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %21, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = and i32 %27, 3
  %41 = add nuw nsw i32 %40, 1
  %42 = add nsw i32 %41, %23
  store i32 %42, i32* %22, align 4
  %43 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %6, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %43, i64 0, i32 1
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %46 = tail call i8* @_ZNK2v88internal7Isolate18embedded_blob_codeEv(%"class.v8::internal::Isolate"* %45) #9
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %49, !prof !5

48:                                               ; preds = %18
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)) #13
  unreachable

49:                                               ; preds = %18
  %50 = zext i8 %31 to i32
  %51 = shl nuw nsw i32 %50, 8
  %52 = or i32 %51, %27
  %53 = zext i8 %35 to i32
  %54 = shl nuw nsw i32 %53, 16
  %55 = or i32 %52, %54
  %56 = zext i8 %39 to i32
  %57 = shl nuw i32 %56, 24
  %58 = or i32 %55, %57
  %59 = shl nuw nsw i32 %41, 3
  %60 = sub nuw nsw i32 32, %59
  %61 = lshr i32 -1, %60
  %62 = and i32 %58, %61
  %63 = lshr i32 %62, 2
  %64 = bitcast %"class.v8::internal::EmbeddedData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #9
  %65 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %6, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %65, i64 0, i32 1
  %67 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %66, align 8
  %68 = tail call i8* @_ZNK2v88internal7Isolate18embedded_blob_codeEv(%"class.v8::internal::Isolate"* %67) #9, !noalias !6
  %69 = tail call i32 @_ZNK2v88internal7Isolate23embedded_blob_code_sizeEv(%"class.v8::internal::Isolate"* %67) #9, !noalias !6
  %70 = tail call i8* @_ZNK2v88internal7Isolate18embedded_blob_dataEv(%"class.v8::internal::Isolate"* %67) #9, !noalias !6
  %71 = tail call i32 @_ZNK2v88internal7Isolate23embedded_blob_data_sizeEv(%"class.v8::internal::Isolate"* %67) #9, !noalias !6
  %72 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %5, i64 0, i32 0
  store i8* %68, i8** %72, align 8, !alias.scope !6
  %73 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %5, i64 0, i32 1
  store i32 %69, i32* %73, align 8, !alias.scope !6
  %74 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %5, i64 0, i32 3
  store i8* %70, i8** %74, align 8, !alias.scope !6
  %75 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %5, i64 0, i32 4
  store i32 %71, i32* %75, align 8, !alias.scope !6
  %76 = call i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %5, i32 %63) #9
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79, !prof !5

78:                                               ; preds = %49
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #13
  unreachable

79:                                               ; preds = %49
  %80 = call zeroext i1 @_ZN2v88internal9RelocInfo29OffHeapTargetIsCodedSpeciallyEv() #9
  %81 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  br i1 %80, label %83, label %105

83:                                               ; preds = %79
  %84 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  %85 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %85, align 8
  %86 = trunc i64 %1 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %83
  %89 = call zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nonnull %4) #9
  br i1 %89, label %90, label %99

90:                                               ; preds = %88
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 27
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 536870912
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %99, label %97, !prof !2

97:                                               ; preds = %90
  %98 = call i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nonnull %4) #9
  br label %99

99:                                               ; preds = %83, %88, %90, %97
  %100 = sub i64 %76, %82
  %101 = trunc i64 %100 to i32
  %102 = add i32 %101, -4
  %103 = inttoptr i64 %82 to i32*
  store i32 %102, i32* %103, align 1
  %104 = inttoptr i64 %82 to i8*
  call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %104, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84)
  br label %107

105:                                              ; preds = %79
  %106 = inttoptr i64 %82 to i64*
  store i64 %76, i64* %106, align 1
  br label %107

107:                                              ; preds = %105, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #9
  ret void
}

declare i8* @_ZNK2v88internal7Isolate18embedded_blob_codeEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal9RelocInfo29OffHeapTargetIsCodedSpeciallyEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_25SlotAccessorForHeapObjectEEEihT_(%"class.v8::internal::Deserializer"*, i8 zeroext, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle.974", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::Handle.974", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::vector.972", align 8
  %10 = alloca %"class.v8::internal::Deserializer::RelocInfoVisitor", align 8
  %11 = alloca %"class.v8::internal::RelocIterator", align 8
  %12 = alloca %"class.std::__1::shared_ptr", align 8
  switch i8 %1, label %1290 [
    i8 1, label %13
    i8 2, label %13
    i8 3, label %13
    i8 0, label %13
    i8 4, label %44
    i8 5, label %123
    i8 7, label %235
    i8 6, label %307
    i8 9, label %391
    i8 26, label %463
    i8 19, label %489
    i8 17, label %489
    i8 20, label %537
    i8 23, label %537
    i8 8, label %538
    i8 10, label %1291
    i8 24, label %633
    i8 25, label %646
    i8 11, label %734
    i8 15, label %735
    i8 27, label %803
    i8 12, label %990
    i8 13, label %1030
    i8 18, label %1126
    i8 16, label %1126
    i8 21, label %1180
    i8 22, label %1192
    i8 64, label %1194
    i8 65, label %1194
    i8 66, label %1194
    i8 67, label %1194
    i8 68, label %1194
    i8 69, label %1194
    i8 70, label %1194
    i8 71, label %1194
    i8 72, label %1194
    i8 73, label %1194
    i8 74, label %1194
    i8 75, label %1194
    i8 76, label %1194
    i8 77, label %1194
    i8 78, label %1194
    i8 79, label %1194
    i8 80, label %1194
    i8 81, label %1194
    i8 82, label %1194
    i8 83, label %1194
    i8 84, label %1194
    i8 85, label %1194
    i8 86, label %1194
    i8 87, label %1194
    i8 88, label %1194
    i8 89, label %1194
    i8 90, label %1194
    i8 91, label %1194
    i8 92, label %1194
    i8 93, label %1194
    i8 94, label %1194
    i8 95, label %1194
    i8 -112, label %1225
    i8 -111, label %1225
    i8 -110, label %1225
    i8 -109, label %1225
    i8 -108, label %1225
    i8 -107, label %1225
    i8 -106, label %1225
    i8 -105, label %1225
    i8 96, label %1259
    i8 97, label %1259
    i8 98, label %1259
    i8 99, label %1259
    i8 100, label %1259
    i8 101, label %1259
    i8 102, label %1259
    i8 103, label %1259
    i8 104, label %1259
    i8 105, label %1259
    i8 106, label %1259
    i8 107, label %1259
    i8 108, label %1259
    i8 109, label %1259
    i8 110, label %1259
    i8 111, label %1259
    i8 112, label %1259
    i8 113, label %1259
    i8 114, label %1259
    i8 115, label %1259
    i8 116, label %1259
    i8 117, label %1259
    i8 118, label %1259
    i8 119, label %1259
    i8 120, label %1259
    i8 121, label %1259
    i8 122, label %1259
    i8 123, label %1259
    i8 124, label %1259
    i8 125, label %1259
    i8 126, label %1259
    i8 127, label %1259
    i8 -128, label %1286
    i8 -127, label %1286
    i8 -126, label %1286
    i8 -125, label %1286
    i8 -124, label %1286
    i8 -123, label %1286
    i8 -122, label %1286
    i8 -121, label %1286
    i8 -120, label %1286
    i8 -119, label %1286
    i8 -118, label %1286
    i8 -117, label %1286
    i8 -116, label %1286
    i8 -115, label %1286
    i8 -114, label %1286
    i8 -113, label %1286
  ]

13:                                               ; preds = %4, %4, %4, %4
  %14 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %15 = load i8, i8* %14, align 1, !range !4
  store i8 0, i8* %14, align 1
  %16 = tail call i64* @_ZN2v88internal12Deserializer10ReadObjectENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"* %0, i8 zeroext %1)
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i8 %15, 0
  %19 = or i64 %17, 2
  %20 = select i1 %18, i64 %17, i64 %19
  %21 = load i64, i64* %2, align 8
  %22 = sext i32 %3 to i64
  %23 = add nsw i64 %22, -1
  %24 = add i64 %23, %21
  %25 = trunc i64 %20 to i32
  %26 = inttoptr i64 %24 to i32*
  store atomic volatile i32 %25, i32* %26 monotonic, align 4
  %27 = load i64, i64* %2, align 8
  %28 = and i64 %20, 1
  %29 = icmp ne i64 %28, 0
  %30 = icmp ne i32 %25, 3
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %1291

32:                                               ; preds = %13
  %33 = and i64 %27, -262144
  %34 = or i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 262144
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %1291, label %39

39:                                               ; preds = %32
  %40 = and i64 %20, -3
  %41 = or i64 %33, 16
  %42 = inttoptr i64 %41 to %"class.v8::internal::Heap"**
  %43 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %42, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %43, i64 %27, i64 %24, i64 %40) #9
  br label %1291

44:                                               ; preds = %4
  %45 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = add nsw i32 %48, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %46, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = or i32 %58, %52
  %60 = add nsw i32 %48, 2
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %46, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw nsw i32 %64, 16
  %66 = or i32 %59, %65
  %67 = add nsw i32 %48, 3
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %46, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw i32 %71, 24
  %73 = or i32 %66, %72
  %74 = and i32 %52, 3
  %75 = add nuw nsw i32 %74, 1
  %76 = add nsw i32 %75, %48
  store i32 %76, i32* %47, align 4
  %77 = shl nuw nsw i32 %75, 3
  %78 = sub nuw nsw i32 32, %77
  %79 = lshr i32 -1, %78
  %80 = and i32 %73, %79
  %81 = lshr i32 %80, 2
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 0
  %84 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %84, i64 %82, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %89, i32 0, i32 0
  store i64* %86, i64** %90, align 8
  %91 = load i32, i32* %87, align 8
  %92 = add nsw i32 %91, 1
  %93 = and i32 %92, 7
  store i32 %93, i32* %87, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %95 = load i8, i8* %94, align 1, !range !4
  store i8 0, i8* %94, align 1
  %96 = load i64, i64* %86, align 8
  %97 = icmp eq i8 %95, 0
  %98 = or i64 %96, 2
  %99 = select i1 %97, i64 %96, i64 %98
  %100 = load i64, i64* %2, align 8
  %101 = sext i32 %3 to i64
  %102 = add nsw i64 %101, -1
  %103 = add i64 %102, %100
  %104 = trunc i64 %99 to i32
  %105 = inttoptr i64 %103 to i32*
  store atomic volatile i32 %104, i32* %105 monotonic, align 4
  %106 = load i64, i64* %2, align 8
  %107 = and i64 %99, 1
  %108 = icmp ne i64 %107, 0
  %109 = icmp ne i32 %104, 3
  %110 = and i1 %109, %108
  br i1 %110, label %111, label %1291

111:                                              ; preds = %44
  %112 = and i64 %106, -262144
  %113 = or i64 %112, 8
  %114 = inttoptr i64 %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 262144
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %1291, label %118

118:                                              ; preds = %111
  %119 = and i64 %99, -3
  %120 = or i64 %112, 16
  %121 = inttoptr i64 %120 to %"class.v8::internal::Heap"**
  %122 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %121, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %122, i64 %106, i64 %103, i64 %119) #9
  br label %1291

123:                                              ; preds = %4
  %124 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %125, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = add nsw i32 %127, 1
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %125, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = shl nuw nsw i32 %136, 8
  %138 = or i32 %137, %131
  %139 = add nsw i32 %127, 2
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %125, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 16
  %145 = or i32 %138, %144
  %146 = add nsw i32 %127, 3
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %125, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = shl nuw i32 %150, 24
  %152 = or i32 %145, %151
  %153 = and i32 %131, 3
  %154 = add nuw nsw i32 %153, 1
  %155 = add nsw i32 %154, %127
  store i32 %155, i32* %126, align 4
  %156 = shl nuw nsw i32 %154, 3
  %157 = sub nuw nsw i32 32, %156
  %158 = lshr i32 -1, %157
  %159 = and i32 %152, %158
  %160 = lshr i32 %159, 2
  %161 = sext i32 %155 to i64
  %162 = getelementptr inbounds i8, i8* %125, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = add nsw i32 %155, 1
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* %125, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = shl nuw nsw i32 %169, 8
  %171 = or i32 %170, %164
  %172 = add nsw i32 %155, 2
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %125, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl nuw nsw i32 %176, 16
  %178 = or i32 %171, %177
  %179 = add nsw i32 %155, 3
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %125, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl nuw i32 %183, 24
  %185 = or i32 %178, %184
  %186 = and i32 %164, 3
  %187 = add nuw nsw i32 %186, 1
  %188 = add nsw i32 %187, %155
  store i32 %188, i32* %126, align 4
  %189 = shl nuw nsw i32 %187, 3
  %190 = sub nuw nsw i32 32, %189
  %191 = lshr i32 -1, %190
  %192 = and i32 %185, %191
  %193 = lshr i32 %192, 2
  %194 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %195 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %194, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %195, i64 0, i32 2, i32 31
  %197 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %196, align 8
  %198 = zext i32 %160 to i64
  %199 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %197, i64 0, i32 3, i32 0, i32 0
  %200 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %199, align 8
  %201 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage"*, %"class.v8::internal::ReadOnlyPage"** %200, i64 %198
  %202 = bitcast %"class.v8::internal::ReadOnlyPage"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = zext i32 %193 to i64
  %205 = add i64 %203, 1
  %206 = add i64 %205, %204
  %207 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %208 = load i8, i8* %207, align 1, !range !4
  store i8 0, i8* %207, align 1
  %209 = icmp eq i8 %208, 0
  %210 = or i64 %206, 2
  %211 = select i1 %209, i64 %206, i64 %210
  %212 = load i64, i64* %2, align 8
  %213 = sext i32 %3 to i64
  %214 = add nsw i64 %213, -1
  %215 = add i64 %214, %212
  %216 = trunc i64 %211 to i32
  %217 = inttoptr i64 %215 to i32*
  store atomic volatile i32 %216, i32* %217 monotonic, align 4
  %218 = load i64, i64* %2, align 8
  %219 = and i64 %211, 1
  %220 = icmp ne i64 %219, 0
  %221 = icmp ne i32 %216, 3
  %222 = and i1 %221, %220
  br i1 %222, label %223, label %1291

223:                                              ; preds = %123
  %224 = and i64 %218, -262144
  %225 = or i64 %224, 8
  %226 = inttoptr i64 %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = and i64 %227, 262144
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %1291, label %230

230:                                              ; preds = %223
  %231 = and i64 %211, -3
  %232 = or i64 %224, 16
  %233 = inttoptr i64 %232 to %"class.v8::internal::Heap"**
  %234 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %233, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %234, i64 %218, i64 %215, i64 %231) #9
  br label %1291

235:                                              ; preds = %4
  %236 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %237 = load i8*, i8** %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %237, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = add nsw i32 %239, 1
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i8, i8* %237, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = shl nuw nsw i32 %248, 8
  %250 = or i32 %249, %243
  %251 = add nsw i32 %239, 2
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8, i8* %237, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = shl nuw nsw i32 %255, 16
  %257 = or i32 %250, %256
  %258 = and i32 %243, 3
  %259 = add nuw nsw i32 %258, 1
  %260 = add nsw i32 %259, %239
  store i32 %260, i32* %238, align 4
  %261 = shl nuw nsw i32 %259, 3
  %262 = sub nuw nsw i32 32, %261
  %263 = lshr i32 -1, %262
  %264 = and i32 %263, %257
  %265 = lshr i32 %264, 2
  %266 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %267 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %266, align 8
  %268 = and i32 %265, 65535
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %267, i64 0, i32 0, i32 7, i32 0, i64 %269
  %271 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 1
  %272 = load i32, i32* %271, align 8
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %273, i32 0, i32 0
  store i64* %270, i64** %274, align 8
  %275 = load i32, i32* %271, align 8
  %276 = add nsw i32 %275, 1
  %277 = and i32 %276, 7
  store i32 %277, i32* %271, align 8
  %278 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %279 = load i8, i8* %278, align 1, !range !4
  store i8 0, i8* %278, align 1
  %280 = load i64, i64* %270, align 8
  %281 = icmp eq i8 %279, 0
  %282 = or i64 %280, 2
  %283 = select i1 %281, i64 %280, i64 %282
  %284 = load i64, i64* %2, align 8
  %285 = sext i32 %3 to i64
  %286 = add nsw i64 %285, -1
  %287 = add i64 %286, %284
  %288 = trunc i64 %283 to i32
  %289 = inttoptr i64 %287 to i32*
  store atomic volatile i32 %288, i32* %289 monotonic, align 4
  %290 = load i64, i64* %2, align 8
  %291 = and i64 %283, 1
  %292 = icmp ne i64 %291, 0
  %293 = icmp ne i32 %288, 3
  %294 = and i1 %293, %292
  br i1 %294, label %295, label %1291

295:                                              ; preds = %235
  %296 = and i64 %290, -262144
  %297 = or i64 %296, 8
  %298 = inttoptr i64 %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = and i64 %299, 262144
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %1291, label %302

302:                                              ; preds = %295
  %303 = and i64 %283, -3
  %304 = or i64 %296, 16
  %305 = inttoptr i64 %304 to %"class.v8::internal::Heap"**
  %306 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %305, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %306, i64 %290, i64 %287, i64 %303) #9
  br label %1291

307:                                              ; preds = %4
  %308 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %309 = load i8*, i8** %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %311 = load i32, i32* %310, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i8, i8* %309, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = add nsw i32 %311, 1
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* %309, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = shl nuw nsw i32 %320, 8
  %322 = or i32 %321, %315
  %323 = add nsw i32 %311, 2
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i8, i8* %309, i64 %324
  %326 = load i8, i8* %325, align 1
  %327 = zext i8 %326 to i32
  %328 = shl nuw nsw i32 %327, 16
  %329 = or i32 %322, %328
  %330 = add nsw i32 %311, 3
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds i8, i8* %309, i64 %331
  %333 = load i8, i8* %332, align 1
  %334 = zext i8 %333 to i32
  %335 = shl nuw i32 %334, 24
  %336 = or i32 %329, %335
  %337 = and i32 %315, 3
  %338 = add nuw nsw i32 %337, 1
  %339 = add nsw i32 %338, %311
  store i32 %339, i32* %310, align 4
  %340 = shl nuw nsw i32 %338, 3
  %341 = sub nuw nsw i32 32, %340
  %342 = lshr i32 -1, %341
  %343 = and i32 %336, %342
  %344 = lshr i32 %343, 2
  %345 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %346 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %345, align 8
  %347 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %346, i64 0, i32 139
  %348 = zext i32 %344 to i64
  %349 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %346, i64 0, i32 139, i32 0, i32 1
  %350 = bitcast %"class.v8::internal::Object"** %349 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = bitcast %"class.std::__1::vector.541"* %347 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = sub i64 %351, %353
  %355 = ashr exact i64 %354, 3
  %356 = icmp ugt i64 %355, %348
  br i1 %356, label %359, label %357

357:                                              ; preds = %307
  %358 = bitcast %"class.std::__1::vector.541"* %347 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %358) #13
  unreachable

359:                                              ; preds = %307
  %360 = inttoptr i64 %353 to %"class.v8::internal::Object"*
  %361 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %360, i64 %348, i32 0, i32 0
  %362 = load i64, i64* %361, align 8
  %363 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %364 = load i8, i8* %363, align 1, !range !4
  store i8 0, i8* %363, align 1
  %365 = icmp eq i8 %364, 0
  %366 = or i64 %362, 2
  %367 = select i1 %365, i64 %362, i64 %366
  %368 = load i64, i64* %2, align 8
  %369 = sext i32 %3 to i64
  %370 = add nsw i64 %369, -1
  %371 = add i64 %370, %368
  %372 = trunc i64 %367 to i32
  %373 = inttoptr i64 %371 to i32*
  store atomic volatile i32 %372, i32* %373 monotonic, align 4
  %374 = load i64, i64* %2, align 8
  %375 = and i64 %367, 1
  %376 = icmp ne i64 %375, 0
  %377 = icmp ne i32 %372, 3
  %378 = and i1 %377, %376
  br i1 %378, label %379, label %1291

379:                                              ; preds = %359
  %380 = and i64 %374, -262144
  %381 = or i64 %380, 8
  %382 = inttoptr i64 %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = and i64 %383, 262144
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %1291, label %386

386:                                              ; preds = %379
  %387 = and i64 %367, -3
  %388 = or i64 %380, 16
  %389 = inttoptr i64 %388 to %"class.v8::internal::Heap"**
  %390 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %389, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %390, i64 %374, i64 %371, i64 %387) #9
  br label %1291

391:                                              ; preds = %4
  %392 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %395 = load i32, i32* %394, align 4
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds i8, i8* %393, i64 %396
  %398 = load i8, i8* %397, align 1
  %399 = zext i8 %398 to i32
  %400 = add nsw i32 %395, 1
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds i8, i8* %393, i64 %401
  %403 = load i8, i8* %402, align 1
  %404 = zext i8 %403 to i32
  %405 = shl nuw nsw i32 %404, 8
  %406 = or i32 %405, %399
  %407 = add nsw i32 %395, 2
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds i8, i8* %393, i64 %408
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i32
  %412 = shl nuw nsw i32 %411, 16
  %413 = or i32 %406, %412
  %414 = add nsw i32 %395, 3
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds i8, i8* %393, i64 %415
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i32
  %419 = shl nuw i32 %418, 24
  %420 = or i32 %413, %419
  %421 = and i32 %399, 3
  %422 = add nuw nsw i32 %421, 1
  %423 = add nsw i32 %422, %395
  store i32 %423, i32* %394, align 4
  %424 = shl nuw nsw i32 %422, 3
  %425 = sub nuw nsw i32 32, %424
  %426 = lshr i32 -1, %425
  %427 = and i32 %420, %426
  %428 = lshr i32 %427, 2
  %429 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %430 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %429, align 8
  %431 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %430, i64 0, i32 3
  %432 = load %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"** %431, align 8
  %433 = zext i32 %428 to i64
  %434 = tail call i64 @_ZNK2v88internal12ReadOnlyHeap23cached_read_only_objectEm(%"class.v8::internal::ReadOnlyHeap"* %432, i64 %433) #9
  %435 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %436 = load i8, i8* %435, align 1, !range !4
  store i8 0, i8* %435, align 1
  %437 = icmp eq i8 %436, 0
  %438 = or i64 %434, 2
  %439 = select i1 %437, i64 %434, i64 %438
  %440 = load i64, i64* %2, align 8
  %441 = sext i32 %3 to i64
  %442 = add nsw i64 %441, -1
  %443 = add i64 %442, %440
  %444 = trunc i64 %439 to i32
  %445 = inttoptr i64 %443 to i32*
  store atomic volatile i32 %444, i32* %445 monotonic, align 4
  %446 = load i64, i64* %2, align 8
  %447 = and i64 %439, 1
  %448 = icmp ne i64 %447, 0
  %449 = icmp ne i32 %444, 3
  %450 = and i1 %449, %448
  br i1 %450, label %451, label %1291

451:                                              ; preds = %391
  %452 = and i64 %446, -262144
  %453 = or i64 %452, 8
  %454 = inttoptr i64 %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = and i64 %455, 262144
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %1291, label %458

458:                                              ; preds = %451
  %459 = and i64 %439, -3
  %460 = or i64 %452, 16
  %461 = inttoptr i64 %460 to %"class.v8::internal::Heap"**
  %462 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %461, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %462, i64 %446, i64 %443, i64 %459) #9
  br label %1291

463:                                              ; preds = %4
  %464 = tail call i64* @_ZN2v88internal12Deserializer11ReadMetaMapEv(%"class.v8::internal::Deserializer"* %0)
  %465 = load i64, i64* %464, align 8
  %466 = load i64, i64* %2, align 8
  %467 = sext i32 %3 to i64
  %468 = add nsw i64 %467, -1
  %469 = add i64 %468, %466
  %470 = trunc i64 %465 to i32
  %471 = inttoptr i64 %469 to i32*
  store atomic volatile i32 %470, i32* %471 monotonic, align 4
  %472 = load i64, i64* %2, align 8
  %473 = and i64 %465, 1
  %474 = icmp ne i64 %473, 0
  %475 = icmp ne i32 %470, 3
  %476 = and i1 %475, %474
  br i1 %476, label %477, label %1291

477:                                              ; preds = %463
  %478 = and i64 %472, -262144
  %479 = or i64 %478, 8
  %480 = inttoptr i64 %479 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = and i64 %481, 262144
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %1291, label %484

484:                                              ; preds = %477
  %485 = and i64 %465, -3
  %486 = or i64 %478, 16
  %487 = inttoptr i64 %486 to %"class.v8::internal::Heap"**
  %488 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %487, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %488, i64 %472, i64 %469, i64 %485) #9
  br label %1291

489:                                              ; preds = %4, %4
  %490 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %491 = load i8*, i8** %490, align 8
  %492 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %493 = load i32, i32* %492, align 4
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i8, i8* %491, i64 %494
  %496 = load i8, i8* %495, align 1
  %497 = zext i8 %496 to i32
  %498 = add nsw i32 %493, 1
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds i8, i8* %491, i64 %499
  %501 = load i8, i8* %500, align 1
  %502 = zext i8 %501 to i32
  %503 = shl nuw nsw i32 %502, 8
  %504 = or i32 %503, %497
  %505 = add nsw i32 %493, 2
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds i8, i8* %491, i64 %506
  %508 = load i8, i8* %507, align 1
  %509 = zext i8 %508 to i32
  %510 = shl nuw nsw i32 %509, 16
  %511 = or i32 %504, %510
  %512 = add nsw i32 %493, 3
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i8, i8* %491, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i32
  %517 = shl nuw i32 %516, 24
  %518 = or i32 %511, %517
  %519 = and i32 %497, 3
  %520 = add nuw nsw i32 %519, 1
  %521 = add nsw i32 %520, %493
  store i32 %521, i32* %492, align 4
  %522 = shl nuw nsw i32 %520, 3
  %523 = sub nuw nsw i32 32, %522
  %524 = lshr i32 -1, %523
  %525 = and i32 %518, %524
  %526 = lshr i32 %525, 2
  %527 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %528 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %527, align 8
  %529 = zext i32 %526 to i64
  %530 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %528, i64 0, i32 0, i32 8, i32 0, i64 %529
  %531 = load i64, i64* %530, align 8
  %532 = load i64, i64* %2, align 8
  %533 = sext i32 %3 to i64
  %534 = add nsw i64 %533, -1
  %535 = add i64 %534, %532
  %536 = inttoptr i64 %535 to i64*
  store i64 %531, i64* %536, align 1
  br label %1291

537:                                              ; preds = %4, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

538:                                              ; preds = %4
  %539 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %540 = load i8*, i8** %539, align 8
  %541 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %542 = load i32, i32* %541, align 4
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds i8, i8* %540, i64 %543
  %545 = load i8, i8* %544, align 1
  %546 = zext i8 %545 to i32
  %547 = add nsw i32 %542, 1
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds i8, i8* %540, i64 %548
  %550 = load i8, i8* %549, align 1
  %551 = zext i8 %550 to i32
  %552 = shl nuw nsw i32 %551, 8
  %553 = or i32 %552, %546
  %554 = add nsw i32 %542, 2
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds i8, i8* %540, i64 %555
  %557 = load i8, i8* %556, align 1
  %558 = zext i8 %557 to i32
  %559 = shl nuw nsw i32 %558, 16
  %560 = or i32 %553, %559
  %561 = add nsw i32 %542, 3
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds i8, i8* %540, i64 %562
  %564 = load i8, i8* %563, align 1
  %565 = zext i8 %564 to i32
  %566 = shl nuw i32 %565, 24
  %567 = or i32 %560, %566
  %568 = and i32 %546, 3
  %569 = add nuw nsw i32 %568, 1
  %570 = add nsw i32 %569, %542
  store i32 %570, i32* %541, align 4
  %571 = shl nuw nsw i32 %569, 3
  %572 = sub nuw nsw i32 32, %571
  %573 = lshr i32 -1, %572
  %574 = and i32 %567, %573
  %575 = lshr i32 %574, 2
  %576 = zext i32 %575 to i64
  %577 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 2, i32 0, i32 0
  %578 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %577, align 8
  %579 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %578, i64 %576, i32 0, i32 0
  %580 = load i64*, i64** %579, align 8
  %581 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %582 = load i8, i8* %581, align 1, !range !4
  store i8 0, i8* %581, align 1
  %583 = load i64, i64* %580, align 8
  %584 = icmp eq i8 %582, 0
  %585 = or i64 %583, 2
  %586 = select i1 %584, i64 %583, i64 %585
  %587 = load i64, i64* %2, align 8
  %588 = sext i32 %3 to i64
  %589 = add nsw i64 %588, -1
  %590 = add i64 %589, %587
  %591 = trunc i64 %586 to i32
  %592 = inttoptr i64 %590 to i32*
  store atomic volatile i32 %591, i32* %592 monotonic, align 4
  %593 = load i64, i64* %2, align 8
  %594 = and i64 %586, 1
  %595 = icmp ne i64 %594, 0
  %596 = icmp ne i32 %591, 3
  %597 = and i1 %596, %595
  br i1 %597, label %598, label %1291

598:                                              ; preds = %538
  %599 = and i64 %593, -262144
  %600 = or i64 %599, 8
  %601 = inttoptr i64 %600 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = and i64 %602, 262144
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %610, label %605

605:                                              ; preds = %598
  %606 = and i64 %586, -3
  %607 = or i64 %599, 16
  %608 = inttoptr i64 %607 to %"class.v8::internal::Heap"**
  %609 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %608, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %609, i64 %593, i64 %590, i64 %606) #9
  br label %610

610:                                              ; preds = %605, %598
  %611 = and i64 %586, -262144
  %612 = inttoptr i64 %611 to %"class.v8::internal::BasicMemoryChunk"*
  %613 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %612, i64 0, i32 1
  %614 = load i64, i64* %613, align 8
  %615 = and i64 %614, 24
  %616 = icmp eq i64 %615, 0
  br i1 %616, label %1291, label %617

617:                                              ; preds = %610
  %618 = load i64, i64* %2, align 8
  %619 = and i64 %586, -3
  %620 = or i64 %611, 8
  %621 = inttoptr i64 %620 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = and i64 %622, 24
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %1291, label %625

625:                                              ; preds = %617
  %626 = and i64 %618, -262144
  %627 = or i64 %626, 8
  %628 = inttoptr i64 %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = and i64 %629, 24
  %631 = icmp eq i64 %630, 0
  br i1 %631, label %632, label %1291

632:                                              ; preds = %625
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %618, i64 %590, i64 %619) #9
  br label %1291

633:                                              ; preds = %4
  %634 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %634) #9
  %635 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %636 = load i8, i8* %635, align 1, !range !4
  %637 = xor i8 %636, 1
  %638 = zext i8 %637 to i32
  store i8 0, i8* %635, align 1
  store i32 %638, i32* %6, align 4
  %639 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 17
  %640 = bitcast %"class.v8::internal::Handle.974"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %640) #9
  %641 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %7, i64 0, i32 0, i32 0
  store i64* %2, i64** %641, align 8
  %642 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %642) #9
  store i32 %3, i32* %8, align 4
  call void @_ZNSt3__16vectorIN2v88internal12Deserializer20UnresolvedForwardRefENS_9allocatorIS4_EEE12emplace_backIJNS2_6HandleINS2_10HeapObjectEEEiRNS2_23HeapObjectReferenceTypeEEEEvDpOT_(%"class.std::__1::vector.1204"* %639, %"class.v8::internal::Handle.974"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %642) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %640) #9
  %643 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 18
  %644 = load i32, i32* %643, align 8
  %645 = add nsw i32 %644, 1
  store i32 %645, i32* %643, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %634) #9
  br label %1291

646:                                              ; preds = %4
  %647 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %648 = load i8*, i8** %647, align 8
  %649 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %650 = load i32, i32* %649, align 4
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds i8, i8* %648, i64 %651
  %653 = load i8, i8* %652, align 1
  %654 = zext i8 %653 to i32
  %655 = add nsw i32 %650, 1
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds i8, i8* %648, i64 %656
  %658 = load i8, i8* %657, align 1
  %659 = zext i8 %658 to i32
  %660 = shl nuw nsw i32 %659, 8
  %661 = or i32 %660, %654
  %662 = add nsw i32 %650, 2
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds i8, i8* %648, i64 %663
  %665 = load i8, i8* %664, align 1
  %666 = zext i8 %665 to i32
  %667 = shl nuw nsw i32 %666, 16
  %668 = or i32 %661, %667
  %669 = add nsw i32 %650, 3
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds i8, i8* %648, i64 %670
  %672 = load i8, i8* %671, align 1
  %673 = zext i8 %672 to i32
  %674 = shl nuw i32 %673, 24
  %675 = or i32 %668, %674
  %676 = and i32 %654, 3
  %677 = add nuw nsw i32 %676, 1
  %678 = add nsw i32 %677, %650
  store i32 %678, i32* %649, align 4
  %679 = shl nuw nsw i32 %677, 3
  %680 = sub nuw nsw i32 32, %679
  %681 = lshr i32 -1, %680
  %682 = and i32 %675, %681
  %683 = lshr i32 %682, 2
  %684 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 17
  %685 = zext i32 %683 to i64
  %686 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %684, i64 0, i32 0, i32 0
  %687 = load %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %686, align 8
  %688 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %687, i64 %685
  %689 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %688, i64 0, i32 0, i32 0, i32 0
  %690 = load i64*, i64** %689, align 8
  %691 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %687, i64 %685, i32 1
  %692 = load i32, i32* %691, align 8
  %693 = load i64, i64* %2, align 8
  %694 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %687, i64 %685, i32 2
  %695 = load i32, i32* %694, align 4
  %696 = icmp eq i32 %695, 1
  %697 = or i64 %693, 2
  %698 = select i1 %696, i64 %693, i64 %697
  %699 = load i64, i64* %690, align 8
  %700 = sext i32 %692 to i64
  %701 = add nsw i64 %700, -1
  %702 = add i64 %701, %699
  %703 = trunc i64 %698 to i32
  %704 = inttoptr i64 %702 to i32*
  store atomic volatile i32 %703, i32* %704 monotonic, align 4
  %705 = load i64, i64* %690, align 8
  %706 = and i64 %698, 1
  %707 = icmp ne i64 %706, 0
  %708 = icmp ne i32 %703, 3
  %709 = and i1 %708, %707
  br i1 %709, label %710, label %722

710:                                              ; preds = %646
  %711 = and i64 %705, -262144
  %712 = or i64 %711, 8
  %713 = inttoptr i64 %712 to i64*
  %714 = load i64, i64* %713, align 8
  %715 = and i64 %714, 262144
  %716 = icmp eq i64 %715, 0
  br i1 %716, label %722, label %717

717:                                              ; preds = %710
  %718 = and i64 %698, -3
  %719 = or i64 %711, 16
  %720 = inttoptr i64 %719 to %"class.v8::internal::Heap"**
  %721 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %720, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %721, i64 %705, i64 %702, i64 %718) #9
  br label %722

722:                                              ; preds = %646, %710, %717
  %723 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 18
  %724 = load i32, i32* %723, align 8
  %725 = add nsw i32 %724, -1
  store i32 %725, i32* %723, align 8
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %727, label %732

727:                                              ; preds = %722
  %728 = bitcast %"class.std::__1::vector.1204"* %684 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 17, i32 0, i32 1
  %731 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %730 to i64*
  store i64 %729, i64* %731, align 8
  br label %1291

732:                                              ; preds = %722
  %733 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %688 to i64*
  store i64 0, i64* %733, align 8
  br label %1291

734:                                              ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

735:                                              ; preds = %4
  %736 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %737 = load i8*, i8** %736, align 8
  %738 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %739 = load i32, i32* %738, align 4
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds i8, i8* %737, i64 %740
  %742 = load i8, i8* %741, align 1
  %743 = zext i8 %742 to i32
  %744 = add nsw i32 %739, 1
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds i8, i8* %737, i64 %745
  %747 = load i8, i8* %746, align 1
  %748 = zext i8 %747 to i32
  %749 = shl nuw nsw i32 %748, 8
  %750 = or i32 %749, %743
  %751 = add nsw i32 %739, 2
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds i8, i8* %737, i64 %752
  %754 = load i8, i8* %753, align 1
  %755 = zext i8 %754 to i32
  %756 = shl nuw nsw i32 %755, 16
  %757 = or i32 %750, %756
  %758 = add nsw i32 %739, 3
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds i8, i8* %737, i64 %759
  %761 = load i8, i8* %760, align 1
  %762 = zext i8 %761 to i32
  %763 = shl nuw i32 %762, 24
  %764 = or i32 %757, %763
  %765 = and i32 %743, 3
  %766 = add nuw nsw i32 %765, 1
  %767 = add nsw i32 %766, %739
  store i32 %767, i32* %738, align 4
  %768 = shl nuw nsw i32 %766, 3
  %769 = sub nuw nsw i32 32, %768
  %770 = lshr i32 -1, %769
  %771 = and i32 %764, %770
  %772 = lshr i32 %771, 2
  %773 = load i64, i64* %2, align 8
  %774 = sext i32 %3 to i64
  %775 = add nsw i64 %774, -1
  %776 = add i64 %775, %773
  %777 = inttoptr i64 %776 to i32*
  %778 = zext i32 %772 to i64
  %779 = getelementptr inbounds i32, i32* %777, i64 %778
  %780 = icmp eq i32 %772, 0
  br i1 %780, label %1291, label %781

781:                                              ; preds = %735
  %782 = sext i32 %767 to i64
  %783 = getelementptr inbounds i8, i8* %737, i64 %782
  %784 = bitcast i8* %783 to i32*
  %785 = load i32, i32* %784, align 1
  store atomic volatile i32 %785, i32* %777 monotonic, align 4
  %786 = load i32, i32* %738, align 4
  %787 = add i32 %786, 4
  store i32 %787, i32* %738, align 4
  %788 = icmp eq i32 %772, 1
  br i1 %788, label %1291, label %789

789:                                              ; preds = %781
  %790 = getelementptr inbounds i32, i32* %777, i64 1
  br label %791

791:                                              ; preds = %789, %791
  %792 = phi i32 [ %787, %789 ], [ %801, %791 ]
  %793 = phi i32* [ %790, %789 ], [ %799, %791 ]
  %794 = load i8*, i8** %736, align 8
  %795 = sext i32 %792 to i64
  %796 = getelementptr inbounds i8, i8* %794, i64 %795
  %797 = bitcast i8* %796 to i32*
  %798 = load i32, i32* %797, align 1
  store atomic volatile i32 %798, i32* %793 monotonic, align 4
  %799 = getelementptr inbounds i32, i32* %793, i64 1
  %800 = load i32, i32* %738, align 4
  %801 = add i32 %800, 4
  store i32 %801, i32* %738, align 4
  %802 = icmp ult i32* %799, %779
  br i1 %802, label %791, label %1291

803:                                              ; preds = %4
  %804 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %805 = load i8*, i8** %804, align 8
  %806 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %807 = load i32, i32* %806, align 4
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds i8, i8* %805, i64 %808
  %810 = load i8, i8* %809, align 1
  %811 = zext i8 %810 to i32
  %812 = add nsw i32 %807, 1
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds i8, i8* %805, i64 %813
  %815 = load i8, i8* %814, align 1
  %816 = zext i8 %815 to i32
  %817 = shl nuw nsw i32 %816, 8
  %818 = or i32 %817, %811
  %819 = add nsw i32 %807, 2
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds i8, i8* %805, i64 %820
  %822 = load i8, i8* %821, align 1
  %823 = zext i8 %822 to i32
  %824 = shl nuw nsw i32 %823, 16
  %825 = or i32 %818, %824
  %826 = add nsw i32 %807, 3
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds i8, i8* %805, i64 %827
  %829 = load i8, i8* %828, align 1
  %830 = zext i8 %829 to i32
  %831 = shl nuw i32 %830, 24
  %832 = or i32 %825, %831
  %833 = and i32 %811, 3
  %834 = add nuw nsw i32 %833, 1
  %835 = add nsw i32 %834, %807
  store i32 %835, i32* %806, align 4
  %836 = shl nuw nsw i32 %834, 3
  %837 = sub nuw nsw i32 32, %836
  %838 = lshr i32 -1, %837
  %839 = and i32 %832, %838
  %840 = and i32 %839, -4
  %841 = load i64, i64* %2, align 8
  %842 = add i64 %841, 19
  %843 = inttoptr i64 %842 to i8*
  %844 = sext i32 %835 to i64
  %845 = getelementptr inbounds i8, i8* %805, i64 %844
  %846 = sext i32 %840 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %843, i8* align 1 %845, i64 %846, i1 false) #9
  %847 = load i32, i32* %806, align 4
  %848 = add nsw i32 %840, %847
  store i32 %848, i32* %806, align 4
  %849 = load i8*, i8** %804, align 8
  %850 = add nsw i32 %848, 1
  store i32 %850, i32* %806, align 4
  %851 = sext i32 %848 to i64
  %852 = getelementptr inbounds i8, i8* %849, i64 %851
  %853 = load i8, i8* %852, align 1
  %854 = tail call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_25SlotAccessorForHeapObjectEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %853, i64* %2, i32 4) #9
  %855 = add nsw i32 %854, 1
  %856 = icmp slt i32 %855, 5
  br i1 %856, label %857, label %869

857:                                              ; preds = %803, %857
  %858 = phi i32 [ %867, %857 ], [ %855, %803 ]
  %859 = load i32, i32* %806, align 4
  %860 = load i8*, i8** %804, align 8
  %861 = add nsw i32 %859, 1
  store i32 %861, i32* %806, align 4
  %862 = sext i32 %859 to i64
  %863 = getelementptr inbounds i8, i8* %860, i64 %862
  %864 = load i8, i8* %863, align 1
  %865 = shl nsw i32 %858, 2
  %866 = tail call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_25SlotAccessorForHeapObjectEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %864, i64* %2, i32 %865) #9
  %867 = add nsw i32 %866, %858
  %868 = icmp slt i32 %867, 5
  br i1 %868, label %857, label %869

869:                                              ; preds = %857, %803
  %870 = phi i32 [ %855, %803 ], [ %867, %857 ]
  %871 = lshr i32 %839, 2
  %872 = icmp eq i32 %870, 5
  br i1 %872, label %874, label %873, !prof !2

873:                                              ; preds = %869
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

874:                                              ; preds = %869
  %875 = bitcast %"class.std::__1::vector.972"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %875, i8 0, i64 24, i1 false) #9
  %876 = load i8*, i8** %804, align 8
  %877 = load i32, i32* %806, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds i8, i8* %876, i64 %878
  %880 = load i8, i8* %879, align 1
  %881 = icmp eq i8 %880, 11
  br i1 %881, label %962, label %882

882:                                              ; preds = %874
  %883 = bitcast %"class.v8::internal::Handle.974"* %5 to i8*
  %884 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %5, i64 0, i32 0, i32 0
  %885 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %886 = bitcast %"class.v8::internal::Handle.974"* %5 to i64*
  %887 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %9, i64 0, i32 0, i32 1
  %888 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %889 = bitcast %"class.v8::internal::Handle.974"** %887 to i64*
  %890 = bitcast %"class.std::__1::vector.972"* %9 to i64*
  %891 = bitcast %"class.v8::internal::Handle.974"** %888 to i64*
  br label %892

892:                                              ; preds = %882, %955
  %893 = phi i8* [ %879, %882 ], [ %959, %955 ]
  %894 = phi i32 [ %877, %882 ], [ %957, %955 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %883)
  store i64* null, i64** %884, align 8
  %895 = add nsw i32 %894, 1
  store i32 %895, i32* %806, align 4
  %896 = load i8, i8* %893, align 1
  %897 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %885, align 8
  %898 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %896, %"class.v8::internal::Handle.974"* nonnull %5, %"class.v8::internal::Isolate"* %897) #9
  %899 = icmp eq i32 %898, 1
  br i1 %899, label %901, label %900, !prof !2

900:                                              ; preds = %892
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

901:                                              ; preds = %892
  %902 = load i64, i64* %886, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %883)
  %903 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %887, align 8
  %904 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %888, align 8
  %905 = icmp eq %"class.v8::internal::Handle.974"* %903, %904
  %906 = ptrtoint %"class.v8::internal::Handle.974"* %904 to i64
  br i1 %905, label %911, label %907

907:                                              ; preds = %901
  %908 = bitcast %"class.v8::internal::Handle.974"* %903 to i64*
  store i64 %902, i64* %908, align 8
  %909 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %903, i64 1
  %910 = ptrtoint %"class.v8::internal::Handle.974"* %909 to i64
  store i64 %910, i64* %889, align 8
  br label %955

911:                                              ; preds = %901
  %912 = ptrtoint %"class.v8::internal::Handle.974"* %903 to i64
  %913 = load i64, i64* %890, align 8
  %914 = sub i64 %912, %913
  %915 = ashr exact i64 %914, 3
  %916 = add nsw i64 %915, 1
  %917 = icmp ugt i64 %916, 2305843009213693951
  br i1 %917, label %918, label %920

918:                                              ; preds = %911
  %919 = bitcast %"class.std::__1::vector.972"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %919) #13
  unreachable

920:                                              ; preds = %911
  %921 = sub i64 %906, %913
  %922 = ashr exact i64 %921, 3
  %923 = icmp ult i64 %922, 1152921504606846975
  br i1 %923, label %924, label %932

924:                                              ; preds = %920
  %925 = ashr exact i64 %921, 2
  %926 = icmp ult i64 %925, %916
  %927 = select i1 %926, i64 %916, i64 %925
  %928 = icmp eq i64 %927, 0
  br i1 %928, label %937, label %929

929:                                              ; preds = %924
  %930 = icmp ugt i64 %927, 2305843009213693951
  br i1 %930, label %931, label %932

931:                                              ; preds = %929
  call void @abort() #13
  unreachable

932:                                              ; preds = %929, %920
  %933 = phi i64 [ %927, %929 ], [ 2305843009213693951, %920 ]
  %934 = shl i64 %933, 3
  %935 = call i8* @_Znwm(i64 %934) #14
  %936 = bitcast i8* %935 to %"class.v8::internal::Handle.974"*
  br label %937

937:                                              ; preds = %932, %924
  %938 = phi i64 [ %933, %932 ], [ 0, %924 ]
  %939 = phi i8* [ %935, %932 ], [ null, %924 ]
  %940 = phi %"class.v8::internal::Handle.974"* [ %936, %932 ], [ null, %924 ]
  %941 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %940, i64 %915
  %942 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %940, i64 %938
  %943 = ptrtoint %"class.v8::internal::Handle.974"* %942 to i64
  %944 = bitcast %"class.v8::internal::Handle.974"* %941 to i64*
  store i64 %902, i64* %944, align 8
  %945 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %941, i64 1
  %946 = ptrtoint %"class.v8::internal::Handle.974"* %945 to i64
  %947 = ptrtoint %"class.v8::internal::Handle.974"* %940 to i64
  %948 = icmp sgt i64 %914, 0
  br i1 %948, label %949, label %951

949:                                              ; preds = %937
  %950 = inttoptr i64 %913 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %939, i8* align 8 %950, i64 %914, i1 false) #9
  br label %951

951:                                              ; preds = %949, %937
  store i64 %947, i64* %890, align 8
  store i64 %946, i64* %889, align 8
  store i64 %943, i64* %891, align 8
  %952 = icmp eq i64 %913, 0
  br i1 %952, label %955, label %953

953:                                              ; preds = %951
  %954 = inttoptr i64 %913 to i8*
  call void @_ZdlPv(i8* %954) #14
  br label %955

955:                                              ; preds = %907, %951, %953
  %956 = load i8*, i8** %804, align 8
  %957 = load i32, i32* %806, align 4
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds i8, i8* %956, i64 %958
  %960 = load i8, i8* %959, align 1
  %961 = icmp eq i8 %960, 11
  br i1 %961, label %962, label %892

962:                                              ; preds = %955, %874
  %963 = phi i32 [ %877, %874 ], [ %957, %955 ]
  %964 = add nsw i32 %963, 1
  store i32 %964, i32* %806, align 4
  %965 = load i64, i64* %2, align 8
  %966 = bitcast %"class.v8::internal::Deserializer::RelocInfoVisitor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %966) #9
  %967 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %10, i64 0, i32 0
  store %"class.v8::internal::Deserializer"* %0, %"class.v8::internal::Deserializer"** %967, align 8
  %968 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %10, i64 0, i32 1
  store %"class.std::__1::vector.972"* %9, %"class.std::__1::vector.972"** %968, align 8
  %969 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %10, i64 0, i32 2
  store i32 0, i32* %969, align 8
  %970 = bitcast %"class.v8::internal::RelocIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %970) #9
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %11, i64 %965, i32 7998) #9
  %971 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %11, i64 0, i32 3
  %972 = load i8, i8* %971, align 8, !range !4
  %973 = icmp eq i8 %972, 0
  br i1 %973, label %974, label %976

974:                                              ; preds = %962
  %975 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %11, i64 0, i32 2
  br label %987

976:                                              ; preds = %987, %962
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %970) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %966) #9
  %977 = add nuw nsw i32 %871, 4
  %978 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %9, i64 0, i32 0, i32 0
  %979 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %978, align 8
  %980 = icmp eq %"class.v8::internal::Handle.974"* %979, null
  br i1 %980, label %986, label %981

981:                                              ; preds = %976
  %982 = ptrtoint %"class.v8::internal::Handle.974"* %979 to i64
  %983 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %9, i64 0, i32 0, i32 1
  %984 = bitcast %"class.v8::internal::Handle.974"** %983 to i64*
  store i64 %982, i64* %984, align 8
  %985 = bitcast %"class.v8::internal::Handle.974"* %979 to i8*
  call void @_ZdlPv(i8* %985) #14
  br label %986

986:                                              ; preds = %976, %981
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #9
  br label %1291

987:                                              ; preds = %974, %987
  call void @_ZN2v88internal9RelocInfo5VisitINS0_12Deserializer16RelocInfoVisitorEEEvPT_(%"class.v8::internal::RelocInfo"* %975, %"class.v8::internal::Deserializer::RelocInfoVisitor"* nonnull %10)
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %11) #9
  %988 = load i8, i8* %971, align 8, !range !4
  %989 = icmp eq i8 %988, 0
  br i1 %989, label %987, label %976

990:                                              ; preds = %4
  %991 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %992 = load i8*, i8** %991, align 8
  %993 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %994 = load i32, i32* %993, align 4
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds i8, i8* %992, i64 %995
  %997 = load i8, i8* %996, align 1
  %998 = zext i8 %997 to i32
  %999 = add nsw i32 %994, 1
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds i8, i8* %992, i64 %1000
  %1002 = load i8, i8* %1001, align 1
  %1003 = zext i8 %1002 to i32
  %1004 = shl nuw nsw i32 %1003, 8
  %1005 = or i32 %1004, %998
  %1006 = add nsw i32 %994, 2
  %1007 = sext i32 %1006 to i64
  %1008 = getelementptr inbounds i8, i8* %992, i64 %1007
  %1009 = load i8, i8* %1008, align 1
  %1010 = zext i8 %1009 to i32
  %1011 = shl nuw nsw i32 %1010, 16
  %1012 = or i32 %1005, %1011
  %1013 = add nsw i32 %994, 3
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds i8, i8* %992, i64 %1014
  %1016 = load i8, i8* %1015, align 1
  %1017 = zext i8 %1016 to i32
  %1018 = shl nuw i32 %1017, 24
  %1019 = or i32 %1012, %1018
  %1020 = and i32 %998, 3
  %1021 = add nuw nsw i32 %1020, 1
  %1022 = add nsw i32 %1021, %994
  store i32 %1022, i32* %993, align 4
  %1023 = shl nuw nsw i32 %1021, 3
  %1024 = sub nuw nsw i32 32, %1023
  %1025 = lshr i32 -1, %1024
  %1026 = and i32 %1019, %1025
  %1027 = lshr i32 %1026, 2
  %1028 = add nuw nsw i32 %1027, 18
  %1029 = tail call i32 @_ZN2v88internal12Deserializer18ReadRepeatedObjectINS0_25SlotAccessorForHeapObjectEEEiT_i(%"class.v8::internal::Deserializer"* %0, i64* %2, i32 %3, i32 %1028)
  br label %1291

1030:                                             ; preds = %4
  %1031 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %1032 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1031, align 8
  %1033 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1032, i64 0, i32 2, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0
  %1034 = atomicrmw add i64* %1033, i64 1 seq_cst
  %1035 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %1036 = load i8*, i8** %1035, align 8
  %1037 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %1038 = load i32, i32* %1037, align 4
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds i8, i8* %1036, i64 %1039
  %1041 = load i8, i8* %1040, align 1
  %1042 = zext i8 %1041 to i32
  %1043 = add nsw i32 %1038, 1
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds i8, i8* %1036, i64 %1044
  %1046 = load i8, i8* %1045, align 1
  %1047 = zext i8 %1046 to i32
  %1048 = shl nuw nsw i32 %1047, 8
  %1049 = or i32 %1048, %1042
  %1050 = add nsw i32 %1038, 2
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds i8, i8* %1036, i64 %1051
  %1053 = load i8, i8* %1052, align 1
  %1054 = zext i8 %1053 to i32
  %1055 = shl nuw nsw i32 %1054, 16
  %1056 = or i32 %1049, %1055
  %1057 = add nsw i32 %1038, 3
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds i8, i8* %1036, i64 %1058
  %1060 = load i8, i8* %1059, align 1
  %1061 = zext i8 %1060 to i32
  %1062 = shl nuw i32 %1061, 24
  %1063 = or i32 %1056, %1062
  %1064 = and i32 %1042, 3
  %1065 = add nuw nsw i32 %1064, 1
  %1066 = add nsw i32 %1065, %1038
  store i32 %1066, i32* %1037, align 4
  %1067 = shl nuw nsw i32 %1065, 3
  %1068 = sub nuw nsw i32 32, %1067
  %1069 = lshr i32 -1, %1068
  %1070 = and i32 %1063, %1069
  %1071 = lshr i32 %1070, 2
  %1072 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1031, align 8
  %1073 = zext i32 %1071 to i64
  %1074 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore8AllocateEPNS0_7IsolateEmNS0_10SharedFlagENS0_15InitializedFlagE(%"class.v8::internal::Isolate"* %1072, i64 %1073, i8 zeroext 0, i8 zeroext 0) #9
  %1075 = icmp eq %"class.v8::internal::BackingStore"* %1074, null
  br i1 %1075, label %1076, label %1077, !prof !5

1076:                                             ; preds = %1030
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  unreachable

1077:                                             ; preds = %1030
  %1078 = ptrtoint %"class.v8::internal::BackingStore"* %1074 to i64
  %1079 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %1074, i64 0, i32 0
  %1080 = load i8*, i8** %1079, align 8
  %1081 = load i8*, i8** %1035, align 8
  %1082 = load i32, i32* %1037, align 4
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds i8, i8* %1081, i64 %1083
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1080, i8* align 1 %1084, i64 %1073, i1 false) #9
  %1085 = load i32, i32* %1037, align 4
  %1086 = add nsw i32 %1085, %1071
  store i32 %1086, i32* %1037, align 4
  %1087 = bitcast %"class.std::__1::shared_ptr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1087) #9
  %1088 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %12, i64 0, i32 0
  store %"class.v8::internal::BackingStore"* %1074, %"class.v8::internal::BackingStore"** %1088, align 8
  %1089 = tail call i8* @_Znwm(i64 32) #14
  %1090 = bitcast i8* %1089 to i32 (...)***
  %1091 = getelementptr inbounds i8, i8* %1089, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1091, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1090, align 8
  %1092 = getelementptr inbounds i8, i8* %1089, i64 24
  %1093 = bitcast i8* %1092 to i64*
  store i64 %1078, i64* %1093, align 8
  %1094 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %12, i64 0, i32 1
  %1095 = bitcast %"class.std::__1::__shared_weak_count"** %1094 to i8**
  store i8* %1089, i8** %1095, align 8
  %1096 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 1
  %1097 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %1096, align 8
  %1098 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %1099 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %1098, align 8
  %1100 = icmp ult %"class.std::__1::shared_ptr"* %1097, %1099
  br i1 %1100, label %1101, label %1110

1101:                                             ; preds = %1077
  %1102 = bitcast %"class.std::__1::shared_ptr"* %1097 to i64*
  store i64 %1078, i64* %1102, align 8
  %1103 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %1097, i64 0, i32 1
  %1104 = bitcast %"class.std::__1::__shared_weak_count"** %1094 to i64*
  %1105 = load i64, i64* %1104, align 8
  %1106 = bitcast %"class.std::__1::__shared_weak_count"** %1103 to i64*
  store i64 %1105, i64* %1106, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1087, i8 0, i64 16, i1 false) #9
  %1107 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %1097, i64 1
  %1108 = ptrtoint %"class.std::__1::shared_ptr"* %1107 to i64
  %1109 = bitcast %"class.std::__1::shared_ptr"** %1096 to i64*
  store i64 %1108, i64* %1109, align 8
  br label %1124

1110:                                             ; preds = %1077
  %1111 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1197"* %1111, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %12) #9
  %1112 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %1094, align 8
  %1113 = bitcast %"class.std::__1::__shared_weak_count"* %1112 to void (%"class.std::__1::__shared_count"*)***
  %1114 = icmp eq %"class.std::__1::__shared_weak_count"* %1112, null
  br i1 %1114, label %1124, label %1115

1115:                                             ; preds = %1110
  %1116 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1112, i64 0, i32 0, i32 1
  %1117 = atomicrmw add i64* %1116, i64 -1 acq_rel
  %1118 = icmp eq i64 %1117, 0
  br i1 %1118, label %1119, label %1124

1119:                                             ; preds = %1115
  %1120 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1112, i64 0, i32 0
  %1121 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %1113, align 8
  %1122 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1121, i64 2
  %1123 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %1122, align 8
  call void %1123(%"class.std::__1::__shared_count"* %1120) #9
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1112) #9
  br label %1124

1124:                                             ; preds = %1101, %1119, %1115, %1110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1087) #9
  %1125 = atomicrmw sub i64* %1033, i64 1 seq_cst
  br label %1291

1126:                                             ; preds = %4, %4
  %1127 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %1128 = load i8*, i8** %1127, align 8
  %1129 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %1130 = load i32, i32* %1129, align 4
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds i8, i8* %1128, i64 %1131
  %1133 = load i8, i8* %1132, align 1
  %1134 = zext i8 %1133 to i32
  %1135 = add nsw i32 %1130, 1
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds i8, i8* %1128, i64 %1136
  %1138 = load i8, i8* %1137, align 1
  %1139 = add nsw i32 %1130, 2
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds i8, i8* %1128, i64 %1140
  %1142 = load i8, i8* %1141, align 1
  %1143 = add nsw i32 %1130, 3
  %1144 = sext i32 %1143 to i64
  %1145 = getelementptr inbounds i8, i8* %1128, i64 %1144
  %1146 = load i8, i8* %1145, align 1
  %1147 = and i32 %1134, 3
  %1148 = add nuw nsw i32 %1147, 1
  %1149 = add nsw i32 %1148, %1130
  store i32 %1149, i32* %1129, align 4
  %1150 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %1151 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1150, align 8
  %1152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1151, i64 0, i32 94
  %1153 = load i64*, i64** %1152, align 8
  %1154 = icmp eq i64* %1153, null
  br i1 %1154, label %1173, label %1155

1155:                                             ; preds = %1126
  %1156 = zext i8 %1138 to i32
  %1157 = shl nuw nsw i32 %1156, 8
  %1158 = or i32 %1157, %1134
  %1159 = zext i8 %1142 to i32
  %1160 = shl nuw nsw i32 %1159, 16
  %1161 = or i32 %1158, %1160
  %1162 = zext i8 %1146 to i32
  %1163 = shl nuw i32 %1162, 24
  %1164 = or i32 %1161, %1163
  %1165 = shl nuw nsw i32 %1148, 3
  %1166 = sub nuw nsw i32 32, %1165
  %1167 = lshr i32 -1, %1166
  %1168 = and i32 %1164, %1167
  %1169 = lshr i32 %1168, 2
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds i64, i64* %1153, i64 %1170
  %1172 = load i64, i64* %1171, align 8
  br label %1173

1173:                                             ; preds = %1126, %1155
  %1174 = phi i64 [ %1172, %1155 ], [ ptrtoint (void ()* @_ZN2v88internal12_GLOBAL__N_128NoExternalReferencesCallbackEv to i64), %1126 ]
  %1175 = load i64, i64* %2, align 8
  %1176 = sext i32 %3 to i64
  %1177 = add nsw i64 %1176, -1
  %1178 = add i64 %1177, %1175
  %1179 = inttoptr i64 %1178 to i64*
  store i64 %1174, i64* %1179, align 1
  br label %1291

1180:                                             ; preds = %4
  %1181 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %1182 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1181, align 8
  %1183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1182, i64 0, i32 0, i32 4
  %1184 = load i64, i64* %1183, align 8
  %1185 = and i64 %1184, 4294967295
  %1186 = icmp eq i64 %1185, 0
  tail call void @llvm.assume(i1 %1186) #9
  %1187 = load i64, i64* %2, align 8
  %1188 = sext i32 %3 to i64
  %1189 = add nsw i64 %1188, -1
  %1190 = add i64 %1189, %1187
  %1191 = inttoptr i64 %1190 to i32*
  store atomic volatile i32 3, i32* %1191 monotonic, align 4
  br label %1291

1192:                                             ; preds = %4
  %1193 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 1, i8* %1193, align 1
  br label %1291

1194:                                             ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %1195 = zext i8 %1 to i64
  %1196 = add nuw nsw i64 %1195, 65472
  %1197 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %1198 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1197, align 8
  %1199 = and i64 %1196, 65535
  %1200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1198, i64 0, i32 0, i32 7, i32 0, i64 %1199
  %1201 = load i64, i64* %1200, align 8
  %1202 = load i64, i64* %2, align 8
  %1203 = sext i32 %3 to i64
  %1204 = add nsw i64 %1203, -1
  %1205 = add i64 %1204, %1202
  %1206 = trunc i64 %1201 to i32
  %1207 = inttoptr i64 %1205 to i32*
  store atomic volatile i32 %1206, i32* %1207 monotonic, align 4
  %1208 = load i64, i64* %2, align 8
  %1209 = and i64 %1201, 1
  %1210 = icmp ne i64 %1209, 0
  %1211 = icmp ne i32 %1206, 3
  %1212 = and i1 %1211, %1210
  br i1 %1212, label %1213, label %1291

1213:                                             ; preds = %1194
  %1214 = and i64 %1208, -262144
  %1215 = or i64 %1214, 8
  %1216 = inttoptr i64 %1215 to i64*
  %1217 = load i64, i64* %1216, align 8
  %1218 = and i64 %1217, 262144
  %1219 = icmp eq i64 %1218, 0
  br i1 %1219, label %1291, label %1220

1220:                                             ; preds = %1213
  %1221 = and i64 %1201, -3
  %1222 = or i64 %1214, 16
  %1223 = inttoptr i64 %1222 to %"class.v8::internal::Heap"**
  %1224 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1223, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1224, i64 %1208, i64 %1205, i64 %1221) #9
  br label %1291

1225:                                             ; preds = %4, %4, %4, %4, %4, %4, %4, %4
  %1226 = zext i8 %1 to i64
  %1227 = add nsw i64 %1226, -144
  %1228 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %1227, i32 0, i32 0
  %1229 = load i64*, i64** %1228, align 8
  %1230 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %1231 = load i8, i8* %1230, align 1, !range !4
  store i8 0, i8* %1230, align 1
  %1232 = load i64, i64* %1229, align 8
  %1233 = icmp eq i8 %1231, 0
  %1234 = or i64 %1232, 2
  %1235 = select i1 %1233, i64 %1232, i64 %1234
  %1236 = load i64, i64* %2, align 8
  %1237 = sext i32 %3 to i64
  %1238 = add nsw i64 %1237, -1
  %1239 = add i64 %1238, %1236
  %1240 = trunc i64 %1235 to i32
  %1241 = inttoptr i64 %1239 to i32*
  store atomic volatile i32 %1240, i32* %1241 monotonic, align 4
  %1242 = load i64, i64* %2, align 8
  %1243 = and i64 %1235, 1
  %1244 = icmp ne i64 %1243, 0
  %1245 = icmp ne i32 %1240, 3
  %1246 = and i1 %1245, %1244
  br i1 %1246, label %1247, label %1291

1247:                                             ; preds = %1225
  %1248 = and i64 %1242, -262144
  %1249 = or i64 %1248, 8
  %1250 = inttoptr i64 %1249 to i64*
  %1251 = load i64, i64* %1250, align 8
  %1252 = and i64 %1251, 262144
  %1253 = icmp eq i64 %1252, 0
  br i1 %1253, label %1291, label %1254

1254:                                             ; preds = %1247
  %1255 = and i64 %1235, -3
  %1256 = or i64 %1248, 16
  %1257 = inttoptr i64 %1256 to %"class.v8::internal::Heap"**
  %1258 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1257, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1258, i64 %1242, i64 %1239, i64 %1255) #9
  br label %1291

1259:                                             ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %1260 = zext i8 %1 to i32
  %1261 = add nsw i32 %1260, -95
  %1262 = load i64, i64* %2, align 8
  %1263 = sext i32 %3 to i64
  %1264 = add nsw i64 %1263, -1
  %1265 = add i64 %1264, %1262
  %1266 = inttoptr i64 %1265 to i32*
  %1267 = sext i32 %1261 to i64
  %1268 = getelementptr inbounds i32, i32* %1266, i64 %1267
  %1269 = icmp sgt i32 %1261, 0
  br i1 %1269, label %1270, label %1291

1270:                                             ; preds = %1259
  %1271 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %1272 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %1273 = load i32, i32* %1272, align 4
  br label %1274

1274:                                             ; preds = %1274, %1270
  %1275 = phi i32 [ %1273, %1270 ], [ %1284, %1274 ]
  %1276 = phi i32* [ %1266, %1270 ], [ %1282, %1274 ]
  %1277 = load i8*, i8** %1271, align 8
  %1278 = sext i32 %1275 to i64
  %1279 = getelementptr inbounds i8, i8* %1277, i64 %1278
  %1280 = bitcast i8* %1279 to i32*
  %1281 = load i32, i32* %1280, align 1
  store atomic volatile i32 %1281, i32* %1276 monotonic, align 4
  %1282 = getelementptr inbounds i32, i32* %1276, i64 1
  %1283 = load i32, i32* %1272, align 4
  %1284 = add i32 %1283, 4
  store i32 %1284, i32* %1272, align 4
  %1285 = icmp ult i32* %1282, %1268
  br i1 %1285, label %1274, label %1291

1286:                                             ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %1287 = zext i8 %1 to i32
  %1288 = add nsw i32 %1287, -126
  %1289 = tail call i32 @_ZN2v88internal12Deserializer18ReadRepeatedObjectINS0_25SlotAccessorForHeapObjectEEEiT_i(%"class.v8::internal::Deserializer"* %0, i64* %2, i32 %3, i32 %1288)
  br label %1291

1290:                                             ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

1291:                                             ; preds = %1274, %791, %781, %735, %1259, %1254, %1247, %1225, %1220, %1213, %1194, %727, %732, %632, %625, %617, %610, %538, %484, %477, %463, %458, %451, %391, %386, %379, %359, %302, %295, %235, %230, %223, %123, %118, %111, %44, %39, %32, %13, %4, %1286, %1192, %1180, %1173, %1124, %990, %986, %633, %489
  %1292 = phi i32 [ %1289, %1286 ], [ 0, %1192 ], [ 1, %1180 ], [ 2, %1173 ], [ 0, %1124 ], [ %1029, %990 ], [ %977, %986 ], [ 1, %633 ], [ 2, %489 ], [ 0, %4 ], [ 1, %13 ], [ 1, %32 ], [ 1, %39 ], [ 1, %44 ], [ 1, %111 ], [ 1, %118 ], [ 1, %123 ], [ 1, %223 ], [ 1, %230 ], [ 1, %235 ], [ 1, %295 ], [ 1, %302 ], [ 1, %359 ], [ 1, %379 ], [ 1, %386 ], [ 1, %391 ], [ 1, %451 ], [ 1, %458 ], [ 1, %463 ], [ 1, %477 ], [ 1, %484 ], [ 1, %538 ], [ 1, %610 ], [ 1, %617 ], [ 1, %625 ], [ 1, %632 ], [ 0, %732 ], [ 0, %727 ], [ 0, %735 ], [ 1, %1194 ], [ 1, %1213 ], [ 1, %1220 ], [ 1, %1225 ], [ 1, %1247 ], [ 1, %1254 ], [ %1261, %1259 ], [ %772, %781 ], [ %772, %791 ], [ %1261, %1274 ]
  ret i32 %1292
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_24SlotAccessorForRootSlotsEEEihT_(%"class.v8::internal::Deserializer"*, i8 zeroext, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle.974", align 8
  %5 = alloca %"class.v8::internal::Handle.974", align 8
  %6 = alloca %"class.v8::internal::SlotAccessorForRootSlots", align 8
  %7 = alloca %"class.std::__1::shared_ptr", align 8
  %8 = getelementptr inbounds %"class.v8::internal::SlotAccessorForRootSlots", %"class.v8::internal::SlotAccessorForRootSlots"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = inttoptr i64 %2 to i64*
  switch i8 %1, label %837 [
    i8 1, label %10
    i8 2, label %10
    i8 3, label %10
    i8 0, label %10
    i8 4, label %18
    i8 5, label %74
    i8 7, label %163
    i8 6, label %212
    i8 9, label %273
    i8 26, label %322
    i8 19, label %325
    i8 17, label %325
    i8 20, label %368
    i8 23, label %368
    i8 8, label %369
    i8 10, label %864
    i8 24, label %418
    i8 25, label %421
    i8 11, label %422
    i8 15, label %423
    i8 27, label %486
    i8 12, label %503
    i8 13, label %586
    i8 18, label %682
    i8 16, label %682
    i8 21, label %731
    i8 22, label %739
    i8 64, label %741
    i8 65, label %741
    i8 66, label %741
    i8 67, label %741
    i8 68, label %741
    i8 69, label %741
    i8 70, label %741
    i8 71, label %741
    i8 72, label %741
    i8 73, label %741
    i8 74, label %741
    i8 75, label %741
    i8 76, label %741
    i8 77, label %741
    i8 78, label %741
    i8 79, label %741
    i8 80, label %741
    i8 81, label %741
    i8 82, label %741
    i8 83, label %741
    i8 84, label %741
    i8 85, label %741
    i8 86, label %741
    i8 87, label %741
    i8 88, label %741
    i8 89, label %741
    i8 90, label %741
    i8 91, label %741
    i8 92, label %741
    i8 93, label %741
    i8 94, label %741
    i8 95, label %741
    i8 -112, label %749
    i8 -111, label %749
    i8 -110, label %749
    i8 -109, label %749
    i8 -108, label %749
    i8 -107, label %749
    i8 -106, label %749
    i8 -105, label %749
    i8 96, label %760
    i8 97, label %760
    i8 98, label %760
    i8 99, label %760
    i8 100, label %760
    i8 101, label %760
    i8 102, label %760
    i8 103, label %760
    i8 104, label %760
    i8 105, label %760
    i8 106, label %760
    i8 107, label %760
    i8 108, label %760
    i8 109, label %760
    i8 110, label %760
    i8 111, label %760
    i8 112, label %760
    i8 113, label %760
    i8 114, label %760
    i8 115, label %760
    i8 116, label %760
    i8 117, label %760
    i8 118, label %760
    i8 119, label %760
    i8 120, label %760
    i8 121, label %760
    i8 122, label %760
    i8 123, label %760
    i8 124, label %760
    i8 125, label %760
    i8 126, label %760
    i8 127, label %760
    i8 -128, label %783
    i8 -127, label %783
    i8 -126, label %783
    i8 -125, label %783
    i8 -124, label %783
    i8 -123, label %783
    i8 -122, label %783
    i8 -121, label %783
    i8 -120, label %783
    i8 -119, label %783
    i8 -118, label %783
    i8 -117, label %783
    i8 -116, label %783
    i8 -115, label %783
    i8 -114, label %783
    i8 -113, label %783
  ]

10:                                               ; preds = %3, %3, %3, %3
  %11 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %12 = load i8, i8* %11, align 1, !range !4
  store i8 0, i8* %11, align 1
  %13 = tail call i64* @_ZN2v88internal12Deserializer10ReadObjectENS0_13SnapshotSpaceE(%"class.v8::internal::Deserializer"* %0, i8 zeroext %1)
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i8 %12, 0
  %16 = or i64 %14, 2
  %17 = select i1 %15, i64 %14, i64 %16
  store atomic volatile i64 %17, i64* %9 monotonic, align 8
  br label %864

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add nsw i32 %22, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %20, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 8
  %33 = or i32 %32, %26
  %34 = add nsw i32 %22, 2
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %20, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 16
  %40 = or i32 %33, %39
  %41 = add nsw i32 %22, 3
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %20, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 %45, 24
  %47 = or i32 %40, %46
  %48 = and i32 %26, 3
  %49 = add nuw nsw i32 %48, 1
  %50 = add nsw i32 %49, %22
  store i32 %50, i32* %21, align 4
  %51 = shl nuw nsw i32 %49, 3
  %52 = sub nuw nsw i32 32, %51
  %53 = lshr i32 -1, %52
  %54 = and i32 %47, %53
  %55 = lshr i32 %54, 2
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 16, i32 0, i32 0
  %58 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %58, i64 %56, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %63, i32 0, i32 0
  store i64* %60, i64** %64, align 8
  %65 = load i32, i32* %61, align 8
  %66 = add nsw i32 %65, 1
  %67 = and i32 %66, 7
  store i32 %67, i32* %61, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %69 = load i8, i8* %68, align 1, !range !4
  store i8 0, i8* %68, align 1
  %70 = load i64, i64* %60, align 8
  %71 = icmp eq i8 %69, 0
  %72 = or i64 %70, 2
  %73 = select i1 %71, i64 %70, i64 %72
  store atomic volatile i64 %73, i64* %9 monotonic, align 8
  br label %864

74:                                               ; preds = %3
  %75 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = add nsw i32 %78, 1
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %76, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 8
  %89 = or i32 %88, %82
  %90 = add nsw i32 %78, 2
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %76, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 16
  %96 = or i32 %89, %95
  %97 = add nsw i32 %78, 3
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %76, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = shl nuw i32 %101, 24
  %103 = or i32 %96, %102
  %104 = and i32 %82, 3
  %105 = add nuw nsw i32 %104, 1
  %106 = add nsw i32 %105, %78
  store i32 %106, i32* %77, align 4
  %107 = shl nuw nsw i32 %105, 3
  %108 = sub nuw nsw i32 32, %107
  %109 = lshr i32 -1, %108
  %110 = and i32 %103, %109
  %111 = lshr i32 %110, 2
  %112 = sext i32 %106 to i64
  %113 = getelementptr inbounds i8, i8* %76, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = add nsw i32 %106, 1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %76, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = shl nuw nsw i32 %120, 8
  %122 = or i32 %121, %115
  %123 = add nsw i32 %106, 2
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %76, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = shl nuw nsw i32 %127, 16
  %129 = or i32 %122, %128
  %130 = add nsw i32 %106, 3
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %76, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = shl nuw i32 %134, 24
  %136 = or i32 %129, %135
  %137 = and i32 %115, 3
  %138 = add nuw nsw i32 %137, 1
  %139 = add nsw i32 %138, %106
  store i32 %139, i32* %77, align 4
  %140 = shl nuw nsw i32 %138, 3
  %141 = sub nuw nsw i32 32, %140
  %142 = lshr i32 -1, %141
  %143 = and i32 %136, %142
  %144 = lshr i32 %143, 2
  %145 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %146 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %146, i64 0, i32 2, i32 31
  %148 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %147, align 8
  %149 = zext i32 %111 to i64
  %150 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %148, i64 0, i32 3, i32 0, i32 0
  %151 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage"*, %"class.v8::internal::ReadOnlyPage"** %151, i64 %149
  %153 = bitcast %"class.v8::internal::ReadOnlyPage"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = zext i32 %144 to i64
  %156 = add i64 %154, 1
  %157 = add i64 %156, %155
  %158 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %159 = load i8, i8* %158, align 1, !range !4
  store i8 0, i8* %158, align 1
  %160 = icmp eq i8 %159, 0
  %161 = or i64 %157, 2
  %162 = select i1 %160, i64 %157, i64 %161
  store atomic volatile i64 %162, i64* %9 monotonic, align 8
  br label %864

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, i8* %165, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = add nsw i32 %167, 1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %165, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl nuw nsw i32 %176, 8
  %178 = or i32 %177, %171
  %179 = add nsw i32 %167, 2
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %165, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 16
  %185 = or i32 %178, %184
  %186 = and i32 %171, 3
  %187 = add nuw nsw i32 %186, 1
  %188 = add nsw i32 %187, %167
  store i32 %188, i32* %166, align 4
  %189 = shl nuw nsw i32 %187, 3
  %190 = sub nuw nsw i32 32, %189
  %191 = lshr i32 -1, %190
  %192 = and i32 %191, %185
  %193 = lshr i32 %192, 2
  %194 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %195 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %194, align 8
  %196 = and i32 %193, 65535
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %195, i64 0, i32 0, i32 7, i32 0, i64 %197
  %199 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %201, i32 0, i32 0
  store i64* %198, i64** %202, align 8
  %203 = load i32, i32* %199, align 8
  %204 = add nsw i32 %203, 1
  %205 = and i32 %204, 7
  store i32 %205, i32* %199, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %207 = load i8, i8* %206, align 1, !range !4
  store i8 0, i8* %206, align 1
  %208 = load i64, i64* %198, align 8
  %209 = icmp eq i8 %207, 0
  %210 = or i64 %208, 2
  %211 = select i1 %209, i64 %208, i64 %210
  store atomic volatile i64 %211, i64* %9 monotonic, align 8
  br label %864

212:                                              ; preds = %3
  %213 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i8, i8* %214, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = add nsw i32 %216, 1
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %214, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = shl nuw nsw i32 %225, 8
  %227 = or i32 %226, %220
  %228 = add nsw i32 %216, 2
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %214, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = shl nuw nsw i32 %232, 16
  %234 = or i32 %227, %233
  %235 = add nsw i32 %216, 3
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %214, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = shl nuw i32 %239, 24
  %241 = or i32 %234, %240
  %242 = and i32 %220, 3
  %243 = add nuw nsw i32 %242, 1
  %244 = add nsw i32 %243, %216
  store i32 %244, i32* %215, align 4
  %245 = shl nuw nsw i32 %243, 3
  %246 = sub nuw nsw i32 32, %245
  %247 = lshr i32 -1, %246
  %248 = and i32 %241, %247
  %249 = lshr i32 %248, 2
  %250 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %251 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %250, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %251, i64 0, i32 139
  %253 = zext i32 %249 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %251, i64 0, i32 139, i32 0, i32 1
  %255 = bitcast %"class.v8::internal::Object"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.std::__1::vector.541"* %252 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = sub i64 %256, %258
  %260 = ashr exact i64 %259, 3
  %261 = icmp ugt i64 %260, %253
  br i1 %261, label %264, label %262

262:                                              ; preds = %212
  %263 = bitcast %"class.std::__1::vector.541"* %252 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %263) #13
  unreachable

264:                                              ; preds = %212
  %265 = inttoptr i64 %258 to %"class.v8::internal::Object"*
  %266 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %265, i64 %253, i32 0, i32 0
  %267 = load i64, i64* %266, align 8
  %268 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %269 = load i8, i8* %268, align 1, !range !4
  store i8 0, i8* %268, align 1
  %270 = icmp eq i8 %269, 0
  %271 = or i64 %267, 2
  %272 = select i1 %270, i64 %267, i64 %271
  store atomic volatile i64 %272, i64* %9 monotonic, align 8
  br label %864

273:                                              ; preds = %3
  %274 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %275 = load i8*, i8** %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %275, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = add nsw i32 %277, 1
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %275, i64 %283
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i32
  %287 = shl nuw nsw i32 %286, 8
  %288 = or i32 %287, %281
  %289 = add nsw i32 %277, 2
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* %275, i64 %290
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = shl nuw nsw i32 %293, 16
  %295 = or i32 %288, %294
  %296 = add nsw i32 %277, 3
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8, i8* %275, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i32
  %301 = shl nuw i32 %300, 24
  %302 = or i32 %295, %301
  %303 = and i32 %281, 3
  %304 = add nuw nsw i32 %303, 1
  %305 = add nsw i32 %304, %277
  store i32 %305, i32* %276, align 4
  %306 = shl nuw nsw i32 %304, 3
  %307 = sub nuw nsw i32 32, %306
  %308 = lshr i32 -1, %307
  %309 = and i32 %302, %308
  %310 = lshr i32 %309, 2
  %311 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %312 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %312, i64 0, i32 3
  %314 = load %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"** %313, align 8
  %315 = zext i32 %310 to i64
  %316 = tail call i64 @_ZNK2v88internal12ReadOnlyHeap23cached_read_only_objectEm(%"class.v8::internal::ReadOnlyHeap"* %314, i64 %315) #9
  %317 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %318 = load i8, i8* %317, align 1, !range !4
  store i8 0, i8* %317, align 1
  %319 = icmp eq i8 %318, 0
  %320 = or i64 %316, 2
  %321 = select i1 %319, i64 %316, i64 %320
  store atomic volatile i64 %321, i64* %9 monotonic, align 8
  br label %864

322:                                              ; preds = %3
  %323 = tail call i64* @_ZN2v88internal12Deserializer11ReadMetaMapEv(%"class.v8::internal::Deserializer"* %0)
  %324 = load i64, i64* %323, align 8
  store atomic volatile i64 %324, i64* %9 monotonic, align 8
  br label %864

325:                                              ; preds = %3, %3
  %326 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %329 = load i32, i32* %328, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %327, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i32
  %334 = add nsw i32 %329, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i8, i8* %327, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = zext i8 %337 to i32
  %339 = shl nuw nsw i32 %338, 8
  %340 = or i32 %339, %333
  %341 = add nsw i32 %329, 2
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds i8, i8* %327, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i32
  %346 = shl nuw nsw i32 %345, 16
  %347 = or i32 %340, %346
  %348 = add nsw i32 %329, 3
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds i8, i8* %327, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = shl nuw i32 %352, 24
  %354 = or i32 %347, %353
  %355 = and i32 %333, 3
  %356 = add nuw nsw i32 %355, 1
  %357 = add nsw i32 %356, %329
  store i32 %357, i32* %328, align 4
  %358 = shl nuw nsw i32 %356, 3
  %359 = sub nuw nsw i32 32, %358
  %360 = lshr i32 -1, %359
  %361 = and i32 %354, %360
  %362 = lshr i32 %361, 2
  %363 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %364 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %363, align 8
  %365 = zext i32 %362 to i64
  %366 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %364, i64 0, i32 0, i32 8, i32 0, i64 %365
  %367 = load i64, i64* %366, align 8
  store i64 %367, i64* %9, align 1
  br label %864

368:                                              ; preds = %3, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

369:                                              ; preds = %3
  %370 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %371 = load i8*, i8** %370, align 8
  %372 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds i8, i8* %371, i64 %374
  %376 = load i8, i8* %375, align 1
  %377 = zext i8 %376 to i32
  %378 = add nsw i32 %373, 1
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds i8, i8* %371, i64 %379
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i32
  %383 = shl nuw nsw i32 %382, 8
  %384 = or i32 %383, %377
  %385 = add nsw i32 %373, 2
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i8, i8* %371, i64 %386
  %388 = load i8, i8* %387, align 1
  %389 = zext i8 %388 to i32
  %390 = shl nuw nsw i32 %389, 16
  %391 = or i32 %384, %390
  %392 = add nsw i32 %373, 3
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds i8, i8* %371, i64 %393
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i32
  %397 = shl nuw i32 %396, 24
  %398 = or i32 %391, %397
  %399 = and i32 %377, 3
  %400 = add nuw nsw i32 %399, 1
  %401 = add nsw i32 %400, %373
  store i32 %401, i32* %372, align 4
  %402 = shl nuw nsw i32 %400, 3
  %403 = sub nuw nsw i32 32, %402
  %404 = lshr i32 -1, %403
  %405 = and i32 %398, %404
  %406 = lshr i32 %405, 2
  %407 = zext i32 %406 to i64
  %408 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 2, i32 0, i32 0
  %409 = load %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"** %408, align 8
  %410 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %409, i64 %407, i32 0, i32 0
  %411 = load i64*, i64** %410, align 8
  %412 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %413 = load i8, i8* %412, align 1, !range !4
  store i8 0, i8* %412, align 1
  %414 = load i64, i64* %411, align 8
  %415 = icmp eq i8 %413, 0
  %416 = or i64 %414, 2
  %417 = select i1 %415, i64 %414, i64 %416
  store atomic volatile i64 %417, i64* %9 monotonic, align 8
  br label %864

418:                                              ; preds = %3
  %419 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 0, i8* %419, align 1
  %420 = call i64* @_ZNK2v88internal24SlotAccessorForRootSlots6objectEv(%"class.v8::internal::SlotAccessorForRootSlots"* nonnull %6)
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

421:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

422:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

423:                                              ; preds = %3
  %424 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %425 = load i8*, i8** %424, align 8
  %426 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %427 = load i32, i32* %426, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i8, i8* %425, i64 %428
  %430 = load i8, i8* %429, align 1
  %431 = zext i8 %430 to i32
  %432 = add nsw i32 %427, 1
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds i8, i8* %425, i64 %433
  %435 = load i8, i8* %434, align 1
  %436 = zext i8 %435 to i32
  %437 = shl nuw nsw i32 %436, 8
  %438 = or i32 %437, %431
  %439 = add nsw i32 %427, 2
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds i8, i8* %425, i64 %440
  %442 = load i8, i8* %441, align 1
  %443 = zext i8 %442 to i32
  %444 = shl nuw nsw i32 %443, 16
  %445 = or i32 %438, %444
  %446 = add nsw i32 %427, 3
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds i8, i8* %425, i64 %447
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i32
  %451 = shl nuw i32 %450, 24
  %452 = or i32 %445, %451
  %453 = and i32 %431, 3
  %454 = add nuw nsw i32 %453, 1
  %455 = add nsw i32 %454, %427
  store i32 %455, i32* %426, align 4
  %456 = shl nuw nsw i32 %454, 3
  %457 = sub nuw nsw i32 32, %456
  %458 = lshr i32 -1, %457
  %459 = and i32 %452, %458
  %460 = lshr i32 %459, 2
  %461 = zext i32 %460 to i64
  %462 = getelementptr inbounds i64, i64* %9, i64 %461
  %463 = icmp eq i32 %460, 0
  br i1 %463, label %864, label %464

464:                                              ; preds = %423
  %465 = sext i32 %455 to i64
  %466 = getelementptr inbounds i8, i8* %425, i64 %465
  %467 = bitcast i8* %466 to i64*
  %468 = load i64, i64* %467, align 1
  store atomic volatile i64 %468, i64* %9 monotonic, align 8
  %469 = load i32, i32* %426, align 4
  %470 = add i32 %469, 8
  store i32 %470, i32* %426, align 4
  %471 = icmp eq i32 %460, 1
  br i1 %471, label %864, label %472

472:                                              ; preds = %464
  %473 = getelementptr inbounds i64, i64* %9, i64 1
  br label %474

474:                                              ; preds = %472, %474
  %475 = phi i32 [ %470, %472 ], [ %484, %474 ]
  %476 = phi i64* [ %473, %472 ], [ %482, %474 ]
  %477 = load i8*, i8** %424, align 8
  %478 = sext i32 %475 to i64
  %479 = getelementptr inbounds i8, i8* %477, i64 %478
  %480 = bitcast i8* %479 to i64*
  %481 = load i64, i64* %480, align 1
  store atomic volatile i64 %481, i64* %476 monotonic, align 8
  %482 = getelementptr inbounds i64, i64* %476, i64 1
  %483 = load i32, i32* %426, align 4
  %484 = add i32 %483, 8
  store i32 %484, i32* %426, align 4
  %485 = icmp ult i64* %482, %462
  br i1 %485, label %474, label %864

486:                                              ; preds = %3
  %487 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3
  %488 = tail call i32 @_ZN2v88internal18SnapshotByteSource6GetIntEv(%"class.v8::internal::SnapshotByteSource"* %487)
  %489 = shl nsw i32 %488, 2
  %490 = call i64* @_ZNK2v88internal24SlotAccessorForRootSlots6objectEv(%"class.v8::internal::SlotAccessorForRootSlots"* nonnull %6)
  %491 = load i64, i64* %490, align 8
  %492 = add i64 %491, 19
  %493 = inttoptr i64 %492 to i8*
  %494 = getelementptr inbounds %"class.v8::internal::SnapshotByteSource", %"class.v8::internal::SnapshotByteSource"* %487, i64 0, i32 0
  %495 = load i8*, i8** %494, align 8
  %496 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %497 = load i32, i32* %496, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds i8, i8* %495, i64 %498
  %500 = sext i32 %489 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %493, i8* align 1 %499, i64 %500, i1 false) #9
  %501 = load i32, i32* %496, align 4
  %502 = add nsw i32 %501, %489
  store i32 %502, i32* %496, align 4
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

503:                                              ; preds = %3
  %504 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %505 = load i8*, i8** %504, align 8
  %506 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds i8, i8* %505, i64 %508
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i32
  %512 = add nsw i32 %507, 1
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i8, i8* %505, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i32
  %517 = shl nuw nsw i32 %516, 8
  %518 = or i32 %517, %511
  %519 = add nsw i32 %507, 2
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i8, i8* %505, i64 %520
  %522 = load i8, i8* %521, align 1
  %523 = zext i8 %522 to i32
  %524 = shl nuw nsw i32 %523, 16
  %525 = or i32 %518, %524
  %526 = add nsw i32 %507, 3
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds i8, i8* %505, i64 %527
  %529 = load i8, i8* %528, align 1
  %530 = zext i8 %529 to i32
  %531 = shl nuw i32 %530, 24
  %532 = or i32 %525, %531
  %533 = and i32 %511, 3
  %534 = add nuw nsw i32 %533, 1
  %535 = add nsw i32 %534, %507
  %536 = shl nuw nsw i32 %534, 3
  %537 = sub nuw nsw i32 32, %536
  %538 = lshr i32 -1, %537
  %539 = and i32 %532, %538
  %540 = lshr i32 %539, 2
  %541 = add nuw nsw i32 %540, 18
  %542 = bitcast %"class.v8::internal::Handle.974"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %542) #9
  %543 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %4, i64 0, i32 0, i32 0
  store i64* null, i64** %543, align 8
  %544 = add nsw i32 %535, 1
  store i32 %544, i32* %506, align 4
  %545 = sext i32 %535 to i64
  %546 = getelementptr inbounds i8, i8* %505, i64 %545
  %547 = load i8, i8* %546, align 1
  %548 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %549 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %548, align 8
  %550 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %547, %"class.v8::internal::Handle.974"* nonnull %4, %"class.v8::internal::Isolate"* %549) #9
  %551 = icmp eq i32 %550, 1
  br i1 %551, label %553, label %552, !prof !2

552:                                              ; preds = %503
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

553:                                              ; preds = %503
  %554 = load i64*, i64** %543, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %542) #9
  %555 = zext i32 %541 to i64
  %556 = add nsw i64 %555, -1
  %557 = and i64 %555, 3
  %558 = icmp ult i64 %556, 3
  br i1 %558, label %838, label %559

559:                                              ; preds = %553
  %560 = sub nsw i64 %555, %557
  br label %561

561:                                              ; preds = %561, %559
  %562 = phi i64 [ 0, %559 ], [ %583, %561 ]
  %563 = phi i64 [ %560, %559 ], [ %584, %561 ]
  %564 = load i64, i64* %554, align 8
  %565 = shl nuw nsw i64 %562, 3
  %566 = add i64 %565, %2
  %567 = inttoptr i64 %566 to i64*
  store atomic volatile i64 %564, i64* %567 monotonic, align 8
  %568 = load i64, i64* %554, align 8
  %569 = shl i64 %562, 3
  %570 = or i64 %569, 8
  %571 = add i64 %570, %2
  %572 = inttoptr i64 %571 to i64*
  store atomic volatile i64 %568, i64* %572 monotonic, align 8
  %573 = load i64, i64* %554, align 8
  %574 = shl i64 %562, 3
  %575 = or i64 %574, 16
  %576 = add i64 %575, %2
  %577 = inttoptr i64 %576 to i64*
  store atomic volatile i64 %573, i64* %577 monotonic, align 8
  %578 = load i64, i64* %554, align 8
  %579 = shl i64 %562, 3
  %580 = or i64 %579, 24
  %581 = add i64 %580, %2
  %582 = inttoptr i64 %581 to i64*
  store atomic volatile i64 %578, i64* %582 monotonic, align 8
  %583 = add nuw nsw i64 %562, 4
  %584 = add i64 %563, -4
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %838, label %561

586:                                              ; preds = %3
  %587 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %588 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %587, align 8
  %589 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %588, i64 0, i32 2, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0
  %590 = atomicrmw add i64* %589, i64 1 seq_cst
  %591 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %592 = load i8*, i8** %591, align 8
  %593 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %594 = load i32, i32* %593, align 4
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds i8, i8* %592, i64 %595
  %597 = load i8, i8* %596, align 1
  %598 = zext i8 %597 to i32
  %599 = add nsw i32 %594, 1
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds i8, i8* %592, i64 %600
  %602 = load i8, i8* %601, align 1
  %603 = zext i8 %602 to i32
  %604 = shl nuw nsw i32 %603, 8
  %605 = or i32 %604, %598
  %606 = add nsw i32 %594, 2
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds i8, i8* %592, i64 %607
  %609 = load i8, i8* %608, align 1
  %610 = zext i8 %609 to i32
  %611 = shl nuw nsw i32 %610, 16
  %612 = or i32 %605, %611
  %613 = add nsw i32 %594, 3
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds i8, i8* %592, i64 %614
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = shl nuw i32 %617, 24
  %619 = or i32 %612, %618
  %620 = and i32 %598, 3
  %621 = add nuw nsw i32 %620, 1
  %622 = add nsw i32 %621, %594
  store i32 %622, i32* %593, align 4
  %623 = shl nuw nsw i32 %621, 3
  %624 = sub nuw nsw i32 32, %623
  %625 = lshr i32 -1, %624
  %626 = and i32 %619, %625
  %627 = lshr i32 %626, 2
  %628 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %587, align 8
  %629 = zext i32 %627 to i64
  %630 = tail call %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore8AllocateEPNS0_7IsolateEmNS0_10SharedFlagENS0_15InitializedFlagE(%"class.v8::internal::Isolate"* %628, i64 %629, i8 zeroext 0, i8 zeroext 0) #9
  %631 = icmp eq %"class.v8::internal::BackingStore"* %630, null
  br i1 %631, label %632, label %633, !prof !5

632:                                              ; preds = %586
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  unreachable

633:                                              ; preds = %586
  %634 = ptrtoint %"class.v8::internal::BackingStore"* %630 to i64
  %635 = getelementptr inbounds %"class.v8::internal::BackingStore", %"class.v8::internal::BackingStore"* %630, i64 0, i32 0
  %636 = load i8*, i8** %635, align 8
  %637 = load i8*, i8** %591, align 8
  %638 = load i32, i32* %593, align 4
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds i8, i8* %637, i64 %639
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %636, i8* align 1 %640, i64 %629, i1 false) #9
  %641 = load i32, i32* %593, align 4
  %642 = add nsw i32 %641, %627
  store i32 %642, i32* %593, align 4
  %643 = bitcast %"class.std::__1::shared_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %643) #9
  %644 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %7, i64 0, i32 0
  store %"class.v8::internal::BackingStore"* %630, %"class.v8::internal::BackingStore"** %644, align 8
  %645 = tail call i8* @_Znwm(i64 32) #14
  %646 = bitcast i8* %645 to i32 (...)***
  %647 = getelementptr inbounds i8, i8* %645, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %647, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %646, align 8
  %648 = getelementptr inbounds i8, i8* %645, i64 24
  %649 = bitcast i8* %648 to i64*
  store i64 %634, i64* %649, align 8
  %650 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %7, i64 0, i32 1
  %651 = bitcast %"class.std::__1::__shared_weak_count"** %650 to i8**
  store i8* %645, i8** %651, align 8
  %652 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 1
  %653 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %652, align 8
  %654 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %655 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %654, align 8
  %656 = icmp ult %"class.std::__1::shared_ptr"* %653, %655
  br i1 %656, label %657, label %666

657:                                              ; preds = %633
  %658 = bitcast %"class.std::__1::shared_ptr"* %653 to i64*
  store i64 %634, i64* %658, align 8
  %659 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %653, i64 0, i32 1
  %660 = bitcast %"class.std::__1::__shared_weak_count"** %650 to i64*
  %661 = load i64, i64* %660, align 8
  %662 = bitcast %"class.std::__1::__shared_weak_count"** %659 to i64*
  store i64 %661, i64* %662, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %643, i8 0, i64 16, i1 false) #9
  %663 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %653, i64 1
  %664 = ptrtoint %"class.std::__1::shared_ptr"* %663 to i64
  %665 = bitcast %"class.std::__1::shared_ptr"** %652 to i64*
  store i64 %664, i64* %665, align 8
  br label %680

666:                                              ; preds = %633
  %667 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 15
  call void @_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1197"* %667, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %7) #9
  %668 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %650, align 8
  %669 = bitcast %"class.std::__1::__shared_weak_count"* %668 to void (%"class.std::__1::__shared_count"*)***
  %670 = icmp eq %"class.std::__1::__shared_weak_count"* %668, null
  br i1 %670, label %680, label %671

671:                                              ; preds = %666
  %672 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %668, i64 0, i32 0, i32 1
  %673 = atomicrmw add i64* %672, i64 -1 acq_rel
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %675, label %680

675:                                              ; preds = %671
  %676 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %668, i64 0, i32 0
  %677 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %669, align 8
  %678 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %677, i64 2
  %679 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %678, align 8
  call void %679(%"class.std::__1::__shared_count"* %676) #9
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %668) #9
  br label %680

680:                                              ; preds = %657, %675, %671, %666
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %643) #9
  %681 = atomicrmw sub i64* %589, i64 1 seq_cst
  br label %864

682:                                              ; preds = %3, %3
  %683 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %684 = load i8*, i8** %683, align 8
  %685 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %686 = load i32, i32* %685, align 4
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds i8, i8* %684, i64 %687
  %689 = load i8, i8* %688, align 1
  %690 = zext i8 %689 to i32
  %691 = add nsw i32 %686, 1
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i8, i8* %684, i64 %692
  %694 = load i8, i8* %693, align 1
  %695 = add nsw i32 %686, 2
  %696 = sext i32 %695 to i64
  %697 = getelementptr inbounds i8, i8* %684, i64 %696
  %698 = load i8, i8* %697, align 1
  %699 = add nsw i32 %686, 3
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds i8, i8* %684, i64 %700
  %702 = load i8, i8* %701, align 1
  %703 = and i32 %690, 3
  %704 = add nuw nsw i32 %703, 1
  %705 = add nsw i32 %704, %686
  store i32 %705, i32* %685, align 4
  %706 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %707 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %706, align 8
  %708 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %707, i64 0, i32 94
  %709 = load i64*, i64** %708, align 8
  %710 = icmp eq i64* %709, null
  br i1 %710, label %729, label %711

711:                                              ; preds = %682
  %712 = zext i8 %694 to i32
  %713 = shl nuw nsw i32 %712, 8
  %714 = or i32 %713, %690
  %715 = zext i8 %698 to i32
  %716 = shl nuw nsw i32 %715, 16
  %717 = or i32 %714, %716
  %718 = zext i8 %702 to i32
  %719 = shl nuw i32 %718, 24
  %720 = or i32 %717, %719
  %721 = shl nuw nsw i32 %704, 3
  %722 = sub nuw nsw i32 32, %721
  %723 = lshr i32 -1, %722
  %724 = and i32 %720, %723
  %725 = lshr i32 %724, 2
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds i64, i64* %709, i64 %726
  %728 = load i64, i64* %727, align 8
  br label %729

729:                                              ; preds = %682, %711
  %730 = phi i64 [ %728, %711 ], [ ptrtoint (void ()* @_ZN2v88internal12_GLOBAL__N_128NoExternalReferencesCallbackEv to i64), %682 ]
  store i64 %730, i64* %9, align 1
  br label %864

731:                                              ; preds = %3
  %732 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %733 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %732, align 8
  %734 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %733, i64 0, i32 0, i32 4
  %735 = load i64, i64* %734, align 8
  %736 = and i64 %735, 4294967295
  %737 = icmp eq i64 %736, 0
  tail call void @llvm.assume(i1 %737) #9
  %738 = or i64 %735, 3
  store atomic volatile i64 %738, i64* %9 monotonic, align 8
  br label %864

739:                                              ; preds = %3
  %740 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  store i8 1, i8* %740, align 1
  br label %864

741:                                              ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %742 = zext i8 %1 to i64
  %743 = add nuw nsw i64 %742, 65472
  %744 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %745 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %744, align 8
  %746 = and i64 %743, 65535
  %747 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %745, i64 0, i32 0, i32 7, i32 0, i64 %746
  %748 = load i64, i64* %747, align 8
  store atomic volatile i64 %748, i64* %9 monotonic, align 8
  br label %864

749:                                              ; preds = %3, %3, %3, %3, %3, %3, %3, %3
  %750 = zext i8 %1 to i64
  %751 = add nsw i64 %750, -144
  %752 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 6, i32 0, i64 %751, i32 0, i32 0
  %753 = load i64*, i64** %752, align 8
  %754 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 20
  %755 = load i8, i8* %754, align 1, !range !4
  store i8 0, i8* %754, align 1
  %756 = load i64, i64* %753, align 8
  %757 = icmp eq i8 %755, 0
  %758 = or i64 %756, 2
  %759 = select i1 %757, i64 %756, i64 %758
  store atomic volatile i64 %759, i64* %9 monotonic, align 8
  br label %864

760:                                              ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %761 = zext i8 %1 to i32
  %762 = add nsw i32 %761, -95
  %763 = ashr i32 %762, 1
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds i64, i64* %9, i64 %764
  %766 = icmp sgt i32 %762, 1
  br i1 %766, label %767, label %864

767:                                              ; preds = %760
  %768 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %769 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %770 = load i32, i32* %769, align 4
  br label %771

771:                                              ; preds = %771, %767
  %772 = phi i32 [ %770, %767 ], [ %781, %771 ]
  %773 = phi i64* [ %9, %767 ], [ %779, %771 ]
  %774 = load i8*, i8** %768, align 8
  %775 = sext i32 %772 to i64
  %776 = getelementptr inbounds i8, i8* %774, i64 %775
  %777 = bitcast i8* %776 to i64*
  %778 = load i64, i64* %777, align 1
  store atomic volatile i64 %778, i64* %773 monotonic, align 8
  %779 = getelementptr inbounds i64, i64* %773, i64 1
  %780 = load i32, i32* %769, align 4
  %781 = add i32 %780, 8
  store i32 %781, i32* %769, align 4
  %782 = icmp ult i64* %779, %765
  br i1 %782, label %771, label %864

783:                                              ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %784 = zext i8 %1 to i32
  %785 = add nsw i32 %784, -126
  %786 = icmp sgt i32 %785, 1
  br i1 %786, label %788, label %787, !prof !2

787:                                              ; preds = %783
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #13
  unreachable

788:                                              ; preds = %783
  %789 = bitcast %"class.v8::internal::Handle.974"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %789) #9
  %790 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %5, i64 0, i32 0, i32 0
  store i64* null, i64** %790, align 8
  %791 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %792 = load i8*, i8** %791, align 8
  %793 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %794 = load i32, i32* %793, align 4
  %795 = add nsw i32 %794, 1
  store i32 %795, i32* %793, align 4
  %796 = sext i32 %794 to i64
  %797 = getelementptr inbounds i8, i8* %792, i64 %796
  %798 = load i8, i8* %797, align 1
  %799 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %800 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %799, align 8
  %801 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %798, %"class.v8::internal::Handle.974"* nonnull %5, %"class.v8::internal::Isolate"* %800) #9
  %802 = icmp eq i32 %801, 1
  br i1 %802, label %804, label %803, !prof !2

803:                                              ; preds = %788
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

804:                                              ; preds = %788
  %805 = load i64*, i64** %790, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %789) #9
  %806 = zext i32 %785 to i64
  %807 = add nsw i64 %806, -1
  %808 = and i64 %806, 3
  %809 = icmp ult i64 %807, 3
  br i1 %809, label %851, label %810

810:                                              ; preds = %804
  %811 = sub nsw i64 %806, %808
  br label %812

812:                                              ; preds = %812, %810
  %813 = phi i64 [ 0, %810 ], [ %834, %812 ]
  %814 = phi i64 [ %811, %810 ], [ %835, %812 ]
  %815 = load i64, i64* %805, align 8
  %816 = shl nuw nsw i64 %813, 3
  %817 = add i64 %816, %2
  %818 = inttoptr i64 %817 to i64*
  store atomic volatile i64 %815, i64* %818 monotonic, align 8
  %819 = load i64, i64* %805, align 8
  %820 = shl i64 %813, 3
  %821 = or i64 %820, 8
  %822 = add i64 %821, %2
  %823 = inttoptr i64 %822 to i64*
  store atomic volatile i64 %819, i64* %823 monotonic, align 8
  %824 = load i64, i64* %805, align 8
  %825 = shl i64 %813, 3
  %826 = or i64 %825, 16
  %827 = add i64 %826, %2
  %828 = inttoptr i64 %827 to i64*
  store atomic volatile i64 %824, i64* %828 monotonic, align 8
  %829 = load i64, i64* %805, align 8
  %830 = shl i64 %813, 3
  %831 = or i64 %830, 24
  %832 = add i64 %831, %2
  %833 = inttoptr i64 %832 to i64*
  store atomic volatile i64 %829, i64* %833 monotonic, align 8
  %834 = add nuw nsw i64 %813, 4
  %835 = add i64 %814, -4
  %836 = icmp eq i64 %835, 0
  br i1 %836, label %851, label %812

837:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

838:                                              ; preds = %561, %553
  %839 = phi i64 [ 0, %553 ], [ %583, %561 ]
  %840 = icmp eq i64 %557, 0
  br i1 %840, label %864, label %841

841:                                              ; preds = %838, %841
  %842 = phi i64 [ %848, %841 ], [ %839, %838 ]
  %843 = phi i64 [ %849, %841 ], [ %557, %838 ]
  %844 = load i64, i64* %554, align 8
  %845 = shl nuw nsw i64 %842, 3
  %846 = add i64 %845, %2
  %847 = inttoptr i64 %846 to i64*
  store atomic volatile i64 %844, i64* %847 monotonic, align 8
  %848 = add nuw nsw i64 %842, 1
  %849 = add i64 %843, -1
  %850 = icmp eq i64 %849, 0
  br i1 %850, label %864, label %841, !llvm.loop !9

851:                                              ; preds = %812, %804
  %852 = phi i64 [ 0, %804 ], [ %834, %812 ]
  %853 = icmp eq i64 %808, 0
  br i1 %853, label %864, label %854

854:                                              ; preds = %851, %854
  %855 = phi i64 [ %861, %854 ], [ %852, %851 ]
  %856 = phi i64 [ %862, %854 ], [ %808, %851 ]
  %857 = load i64, i64* %805, align 8
  %858 = shl nuw nsw i64 %855, 3
  %859 = add i64 %858, %2
  %860 = inttoptr i64 %859 to i64*
  store atomic volatile i64 %857, i64* %860 monotonic, align 8
  %861 = add nuw nsw i64 %855, 1
  %862 = add i64 %856, -1
  %863 = icmp eq i64 %862, 0
  br i1 %863, label %864, label %854, !llvm.loop !11

864:                                              ; preds = %851, %854, %771, %838, %841, %474, %464, %423, %760, %3, %749, %741, %739, %731, %729, %680, %369, %325, %322, %273, %264, %163, %74, %18, %10
  %865 = phi i32 [ 1, %749 ], [ 1, %741 ], [ 0, %739 ], [ 1, %731 ], [ 1, %729 ], [ 0, %680 ], [ 1, %369 ], [ 1, %325 ], [ 1, %322 ], [ 1, %273 ], [ 1, %264 ], [ 1, %163 ], [ 1, %74 ], [ 1, %18 ], [ 1, %10 ], [ 0, %3 ], [ 0, %423 ], [ 0, %760 ], [ %460, %464 ], [ %460, %474 ], [ %541, %841 ], [ %541, %838 ], [ %763, %771 ], [ %785, %854 ], [ %785, %851 ]
  ret i32 %865
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::RootVisitor"*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = add i64 %3, 8
  %6 = bitcast %"class.v8::internal::RootVisitor"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %7 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %7, i64 2
  %9 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::RootVisitor"* %0, i32 %1, i8* %2, i64 %3, i64 %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23StringTableInsertionKeyD0Ev(%"class.v8::internal::StringTableInsertionKey"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StringTableInsertionKey"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_15DescriptorArrayEi(%"class.v8::internal::Heap"*, i64, i32) local_unnamed_addr #3

declare i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

declare void @_ZN2v86String29ExternalOneByteStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #3

declare void @_ZN2v86String22ExternalStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal21FlushInstructionCacheEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal35Heap_GenerationalBarrierForCodeSlowENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal7Isolate23embedded_blob_code_sizeEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i8* @_ZNK2v88internal7Isolate18embedded_blob_dataEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal7Isolate23embedded_blob_data_sizeEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #12

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10shared_ptrIN2v88internal12BackingStoreEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1197"*, %"class.std::__1::shared_ptr"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::shared_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1197"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1197"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::shared_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::shared_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::shared_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::shared_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::shared_ptr"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::shared_ptr"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %1, i64 0, i32 1
  %45 = bitcast %"class.std::__1::__shared_weak_count"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::__shared_weak_count"** %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = bitcast %"class.std::__1::shared_ptr"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #9
  %49 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %37, i64 1
  %50 = ptrtoint %"class.std::__1::shared_ptr"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %51, align 8
  %53 = ptrtoint %"class.std::__1::shared_ptr"* %52 to i64
  %54 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  %55 = icmp eq %"class.std::__1::shared_ptr"* %54, %52
  br i1 %55, label %138, label %56

56:                                               ; preds = %34
  %57 = getelementptr %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %54, i64 -1, i32 0
  %58 = ptrtoint %"class.v8::internal::BackingStore"** %57 to i64
  %59 = sub i64 %58, %53
  %60 = lshr i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %56, %64
  %65 = phi %"class.std::__1::shared_ptr"* [ %68, %64 ], [ %37, %56 ]
  %66 = phi %"class.std::__1::shared_ptr"* [ %69, %64 ], [ %54, %56 ]
  %67 = phi i64 [ %79, %64 ], [ %62, %56 ]
  %68 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %65, i64 -1
  %69 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %66, i64 -1
  %70 = bitcast %"class.std::__1::shared_ptr"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::shared_ptr"* %68 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %65, i64 -1, i32 1
  %74 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %66, i64 -1, i32 1
  %75 = bitcast %"class.std::__1::__shared_weak_count"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::__shared_weak_count"** %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = bitcast %"class.std::__1::shared_ptr"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #9
  %79 = add i64 %67, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %64, !llvm.loop !12

81:                                               ; preds = %64, %56
  %82 = phi %"class.std::__1::shared_ptr"* [ undef, %56 ], [ %68, %64 ]
  %83 = phi %"class.std::__1::shared_ptr"* [ %37, %56 ], [ %68, %64 ]
  %84 = phi %"class.std::__1::shared_ptr"* [ %54, %56 ], [ %69, %64 ]
  %85 = icmp ult i64 %59, 48
  br i1 %85, label %134, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"class.std::__1::shared_ptr"* [ %122, %86 ], [ %83, %81 ]
  %88 = phi %"class.std::__1::shared_ptr"* [ %123, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -1
  %90 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -1
  %91 = bitcast %"class.std::__1::shared_ptr"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.std::__1::shared_ptr"* %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -1, i32 1
  %95 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -1, i32 1
  %96 = bitcast %"class.std::__1::__shared_weak_count"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::__shared_weak_count"** %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = bitcast %"class.std::__1::shared_ptr"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #9
  %100 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -2
  %101 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -2
  %102 = bitcast %"class.std::__1::shared_ptr"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::shared_ptr"* %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -2, i32 1
  %106 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -2, i32 1
  %107 = bitcast %"class.std::__1::__shared_weak_count"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::__shared_weak_count"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = bitcast %"class.std::__1::shared_ptr"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #9
  %111 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -3
  %112 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -3
  %113 = bitcast %"class.std::__1::shared_ptr"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::shared_ptr"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -3, i32 1
  %117 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -3, i32 1
  %118 = bitcast %"class.std::__1::__shared_weak_count"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::__shared_weak_count"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = bitcast %"class.std::__1::shared_ptr"* %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #9
  %122 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -4
  %123 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -4
  %124 = bitcast %"class.std::__1::shared_ptr"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.std::__1::shared_ptr"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %87, i64 -4, i32 1
  %128 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %88, i64 -4, i32 1
  %129 = bitcast %"class.std::__1::__shared_weak_count"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.std::__1::__shared_weak_count"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = bitcast %"class.std::__1::shared_ptr"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #9
  %133 = icmp eq %"class.std::__1::shared_ptr"* %123, %52
  br i1 %133, label %134, label %86

134:                                              ; preds = %86, %81
  %135 = phi %"class.std::__1::shared_ptr"* [ %82, %81 ], [ %122, %86 ]
  %136 = load i64, i64* %6, align 8
  %137 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %3, align 8
  br label %138

138:                                              ; preds = %34, %134
  %139 = phi %"class.std::__1::shared_ptr"* [ %137, %134 ], [ %52, %34 ]
  %140 = phi %"class.std::__1::shared_ptr"* [ %135, %134 ], [ %37, %34 ]
  %141 = phi i64 [ %136, %134 ], [ %53, %34 ]
  %142 = ptrtoint %"class.std::__1::shared_ptr"* %140 to i64
  store i64 %142, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %143 = inttoptr i64 %141 to %"class.std::__1::shared_ptr"*
  %144 = icmp eq %"class.std::__1::shared_ptr"* %139, %143
  br i1 %144, label %163, label %145

145:                                              ; preds = %138, %161
  %146 = phi %"class.std::__1::shared_ptr"* [ %147, %161 ], [ %139, %138 ]
  %147 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %146, i64 -1
  %148 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %146, i64 -1, i32 1
  %149 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %148, align 8
  %150 = icmp eq %"class.std::__1::__shared_weak_count"* %149, null
  br i1 %150, label %161, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %149, i64 0, i32 0, i32 1
  %153 = atomicrmw add i64* %152, i64 -1 acq_rel
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %149, i64 0, i32 0
  %157 = bitcast %"class.std::__1::__shared_weak_count"* %149 to void (%"class.std::__1::__shared_count"*)***
  %158 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %158, i64 2
  %160 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %159, align 8
  tail call void %160(%"class.std::__1::__shared_count"* %156) #9
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %149) #9
  br label %161

161:                                              ; preds = %155, %151, %145
  %162 = icmp eq %"class.std::__1::shared_ptr"* %147, %143
  br i1 %162, label %163, label %145

163:                                              ; preds = %161, %138
  %164 = icmp eq i64 %141, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %141 to i8*
  tail call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %163, %165
  ret void
}

declare i64 @_ZNK2v88internal12ReadOnlyHeap23cached_read_only_objectEm(%"class.v8::internal::ReadOnlyHeap"*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal12Deserializer20UnresolvedForwardRefENS_9allocatorIS4_EEE12emplace_backIJNS2_6HandleINS2_10HeapObjectEEEiRNS2_23HeapObjectReferenceTypeEEEEvDpOT_(%"class.std::__1::vector.1204"*, %"class.v8::internal::Handle.974"* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %7, align 8
  %9 = icmp ult %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %6, %8
  %10 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %8 to i64
  br i1 %9, label %11, label %22

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::internal::Handle.974"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = load i32, i32* %2, align 4
  %15 = load i32, i32* %3, align 4
  %16 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %6 to i64*
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %6, i64 0, i32 1
  store i32 %14, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %6, i64 0, i32 2
  store i32 %15, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %6, i64 1
  %20 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %19 to i64
  %21 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %5 to i64*
  store i64 %20, i64* %21, align 8
  br label %85

22:                                               ; preds = %4
  %23 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %6 to i64
  %24 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %5 to i64*
  %25 = bitcast %"class.std::__1::vector.1204"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 4
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 1152921504606846975
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.1204"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #13
  unreachable

33:                                               ; preds = %22
  %34 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %7 to i64*
  %35 = sub i64 %10, %26
  %36 = ashr exact i64 %35, 4
  %37 = icmp ult i64 %36, 576460752303423487
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 3
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 1152921504606846975
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 1152921504606846975, %33 ]
  %48 = shl i64 %47, 4
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %53, i64 %28
  %55 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %53, i64 %52
  %56 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %55 to i64
  %57 = bitcast %"class.v8::internal::Handle.974"* %1 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i32, i32* %2, align 4
  %60 = load i32, i32* %3, align 4
  %61 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %54 to i64*
  store i64 %58, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %53, i64 %28, i32 1
  store i32 %59, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %53, i64 %28, i32 2
  store i32 %60, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %54, i64 1
  %65 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 0
  %67 = load %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %66, align 8
  %68 = load i64, i64* %24, align 8
  %69 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %67 to i64
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 4
  %72 = sub nsw i64 0, %71
  %73 = getelementptr inbounds %"struct.v8::internal::Deserializer::UnresolvedForwardRef", %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %54, i64 %72
  %74 = ptrtoint %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %73 to i64
  %75 = icmp sgt i64 %70, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %51
  %77 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %73 to i8*
  %78 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %70, i1 false) #9
  %79 = load %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"** %66, align 8
  br label %80

80:                                               ; preds = %76, %51
  %81 = phi %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* [ %67, %51 ], [ %79, %76 ]
  store i64 %74, i64* %25, align 8
  store i64 %65, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %82 = icmp eq %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %83, %80, %11
  ret void
}

declare void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, i64, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9RelocInfo5VisitINS0_12Deserializer16RelocInfoVisitorEEEvPT_(%"class.v8::internal::RelocInfo"*, %"class.v8::internal::Deserializer::RelocInfoVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = add i8 %4, -3
  %6 = icmp ult i8 %5, 3
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN2v88internal12Deserializer16RelocInfoVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* %1, i64 undef, %"class.v8::internal::RelocInfo"* %0)
  br label %100

8:                                                ; preds = %2
  %9 = icmp slt i8 %4, 3
  br i1 %9, label %10, label %33

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %1, i64 0, i32 1
  %12 = load %"class.std::__1::vector.972"*, %"class.std::__1::vector.972"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.972", %"class.std::__1::vector.972"* %12, i64 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::Handle.974"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.972"* %12 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ugt i64 %23, %16
  br i1 %24, label %27, label %25

25:                                               ; preds = %10
  %26 = bitcast %"class.std::__1::vector.972"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %26) #13
  unreachable

27:                                               ; preds = %10
  %28 = inttoptr i64 %21 to %"class.v8::internal::Handle.974"*
  %29 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %28, i64 %16, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 63
  tail call void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"* %0, i64 %32, i32 4, i32 0) #9
  br label %100

33:                                               ; preds = %8
  switch i8 %4, label %100 [
    i8 9, label %34
    i8 10, label %37
    i8 11, label %37
    i8 8, label %96
    i8 12, label %97
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  tail call void @_ZN2v88internal12Deserializer16RelocInfoVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* %1, i64 %36, %"class.v8::internal::RelocInfo"* %0)
  br label %100

37:                                               ; preds = %33, %33
  %38 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Deserializer::RelocInfoVisitor", %"class.v8::internal::Deserializer::RelocInfoVisitor"* %1, i64 0, i32 0
  %41 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %41, i64 0, i32 3, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %41, i64 0, i32 3, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %44, align 4
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds i8, i8* %43, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 20
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #13
  unreachable

52:                                               ; preds = %37
  %53 = load %"class.v8::internal::Deserializer"*, %"class.v8::internal::Deserializer"** %40, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %53, i64 0, i32 3, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %53, i64 0, i32 3, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %55, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = add nsw i32 %57, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %55, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 8
  %68 = or i32 %67, %61
  %69 = add nsw i32 %57, 2
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %55, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 16
  %75 = or i32 %68, %74
  %76 = add nsw i32 %57, 3
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %55, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl nuw i32 %80, 24
  %82 = or i32 %75, %81
  %83 = and i32 %61, 3
  %84 = add nuw nsw i32 %83, 1
  %85 = add nsw i32 %84, %57
  store i32 %85, i32* %56, align 4
  %86 = shl nuw nsw i32 %84, 3
  %87 = sub nuw nsw i32 32, %86
  %88 = lshr i32 -1, %87
  %89 = and i32 %82, %88
  %90 = lshr i32 %89, 2
  %91 = add i64 %39, 63
  %92 = zext i32 %90 to i64
  %93 = add i64 %91, %92
  %94 = bitcast %"class.v8::internal::RelocInfo"* %0 to i64**
  %95 = load i64*, i64** %94, align 8
  store i64 %93, i64* %95, align 1
  br label %100

96:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

97:                                               ; preds = %33
  %98 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  tail call void @_ZN2v88internal12Deserializer16RelocInfoVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Deserializer::RelocInfoVisitor"* %1, i64 %99, %"class.v8::internal::RelocInfo"* %0)
  br label %100

100:                                              ; preds = %33, %27, %52, %97, %34, %7
  ret void
}

declare void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"*) local_unnamed_addr #3

declare %"class.v8::internal::BackingStore"* @_ZN2v88internal12BackingStore8AllocateEPNS0_7IsolateEmNS0_10SharedFlagENS0_15InitializedFlagE(%"class.v8::internal::Isolate"*, i64, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_128NoExternalReferencesCallbackEv() #8 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #9
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::BackingStore"*, %"class.v8::internal::BackingStore"** %2, align 8
  %4 = icmp eq %"class.v8::internal::BackingStore"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v88internal12BackingStoreD1Ev(%"class.v8::internal::BackingStore"* nonnull %3) #9
  %6 = bitcast %"class.v8::internal::BackingStore"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN2v88internal12BackingStoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal12BackingStoreD1Ev(%"class.v8::internal::BackingStore"*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12Deserializer18ReadRepeatedObjectINS0_25SlotAccessorForHeapObjectEEEiT_i(%"class.v8::internal::Deserializer"*, i64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle.974", align 8
  %6 = icmp sgt i32 %3, 1
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #13
  unreachable

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::internal::Handle.974"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.v8::internal::Handle.974", %"class.v8::internal::Handle.974"* %5, i64 0, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 4
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, i8* %12, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %"class.v8::internal::Deserializer", %"class.v8::internal::Deserializer"* %0, i64 0, i32 1
  %20 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %21 = call i32 @_ZN2v88internal12Deserializer22ReadSingleBytecodeDataINS0_21SlotAccessorForHandleEEEihT_(%"class.v8::internal::Deserializer"* %0, i8 zeroext %18, %"class.v8::internal::Handle.974"* nonnull %5, %"class.v8::internal::Isolate"* %20) #9
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %8
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

24:                                               ; preds = %8
  %25 = load i64*, i64** %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %26 = sext i32 %2 to i64
  %27 = add nsw i64 %26, -1
  %28 = zext i32 %3 to i64
  br label %30

29:                                               ; preds = %56
  ret i32 %3

30:                                               ; preds = %56, %24
  %31 = phi i64 [ 0, %24 ], [ %57, %56 ]
  %32 = load i64, i64* %25, align 8
  %33 = load i64, i64* %1, align 8
  %34 = shl nuw nsw i64 %31, 2
  %35 = add nsw i64 %27, %34
  %36 = add i64 %35, %33
  %37 = trunc i64 %32 to i32
  %38 = inttoptr i64 %36 to i32*
  store atomic volatile i32 %37, i32* %38 monotonic, align 4
  %39 = load i64, i64* %1, align 8
  %40 = and i64 %32, 1
  %41 = icmp ne i64 %40, 0
  %42 = icmp ne i32 %37, 3
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %56

44:                                               ; preds = %30
  %45 = and i64 %39, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 262144
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %44
  %52 = and i64 %32, -3
  %53 = or i64 %45, 16
  %54 = inttoptr i64 %53 to %"class.v8::internal::Heap"**
  %55 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %54, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %55, i64 %39, i64 %36, i64 %52) #9
  br label %56

56:                                               ; preds = %30, %44, %51
  %57 = add nuw nsw i64 %31, 1
  %58 = icmp eq i64 %57, %28
  br i1 %58, label %29, label %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNK2v88internal24SlotAccessorForRootSlots6objectEv(%"class.v8::internal::SlotAccessorForRootSlots"*) local_unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable
}

declare i64 @_ZN2v88internal4Heap34AllocateRawWithRetryOrFailSlowPathEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"*, i32, i8 zeroext, i32, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 18466662}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_7IsolateE: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_7IsolateE"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
