; ModuleID = '../../third_party/blink/renderer/core/css/resolver/style_cascade.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/style_cascade.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Vector<blink::CascadeInterpolations::Entry, 4, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<blink::CascadeInterpolations::Entry, 4, WTF::PartitionAllocator> >::InstanceStorage" = type { %"class.WTF::Vector.1758"* }
%"class.WTF::Vector.1758" = type { %"class.WTF::VectorBuffer.1759" }
%"class.WTF::VectorBuffer.1759" = type { %"class.WTF::VectorBufferBase.1760", [64 x i8] }
%"class.WTF::VectorBufferBase.1760" = type { %"struct.blink::CascadeInterpolations::Entry"*, i32, i32 }
%"struct.blink::CascadeInterpolations::Entry" = type <{ %"class.blink::HeapHashMap.1733"*, i8, [7 x i8] }>
%"class.blink::HeapHashMap.1733" = type { %"class.WTF::HashMap.1736" }
%"class.WTF::HashMap.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"struct.WTF::KeyValuePair.1739"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1739" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1740" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.1603, %"class.WTF::AtomicString" }
%union.anon.1603 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::HeapVector.1742"* }
%"class.blink::HeapVector.1742" = type { %"class.WTF::Vector.1745" }
%"class.WTF::Vector.1745" = type { %"class.WTF::VectorBuffer.1746" }
%"class.WTF::VectorBuffer.1746" = type { %"class.WTF::VectorBufferBase.1747", [8 x i8] }
%"class.WTF::VectorBufferBase.1747" = type { %"class.blink::Member.1748"*, i32, i32 }
%"class.blink::Member.1748" = type { %"class.blink::MemberBase.1749" }
%"class.blink::MemberBase.1749" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1828 }
%union.anon.1828 = type { double }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.190", i32, [4 x i8], %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.326", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.342", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.360", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.367", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.306", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__cxx_atomic_impl.229" }
%"struct.std::__1::__cxx_atomic_impl.229" = type { %"struct.std::__1::__cxx_atomic_base_impl.230" }
%"struct.std::__1::__cxx_atomic_base_impl.230" = type { i64 }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::Worklist.237"* }
%"class.blink::Worklist.237" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::Worklist.244"* }
%"class.blink::Worklist.244" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist.251"* }
%"class.blink::Worklist.251" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::Worklist.258"* }
%"class.blink::Worklist.258" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist.265"* }
%"class.blink::Worklist.265" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist.279"* }
%"class.blink::Worklist.279" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.286", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.300", [4 x i8] }>
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288", %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { i64 }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { float }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.309", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.318" }
%"class.WTF::Vector.318" = type { %"class.WTF::VectorBuffer.319" }
%"class.WTF::VectorBuffer.319" = type { %"class.WTF::VectorBufferBase.320" }
%"class.WTF::VectorBufferBase.320" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.334" }
%"class.WTF::VectorBuffer.334" = type { %"class.WTF::VectorBufferBase.335" }
%"class.WTF::VectorBufferBase.335" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.237"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.244"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.251"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.258"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.265"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1475" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.366 }
%class.scoped_refptr.366 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.137" }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::StyleCascade::TokenSequence" = type { %"class.WTF::Vector.1825", %"class.WTF::Vector.819", i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::Vector.1825" = type { %"class.WTF::VectorBuffer.1826" }
%"class.WTF::VectorBuffer.1826" = type { %"class.WTF::VectorBufferBase.1827" }
%"class.WTF::VectorBufferBase.1827" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.WTF::Vector.819" = type { %"class.WTF::VectorBuffer.820" }
%"class.WTF::VectorBuffer.820" = type { %"class.WTF::VectorBufferBase.821" }
%"class.WTF::VectorBufferBase.821" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1823", %"class.WTF::Vector.819", %"class.WTF::Vector.1825", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1823" = type { %"class.base::RefCounted.1824" }
%"class.base::RefCounted.1824" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::MatchResult" = type <{ %"class.blink::HeapVector", %"class.blink::HeapVector.2", i8, i8, i8, i8, i16, [2 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [1024 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::MatchedProperties"*, i32, i32 }
%"struct.blink::MatchedProperties" = type <{ %"class.blink::Member", %"struct.blink::MatchedProperties::Data", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"struct.blink::MatchedProperties::Data" = type { i8, i8, i16 }
%"class.blink::HeapVector.2" = type { %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7", [32 x i8] }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::Member.8"*, i32, i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.10", %"class.blink::Member.22", %"class.blink::Member.16", %"class.blink::Member.24", %"class.blink::Member.24", %"class.blink::Member.60", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.69", %"class.blink::HeapVector.71" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.14", %"class.blink::Member.16", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.18" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::Node"* }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.133", %"class.WTF::Vector.133", i8, i32, %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.152", %"class.blink::Member.154", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.162", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.168", %"class.blink::Member.170", %"class.blink::Member.77", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.173", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.53", %"class.blink::Member.36", %"class.blink::Member.383", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::UserActionElementSet", %"class.blink::Member.392", double, double, i64, i64, %"class.blink::HeapHashSet.394", %"class.blink::HeapHashSet.401", i16, i8, %"class.blink::Member.408", %"class.blink::Member.410", %"class.blink::Member.1251", %"class.blink::Member.1253", %"class.blink::TextLinkColors", %"class.blink::Member.1255", i8, [7 x i8], %"class.blink::HeapHashMap.1257", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.36", %"class.WTF::Vector.1264", %"class.blink::Member.1269", %"class.blink::Member.1271", i8, %"class.blink::Member.36", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1273", %"class.blink::HeapVector.1275", %"class.std::__1::unique_ptr.1283", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1289", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1302", %"class.WTF::Vector.1304", i8, i8, %"class.std::__1::unique_ptr.1309", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.53", %"class.blink::HeapVector.1315", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1323", i8, i32, %"class.blink::Member.1325", %"class.blink::Member.1327", %"class.blink::Member.1329", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1331", %"class.WTF::HashMap.1333", %"class.blink::Member.1338", %"class.blink::Member.1340", %"class.blink::Member.1342", %"class.blink::Member.1344", %"class.blink::Member.22", %"class.blink::Member.22", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1346", i8, i32, %"class.blink::Member.1353", %"class.blink::Member.1355", i32, %"class.blink::Member.1357", %"class.blink::Member.1359", %"class.blink::Member.1370", %"class.std::__1::unique_ptr.1372", i64, %"class.std::__1::unique_ptr.1378", i32, i32, %"class.blink::Member.1389", %"class.blink::Member.1391", %"class.blink::Member.1393", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1395", %"class.WTF::Vector.1397", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1402", %"class.blink::Member.1409", %"class.std::__1::unique_ptr.1411", %"class.blink::Member.1417", i8, i8, %"class.WTF::String", %"class.blink::Member.1419", i8, [7 x i8], %"class.blink::HeapHashMap.1421", %"class.blink::HeapObserverSet", %"class.blink::Member.1435", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1437", i32, i8, i8, %"class.blink::WeakMember.1439", %"class.blink::Member.1440" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.126" }
%"class.blink::HeapHashMap.126" = type { %"class.WTF::HashMap.129" }
%"class.WTF::HashMap.129" = type { %"class.WTF::HashTable.130" }
%"class.WTF::HashTable.130" = type <{ %"struct.WTF::KeyValuePair.132"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.132" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.137" }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1480", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1521", i32, i8, [3 x i8], %"class.blink::HeapVector.1523", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1542", %"class.blink::Member.1548", %"class.blink::Member.1550", i8, [7 x i8] }>
%"class.blink::Supplementable.1480" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1481" }
%"class.blink::HeapHashMap.1481" = type { %"class.WTF::HashMap.1484" }
%"class.WTF::HashMap.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"struct.WTF::KeyValuePair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1487" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1496" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1488" }
%"class.blink::HeapObserverSet.1488" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1489" }
%"class.blink::HeapHashSet.1489" = type { %"class.WTF::HashSet.1492" }
%"class.WTF::HashSet.1492" = type { %"class.WTF::HashTable.1493" }
%"class.WTF::HashTable.1493" = type <{ %"class.blink::WeakMember.1495"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1495" = type opaque
%"class.blink::Supplementable.1496" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1497" }
%"class.blink::HeapHashMap.1497" = type { %"class.WTF::HashMap.1500" }
%"class.WTF::HashMap.1500" = type { %"class.WTF::HashTable.1501" }
%"class.WTF::HashTable.1501" = type <{ %"struct.WTF::KeyValuePair.1503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1503" = type { i8*, %"class.blink::Member.1891" }
%"class.blink::Member.1891" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1893" }
%"class.blink::Member.1893" = type { %"class.blink::MemberBase.1894" }
%"class.blink::MemberBase.1894" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1504, %"class.std::__1::unique_ptr.1505", %"class.std::__1::unique_ptr.1505", %"class.std::__1::unique_ptr.1511", %"class.std::__1::unique_ptr.1511", %"class.blink::Member.146", i32, [4 x i8], %"class.WTF::HashSet.1517", i32, i32 }
%class.scoped_refptr.1504 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1505" = type { %"class.std::__1::__compressed_pair.1506" }
%"class.std::__1::__compressed_pair.1506" = type { %"struct.std::__1::__compressed_pair_elem.1507" }
%"struct.std::__1::__compressed_pair_elem.1507" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1511" = type { %"class.std::__1::__compressed_pair.1512" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.1513" }
%"struct.std::__1::__compressed_pair_elem.1513" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1517" = type { %"class.WTF::HashTable.1518" }
%"class.WTF::HashTable.1518" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1523" = type { %"class.WTF::Vector.1526" }
%"class.WTF::Vector.1526" = type { %"class.WTF::VectorBuffer.1527" }
%"class.WTF::VectorBuffer.1527" = type { %"class.WTF::VectorBufferBase.1528" }
%"class.WTF::VectorBufferBase.1528" = type { %"class.blink::Member.1529"*, i32, i32 }
%"class.blink::Member.1529" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1535", i32, i32 }
%"class.blink::HeapHashMap.1535" = type { %"class.WTF::HashMap.1538" }
%"class.WTF::HashMap.1538" = type { %"class.WTF::HashTable.1539" }
%"class.WTF::HashTable.1539" = type <{ %"struct.WTF::KeyValuePair.1541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1541" = type opaque
%"class.std::__1::unique_ptr.1542" = type { %"class.std::__1::__compressed_pair.1543" }
%"class.std::__1::__compressed_pair.1543" = type { %"struct.std::__1::__compressed_pair_elem.1544" }
%"struct.std::__1::__compressed_pair_elem.1544" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.156" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::KURL"* }
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.79", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.81, %"class.WTF::Vector.95", %"class.WTF::Vector.95", %"class.blink::Member.14", %"class.blink::Member.100", %"class.blink::HeapHashSet", %"class.blink::Member.22", %"class.WTF::HashSet.108", %"class.WTF::TextPosition", %"class.blink::Member.112", %"class.blink::HeapVector.114", %"class.blink::Member.121" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.81 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.82", %"class.WTF::Vector.84" }
%"class.WTF::RefCounted.82" = type { %"class.base::RefCounted.83" }
%"class.base::RefCounted.83" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.87", %"class.WTF::String" }
%"class.WTF::Vector.87" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.102" }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.106" }
%"class.WTF::HashTable.106" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.108" = type { %"class.WTF::HashTable.109" }
%"class.WTF::HashTable.109" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.81, %"class.blink::Member.77", %"class.blink::Member.100" }
%"class.blink::HeapVector.114" = type { %"class.WTF::Vector.117" }
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %"class.blink::Member.100"*, i32, i32 }
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.173" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.177", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.177" = type { %"class.base::RefCounted.178" }
%"class.base::RefCounted.178" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.181" }
%"class.blink::HeapHashMap.181" = type { %"class.WTF::HashMap.184" }
%"class.WTF::HashMap.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type { %"class.blink::WeakMember.188", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.385" }
%"class.blink::HeapHashMap.385" = type { %"class.WTF::HashMap.388" }
%"class.WTF::HashMap.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"struct.WTF::KeyValuePair.391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.391" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.394" = type { %"class.WTF::HashSet.397" }
%"class.WTF::HashSet.397" = type { %"class.WTF::HashTable.398" }
%"class.WTF::HashTable.398" = type <{ %"class.blink::WeakMember.400"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.400" = type opaque
%"class.blink::HeapHashSet.401" = type { %"class.WTF::HashSet.404" }
%"class.WTF::HashSet.404" = type { %"class.WTF::HashTable.405" }
%"class.WTF::HashTable.405" = type <{ %"class.blink::WeakMember.407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.407" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.22", i32, i32, i32, %"class.blink::Member.77", %"class.blink::Member.414", %"class.blink::Member.441", %"class.blink::HeapHashMap.443", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.450", %"class.blink::HeapHashSet.450", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.456", %"class.blink::Member.479", %"class.blink::Member.940", %"class.blink::Member.942", %"class.blink::Member.948", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1110", %"class.blink::Member.1116", %"class.blink::HeapHashMap.1177", %"class.blink::HeapHashMap.1184", %"class.std::__1::unique_ptr.1191", i32, %"class.blink::HeapVector.1197", %"class.blink::HeapVector.1197", %"class.blink::HeapVector.426", %"class.blink::HeapHashSet.1205", %"class.blink::HeapHashMap.1212", %"class.blink::Member.1219", %"class.blink::HeapHashMap.1221", %class.scoped_refptr.1228, %class.scoped_refptr.571, %"class.blink::Member.1074", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1244", %"class.blink::Member.36" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.16", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.418", %"class.blink::HeapVector.426", i8 }>
%"class.blink::HeapVector.418" = type { %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.blink::Member.424"*, i32, i32 }
%"class.blink::Member.424" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.437", %"class.blink::Member.439", %"class.blink::Member.439", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.437" = type <{ %"class.blink::Member.439"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.14", %"class.blink::Member.439", %"class.blink::Member.439" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.443" = type { %"class.WTF::HashMap.446" }
%"class.WTF::HashMap.446" = type { %"class.WTF::HashTable.447" }
%"class.WTF::HashTable.447" = type <{ %"struct.WTF::KeyValuePair.449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.449" = type opaque
%"class.blink::HeapHashSet.450" = type { %"class.WTF::HashSet.453" }
%"class.WTF::HashSet.453" = type { %"class.WTF::HashTable.454" }
%"class.WTF::HashTable.454" = type <{ %"class.blink::Member.16"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.460", %"class.blink::Member.471" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.36", %"class.blink::HeapHashMap.464" }
%"class.blink::HeapHashMap.464" = type { %"class.WTF::HashMap.467" }
%"class.WTF::HashMap.467" = type { %"class.WTF::HashTable.468" }
%"class.WTF::HashTable.468" = type <{ %"struct.WTF::KeyValuePair.470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.470" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.475", %"class.blink::Member.477" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1459", %"class.blink::Member.471", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1466] }
%"class.blink::HeapVector.1459" = type { %"class.WTF::Vector.1462" }
%"class.WTF::Vector.1462" = type { %"class.WTF::VectorBuffer.1463" }
%"class.WTF::VectorBuffer.1463" = type { %"class.WTF::VectorBufferBase.1464" }
%"class.WTF::VectorBufferBase.1464" = type { %"class.blink::Member.477"*, i32, i32 }
%class.sk_sp.1466 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1467, i32, %"class.absl::optional.1468", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.137" }>
%class.sk_sp.1467 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1468" = type { %"class.absl::optional_internal::optional_data.1469" }
%"class.absl::optional_internal::optional_data.1469" = type { %"class.absl::optional_internal::optional_data_base.1470" }
%"class.absl::optional_internal::optional_data_base.1470" = type { %"class.absl::optional_internal::optional_data_dtor_base.1471" }
%"class.absl::optional_internal::optional_data_dtor_base.1471" = type { i8, %union.anon.1472 }
%union.anon.1472 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.22", %class.scoped_refptr.490, %"class.blink::SelectorFilter", %"class.blink::Member.441", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.483" }
%"class.blink::HeapHashMap.483" = type { %"class.WTF::HashMap.486" }
%"class.WTF::HashMap.486" = type { %"class.WTF::HashTable.487" }
%"class.WTF::HashTable.487" = type <{ %"struct.WTF::KeyValuePair.489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.489" = type opaque
%class.scoped_refptr.490 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.907", %"class.std::__1::unique_ptr.909" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.556", %"class.blink::DataRef.634", %"class.blink::DataRef.638", %"class.blink::DataRef.836", %"class.blink::DataRef.890", %"class.blink::DataRef.894", %"class.blink::DataRef.898", %"class.blink::DataRef.902", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.491 }
%class.scoped_refptr.491 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.492", %"class.blink::DataRef.494", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.492" = type { %"class.base::RefCounted.493" }
%"class.base::RefCounted.493" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.494" = type { %class.scoped_refptr.495 }
%class.scoped_refptr.495 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.496", %"class.blink::Font" }
%"class.WTF::RefCounted.496" = type { %"class.base::RefCounted.497" }
%"class.base::RefCounted.497" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.529 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.499, %class.scoped_refptr.507, %class.scoped_refptr.517, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.528 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1455", [4 x i8] }>
%"class.WTF::RefCounted.1455" = type { %"class.base::RefCounted.1456" }
%"class.base::RefCounted.1456" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.499 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.505", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.505" = type { %"class.base::RefCounted.506" }
%"class.base::RefCounted.506" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.507 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.508", %"class.WTF::RefCounted.515", [4 x i8] }>
%"class.blink::FontSettings.508" = type { %"class.WTF::Vector.509" }
%"class.WTF::Vector.509" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511" }
%"class.WTF::VectorBufferBase.511" = type { %"class.blink::FontTagValuePair.512"*, i32, i32 }
%"class.blink::FontTagValuePair.512" = type { i32, float }
%"class.WTF::RefCounted.515" = type { %"class.base::RefCounted.516" }
%"class.base::RefCounted.516" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.517 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.518", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.525, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.518" = type { %"class.base::RefCounted.519" }
%"class.base::RefCounted.519" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.525 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.526", [4 x i8] }>
%"class.WTF::RefCounted.526" = type { %"class.base::RefCounted.527" }
%"class.base::RefCounted.527" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.528 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.529 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.530", %"class.WTF::Vector.532", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.530" = type { %"class.base::RefCounted.531" }
%"class.base::RefCounted.531" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534", [8 x i8] }
%"class.WTF::VectorBufferBase.534" = type { %class.scoped_refptr.535*, i32, i32 }
%class.scoped_refptr.535 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.536", [4 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.542", %class.scoped_refptr.549, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.536" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.540 }
%union.anon.540 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.541, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.137" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.377" }
%"struct.std::__1::atomic.377" = type { %"struct.std::__1::__atomic_base.378" }
%"struct.std::__1::__atomic_base.378" = type { %"struct.std::__1::__atomic_base.379" }
%"struct.std::__1::__atomic_base.379" = type { %"struct.std::__1::__cxx_atomic_impl.380" }
%"struct.std::__1::__cxx_atomic_impl.380" = type { %"struct.std::__1::__cxx_atomic_base_impl.381" }
%"struct.std::__1::__cxx_atomic_base_impl.381" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.541 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.545, %class.scoped_refptr.545 }
%class.scoped_refptr.545 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.549 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.550", [4 x i8] }>
%"class.WTF::RefCounted.550" = type { %"class.base::RefCounted.551" }
%"class.base::RefCounted.551" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.552" }
%"class.blink::PersistentBase.552" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.553" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.553" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.554 }
%class.scoped_refptr.554 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.376", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.376" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.377" }
%"class.blink::Length" = type <{ %union.anon.555, i8, i8, i8, i8 }>
%union.anon.555 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.556" = type { %class.scoped_refptr.557 }
%class.scoped_refptr.557 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.558", [4 x i8], %"class.blink::DataRef.560", %"class.blink::DataRef.601", %"class.WTF::Vector.605", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.609, %class.scoped_refptr.618, %"class.blink::Persistent.626", %"class.blink::Persistent.628", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.558" = type { %"class.base::RefCounted.559" }
%"class.base::RefCounted.559" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.560" = type { %class.scoped_refptr.561 }
%class.scoped_refptr.561 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.562", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.564, %class.scoped_refptr.571, %"class.blink::Persistent.588", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.562" = type { %"class.base::RefCounted.563" }
%"class.base::RefCounted.563" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.564 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.565", %"class.WTF::Vector.566" }
%"class.base::RefCountedThreadSafe.565" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.566" = type { %"class.WTF::VectorBuffer.567" }
%"class.WTF::VectorBuffer.567" = type { %"class.WTF::VectorBufferBase.568" }
%"class.WTF::VectorBufferBase.568" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.588" = type { %"class.blink::PersistentBase.589" }
%"class.blink::PersistentBase.589" = type { %"class.blink::HeapVector.590"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.590" = type { %"class.WTF::Vector.593" }
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595" }
%"class.WTF::VectorBufferBase.595" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.596", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.601" = type { %class.scoped_refptr.602 }
%class.scoped_refptr.602 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.603", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.603" = type { %"class.base::RefCounted.604" }
%"class.base::RefCounted.604" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.609 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.610", %"class.WTF::Vector.612" }
%"class.WTF::RefCounted.610" = type { %"class.base::RefCounted.611" }
%"class.base::RefCounted.611" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { %"struct.std::__1::pair.615"*, i32, i32 }
%"struct.std::__1::pair.615" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.618 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.619", [4 x i8], %"class.WTF::Vector.621" }
%"class.WTF::RefCounted.619" = type { %"class.base::RefCounted.620" }
%"class.base::RefCounted.620" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.621" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.623", [28 x i8] }>
%"class.WTF::VectorBufferBase.623" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.626" = type { %"class.blink::PersistentBase.627" }
%"class.blink::PersistentBase.627" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.628" = type { %"class.blink::PersistentBase.629" }
%"class.blink::PersistentBase.629" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.8", %"class.blink::Member.632" }
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.634" = type { %class.scoped_refptr.635 }
%class.scoped_refptr.635 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.636", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.636" = type { %"class.base::RefCounted.637" }
%"class.base::RefCounted.637" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.638" = type { %class.scoped_refptr.639 }
%class.scoped_refptr.639 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.640", [4 x i8], %"class.blink::DataRef.642", %"class.blink::DataRef.706", %"class.blink::TransformOperations", %class.scoped_refptr.618, %"class.blink::Persistent.830", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.640" = type { %"class.base::RefCounted.641" }
%"class.base::RefCounted.641" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.642" = type { %class.scoped_refptr.643 }
%class.scoped_refptr.643 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.644", [4 x i8], %"class.blink::DataRef.646", %"class.blink::Persistent.684", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.644" = type { %"class.base::RefCounted.645" }
%"class.base::RefCounted.645" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.646" = type { %class.scoped_refptr.647 }
%class.scoped_refptr.647 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.648", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.666, %class.scoped_refptr.669, %class.scoped_refptr.672, %class.scoped_refptr.675, %class.scoped_refptr.676, %class.scoped_refptr.677, %"class.blink::Persistent.684", %"class.blink::Persistent.697", %"class.absl::optional.701", %"class.absl::optional.701", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.648" = type { %"class.base::RefCounted.649" }
%"class.base::RefCounted.649" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.650", %"class.std::__1::unique_ptr.655" }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.658", %"class.WTF::Vector.650", i32, i32 }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.666 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.667", [4 x i8] }>
%"class.WTF::RefCounted.667" = type { %"class.base::RefCounted.668" }
%"class.base::RefCounted.668" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.669 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.670", [4 x i8] }>
%"class.WTF::RefCounted.670" = type { %"class.base::RefCounted.671" }
%"class.base::RefCounted.671" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.672 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.673" }>
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.675 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.676 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.677 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.678", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.680" }
%"class.blink::DataRef.680" = type { %class.scoped_refptr.681 }
%class.scoped_refptr.681 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.626", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.682" }
%"class.WTF::RefCounted.682" = type { %"class.base::RefCounted.683" }
%"class.base::RefCounted.683" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.697" = type { %"class.blink::PersistentBase.698" }
%"class.blink::PersistentBase.698" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.669, %"class.blink::Member.596", i32, [4 x i8] }>
%"class.absl::optional.701" = type { %"class.absl::optional_internal::optional_data.702" }
%"class.absl::optional_internal::optional_data.702" = type { %"class.absl::optional_internal::optional_data_base.703" }
%"class.absl::optional_internal::optional_data_base.703" = type { %"class.absl::optional_internal::optional_data_dtor_base.704" }
%"class.absl::optional_internal::optional_data_dtor_base.704" = type { i8, [3 x i8], %union.anon.705 }
%union.anon.705 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.684" = type { %"class.blink::PersistentBase.685" }
%"class.blink::PersistentBase.685" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.688" }
%"class.blink::HeapVector.688" = type { %"class.WTF::Vector.691" }
%"class.WTF::Vector.691" = type { %"class.WTF::VectorBuffer.692" }
%"class.WTF::VectorBuffer.692" = type { %"class.WTF::VectorBufferBase.693" }
%"class.WTF::VectorBufferBase.693" = type { %"class.blink::Member.694"*, i32, i32 }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.708", %"class.blink::DataRef.710", %"class.blink::DataRef.714", %"class.blink::DataRef.723", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.742", %"class.std::__1::unique_ptr.753", %"class.std::__1::unique_ptr.791", %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.813", %"class.WTF::Vector.819", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.712", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.716", [4 x i8], %"class.WTF::Vector.718", i8, [7 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720" }
%"class.WTF::VectorBufferBase.720" = type { i32*, i32, i32 }
%"class.blink::DataRef.723" = type { %class.scoped_refptr.724 }
%class.scoped_refptr.724 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.725", [4 x i8], %"class.WTF::HashMap.727", %"class.WTF::HashMap.727", %"class.WTF::HashMap.727", %"class.WTF::HashMap.727", %"class.WTF::HashMap.727", %"class.WTF::HashMap.727", %"class.WTF::HashMap.732", %"class.WTF::HashMap.732", %"class.WTF::HashMap.732", %"class.WTF::HashMap.732", %"class.WTF::HashMap.737", %"class.WTF::Vector.650", %"class.WTF::Vector.650", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.725" = type { %"class.base::RefCounted.726" }
%"class.base::RefCounted.726" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.727" = type { %"class.WTF::HashTable.728" }
%"class.WTF::HashTable.728" = type <{ %"struct.WTF::KeyValuePair.731"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.731" = type { %"class.WTF::String", %"class.WTF::Vector.1925" }
%"class.WTF::Vector.1925" = type { %"class.WTF::VectorBuffer.1926" }
%"class.WTF::VectorBuffer.1926" = type { %"class.WTF::VectorBufferBase.1927" }
%"class.WTF::VectorBufferBase.1927" = type { i64*, i32, i32 }
%"class.WTF::HashMap.732" = type { %"class.WTF::HashTable.733" }
%"class.WTF::HashTable.733" = type <{ %"struct.WTF::KeyValuePair.736"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.736" = type { i64, %"class.WTF::Vector.819" }
%"class.WTF::HashMap.737" = type { %"class.WTF::HashTable.738" }
%"class.WTF::HashTable.738" = type <{ %"struct.WTF::KeyValuePair.741"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.741" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.745" }
%"class.WTF::HashMap.745" = type { %"class.WTF::HashTable.746" }
%"class.WTF::HashTable.746" = type <{ %"struct.WTF::KeyValuePair.749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.749" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1930", %"class.absl::optional.1930", %"class.absl::optional.1930" }
%"class.absl::optional.1930" = type { %"class.absl::optional_internal::optional_data.1931" }
%"class.absl::optional_internal::optional_data.1931" = type { %"class.absl::optional_internal::optional_data_base.1932" }
%"class.absl::optional_internal::optional_data_base.1932" = type { %"class.absl::optional_internal::optional_data_dtor_base.1933" }
%"class.absl::optional_internal::optional_data_dtor_base.1933" = type { i8, %union.anon.1934 }
%union.anon.1934 = type { i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605", %"class.WTF::Vector.768", %"class.WTF::Vector.756", %"class.WTF::Vector.773", %"class.WTF::Vector.778", %"class.WTF::Vector.783" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.756", %"class.WTF::Vector.756", %"class.WTF::Vector.761" }
%"class.WTF::Vector.761" = type { %"class.WTF::VectorBuffer.762" }
%"class.WTF::VectorBuffer.762" = type { %"class.WTF::VectorBufferBase.763" }
%"class.WTF::VectorBufferBase.763" = type { %class.scoped_refptr.764*, i32, i32 }
%class.scoped_refptr.764 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.765" }
%"class.base::RefCountedThreadSafe.765" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.768" = type { %"class.WTF::VectorBuffer.769" }
%"class.WTF::VectorBuffer.769" = type { %"class.WTF::VectorBufferBase.770" }
%"class.WTF::VectorBufferBase.770" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.756" = type { %"class.WTF::VectorBuffer.757" }
%"class.WTF::VectorBuffer.757" = type { %"class.WTF::VectorBufferBase.758" }
%"class.WTF::VectorBufferBase.758" = type { double*, i32, i32 }
%"class.WTF::Vector.773" = type { %"class.WTF::VectorBuffer.774" }
%"class.WTF::VectorBuffer.774" = type { %"class.WTF::VectorBufferBase.775" }
%"class.WTF::VectorBufferBase.775" = type { i32*, i32, i32 }
%"class.WTF::Vector.778" = type { %"class.WTF::VectorBuffer.779" }
%"class.WTF::VectorBuffer.779" = type { %"class.WTF::VectorBufferBase.780" }
%"class.WTF::VectorBufferBase.780" = type { i32*, i32, i32 }
%"class.WTF::Vector.783" = type { %"class.WTF::VectorBuffer.784" }
%"class.WTF::VectorBuffer.784" = type { %"class.WTF::VectorBufferBase.785" }
%"class.WTF::VectorBufferBase.785" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.794" }
%"class.WTF::Vector.794" = type { %"class.WTF::VectorBuffer.795" }
%"class.WTF::VectorBuffer.795" = type { %"class.WTF::VectorBufferBase.796" }
%"class.WTF::VectorBufferBase.796" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.805" }
%"class.WTF::Vector.805" = type { %"class.WTF::VectorBuffer.806" }
%"class.WTF::VectorBuffer.806" = type { %"class.WTF::VectorBufferBase.807" }
%"class.WTF::VectorBufferBase.807" = type { %"class.blink::Persistent.626"*, i32, i32 }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.574", %"class.blink::Persistent.579" }
%"class.WTF::HashMap.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"struct.WTF::KeyValuePair.578"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.578" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1822 }
%class.scoped_refptr.1822 = type { %"class.blink::CSSVariableData"* }
%"class.blink::Persistent.579" = type { %"class.blink::PersistentBase.580" }
%"class.blink::PersistentBase.580" = type { %"class.blink::HeapHashMap.581"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.581" = type { %"class.WTF::HashMap.584" }
%"class.WTF::HashMap.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"struct.WTF::KeyValuePair.587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.587" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.626", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.824" }
%"class.WTF::Vector.824" = type { %"class.WTF::VectorBuffer.825" }
%"class.WTF::VectorBuffer.825" = type { %"class.WTF::VectorBufferBase.826" }
%"class.WTF::VectorBufferBase.826" = type { %class.scoped_refptr.827*, i32, i32 }
%class.scoped_refptr.827 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.673", [4 x i8] }>
%"class.blink::Persistent.830" = type { %"class.blink::PersistentBase.831" }
%"class.blink::PersistentBase.831" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.834" }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.836" = type { %class.scoped_refptr.837 }
%class.scoped_refptr.837 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.838", [4 x i8], %"class.blink::DataRef.840", %"class.blink::DataRef.844", %"class.blink::DataRef.861", %"class.blink::DataRef.870", %"class.blink::DataRef.882", %"class.blink::DataRef.886", %class.scoped_refptr.865, i32, [4 x i8] }>
%"class.WTF::RefCounted.838" = type { %"class.base::RefCounted.839" }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.840" = type { %class.scoped_refptr.841 }
%class.scoped_refptr.841 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.842", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.842" = type { %"class.base::RefCounted.843" }
%"class.base::RefCounted.843" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.844" = type { %class.scoped_refptr.845 }
%class.scoped_refptr.845 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.846", %class.scoped_refptr.848, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.846" = type { %"class.base::RefCounted.847" }
%"class.base::RefCounted.847" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.848 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.855", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.670" }>
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.861" = type { %class.scoped_refptr.862 }
%class.scoped_refptr.862 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.863", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.863" = type { %"class.base::RefCounted.864" }
%"class.base::RefCounted.864" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.865, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.870" = type { %class.scoped_refptr.871 }
%class.scoped_refptr.871 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.872", [4 x i8], %class.scoped_refptr.874, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.872" = type { %"class.base::RefCounted.873" }
%"class.base::RefCounted.873" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.874 = type { %"class.base::RefCountedData.875"* }
%"class.base::RefCountedData.875" = type { %"class.base::RefCountedThreadSafe.876", %"class.WTF::Vector.877" }
%"class.base::RefCountedThreadSafe.876" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.877" = type { %"class.WTF::VectorBuffer.878" }
%"class.WTF::VectorBuffer.878" = type { %"class.WTF::VectorBufferBase.879" }
%"class.WTF::VectorBufferBase.879" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.882" = type { %class.scoped_refptr.883 }
%class.scoped_refptr.883 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.884", %class.scoped_refptr.865, %class.scoped_refptr.865, %class.scoped_refptr.865 }
%"class.WTF::RefCounted.884" = type { %"class.base::RefCounted.885" }
%"class.base::RefCounted.885" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.886" = type { %class.scoped_refptr.887 }
%class.scoped_refptr.887 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.888", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.888" = type { %"class.base::RefCounted.889" }
%"class.base::RefCounted.889" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.865 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.866", %"class.blink::Persistent.868", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.866" = type { %"class.base::RefCounted.867" }
%"class.base::RefCounted.867" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.868" = type { %"class.blink::PersistentBase.869" }
%"class.blink::PersistentBase.869" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DataRef.890" = type { %class.scoped_refptr.891 }
%class.scoped_refptr.891 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.892", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.892" = type { %"class.base::RefCounted.893" }
%"class.base::RefCounted.893" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.894" = type { %class.scoped_refptr.895 }
%class.scoped_refptr.895 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.896", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.896" = type { %"class.base::RefCounted.897" }
%"class.base::RefCounted.897" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.898" = type { %class.scoped_refptr.899 }
%class.scoped_refptr.899 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.900", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.902" = type { %class.scoped_refptr.903 }
%class.scoped_refptr.903 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.904", %class.scoped_refptr.906 }
%"class.WTF::RefCounted.904" = type { %"class.base::RefCounted.905" }
%"class.base::RefCounted.905" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.906 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1453", %"class.blink::StyleVariables", %class.scoped_refptr.906 }
%"class.WTF::RefCounted.1453" = type { %"class.base::RefCounted.1454" }
%"class.base::RefCounted.1454" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.907" = type { %"class.base::RefCounted.908" }
%"class.base::RefCounted.908" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.912" }
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.WTF::Vector.915"* }
%"class.WTF::Vector.915" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.922", %"class.std::__1::unique_ptr.934" }
%"class.blink::HeapVector.922" = type { %"class.WTF::Vector.925" }
%"class.WTF::Vector.925" = type { %"class.WTF::VectorBuffer.926" }
%"class.WTF::VectorBuffer.926" = type { %"class.WTF::VectorBufferBase.927" }
%"class.WTF::VectorBufferBase.927" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.36", %"class.WTF::Vector.928" }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930", [16 x i8] }
%"class.WTF::VectorBufferBase.930" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.946", i8, [7 x i8] }>
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.970", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.952", %"class.WTF::HashMap.952", %"class.WTF::HashMap.952", %"class.WTF::HashMap.957", %class.scoped_refptr.962, %class.scoped_refptr.969, %class.scoped_refptr.968, %"class.WTF::Vector.95", %"class.WTF::Vector.95", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.956"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.956" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1911 }
%class.scoped_refptr.1911 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.963", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.965", %"union.blink::InvalidationSet::Backing.966", %"union.blink::InvalidationSet::Backing.967", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.963" = type { %"class.base::RefCounted.964" }
%"class.base::RefCounted.964" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.965" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.966" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.967" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.957" = type { %"class.WTF::HashTable.958" }
%"class.WTF::HashTable.958" = type <{ %"struct.WTF::KeyValuePair.961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.961" = type opaque
%class.scoped_refptr.962 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.968, %class.scoped_refptr.968 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.963", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.965", %"union.blink::InvalidationSet::Backing.966", %"union.blink::InvalidationSet::Backing.967", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.969 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.968 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.974", %"class.blink::HeapHashMap.974", %"class.blink::HeapHashMap.974", %"class.blink::HeapHashMap.974", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::HeapVector.981", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1017", %"class.blink::HeapVector.1025", %"class.blink::HeapVector.1033", %"class.blink::HeapVector.1050", %"class.blink::HeapVector.1058", %"class.blink::HeapVector.1066", %"class.blink::HeapVector.1079", %"class.WTF::Vector.1086", i32, %"class.blink::Member.1092" }
%"class.blink::HeapHashMap.974" = type { %"class.WTF::HashMap.977" }
%"class.WTF::HashMap.977" = type { %"class.WTF::HashTable.978" }
%"class.WTF::HashTable.978" = type <{ %"struct.WTF::KeyValuePair.980"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.980" = type { %"class.WTF::AtomicString", %"class.blink::Member.1916" }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::HeapVector.981"* }
%"class.blink::HeapVector.981" = type { %"class.WTF::Vector.984" }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { %"class.blink::Member.987"*, i32, i32 }
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.991", i64, [4 x i32] }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member", %"class.blink::Member.1012" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1017" = type { %"class.WTF::Vector.1020" }
%"class.WTF::Vector.1020" = type { %"class.WTF::VectorBuffer.1021" }
%"class.WTF::VectorBuffer.1021" = type { %"class.WTF::VectorBufferBase.1022" }
%"class.WTF::VectorBufferBase.1022" = type { %"class.blink::Member.1023"*, i32, i32 }
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1912" }
%"class.blink::MemberBase.1912" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1025" = type { %"class.WTF::Vector.1028" }
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"class.blink::Member.1031"*, i32, i32 }
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member" }
%"class.blink::HeapVector.1033" = type { %"class.WTF::Vector.1036" }
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"class.blink::Member.1039"*, i32, i32 }
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1041", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1041" = type { %"class.WTF::Vector.1044" }
%"class.WTF::Vector.1044" = type { %"class.WTF::VectorBuffer.1045" }
%"class.WTF::VectorBuffer.1045" = type { %"class.WTF::VectorBufferBase.1046" }
%"class.WTF::VectorBufferBase.1046" = type { %"class.blink::Member.1047"*, i32, i32 }
%"class.blink::Member.1047" = type opaque
%"class.blink::HeapVector.1050" = type { %"class.WTF::Vector.1053" }
%"class.WTF::Vector.1053" = type { %"class.WTF::VectorBuffer.1054" }
%"class.WTF::VectorBuffer.1054" = type { %"class.WTF::VectorBufferBase.1055" }
%"class.WTF::VectorBufferBase.1055" = type { %"class.blink::Member.1056"*, i32, i32 }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1914" }
%"class.blink::MemberBase.1914" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member" }
%"class.blink::HeapVector.1058" = type { %"class.WTF::Vector.1061" }
%"class.WTF::Vector.1061" = type { %"class.WTF::VectorBuffer.1062" }
%"class.WTF::VectorBuffer.1062" = type { %"class.WTF::VectorBufferBase.1063" }
%"class.WTF::VectorBufferBase.1063" = type { %"class.blink::Member.1064"*, i32, i32 }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", i32, [4 x i8] }>
%"class.blink::HeapVector.1066" = type { %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { %"class.blink::Member.1072"*, i32, i32 }
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074", %"class.blink::Member.1074" }
%"class.blink::HeapVector.1079" = type { %"class.WTF::Vector.1082" }
%"class.WTF::Vector.1082" = type { %"class.WTF::VectorBuffer.1083" }
%"class.WTF::VectorBuffer.1083" = type { %"class.WTF::VectorBufferBase.1084" }
%"class.WTF::VectorBufferBase.1084" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.991", i32, i32 }
%"class.WTF::Vector.1086" = type { %"class.WTF::VectorBuffer.1087" }
%"class.WTF::VectorBuffer.1087" = type { %"class.WTF::VectorBufferBase.1088" }
%"class.WTF::VectorBufferBase.1088" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1089, i8, [7 x i8] }>
%class.scoped_refptr.1089 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1096", %"class.blink::HeapHashMap.1096", %"class.blink::HeapHashMap.1096", %"class.blink::HeapHashMap.1096" }
%"class.blink::HeapHashMap.1096" = type { %"class.WTF::HashMap.1099" }
%"class.WTF::HashMap.1099" = type { %"class.WTF::HashTable.1100" }
%"class.WTF::HashTable.1100" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1103" }
%"class.blink::HeapHashMap.1103" = type { %"class.WTF::HashMap.1106" }
%"class.WTF::HashMap.1106" = type { %"class.WTF::HashTable.1107" }
%"class.WTF::HashTable.1107" = type <{ %"struct.WTF::KeyValuePair.1109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1109" = type { %"class.blink::Member.10", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1920", %"class.WTF::Vector.1920" }
%"class.WTF::Vector.1920" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1922" }
%"class.WTF::VectorBufferBase.1922" = type { %class.scoped_refptr.1911*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.14", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1110" = type { %"class.WTF::HashSet.1113" }
%"class.WTF::HashSet.1113" = type { %"class.WTF::HashTable.1114" }
%"class.WTF::HashTable.1114" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.1122", %"class.blink::Member.1123", %"class.blink::HeapHashSet.1158", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.1120" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::WeakMember.1122" = type { %"class.blink::MemberBase.9" }
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.1127", %"class.blink::HeapHashMap.1134", %"class.blink::HeapHashMap.1141", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.1127" = type { %"class.WTF::HashMap.1130" }
%"class.WTF::HashMap.1130" = type { %"class.WTF::HashTable.1131" }
%"class.WTF::HashTable.1131" = type <{ %"struct.WTF::KeyValuePair.1133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1133" = type opaque
%"class.blink::HeapHashMap.1134" = type { %"class.WTF::HashMap.1137" }
%"class.WTF::HashMap.1137" = type { %"class.WTF::HashTable.1138" }
%"class.WTF::HashTable.1138" = type <{ %"struct.WTF::KeyValuePair.1140"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1140" = type opaque
%"class.blink::HeapHashMap.1141" = type { %"class.WTF::HashMap.1144" }
%"class.WTF::HashMap.1144" = type { %"class.WTF::HashTable.1145" }
%"class.WTF::HashTable.1145" = type <{ %"struct.WTF::KeyValuePair.1147"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1147" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1150", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1150" = type { %"class.WTF::HashTable.1151" }
%"class.WTF::HashTable.1151" = type <{ %"struct.WTF::KeyValuePair.1153"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1153" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1154", i32, i32 }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1155" }
%"class.WTF::VectorBuffer.1155" = type { %"class.WTF::VectorBufferBase.1156" }
%"class.WTF::VectorBufferBase.1156" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapHashSet.1158" = type { %"class.WTF::HashSet.1161" }
%"class.WTF::HashSet.1161" = type { %"class.WTF::HashTable.1162" }
%"class.WTF::HashTable.1162" = type <{ %"class.blink::WeakMember.1164"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1164" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1165", %"class.WTF::HashMap.1165", %"class.WTF::HashMap.1165", %"class.WTF::HashMap.1165", %"class.WTF::HashMap.1165", %"class.WTF::HashMap.1165", %"class.WTF::HashMap.1165", %"class.std::__1::unique_ptr.1170" }
%"class.WTF::HashMap.1165" = type { %"class.WTF::HashTable.1166" }
%"class.WTF::HashTable.1166" = type <{ %"struct.WTF::KeyValuePair.1169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1169" = type opaque
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.WTF::Vector.1173"* }
%"class.WTF::Vector.1173" = type opaque
%"class.blink::HeapHashMap.1177" = type { %"class.WTF::HashMap.1180" }
%"class.WTF::HashMap.1180" = type { %"class.WTF::HashTable.1181" }
%"class.WTF::HashTable.1181" = type <{ %"struct.WTF::KeyValuePair.1183"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1183" = type opaque
%"class.blink::HeapHashMap.1184" = type { %"class.WTF::HashMap.1187" }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1190" = type opaque
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1197" = type { %"class.WTF::Vector.1200" }
%"class.WTF::Vector.1200" = type { %"class.WTF::VectorBuffer.1201" }
%"class.WTF::VectorBuffer.1201" = type { %"class.WTF::VectorBufferBase.1202" }
%"class.WTF::VectorBufferBase.1202" = type { %"struct.std::__1::pair.1203"*, i32, i32 }
%"struct.std::__1::pair.1203" = type opaque
%"class.blink::HeapVector.426" = type { %"class.WTF::Vector.429" }
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"struct.std::__1::pair.432"*, i32, i32 }
%"struct.std::__1::pair.432" = type opaque
%"class.blink::HeapHashSet.1205" = type { %"class.WTF::HashSet.1208" }
%"class.WTF::HashSet.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"class.blink::WeakMember.1211"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1211" = type { %"class.blink::MemberBase.78" }
%"class.blink::HeapHashMap.1212" = type { %"class.WTF::HashMap.1215" }
%"class.WTF::HashMap.1215" = type { %"class.WTF::HashTable.1216" }
%"class.WTF::HashTable.1216" = type <{ %"struct.WTF::KeyValuePair.1218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1218" = type { %"class.WTF::AtomicString", %"class.blink::Member.1039" }
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1221" = type { %"class.WTF::HashMap.1224" }
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1227" = type opaque
%class.scoped_refptr.1228 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type { %"class.blink::StyleEnvironmentVariables", %"class.WTF::HashSet.1237", %"class.blink::Persistent.1241" }
%"class.blink::StyleEnvironmentVariables" = type { i32 (...)**, %"class.WTF::RefCounted.1229", %"class.WTF::Vector.1231", %"class.WTF::HashMap.574", %class.scoped_refptr.1234 }
%"class.WTF::RefCounted.1229" = type { %"class.base::RefCounted.1230" }
%"class.base::RefCounted.1230" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1231" = type { %"class.WTF::VectorBuffer.1232" }
%"class.WTF::VectorBuffer.1232" = type { %"class.WTF::VectorBufferBase.1233" }
%"class.WTF::VectorBufferBase.1233" = type { %class.scoped_refptr.1234*, i32, i32 }
%class.scoped_refptr.1234 = type { %"class.blink::StyleEnvironmentVariables"* }
%"class.WTF::HashSet.1237" = type { %"class.WTF::HashTable.1238" }
%"class.WTF::HashTable.1238" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Persistent.1241" = type { %"class.blink::PersistentBase.1242" }
%"class.blink::PersistentBase.1242" = type { %"class.blink::Document"*, %"class.blink::PersistentNodePtr.1243" }
%"class.blink::PersistentNodePtr.1243" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.571 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.572", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.572" = type { %"class.base::RefCounted.573" }
%"class.base::RefCounted.573" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1244" = type { %"class.WTF::HashSet.1247" }
%"class.WTF::HashSet.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"class.blink::Member.1250"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1250" = type opaque
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.16", %"class.blink::HeapVector.71" }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1257" = type { %"class.WTF::HashMap.1260" }
%"class.WTF::HashMap.1260" = type { %"class.WTF::HashTable.1261" }
%"class.WTF::HashTable.1261" = type <{ %"struct.WTF::KeyValuePair.1263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1263" = type opaque
%"class.WTF::Vector.1264" = type { %"class.WTF::VectorBuffer.1265" }
%"class.WTF::VectorBuffer.1265" = type { %"class.WTF::VectorBufferBase.1266" }
%"class.WTF::VectorBufferBase.1266" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1271" = type { %"class.blink::MemberBase.1272" }
%"class.blink::MemberBase.1272" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.39" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.43", %"class.blink::Member", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.43" = type { %"class.WTF::SingleThreadedBitField.44" }
%"class.WTF::SingleThreadedBitField.44" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.46", %"class.WTF::AtomicString", %"class.WTF::Vector.48" }
%"class.WTF::RefCounted.46" = type { %"class.base::RefCounted.47" }
%"class.base::RefCounted.47" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1275" = type { %"class.WTF::Vector.1278" }
%"class.WTF::Vector.1278" = type { %"class.WTF::VectorBuffer.1279" }
%"class.WTF::VectorBuffer.1279" = type { %"class.WTF::VectorBufferBase.1280" }
%"class.WTF::VectorBufferBase.1280" = type { %"class.blink::Member.1281"*, i32, i32 }
%"class.blink::Member.1281" = type opaque
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1289" = type { %"class.WTF::HashSet.1292" }
%"class.WTF::HashSet.1292" = type { %"class.WTF::HashTable.1293" }
%"class.WTF::HashTable.1293" = type <{ %"class.blink::WeakMember.1295"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1295" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1296", i32, [4 x i8] }>
%"class.WTF::Vector.1296" = type { %"class.WTF::VectorBuffer.1297" }
%"class.WTF::VectorBuffer.1297" = type { %"class.WTF::VectorBufferBase.1298" }
%"class.WTF::VectorBufferBase.1298" = type { %"struct.std::__1::pair.1299"*, i32, i32 }
%"struct.std::__1::pair.1299" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1304" = type { %"class.WTF::VectorBuffer.1305" }
%"class.WTF::VectorBuffer.1305" = type { %"class.WTF::VectorBufferBase.1306" }
%"class.WTF::VectorBufferBase.1306" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.36"*, i32, i32 }
%"class.blink::HeapVector.1315" = type { %"class.WTF::Vector.1318" }
%"class.WTF::Vector.1318" = type { %"class.WTF::VectorBuffer.1319" }
%"class.WTF::VectorBuffer.1319" = type { %"class.WTF::VectorBufferBase.1320" }
%"class.WTF::VectorBufferBase.1320" = type { %"class.blink::Member.1321"*, i32, i32 }
%"class.blink::Member.1321" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.22" }
%"class.blink::Member.1323" = type { %"class.blink::MemberBase.1324" }
%"class.blink::MemberBase.1324" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1325" = type { %"class.blink::MemberBase.1326" }
%"class.blink::MemberBase.1326" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1333" = type { %"class.WTF::HashTable.1334" }
%"class.WTF::HashTable.1334" = type <{ %"struct.WTF::KeyValuePair.1337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1337" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.382", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.373, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.373 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.374" }>
%"class.base::RefCountedThreadSafe.374" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.375 }
%class.scoped_refptr.375 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.382" = type { %"class.blink::MemberBase.23" }
%"class.blink::HeapHashSet.1346" = type { %"class.WTF::HashSet.1349" }
%"class.WTF::HashSet.1349" = type { %"class.WTF::HashTable.1350" }
%"class.WTF::HashTable.1350" = type <{ %"class.blink::Member.1352"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1352" = type opaque
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type { %"class.blink::HeapHashMap.1363", %"class.blink::HeapHashMap.1363", i64 }
%"class.blink::HeapHashMap.1363" = type { %"class.WTF::HashMap.1366" }
%"class.WTF::HashMap.1366" = type { %"class.WTF::HashTable.1367" }
%"class.WTF::HashTable.1367" = type <{ %"struct.WTF::KeyValuePair.1369"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1369" = type { %"class.WTF::AtomicString", %"class.blink::Member.1918" }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.1074", %class.scoped_refptr.1822, %"class.WTF::Vector.1861", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.1856" }
%"class.WTF::Vector.1856" = type { %"class.WTF::VectorBuffer.1857" }
%"class.WTF::VectorBuffer.1857" = type { %"class.WTF::VectorBufferBase.1858" }
%"class.WTF::VectorBufferBase.1858" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::Vector.1861" = type { %"class.WTF::VectorBuffer.1862" }
%"class.WTF::VectorBuffer.1862" = type { %"class.WTF::VectorBufferBase.1863" }
%"class.WTF::VectorBufferBase.1863" = type { %"class.std::__1::unique_ptr.1864"*, i32, i32 }
%"class.std::__1::unique_ptr.1864" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1372" = type { %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.108", %"class.WTF::HashSet.108", %"class.WTF::HashSet.108", %"class.WTF::HashSet.108", %"class.WTF::HashSet.108", %"class.WTF::HashSet.108", i32, [4 x i8], %"class.WTF::HashMap.1381", %"class.WTF::HashMap.1381", %"class.WTF::HashMap.1381", %"class.WTF::HashMap.1381", %"class.WTF::HashMap.1381", %"class.WTF::HashMap.1381", %"class.WTF::HashMap.1381", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %"struct.WTF::KeyValuePair.1385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1385" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1397" = type { %"class.WTF::VectorBuffer.1398" }
%"class.WTF::VectorBuffer.1398" = type { %"class.WTF::VectorBufferBase.1399" }
%"class.WTF::VectorBufferBase.1399" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1402" = type { %"class.WTF::HashMap.1405" }
%"class.WTF::HashMap.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"struct.WTF::KeyValuePair.1408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1408" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1421" = type { %"class.WTF::HashMap.1424" }
%"class.WTF::HashMap.1424" = type { %"class.WTF::HashTable.1425" }
%"class.WTF::HashTable.1425" = type <{ %"struct.WTF::KeyValuePair.1427"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1427" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1428" }
%"class.blink::HeapHashSet.1428" = type { %"class.WTF::HashSet.1431" }
%"class.WTF::HashSet.1431" = type { %"class.WTF::HashTable.1432" }
%"class.WTF::HashTable.1432" = type <{ %"class.blink::WeakMember.1434"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1434" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.22", %"class.blink::HeapHashSet.1444", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1451", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1444" = type { %"class.WTF::HashSet.1447" }
%"class.WTF::HashSet.1447" = type { %"class.WTF::HashTable.1448" }
%"class.WTF::HashTable.1448" = type <{ %"class.blink::Member.1450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1450" = type opaque
%"class.blink::HeapTaskRunnerTimer.1451" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1452", { i64, i64 } }
%"class.blink::WeakMember.1452" = type { %"class.blink::MemberBase.1438" }
%"class.blink::WeakMember.1439" = type { %"class.blink::MemberBase.15" }
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.36", i32, %"class.blink::HeapVector.53" }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.66" }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::HeapHashMap.68"* }
%"class.blink::HeapHashMap.68" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.71" = type { %"class.WTF::Vector.74" }
%"class.WTF::Vector.74" = type { %"class.WTF::VectorBuffer.75" }
%"class.WTF::VectorBuffer.75" = type { %"class.WTF::VectorBufferBase.76" }
%"class.WTF::VectorBufferBase.76" = type { %"class.blink::Member.77"*, i32, i32 }
%"class.blink::StyleCascade" = type <{ %"class.blink::StyleResolverState"*, %"class.blink::MatchResult", %"class.blink::CascadeInterpolations", %"class.blink::CascadeMap", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.1552, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.490, %class.scoped_refptr.490, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.490, i32, [4 x i8] }>
%class.scoped_refptr.1552 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.1553", %"class.WTF::Vector.1697", %"class.blink::HeapHashSet.1701", %"class.WTF::Vector.1697", %"class.blink::HeapVector.1708", %"class.blink::HeapVector.1715", %"class.blink::HeapHashMap.1722", %"class.WTF::HashSet.1729", %"class.WTF::HashSet.1729", %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733" }
%"class.blink::HeapVector.1553" = type { %"class.WTF::Vector.1556" }
%"class.WTF::Vector.1556" = type { %"class.WTF::VectorBuffer.1557" }
%"class.WTF::VectorBuffer.1557" = type { %"class.WTF::VectorBufferBase.1558" }
%"class.WTF::VectorBufferBase.1558" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.1559", %"struct.blink::Timing", %"class.blink::Member.1039", i32, %"class.blink::Member.1636", %"class.WTF::Vector.783" }
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.1582", i8, %"class.absl::optional.1563", %"class.absl::optional.1631" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1561", %"struct.blink::Timing", %"class.blink::Member.1568", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.1563", %"class.absl::optional.1577", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.1572", %"class.absl::optional.1572", i8, i8, i8, %"class.absl::optional.1563", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1572" = type { %"class.absl::optional_internal::optional_data.1573" }
%"class.absl::optional_internal::optional_data.1573" = type { %"class.absl::optional_internal::optional_data_base.1574" }
%"class.absl::optional_internal::optional_data_base.1574" = type { %"class.absl::optional_internal::optional_data_dtor_base.1575" }
%"class.absl::optional_internal::optional_data_dtor_base.1575" = type { i8, %union.anon.1576 }
%union.anon.1576 = type { double }
%"class.absl::optional.1577" = type { %"class.absl::optional_internal::optional_data.1578" }
%"class.absl::optional_internal::optional_data.1578" = type { %"class.absl::optional_internal::optional_data_base.1579" }
%"class.absl::optional_internal::optional_data_base.1579" = type { %"class.absl::optional_internal::optional_data_dtor_base.1580" }
%"class.absl::optional_internal::optional_data_dtor_base.1580" = type { i8, %union.anon.1581 }
%union.anon.1581 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1586", %"class.blink::Member.1594", %"class.blink::Member.1619", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.764, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.1586" = type { %"class.WTF::Vector.1589" }
%"class.WTF::Vector.1589" = type { %"class.WTF::VectorBuffer.1590" }
%"class.WTF::VectorBuffer.1590" = type { %"class.WTF::VectorBufferBase.1591" }
%"class.WTF::VectorBufferBase.1591" = type { %"class.blink::Member.1592"*, i32, i32 }
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.1572", %"class.absl::optional.1901", %class.scoped_refptr.764 }
%"class.absl::optional.1901" = type { %"class.absl::optional_internal::optional_data.1902" }
%"class.absl::optional_internal::optional_data.1902" = type { %"class.absl::optional_internal::optional_data_base.1903" }
%"class.absl::optional_internal::optional_data_base.1903" = type { %"class.absl::optional_internal::optional_data_dtor_base.1904" }
%"class.absl::optional_internal::optional_data_dtor_base.1904" = type { i8, %union.anon.1905 }
%union.anon.1905 = type { i32 }
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::HeapHashMap.1596"* }
%"class.blink::HeapHashMap.1596" = type { %"class.WTF::HashMap.1599" }
%"class.WTF::HashMap.1599" = type { %"class.WTF::HashTable.1600" }
%"class.WTF::HashTable.1600" = type <{ %"struct.WTF::KeyValuePair.1602"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1602" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1604" }
%"class.blink::Member.1604" = type { %"class.blink::MemberBase.1605" }
%"class.blink::MemberBase.1605" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1608" }
%"class.blink::HeapVector.1608" = type { %"class.WTF::Vector.1611" }
%"class.WTF::Vector.1611" = type { %"class.WTF::VectorBuffer.1612" }
%"class.WTF::VectorBuffer.1612" = type { %"class.WTF::VectorBufferBase.1613" }
%"class.WTF::VectorBufferBase.1613" = type { %"class.blink::Member.1614"*, i32, i32 }
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.764, i32, [4 x i8] }>
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1623" }
%"class.blink::HeapVector.1623" = type { %"class.WTF::Vector.1626" }
%"class.WTF::Vector.1626" = type { %"class.WTF::VectorBuffer.1627" }
%"class.WTF::VectorBuffer.1627" = type { %"class.WTF::VectorBufferBase.1628" }
%"class.WTF::VectorBufferBase.1628" = type { %"class.blink::Member.1629"*, i32, i32 }
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1748", %class.scoped_refptr.764, double, double, double, double }
%"class.absl::optional.1563" = type { %"class.absl::optional_internal::optional_data.1564" }
%"class.absl::optional_internal::optional_data.1564" = type { %"class.absl::optional_internal::optional_data_base.1565" }
%"class.absl::optional_internal::optional_data_base.1565" = type { %"class.absl::optional_internal::optional_data_dtor_base.1566" }
%"class.absl::optional_internal::optional_data_dtor_base.1566" = type { i8, %union.anon.1567 }
%union.anon.1567 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1631" = type { %"class.absl::optional_internal::optional_data.1632" }
%"class.absl::optional_internal::optional_data.1632" = type { %"class.absl::optional_internal::optional_data_base.1633" }
%"class.absl::optional_internal::optional_data_base.1633" = type { %"class.absl::optional_internal::optional_data_dtor_base.1634" }
%"class.absl::optional_internal::optional_data_dtor_base.1634" = type { i8, %union.anon.1635 }
%union.anon.1635 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.1563", i32, [4 x i8], %class.scoped_refptr.764, i16, [6 x i8] }>
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.22", i32, [4 x i8], %"class.blink::HeapHashSet.1638", %"class.blink::HeapHashSet.1646", %"class.std::__1::unique_ptr.1653", %"class.absl::optional.1686" }
%"class.blink::HeapHashSet.1638" = type { %"class.WTF::HashSet.1641" }
%"class.WTF::HashSet.1641" = type { %"class.WTF::HashTable.1642" }
%"class.WTF::HashTable.1642" = type <{ %"class.blink::Member.1644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.1572", %"class.absl::optional.1563", %"class.absl::optional.1563", %"class.absl::optional.1631", %"class.absl::optional.1563", i8, [3 x i8], i32, %"class.blink::Member.1791", %"class.blink::Member.1791", %"class.blink::Member.1793", %"class.blink::Member.22", %"class.blink::Member.1636", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1795", %"class.blink::Member.1795", %"class.blink::Member.1795", %"class.std::__1::unique_ptr.1797", i8, [3 x i8], i32, %"class.blink::Member.1803", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1782" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1770" }
%"class.blink::HeapVector.1770" = type { %"class.WTF::Vector.1773" }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775", [32 x i8] }
%"class.WTF::VectorBufferBase.1775" = type { %"struct.std::__1::pair.1776"*, i32, i32 }
%"struct.std::__1::pair.1776" = type { %"class.WTF::AtomicString", %"class.blink::Member.1777" }
%"class.blink::Member.1777" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::HeapVector.1779"* }
%"class.blink::HeapVector.1779" = type opaque
%"class.std::__1::unique_ptr.1782" = type { %"class.std::__1::__compressed_pair.1783" }
%"class.std::__1::__compressed_pair.1783" = type { %"struct.std::__1::__compressed_pair_elem.1784" }
%"struct.std::__1::__compressed_pair_elem.1784" = type { %"class.WTF::Vector.1785"* }
%"class.WTF::Vector.1785" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1789" }
%"class.blink::WeakMember.1789" = type { %"class.blink::MemberBase.1790" }
%"class.blink::MemberBase.1790" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1791" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1793" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1795" = type { %"class.blink::MemberBase.1796" }
%"class.blink::MemberBase.1796" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.1572", %"class.absl::optional.1572", double, i8, i32 }
%"class.blink::Member.1803" = type { %"class.blink::MemberBase.1804" }
%"class.blink::MemberBase.1804" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1807", %"class.std::__1::unique_ptr.1808", %"class.blink::Member.1644" }
%"class.blink::ThreadState::PrefinalizerRegistration.1807" = type { i8 }
%"class.std::__1::unique_ptr.1808" = type { %"class.std::__1::__compressed_pair.1809" }
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.1810" }
%"struct.std::__1::__compressed_pair_elem.1810" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.1646" = type { %"class.WTF::HashSet.1649" }
%"class.WTF::HashSet.1649" = type { %"class.WTF::HashTable.1650" }
%"class.WTF::HashTable.1650" = type <{ %"class.blink::WeakMember.1652"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1652" = type opaque
%"class.std::__1::unique_ptr.1653" = type { %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.1656 }
%class.scoped_refptr.1656 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.1657", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.1657" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.1658" }
%"class.std::__1::__hash_table.1658" = type <{ %"class.std::__1::unique_ptr.1659", %"class.std::__1::__compressed_pair.1669", %"class.std::__1::__compressed_pair.1674", %"class.std::__1::__compressed_pair.1678", [4 x i8] }>
%"class.std::__1::unique_ptr.1659" = type { %"class.std::__1::__compressed_pair.1660" }
%"class.std::__1::__compressed_pair.1660" = type { %"struct.std::__1::__compressed_pair_elem.1661", %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1661" = type { %"struct.std::__1::__hash_node_base.1662"** }
%"struct.std::__1::__hash_node_base.1662" = type { %"struct.std::__1::__hash_node_base.1662"* }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"class.std::__1::__bucket_list_deallocator.1664" }
%"class.std::__1::__bucket_list_deallocator.1664" = type { %"class.std::__1::__compressed_pair.1665" }
%"class.std::__1::__compressed_pair.1665" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"struct.std::__1::__hash_node_base.1662" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.1686" = type { %"class.absl::optional_internal::optional_data.1687" }
%"class.absl::optional_internal::optional_data.1687" = type { %"class.absl::optional_internal::optional_data_base.1688" }
%"class.absl::optional_internal::optional_data_base.1688" = type { %"class.absl::optional_internal::optional_data_dtor_base.1689" }
%"class.absl::optional_internal::optional_data_dtor_base.1689" = type { i8, %union.anon.1690 }
%union.anon.1690 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.1691" }
%"class.absl::optional.1691" = type { %"class.absl::optional_internal::optional_data.1692" }
%"class.absl::optional_internal::optional_data.1692" = type { %"class.absl::optional_internal::optional_data_base.1693" }
%"class.absl::optional_internal::optional_data_base.1693" = type { %"class.absl::optional_internal::optional_data_dtor_base.1694" }
%"class.absl::optional_internal::optional_data_dtor_base.1694" = type { i8, %union.anon.1695 }
%union.anon.1695 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.1701" = type { %"class.WTF::HashSet.1704" }
%"class.WTF::HashSet.1704" = type { %"class.WTF::HashTable.1705" }
%"class.WTF::HashTable.1705" = type <{ %"class.blink::Member.1707"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.1697" = type { %"class.WTF::VectorBuffer.1698" }
%"class.WTF::VectorBuffer.1698" = type { %"class.WTF::VectorBufferBase.930" }
%"class.blink::HeapVector.1708" = type { %"class.WTF::Vector.1711" }
%"class.WTF::Vector.1711" = type { %"class.WTF::VectorBuffer.1712" }
%"class.WTF::VectorBuffer.1712" = type { %"class.WTF::VectorBufferBase.1713" }
%"class.WTF::VectorBufferBase.1713" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.1644", %"class.blink::Member.1559", %"struct.blink::Timing", %"class.blink::Member.1039", i32, %"class.blink::Member.1636", %"class.WTF::Vector.783" }
%"class.blink::HeapVector.1715" = type { %"class.WTF::Vector.1718" }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.blink::Member.1644"*, i32, i32 }
%"class.blink::HeapHashMap.1722" = type { %"class.WTF::HashMap.1725" }
%"class.WTF::HashMap.1725" = type { %"class.WTF::HashTable.1726" }
%"class.WTF::HashTable.1726" = type <{ %"struct.WTF::KeyValuePair.1728"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1728" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1907" }
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.490, %class.scoped_refptr.490, %class.scoped_refptr.490, double, %"class.blink::Member.1559" }
%"class.WTF::HashSet.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.1754", %"class.WTF::HashSet.1754", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::CascadeInterpolations" = type { %"class.WTF::Vector.1758" }
%"class.blink::CascadeMap" = type { i64, i8, %"class.blink::CascadeMap::NativeMap", %"class.blink::CascadeMap::NativeMap", %"class.blink::CascadeMap::NativeMap", %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763" }
%"class.blink::CascadeMap::NativeMap" = type { %"class.blink::CSSBitsetBase", [4992 x i8] }
%"class.blink::CSSBitsetBase" = type { [10 x i64] }
%"class.WTF::HashMap.1763" = type { %"class.WTF::HashTable.1764" }
%"class.WTF::HashTable.1764" = type <{ %"struct.WTF::KeyValuePair.1767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1767" = type { %"class.blink::CSSPropertyName", %"class.blink::CascadePriority" }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::CascadePriority" = type { i64 }
%"class.blink::CascadeResolver" = type { %"class.WTF::Vector.1814", i32, i32, %"class.blink::CascadeFilter", i8, i32, %struct.anon.1819 }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816", [64 x i8] }
%"class.WTF::VectorBufferBase.1816" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.blink::CascadeFilter" = type { i32, i32 }
%struct.anon.1819 = type { %"class.blink::cssvalue::CSSPendingSubstitutionValue"*, %"class.blink::HeapVector.1838" }
%"class.blink::cssvalue::CSSPendingSubstitutionValue" = type { %"class.blink::CSSValue", i32, %"class.blink::Member.1820" }
%"class.blink::Member.1820" = type { %"class.blink::MemberBase.1821" }
%"class.blink::MemberBase.1821" = type { %"class.blink::CSSVariableReferenceValue"* }
%"class.blink::CSSVariableReferenceValue" = type { %"class.blink::CSSValue", %class.scoped_refptr.1822, %"class.blink::Member.1832" }
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.176, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.1836", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::Document"* }
%"class.blink::HeapVector.1838" = type { %"class.WTF::Vector.1841" }
%"class.WTF::Vector.1841" = type { %"class.WTF::VectorBuffer.1842" }
%"class.WTF::VectorBuffer.1842" = type { %"class.WTF::VectorBufferBase.1843", [6144 x i8] }
%"class.WTF::VectorBufferBase.1843" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1074" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.556", %"class.blink::DataRef.634", %"class.blink::DataRef.638", %"class.blink::DataRef.836", %"class.blink::DataRef.890", %"class.blink::DataRef.894", %"class.blink::DataRef.898", %"class.blink::DataRef.902", [20 x i8], [4 x i8] }>
%"class.blink::StylePropertyShorthand" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.blink::MatchedExpansionsRange" = type { %"class.blink::MatchedExpansionsIterator", %"class.blink::MatchedExpansionsIterator" }
%"class.blink::MatchedExpansionsIterator" = type { %"struct.blink::MatchedProperties"*, %"class.blink::Document"*, %"class.blink::CascadeFilter", i64 }
%"class.blink::CascadeExpansion" = type { %"class.blink::Document"*, i32, %"struct.blink::MatchedProperties"*, %"class.blink::CascadePriority", i64, i64, %"class.blink::CascadeFilter", i64, i32, %"class.blink::CSSProperty"*, %"class.blink::CustomProperty" }
%"class.blink::CustomProperty" = type { %"class.blink::Variable.base", %"class.WTF::AtomicString", %"class.blink::Member.1852" }
%"class.blink::Variable.base" = type { %"class.blink::Longhand.base" }
%"class.blink::Longhand.base" = type { %"class.blink::CSSProperty.base" }
%"class.blink::CSSProperty.base" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8 }>
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::ScopedCSSValue" = type { %"class.blink::CSSValue"*, %"class.blink::TreeScope"* }
%"class.WTF::Vector.1947" = type { %"class.WTF::VectorBuffer.1948" }
%"class.WTF::VectorBuffer.1948" = type { %"class.WTF::VectorBufferBase.1843", [96 x i8] }
%"class.blink::CSSPropertyRef" = type { i32, %"class.blink::CustomProperty" }
%"class.blink::cssvalue::CSSUnsetValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1822, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1867" = type { %"class.WTF::HashMap.1870" }
%"class.WTF::HashMap.1870" = type { %"class.WTF::HashTable.1871" }
%"class.WTF::HashTable.1871" = type <{ %"struct.WTF::KeyValuePair.1873"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1873" = type { %"class.blink::CSSPropertyName", %"class.blink::Member.1074" }
%"class.blink::CSSInterpolationTypesMap" = type <{ %"class.blink::InterpolationTypesMap", %"class.blink::PropertyRegistry"*, i8, [7 x i8] }>
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::CSSInterpolationEnvironment" = type { %"class.blink::InterpolationEnvironment", %"class.blink::StyleResolverState"*, %"class.blink::ComputedStyle"*, %"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::TransitionInterpolation" = type { %"class.blink::Interpolation", %"class.blink::PropertyHandle", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue", %"struct.blink::PairwiseInterpolationValue", %"class.blink::Member.1885", %"class.blink::Member.1885", double, i32, %"class.std::__1::unique_ptr.1876" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.1876", %class.scoped_refptr.1882 }
%class.scoped_refptr.1882 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.1883", [4 x i8] }>
%"class.WTF::RefCounted.1883" = type { %"class.base::RefCounted.1884" }
%"class.base::RefCounted.1884" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.1876", %"class.std::__1::unique_ptr.1876", %class.scoped_refptr.1882 }
%"class.blink::Member.1885" = type { %"class.blink::MemberBase.1886" }
%"class.blink::MemberBase.1886" = type { %"class.blink::CompositorKeyframeValue"* }
%"class.blink::CompositorKeyframeValue" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1876" = type { %"class.std::__1::__compressed_pair.1877" }
%"class.std::__1::__compressed_pair.1877" = type { %"struct.std::__1::__compressed_pair_elem.1878" }
%"struct.std::__1::__compressed_pair_elem.1878" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.blink::CascadeResolver::AutoLock" = type { %"class.blink::CascadeResolver"* }
%"class.blink::CSSInvalidVariableValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSCyclicVariableValue" = type { %"class.blink::CSSInvalidVariableValue" }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.blink::CSSParserLocalContext" = type { i8, i8, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::internal::ConcurrentBucket" = type { [16 x i8], %"class.blink::Member.1074"* }

$_ZN5blink24InterpolationEnvironmentD2Ev = comdat any

$_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CascadeInterpolations5EntryEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIPKN5blink11CSSPropertyELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZNK3WTF6VectorIN5blink17MatchedPropertiesELj64ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv = comdat any

$_ZNK5blink24InterpolationEnvironment5IsSVGEv = comdat any

$_ZN5blink27CSSInterpolationEnvironmentD0Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj8ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_ = comdat any

$_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_ = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS3_12KeyValuePairIS5_NS_6MemberIKNS_8CSSValueEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS4_NS3_6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_ = comdat any

$_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_ = comdat any

$_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_ = comdat any

$_ZNK3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISE_SJ_SK_EES2_EEPKSA_RKT0_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_ = comdat any

$_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty = comdat any

$_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty = comdat any

$_ZTVN5blink27CSSInterpolationEnvironmentE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CascadeInterpolations5EntryEEEPKcv = private unnamed_addr constant [83 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CascadeInterpolations::Entry]\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty = linkonce_odr hidden local_unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 8
@_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty = linkonce_odr hidden global i64 0, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [124 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<blink::CascadeInterpolations::Entry, 4, WTF::PartitionAllocator>]\00", align 1
@_ZTVN5blink27CSSInterpolationEnvironmentE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::CSSInterpolationEnvironment"*)* @_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolationEnvironment"*)* @_ZNK5blink24InterpolationEnvironment5IsSVGEv to i8*), i8* bitcast (void (%"class.blink::InterpolationEnvironment"*)* @_ZN5blink24InterpolationEnvironmentD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationEnvironment"*)* @_ZN5blink27CSSInterpolationEnvironmentD0Ev to i8*)] }, comdat, align 8
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink14CustomPropertyE = external unnamed_addr constant { [25 x i8*] }, align 8
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS3_12KeyValuePairIS5_NS_6MemberIKNS_8CSSValueEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink12StyleCascade13TokenSequenceC1EPKNS_15CSSVariableDataE = hidden unnamed_addr alias void (%"class.blink::StyleCascade::TokenSequence"*, %"class.blink::CSSVariableData"*), void (%"class.blink::StyleCascade::TokenSequence"*, %"class.blink::CSSVariableData"*)* @_ZN5blink12StyleCascade13TokenSequenceC2EPKNS_15CSSVariableDataE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden dereferenceable(1096) %"class.blink::MatchResult"* @_ZN5blink12StyleCascade18MutableMatchResultEv(%"class.blink::StyleCascade"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 5
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1
  ret %"class.blink::MatchResult"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade17AddInterpolationsEPKNS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_10HeapVectorINS3_INS_13InterpolationEEELj1EEEEEN3WTF11DefaultHashIS2_E4HashENS9_10HashTraitsIS2_EENSD_IS8_EEEENS_13CascadeOriginE(%"class.blink::StyleCascade"*, %"class.blink::HeapHashMap.1733"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.blink::CascadeInterpolations::Entry", align 8
  %5 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 6
  store i8 1, i8* %5, align 2
  %6 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2
  %7 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %4, i64 0, i32 0
  store %"class.blink::HeapHashMap.1733"* %1, %"class.blink::HeapHashMap.1733"** %8, align 8
  %9 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %4, i64 0, i32 1
  store i8 %2, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %23, label %15, !prof !2

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::CascadeInterpolations", %"class.blink::CascadeInterpolations"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %16, align 8
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %17, i64 %18
  %20 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %7, i64 16, i1 false) #15
  %21 = load i32, i32* %10, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %10, align 4
  br label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::CascadeInterpolations", %"class.blink::CascadeInterpolations"* %6, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1758"* %24, %"struct.blink::CascadeInterpolations::Entry"* nonnull dereferenceable(16) %4) #15
  br label %25

25:                                               ; preds = %15, %23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade5ApplyENS_13CascadeFilterE(%"class.blink::StyleCascade"*, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::CascadeResolver", align 8
  %4 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN5blink12StyleCascade18AnalyzeMatchResultEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %4, align 1
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 2, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink12StyleCascade21AnalyzeInterpolationsEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %9, align 2
  br label %13

13:                                               ; preds = %8, %12
  %14 = bitcast %"class.blink::CascadeResolver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6272, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 6256, i1 false)
  %16 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 8
  %18 = add i8 %17, 1
  store i8 %18, i8* %16, align 8
  %19 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %20 = bitcast %"class.blink::CascadeResolver"* %3 to i8**
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 8, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 1
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 2
  store i32 -1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 3
  %26 = bitcast %"class.blink::CascadeFilter"* %25 to i64*
  store i64 %1, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 4
  store i8 %18, i8* %27, align 8
  %28 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 5
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 0
  store %"class.blink::cssvalue::CSSPendingSubstitutionValue"* null, %"class.blink::cssvalue::CSSPendingSubstitutionValue"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 1
  %31 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 1, i32 0, i32 0, i32 1, i64 0
  %32 = bitcast %"class.blink::HeapVector.1838"* %30 to i8**
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast i32* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 6148, i1 false) #15
  call void @_ZN5blink12StyleCascade21ApplyCascadeAffectingERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  %36 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink25GetCSSPropertyColorSchemeEv() #15
  call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %36, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  %37 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyMathDepthEv() #15
  call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %37, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  call void @_ZN5blink12StyleCascade22ApplyWebkitBorderImageERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  %38 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyWebkitMaskImageEv() #15
  call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %38, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  call void @_ZN5blink12StyleCascade17ApplyHighPriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  call void @_ZN5blink12StyleCascade16ApplyMatchResultERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  call void @_ZN5blink12StyleCascade19ApplyInterpolationsERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CascadeResolver"* nonnull dereferenceable(6272) %3)
  %39 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %40 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %40, i64 0, i32 2, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %44, i64 0, i32 12
  %46 = load i16, i16* %45, align 4
  %47 = and i16 %46, 31
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %13
  %50 = load i32, i32* %28, align 4
  %51 = trunc i32 %50 to i16
  %52 = icmp slt i16 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = or i160 %56, 1329227995784915872903807060280344576
  store i160 %57, i160* %55, align 8
  %58 = load i32, i32* %28, align 4
  br label %59

59:                                               ; preds = %53, %49
  %60 = phi i32 [ %58, %53 ], [ %50, %49 ]
  %61 = and i32 %60, 65536
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %59
  %64 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %39, align 8
  %65 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %64, i64 0, i32 2, i32 0
  %66 = bitcast %"class.blink::ComputedStyle"** %65 to %"class.blink::ComputedStyleBase"**
  %67 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %67, i64 0, i32 9
  %69 = bitcast [20 x i8]* %68 to i160*
  %70 = load i160, i160* %69, align 8
  %71 = or i160 %70, 2658455991569831745807614120560689152
  store i160 %71, i160* %69, align 8
  br label %72

72:                                               ; preds = %13, %59, %63
  %73 = load i32, i32* %34, align 4
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %74, label %76, label %78, !prof !2

76:                                               ; preds = %72
  %77 = bitcast i8* %31 to %"class.blink::CSSPropertyValue"*
  br label %109

78:                                               ; preds = %72
  %79 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %75, align 8
  %80 = icmp ne %"class.blink::CSSPropertyValue"* %79, null
  %81 = bitcast i8* %31 to %"class.blink::CSSPropertyValue"*
  %82 = icmp ne %"class.blink::CSSPropertyValue"* %79, %81
  %83 = and i1 %80, %82
  br i1 %83, label %109, label %84

84:                                               ; preds = %78
  %85 = zext i32 %73 to i64
  %86 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %79, i64 %85
  br label %87

87:                                               ; preds = %105, %84
  %88 = phi %"class.blink::CSSPropertyValue"* [ %106, %105 ], [ %79, %84 ]
  %89 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #15
  br label %105

105:                                              ; preds = %104, %101, %87
  %106 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %88, i64 1
  %107 = icmp eq %"class.blink::CSSPropertyValue"* %106, %86
  br i1 %107, label %108, label %87

108:                                              ; preds = %105
  store i32 0, i32* %34, align 4
  br label %109

109:                                              ; preds = %76, %108, %78
  %110 = phi %"class.blink::CSSPropertyValue"* [ %77, %76 ], [ %81, %108 ], [ %81, %78 ]
  %111 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %75, align 8
  %112 = icmp eq %"class.blink::CSSPropertyValue"* %111, %110
  br i1 %112, label %115, label %113, !prof !4

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %30, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1842"* %114, %"class.blink::CSSPropertyValue"* %111) #15
  br label %115

115:                                              ; preds = %113, %109
  store %"class.blink::CSSPropertyValue"* null, %"class.blink::CSSPropertyValue"** %75, align 8
  %116 = load i32, i32* %22, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %119, label %118, !prof !2

118:                                              ; preds = %115
  store i32 0, i32* %22, align 4
  br label %119

119:                                              ; preds = %118, %115
  %120 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %120, align 8
  %122 = bitcast i8* %19 to %"class.blink::CSSProperty"**
  %123 = icmp eq %"class.blink::CSSProperty"** %121, %122
  br i1 %123, label %126, label %124, !prof !4

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKN5blink11CSSPropertyELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1815"* nonnull %125, %"class.blink::CSSProperty"** %121) #15
  br label %126

126:                                              ; preds = %119, %124
  call void @llvm.lifetime.end.p0i8(i64 6272, i8* nonnull %14) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade15AnalyzeIfNeededEv(%"class.blink::StyleCascade"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink12StyleCascade18AnalyzeMatchResultEv(%"class.blink::StyleCascade"* %0)
  store i8 0, i8* %2, align 1
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink12StyleCascade21AnalyzeInterpolationsEv(%"class.blink::StyleCascade"* %0)
  store i8 0, i8* %7, align 2
  br label %11

11:                                               ; preds = %6, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade21ApplyCascadeAffectingERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %4 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %4, i64 0, i32 2, i32 0
  %6 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %7, i64 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyDirectionEv() #15
  tail call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %11, %"class.blink::CascadeResolver"* dereferenceable(6272) %1)
  %12 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink25GetCSSPropertyWritingModeEv() #15
  tail call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %12, %"class.blink::CascadeResolver"* dereferenceable(6272) %1)
  %13 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  %14 = load i8, i8* %13, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %2
  %17 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %3, align 8
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %17, i64 0, i32 2, i32 0
  %19 = bitcast %"class.blink::ComputedStyle"** %18 to %"class.blink::ComputedStyleBase"**
  %20 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %20, i64 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = xor i160 %23, %10
  %25 = and i160 %24, 41553586675481359781061931072225280
  %26 = icmp eq i160 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  tail call void @_ZN5blink10CascadeMap5ResetEv(%"class.blink::CascadeMap"* %28) #15
  %29 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 4
  store i8 0, i8* %29, align 8
  store i8 0, i8* %13, align 1
  %30 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 5
  store i8 1, i8* %30, align 1
  %31 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 6
  store i8 1, i8* %31, align 2
  tail call void @_ZN5blink12StyleCascade18AnalyzeMatchResultEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %30, align 1
  %32 = load i8, i8* %31, align 2, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %27
  tail call void @_ZN5blink12StyleCascade21AnalyzeInterpolationsEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %31, align 2
  br label %35

35:                                               ; preds = %16, %34, %27, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = bitcast %"class.blink::CSSPropertyName"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = bitcast %"class.blink::CSSProperty"* %1 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %8 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %7, align 8
  %9 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %8, i64 6
  %10 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %9, align 8
  %11 = tail call { i32, %"class.WTF::StringImpl"* } %10(%"class.blink::CSSProperty"* %1) #15
  %12 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %13 = extractvalue { i32, %"class.WTF::StringImpl"* } %11, 0
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = extractvalue { i32, %"class.WTF::StringImpl"* } %11, 1
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %17 = call %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %16, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4) #15
  %18 = icmp eq %"class.blink::CascadePriority"* %17, null
  br i1 %18, label %50, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %17, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %2, i64 0, i32 4
  %23 = load i8, i8* %22, align 8
  %24 = and i64 %21, -16
  %25 = zext i8 %23 to i64
  %26 = or i64 %24, %25
  %27 = icmp ult i64 %21, %26
  br i1 %27, label %28, label %50

28:                                               ; preds = %19
  store i64 %26, i64* %20, align 8
  %29 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %2, i64 0, i32 3, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = xor i32 %30, -1
  %34 = xor i32 %32, %33
  %35 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %2, i64 0, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, %34
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %28
  %40 = lshr i64 %21, 55
  %41 = shl i64 %40, 63
  %42 = ashr exact i64 %41, 63
  %43 = and i64 %42, 12
  %44 = lshr i64 %21, 52
  %45 = xor i64 %43, %44
  %46 = trunc i64 %45 to i8
  %47 = icmp ult i8 %46, 4
  br i1 %47, label %48, label %49

48:                                               ; preds = %39
  call void @_ZN5blink12StyleCascade25LookupAndApplyDeclarationERKNS_11CSSPropertyENS_15CascadePriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, i64 %26, %"class.blink::CascadeResolver"* dereferenceable(6272) %2) #15
  br label %50

49:                                               ; preds = %39
  call void @_ZN5blink12StyleCascade27LookupAndApplyInterpolationERKNS_11CSSPropertyENS_15CascadePriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, i64 %26, %"class.blink::CascadeResolver"* dereferenceable(6272) %2) #15
  br label %50

50:                                               ; preds = %28, %19, %48, %49, %3
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #15
  br label %66

66:                                               ; preds = %50, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret void
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink25GetCSSPropertyColorSchemeEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyMathDepthEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade22ApplyWebkitBorderImageERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  store i32 388, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = call %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %5, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3) #15
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #15
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  %26 = icmp eq %"class.blink::CascadePriority"* %9, null
  br i1 %26, label %85, label %27

27:                                               ; preds = %25
  %28 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink31GetCSSPropertyWebkitBorderImageEv() #15
  call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %28, %"class.blink::CascadeResolver"* dereferenceable(6272) %1)
  %29 = call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20borderImageShorthandEv() #15
  %30 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %29, i64 0, i32 0
  %31 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %85, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  %37 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %9, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %1, i64 0, i32 4
  br label %41

41:                                               ; preds = %35, %80
  %42 = phi i64 [ 0, %35 ], [ %81, %80 ]
  %43 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %31, i64 %42
  %44 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #15
  %45 = bitcast %"class.blink::CSSProperty"* %44 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %46 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %45, align 8
  %47 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %46, i64 6
  %48 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %47, align 8
  %49 = call { i32, %"class.WTF::StringImpl"* } %48(%"class.blink::CSSProperty"* %44) #15
  %50 = extractvalue { i32, %"class.WTF::StringImpl"* } %49, 0
  store i32 %50, i32* %37, align 8
  %51 = extractvalue { i32, %"class.WTF::StringImpl"* } %49, 1
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %38, align 8
  %52 = call %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %5, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4) #15
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %41
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #15
  br label %68

68:                                               ; preds = %41, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #15
  %69 = icmp eq %"class.blink::CascadePriority"* %52, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %52, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %39, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = load i8, i8* %40, align 8
  %77 = and i64 %72, -16
  %78 = zext i8 %76 to i64
  %79 = or i64 %77, %78
  store i64 %79, i64* %71, align 8
  br label %80

80:                                               ; preds = %68, %70, %75
  %81 = add nuw nsw i64 %42, 1
  %82 = load i32, i32* %32, align 8
  %83 = zext i32 %82 to i64
  %84 = icmp ult i64 %81, %83
  br i1 %84, label %41, label %85

85:                                               ; preds = %80, %27, %25
  ret void
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyWebkitMaskImageEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade17ApplyHighPriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::CSSToLengthConversionData::FontSizes", align 8
  %4 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2, %15
  %8 = phi i64 [ %16, %15 ], [ 2, %2 ]
  %9 = shl i64 1, %8
  %10 = and i64 %9, %5
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = trunc i64 %8 to i32
  %14 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %13) #15
  tail call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %14, %"class.blink::CascadeResolver"* dereferenceable(6272) %1)
  br label %15

15:                                               ; preds = %7, %12
  %16 = add nuw nsw i64 %8, 1
  %17 = icmp eq i64 %16, 28
  br i1 %17, label %18, label %7

18:                                               ; preds = %15, %2
  %19 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %20 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %20, i64 0, i32 9
  %22 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %20, i64 0, i32 2, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %20, i64 0, i32 4, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  tail call void @_ZN5blink11FontBuilder10CreateFontERNS_13ComputedStyleEPKS1_(%"class.blink::FontBuilder"* %21, %"class.blink::ComputedStyle"* dereferenceable(104) %23, %"class.blink::ComputedStyle"* %25) #15
  %26 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %19, align 8
  %27 = bitcast %"class.blink::CSSToLengthConversionData::FontSizes"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %26, i64 0, i32 2, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %26, i64 0, i32 0, i32 3, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = icmp eq %"class.blink::ComputedStyle"* %31, null
  %33 = select i1 %32, %"class.blink::ComputedStyle"* %29, %"class.blink::ComputedStyle"* %31
  call void @_ZN5blink25CSSToLengthConversionData9FontSizesC1EPKNS_13ComputedStyleES4_(%"class.blink::CSSToLengthConversionData::FontSizes"* nonnull %3, %"class.blink::ComputedStyle"* %29, %"class.blink::ComputedStyle"* %33) #15
  %34 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %26, i64 0, i32 3, i32 1
  %35 = bitcast %"class.blink::CSSToLengthConversionData::FontSizes"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %27, i64 20, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %36 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %19, align 8
  %37 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %36, i64 0, i32 2, i32 0
  %38 = bitcast %"class.blink::ComputedStyle"** %37 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %43, i64 0, i32 6
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %36, i64 0, i32 3, i32 3
  %48 = bitcast float* %47 to i32*
  store i32 %46, i32* %48, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade16ApplyMatchResultERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::MatchedExpansionsRange", align 8
  %4 = alloca %"class.blink::CascadeExpansion", align 8
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.blink::ScopedCSSValue", align 8
  %8 = bitcast %"class.blink::MatchedExpansionsRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %11 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %11, i64 0, i32 1
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %1, i64 0, i32 3
  %15 = bitcast %"class.blink::CascadeFilter"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  call void @_ZNK5blink11MatchResult10ExpansionsERKNS_8DocumentENS_13CascadeFilterE(%"class.blink::MatchedExpansionsRange"* nonnull sret %3, %"class.blink::MatchResult"* %9, %"class.blink::Document"* dereferenceable(2848) %13, i64 %16) #15
  %17 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %3, i64 0, i32 0, i32 0
  %18 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %3, i64 0, i32 0, i32 1
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %3, i64 0, i32 0, i32 2
  %22 = bitcast %"class.blink::CascadeFilter"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %3, i64 0, i32 1, i32 0
  %25 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %24, align 8
  %26 = icmp eq %"struct.blink::MatchedProperties"* %18, %25
  br i1 %26, label %47, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %3, i64 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::CascadeExpansion"* %4 to i8*
  %31 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %4, i64 0, i32 4
  %32 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %4, i64 0, i32 5
  %33 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %4, i64 0, i32 3, i32 0
  %34 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %1, i64 0, i32 4
  %35 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %4, i64 0, i32 9
  %36 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  %37 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %38 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  %39 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1, i32 1, i32 0
  %42 = bitcast %"class.blink::ScopedCSSValue"* %7 to i8*
  %43 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %7, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %7, i64 0, i32 1
  %45 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %4, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %4, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  br label %48

47:                                               ; preds = %177, %2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #15
  ret void

48:                                               ; preds = %27, %177
  %49 = phi i64 [ %29, %27 ], [ %179, %177 ]
  %50 = phi %"struct.blink::MatchedProperties"* [ %18, %27 ], [ %178, %177 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %30) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 120, i1 false)
  call void @_ZN5blink16CascadeExpansionC1ERKNS_17MatchedPropertiesERKNS_8DocumentENS_13CascadeFilterEm(%"class.blink::CascadeExpansion"* nonnull %4, %"struct.blink::MatchedProperties"* dereferenceable(16) %50, %"class.blink::Document"* dereferenceable(2848) %20, i64 %23, i64 %49) #15
  %51 = load i64, i64* %31, align 8
  %52 = load i64, i64* %32, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %54, label %161

54:                                               ; preds = %48, %157
  %55 = load i64, i64* %33, align 8
  %56 = load i8, i8* %34, align 8
  %57 = and i64 %55, -16
  %58 = zext i8 %56 to i64
  %59 = or i64 %57, %58
  %60 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %35, align 8
  %61 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 8192
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %54
  store i8 1, i8* %36, align 1
  %66 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %10, align 8
  %67 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %66, i64 0, i32 2, i32 0
  %68 = bitcast %"class.blink::ComputedStyle"** %67 to %"class.blink::ComputedStyleBase"**
  %69 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %69, i64 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8
  %73 = lshr i160 %72, 115
  %74 = trunc i160 %73 to i8
  %75 = and i8 %74, 1
  %76 = lshr i160 %72, 102
  %77 = trunc i160 %76 to i8
  %78 = and i8 %77, 3
  %79 = bitcast %"class.blink::CSSProperty"* %60 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %80 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %79, align 8
  %81 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %80, i64 15
  %82 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %81, align 8
  %83 = call %"class.blink::CSSProperty"* %82(%"class.blink::CSSProperty"* %60, i8 zeroext %75, i8 zeroext %78) #15
  br label %84

84:                                               ; preds = %54, %65
  %85 = phi %"class.blink::CSSProperty"* [ %83, %65 ], [ %60, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #15
  %86 = bitcast %"class.blink::CSSProperty"* %85 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %87 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %86, align 8
  %88 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %87, i64 6
  %89 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %88, align 8
  %90 = call { i32, %"class.WTF::StringImpl"* } %89(%"class.blink::CSSProperty"* %85) #15
  %91 = extractvalue { i32, %"class.WTF::StringImpl"* } %90, 0
  store i32 %91, i32* %39, align 8
  %92 = extractvalue { i32, %"class.WTF::StringImpl"* } %90, 1
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %40, align 8
  %93 = call %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %37, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5) #15
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #15
  br label %109

109:                                              ; preds = %84, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #15
  %110 = icmp eq %"class.blink::CascadePriority"* %93, null
  br i1 %110, label %157, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %93, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp ult i64 %113, %59
  br i1 %114, label %115, label %157

115:                                              ; preds = %111
  store i64 %59, i64* %112, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #15
  %116 = lshr i64 %55, 55
  %117 = shl i64 %116, 63
  %118 = ashr exact i64 %117, 63
  %119 = and i64 %118, 15
  %120 = lshr i64 %55, 52
  %121 = xor i64 %119, %120
  %122 = trunc i64 %121 to i8
  store i8 %122, i8* %6, align 1
  %123 = load i64, i64* %31, align 8
  %124 = call { %"class.blink::CSSPropertyValueSet"*, i32 } @_ZNK5blink16CascadeExpansion10PropertyAtEm(%"class.blink::CascadeExpansion"* nonnull %4, i64 %123) #15
  %125 = extractvalue { %"class.blink::CSSPropertyValueSet"*, i32 } %124, 0
  %126 = extractvalue { %"class.blink::CSSPropertyValueSet"*, i32 } %124, 1
  %127 = icmp eq %"class.blink::CSSPropertyValueSet"* %125, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %125, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, -1
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %125, i64 4
  %134 = bitcast %"class.blink::CSSPropertyValueSet"* %133 to %"class.WTF::Vector.1947"*
  %135 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1947"* %134, i32 %126) #15
  %136 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %135, i64 0, i32 1, i32 0, i32 0
  br label %142

137:                                              ; preds = %128, %115
  %138 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %125, i64 2
  %139 = bitcast %"class.blink::CSSPropertyValueSet"* %138 to %"class.blink::Member.1074"*
  %140 = zext i32 %126 to i64
  %141 = getelementptr inbounds %"class.blink::Member.1074", %"class.blink::Member.1074"* %139, i64 %140, i32 0, i32 0
  br label %142

142:                                              ; preds = %132, %137
  %143 = phi %"class.blink::CSSValue"** [ %141, %137 ], [ %136, %132 ]
  %144 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %143, align 8
  %145 = call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade7ResolveERKNS_11CSSPropertyERKNS_8CSSValueERNS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %85, %"class.blink::CSSValue"* dereferenceable(3) %144, i8* nonnull dereferenceable(1) %6, %"class.blink::CascadeResolver"* dereferenceable(6272) %1)
  %146 = load i8, i8* %6, align 1
  %147 = icmp eq i8 %146, 3
  br i1 %147, label %148, label %154

148:                                              ; preds = %142
  %149 = call zeroext i16 @_ZNK5blink16CascadeExpansion9TreeOrderEv(%"class.blink::CascadeExpansion"* nonnull %4) #15
  %150 = zext i16 %149 to i32
  %151 = call dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"* %41, i32 %150) #15
  %152 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %152, align 8
  br label %154

154:                                              ; preds = %142, %148
  %155 = phi %"class.blink::TreeScope"* [ %153, %148 ], [ null, %142 ]
  %156 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #15
  store %"class.blink::CSSValue"* %145, %"class.blink::CSSValue"** %43, align 8
  store %"class.blink::TreeScope"* %155, %"class.blink::TreeScope"** %44, align 8
  call void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_11CSSPropertyERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSProperty"* dereferenceable(24) %85, %"class.blink::StyleResolverState"* dereferenceable(600) %156, %"class.blink::ScopedCSSValue"* nonnull dereferenceable(16) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #15
  br label %157

157:                                              ; preds = %111, %109, %154
  call void @_ZN5blink16CascadeExpansion4NextEv(%"class.blink::CascadeExpansion"* nonnull %4) #15
  %158 = load i64, i64* %31, align 8
  %159 = load i64, i64* %32, align 8
  %160 = icmp ult i64 %158, %159
  br i1 %160, label %54, label %161

161:                                              ; preds = %157, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #15
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %30) #15
  %178 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %50, i64 1
  %179 = add i64 %49, 1
  %180 = icmp eq %"struct.blink::MatchedProperties"* %178, %25
  br i1 %180, label %47, label %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade19ApplyInterpolationsERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %16, !prof !5

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 80, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 4, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  store i8* %9, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty) #15
  br label %16

16:                                               ; preds = %2, %5, %8
  %17 = load %"class.WTF::Vector.1758"*, %"class.WTF::Vector.1758"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty, i64 0, i32 0, i32 0), align 8
  %18 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp ugt i32 %20, 256
  %22 = select i1 %21, %"class.WTF::Vector.1758"* %17, %"class.WTF::Vector.1758"* %18
  %23 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %22, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %27, %16
  ret void

27:                                               ; preds = %16, %27
  %28 = phi i64 [ %35, %27 ], [ 0, %16 ]
  %29 = trunc i64 %28 to i32
  %30 = tail call dereferenceable(16) %"struct.blink::CascadeInterpolations::Entry"* @_ZNK3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1758"* %22, i32 %29) #15
  %31 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %30, i64 0, i32 0
  %32 = load %"class.blink::HeapHashMap.1733"*, %"class.blink::HeapHashMap.1733"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8
  tail call void @_ZN5blink12StyleCascade21ApplyInterpolationMapERKNS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_10HeapVectorINS3_INS_13InterpolationEEELj1EEEEEN3WTF11DefaultHashIS2_E4HashENS9_10HashTraitsIS2_EENSD_IS8_EEEENS_13CascadeOriginEmRNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::HeapHashMap.1733"* dereferenceable(24) %32, i8 zeroext %34, i64 %28, %"class.blink::CascadeResolver"* dereferenceable(6272) %1)
  %35 = add nuw nsw i64 %28, 1
  %36 = load i32, i32* %23, align 4
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %27, label %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSBitsetBase"* @_ZN5blink12StyleCascade15GetImportantSetEv(%"class.blink::StyleCascade"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::CSSPropertyName", align 8
  %3 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink12StyleCascade18AnalyzeMatchResultEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %3, align 1
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 2, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN5blink12StyleCascade21AnalyzeInterpolationsEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %8, align 2
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 1
  %15 = load i8, i8* %14, align 8, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %165, label %17

17:                                               ; preds = %12
  %18 = tail call i8* @_Znwm(i64 80) #16
  %19 = bitcast i8* %18 to %"class.blink::CSSBitsetBase"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 80, i1 false) #15
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 0
  %22 = load i64, i64* %21, align 8, !noalias !6
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 1
  %26 = load i64, i64* %25, align 8, !noalias !6
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %53, label %28

28:                                               ; preds = %81, %77, %73, %69, %65, %61, %57, %53, %24, %17
  %29 = phi i64 [ 0, %17 ], [ 64, %24 ], [ 128, %53 ], [ 192, %57 ], [ 256, %61 ], [ 320, %65 ], [ 384, %69 ], [ 448, %73 ], [ 512, %77 ], [ 576, %81 ]
  br label %30

30:                                               ; preds = %168, %28
  %31 = phi i64 [ %29, %28 ], [ %169, %168 ]
  %32 = lshr i64 %31, 6
  %33 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 %32
  %34 = load i64, i64* %33, align 8, !noalias !6
  %35 = and i64 %31, 62
  %36 = shl i64 1, %35
  %37 = and i64 %36, %34
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %48

39:                                               ; preds = %30
  %40 = or i64 %31, 1
  %41 = lshr i64 %31, 6
  %42 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 %41
  %43 = load i64, i64* %42, align 8, !noalias !6
  %44 = and i64 %40, 63
  %45 = shl i64 1, %44
  %46 = and i64 %45, %43
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %168, label %48

48:                                               ; preds = %39, %30
  %49 = phi i64 [ %31, %30 ], [ %40, %39 ]
  %50 = phi i64 [ %34, %30 ], [ %43, %39 ]
  %51 = phi i64 [ %35, %30 ], [ %44, %39 ]
  %52 = icmp ult i64 %49, 624
  br i1 %52, label %85, label %165

53:                                               ; preds = %24
  %54 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 2
  %55 = load i64, i64* %54, align 8, !noalias !6
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %28

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 3
  %59 = load i64, i64* %58, align 8, !noalias !6
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %28

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 4
  %63 = load i64, i64* %62, align 8, !noalias !6
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %28

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 5
  %67 = load i64, i64* %66, align 8, !noalias !6
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %28

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 6
  %71 = load i64, i64* %70, align 8, !noalias !6
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %28

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 7
  %75 = load i64, i64* %74, align 8, !noalias !6
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %28

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 8
  %79 = load i64, i64* %78, align 8, !noalias !6
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %28

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 9
  %83 = load i64, i64* %82, align 8, !noalias !6
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %165, label %28

85:                                               ; preds = %48
  %86 = lshr i64 %50, %51
  %87 = bitcast %"class.blink::CSSPropertyName"* %2 to i8*
  %88 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %90

90:                                               ; preds = %85, %161
  %91 = phi i64 [ %86, %85 ], [ %163, %161 ]
  %92 = phi i64 [ %49, %85 ], [ %162, %161 ]
  %93 = trunc i64 %92 to i32
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %109, label %95

95:                                               ; preds = %90
  %96 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %93) #15
  %97 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %96, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = trunc i32 %98 to i8
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %109

101:                                              ; preds = %95
  %102 = bitcast %"class.blink::CSSProperty"* %96 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %103 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %102, align 8
  %104 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %103, i64 14
  %105 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %104, align 8
  %106 = call %"class.blink::CSSProperty"* %105(%"class.blink::CSSProperty"* %96) #15
  %107 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %106, i64 0, i32 1
  %108 = load i32, i32* %107, align 8
  br label %109

109:                                              ; preds = %90, %95, %101
  %110 = phi i32 [ 1, %90 ], [ %108, %101 ], [ %93, %95 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #15
  store i32 %93, i32* %88, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %111 = call i64 @_ZNK5blink10CascadeMap2AtERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %13, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %2) #15
  %112 = sext i32 %110 to i64
  %113 = lshr i64 %111, 55
  %114 = and i64 %113, 1
  %115 = and i64 %112, 63
  %116 = shl i64 %114, %115
  %117 = lshr i64 %112, 6
  %118 = getelementptr inbounds %"class.blink::CSSBitsetBase", %"class.blink::CSSBitsetBase"* %19, i64 0, i32 0, i64 %117
  %119 = load i64, i64* %118, align 8
  %120 = or i64 %116, %119
  store i64 %120, i64* %118, align 8
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %109
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #15
  br label %136

136:                                              ; preds = %109, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #15
  br label %137

137:                                              ; preds = %156, %136
  %138 = phi i64 [ %158, %156 ], [ %91, %136 ]
  %139 = phi i64 [ %157, %156 ], [ %92, %136 ]
  %140 = add i64 %139, 1
  %141 = lshr i64 %138, 1
  %142 = icmp ugt i64 %140, 623
  br i1 %142, label %161, label %143

143:                                              ; preds = %137
  %144 = icmp eq i64 %141, 0
  br i1 %144, label %145, label %156

145:                                              ; preds = %143
  %146 = add nsw i64 %139, 64
  %147 = and i64 %146, -64
  %148 = icmp ult i64 %147, 624
  %149 = select i1 %148, i64 %147, i64 624
  br i1 %148, label %150, label %165

150:                                              ; preds = %145
  %151 = lshr i64 %149, 6
  %152 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i64 %151
  %153 = load i64, i64* %152, align 8
  %154 = and i64 %149, 48
  %155 = lshr i64 %153, %154
  br label %156

156:                                              ; preds = %150, %143
  %157 = phi i64 [ %140, %143 ], [ %147, %150 ]
  %158 = phi i64 [ %141, %143 ], [ %155, %150 ]
  %159 = and i64 %158, 1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %137, label %161

161:                                              ; preds = %137, %156
  %162 = phi i64 [ %140, %137 ], [ %157, %156 ]
  %163 = phi i64 [ %141, %137 ], [ %158, %156 ]
  %164 = icmp eq i64 %162, 624
  br i1 %164, label %165, label %90

165:                                              ; preds = %168, %161, %145, %48, %81, %12
  %166 = phi i64 [ 0, %12 ], [ %20, %81 ], [ %20, %48 ], [ %20, %145 ], [ %20, %161 ], [ %20, %168 ]
  %167 = inttoptr i64 %166 to %"class.blink::CSSBitsetBase"*
  ret %"class.blink::CSSBitsetBase"* %167

168:                                              ; preds = %39
  %169 = add nuw nsw i64 %31, 2
  %170 = icmp eq i64 %169, 624
  br i1 %170, label %165, label %30
}

declare i64 @_ZNK5blink10CascadeMap2AtERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade5ResetEv(%"class.blink::StyleCascade"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  tail call void @_ZN5blink10CascadeMap5ResetEv(%"class.blink::CascadeMap"* %2) #15
  %3 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1
  tail call void @_ZN5blink11MatchResult5ResetEv(%"class.blink::MatchResult"* %3) #15
  %4 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %"class.blink::CascadeInterpolations", %"class.blink::CascadeInterpolations"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i64 0
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast %"class.blink::CascadeInterpolations"* %4 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  store i32 4, i32* %5, align 8
  %19 = bitcast i8* %16 to %"struct.blink::CascadeInterpolations::Entry"*
  %20 = icmp eq %"struct.blink::CascadeInterpolations::Entry"* %15, %19
  br i1 %20, label %23, label %21, !prof !4

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::CascadeInterpolations", %"class.blink::CascadeInterpolations"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1759"* %22, %"struct.blink::CascadeInterpolations::Entry"* %15) #15
  br label %23

23:                                               ; preds = %1, %13, %21
  %24 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 4
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  store i8 0, i8* %25, align 1
  ret void
}

declare void @_ZN5blink10CascadeMap5ResetEv(%"class.blink::CascadeMap"*) local_unnamed_addr #3

declare void @_ZN5blink11MatchResult5ResetEv(%"class.blink::MatchResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink12StyleCascade7ResolveERKNS_15CSSPropertyNameERKNS_8CSSValueENS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSValue"* dereferenceable(3), i8 zeroext, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.blink::CSSPropertyRef", align 8
  store i8 %3, i8* %6, align 1
  %8 = bitcast %"class.blink::CSSPropertyRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %10 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %10, i64 0, i32 1
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  call void @_ZN5blink14CSSPropertyRefC1ERKNS_15CSSPropertyNameERKNS_8DocumentE(%"class.blink::CSSPropertyRef"* nonnull %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %1, %"class.blink::Document"* dereferenceable(2848) %12) #15
  %13 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %7, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %7, i64 0, i32 1
  %18 = bitcast %"class.blink::CustomProperty"* %17 to %"class.blink::CSSProperty"*
  br label %22

19:                                               ; preds = %5
  %20 = and i32 %14, 1023
  %21 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %20) #15
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi %"class.blink::CSSProperty"* [ %18, %16 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 8192
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  store i8 1, i8* %29, align 1
  %30 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %9, align 8
  %31 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %30, i64 0, i32 2, i32 0
  %32 = bitcast %"class.blink::ComputedStyle"** %31 to %"class.blink::ComputedStyleBase"**
  %33 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = lshr i160 %36, 115
  %38 = trunc i160 %37 to i8
  %39 = and i8 %38, 1
  %40 = lshr i160 %36, 102
  %41 = trunc i160 %40 to i8
  %42 = and i8 %41, 3
  %43 = bitcast %"class.blink::CSSProperty"* %23 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %44 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %43, align 8
  %45 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %44, i64 15
  %46 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %45, align 8
  %47 = call %"class.blink::CSSProperty"* %46(%"class.blink::CSSProperty"* %23, i8 zeroext %39, i8 zeroext %42) #15
  br label %48

48:                                               ; preds = %22, %28
  %49 = phi %"class.blink::CSSProperty"* [ %47, %28 ], [ %23, %22 ]
  %50 = call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade7ResolveERKNS_11CSSPropertyERKNS_8CSSValueERNS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %49, %"class.blink::CSSValue"* dereferenceable(3) %2, i8* nonnull dereferenceable(1) %6, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  %51 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %50, i64 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 47
  br i1 %53, label %60, label %54

54:                                               ; preds = %48
  %55 = or i8 %52, 1
  %56 = icmp eq i8 %55, 47
  br i1 %56, label %57, label %60

57:                                               ; preds = %54
  %58 = call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %59 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %58, i64 0, i32 0
  br label %60

60:                                               ; preds = %54, %48, %57
  %61 = phi %"class.blink::CSSValue"* [ %59, %57 ], [ null, %48 ], [ %50, %54 ]
  %62 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %7, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #15
  br label %79

79:                                               ; preds = %60, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #15
  ret %"class.blink::CSSValue"* %61
}

declare void @_ZN5blink14CSSPropertyRefC1ERKNS_15CSSPropertyNameERKNS_8DocumentE(%"class.blink::CSSPropertyRef"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink12StyleCascade7ResolveERKNS_11CSSPropertyERKNS_8CSSValueERNS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CSSValue"* dereferenceable(3), i8* nocapture dereferenceable(1), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  switch i8 %7, label %15 [
    i8 35, label %13
    i8 43, label %8
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 8
  %10 = bitcast %"class.blink::CSSValue"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 748
  br i1 %12, label %13, label %15

13:                                               ; preds = %5, %8
  %14 = tail call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade13ResolveRevertERKNS_11CSSPropertyERKNS_8CSSValueERNS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CSSValue"* dereferenceable(3) %2, i8* dereferenceable(1) %3, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  br label %45

15:                                               ; preds = %5, %8
  %16 = load i8, i8* %3, align 1
  %17 = icmp eq i8 %16, 3
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %15, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %15 ]
  %23 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %4, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = or i32 %24, %22
  store i32 %25, i32* %23, align 4
  %26 = load i8, i8* %6, align 1
  %27 = icmp ne i8 %26, 43
  %28 = icmp eq %"class.blink::CSSValue"* %2, null
  %29 = or i1 %28, %27
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSCustomPropertyDeclaration"*
  %32 = tail call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade21ResolveCustomPropertyERKNS_11CSSPropertyERKNS_28CSSCustomPropertyDeclarationERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CSSCustomPropertyDeclaration"* nonnull dereferenceable(32) %31, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  br label %45

33:                                               ; preds = %21
  %34 = icmp ne i8 %26, 42
  %35 = or i1 %28, %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSVariableReferenceValue"*
  %38 = tail call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade24ResolveVariableReferenceERKNS_11CSSPropertyERKNS_25CSSVariableReferenceValueERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CSSVariableReferenceValue"* nonnull dereferenceable(24) %37, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  br label %45

39:                                               ; preds = %33
  %40 = icmp ne i8 %26, 44
  %41 = or i1 %28, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::cssvalue::CSSPendingSubstitutionValue"*
  %44 = tail call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade26ResolvePendingSubstitutionERKNS_11CSSPropertyERKNS_8cssvalue27CSSPendingSubstitutionValueERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::cssvalue::CSSPendingSubstitutionValue"* nonnull dereferenceable(16) %43, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  br label %45

45:                                               ; preds = %13, %30, %36, %39, %42
  %46 = phi %"class.blink::CSSValue"* [ %44, %42 ], [ %2, %39 ], [ %14, %13 ], [ %38, %36 ], [ %32, %30 ]
  ret %"class.blink::CSSValue"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink12StyleCascade16ResolveSurrogateERKNS_11CSSPropertyE(%"class.blink::StyleCascade"* nocapture, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 8192
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %10 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %10, i64 0, i32 2, i32 0
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 115
  %18 = trunc i160 %17 to i8
  %19 = and i8 %18, 1
  %20 = lshr i160 %16, 102
  %21 = trunc i160 %20 to i8
  %22 = and i8 %21, 3
  %23 = bitcast %"class.blink::CSSProperty"* %1 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %24 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %24, i64 15
  %26 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %25, align 8
  %27 = tail call %"class.blink::CSSProperty"* %26(%"class.blink::CSSProperty"* %1, i8 zeroext %19, i8 zeroext %22) #15
  br label %28

28:                                               ; preds = %2, %7
  %29 = phi %"class.blink::CSSProperty"* [ %27, %7 ], [ %1, %2 ]
  ret %"class.blink::CSSProperty"* %29
}

declare %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12StyleCascade17GetCascadedValuesEv(%"class.blink::HeapHashMap.1867"* noalias sret, %"class.blink::StyleCascade"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = alloca %"class.blink::CSSValue"*, align 8
  %5 = alloca %"class.blink::CSSValue"*, align 8
  %6 = bitcast %"class.blink::HeapHashMap.1867"* %0 to i8*
  %7 = bitcast %"class.blink::HeapHashMap.1867"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #15
  %8 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 0
  %10 = load i64, i64* %9, align 8, !noalias !9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 1
  %14 = load i64, i64* %13, align 8, !noalias !9
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %69, %65, %61, %57, %53, %49, %45, %41, %12, %2
  %17 = phi i64 [ 0, %2 ], [ 64, %12 ], [ 128, %41 ], [ 192, %45 ], [ 256, %49 ], [ 320, %53 ], [ 384, %57 ], [ 448, %61 ], [ 512, %65 ], [ 576, %69 ]
  br label %18

18:                                               ; preds = %309, %16
  %19 = phi i64 [ %17, %16 ], [ %310, %309 ]
  %20 = lshr i64 %19, 6
  %21 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 %20
  %22 = load i64, i64* %21, align 8, !noalias !9
  %23 = and i64 %19, 62
  %24 = shl i64 1, %23
  %25 = and i64 %24, %22
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %36

27:                                               ; preds = %18
  %28 = or i64 %19, 1
  %29 = lshr i64 %19, 6
  %30 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 %29
  %31 = load i64, i64* %30, align 8, !noalias !9
  %32 = and i64 %28, 63
  %33 = shl i64 1, %32
  %34 = and i64 %33, %31
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %309, label %36

36:                                               ; preds = %27, %18
  %37 = phi i64 [ %19, %18 ], [ %28, %27 ]
  %38 = phi i64 [ %22, %18 ], [ %31, %27 ]
  %39 = phi i64 [ %23, %18 ], [ %32, %27 ]
  %40 = icmp ult i64 %37, 624
  br i1 %40, label %73, label %83

41:                                               ; preds = %12
  %42 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 2
  %43 = load i64, i64* %42, align 8, !noalias !9
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %16

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 3
  %47 = load i64, i64* %46, align 8, !noalias !9
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %16

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 4
  %51 = load i64, i64* %50, align 8, !noalias !9
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %16

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 5
  %55 = load i64, i64* %54, align 8, !noalias !9
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %16

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 6
  %59 = load i64, i64* %58, align 8, !noalias !9
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %16

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 7
  %63 = load i64, i64* %62, align 8, !noalias !9
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %16

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 8
  %67 = load i64, i64* %66, align 8, !noalias !9
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %16

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 9
  %71 = load i64, i64* %70, align 8, !noalias !9
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %16

73:                                               ; preds = %36
  %74 = lshr i64 %38, %39
  %75 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %76 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %77 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = bitcast %"class.blink::CSSValue"** %4 to i8*
  %79 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 1, i32 0, i32 0
  %80 = bitcast %"class.blink::CSSValue"** %4 to i64*
  %81 = getelementptr inbounds %"class.blink::HeapHashMap.1867", %"class.blink::HeapHashMap.1867"* %0, i64 0, i32 0, i32 0
  %82 = bitcast %"class.blink::CSSPropertyName"* %3 to i64*
  br label %118

83:                                               ; preds = %309, %232, %216, %36, %69
  %84 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 5, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 5, i32 0, i32 0
  %88 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 5, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %88, i64 %91
  br i1 %86, label %106, label %93

93:                                               ; preds = %83
  %94 = icmp eq i32 %90, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %93, %99
  %96 = phi %"struct.WTF::KeyValuePair.1767"* [ %100, %99 ], [ %88, %93 ]
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %96, i64 0, i32 0
  %98 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %97) #15
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %96, i64 1
  %101 = icmp eq %"struct.WTF::KeyValuePair.1767"* %100, %92
  br i1 %101, label %102, label %95

102:                                              ; preds = %99, %95
  %103 = phi %"struct.WTF::KeyValuePair.1767"* [ %96, %95 ], [ %92, %99 ]
  %104 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %87, align 8
  %105 = load i32, i32* %89, align 8
  br label %106

106:                                              ; preds = %102, %83, %93
  %107 = phi i32 [ %90, %83 ], [ 0, %93 ], [ %105, %102 ]
  %108 = phi %"struct.WTF::KeyValuePair.1767"* [ %88, %83 ], [ %88, %93 ], [ %104, %102 ]
  %109 = phi %"struct.WTF::KeyValuePair.1767"* [ %92, %83 ], [ %88, %93 ], [ %103, %102 ]
  %110 = zext i32 %107 to i64
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %108, i64 %110
  %112 = icmp eq %"struct.WTF::KeyValuePair.1767"* %109, %111
  br i1 %112, label %236, label %113

113:                                              ; preds = %106
  %114 = bitcast %"class.blink::CSSValue"** %5 to i8*
  %115 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 1, i32 0, i32 0
  %116 = bitcast %"class.blink::CSSValue"** %5 to i64*
  %117 = getelementptr inbounds %"class.blink::HeapHashMap.1867", %"class.blink::HeapHashMap.1867"* %0, i64 0, i32 0, i32 0
  br label %237

118:                                              ; preds = %73, %232
  %119 = phi i64 [ %74, %73 ], [ %234, %232 ]
  %120 = phi i64 [ %37, %73 ], [ %233, %232 ]
  %121 = trunc i64 %120 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #15
  store i64 -6148914691236517206, i64* %82, align 8
  store i32 %121, i32* %76, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %122 = call i64 @_ZNK5blink10CascadeMap2AtERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %8, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3) #15
  %123 = lshr i64 %122, 55
  %124 = shl i64 %123, 63
  %125 = ashr exact i64 %124, 63
  %126 = and i64 %125, 12
  %127 = lshr i64 %122, 52
  %128 = xor i64 %126, %127
  %129 = trunc i64 %128 to i8
  %130 = icmp ugt i8 %129, 3
  br i1 %130, label %191, label %131

131:                                              ; preds = %118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  store %"class.blink::CSSValue"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSValue"*), %"class.blink::CSSValue"** %4, align 8
  %132 = lshr i64 %122, 4
  %133 = trunc i64 %132 to i32
  %134 = lshr i64 %122, 20
  %135 = trunc i64 %134 to i32
  %136 = and i32 %135, 65535
  %137 = and i32 %133, 65535
  %138 = zext i32 %137 to i64
  %139 = call dereferenceable(16) %"struct.blink::MatchedProperties"* @_ZNK3WTF6VectorIN5blink17MatchedPropertiesELj64ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %79, i32 %136) #15
  %140 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %140, align 8
  %142 = icmp eq %"class.blink::CSSPropertyValueSet"* %141, null
  br i1 %142, label %152, label %143

143:                                              ; preds = %131
  %144 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %141, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp sgt i32 %145, -1
  br i1 %146, label %152, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %141, i64 4
  %149 = bitcast %"class.blink::CSSPropertyValueSet"* %148 to %"class.WTF::Vector.1947"*
  %150 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1947"* %149, i32 %137) #15
  %151 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %150, i64 0, i32 1, i32 0, i32 0
  br label %156

152:                                              ; preds = %143, %131
  %153 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %141, i64 2
  %154 = bitcast %"class.blink::CSSPropertyValueSet"* %153 to %"class.blink::Member.1074"*
  %155 = getelementptr inbounds %"class.blink::Member.1074", %"class.blink::Member.1074"* %154, i64 %138, i32 0, i32 0
  br label %156

156:                                              ; preds = %147, %152
  %157 = phi %"class.blink::CSSValue"** [ %155, %152 ], [ %151, %147 ]
  %158 = bitcast %"class.blink::CSSValue"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  store i64 %159, i64* %80, align 8
  %160 = call { %"struct.WTF::KeyValuePair.1873"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable.1871"* %81, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3, %"class.blink::CSSValue"** nonnull dereferenceable(8) %4) #15
  %161 = extractvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %160, 1
  %162 = and i8 %161, 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %175

164:                                              ; preds = %156
  %165 = extractvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %160, 0
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %165, i64 0, i32 1
  %167 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %168 = ptrtoint %"class.blink::CSSValue"* %167 to i64
  %169 = bitcast %"class.blink::Member.1074"* %166 to i64*
  store atomic i64 %168, i64* %169 monotonic, align 8
  %170 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %167, i64 0, i32 0
  %174 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %173) #15
  br label %175

175:                                              ; preds = %156, %164, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %207, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %207

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #15
  br label %207

191:                                              ; preds = %118
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #15
  br label %207

207:                                              ; preds = %206, %203, %191, %190, %187, %175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #15
  br label %208

208:                                              ; preds = %227, %207
  %209 = phi i64 [ %229, %227 ], [ %119, %207 ]
  %210 = phi i64 [ %228, %227 ], [ %120, %207 ]
  %211 = add i64 %210, 1
  %212 = lshr i64 %209, 1
  %213 = icmp ugt i64 %211, 623
  br i1 %213, label %232, label %214

214:                                              ; preds = %208
  %215 = icmp eq i64 %212, 0
  br i1 %215, label %216, label %227

216:                                              ; preds = %214
  %217 = add nsw i64 %210, 64
  %218 = and i64 %217, -64
  %219 = icmp ult i64 %218, 624
  %220 = select i1 %219, i64 %218, i64 624
  br i1 %219, label %221, label %83

221:                                              ; preds = %216
  %222 = lshr i64 %220, 6
  %223 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i64 %222
  %224 = load i64, i64* %223, align 8
  %225 = and i64 %220, 48
  %226 = lshr i64 %224, %225
  br label %227

227:                                              ; preds = %221, %214
  %228 = phi i64 [ %211, %214 ], [ %218, %221 ]
  %229 = phi i64 [ %212, %214 ], [ %226, %221 ]
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %208, label %232

232:                                              ; preds = %208, %227
  %233 = phi i64 [ %211, %208 ], [ %228, %227 ]
  %234 = phi i64 [ %212, %208 ], [ %229, %227 ]
  %235 = icmp eq i64 %233, 624
  br i1 %235, label %83, label %118

236:                                              ; preds = %306, %106
  ret void

237:                                              ; preds = %113, %306
  %238 = phi %"struct.WTF::KeyValuePair.1767"* [ %109, %113 ], [ %307, %306 ]
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %238, i64 0, i32 1, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = lshr i64 %240, 55
  %242 = shl i64 %241, 63
  %243 = ashr exact i64 %242, 63
  %244 = and i64 %243, 12
  %245 = lshr i64 %240, 52
  %246 = xor i64 %244, %245
  %247 = trunc i64 %246 to i8
  %248 = icmp ugt i8 %247, 3
  br i1 %248, label %295, label %249

249:                                              ; preds = %237
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #15
  store %"class.blink::CSSValue"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSValue"*), %"class.blink::CSSValue"** %5, align 8
  %250 = lshr i64 %240, 4
  %251 = trunc i64 %250 to i32
  %252 = lshr i64 %240, 20
  %253 = trunc i64 %252 to i32
  %254 = and i32 %253, 65535
  %255 = and i32 %251, 65535
  %256 = zext i32 %255 to i64
  %257 = call dereferenceable(16) %"struct.blink::MatchedProperties"* @_ZNK3WTF6VectorIN5blink17MatchedPropertiesELj64ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %115, i32 %254) #15
  %258 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %257, i64 0, i32 0, i32 0, i32 0
  %259 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %258, align 8
  %260 = icmp eq %"class.blink::CSSPropertyValueSet"* %259, null
  br i1 %260, label %270, label %261

261:                                              ; preds = %249
  %262 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %259, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = icmp sgt i32 %263, -1
  br i1 %264, label %270, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %259, i64 4
  %267 = bitcast %"class.blink::CSSPropertyValueSet"* %266 to %"class.WTF::Vector.1947"*
  %268 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1947"* %267, i32 %255) #15
  %269 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %268, i64 0, i32 1, i32 0, i32 0
  br label %274

270:                                              ; preds = %261, %249
  %271 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %259, i64 2
  %272 = bitcast %"class.blink::CSSPropertyValueSet"* %271 to %"class.blink::Member.1074"*
  %273 = getelementptr inbounds %"class.blink::Member.1074", %"class.blink::Member.1074"* %272, i64 %256, i32 0, i32 0
  br label %274

274:                                              ; preds = %265, %270
  %275 = phi %"class.blink::CSSValue"** [ %273, %270 ], [ %269, %265 ]
  %276 = bitcast %"class.blink::CSSValue"** %275 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %116, align 8
  %278 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %238, i64 0, i32 0
  %279 = call { %"struct.WTF::KeyValuePair.1873"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable.1871"* %117, %"class.blink::CSSPropertyName"* dereferenceable(16) %278, %"class.blink::CSSValue"** nonnull dereferenceable(8) %5) #15
  %280 = extractvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %279, 1
  %281 = and i8 %280, 1
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %283, label %294

283:                                              ; preds = %274
  %284 = extractvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %279, 0
  %285 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %284, i64 0, i32 1
  %286 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %5, align 8
  %287 = ptrtoint %"class.blink::CSSValue"* %286 to i64
  %288 = bitcast %"class.blink::Member.1074"* %285 to i64*
  store atomic i64 %287, i64* %288 monotonic, align 8
  %289 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %294, label %291

291:                                              ; preds = %283
  %292 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %286, i64 0, i32 0
  %293 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %292) #15
  br label %294

294:                                              ; preds = %274, %283, %291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #15
  br label %295

295:                                              ; preds = %237, %294
  %296 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %238, i64 1
  %297 = icmp eq %"struct.WTF::KeyValuePair.1767"* %296, %92
  br i1 %297, label %306, label %298

298:                                              ; preds = %295, %303
  %299 = phi %"struct.WTF::KeyValuePair.1767"* [ %304, %303 ], [ %296, %295 ]
  %300 = phi %"struct.WTF::KeyValuePair.1767"* [ %299, %303 ], [ %238, %295 ]
  %301 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %300, i64 1, i32 0
  %302 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %301) #15
  br i1 %302, label %303, label %306

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %299, i64 1
  %305 = icmp eq %"struct.WTF::KeyValuePair.1767"* %304, %92
  br i1 %305, label %306, label %298

306:                                              ; preds = %298, %303, %295
  %307 = phi %"struct.WTF::KeyValuePair.1767"* [ %92, %295 ], [ %299, %298 ], [ %92, %303 ]
  %308 = icmp eq %"struct.WTF::KeyValuePair.1767"* %307, %111
  br i1 %308, label %236, label %237

309:                                              ; preds = %27
  %310 = add nuw nsw i64 %19, 2
  %311 = icmp eq i64 %310, 624
  br i1 %311, label %83, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade18AnalyzeMatchResultEv(%"class.blink::StyleCascade"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::MatchedExpansionsRange", align 8
  %3 = alloca %"class.blink::CascadeExpansion", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = bitcast %"class.blink::MatchedExpansionsRange"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %8 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %8, i64 0, i32 1
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  call void @_ZNK5blink11MatchResult10ExpansionsERKNS_8DocumentENS_13CascadeFilterE(%"class.blink::MatchedExpansionsRange"* nonnull sret %2, %"class.blink::MatchResult"* %6, %"class.blink::Document"* dereferenceable(2848) %10, i64 0) #15
  %11 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %2, i64 0, i32 0, i32 0
  %12 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %2, i64 0, i32 0, i32 1
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %2, i64 0, i32 0, i32 2
  %16 = bitcast %"class.blink::CascadeFilter"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %2, i64 0, i32 1, i32 0
  %19 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %18, align 8
  %20 = icmp eq %"struct.blink::MatchedProperties"* %12, %19
  br i1 %20, label %36, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::MatchedExpansionsRange", %"class.blink::MatchedExpansionsRange"* %2, i64 0, i32 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::CascadeExpansion"* %3 to i8*
  %25 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %3, i64 0, i32 4
  %26 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %3, i64 0, i32 5
  %27 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %3, i64 0, i32 9
  %28 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %30 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  %31 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %3, i64 0, i32 3, i32 0
  %34 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::CascadeExpansion", %"class.blink::CascadeExpansion"* %3, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  br label %37

36:                                               ; preds = %113, %1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #15
  ret void

37:                                               ; preds = %21, %113
  %38 = phi i64 [ %23, %21 ], [ %115, %113 ]
  %39 = phi %"struct.blink::MatchedProperties"* [ %12, %21 ], [ %114, %113 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %24) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 120, i1 false)
  call void @_ZN5blink16CascadeExpansionC1ERKNS_17MatchedPropertiesERKNS_8DocumentENS_13CascadeFilterEm(%"class.blink::CascadeExpansion"* nonnull %3, %"struct.blink::MatchedProperties"* dereferenceable(16) %39, %"class.blink::Document"* dereferenceable(2848) %14, i64 %17, i64 %38) #15
  %40 = load i64, i64* %25, align 8
  %41 = load i64, i64* %26, align 8
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %43, label %97

43:                                               ; preds = %37, %93
  %44 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %27, align 8
  %45 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 8192
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %68, label %49

49:                                               ; preds = %43
  store i8 1, i8* %28, align 1
  %50 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %7, align 8
  %51 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %50, i64 0, i32 2, i32 0
  %52 = bitcast %"class.blink::ComputedStyle"** %51 to %"class.blink::ComputedStyleBase"**
  %53 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %53, i64 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = lshr i160 %56, 115
  %58 = trunc i160 %57 to i8
  %59 = and i8 %58, 1
  %60 = lshr i160 %56, 102
  %61 = trunc i160 %60 to i8
  %62 = and i8 %61, 3
  %63 = bitcast %"class.blink::CSSProperty"* %44 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %64 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %63, align 8
  %65 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %64, i64 15
  %66 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %65, align 8
  %67 = call %"class.blink::CSSProperty"* %66(%"class.blink::CSSProperty"* %44, i8 zeroext %59, i8 zeroext %62) #15
  br label %68

68:                                               ; preds = %43, %49
  %69 = phi %"class.blink::CSSProperty"* [ %67, %49 ], [ %44, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #15
  %70 = bitcast %"class.blink::CSSProperty"* %69 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %71 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %70, align 8
  %72 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %71, i64 6
  %73 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %72, align 8
  %74 = call { i32, %"class.WTF::StringImpl"* } %73(%"class.blink::CSSProperty"* %69) #15
  %75 = extractvalue { i32, %"class.WTF::StringImpl"* } %74, 0
  store i32 %75, i32* %31, align 8
  %76 = extractvalue { i32, %"class.WTF::StringImpl"* } %74, 1
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %32, align 8
  %77 = load i64, i64* %33, align 8
  call void @_ZN5blink10CascadeMap3AddERKNS_15CSSPropertyNameENS_15CascadePriorityE(%"class.blink::CascadeMap"* %29, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4, i64 %77) #15
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #15
  br label %93

93:                                               ; preds = %68, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #15
  call void @_ZN5blink16CascadeExpansion4NextEv(%"class.blink::CascadeExpansion"* nonnull %3) #15
  %94 = load i64, i64* %25, align 8
  %95 = load i64, i64* %26, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %43, label %97

97:                                               ; preds = %93, %37
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #15
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %24) #15
  %114 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %39, i64 1
  %115 = add i64 %38, 1
  %116 = icmp eq %"struct.blink::MatchedProperties"* %114, %19
  br i1 %116, label %36, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade21AnalyzeInterpolationsEv(%"class.blink::StyleCascade"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = alloca %"class.blink::CSSPropertyRef", align 8
  %6 = alloca %"class.blink::CSSPropertyName", align 8
  %7 = alloca %"class.blink::CSSPropertyName", align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %1
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %10
  %14 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 80, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %14 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 4, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  store i8* %14, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty) #15
  br label %21

21:                                               ; preds = %1, %10, %13
  %22 = load %"class.WTF::Vector.1758"*, %"class.WTF::Vector.1758"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty, i64 0, i32 0, i32 0), align 8
  %23 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, 256
  %27 = select i1 %26, %"class.WTF::Vector.1758"* %22, %"class.WTF::Vector.1758"* %23
  %28 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %27, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %60, label %31

31:                                               ; preds = %21
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %33 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %35 = bitcast %union.anon.1603* %34 to i8*
  %36 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  %38 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = bitcast %"class.blink::CSSPropertyRef"* %5 to i8*
  %41 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %5, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %5, i64 0, i32 1
  %44 = bitcast %"class.blink::CustomProperty"* %43 to %"class.blink::CSSProperty"*
  %45 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  %46 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %47 = bitcast %"class.blink::CSSPropertyName"* %6 to i8*
  %48 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = bitcast %"class.blink::CSSPropertyName"* %7 to i8*
  %51 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %5, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %55 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %56 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %57 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %58 = bitcast %union.anon.1603* %57 to i8*
  %59 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %61

60:                                               ; preds = %119, %21
  ret void

61:                                               ; preds = %31, %119
  %62 = phi i64 [ 0, %31 ], [ %120, %119 ]
  %63 = trunc i64 %62 to i32
  %64 = call dereferenceable(16) %"struct.blink::CascadeInterpolations::Entry"* @_ZNK3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1758"* %27, i32 %63) #15
  %65 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %64 to %"class.WTF::HashMap.1736"**
  %66 = load %"class.WTF::HashMap.1736"*, %"class.WTF::HashMap.1736"** %65, align 8
  %67 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %66, i64 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %66, i64 0, i32 0, i32 0
  %71 = load %"struct.WTF::KeyValuePair.1739"*, %"struct.WTF::KeyValuePair.1739"** %70, align 8
  %72 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %66, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %71, i64 %74
  br i1 %69, label %109, label %76

76:                                               ; preds = %61
  %77 = icmp eq i32 %73, 0
  br i1 %77, label %109, label %78

78:                                               ; preds = %76, %102
  %79 = phi %"struct.WTF::KeyValuePair.1739"* [ %103, %102 ], [ %71, %76 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %79, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #15
  store i32 0, i32* %33, align 8, !alias.scope !12
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #15, !alias.scope !12
  %81 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %80, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #15
  br label %97

97:                                               ; preds = %96, %93, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #15
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %79, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 1
  %101 = or i1 %81, %100
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %79, i64 1
  %104 = icmp eq %"struct.WTF::KeyValuePair.1739"* %103, %75
  br i1 %104, label %105, label %78

105:                                              ; preds = %102, %97
  %106 = phi %"struct.WTF::KeyValuePair.1739"* [ %75, %102 ], [ %79, %97 ]
  %107 = load %"struct.WTF::KeyValuePair.1739"*, %"struct.WTF::KeyValuePair.1739"** %70, align 8
  %108 = load i32, i32* %72, align 8
  br label %109

109:                                              ; preds = %105, %61, %76
  %110 = phi i32 [ %73, %61 ], [ 0, %76 ], [ %108, %105 ]
  %111 = phi %"struct.WTF::KeyValuePair.1739"* [ %71, %61 ], [ %71, %76 ], [ %107, %105 ]
  %112 = phi %"struct.WTF::KeyValuePair.1739"* [ %75, %61 ], [ %71, %76 ], [ %106, %105 ]
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %111, i64 %113
  %115 = icmp eq %"struct.WTF::KeyValuePair.1739"* %112, %114
  br i1 %115, label %119, label %116

116:                                              ; preds = %109
  %117 = shl i32 %63, 16
  %118 = and i32 %117, 16711680
  br label %124

119:                                              ; preds = %323, %109
  %120 = add nuw nsw i64 %62, 1
  %121 = load i32, i32* %28, align 4
  %122 = zext i32 %121 to i64
  %123 = icmp ult i64 %120, %122
  br i1 %123, label %61, label %60

124:                                              ; preds = %116, %323
  %125 = phi %"struct.WTF::KeyValuePair.1739"* [ %112, %116 ], [ %324, %323 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %125, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, 3
  br i1 %128, label %129, label %150

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %125, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %155, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %155

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #15
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %138
  call void @llvm.trap() #15
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %155

150:                                              ; preds = %124
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %125, i64 0, i32 0, i32 1, i32 0
  %152 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %152, i64 0, i32 1
  %154 = load i32, i32* %153, align 8
  br label %155

155:                                              ; preds = %129, %133, %148, %150
  %156 = phi %"class.WTF::StringImpl"* [ null, %150 ], [ null, %129 ], [ %131, %133 ], [ %131, %148 ]
  %157 = phi i32 [ %154, %150 ], [ 1, %129 ], [ 1, %133 ], [ 1, %148 ]
  store i32 %157, i32* %38, align 8
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %39, align 8
  %158 = load i32, i32* %126, align 8
  %159 = icmp ne i32 %158, 4
  %160 = zext i1 %159 to i32
  %161 = shl nuw nsw i32 %160, 24
  %162 = and i32 %157, 65535
  %163 = or i32 %162, %118
  %164 = or i32 %163, %161
  %165 = call dereferenceable(16) %"struct.blink::CascadeInterpolations::Entry"* @_ZNK3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1758"* %27, i32 %63) #15
  %166 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %165, i64 0, i32 1
  %167 = load i8, i8* %166, align 8
  %168 = shl nuw nsw i32 %164, 4
  %169 = zext i32 %168 to i64
  %170 = zext i8 %167 to i64
  %171 = shl nuw nsw i64 %170, 52
  %172 = or i64 %171, %169
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 48, i1 false)
  %173 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %41, align 8
  %174 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %173, i64 0, i32 1
  %175 = load %"class.blink::Document"*, %"class.blink::Document"** %174, align 8
  call void @_ZN5blink14CSSPropertyRefC1ERKNS_15CSSPropertyNameERKNS_8DocumentE(%"class.blink::CSSPropertyRef"* nonnull %5, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4, %"class.blink::Document"* dereferenceable(2848) %175) #15
  %176 = load i32, i32* %42, align 8
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %181, label %178

178:                                              ; preds = %155
  %179 = and i32 %176, 1023
  %180 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %179) #15
  br label %181

181:                                              ; preds = %155, %178
  %182 = phi %"class.blink::CSSProperty"* [ %180, %178 ], [ %44, %155 ]
  %183 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %182, i64 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = and i32 %184, 8192
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %206, label %187

187:                                              ; preds = %181
  store i8 1, i8* %45, align 1
  %188 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %41, align 8
  %189 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %188, i64 0, i32 2, i32 0
  %190 = bitcast %"class.blink::ComputedStyle"** %189 to %"class.blink::ComputedStyleBase"**
  %191 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %191, i64 0, i32 9
  %193 = bitcast [20 x i8]* %192 to i160*
  %194 = load i160, i160* %193, align 8
  %195 = lshr i160 %194, 115
  %196 = trunc i160 %195 to i8
  %197 = and i8 %196, 1
  %198 = lshr i160 %194, 102
  %199 = trunc i160 %198 to i8
  %200 = and i8 %199, 3
  %201 = bitcast %"class.blink::CSSProperty"* %182 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %202 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %201, align 8
  %203 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %202, i64 15
  %204 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %203, align 8
  %205 = call %"class.blink::CSSProperty"* %204(%"class.blink::CSSProperty"* %182, i8 zeroext %197, i8 zeroext %200) #15
  br label %206

206:                                              ; preds = %181, %187
  %207 = phi %"class.blink::CSSProperty"* [ %205, %187 ], [ %182, %181 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #15
  %208 = bitcast %"class.blink::CSSProperty"* %207 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %209 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %208, align 8
  %210 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %209, i64 6
  %211 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %210, align 8
  %212 = call { i32, %"class.WTF::StringImpl"* } %211(%"class.blink::CSSProperty"* %207) #15
  %213 = extractvalue { i32, %"class.WTF::StringImpl"* } %212, 0
  store i32 %213, i32* %48, align 8
  %214 = extractvalue { i32, %"class.WTF::StringImpl"* } %212, 1
  store %"class.WTF::StringImpl"* %214, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink10CascadeMap3AddERKNS_15CSSPropertyNameENS_15CascadePriorityE(%"class.blink::CascadeMap"* %46, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %6, i64 %172) #15
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %206
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #15
  br label %230

230:                                              ; preds = %206, %226, %229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #15
  %231 = bitcast %"class.blink::CSSProperty"* %207 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %232 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %231, align 8
  %233 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %232, i64 13
  %234 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %233, align 8
  %235 = call %"class.blink::CSSProperty"* %234(%"class.blink::CSSProperty"* %207) #15
  %236 = icmp eq %"class.blink::CSSProperty"* %235, null
  br i1 %236, label %261, label %237

237:                                              ; preds = %230
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #15
  %238 = bitcast %"class.blink::CSSProperty"* %235 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %239 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %238, align 8
  %240 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %239, i64 6
  %241 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %240, align 8
  %242 = call { i32, %"class.WTF::StringImpl"* } %241(%"class.blink::CSSProperty"* nonnull %235) #15
  %243 = extractvalue { i32, %"class.WTF::StringImpl"* } %242, 0
  store i32 %243, i32* %51, align 8
  %244 = extractvalue { i32, %"class.WTF::StringImpl"* } %242, 1
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %52, align 8
  call void @_ZN5blink10CascadeMap3AddERKNS_15CSSPropertyNameENS_15CascadePriorityE(%"class.blink::CascadeMap"* %46, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %7, i64 %172) #15
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %237
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #15
  br label %260

260:                                              ; preds = %237, %256, %259
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #15
  br label %261

261:                                              ; preds = %230, %260
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #15
  br label %277

277:                                              ; preds = %261, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #15
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #15
  br label %293

293:                                              ; preds = %277, %289, %292
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #15
  %294 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %125, i64 1
  %295 = icmp eq %"struct.WTF::KeyValuePair.1739"* %294, %75
  br i1 %295, label %323, label %296

296:                                              ; preds = %293, %320
  %297 = phi %"struct.WTF::KeyValuePair.1739"* [ %321, %320 ], [ %294, %293 ]
  %298 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %297, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #15
  store i32 0, i32* %56, align 8, !alias.scope !17
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #15, !alias.scope !17
  %299 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %298, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #15
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %300, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %296
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %300) #15
  br label %315

315:                                              ; preds = %314, %311, %296
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #15
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %297, i64 0, i32 0, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp eq i32 %317, 1
  %319 = or i1 %299, %318
  br i1 %319, label %320, label %323

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %297, i64 1
  %322 = icmp eq %"struct.WTF::KeyValuePair.1739"* %321, %75
  br i1 %322, label %323, label %296

323:                                              ; preds = %315, %320, %293
  %324 = phi %"struct.WTF::KeyValuePair.1739"* [ %75, %293 ], [ %297, %315 ], [ %75, %320 ]
  %325 = icmp eq %"struct.WTF::KeyValuePair.1739"* %324, %114
  br i1 %325, label %119, label %124
}

declare void @_ZNK5blink11MatchResult10ExpansionsERKNS_8DocumentENS_13CascadeFilterE(%"class.blink::MatchedExpansionsRange"* sret, %"class.blink::MatchResult"*, %"class.blink::Document"* dereferenceable(2848), i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink12StyleCascade11GetDocumentEv(%"class.blink::StyleCascade"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 1
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  ret %"class.blink::Document"* %5
}

declare void @_ZN5blink10CascadeMap3AddERKNS_15CSSPropertyNameENS_15CascadePriorityE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i64) local_unnamed_addr #3

declare void @_ZN5blink16CascadeExpansion4NextEv(%"class.blink::CascadeExpansion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade9ReanalyzeEv(%"class.blink::StyleCascade"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  tail call void @_ZN5blink10CascadeMap5ResetEv(%"class.blink::CascadeMap"* %2) #15
  %3 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 4
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 5
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 6
  store i8 1, i8* %6, align 2
  tail call void @_ZN5blink12StyleCascade18AnalyzeMatchResultEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %5, align 1
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN5blink12StyleCascade21AnalyzeInterpolationsEv(%"class.blink::StyleCascade"* %0) #15
  store i8 0, i8* %6, align 2
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyDirectionEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink25GetCSSPropertyWritingModeEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #3

declare void @_ZN5blink11FontBuilder10CreateFontERNS_13ComputedStyleEPKS1_(%"class.blink::FontBuilder"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare void @_ZN5blink25CSSToLengthConversionData9FontSizesC1EPKNS_13ComputedStyleES4_(%"class.blink::CSSToLengthConversionData::FontSizes"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink31GetCSSPropertyWebkitBorderImageEv() local_unnamed_addr #3

declare dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20borderImageShorthandEv() local_unnamed_addr #3

declare zeroext i16 @_ZNK5blink16CascadeExpansion9TreeOrderEv(%"class.blink::CascadeExpansion"*) local_unnamed_addr #3

declare void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_11CSSPropertyERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::ScopedCSSValue"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade21ApplyInterpolationMapERKNS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_10HeapVectorINS3_INS_13InterpolationEEELj1EEEEEN3WTF11DefaultHashIS2_E4HashENS9_10HashTraitsIS2_EENSD_IS8_EEEENS_13CascadeOriginEmRNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::HeapHashMap.1733"* nocapture readonly dereferenceable(24), i8 zeroext, i64, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca %"class.blink::PropertyHandle", align 8
  %8 = alloca %"class.blink::CSSPropertyName", align 8
  %9 = alloca %"class.blink::CSSPropertyRef", align 8
  %10 = alloca %"class.blink::CSSPropertyName", align 8
  %11 = getelementptr inbounds %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.1739"*, %"struct.WTF::KeyValuePair.1739"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %15, i64 %18
  br i1 %13, label %59, label %20

20:                                               ; preds = %5
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %59, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.blink::PropertyHandle"* %7 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 1
  %26 = bitcast %union.anon.1603* %25 to i8*
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %52, %22
  %29 = phi %"struct.WTF::KeyValuePair.1739"* [ %15, %22 ], [ %53, %52 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %29, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  store i32 0, i32* %24, align 8, !alias.scope !22
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #15, !alias.scope !22
  %31 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %30, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %7) #15
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #15
  br label %47

47:                                               ; preds = %46, %43, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %29, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 1
  %51 = or i1 %31, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %29, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair.1739"* %53, %19
  br i1 %54, label %55, label %28

55:                                               ; preds = %52, %47
  %56 = phi %"struct.WTF::KeyValuePair.1739"* [ %19, %52 ], [ %29, %47 ]
  %57 = load %"struct.WTF::KeyValuePair.1739"*, %"struct.WTF::KeyValuePair.1739"** %14, align 8
  %58 = load i32, i32* %16, align 8
  br label %59

59:                                               ; preds = %55, %5, %20
  %60 = phi i32 [ %17, %5 ], [ 0, %20 ], [ %58, %55 ]
  %61 = phi %"struct.WTF::KeyValuePair.1739"* [ %15, %5 ], [ %15, %20 ], [ %57, %55 ]
  %62 = phi %"struct.WTF::KeyValuePair.1739"* [ %19, %5 ], [ %15, %20 ], [ %56, %55 ]
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %61, i64 %63
  %65 = icmp eq %"struct.WTF::KeyValuePair.1739"* %62, %64
  br i1 %65, label %95, label %66

66:                                               ; preds = %59
  %67 = bitcast %"class.blink::CSSPropertyName"* %8 to i8*
  %68 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %8, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = trunc i64 %3 to i32
  %71 = shl i32 %70, 16
  %72 = and i32 %71, 16711680
  %73 = zext i8 %2 to i64
  %74 = shl nuw nsw i64 %73, 52
  %75 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %4, i64 0, i32 4
  %76 = bitcast %"class.blink::CSSPropertyRef"* %9 to i8*
  %77 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %78 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %9, i64 0, i32 0
  %79 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %9, i64 0, i32 1
  %80 = bitcast %"class.blink::CustomProperty"* %79 to %"class.blink::CSSProperty"*
  %81 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %4, i64 0, i32 3, i32 1
  %82 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %4, i64 0, i32 3, i32 0
  %83 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  %84 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %85 = bitcast %"class.blink::CSSPropertyName"* %10 to i8*
  %86 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %10, i64 0, i32 0
  %87 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %9, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %90 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  %91 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 0
  %92 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 1
  %93 = bitcast %union.anon.1603* %92 to i8*
  %94 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %96

95:                                               ; preds = %288, %59
  ret void

96:                                               ; preds = %66, %288
  %97 = phi %"struct.WTF::KeyValuePair.1739"* [ %62, %66 ], [ %289, %288 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false)
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %97, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 3
  br i1 %100, label %101, label %122

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %97, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %127, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %127

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i33
  %114 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %113, i33 1) #15
  %115 = extractvalue { i33, i1 } %114, 1
  %116 = extractvalue { i33, i1 } %114, 0
  %117 = icmp slt i33 %116, 0
  %118 = or i1 %115, %117
  br i1 %118, label %119, label %120, !prof !2

119:                                              ; preds = %110
  call void @llvm.trap() #15
  unreachable

120:                                              ; preds = %110
  %121 = trunc i33 %116 to i32
  store i32 %121, i32* %111, align 4
  br label %127

122:                                              ; preds = %96
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %97, i64 0, i32 0, i32 1, i32 0
  %124 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %124, i64 0, i32 1
  %126 = load i32, i32* %125, align 8
  br label %127

127:                                              ; preds = %101, %105, %120, %122
  %128 = phi %"class.WTF::StringImpl"* [ null, %122 ], [ null, %101 ], [ %103, %105 ], [ %103, %120 ]
  %129 = phi i32 [ %126, %122 ], [ 1, %101 ], [ 1, %105 ], [ 1, %120 ]
  store i32 %129, i32* %68, align 8
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %69, align 8
  %130 = load i32, i32* %98, align 8
  %131 = icmp ne i32 %130, 4
  %132 = zext i1 %131 to i32
  %133 = shl nuw nsw i32 %132, 24
  %134 = and i32 %129, 65535
  %135 = or i32 %134, %72
  %136 = or i32 %135, %133
  %137 = shl nuw nsw i32 %136, 4
  %138 = zext i32 %137 to i64
  %139 = load i8, i8* %75, align 8
  %140 = zext i8 %139 to i64
  %141 = or i64 %74, %140
  %142 = or i64 %141, %138
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %76) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 48, i1 false)
  %143 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %77, align 8
  %144 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %143, i64 0, i32 1
  %145 = load %"class.blink::Document"*, %"class.blink::Document"** %144, align 8
  call void @_ZN5blink14CSSPropertyRefC1ERKNS_15CSSPropertyNameERKNS_8DocumentE(%"class.blink::CSSPropertyRef"* nonnull %9, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %8, %"class.blink::Document"* dereferenceable(2848) %145) #15
  %146 = load i32, i32* %78, align 8
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %151, label %148

148:                                              ; preds = %127
  %149 = and i32 %146, 1023
  %150 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %149) #15
  br label %151

151:                                              ; preds = %127, %148
  %152 = phi %"class.blink::CSSProperty"* [ %150, %148 ], [ %80, %127 ]
  %153 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %152, i64 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = load i32, i32* %81, align 4
  %156 = xor i32 %154, -1
  %157 = xor i32 %155, %156
  %158 = load i32, i32* %82, align 4
  %159 = and i32 %158, %157
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %226

161:                                              ; preds = %151
  %162 = load i32, i32* %78, align 8
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %167, label %164

164:                                              ; preds = %161
  %165 = and i32 %162, 1023
  %166 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %165) #15
  br label %167

167:                                              ; preds = %161, %164
  %168 = phi %"class.blink::CSSProperty"* [ %166, %164 ], [ %80, %161 ]
  %169 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %168, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = and i32 %170, 8192
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %167
  store i8 1, i8* %83, align 1
  %174 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %77, align 8
  %175 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %174, i64 0, i32 2, i32 0
  %176 = bitcast %"class.blink::ComputedStyle"** %175 to %"class.blink::ComputedStyleBase"**
  %177 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %177, i64 0, i32 9
  %179 = bitcast [20 x i8]* %178 to i160*
  %180 = load i160, i160* %179, align 8
  %181 = lshr i160 %180, 115
  %182 = trunc i160 %181 to i8
  %183 = and i8 %182, 1
  %184 = lshr i160 %180, 102
  %185 = trunc i160 %184 to i8
  %186 = and i8 %185, 3
  %187 = bitcast %"class.blink::CSSProperty"* %168 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %188 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %187, align 8
  %189 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %188, i64 15
  %190 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %189, align 8
  %191 = call %"class.blink::CSSProperty"* %190(%"class.blink::CSSProperty"* %168, i8 zeroext %183, i8 zeroext %186) #15
  br label %192

192:                                              ; preds = %167, %173
  %193 = phi %"class.blink::CSSProperty"* [ %191, %173 ], [ %168, %167 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #15
  %194 = bitcast %"class.blink::CSSProperty"* %193 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %195 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %194, align 8
  %196 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %195, i64 6
  %197 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %196, align 8
  %198 = call { i32, %"class.WTF::StringImpl"* } %197(%"class.blink::CSSProperty"* %193) #15
  %199 = extractvalue { i32, %"class.WTF::StringImpl"* } %198, 0
  store i32 %199, i32* %86, align 8
  %200 = extractvalue { i32, %"class.WTF::StringImpl"* } %198, 1
  store %"class.WTF::StringImpl"* %200, %"class.WTF::StringImpl"** %87, align 8
  %201 = call %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %84, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %10) #15
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %192
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #15
  br label %217

217:                                              ; preds = %192, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  %218 = icmp eq %"class.blink::CascadePriority"* %201, null
  br i1 %218, label %226, label %219

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %201, i64 0, i32 0
  %221 = load i64, i64* %220, align 8
  %222 = icmp ult i64 %221, %142
  br i1 %222, label %223, label %226

223:                                              ; preds = %219
  store i64 %142, i64* %220, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %97, i64 0, i32 1, i32 0, i32 0
  %225 = load %"class.blink::HeapVector.1742"*, %"class.blink::HeapVector.1742"** %224, align 8
  call void @_ZN5blink12StyleCascade18ApplyInterpolationERKNS_11CSSPropertyENS_15CascadePriorityERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %193, i64 %142, %"class.blink::HeapVector.1742"* dereferenceable(24) %225, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  br label %226

226:                                              ; preds = %219, %151, %223, %217
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #15
  br label %242

242:                                              ; preds = %226, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #15
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #15
  br label %258

258:                                              ; preds = %242, %254, %257
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #15
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %97, i64 1
  %260 = icmp eq %"struct.WTF::KeyValuePair.1739"* %259, %19
  br i1 %260, label %288, label %261

261:                                              ; preds = %258, %285
  %262 = phi %"struct.WTF::KeyValuePair.1739"* [ %286, %285 ], [ %259, %258 ]
  %263 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %262, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #15
  store i32 0, i32* %91, align 8, !alias.scope !27
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #15, !alias.scope !27
  %264 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %263, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %6) #15
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #15
  br label %280

280:                                              ; preds = %279, %276, %261
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #15
  %281 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %262, i64 0, i32 0, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = icmp eq i32 %282, 1
  %284 = or i1 %264, %283
  br i1 %284, label %285, label %288

285:                                              ; preds = %280
  %286 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %262, i64 1
  %287 = icmp eq %"struct.WTF::KeyValuePair.1739"* %286, %19
  br i1 %287, label %288, label %261

288:                                              ; preds = %280, %285, %258
  %289 = phi %"struct.WTF::KeyValuePair.1739"* [ %19, %258 ], [ %262, %280 ], [ %19, %285 ]
  %290 = icmp eq %"struct.WTF::KeyValuePair.1739"* %289, %64
  br i1 %290, label %95, label %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade18ApplyInterpolationERKNS_11CSSPropertyENS_15CascadePriorityERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), i64, %"class.blink::HeapVector.1742"* dereferenceable(24), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::CSSInterpolationTypesMap", align 8
  %7 = alloca %"class.blink::CSSInterpolationEnvironment", align 8
  %8 = alloca %"class.blink::CSSPropertyName", align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector.1742", %"class.blink::HeapVector.1742"* %3, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.blink::Member.1748"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1745"* %9, i32 0) #15
  %11 = getelementptr inbounds %"class.blink::Member.1748", %"class.blink::Member.1748"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::Interpolation"*, %"class.blink::Interpolation"** %11, align 8
  %13 = bitcast %"class.blink::Interpolation"* %12 to i1 (%"class.blink::Interpolation"*)***
  %14 = load i1 (%"class.blink::Interpolation"*)**, i1 (%"class.blink::Interpolation"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::Interpolation"*)*, i1 (%"class.blink::Interpolation"*)** %14, i64 3
  %16 = load i1 (%"class.blink::Interpolation"*)*, i1 (%"class.blink::Interpolation"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::Interpolation"* %12) #15
  br i1 %17, label %18, label %41

18:                                               ; preds = %5
  %19 = bitcast %"class.blink::CSSInterpolationTypesMap"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %21 = bitcast %"class.blink::CSSInterpolationTypesMap"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %20, align 8
  %23 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %22, i64 0, i32 1
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 144, i32 0, i32 0
  %26 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %25, align 8
  call void @_ZN5blink24CSSInterpolationTypesMapC1EPKNS_16PropertyRegistryERKNS_8DocumentE(%"class.blink::CSSInterpolationTypesMap"* nonnull %6, %"class.blink::PropertyRegistry"* %26, %"class.blink::Document"* dereferenceable(2848) %24) #15
  %27 = bitcast %"class.blink::CSSInterpolationEnvironment"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %7, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %7, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %7, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %7, i64 0, i32 2
  %32 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %7, i64 0, i32 3
  %33 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %7, i64 0, i32 4
  %34 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %6, i64 0, i32 0
  %35 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %20, align 8
  store %"class.blink::InterpolationTypesMap"* %34, %"class.blink::InterpolationTypesMap"** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27CSSInterpolationEnvironmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  store %"class.blink::StyleResolverState"* %35, %"class.blink::StyleResolverState"** %30, align 8
  %36 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %35, i64 0, i32 2, i32 0
  %37 = bitcast %"class.blink::ComputedStyle"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::ComputedStyle"** %31 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.blink::StyleCascade"* %0, %"class.blink::StyleCascade"** %32, align 8
  store %"class.blink::CascadeResolver"* %4, %"class.blink::CascadeResolver"** %33, align 8
  %40 = getelementptr inbounds %"class.blink::CSSInterpolationEnvironment", %"class.blink::CSSInterpolationEnvironment"* %7, i64 0, i32 0
  call void @_ZN5blink26InvalidatableInterpolation10ApplyStackERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_24InterpolationEnvironmentE(%"class.blink::HeapVector.1742"* dereferenceable(24) %3, %"class.blink::InterpolationEnvironment"* nonnull dereferenceable(16) %40) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  br label %45

41:                                               ; preds = %5
  %42 = bitcast %"class.blink::Interpolation"* %12 to %"class.blink::TransitionInterpolation"*
  %43 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %44 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %43, align 8
  tail call void @_ZNK5blink23TransitionInterpolation5ApplyERNS_18StyleResolverStateE(%"class.blink::TransitionInterpolation"* %42, %"class.blink::StyleResolverState"* dereferenceable(600) %44) #15
  br label %45

45:                                               ; preds = %41, %18
  %46 = bitcast %"class.blink::CSSProperty"* %1 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %47 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %47, i64 13
  %49 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %48, align 8
  %50 = call %"class.blink::CSSProperty"* %49(%"class.blink::CSSProperty"* %1) #15
  %51 = icmp eq %"class.blink::CSSProperty"* %50, null
  br i1 %51, label %88, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %54 = bitcast %"class.blink::CSSPropertyName"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #15
  %55 = bitcast %"class.blink::CSSProperty"* %50 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %56 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %55, align 8
  %57 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %56, i64 6
  %58 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %57, align 8
  %59 = call { i32, %"class.WTF::StringImpl"* } %58(%"class.blink::CSSProperty"* nonnull %50) #15
  %60 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %8, i64 0, i32 0
  %61 = extractvalue { i32, %"class.WTF::StringImpl"* } %59, 0
  store i32 %61, i32* %60, align 8
  %62 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = extractvalue { i32, %"class.WTF::StringImpl"* } %59, 1
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %62, align 8
  %64 = call %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %53, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %8) #15
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %52
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %52, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #15
  %81 = icmp eq %"class.blink::CascadePriority"* %64, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %64, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %84, %2
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = and i64 %84, -16
  store i64 %87, i64* %83, align 8
  call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* nonnull dereferenceable(24) %50, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  br label %88

88:                                               ; preds = %82, %86, %80, %45
  ret void
}

declare void @_ZN5blink24CSSInterpolationTypesMapC1EPKNS_16PropertyRegistryERKNS_8DocumentE(%"class.blink::CSSInterpolationTypesMap"*, %"class.blink::PropertyRegistry"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #3

declare void @_ZN5blink26InvalidatableInterpolation10ApplyStackERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_24InterpolationEnvironmentE(%"class.blink::HeapVector.1742"* dereferenceable(24), %"class.blink::InterpolationEnvironment"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24InterpolationEnvironmentD2Ev(%"class.blink::InterpolationEnvironment"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZNK5blink23TransitionInterpolation5ApplyERNS_18StyleResolverStateE(%"class.blink::TransitionInterpolation"*, %"class.blink::StyleResolverState"* dereferenceable(600)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_15CSSPropertyNameERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::CSSPropertyRef", align 8
  %5 = bitcast %"class.blink::CSSPropertyRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %7 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %7, i64 0, i32 1
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  call void @_ZN5blink14CSSPropertyRefC1ERKNS_15CSSPropertyNameERKNS_8DocumentE(%"class.blink::CSSPropertyRef"* nonnull %4, %"class.blink::CSSPropertyName"* dereferenceable(16) %1, %"class.blink::Document"* dereferenceable(2848) %9) #15
  %10 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 1
  %15 = bitcast %"class.blink::CustomProperty"* %14 to %"class.blink::CSSProperty"*
  br label %19

16:                                               ; preds = %3
  %17 = and i32 %11, 1023
  %18 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %17) #15
  br label %19

19:                                               ; preds = %13, %16
  %20 = phi %"class.blink::CSSProperty"* [ %15, %13 ], [ %18, %16 ]
  call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %20, %"class.blink::CascadeResolver"* dereferenceable(6272) %2)
  %21 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %38

38:                                               ; preds = %19, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade19LookupAndApplyValueERKNS_11CSSPropertyENS_15CascadePriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), i64, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %5 = lshr i64 %2, 55
  %6 = shl i64 %5, 63
  %7 = ashr exact i64 %6, 63
  %8 = and i64 %7, 12
  %9 = lshr i64 %2, 52
  %10 = xor i64 %8, %9
  %11 = trunc i64 %10 to i8
  %12 = icmp ult i8 %11, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  tail call void @_ZN5blink12StyleCascade25LookupAndApplyDeclarationERKNS_11CSSPropertyENS_15CascadePriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, i64 %2, %"class.blink::CascadeResolver"* dereferenceable(6272) %3)
  br label %15

14:                                               ; preds = %4
  tail call void @_ZN5blink12StyleCascade27LookupAndApplyInterpolationERKNS_11CSSPropertyENS_15CascadePriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, i64 %2, %"class.blink::CascadeResolver"* dereferenceable(6272) %3)
  br label %15

15:                                               ; preds = %14, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade25LookupAndApplyDeclarationERKNS_11CSSPropertyENS_15CascadePriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), i64, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::ScopedCSSValue", align 8
  %7 = lshr i64 %2, 4
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %2, 20
  %10 = trunc i64 %9 to i32
  %11 = and i32 %10, 65535
  %12 = and i32 %8, 65535
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = tail call dereferenceable(16) %"struct.blink::MatchedProperties"* @_ZNK3WTF6VectorIN5blink17MatchedPropertiesELj64ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %11) #15
  %16 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %16, align 8
  %18 = icmp eq %"class.blink::CSSPropertyValueSet"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %17, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %17, i64 4
  %25 = bitcast %"class.blink::CSSPropertyValueSet"* %24 to %"class.WTF::Vector.1947"*
  %26 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1947"* %25, i32 %12) #15
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %26, i64 0, i32 1, i32 0, i32 0
  br label %32

28:                                               ; preds = %19, %4
  %29 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %17, i64 2
  %30 = bitcast %"class.blink::CSSPropertyValueSet"* %29 to %"class.blink::Member.1074"*
  %31 = getelementptr inbounds %"class.blink::Member.1074", %"class.blink::Member.1074"* %30, i64 %13, i32 0, i32 0
  br label %32

32:                                               ; preds = %23, %28
  %33 = phi %"class.blink::CSSValue"** [ %31, %28 ], [ %27, %23 ]
  %34 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #15
  %35 = lshr i64 %2, 55
  %36 = shl i64 %35, 63
  %37 = ashr exact i64 %36, 63
  %38 = and i64 %37, 15
  %39 = lshr i64 %2, 52
  %40 = xor i64 %38, %39
  %41 = trunc i64 %40 to i8
  store i8 %41, i8* %5, align 1
  %42 = call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade7ResolveERKNS_11CSSPropertyERKNS_8CSSValueERNS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CSSValue"* dereferenceable(3) %34, i8* nonnull dereferenceable(1) %5, %"class.blink::CascadeResolver"* dereferenceable(6272) %3)
  %43 = load i8, i8* %5, align 1
  %44 = icmp eq i8 %43, 3
  br i1 %44, label %45, label %54

45:                                               ; preds = %32
  %46 = tail call dereferenceable(16) %"struct.blink::MatchedProperties"* @_ZNK3WTF6VectorIN5blink17MatchedPropertiesELj64ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %11) #15
  %47 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %46, i64 0, i32 1, i32 2
  %48 = load i16, i16* %47, align 2
  %49 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1, i32 1, i32 0
  %50 = zext i16 %48 to i32
  %51 = tail call dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"* %49, i32 %50) #15
  %52 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  br label %54

54:                                               ; preds = %45, %32
  %55 = phi %"class.blink::TreeScope"* [ %53, %45 ], [ null, %32 ]
  %56 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %57 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %56, align 8
  %58 = bitcast %"class.blink::ScopedCSSValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #15
  %59 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %6, i64 0, i32 0
  store %"class.blink::CSSValue"* %42, %"class.blink::CSSValue"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %6, i64 0, i32 1
  store %"class.blink::TreeScope"* %55, %"class.blink::TreeScope"** %60, align 8
  call void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_11CSSPropertyERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::StyleResolverState"* dereferenceable(600) %57, %"class.blink::ScopedCSSValue"* nonnull dereferenceable(16) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade27LookupAndApplyInterpolationERKNS_11CSSPropertyENS_15CascadePriorityERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), i64, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %111, label %10

10:                                               ; preds = %4
  %11 = lshr i64 %2, 4
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %2, 20
  %14 = trunc i64 %13 to i32
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %28, !prof !5

17:                                               ; preds = %10
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  %21 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 80, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %21 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 4, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  store i8* %21, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty) #15
  br label %28

28:                                               ; preds = %10, %17, %20
  %29 = load %"class.WTF::Vector.1758"*, %"class.WTF::Vector.1758"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink21CascadeInterpolations10GetEntriesEvE7s_empty, i64 0, i32 0, i32 0), align 8
  %30 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0
  %31 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %32, 256
  %34 = select i1 %33, %"class.WTF::Vector.1758"* %29, %"class.WTF::Vector.1758"* %30
  %35 = and i32 %14, 255
  %36 = tail call dereferenceable(16) %"struct.blink::CascadeInterpolations::Entry"* @_ZNK3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1758"* %34, i32 %35) #15
  %37 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %36 to %"class.WTF::HashMap.1736"**
  %38 = load %"class.WTF::HashMap.1736"*, %"class.WTF::HashMap.1736"** %37, align 8
  %39 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  %40 = and i32 %12, 65535
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %73

42:                                               ; preds = %28
  %43 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 0
  %44 = bitcast %"class.blink::CSSProperty"* %1 to %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)***
  %45 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*** %44, align 8, !noalias !32
  %46 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %45, i64 4
  %47 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %46, align 8, !noalias !32
  %48 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %47(%"class.blink::CSSUnresolvedProperty"* %43) #15, !noalias !32
  %49 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  store i32 3, i32* %49, align 8, !alias.scope !32
  %50 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1, i32 0
  %51 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() #15, !noalias !32
  store %"class.blink::CSSProperty"* %51, %"class.blink::CSSProperty"** %50, align 8, !alias.scope !32
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8, !noalias !32
  %54 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8, !alias.scope !32
  %55 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %55, label %81, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4, !noalias !32
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %81

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %63 = load i32, i32* %62, align 4, !noalias !32
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #15
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  tail call void @llvm.trap() #15, !noalias !32
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4, !noalias !32
  br label %81

73:                                               ; preds = %28
  %74 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %40) #15, !noalias !32
  %75 = and i32 %12, 16777216
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %78 = select i1 %76, i32 4, i32 2
  store i32 %78, i32* %77, align 8, !alias.scope !32
  %79 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %74, %"class.blink::CSSProperty"** %79, align 8, !alias.scope !32
  %80 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %80, align 8, !alias.scope !32
  br label %81

81:                                               ; preds = %42, %56, %71, %73
  %82 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %38, i64 0, i32 0
  %83 = call %"struct.WTF::KeyValuePair.1739"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISE_SJ_SK_EES2_EEPKSA_RKT0_(%"class.WTF::HashTable.1737"* %82, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #15
  %84 = icmp eq %"struct.WTF::KeyValuePair.1739"* %83, null
  %85 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %38, i64 0, i32 0, i32 0
  %86 = load %"struct.WTF::KeyValuePair.1739"*, %"struct.WTF::KeyValuePair.1739"** %85, align 8
  %87 = getelementptr inbounds %"class.WTF::HashMap.1736", %"class.WTF::HashMap.1736"* %38, i64 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %86, i64 %89
  %91 = select i1 %84, %"struct.WTF::KeyValuePair.1739"* %90, %"struct.WTF::KeyValuePair.1739"* %83
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %91, i64 0, i32 1, i32 0, i32 0
  %93 = load %"class.blink::HeapVector.1742"*, %"class.blink::HeapVector.1742"** %92, align 8
  call void @_ZN5blink12StyleCascade18ApplyInterpolationERKNS_11CSSPropertyENS_15CascadePriorityERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, i64 %2, %"class.blink::HeapVector.1742"* dereferenceable(24) %93, %"class.blink::CascadeResolver"* dereferenceable(6272) %3)
  %94 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #15
  br label %110

110:                                              ; preds = %81, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #15
  br label %111

111:                                              ; preds = %4, %110
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12StyleCascade13IsRootElementEv(%"class.blink::StyleCascade"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 1
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 47, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %5, %9
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade13TokenSequenceC2EPKNS_15CSSVariableDataE(%"class.blink::StyleCascade::TokenSequence"* nocapture, %"class.blink::CSSVariableData"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::StyleCascade::TokenSequence"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #15
  %4 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = zext i32 %6 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %11) #15
  %13 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %12, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.WTF::Vector.819"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = lshr i64 %12, 3
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %8, align 8
  %18 = bitcast i8* %13 to %"class.WTF::String"*
  br label %19

19:                                               ; preds = %10, %2
  %20 = phi %"class.WTF::String"* [ null, %2 ], [ %18, %10 ]
  %21 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = load i32, i32* %21, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %58, label %30

30:                                               ; preds = %19, %54
  %31 = phi %"class.WTF::String"* [ %55, %54 ], [ %20, %19 ]
  %32 = phi %"class.WTF::String"* [ %56, %54 ], [ %25, %19 ]
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #15
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #15
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %30
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 1
  %57 = icmp eq %"class.WTF::String"* %56, %28
  br i1 %57, label %58, label %30

58:                                               ; preds = %54, %19
  %59 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 4
  %61 = load i8, i8* %60, align 8, !range !3
  store i8 %61, i8* %59, align 8
  %62 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 3
  %63 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 6
  %64 = load i8, i8* %63, align 2, !range !3
  store i8 %64, i8* %62, align 1
  %65 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 4
  %66 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 7
  %67 = load i8, i8* %66, align 1, !range !3
  store i8 %67, i8* %65, align 2
  %68 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 8, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #15
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %77
  tail call void @llvm.trap() #15
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %58, %72, %87
  %90 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 6
  %91 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 9
  %92 = bitcast %"class.WTF::TextEncoding"* %91 to i64*
  %93 = bitcast %"class.WTF::TextEncoding"* %90 to i64*
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade13TokenSequence6AppendERKS1_(%"class.blink::StyleCascade::TokenSequence"*, %"class.blink::StyleCascade::TokenSequence"* nocapture readonly dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1825"* %3, %"class.blink::CSSParserToken"* %5, i32 %7) #15
  %8 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.819"* %8, %"class.WTF::String"* %10, i32 %12) #15
  %13 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = or i8 %16, %14
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %1, i64 0, i32 3
  %19 = load i8, i8* %18, align 1, !range !3
  %20 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = or i8 %21, %19
  store i8 %22, i8* %20, align 1
  %23 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 2, !range !3
  %25 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 4
  %26 = load i8, i8* %25, align 2, !range !3
  %27 = or i8 %26, %24
  store i8 %27, i8* %25, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade13TokenSequence6AppendEPKNS_15CSSVariableDataE(%"class.blink::StyleCascade::TokenSequence"*, %"class.blink::CSSVariableData"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1825"* %3, %"class.blink::CSSParserToken"* %5, i32 %7) #15
  %8 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.819"* %8, %"class.WTF::String"* %10, i32 %12) #15
  %13 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = or i8 %16, %14
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 6
  %19 = load i8, i8* %18, align 2, !range !3
  %20 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = or i8 %21, %19
  store i8 %22, i8* %20, align 1
  %23 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 7
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 4
  %26 = load i8, i8* %25, align 2, !range !3
  %27 = or i8 %26, %24
  store i8 %27, i8* %25, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade13TokenSequence6AppendERKNS_14CSSParserTokenE(%"class.blink::StyleCascade::TokenSequence"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %17, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %10, i64 %11
  %13 = bitcast %"class.blink::CSSParserToken"* %12 to i8*
  %14 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #15
  %15 = load i32, i32* %3, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %3, align 4
  br label %19

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1825"* %18, %"class.blink::CSSParserToken"* dereferenceable(24) %1) #15
  br label %19

19:                                               ; preds = %8, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::CSSVariableData"* @_ZN5blink12StyleCascade13TokenSequence17BuildVariableDataEv(%"class.blink::StyleCascade::TokenSequence"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::StyleCascade::TokenSequence"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  store atomic i64 0, i64* %2 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::Vector.819"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  store i32 0, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 0, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !3
  %19 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 4
  %20 = load i8, i8* %19, align 2, !range !3
  %21 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 6
  %22 = tail call noalias i8* @malloc(i64 72) #15
  %23 = bitcast i8* %22 to %"class.blink::CSSVariableData"*
  %24 = bitcast i8* %22 to i32*
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = getelementptr inbounds i8, i8* %22, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %22, i64 20
  %29 = bitcast i8* %28 to i32*
  %30 = bitcast i8* %25 to i64*
  store atomic i64 %10, i64* %30 monotonic, align 8
  store i32 %12, i32* %27, align 4
  store i32 %14, i32* %29, align 4
  %31 = getelementptr inbounds i8, i8* %22, i64 24
  %32 = getelementptr inbounds i8, i8* %22, i64 32
  %33 = bitcast i8* %32 to i32*
  %34 = getelementptr inbounds i8, i8* %22, i64 36
  %35 = bitcast i8* %34 to i32*
  %36 = bitcast i8* %31 to i64*
  store atomic i64 %3, i64* %36 monotonic, align 8
  store i32 %5, i32* %33, align 4
  store i32 %7, i32* %35, align 4
  %37 = getelementptr inbounds i8, i8* %22, i64 40
  %38 = bitcast i8* %37 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds i8, i8* %22, i64 48
  store i8 %16, i8* %39, align 8
  %40 = getelementptr inbounds i8, i8* %22, i64 49
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %22, i64 50
  store i8 %18, i8* %41, align 2
  %42 = getelementptr inbounds i8, i8* %22, i64 51
  store i8 %20, i8* %42, align 1
  %43 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %0, i64 0, i32 5, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds i8, i8* %22, i64 56
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %1
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #15
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #15
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %1, %48, %63
  %66 = getelementptr inbounds i8, i8* %22, i64 64
  %67 = bitcast %"class.WTF::TextEncoding"* %21 to i64*
  %68 = bitcast i8* %66 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  ret %"class.blink::CSSVariableData"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink12StyleCascade13ResolveRevertERKNS_11CSSPropertyERKNS_8CSSValueERNS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3), i8* nocapture dereferenceable(1), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::CSSPropertyName", align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  switch i8 %8, label %19 [
    i8 35, label %14
    i8 43, label %9
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 8
  %11 = bitcast %"class.blink::CSSValue"* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 748
  br i1 %13, label %14, label %19

14:                                               ; preds = %9, %5
  %15 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %16 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %16, i64 0, i32 1
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  tail call void @_ZNK5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"* %18, i32 3252) #15
  br label %19

19:                                               ; preds = %5, %9, %14
  %20 = load i8, i8* %3, align 1
  switch i8 %20, label %22 [
    i8 0, label %23
    i8 16, label %23
    i8 1, label %23
    i8 2, label %26
    i8 3, label %21
    i8 4, label %21
  ]

21:                                               ; preds = %19, %19
  br label %26

22:                                               ; preds = %19
  unreachable

23:                                               ; preds = %19, %19, %19
  %24 = tail call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %25 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %24, i64 0, i32 0
  br label %100

26:                                               ; preds = %19, %21
  %27 = phi i8 [ 2, %21 ], [ 1, %19 ]
  %28 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %29 = bitcast %"class.blink::CSSPropertyName"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %30 = bitcast %"class.blink::CSSProperty"* %1 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %31 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %30, align 8
  %32 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %31, i64 6
  %33 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %32, align 8
  %34 = tail call { i32, %"class.WTF::StringImpl"* } %33(%"class.blink::CSSProperty"* %1) #15
  %35 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 0
  %36 = extractvalue { i32, %"class.WTF::StringImpl"* } %34, 0
  store i32 %36, i32* %35, align 8
  %37 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = extractvalue { i32, %"class.WTF::StringImpl"* } %34, 1
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %37, align 8
  %39 = call %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameENS_13CascadeOriginE(%"class.blink::CascadeMap"* %28, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %6, i8 zeroext %27) #15
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #15
  br label %55

55:                                               ; preds = %26, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  %56 = icmp eq %"class.blink::CascadePriority"* %39, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  store i8 0, i8* %3, align 1
  %58 = call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %59 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %58, i64 0, i32 0
  br label %100

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::CascadePriority", %"class.blink::CascadePriority"* %39, i64 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = lshr i64 %62, 55
  %64 = shl i64 %63, 63
  %65 = ashr exact i64 %64, 63
  %66 = and i64 %65, 15
  %67 = lshr i64 %62, 52
  %68 = xor i64 %66, %67
  %69 = trunc i64 %68 to i8
  store i8 %69, i8* %3, align 1
  %70 = load i64, i64* %61, align 8
  %71 = lshr i64 %70, 4
  %72 = trunc i64 %71 to i32
  %73 = lshr i64 %70, 20
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 65535
  %76 = and i32 %72, 65535
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 1, i32 0, i32 0
  %79 = call dereferenceable(16) %"struct.blink::MatchedProperties"* @_ZNK3WTF6VectorIN5blink17MatchedPropertiesELj64ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %78, i32 %75) #15
  %80 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %80, align 8
  %82 = icmp eq %"class.blink::CSSPropertyValueSet"* %81, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %60
  %84 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %81, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, -1
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %81, i64 4
  %89 = bitcast %"class.blink::CSSPropertyValueSet"* %88 to %"class.WTF::Vector.1947"*
  %90 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1947"* %89, i32 %76) #15
  %91 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %90, i64 0, i32 1, i32 0, i32 0
  br label %96

92:                                               ; preds = %83, %60
  %93 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %81, i64 2
  %94 = bitcast %"class.blink::CSSPropertyValueSet"* %93 to %"class.blink::Member.1074"*
  %95 = getelementptr inbounds %"class.blink::Member.1074", %"class.blink::Member.1074"* %94, i64 %77, i32 0, i32 0
  br label %96

96:                                               ; preds = %87, %92
  %97 = phi %"class.blink::CSSValue"** [ %95, %92 ], [ %91, %87 ]
  %98 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %97, align 8
  %99 = call %"class.blink::CSSValue"* @_ZN5blink12StyleCascade7ResolveERKNS_11CSSPropertyERKNS_8CSSValueERNS_13CascadeOriginERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CSSValue"* dereferenceable(3) %98, i8* dereferenceable(1) %3, %"class.blink::CascadeResolver"* dereferenceable(6272) %4)
  br label %100

100:                                              ; preds = %57, %96, %23
  %101 = phi %"class.blink::CSSValue"* [ %25, %23 ], [ %99, %96 ], [ %59, %57 ]
  ret %"class.blink::CSSValue"* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink12StyleCascade21ResolveCustomPropertyERKNS_11CSSPropertyERKNS_28CSSCustomPropertyDeclarationERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CSSCustomPropertyDeclaration"* readonly dereferenceable(32), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::CascadeResolver::AutoLock", align 8
  %6 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %2, i64 0, i32 3, i32 0
  %7 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %6, align 8
  %8 = icmp eq %"class.blink::CSSVariableData"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %2, i64 0, i32 0
  br label %136

11:                                               ; preds = %4
  %12 = bitcast %"class.blink::CascadeResolver::AutoLock"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.blink::CascadeResolver::AutoLock", %"class.blink::CascadeResolver::AutoLock"* %5, i64 0, i32 0
  store %"class.blink::CascadeResolver"* inttoptr (i64 -6148914691236517206 to %"class.blink::CascadeResolver"*), %"class.blink::CascadeResolver"** %13, align 8
  call void @_ZN5blink15CascadeResolver8AutoLockC1ERKNS_11CSSPropertyERS0_(%"class.blink::CascadeResolver::AutoLock"* nonnull %5, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CascadeResolver"* dereferenceable(6272) %3) #15
  %14 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %6, align 8
  %15 = ptrtoint %"class.blink::CSSVariableData"* %14 to i64
  %16 = icmp eq %"class.blink::CSSVariableData"* %14, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #15
  br label %19

19:                                               ; preds = %11, %17
  %20 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %14, i64 0, i32 5
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = call %"class.blink::CSSVariableData"* @_ZN5blink12StyleCascade19ResolveVariableDataEPNS_15CSSVariableDataERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSVariableData"* %14, %"class.blink::CascadeResolver"* dereferenceable(6272) %3)
  %25 = ptrtoint %"class.blink::CSSVariableData"* %24 to i64
  br i1 %16, label %33, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #15
  %28 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %14) #15
  %32 = bitcast %"class.blink::CSSVariableData"* %14 to i8*
  call void @free(i8* %32) #15
  br label %33

33:                                               ; preds = %19, %31, %26, %23
  %34 = phi i64 [ %15, %19 ], [ %25, %23 ], [ %25, %26 ], [ %25, %31 ]
  %35 = inttoptr i64 %34 to %"class.blink::CSSVariableData"*
  %36 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 1, i32 1
  %37 = bitcast i32* %36 to %"class.blink::PropertyRegistration"**
  %38 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %37, align 8
  %39 = icmp ne %"class.blink::PropertyRegistration"* %38, null
  %40 = icmp ne i64 %34, 0
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %63

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %35, i64 0, i32 6
  %44 = load i8, i8* %43, align 2, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %35, i64 0, i32 7
  %48 = load i8, i8* %47, align 1, !range !3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %52 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::Element"*, %"class.blink::Element"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %52, i64 0, i32 1
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %56, i64 0, i32 47, i32 0, i32 0
  %58 = load %"class.blink::Element"*, %"class.blink::Element"** %57, align 8
  %59 = icmp eq %"class.blink::Element"* %54, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %42, %50
  %61 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyFontSizeEv() #15
  %62 = call zeroext i1 @_ZN5blink15CascadeResolver11DetectCycleERKNS_11CSSPropertyE(%"class.blink::CascadeResolver"* %3, %"class.blink::CSSProperty"* dereferenceable(24) %61) #15
  br label %63

63:                                               ; preds = %46, %50, %33, %60
  %64 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %65 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %65, i64 0, i32 2, i32 0
  %67 = bitcast %"class.blink::ComputedStyle"** %66 to %"class.blink::ComputedStyleBase"**
  %68 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %68, i64 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8
  %72 = or i160 %71, 340282366920938463463374607431768211456
  store i160 %72, i160* %70, align 8
  %73 = call zeroext i1 @_ZNK5blink15CascadeResolver7InCycleEv(%"class.blink::CascadeResolver"* %3) #15
  br i1 %73, label %122, label %74

74:                                               ; preds = %63
  br i1 %40, label %78, label %75

75:                                               ; preds = %74
  %76 = call %"class.blink::CSSInvalidVariableValue"* @_ZN5blink23CSSInvalidVariableValue6CreateEv() #15
  %77 = getelementptr inbounds %"class.blink::CSSInvalidVariableValue", %"class.blink::CSSInvalidVariableValue"* %76, i64 0, i32 0
  br label %134

78:                                               ; preds = %74
  %79 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %6, align 8
  %80 = icmp eq %"class.blink::CSSVariableData"* %79, %35
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %2, i64 0, i32 0
  br label %126

83:                                               ; preds = %78
  %84 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64 32) #15
  %85 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %35, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #15
  store i8 0, i8* %84, align 1
  %86 = getelementptr inbounds i8, i8* %84, i64 1
  %87 = load i8, i8* %86, align 1
  %88 = and i8 %87, -8
  store i8 %88, i8* %86, align 1
  %89 = getelementptr inbounds i8, i8* %84, i64 2
  store i8 43, i8* %89, align 1
  %90 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = getelementptr inbounds i8, i8* %84, i64 8
  %93 = bitcast i8* %92 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %93, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #15
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %100
  call void @llvm.trap() #15
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %83, %95, %110
  %113 = getelementptr inbounds i8, i8* %84, i64 16
  %114 = bitcast i8* %113 to i64*
  store i64 %34, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %84, i64 24
  %116 = bitcast i8* %115 to i32*
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds i8, i8* %84, i64 -4
  %118 = bitcast i8* %117 to i16*
  %119 = load atomic i16, i16* %118 monotonic, align 2
  %120 = or i16 %119, 1
  store atomic i16 %120, i16* %118 release, align 2
  %121 = bitcast i8* %84 to %"class.blink::CSSValue"*
  br label %126

122:                                              ; preds = %63
  %123 = call %"class.blink::CSSCyclicVariableValue"* @_ZN5blink22CSSCyclicVariableValue6CreateEv() #15
  %124 = getelementptr inbounds %"class.blink::CSSCyclicVariableValue", %"class.blink::CSSCyclicVariableValue"* %123, i64 0, i32 0, i32 0
  %125 = icmp eq i64 %34, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %81, %112, %122
  %127 = phi %"class.blink::CSSValue"* [ %124, %122 ], [ %121, %112 ], [ %82, %81 ]
  %128 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %35, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %128) #15
  %129 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %126
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %35) #15
  %133 = inttoptr i64 %34 to i8*
  call void @free(i8* %133) #15
  br label %134

134:                                              ; preds = %75, %122, %126, %132
  %135 = phi %"class.blink::CSSValue"* [ %124, %122 ], [ %127, %126 ], [ %127, %132 ], [ %77, %75 ]
  call void @_ZN5blink15CascadeResolver8AutoLockD1Ev(%"class.blink::CascadeResolver::AutoLock"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %136

136:                                              ; preds = %134, %9
  %137 = phi %"class.blink::CSSValue"* [ %135, %134 ], [ %10, %9 ]
  ret %"class.blink::CSSValue"* %137
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink12StyleCascade24ResolveVariableReferenceERKNS_11CSSPropertyERKNS_25CSSVariableReferenceValueERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CSSVariableReferenceValue"* nocapture readonly dereferenceable(24), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca %"class.blink::CascadeResolver::AutoLock", align 8
  %7 = alloca %"class.blink::StyleCascade::TokenSequence", align 8
  %8 = bitcast %"class.blink::CascadeResolver::AutoLock"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.blink::CascadeResolver::AutoLock", %"class.blink::CascadeResolver::AutoLock"* %6, i64 0, i32 0
  store %"class.blink::CascadeResolver"* inttoptr (i64 -6148914691236517206 to %"class.blink::CascadeResolver"*), %"class.blink::CascadeResolver"** %9, align 8
  call void @_ZN5blink15CascadeResolver8AutoLockC1ERKNS_11CSSPropertyERS0_(%"class.blink::CascadeResolver::AutoLock"* nonnull %6, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CascadeResolver"* dereferenceable(6272) %3) #15
  %10 = getelementptr inbounds %"class.blink::CSSVariableReferenceValue", %"class.blink::CSSVariableReferenceValue"* %2, i64 0, i32 1, i32 0
  %11 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSVariableReferenceValue", %"class.blink::CSSVariableReferenceValue"* %2, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %12, align 8
  %14 = icmp eq %"class.blink::CSSParserContext"* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %17 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %17, i64 0, i32 1
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %19) #15
  %21 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 0, i32 6, i32 11
  %22 = load i32, i32* %21, align 8
  %23 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %22) #15
  br label %24

24:                                               ; preds = %4, %15
  %25 = phi %"class.blink::CSSParserContext"* [ %23, %15 ], [ %13, %4 ]
  %26 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 64
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %32 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %32, i64 0, i32 2, i32 0
  %34 = bitcast %"class.blink::ComputedStyle"** %33 to %"class.blink::ComputedStyleBase"**
  %35 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %35, i64 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = or i160 %38, 1361129467683753853853498429727072845824
  store i160 %39, i160* %37, align 8
  br label %40

40:                                               ; preds = %24, %30
  %41 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %42 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %42, i64 0, i32 2, i32 0
  %44 = bitcast %"class.blink::ComputedStyle"** %43 to %"class.blink::ComputedStyleBase"**
  %45 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %45, i64 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = or i160 %48, 680564733841876926926749214863536422912
  store i160 %49, i160* %47, align 8
  %50 = bitcast %"class.blink::StyleCascade::TokenSequence"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %50) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 40, i1 false)
  %51 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 5, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 35, i1 false) #15
  %52 = bitcast %"class.WTF::StringImpl"** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #15
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %11, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %54, i64 %57
  %59 = call zeroext i1 @_ZN5blink12StyleCascade17ResolveTokensIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSParserToken"* %54, %"class.blink::CSSParserToken"* %58, %"class.blink::CascadeResolver"* dereferenceable(6272) %3, %"class.blink::StyleCascade::TokenSequence"* nonnull dereferenceable(56) %7)
  br i1 %59, label %60, label %78

60:                                               ; preds = %40
  %61 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %62, i64 %65
  %67 = bitcast %"class.blink::CSSParserTokenRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67)
  %68 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %62, %"class.blink::CSSParserToken"** %68, align 8
  %69 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %66, %"class.blink::CSSParserToken"** %69, align 8
  %70 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = call %"class.blink::CSSValue"* @_ZN5blink17CSSPropertyParser16ParseSingleValueENS_13CSSPropertyIDERKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextE(i32 %71, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5, %"class.blink::CSSParserContext"* %25) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67)
  %73 = icmp eq %"class.blink::CSSValue"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %72, i64 0, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 35
  br i1 %77, label %78, label %81

78:                                               ; preds = %40, %60, %74
  %79 = call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %80 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %79, i64 0, i32 0
  br label %81

81:                                               ; preds = %78, %74
  %82 = phi %"class.blink::CSSValue"* [ %72, %74 ], [ %80, %78 ]
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #15
  br label %98

98:                                               ; preds = %97, %94, %81
  %99 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::String"*, %"class.WTF::String"** %100, align 8
  %102 = icmp eq %"class.WTF::String"* %101, null
  br i1 %102, label %137, label %103, !prof !4

103:                                              ; preds = %98
  %104 = bitcast %"class.WTF::String"* %101 to i8*
  %105 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %135, label %108, !prof !2

108:                                              ; preds = %103
  %109 = zext i32 %106 to i64
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 %109
  br label %111

111:                                              ; preds = %129, %108
  %112 = phi %"class.WTF::String"* [ %130, %129 ], [ %101, %108 ]
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #15
  br label %129

129:                                              ; preds = %128, %125, %111
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 1
  %131 = icmp eq %"class.WTF::String"* %130, %110
  br i1 %131, label %132, label %111

132:                                              ; preds = %129
  store i32 0, i32* %105, align 4
  %133 = bitcast %"class.WTF::Vector.819"* %99 to i8**
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %132, %103
  %136 = phi i8* [ %134, %132 ], [ %104, %103 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %136) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %100, align 8
  br label %137

137:                                              ; preds = %135, %98
  %138 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %138, align 8
  %140 = icmp eq %"class.blink::CSSParserToken"* %139, null
  %141 = bitcast %"class.blink::CSSParserToken"* %139 to i8*
  br i1 %140, label %148, label %142, !prof !4

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %147, label %146, !prof !2

146:                                              ; preds = %142
  store i32 0, i32* %143, align 4
  br label %147

147:                                              ; preds = %146, %142
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %141) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %138, align 8
  br label %148

148:                                              ; preds = %137, %147
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %50) #15
  call void @_ZN5blink15CascadeResolver8AutoLockD1Ev(%"class.blink::CascadeResolver::AutoLock"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret %"class.blink::CSSValue"* %82
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink12StyleCascade26ResolvePendingSubstitutionERKNS_11CSSPropertyERKNS_8cssvalue27CSSPendingSubstitutionValueERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::cssvalue::CSSPendingSubstitutionValue"* dereferenceable(16), %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::CascadeResolver::AutoLock", align 8
  %6 = alloca %"class.blink::CSSPropertyName", align 8
  %7 = alloca %"class.blink::StyleCascade::TokenSequence", align 8
  %8 = alloca %"class.blink::HeapVector.1838", align 8
  %9 = alloca %"class.blink::CSSParserTokenRange", align 8
  %10 = bitcast %"class.blink::CascadeResolver::AutoLock"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.blink::CascadeResolver::AutoLock", %"class.blink::CascadeResolver::AutoLock"* %5, i64 0, i32 0
  store %"class.blink::CascadeResolver"* inttoptr (i64 -6148914691236517206 to %"class.blink::CascadeResolver"*), %"class.blink::CascadeResolver"** %11, align 8
  call void @_ZN5blink15CascadeResolver8AutoLockC1ERKNS_11CSSPropertyERS0_(%"class.blink::CascadeResolver::AutoLock"* nonnull %5, %"class.blink::CSSProperty"* dereferenceable(24) %1, %"class.blink::CascadeResolver"* dereferenceable(6272) %3) #15
  %12 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 3
  %13 = bitcast %"class.blink::CSSPropertyName"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = bitcast %"class.blink::CSSProperty"* %1 to { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)***
  %15 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)**, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*** %14, align 8
  %16 = getelementptr inbounds { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %15, i64 6
  %17 = load { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)*, { i32, %"class.WTF::StringImpl"* } (%"class.blink::CSSProperty"*)** %16, align 8
  %18 = call { i32, %"class.WTF::StringImpl"* } %17(%"class.blink::CSSProperty"* %1) #15
  %19 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 0
  %20 = extractvalue { i32, %"class.WTF::StringImpl"* } %18, 0
  store i32 %20, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = extractvalue { i32, %"class.WTF::StringImpl"* } %18, 1
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %21, align 8
  %23 = call i64 @_ZNK5blink10CascadeMap2AtERKNS_15CSSPropertyNameE(%"class.blink::CascadeMap"* %12, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %6) #15
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %4, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  %40 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 64
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %46 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %46, i64 0, i32 2, i32 0
  %48 = bitcast %"class.blink::ComputedStyle"** %47 to %"class.blink::ComputedStyleBase"**
  %49 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %49, i64 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = or i160 %52, 1361129467683753853853498429727072845824
  store i160 %53, i160* %51, align 8
  br label %54

54:                                               ; preds = %39, %44
  %55 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %56 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %56, i64 0, i32 2, i32 0
  %58 = bitcast %"class.blink::ComputedStyle"** %57 to %"class.blink::ComputedStyleBase"**
  %59 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %59, i64 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = or i160 %62, 680564733841876926926749214863536422912
  store i160 %63, i160* %61, align 8
  %64 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 0
  %65 = load %"class.blink::cssvalue::CSSPendingSubstitutionValue"*, %"class.blink::cssvalue::CSSPendingSubstitutionValue"** %64, align 8
  %66 = icmp eq %"class.blink::cssvalue::CSSPendingSubstitutionValue"* %65, %2
  br i1 %66, label %228, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"class.blink::cssvalue::CSSPendingSubstitutionValue", %"class.blink::cssvalue::CSSPendingSubstitutionValue"* %2, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::CSSVariableReferenceValue"*, %"class.blink::CSSVariableReferenceValue"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::CSSVariableReferenceValue", %"class.blink::CSSVariableReferenceValue"* %69, i64 0, i32 1, i32 0
  %71 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::cssvalue::CSSPendingSubstitutionValue", %"class.blink::cssvalue::CSSPendingSubstitutionValue"* %2, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = bitcast %"class.blink::StyleCascade::TokenSequence"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %74) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 40, i1 false)
  %75 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 5, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 35, i1 false) #15
  %76 = bitcast %"class.WTF::StringImpl"** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #15
  %77 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %71, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %71, i64 0, i32 2, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %78, i64 %81
  %83 = call zeroext i1 @_ZN5blink12StyleCascade17ResolveTokensIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSParserToken"* %78, %"class.blink::CSSParserToken"* %82, %"class.blink::CascadeResolver"* dereferenceable(6272) %3, %"class.blink::StyleCascade::TokenSequence"* nonnull dereferenceable(56) %7)
  br i1 %83, label %87, label %84

84:                                               ; preds = %67
  %85 = call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %86 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %85, i64 0, i32 0
  br label %158

87:                                               ; preds = %67
  %88 = bitcast %"class.blink::HeapVector.1838"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6160, i8* nonnull %88) #15
  %89 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %8, i64 0, i32 0, i32 0, i32 1, i64 0
  %90 = bitcast %"class.blink::HeapVector.1838"* %8 to i8**
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %91, align 8
  %92 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %93 = bitcast i32* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 6148, i1 false) #15
  %94 = bitcast %"class.blink::CSSParserTokenRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #15
  %95 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %96, i64 %99
  %101 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %9, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %96, %"class.blink::CSSParserToken"** %101, align 8
  %102 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %9, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %100, %"class.blink::CSSParserToken"** %102, align 8
  %103 = getelementptr inbounds %"class.blink::CSSVariableReferenceValue", %"class.blink::CSSVariableReferenceValue"* %69, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %103, align 8
  %105 = call zeroext i1 @_ZN5blink17CSSPropertyParser10ParseValueENS_13CSSPropertyIDEbRKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13StyleRuleBase8RuleTypeE(i32 %73, i1 zeroext false, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %9, %"class.blink::CSSParserContext"* %104, %"class.blink::HeapVector.1838"* nonnull dereferenceable(6160) %8, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #15
  br i1 %105, label %109, label %106

106:                                              ; preds = %87
  %107 = call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %108 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %107, i64 0, i32 0
  br label %112

109:                                              ; preds = %87
  store %"class.blink::cssvalue::CSSPendingSubstitutionValue"* %2, %"class.blink::cssvalue::CSSPendingSubstitutionValue"** %64, align 8
  %110 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 1, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %8, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.1842"* %110, %"class.WTF::VectorBuffer.1842"* nonnull dereferenceable(6160) %111, i64 0, i64 0) #15
  br label %112

112:                                              ; preds = %109, %106
  %113 = phi i32 [ 1, %106 ], [ 0, %109 ]
  %114 = phi %"class.blink::CSSValue"* [ %108, %106 ], [ undef, %109 ]
  %115 = load i32, i32* %92, align 4
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %116, label %118, label %120, !prof !2

118:                                              ; preds = %112
  %119 = bitcast i8* %89 to %"class.blink::CSSPropertyValue"*
  br label %151

120:                                              ; preds = %112
  %121 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %117, align 8
  %122 = icmp ne %"class.blink::CSSPropertyValue"* %121, null
  %123 = bitcast i8* %89 to %"class.blink::CSSPropertyValue"*
  %124 = icmp ne %"class.blink::CSSPropertyValue"* %121, %123
  %125 = and i1 %122, %124
  br i1 %125, label %151, label %126

126:                                              ; preds = %120
  %127 = zext i32 %115 to i64
  %128 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %121, i64 %127
  br label %129

129:                                              ; preds = %147, %126
  %130 = phi %"class.blink::CSSPropertyValue"* [ %148, %147 ], [ %121, %126 ]
  %131 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #15
  br label %147

147:                                              ; preds = %146, %143, %129
  %148 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %130, i64 1
  %149 = icmp eq %"class.blink::CSSPropertyValue"* %148, %128
  br i1 %149, label %150, label %129

150:                                              ; preds = %147
  store i32 0, i32* %92, align 4
  br label %151

151:                                              ; preds = %118, %150, %120
  %152 = phi %"class.blink::CSSPropertyValue"* [ %119, %118 ], [ %123, %150 ], [ %123, %120 ]
  %153 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %117, align 8
  %154 = icmp eq %"class.blink::CSSPropertyValue"* %153, %152
  br i1 %154, label %157, label %155, !prof !4

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.blink::HeapVector.1838", %"class.blink::HeapVector.1838"* %8, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1842"* nonnull %156, %"class.blink::CSSPropertyValue"* %153) #15
  br label %157

157:                                              ; preds = %151, %155
  call void @llvm.lifetime.end.p0i8(i64 6160, i8* nonnull %88) #15
  br label %158

158:                                              ; preds = %157, %84
  %159 = phi i32 [ 1, %84 ], [ %113, %157 ]
  %160 = phi %"class.blink::CSSValue"* [ %86, %84 ], [ %114, %157 ]
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #15
  br label %176

176:                                              ; preds = %175, %172, %158
  %177 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 1
  %178 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.WTF::String"*, %"class.WTF::String"** %178, align 8
  %180 = icmp eq %"class.WTF::String"* %179, null
  br i1 %180, label %215, label %181, !prof !4

181:                                              ; preds = %176
  %182 = bitcast %"class.WTF::String"* %179 to i8*
  %183 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %213, label %186, !prof !2

186:                                              ; preds = %181
  %187 = zext i32 %184 to i64
  %188 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %179, i64 %187
  br label %189

189:                                              ; preds = %207, %186
  %190 = phi %"class.WTF::String"* [ %208, %207 ], [ %179, %186 ]
  %191 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %190, i64 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #15
  br label %207

207:                                              ; preds = %206, %203, %189
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %190, i64 1
  %209 = icmp eq %"class.WTF::String"* %208, %188
  br i1 %209, label %210, label %189

210:                                              ; preds = %207
  store i32 0, i32* %183, align 4
  %211 = bitcast %"class.WTF::Vector.819"* %177 to i8**
  %212 = load i8*, i8** %211, align 8
  br label %213

213:                                              ; preds = %210, %181
  %214 = phi i8* [ %212, %210 ], [ %182, %181 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %214) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %178, align 8
  br label %215

215:                                              ; preds = %213, %176
  %216 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %216, align 8
  %218 = icmp eq %"class.blink::CSSParserToken"* %217, null
  %219 = bitcast %"class.blink::CSSParserToken"* %217 to i8*
  br i1 %218, label %226, label %220, !prof !4

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224, !prof !2

224:                                              ; preds = %220
  store i32 0, i32* %221, align 4
  br label %225

225:                                              ; preds = %224, %220
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %219) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %216, align 8
  br label %226

226:                                              ; preds = %215, %225
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %74) #15
  %227 = icmp eq i32 %159, 0
  br i1 %227, label %228, label %296

228:                                              ; preds = %226, %54
  %229 = load i32, i32* %40, align 4
  %230 = trunc i32 %229 to i8
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %238

232:                                              ; preds = %228
  %233 = bitcast %"class.blink::CSSProperty"* %1 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)***
  %234 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*** %233, align 8
  %235 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %234, i64 14
  %236 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)** %235, align 8
  %237 = call %"class.blink::CSSProperty"* %236(%"class.blink::CSSProperty"* %1) #15
  br label %238

238:                                              ; preds = %228, %232
  %239 = phi %"class.blink::CSSProperty"* [ %237, %232 ], [ %1, %228 ]
  %240 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 1, i32 0
  %241 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %293, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 7
  br label %248

246:                                              ; preds = %280
  %247 = icmp eq i32 %283, %242
  br i1 %247, label %293, label %248

248:                                              ; preds = %246, %244
  %249 = phi i32 [ 0, %244 ], [ %283, %246 ]
  %250 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1841"* %240, i32 %249) #15
  %251 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %250, i64 0, i32 0
  %252 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %251) #15
  %253 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %252) #15
  %254 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1841"* %240, i32 %249) #15
  %255 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %254, i64 0, i32 1, i32 0, i32 0
  %256 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %253, i64 0, i32 2
  %258 = load i32, i32* %257, align 4
  %259 = and i32 %258, 8192
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %280, label %261

261:                                              ; preds = %248
  store i8 1, i8* %245, align 1
  %262 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %55, align 8
  %263 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %262, i64 0, i32 2, i32 0
  %264 = bitcast %"class.blink::ComputedStyle"** %263 to %"class.blink::ComputedStyleBase"**
  %265 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %265, i64 0, i32 9
  %267 = bitcast [20 x i8]* %266 to i160*
  %268 = load i160, i160* %267, align 8
  %269 = lshr i160 %268, 115
  %270 = trunc i160 %269 to i8
  %271 = and i8 %270, 1
  %272 = lshr i160 %268, 102
  %273 = trunc i160 %272 to i8
  %274 = and i8 %273, 3
  %275 = bitcast %"class.blink::CSSProperty"* %253 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %276 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %275, align 8
  %277 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %276, i64 15
  %278 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %277, align 8
  %279 = call %"class.blink::CSSProperty"* %278(%"class.blink::CSSProperty"* %253, i8 zeroext %271, i8 zeroext %274) #15
  br label %280

280:                                              ; preds = %248, %261
  %281 = phi %"class.blink::CSSProperty"* [ %279, %261 ], [ %253, %248 ]
  %282 = icmp eq %"class.blink::CSSProperty"* %239, %281
  %283 = add nuw i32 %249, 1
  br i1 %282, label %284, label %246

284:                                              ; preds = %280
  %285 = icmp eq %"class.blink::CSSValue"* %256, null
  br i1 %285, label %296, label %286

286:                                              ; preds = %284
  %287 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %256, i64 0, i32 2
  %288 = load i8, i8* %287, align 1
  %289 = icmp eq i8 %288, 35
  br i1 %289, label %290, label %296

290:                                              ; preds = %286
  %291 = call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %292 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %291, i64 0, i32 0
  br label %296

293:                                              ; preds = %246, %238
  %294 = call %"class.blink::cssvalue::CSSUnsetValue"* @_ZN5blink8cssvalue13CSSUnsetValue6CreateEv() #15
  %295 = getelementptr inbounds %"class.blink::cssvalue::CSSUnsetValue", %"class.blink::cssvalue::CSSUnsetValue"* %294, i64 0, i32 0
  br label %296

296:                                              ; preds = %290, %286, %284, %293, %226
  %297 = phi %"class.blink::CSSValue"* [ %160, %226 ], [ %295, %293 ], [ %256, %286 ], [ null, %284 ], [ %292, %290 ]
  call void @_ZN5blink15CascadeResolver8AutoLockD1Ev(%"class.blink::CascadeResolver::AutoLock"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  ret %"class.blink::CSSValue"* %297
}

declare void @_ZN5blink15CascadeResolver8AutoLockC1ERKNS_11CSSPropertyERS0_(%"class.blink::CascadeResolver::AutoLock"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CascadeResolver"* dereferenceable(6272)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSVariableData"* @_ZN5blink12StyleCascade19ResolveVariableDataEPNS_15CSSVariableDataERNS_15CascadeResolverE(%"class.blink::StyleCascade"*, %"class.blink::CSSVariableData"* nocapture readonly, %"class.blink::CascadeResolver"* dereferenceable(6272)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::StyleCascade::TokenSequence", align 8
  %5 = bitcast %"class.blink::StyleCascade::TokenSequence"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  call void @_ZN5blink12StyleCascade13TokenSequenceC2EPKNS_15CSSVariableDataE(%"class.blink::StyleCascade::TokenSequence"* nonnull %4, %"class.blink::CSSVariableData"* %1)
  %6 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = call zeroext i1 @_ZN5blink12StyleCascade17ResolveTokensIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSParserToken"* %7, %"class.blink::CSSParserToken"* %11, %"class.blink::CascadeResolver"* dereferenceable(6272) %2, %"class.blink::StyleCascade::TokenSequence"* nonnull dereferenceable(56) %4)
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = call %"class.blink::CSSVariableData"* @_ZN5blink12StyleCascade13TokenSequence17BuildVariableDataEv(%"class.blink::StyleCascade::TokenSequence"* nonnull %4)
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi %"class.blink::CSSVariableData"* [ %14, %13 ], [ null, %3 ]
  %17 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::String"*, %"class.WTF::String"** %35, align 8
  %37 = icmp eq %"class.WTF::String"* %36, null
  br i1 %37, label %72, label %38, !prof !4

38:                                               ; preds = %33
  %39 = bitcast %"class.WTF::String"* %36 to i8*
  %40 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %70, label %43, !prof !2

43:                                               ; preds = %38
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %44
  br label %46

46:                                               ; preds = %64, %43
  %47 = phi %"class.WTF::String"* [ %65, %64 ], [ %36, %43 ]
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %63, %60, %46
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 1
  %66 = icmp eq %"class.WTF::String"* %65, %45
  br i1 %66, label %67, label %46

67:                                               ; preds = %64
  store i32 0, i32* %40, align 4
  %68 = bitcast %"class.WTF::Vector.819"* %34 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %38
  %71 = phi i8* [ %69, %67 ], [ %39, %38 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %35, align 8
  br label %72

72:                                               ; preds = %70, %33
  %73 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %73, align 8
  %75 = icmp eq %"class.blink::CSSParserToken"* %74, null
  %76 = bitcast %"class.blink::CSSParserToken"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !4

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %73, align 8
  br label %83

83:                                               ; preds = %72, %82
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #15
  ret %"class.blink::CSSVariableData"* %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12StyleCascade21HasFontSizeDependencyERKNS_14CustomPropertyEPNS_15CSSVariableDataE(%"class.blink::StyleCascade"* nocapture readonly, %"class.blink::CustomProperty"* nocapture readonly dereferenceable(40), %"class.blink::CSSVariableData"* readonly) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %1, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %4, align 8
  %6 = icmp ne %"class.blink::PropertyRegistration"* %5, null
  %7 = icmp ne %"class.blink::CSSVariableData"* %2, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %28

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %2, i64 0, i32 6
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %2, i64 0, i32 7
  %15 = load i8, i8* %14, align 1, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %19 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::Element"*, %"class.blink::Element"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %19, i64 0, i32 1
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 47, i32 0, i32 0
  %25 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  %26 = icmp eq %"class.blink::Element"* %21, %25
  br i1 %26, label %28, label %27

27:                                               ; preds = %13, %17
  br label %28

28:                                               ; preds = %9, %17, %3, %27
  %29 = phi i1 [ false, %27 ], [ false, %3 ], [ true, %9 ], [ true, %17 ]
  ret i1 %29
}

declare zeroext i1 @_ZN5blink15CascadeResolver11DetectCycleERKNS_11CSSPropertyE(%"class.blink::CascadeResolver"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyFontSizeEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink15CascadeResolver7InCycleEv(%"class.blink::CascadeResolver"*) local_unnamed_addr #3

declare %"class.blink::CSSCyclicVariableValue"* @_ZN5blink22CSSCyclicVariableValue6CreateEv() local_unnamed_addr #3

declare %"class.blink::CSSInvalidVariableValue"* @_ZN5blink23CSSInvalidVariableValue6CreateEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15CascadeResolver8AutoLockD1Ev(%"class.blink::CascadeResolver::AutoLock"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserContext"* @_ZN5blink12StyleCascade16GetParserContextERKNS_25CSSVariableReferenceValueE(%"class.blink::StyleCascade"* nocapture readonly, %"class.blink::CSSVariableReferenceValue"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSVariableReferenceValue", %"class.blink::CSSVariableReferenceValue"* %1, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %3, align 8
  %5 = icmp eq %"class.blink::CSSParserContext"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %8 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %8, i64 0, i32 1
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %10) #15
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 6, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %13) #15
  br label %15

15:                                               ; preds = %2, %6
  %16 = phi %"class.blink::CSSParserContext"* [ %14, %6 ], [ %4, %2 ]
  ret %"class.blink::CSSParserContext"* %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade24MarkHasVariableReferenceERKNS_11CSSPropertyE(%"class.blink::StyleCascade"* nocapture readonly, %"class.blink::CSSProperty"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %9 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %9, i64 0, i32 2, i32 0
  %11 = bitcast %"class.blink::ComputedStyle"** %10 to %"class.blink::ComputedStyleBase"**
  %12 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %12, i64 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = or i160 %15, 1361129467683753853853498429727072845824
  store i160 %16, i160* %14, align 8
  br label %17

17:                                               ; preds = %2, %7
  %18 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %19 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %19, i64 0, i32 2, i32 0
  %21 = bitcast %"class.blink::ComputedStyle"** %20 to %"class.blink::ComputedStyleBase"**
  %22 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %22, i64 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = or i160 %25, 680564733841876926926749214863536422912
  store i160 %26, i160* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12StyleCascade17ResolveTokensIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CascadeResolver"* dereferenceable(6272), %"class.blink::StyleCascade::TokenSequence"* dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %8, align 8
  %9 = icmp eq %"class.blink::CSSParserToken"* %1, %2
  br i1 %9, label %66, label %10

10:                                               ; preds = %5
  %11 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %12 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0
  br label %16

16:                                               ; preds = %10, %61
  %17 = phi %"class.blink::CSSParserToken"* [ %2, %10 ], [ %64, %61 ]
  %18 = phi %"class.blink::CSSParserToken"* [ %1, %10 ], [ %63, %61 ]
  %19 = phi i8 [ 1, %10 ], [ %62, %61 ]
  %20 = icmp ult %"class.blink::CSSParserToken"* %18, %17
  %21 = select i1 %20, %"class.blink::CSSParserToken"* %18, %"class.blink::CSSParserToken"* %11
  %22 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %21) #15
  %23 = icmp eq i32 %22, 833
  br i1 %23, label %24, label %31

24:                                               ; preds = %16
  %25 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* nonnull %6) #15
  %26 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %25, 0
  %27 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %25, 1
  %28 = call zeroext i1 @_ZN5blink12StyleCascade14ResolveVarIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSParserToken"* %26, %"class.blink::CSSParserToken"* %27, %"class.blink::CascadeResolver"* dereferenceable(6272) %3, %"class.blink::StyleCascade::TokenSequence"* dereferenceable(56) %4)
  %29 = zext i1 %28 to i8
  %30 = and i8 %19, %29
  br label %61

31:                                               ; preds = %16
  %32 = call i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* %21) #15
  %33 = icmp eq i32 %32, 835
  br i1 %33, label %34, label %41

34:                                               ; preds = %31
  %35 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* nonnull %6) #15
  %36 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %35, 0
  %37 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %35, 1
  %38 = call zeroext i1 @_ZN5blink12StyleCascade14ResolveEnvIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSParserToken"* %36, %"class.blink::CSSParserToken"* %37, %"class.blink::CascadeResolver"* dereferenceable(6272) %3, %"class.blink::StyleCascade::TokenSequence"* dereferenceable(56) %4)
  %39 = zext i1 %38 to i8
  %40 = and i8 %19, %39
  br label %61

41:                                               ; preds = %31
  %42 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %43 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %44 = icmp eq %"class.blink::CSSParserToken"* %42, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %42, i64 1
  store %"class.blink::CSSParserToken"* %46, %"class.blink::CSSParserToken"** %7, align 8
  br label %47

47:                                               ; preds = %41, %45
  %48 = phi %"class.blink::CSSParserToken"* [ %42, %45 ], [ %11, %41 ]
  %49 = load i32, i32* %12, align 4
  %50 = load i32, i32* %13, align 8
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %60, label %52, !prof !2

52:                                               ; preds = %47
  %53 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %53, i64 %54
  %56 = bitcast %"class.blink::CSSParserToken"* %55 to i8*
  %57 = bitcast %"class.blink::CSSParserToken"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #15
  %58 = load i32, i32* %12, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %12, align 4
  br label %61

60:                                               ; preds = %47
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1825"* %15, %"class.blink::CSSParserToken"* dereferenceable(24) %48) #15
  br label %61

61:                                               ; preds = %60, %52, %34, %24
  %62 = phi i8 [ %30, %24 ], [ %40, %34 ], [ %19, %52 ], [ %19, %60 ]
  %63 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %64 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %65 = icmp eq %"class.blink::CSSParserToken"* %63, %64
  br i1 %65, label %66, label %16

66:                                               ; preds = %61, %5
  %67 = phi i8 [ 1, %5 ], [ %62, %61 ]
  %68 = and i8 %67, 1
  %69 = icmp ne i8 %68, 0
  ret i1 %69
}

declare zeroext i1 @_ZN5blink17CSSPropertyParser10ParseValueENS_13CSSPropertyIDEbRKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13StyleRuleBase8RuleTypeE(i32, i1 zeroext, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"*, %"class.blink::HeapVector.1838"* dereferenceable(6160), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade19MaybeUseCountRevertERKNS_8CSSValueE(%"class.blink::StyleCascade"* nocapture readonly, %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %15 [
    i8 35, label %10
    i8 43, label %5
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 8
  %7 = bitcast %"class.blink::CSSValue"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 748
  br i1 %9, label %10, label %15

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %12 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %12, i64 0, i32 1
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  tail call void @_ZNK5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"* %14, i32 3252) #15
  br label %15

15:                                               ; preds = %2, %10, %5
  ret void
}

declare %"class.blink::CascadePriority"* @_ZN5blink10CascadeMap4FindERKNS_15CSSPropertyNameENS_13CascadeOriginE(%"class.blink::CascadeMap"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i8 zeroext) local_unnamed_addr #3

declare i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12StyleCascade14ResolveVarIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CascadeResolver"* dereferenceable(6272), %"class.blink::StyleCascade::TokenSequence"* dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = alloca %"class.blink::CSSParserLocalContext", align 8
  %8 = alloca %"class.blink::CSSParserLocalContext", align 4
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.blink::CustomProperty", align 8
  %12 = alloca %"class.blink::StyleCascade::TokenSequence", align 8
  %13 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp ult %"class.blink::CSSParserToken"* %1, %2
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %17 = select i1 %15, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %16
  %18 = bitcast %"class.blink::CSSParserToken"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 63
  %21 = icmp eq i32 %20, 17
  br i1 %21, label %22, label %31

22:                                               ; preds = %5, %22
  %23 = phi %"class.blink::CSSParserToken"* [ %24, %22 ], [ %1, %5 ]
  %24 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %23, i64 1
  %25 = icmp ult %"class.blink::CSSParserToken"* %24, %2
  %26 = select i1 %25, %"class.blink::CSSParserToken"* %24, %"class.blink::CSSParserToken"* %16
  %27 = bitcast %"class.blink::CSSParserToken"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 17
  br i1 %30, label %22, label %31

31:                                               ; preds = %22, %5
  %32 = phi %"class.blink::CSSParserToken"* [ %1, %5 ], [ %24, %22 ]
  %33 = icmp eq %"class.blink::CSSParserToken"* %32, %2
  %34 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %32, i64 1
  %35 = select i1 %33, %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"* %34
  %36 = select i1 %33, %"class.blink::CSSParserToken"* %16, %"class.blink::CSSParserToken"* %32
  %37 = icmp ult %"class.blink::CSSParserToken"* %35, %2
  %38 = select i1 %37, %"class.blink::CSSParserToken"* %35, %"class.blink::CSSParserToken"* %16
  %39 = bitcast %"class.blink::CSSParserToken"* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 63
  %42 = icmp eq i32 %41, 17
  br i1 %42, label %43, label %52

43:                                               ; preds = %31, %43
  %44 = phi %"class.blink::CSSParserToken"* [ %45, %43 ], [ %35, %31 ]
  %45 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %44, i64 1
  %46 = icmp ult %"class.blink::CSSParserToken"* %45, %2
  %47 = select i1 %46, %"class.blink::CSSParserToken"* %45, %"class.blink::CSSParserToken"* %16
  %48 = bitcast %"class.blink::CSSParserToken"* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 63
  %51 = icmp eq i32 %50, 17
  br i1 %51, label %43, label %52

52:                                               ; preds = %43, %31
  %53 = phi %"class.blink::CSSParserToken"* [ %35, %31 ], [ %45, %43 ]
  %54 = bitcast %"class.blink::CSSParserToken"* %36 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %36, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %36, i64 0, i32 2
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #15
  %62 = and i32 %55, 262144
  %63 = icmp eq i32 %62, 0
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = select i1 %63, i64 %64, i64 %65
  %67 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %66, i64* %67, align 8, !alias.scope !35
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %69 = bitcast i8** %68 to i64*
  store i64 %60, i64* %69, align 8, !alias.scope !35
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %57, i32* %70, align 8, !alias.scope !35
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #15
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %14, align 8
  %72 = bitcast %"class.blink::CustomProperty"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 40, i1 false)
  %73 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %74 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %74, i64 0, i32 1
  %76 = load %"class.blink::Document"*, %"class.blink::Document"** %75, align 8
  call void @_ZN5blink14CustomPropertyC1ERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CustomProperty"* nonnull %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.blink::Document"* dereferenceable(2848) %76) #15
  %77 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %52
  %81 = getelementptr inbounds %"class.blink::CascadeResolver", %"class.blink::CascadeResolver"* %3, i64 0, i32 0
  %82 = add i32 %78, -1
  %83 = call dereferenceable(8) %"class.blink::CSSProperty"** @_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1814"* %81, i32 %82) #15
  br label %84

84:                                               ; preds = %52, %80
  %85 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %11, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %85, align 8
  %87 = icmp eq %"class.blink::PropertyRegistration"* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.blink::CustomProperty"* %11 to %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)***
  %90 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %90, i64 4
  %92 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %91, align 8
  %93 = call dereferenceable(8) %"class.WTF::AtomicString"* %92(%"class.blink::CustomProperty"* nonnull %11) #15
  %94 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %73, align 8
  %95 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %94, i64 0, i32 1
  %96 = load %"class.blink::Document"*, %"class.blink::Document"** %95, align 8
  %97 = call dereferenceable(56) %"class.blink::PropertyRegistry"* @_ZN5blink8Document22EnsurePropertyRegistryEv(%"class.blink::Document"* %96) #15
  call void @_ZNK5blink16PropertyRegistry14MarkReferencedERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"* %97, %"class.WTF::AtomicString"* dereferenceable(8) %93) #15
  br label %98

98:                                               ; preds = %84, %88
  %99 = bitcast %"class.blink::CustomProperty"* %11 to %"class.blink::CSSProperty"*
  %100 = call zeroext i1 @_ZN5blink15CascadeResolver11DetectCycleERKNS_11CSSPropertyE(%"class.blink::CascadeResolver"* %3, %"class.blink::CSSProperty"* nonnull dereferenceable(24) %99) #15
  br i1 %100, label %102, label %101

101:                                              ; preds = %98
  call void @_ZN5blink12StyleCascade14LookupAndApplyERKNS_11CSSPropertyERNS_15CascadeResolverE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSProperty"* nonnull dereferenceable(24) %99, %"class.blink::CascadeResolver"* dereferenceable(6272) %3)
  br label %102

102:                                              ; preds = %101, %98
  %103 = bitcast %"class.blink::CustomProperty"* %11 to %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)***
  %104 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %104, i64 4
  %106 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %105, align 8
  %107 = call dereferenceable(8) %"class.WTF::AtomicString"* %106(%"class.blink::CustomProperty"* nonnull %11) #15
  %108 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, 64
  %111 = icmp ne i32 %110, 0
  %112 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %73, align 8
  %113 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %112, i64 0, i32 2, i32 0
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %113, align 8
  %115 = call %"class.blink::CSSVariableData"* @_ZNK5blink13ComputedStyle15GetVariableDataERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %114, %"class.WTF::AtomicString"* dereferenceable(8) %107, i1 zeroext %111) #15
  %116 = ptrtoint %"class.blink::CSSVariableData"* %115 to i64
  %117 = icmp eq %"class.blink::CSSVariableData"* %115, null
  br i1 %117, label %118, label %121

118:                                              ; preds = %102
  %119 = call zeroext i1 @_ZNK5blink15CascadeResolver17AllowSubstitutionEPNS_15CSSVariableDataE(%"class.blink::CascadeResolver"* %3, %"class.blink::CSSVariableData"* %115) #15
  %120 = select i1 %119, i64 %116, i64 0
  br label %133

121:                                              ; preds = %102
  %122 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %115, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %122) #15
  %123 = call zeroext i1 @_ZNK5blink15CascadeResolver17AllowSubstitutionEPNS_15CSSVariableDataE(%"class.blink::CascadeResolver"* %3, %"class.blink::CSSVariableData"* nonnull %115) #15
  %124 = or i1 %117, %123
  %125 = select i1 %123, i64 %116, i64 0
  br i1 %124, label %133, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %115, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %127) #15
  %128 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %115, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %126
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %115) #15
  %132 = bitcast %"class.blink::CSSVariableData"* %115 to i8*
  call void @free(i8* %132) #15
  br label %133

133:                                              ; preds = %118, %121, %131, %126
  %134 = phi i64 [ %125, %121 ], [ 0, %126 ], [ 0, %131 ], [ %120, %118 ]
  %135 = icmp ult %"class.blink::CSSParserToken"* %53, %2
  %136 = select i1 %135, %"class.blink::CSSParserToken"* %53, %"class.blink::CSSParserToken"* %16
  %137 = bitcast %"class.blink::CSSParserToken"* %136 to i32*
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 63
  %140 = icmp eq i32 %139, 22
  br i1 %140, label %141, label %255

141:                                              ; preds = %133
  %142 = icmp eq %"class.blink::CSSParserToken"* %53, %2
  %143 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %53, i64 1
  %144 = select i1 %142, %"class.blink::CSSParserToken"* %53, %"class.blink::CSSParserToken"* %143
  %145 = bitcast %"class.blink::StyleCascade::TokenSequence"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %145) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 40, i1 false)
  %146 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %12, i64 0, i32 5, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 0, i64 35, i1 false) #15
  %147 = bitcast %"class.WTF::StringImpl"** %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 16, i1 false) #15
  %148 = call zeroext i1 @_ZN5blink12StyleCascade17ResolveTokensIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSParserToken"* %144, %"class.blink::CSSParserToken"* %2, %"class.blink::CascadeResolver"* dereferenceable(6272) %3, %"class.blink::StyleCascade::TokenSequence"* nonnull dereferenceable(56) %12)
  %149 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %150, i64 %153
  %155 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155)
  %156 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %150, %"class.blink::CSSParserToken"** %156, align 8
  %157 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %154, %"class.blink::CSSParserToken"** %157, align 8
  %158 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %85, align 8
  %159 = icmp eq %"class.blink::PropertyRegistration"* %158, null
  br i1 %159, label %160, label %161

160:                                              ; preds = %141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155)
  br label %182

161:                                              ; preds = %141
  %162 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %73, align 8
  %163 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %162, i64 0, i32 1
  %164 = load %"class.blink::Document"*, %"class.blink::Document"** %163, align 8
  %165 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %164) #15
  %166 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %165, i64 0, i32 6, i32 11
  %167 = load i32, i32* %166, align 8
  %168 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %167) #15
  %169 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %169) #15
  %170 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %170) #15
  call void @_ZN5blink21CSSParserLocalContextC1Ev(%"class.blink::CSSParserLocalContext"* nonnull %8) #15
  %171 = call { i64, i32 } @_ZNK5blink21CSSParserLocalContext16WithVariableModeENS0_12VariableModeE(%"class.blink::CSSParserLocalContext"* nonnull %8, i32 0) #15
  %172 = extractvalue { i64, i32 } %171, 0
  %173 = extractvalue { i64, i32 } %171, 1
  %174 = bitcast %"class.blink::CSSParserLocalContext"* %7 to i64*
  store i64 %172, i64* %174, align 8
  %175 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %7, i64 0, i32 3
  store i32 %173, i32* %175, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %170) #15
  %176 = bitcast %"class.blink::CustomProperty"* %11 to %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)***
  %177 = load %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)**, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*** %176, align 8
  %178 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)** %177, i64 16
  %179 = load %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)** %178, align 8
  %180 = call %"class.blink::CSSValue"* %179(%"class.blink::CustomProperty"* nonnull %11, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %168, %"class.blink::CSSParserLocalContext"* nonnull dereferenceable(12) %7) #15
  %181 = icmp eq %"class.blink::CSSValue"* %180, null
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %169) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155)
  br i1 %181, label %289, label %182

182:                                              ; preds = %161, %160
  %183 = icmp ne i64 %134, 0
  %184 = xor i1 %148, true
  %185 = or i1 %183, %184
  br i1 %185, label %189, label %186

186:                                              ; preds = %182
  %187 = call %"class.blink::CSSVariableData"* @_ZN5blink12StyleCascade13TokenSequence17BuildVariableDataEv(%"class.blink::StyleCascade::TokenSequence"* nonnull %12)
  %188 = ptrtoint %"class.blink::CSSVariableData"* %187 to i64
  br label %189

189:                                              ; preds = %186, %182
  %190 = phi i64 [ %134, %182 ], [ %188, %186 ]
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #15
  br label %206

206:                                              ; preds = %205, %202, %189
  %207 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %12, i64 0, i32 1
  %208 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %207, i64 0, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::String"*, %"class.WTF::String"** %208, align 8
  %210 = icmp eq %"class.WTF::String"* %209, null
  br i1 %210, label %245, label %211, !prof !4

211:                                              ; preds = %206
  %212 = bitcast %"class.WTF::String"* %209 to i8*
  %213 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %12, i64 0, i32 1, i32 0, i32 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %243, label %216, !prof !2

216:                                              ; preds = %211
  %217 = zext i32 %214 to i64
  %218 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %209, i64 %217
  br label %219

219:                                              ; preds = %237, %216
  %220 = phi %"class.WTF::String"* [ %238, %237 ], [ %209, %216 ]
  %221 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %220, i64 0, i32 0, i32 0
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %237, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  br i1 %228, label %231, label %233

231:                                              ; preds = %224
  %232 = add i32 %230, -1
  store i32 %232, i32* %229, align 4
  br label %233

233:                                              ; preds = %231, %224
  %234 = phi i32 [ %232, %231 ], [ %230, %224 ]
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #15
  br label %237

237:                                              ; preds = %236, %233, %219
  %238 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %220, i64 1
  %239 = icmp eq %"class.WTF::String"* %238, %218
  br i1 %239, label %240, label %219

240:                                              ; preds = %237
  store i32 0, i32* %213, align 4
  %241 = bitcast %"class.WTF::Vector.819"* %207 to i8**
  %242 = load i8*, i8** %241, align 8
  br label %243

243:                                              ; preds = %240, %211
  %244 = phi i8* [ %242, %240 ], [ %212, %211 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %244) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %208, align 8
  br label %245

245:                                              ; preds = %243, %206
  %246 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %149, align 8
  %247 = icmp eq %"class.blink::CSSParserToken"* %246, null
  %248 = bitcast %"class.blink::CSSParserToken"* %246 to i8*
  br i1 %247, label %254, label %249, !prof !4

249:                                              ; preds = %245
  %250 = load i32, i32* %151, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %253, label %252, !prof !2

252:                                              ; preds = %249
  store i32 0, i32* %151, align 4
  br label %253

253:                                              ; preds = %252, %249
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %248) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %149, align 8
  br label %254

254:                                              ; preds = %245, %253
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %145) #15
  br label %255

255:                                              ; preds = %133, %254
  %256 = phi i64 [ %190, %254 ], [ %134, %133 ]
  %257 = inttoptr i64 %256 to %"class.blink::CSSVariableData"*
  %258 = icmp eq i64 %256, 0
  br i1 %258, label %365, label %259

259:                                              ; preds = %255
  %260 = call zeroext i1 @_ZNK5blink15CascadeResolver7InCycleEv(%"class.blink::CascadeResolver"* %3) #15
  br i1 %260, label %355, label %261

261:                                              ; preds = %259
  %262 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %257, i64 0, i32 2, i32 0, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = icmp ugt i32 %263, 65536
  br i1 %264, label %355, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0
  %267 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %257, i64 0, i32 2, i32 0, i32 0, i32 0
  %268 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %267, align 8
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1825"* %266, %"class.blink::CSSParserToken"* %268, i32 %263) #15
  %269 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 1
  %270 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %257, i64 0, i32 1, i32 0, i32 0, i32 0
  %271 = load %"class.WTF::String"*, %"class.WTF::String"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %257, i64 0, i32 1, i32 0, i32 0, i32 2
  %273 = load i32, i32* %272, align 4
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.819"* %269, %"class.WTF::String"* %271, i32 %273) #15
  %274 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %257, i64 0, i32 4
  %275 = load i8, i8* %274, align 8, !range !3
  %276 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 2
  %277 = load i8, i8* %276, align 8, !range !3
  %278 = or i8 %277, %275
  store i8 %278, i8* %276, align 8
  %279 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %257, i64 0, i32 6
  %280 = load i8, i8* %279, align 2, !range !3
  %281 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 3
  %282 = load i8, i8* %281, align 1, !range !3
  %283 = or i8 %282, %280
  store i8 %283, i8* %281, align 1
  %284 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %257, i64 0, i32 7
  %285 = load i8, i8* %284, align 1, !range !3
  %286 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 4
  %287 = load i8, i8* %286, align 2, !range !3
  %288 = or i8 %287, %285
  store i8 %288, i8* %286, align 2
  br label %355

289:                                              ; preds = %161
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #15
  br label %305

305:                                              ; preds = %304, %301, %289
  %306 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %12, i64 0, i32 1
  %307 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %306, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.WTF::String"*, %"class.WTF::String"** %307, align 8
  %309 = icmp eq %"class.WTF::String"* %308, null
  br i1 %309, label %344, label %310, !prof !4

310:                                              ; preds = %305
  %311 = bitcast %"class.WTF::String"* %308 to i8*
  %312 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %12, i64 0, i32 1, i32 0, i32 0, i32 2
  %313 = load i32, i32* %312, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %342, label %315, !prof !2

315:                                              ; preds = %310
  %316 = zext i32 %313 to i64
  %317 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %308, i64 %316
  br label %318

318:                                              ; preds = %336, %315
  %319 = phi %"class.WTF::String"* [ %337, %336 ], [ %308, %315 ]
  %320 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %319, i64 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %336, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #15
  br label %336

336:                                              ; preds = %335, %332, %318
  %337 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %319, i64 1
  %338 = icmp eq %"class.WTF::String"* %337, %317
  br i1 %338, label %339, label %318

339:                                              ; preds = %336
  store i32 0, i32* %312, align 4
  %340 = bitcast %"class.WTF::Vector.819"* %306 to i8**
  %341 = load i8*, i8** %340, align 8
  br label %342

342:                                              ; preds = %339, %310
  %343 = phi i8* [ %341, %339 ], [ %311, %310 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %343) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %307, align 8
  br label %344

344:                                              ; preds = %342, %305
  %345 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %149, align 8
  %346 = icmp eq %"class.blink::CSSParserToken"* %345, null
  %347 = bitcast %"class.blink::CSSParserToken"* %345 to i8*
  br i1 %346, label %353, label %348, !prof !4

348:                                              ; preds = %344
  %349 = load i32, i32* %151, align 4
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %352, label %351, !prof !2

351:                                              ; preds = %348
  store i32 0, i32* %151, align 4
  br label %352

352:                                              ; preds = %351, %348
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %347) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %149, align 8
  br label %353

353:                                              ; preds = %352, %344
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %145) #15
  %354 = icmp eq i64 %134, 0
  br i1 %354, label %365, label %355

355:                                              ; preds = %265, %261, %259, %353
  %356 = phi i64 [ %134, %353 ], [ %256, %259 ], [ %256, %261 ], [ %256, %265 ]
  %357 = phi i1 [ false, %353 ], [ false, %259 ], [ false, %261 ], [ true, %265 ]
  %358 = inttoptr i64 %356 to %"class.blink::CSSVariableData"*
  %359 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %358, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %359) #15
  %360 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %358, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %355
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %358) #15
  %364 = inttoptr i64 %356 to i8*
  call void @free(i8* %364) #15
  br label %365

365:                                              ; preds = %255, %353, %355, %363
  %366 = phi i1 [ false, %353 ], [ %357, %355 ], [ %357, %363 ], [ false, %255 ]
  %367 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %367, align 8
  %368 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %368, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %369, null
  br i1 %370, label %384, label %371

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  br i1 %375, label %378, label %380

378:                                              ; preds = %371
  %379 = add i32 %377, -1
  store i32 %379, i32* %376, align 4
  br label %380

380:                                              ; preds = %378, %371
  %381 = phi i32 [ %379, %378 ], [ %377, %371 ]
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %380
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %369) #15
  br label %384

384:                                              ; preds = %365, %380, %383
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #15
  %385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %386 = icmp eq %"class.WTF::StringImpl"* %385, null
  br i1 %386, label %400, label %387

387:                                              ; preds = %384
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = and i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  br i1 %391, label %394, label %396

394:                                              ; preds = %387
  %395 = add i32 %393, -1
  store i32 %395, i32* %392, align 4
  br label %396

396:                                              ; preds = %394, %387
  %397 = phi i32 [ %395, %394 ], [ %393, %387 ]
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %396
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %385) #15
  br label %400

400:                                              ; preds = %384, %396, %399
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  ret i1 %366
}

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12StyleCascade14ResolveEnvIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CascadeResolver"* dereferenceable(6272), %"class.blink::StyleCascade::TokenSequence"* dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp ult %"class.blink::CSSParserToken"* %1, %2
  %11 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %12 = select i1 %10, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %11
  %13 = bitcast %"class.blink::CSSParserToken"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 63
  %16 = icmp eq i32 %15, 17
  br i1 %16, label %17, label %26

17:                                               ; preds = %5, %17
  %18 = phi %"class.blink::CSSParserToken"* [ %19, %17 ], [ %1, %5 ]
  %19 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %18, i64 1
  %20 = icmp ult %"class.blink::CSSParserToken"* %19, %2
  %21 = select i1 %20, %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"* %11
  %22 = bitcast %"class.blink::CSSParserToken"* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 63
  %25 = icmp eq i32 %24, 17
  br i1 %25, label %17, label %26

26:                                               ; preds = %17, %5
  %27 = phi %"class.blink::CSSParserToken"* [ %1, %5 ], [ %19, %17 ]
  %28 = icmp eq %"class.blink::CSSParserToken"* %27, %2
  %29 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %27, i64 1
  %30 = select i1 %28, %"class.blink::CSSParserToken"* %27, %"class.blink::CSSParserToken"* %29
  %31 = select i1 %28, %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"* %27
  %32 = icmp ult %"class.blink::CSSParserToken"* %30, %2
  %33 = select i1 %32, %"class.blink::CSSParserToken"* %30, %"class.blink::CSSParserToken"* %11
  %34 = bitcast %"class.blink::CSSParserToken"* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 63
  %37 = icmp eq i32 %36, 17
  br i1 %37, label %38, label %47

38:                                               ; preds = %26, %38
  %39 = phi %"class.blink::CSSParserToken"* [ %40, %38 ], [ %30, %26 ]
  %40 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %39, i64 1
  %41 = icmp ult %"class.blink::CSSParserToken"* %40, %2
  %42 = select i1 %41, %"class.blink::CSSParserToken"* %40, %"class.blink::CSSParserToken"* %11
  %43 = bitcast %"class.blink::CSSParserToken"* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 63
  %46 = icmp eq i32 %45, 17
  br i1 %46, label %38, label %47

47:                                               ; preds = %38, %26
  %48 = phi %"class.blink::CSSParserToken"* [ %30, %26 ], [ %40, %38 ]
  %49 = bitcast %"class.blink::CSSParserToken"* %31 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %31, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %31, i64 0, i32 2
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15
  %57 = and i32 %50, 262144
  %58 = icmp eq i32 %57, 0
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %61 = select i1 %58, i64 %59, i64 %60
  %62 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %61, i64* %62, align 8, !alias.scope !38
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %64 = bitcast i8** %63 to i64*
  store i64 %55, i64* %64, align 8, !alias.scope !38
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %52, i32* %65, align 8, !alias.scope !38
  %66 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #15
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %9, align 8
  %67 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %68 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::Element"*, %"class.blink::Element"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %70, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %72, i64 0, i32 1, i32 0, i32 0
  %74 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %73, align 8
  %75 = icmp eq %"class.blink::ContainerNode"* %74, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %47
  %77 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %74, i64 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 12
  %80 = icmp eq i32 %79, 8
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %74, i64 0, i32 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %83, i64 0, i32 1, i32 0, i32 0
  %85 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %84, align 8
  %86 = icmp eq %"class.blink::ContainerNode"* %85, %74
  br i1 %86, label %87, label %93

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %74, i64 2, i32 0, i32 4
  %89 = bitcast %"class.blink::Member.14"* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 196608
  %92 = icmp ne i32 %91, 131072
  br label %93

93:                                               ; preds = %47, %76, %81, %87
  %94 = phi i1 [ %92, %87 ], [ true, %81 ], [ true, %76 ], [ true, %47 ]
  %95 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %68, i64 0, i32 1
  %96 = load %"class.blink::Document"*, %"class.blink::Document"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %96, i64 0, i32 59, i32 0, i32 0
  %98 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %97, align 8
  %99 = call dereferenceable(104) %"class.blink::DocumentStyleEnvironmentVariables"* @_ZN5blink11StyleEngine26EnsureEnvironmentVariablesEv(%"class.blink::StyleEngine"* %98) #15
  %100 = call %"class.blink::CSSVariableData"* @_ZN5blink33DocumentStyleEnvironmentVariables15ResolveVariableERKN3WTF12AtomicStringEb(%"class.blink::DocumentStyleEnvironmentVariables"* %99, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, i1 zeroext %94) #15
  %101 = icmp eq %"class.blink::CSSVariableData"* %100, null
  br i1 %101, label %102, label %114

102:                                              ; preds = %93
  %103 = icmp ult %"class.blink::CSSParserToken"* %48, %2
  %104 = select i1 %103, %"class.blink::CSSParserToken"* %48, %"class.blink::CSSParserToken"* %11
  %105 = bitcast %"class.blink::CSSParserToken"* %104 to i32*
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 63
  %108 = icmp eq i32 %107, 22
  br i1 %108, label %109, label %140

109:                                              ; preds = %102
  %110 = icmp eq %"class.blink::CSSParserToken"* %48, %2
  %111 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %48, i64 1
  %112 = select i1 %110, %"class.blink::CSSParserToken"* %48, %"class.blink::CSSParserToken"* %111
  %113 = call zeroext i1 @_ZN5blink12StyleCascade17ResolveTokensIntoENS_19CSSParserTokenRangeERNS_15CascadeResolverERNS0_13TokenSequenceE(%"class.blink::StyleCascade"* %0, %"class.blink::CSSParserToken"* %112, %"class.blink::CSSParserToken"* %2, %"class.blink::CascadeResolver"* dereferenceable(6272) %3, %"class.blink::StyleCascade::TokenSequence"* dereferenceable(56) %4)
  br label %140

114:                                              ; preds = %93
  %115 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 0
  %116 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %100, i64 0, i32 2, i32 0, i32 0, i32 0
  %117 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %100, i64 0, i32 2, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1825"* %115, %"class.blink::CSSParserToken"* %117, i32 %119) #15
  %120 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 1
  %121 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %100, i64 0, i32 1, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::String"*, %"class.WTF::String"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %100, i64 0, i32 1, i32 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.819"* %120, %"class.WTF::String"* %122, i32 %124) #15
  %125 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %100, i64 0, i32 4
  %126 = load i8, i8* %125, align 8, !range !3
  %127 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 2
  %128 = load i8, i8* %127, align 8, !range !3
  %129 = or i8 %128, %126
  store i8 %129, i8* %127, align 8
  %130 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %100, i64 0, i32 6
  %131 = load i8, i8* %130, align 2, !range !3
  %132 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 3
  %133 = load i8, i8* %132, align 1, !range !3
  %134 = or i8 %133, %131
  store i8 %134, i8* %132, align 1
  %135 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %100, i64 0, i32 7
  %136 = load i8, i8* %135, align 1, !range !3
  %137 = getelementptr inbounds %"class.blink::StyleCascade::TokenSequence", %"class.blink::StyleCascade::TokenSequence"* %4, i64 0, i32 4
  %138 = load i8, i8* %137, align 2, !range !3
  %139 = or i8 %138, %136
  store i8 %139, i8* %137, align 2
  br label %140

140:                                              ; preds = %102, %114, %109
  %141 = phi i1 [ true, %114 ], [ %113, %109 ], [ false, %102 ]
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #15
  br label %157

157:                                              ; preds = %140, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret i1 %141
}

declare void @_ZN5blink14CustomPropertyC1ERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CustomProperty"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade16MarkIsReferencedERKNS_11CSSPropertyERKNS_14CustomPropertyE(%"class.blink::StyleCascade"* nocapture readonly, %"class.blink::CSSProperty"* nocapture readnone dereferenceable(24), %"class.blink::CustomProperty"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %2, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %4, align 8
  %6 = icmp eq %"class.blink::PropertyRegistration"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::CustomProperty"* %2 to %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)***
  %9 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %9, i64 4
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %10, align 8
  %12 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %11(%"class.blink::CustomProperty"* %2) #15
  %13 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %14 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %14, i64 0, i32 1
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = tail call dereferenceable(56) %"class.blink::PropertyRegistry"* @_ZN5blink8Document22EnsurePropertyRegistryEv(%"class.blink::Document"* %16) #15
  tail call void @_ZNK5blink16PropertyRegistry14MarkReferencedERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"* %17, %"class.WTF::AtomicString"* dereferenceable(8) %12) #15
  br label %18

18:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSVariableData"* @_ZNK5blink12StyleCascade15GetVariableDataERKNS_14CustomPropertyE(%"class.blink::StyleCascade"* nocapture readonly, %"class.blink::CustomProperty"* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::CustomProperty"* %1 to %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)***
  %4 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %4, i64 4
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CustomProperty"*)** %5, align 8
  %7 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %6(%"class.blink::CustomProperty"* %1) #15
  %8 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 64
  %11 = icmp ne i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %13 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %13, i64 0, i32 2, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = tail call %"class.blink::CSSVariableData"* @_ZNK5blink13ComputedStyle15GetVariableDataERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %15, %"class.WTF::AtomicString"* dereferenceable(8) %7, i1 zeroext %11) #15
  ret %"class.blink::CSSVariableData"* %16
}

declare zeroext i1 @_ZNK5blink15CascadeResolver17AllowSubstitutionEPNS_15CSSVariableDataE(%"class.blink::CascadeResolver"*, %"class.blink::CSSVariableData"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12StyleCascade16ValidateFallbackERKNS_14CustomPropertyENS_19CSSParserTokenRangeE(%"class.blink::StyleCascade"* nocapture readonly, %"class.blink::CustomProperty"* dereferenceable(40), %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca %"class.blink::CSSParserLocalContext", align 8
  %7 = alloca %"class.blink::CSSParserLocalContext", align 4
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %3, %"class.blink::CSSParserToken"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CustomProperty", %"class.blink::CustomProperty"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %10, align 8
  %12 = icmp eq %"class.blink::PropertyRegistration"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %15 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %15, i64 0, i32 1
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %17) #15
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %18, i64 0, i32 6, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %20) #15
  %22 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #15
  call void @_ZN5blink21CSSParserLocalContextC1Ev(%"class.blink::CSSParserLocalContext"* nonnull %7) #15
  %24 = call { i64, i32 } @_ZNK5blink21CSSParserLocalContext16WithVariableModeENS0_12VariableModeE(%"class.blink::CSSParserLocalContext"* nonnull %7, i32 0) #15
  %25 = extractvalue { i64, i32 } %24, 0
  %26 = extractvalue { i64, i32 } %24, 1
  %27 = bitcast %"class.blink::CSSParserLocalContext"* %6 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSParserLocalContext", %"class.blink::CSSParserLocalContext"* %6, i64 0, i32 3
  store i32 %26, i32* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #15
  %29 = bitcast %"class.blink::CustomProperty"* %1 to %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)***
  %30 = load %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)**, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)** %30, i64 16
  %32 = load %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)*, %"class.blink::CSSValue"* (%"class.blink::CustomProperty"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)** %31, align 8
  %33 = call %"class.blink::CSSValue"* %32(%"class.blink::CustomProperty"* %1, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5, %"class.blink::CSSParserContext"* dereferenceable(176) %21, %"class.blink::CSSParserLocalContext"* nonnull dereferenceable(12) %6) #15
  %34 = icmp ne %"class.blink::CSSValue"* %33, null
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %22) #15
  br label %35

35:                                               ; preds = %4, %13
  %36 = phi i1 [ %34, %13 ], [ true, %4 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSVariableData"* @_ZNK5blink12StyleCascade22GetEnvironmentVariableERKN3WTF12AtomicStringE(%"class.blink::StyleCascade"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %4 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %9, align 8
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 8
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %20, align 8
  %22 = icmp eq %"class.blink::ContainerNode"* %21, %10
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 2, i32 0, i32 4
  %25 = bitcast %"class.blink::Member.14"* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 196608
  %28 = icmp ne i32 %27, 131072
  br label %29

29:                                               ; preds = %17, %2, %12, %23
  %30 = phi i1 [ %28, %23 ], [ true, %17 ], [ true, %12 ], [ true, %2 ]
  %31 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %4, i64 0, i32 1
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 59, i32 0, i32 0
  %34 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %33, align 8
  %35 = tail call dereferenceable(104) %"class.blink::DocumentStyleEnvironmentVariables"* @_ZN5blink11StyleEngine26EnsureEnvironmentVariablesEv(%"class.blink::StyleEngine"* %34) #15
  %36 = tail call %"class.blink::CSSVariableData"* @_ZN5blink33DocumentStyleEnvironmentVariables15ResolveVariableERKN3WTF12AtomicStringEb(%"class.blink::DocumentStyleEnvironmentVariables"* %35, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %30) #15
  ret %"class.blink::CSSVariableData"* %36
}

declare %"class.blink::CSSVariableData"* @_ZNK5blink13ComputedStyle15GetVariableDataERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare dereferenceable(104) %"class.blink::DocumentStyleEnvironmentVariables"* @_ZN5blink11StyleEngine26EnsureEnvironmentVariablesEv(%"class.blink::StyleEngine"*) local_unnamed_addr #3

declare %"class.blink::CSSVariableData"* @_ZN5blink33DocumentStyleEnvironmentVariables15ResolveVariableERKN3WTF12AtomicStringEb(%"class.blink::DocumentStyleEnvironmentVariables"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32) local_unnamed_addr #3

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #3

declare void @_ZN5blink21CSSParserLocalContextC1Ev(%"class.blink::CSSParserLocalContext"*) unnamed_addr #3

declare { i64, i32 } @_ZNK5blink21CSSParserLocalContext16WithVariableModeENS0_12VariableModeE(%"class.blink::CSSParserLocalContext"*, i32) local_unnamed_addr #3

declare dereferenceable(56) %"class.blink::PropertyRegistry"* @_ZN5blink8Document22EnsurePropertyRegistryEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZNK5blink16PropertyRegistry14MarkReferencedERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12StyleCascade8CountUseENS_5mojom10WebFeatureE(%"class.blink::StyleCascade"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleCascade", %"class.blink::StyleCascade"* %0, i64 0, i32 0
  %4 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %4, i64 0, i32 1
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZNK5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"* %6, i32 %1) #15
  ret void
}

declare void @_ZNK5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1758"*, %"struct.blink::CascadeInterpolations::Entry"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %6, align 8
  %8 = icmp ugt %"struct.blink::CascadeInterpolations::Entry"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::CascadeInterpolations::Entry"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1758"* %0, i32 %5) #15
  %14 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::CascadeInterpolations::Entry"* %1 to i64
  %17 = ptrtoint %"struct.blink::CascadeInterpolations::Entry"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 4
  tail call void @_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1758"* %0, i32 %5) #15
  %20 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::CascadeInterpolations::Entry"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::CascadeInterpolations::Entry"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %23, i64 %26
  %28 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %27 to i8*
  %29 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #15
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1758"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %31, align 8
  %33 = icmp eq %"struct.blink::CascadeInterpolations::Entry"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CascadeInterpolations5EntryEEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CascadeInterpolations5EntryEEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1758"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1758"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1758"* %0, i32 %27) #15
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1758"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %5, align 8
  %7 = icmp eq %"struct.blink::CascadeInterpolations::Entry"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::CascadeInterpolations::Entry"*
  %10 = icmp eq %"struct.blink::CascadeInterpolations::Entry"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1758"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1758"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #15
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1759"* %19, %"struct.blink::CascadeInterpolations::Entry"* nonnull %6) #15
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CascadeInterpolations5EntryEEEmm(i64 %30) #15
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CascadeInterpolations5EntryEEEPKcv, i64 0, i64 0)) #15
  %33 = lshr i64 %31, 4
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.blink::CascadeInterpolations::Entry"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #15
  %46 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.blink::CascadeInterpolations::Entry"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.blink::CascadeInterpolations::Entry"*
  %51 = icmp eq %"struct.blink::CascadeInterpolations::Entry"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1759"* %53, %"struct.blink::CascadeInterpolations::Entry"* %48) #15
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1758"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21CascadeInterpolations5EntryEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1759"*, %"struct.blink::CascadeInterpolations::Entry"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::CascadeInterpolations::Entry"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKN5blink11CSSPropertyELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1815"*, %"class.blink::CSSProperty"**) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::CSSProperty"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::MatchedProperties"* @_ZNK3WTF6VectorIN5blink17MatchedPropertiesELj64ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::MatchedProperties"*, %"struct.blink::MatchedProperties"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::MatchedProperties", %"struct.blink::MatchedProperties"* %24, i64 %25
  ret %"struct.blink::MatchedProperties"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1947"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1947", %"class.WTF::Vector.1947"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.1947", %"class.WTF::Vector.1947"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare void @_ZN5blink16CascadeExpansionC1ERKNS_17MatchedPropertiesERKNS_8DocumentENS_13CascadeFilterEm(%"class.blink::CascadeExpansion"*, %"struct.blink::MatchedProperties"* dereferenceable(16), %"class.blink::Document"* dereferenceable(2848), i64, i64) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare { %"class.blink::CSSPropertyValueSet"*, i32 } @_ZNK5blink16CascadeExpansion10PropertyAtEm(%"class.blink::CascadeExpansion"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.8"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.8"*, %"class.blink::Member.8"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %24, i64 %25
  ret %"class.blink::Member.8"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27CSSInterpolationEnvironment5IsCSSEv(%"class.blink::CSSInterpolationEnvironment"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24InterpolationEnvironment5IsSVGEv(%"class.blink::InterpolationEnvironment"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27CSSInterpolationEnvironmentD0Ev(%"class.blink::CSSInterpolationEnvironment"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.blink::CSSInterpolationEnvironment"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare %"class.blink::CSSValue"* @_ZN5blink17CSSPropertyParser16ParseSingleValueENS_13CSSPropertyIDERKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextE(i32, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1842"*, %"class.blink::CSSPropertyValue"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

declare i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CSSProperty"** @_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1814"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.1814", %"class.WTF::Vector.1814"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %24, i64 %25
  ret %"class.blink::CSSProperty"** %26
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !4

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !4

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #15
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.819"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1873"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable.1871"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSValue"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.1873", align 8
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1873"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1871"* %0, %"struct.WTF::KeyValuePair.1873"* null)
  %11 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.1873"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #15
  %19 = and i32 %18, %16
  %20 = zext i32 %19 to i64
  %21 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = xor i32 %18, -1
  %25 = lshr i32 %18, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %99, %12
  %38 = phi i64 [ 0, %12 ], [ %103, %99 ]
  %39 = phi i64 [ %20, %12 ], [ %105, %99 ]
  %40 = phi %"struct.WTF::KeyValuePair.1873"* [ null, %12 ], [ %101, %99 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %13, i64 %39
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %41, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  store i32 -1, i32* %22, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %43 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %42, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5) #15
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #15
  br label %59

59:                                               ; preds = %37, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  br i1 %43, label %106, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %42, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #15
  br i1 %61, label %242, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %41, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %13, i64 %39, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %87

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #15
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %87

85:                                               ; preds = %62
  %86 = icmp eq i32 %64, -2
  br label %99

87:                                               ; preds = %83, %68
  %88 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %89 = icmp eq i32 %64, -2
  %90 = load atomic i32, i32* %69 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %87
  %94 = add i32 %88, -1
  store i32 %94, i32* %73, align 4
  br label %95

95:                                               ; preds = %93, %87
  %96 = phi i32 [ %94, %93 ], [ %88, %87 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #15
  br label %99

99:                                               ; preds = %85, %95, %98
  %100 = phi i1 [ %86, %85 ], [ %89, %95 ], [ %89, %98 ]
  %101 = select i1 %100, %"struct.WTF::KeyValuePair.1873"* %41, %"struct.WTF::KeyValuePair.1873"* %40
  %102 = icmp eq i64 %38, 0
  %103 = select i1 %102, i64 %36, i64 %38
  %104 = add i64 %103, %39
  %105 = and i64 %104, %17
  br label %37

106:                                              ; preds = %59
  %107 = icmp eq %"struct.WTF::KeyValuePair.1873"* %40, null
  br i1 %107, label %138, label %108

108:                                              ; preds = %106
  %109 = bitcast %"struct.WTF::KeyValuePair.1873"* %40 to i8*
  %110 = bitcast %"struct.WTF::KeyValuePair.1873"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #15
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 0, i32 0, i32 0
  store i32 -1, i32* %111, align 8, !alias.scope !41
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 0, i32 0, i32 1
  %113 = bitcast %"class.WTF::AtomicString"* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #15, !alias.scope !41
  %114 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8* nonnull %109, %"struct.WTF::KeyValuePair.1873"* nonnull dereferenceable(24) %4) #15
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %131

131:                                              ; preds = %108, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #15
  %132 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, 2147483647
  %135 = and i32 %134, 2147483647
  %136 = and i32 %133, -2147483648
  %137 = or i32 %135, %136
  store i32 %137, i32* %132, align 8
  br label %138

138:                                              ; preds = %106, %131
  %139 = phi %"struct.WTF::KeyValuePair.1873"* [ %40, %131 ], [ %41, %106 ]
  %140 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %139, i64 0, i32 0, i32 0
  store i32 %141, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %139, i64 0, i32 0, i32 1
  %144 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %164, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i33
  %156 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %155, i33 1) #15
  %157 = extractvalue { i33, i1 } %156, 1
  %158 = extractvalue { i33, i1 } %156, 0
  %159 = icmp slt i33 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %161, label %162, !prof !2

161:                                              ; preds = %152
  call void @llvm.trap() #15
  unreachable

162:                                              ; preds = %152
  %163 = trunc i33 %158 to i32
  store i32 %163, i32* %153, align 4
  br label %164

164:                                              ; preds = %162, %147, %138
  %165 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  %166 = bitcast %"class.WTF::AtomicString"* %143 to i64*
  %167 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %143, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  store i64 %165, i64* %166, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #15
  br label %183

183:                                              ; preds = %182, %179, %164
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %139, i64 0, i32 1
  %185 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %186 = ptrtoint %"class.blink::CSSValue"* %185 to i64
  %187 = bitcast %"class.blink::Member.1074"* %184 to i64*
  store atomic i64 %186, i64* %187 monotonic, align 8
  %188 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %185, i64 0, i32 0
  %192 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %191) #15
  br label %193

193:                                              ; preds = %183, %190
  %194 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %230, label %196

196:                                              ; preds = %193
  %197 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %198 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %197, i64 0, i32 1
  %199 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %198) #15
  %200 = icmp eq i8* %199, null
  br i1 %200, label %201, label %203, !prof !2

201:                                              ; preds = %196
  %202 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %198, i8* %202) #15
  br label %203

203:                                              ; preds = %201, %196
  %204 = phi i8* [ %202, %201 ], [ %199, %196 ]
  %205 = bitcast i8* %204 to %"class.blink::ThreadState"**
  %206 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %206, i64 0, i32 9
  %208 = load i8, i8* %207, align 1, !range !3
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %230, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %206, i64 0, i32 13
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 1
  store i64 %213, i64* %211, align 8
  %214 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %206, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %215 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %214, align 8
  %216 = load atomic i64, i64* %187 monotonic, align 8
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %227, label %218

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %215, i64 0, i32 0, i32 0
  %220 = inttoptr i64 %216 to %"class.blink::CSSValue"*
  %221 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %220, i64 0, i32 0
  %222 = bitcast %"class.blink::MarkingVisitor"* %215 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %223 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %223, i64 5
  %225 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %224, align 8
  call void %225(%"class.blink::Visitor"* %219, i8* %221, i8* %221, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  %226 = load i64, i64* %211, align 8
  br label %227

227:                                              ; preds = %218, %210
  %228 = phi i64 [ %213, %210 ], [ %226, %218 ]
  %229 = add i64 %228, -1
  store i64 %229, i64* %211, align 8
  br label %230

230:                                              ; preds = %193, %203, %227
  %231 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %231, align 4
  %234 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 3
  %235 = load i32, i32* %234, align 8
  %236 = add i32 %235, %233
  %237 = shl i32 %236, 1
  %238 = load i32, i32* %14, align 8
  %239 = icmp ult i32 %237, %238
  br i1 %239, label %242, label %240

240:                                              ; preds = %230
  %241 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1871"* %0, %"struct.WTF::KeyValuePair.1873"* %139)
  br label %242

242:                                              ; preds = %60, %230, %240
  %243 = phi i8 [ 1, %230 ], [ 1, %240 ], [ 0, %60 ]
  %244 = phi %"struct.WTF::KeyValuePair.1873"* [ %139, %230 ], [ %241, %240 ], [ %41, %60 ]
  %245 = insertvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } undef, %"struct.WTF::KeyValuePair.1873"* %244, 0
  %246 = insertvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %245, i8 %243, 1
  ret { %"struct.WTF::KeyValuePair.1873"*, i8 } %246
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1871"*, %"struct.WTF::KeyValuePair.1873"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.WTF::KeyValuePair.1873", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul i32 %13, 6
  %15 = shl i32 %9, 1
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %45, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %15, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #15
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %24, i8* %25) #15
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %6) #15
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  br label %32

32:                                               ; preds = %29, %23, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %33 = load i32, i32* %8, align 8
  %34 = icmp ult i32 %33, %15
  br i1 %34, label %35, label %40

35:                                               ; preds = %2, %32
  %36 = phi i32 [ %15, %32 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #15
  store i8 -86, i8* %5, align 1
  %37 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.1871"* %0, i32 %36, %"struct.WTF::KeyValuePair.1873"* %1, i8* nonnull dereferenceable(1) %5) #15
  %38 = load i8, i8* %5, align 1, !range !3
  %39 = icmp eq i8 %38, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  br i1 %39, label %45, label %86

40:                                               ; preds = %32
  %41 = zext i32 %15 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #15
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.1873"*
  %44 = icmp eq i32 %15, 0
  br i1 %44, label %82, label %50

45:                                               ; preds = %35, %11
  %46 = phi i32 [ %9, %11 ], [ %36, %35 ]
  %47 = zext i32 %46 to i64
  %48 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %47) #15
  %49 = bitcast %"class.blink::HeapHashTableBacking"* %48 to %"struct.WTF::KeyValuePair.1873"*
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i32 [ %15, %40 ], [ %46, %45 ]
  %52 = phi %"struct.WTF::KeyValuePair.1873"* [ %43, %40 ], [ %49, %45 ]
  %53 = phi i64 [ %41, %40 ], [ %47, %45 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.1873"* %3 to i8*
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %3, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %3, i64 0, i32 0, i32 1
  %57 = bitcast %"class.WTF::AtomicString"* %56 to i8*
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %79, %50
  %60 = phi i64 [ 0, %50 ], [ %80, %79 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %52, i64 %60
  %62 = bitcast %"struct.WTF::KeyValuePair.1873"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #15
  store i32 -1, i32* %55, align 8, !alias.scope !44
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #15, !alias.scope !44
  %63 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8* %62, %"struct.WTF::KeyValuePair.1873"* nonnull dereferenceable(24) %3) #15
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #15
  br label %79

79:                                               ; preds = %78, %75, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #15
  %80 = add nuw nsw i64 %60, 1
  %81 = icmp eq i64 %80, %53
  br i1 %81, label %82, label %59

82:                                               ; preds = %79, %40
  %83 = phi i32 [ 0, %40 ], [ %51, %79 ]
  %84 = phi %"struct.WTF::KeyValuePair.1873"* [ %43, %40 ], [ %52, %79 ]
  %85 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable.1871"* %0, %"struct.WTF::KeyValuePair.1873"* %84, i32 %83, %"struct.WTF::KeyValuePair.1873"* %1) #15
  br label %86

86:                                               ; preds = %35, %82
  %87 = phi %"struct.WTF::KeyValuePair.1873"* [ %85, %82 ], [ %37, %35 ]
  ret %"struct.WTF::KeyValuePair.1873"* %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.1871"*, i32, %"struct.WTF::KeyValuePair.1873"*, i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"struct.WTF::KeyValuePair.1873", align 8
  %6 = alloca %"struct.WTF::KeyValuePair.1873", align 8
  %7 = alloca %"struct.WTF::KeyValuePair.1873", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #15
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %4
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #15
  br label %15

15:                                               ; preds = %13, %4
  %16 = phi i8* [ %14, %13 ], [ %11, %4 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 6
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 16
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %30, label %26

26:                                               ; preds = %15, %22
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 13
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22, %26
  %31 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %26, %30
  %34 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %34, align 8
  %36 = icmp eq %"struct.WTF::KeyValuePair.1873"* %35, null
  br i1 %36, label %209, label %37

37:                                               ; preds = %33
  %38 = zext i32 %1 to i64
  %39 = mul nuw nsw i64 %38, 24
  %40 = bitcast %"struct.WTF::KeyValuePair.1873"* %35 to i8*
  %41 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %40, i64 %39) #15
  br i1 %41, label %42, label %209

42:                                               ; preds = %37
  store i8 1, i8* %3, align 1
  %43 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %34, align 8
  %46 = zext i32 %44 to i64
  %47 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #15
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair.1873"*
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %86, label %50

50:                                               ; preds = %42
  %51 = bitcast %"struct.WTF::KeyValuePair.1873"* %7 to i8*
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %7, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %7, i64 0, i32 0, i32 1
  %54 = bitcast %"class.WTF::AtomicString"* %53 to i8*
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %76, %50
  %57 = phi i64 [ 0, %50 ], [ %77, %76 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %48, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair.1873"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  store i32 -1, i32* %52, align 8, !alias.scope !47
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #15, !alias.scope !47
  %60 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8* %59, %"struct.WTF::KeyValuePair.1873"* nonnull dereferenceable(24) %7) #15
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #15
  br label %76

76:                                               ; preds = %75, %72, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  %77 = add nuw nsw i64 %57, 1
  %78 = icmp eq i64 %77, %46
  br i1 %78, label %79, label %56

79:                                               ; preds = %76
  br i1 %49, label %86, label %80

80:                                               ; preds = %79
  %81 = bitcast %"struct.WTF::KeyValuePair.1873"* %6 to i8*
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %6, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %6, i64 0, i32 0, i32 1
  %84 = bitcast %"class.WTF::AtomicString"* %83 to i8*
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %102

86:                                               ; preds = %181, %42, %79
  %87 = phi %"struct.WTF::KeyValuePair.1873"* [ null, %79 ], [ null, %42 ], [ %109, %181 ]
  %88 = bitcast %"class.WTF::HashTable.1871"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %47, %"class.blink::HeapHashTableBacking"** %88, align 8
  %89 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %47, i64 0, i32 0
  %93 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %92) #15
  br label %94

94:                                               ; preds = %86, %91
  %95 = icmp eq i32 %1, 0
  br i1 %95, label %184, label %96

96:                                               ; preds = %94
  %97 = bitcast %"struct.WTF::KeyValuePair.1873"* %5 to i8*
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %5, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %5, i64 0, i32 0, i32 1
  %100 = bitcast %"class.WTF::AtomicString"* %99 to i8*
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %186

102:                                              ; preds = %181, %80
  %103 = phi i64 [ 0, %80 ], [ %182, %181 ]
  %104 = phi %"struct.WTF::KeyValuePair.1873"* [ null, %80 ], [ %109, %181 ]
  %105 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %34, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %105, i64 %103
  %107 = icmp eq %"struct.WTF::KeyValuePair.1873"* %106, %2
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %48, i64 %103
  %109 = select i1 %107, %"struct.WTF::KeyValuePair.1873"* %108, %"struct.WTF::KeyValuePair.1873"* %104
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %106, i64 0, i32 0
  %111 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %110) #15
  br i1 %111, label %112, label %131

112:                                              ; preds = %102
  %113 = bitcast %"struct.WTF::KeyValuePair.1873"* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #15
  store i32 -1, i32* %82, align 8, !alias.scope !50
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #15, !alias.scope !50
  %114 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8* %113, %"struct.WTF::KeyValuePair.1873"* nonnull dereferenceable(24) %6) #15
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #15
  br label %130

130:                                              ; preds = %112, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #15
  br label %181

131:                                              ; preds = %102
  %132 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %34, align 8
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %48, i64 %103, i32 0, i32 1, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #15
  br label %149

149:                                              ; preds = %131, %145, %148
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %108, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %132, i64 %103, i32 0, i32 0
  %152 = load i32, i32* %151, align 8
  store i32 %152, i32* %150, align 8
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %48, i64 %103, i32 0, i32 1
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %132, i64 %103, i32 0, i32 1
  %155 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = bitcast %"class.WTF::AtomicString"* %154 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.WTF::AtomicString"* %153 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %155, align 8
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %48, i64 %103, i32 1
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %132, i64 %103, i32 1
  %161 = bitcast %"class.blink::Member.1074"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::Member.1074"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %34, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %164, i64 %103, i32 0, i32 1, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %149
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #15
  br label %181

181:                                              ; preds = %180, %177, %149, %130
  %182 = add nuw nsw i64 %103, 1
  %183 = icmp eq i64 %182, %46
  br i1 %183, label %86, label %102

184:                                              ; preds = %206, %94
  %185 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable.1871"* %0, %"struct.WTF::KeyValuePair.1873"* %45, i32 %1, %"struct.WTF::KeyValuePair.1873"* %87)
  br label %209

186:                                              ; preds = %206, %96
  %187 = phi i64 [ 0, %96 ], [ %207, %206 ]
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %45, i64 %187
  %189 = bitcast %"struct.WTF::KeyValuePair.1873"* %188 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #15
  store i32 -1, i32* %98, align 8, !alias.scope !53
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #15, !alias.scope !53
  %190 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8* %189, %"struct.WTF::KeyValuePair.1873"* nonnull dereferenceable(24) %5) #15
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %186
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #15
  br label %206

206:                                              ; preds = %186, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #15
  %207 = add nuw nsw i64 %187, 1
  %208 = icmp eq i64 %207, %38
  br i1 %208, label %184, label %186

209:                                              ; preds = %37, %33, %184
  %210 = phi %"struct.WTF::KeyValuePair.1873"* [ %185, %184 ], [ null, %33 ], [ null, %37 ]
  ret %"struct.WTF::KeyValuePair.1873"* %210
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable.1871"*, %"struct.WTF::KeyValuePair.1873"*, i32, %"struct.WTF::KeyValuePair.1873"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1871", align 8
  %6 = bitcast %"class.WTF::HashTable.1871"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1871"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1873"* %1, %"struct.WTF::KeyValuePair.1873"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.1873"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.1873"* %1 to i8*
  br label %24

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 0
  br label %90

20:                                               ; preds = %138
  %21 = bitcast %"class.WTF::HashTable.1871"* %5 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = ptrtoint i8* %22 to i64
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi i64 [ %16, %15 ], [ %23, %20 ]
  %26 = phi i32 [ 0, %15 ], [ %140, %20 ]
  %27 = phi i8* [ %17, %15 ], [ %22, %20 ]
  %28 = phi %"struct.WTF::KeyValuePair.1873"* [ null, %15 ], [ %139, %20 ]
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.WTF::HashTable.1871"* %5 to i64*
  br label %37

33:                                               ; preds = %24
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %27) #15
  %34 = load i32, i32* %12, align 8
  %35 = bitcast %"class.WTF::HashTable.1871"* %5 to i64*
  %36 = load i64, i64* %35, align 8
  br label %37

37:                                               ; preds = %31, %33
  %38 = phi i64* [ %32, %31 ], [ %35, %33 ]
  %39 = phi i64 [ %25, %31 ], [ %36, %33 ]
  %40 = phi i32 [ %26, %31 ], [ %34, %33 ]
  %41 = bitcast %"class.WTF::HashTable.1871"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  store atomic i64 %39, i64* %41 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %37
  %46 = inttoptr i64 %39 to i8*
  %47 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #15
  br label %48

48:                                               ; preds = %37, %45
  store i32 %2, i32* %12, align 8
  store i64 %42, i64* %38, align 8
  store i32 %40, i32* %8, align 8
  %49 = inttoptr i64 %42 to %"struct.WTF::KeyValuePair.1873"*
  %50 = icmp eq i64 %42, 0
  br i1 %50, label %86, label %51

51:                                               ; preds = %48
  %52 = icmp eq i32 %40, 0
  br i1 %52, label %84, label %53

53:                                               ; preds = %51
  %54 = zext i32 %40 to i64
  br label %55

55:                                               ; preds = %81, %53
  %56 = phi i64 [ 0, %53 ], [ %82, %81 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %49, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %57, i64 0, i32 0
  %59 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %58) #15
  br i1 %59, label %81, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %49, i64 %56, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #15
  br label %77

77:                                               ; preds = %76, %73, %60
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %57, i64 0, i32 0, i32 0
  store i32 -2, i32* %78, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %49, i64 %56, i32 1
  %80 = bitcast %"class.blink::Member.1074"* %79 to i64*
  store atomic i64 0, i64* %80 monotonic, align 8
  br label %81

81:                                               ; preds = %77, %55
  %82 = add nuw nsw i64 %56, 1
  %83 = icmp eq i64 %82, %54
  br i1 %83, label %84, label %55

84:                                               ; preds = %81, %51
  %85 = inttoptr i64 %42 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %85) #15
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %86

86:                                               ; preds = %48, %84
  %87 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, -2147483648
  store i32 %89, i32* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.1873"* %28

90:                                               ; preds = %18, %138
  %91 = phi %"struct.WTF::KeyValuePair.1873"* [ null, %18 ], [ %139, %138 ]
  %92 = phi i32 [ 0, %18 ], [ %140, %138 ]
  %93 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %19, align 8
  %94 = zext i32 %92 to i64
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %93, i64 %94, i32 0
  %96 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %95) #15
  br i1 %96, label %138, label %97

97:                                               ; preds = %90
  %98 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %19, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %98, i64 %94
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %99, i64 0, i32 0
  %101 = call { %"struct.WTF::KeyValuePair.1873"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable.1871"* nonnull %5, %"class.blink::CSSPropertyName"* dereferenceable(16) %100) #15
  %102 = extractvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %101, 0
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %102, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #15
  br label %119

119:                                              ; preds = %97, %115, %118
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %102, i64 0, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %99, i64 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %102, i64 0, i32 0, i32 1
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %98, i64 %94, i32 0, i32 1
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::AtomicString"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.WTF::AtomicString"* %123 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %102, i64 0, i32 1
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %98, i64 %94, i32 1
  %131 = bitcast %"class.blink::Member.1074"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.blink::Member.1074"* %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %19, align 8
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %134, i64 %94
  %136 = icmp eq %"struct.WTF::KeyValuePair.1873"* %135, %3
  %137 = select i1 %136, %"struct.WTF::KeyValuePair.1873"* %102, %"struct.WTF::KeyValuePair.1873"* %91
  br label %138

138:                                              ; preds = %90, %119
  %139 = phi %"struct.WTF::KeyValuePair.1873"* [ %91, %90 ], [ %137, %119 ]
  %140 = add i32 %92, 1
  %141 = load i32, i32* %12, align 8
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %20, label %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::CSSPropertyName", align 8
  %3 = bitcast %"class.blink::CSSPropertyName"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 0
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %0, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %2) #15
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %22

22:                                               ; preds = %1, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #15
  br i1 %6, label %60, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %48

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %36
  call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %48

46:                                               ; preds = %23
  %47 = icmp eq i32 %25, -2
  br label %60

48:                                               ; preds = %44, %29
  %49 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %50 = icmp eq i32 %25, -2
  %51 = load atomic i32, i32* %30 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = add i32 %49, -1
  store i32 %55, i32* %34, align 4
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i32 [ %55, %54 ], [ %49, %48 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #15
  br label %60

60:                                               ; preds = %59, %56, %46, %22
  %61 = phi i1 [ true, %22 ], [ %47, %46 ], [ %50, %56 ], [ %50, %59 ]
  ret i1 %61
}

declare zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8*, %"struct.WTF::KeyValuePair.1873"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.1873"*
  %4 = bitcast i8* %0 to i32*
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %1, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds i8, i8* %0, i64 16
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %1, i64 0, i32 1
  %15 = bitcast %"class.blink::Member.1074"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8* %13 to i64*
  store i64 %16, i64* %17, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %54, label %20

20:                                               ; preds = %2
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #15
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #15
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 9
  %32 = load i8, i8* %31, align 1, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %54, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 13
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %38, align 8
  %40 = load atomic i64, i64* %17 monotonic, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %39, i64 0, i32 0, i32 0
  %44 = inttoptr i64 %40 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = bitcast %"class.blink::MarkingVisitor"* %39 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %43, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  %50 = load i64, i64* %35, align 8
  br label %51

51:                                               ; preds = %42, %34
  %52 = phi i64 [ %37, %34 ], [ %50, %42 ]
  %53 = add i64 %52, -1
  store i64 %53, i64* %35, align 8
  br label %54

54:                                               ; preds = %2, %27, %51
  ret %"struct.WTF::KeyValuePair.1873"* %3
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.9, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #15
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %34, i8* %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #15
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #15
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #15
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS4_NS3_6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #15
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS3_12KeyValuePairIS5_NS_6MemberIKNS_8CSSValueEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.1873"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %50

24:                                               ; preds = %18, %46
  %25 = phi i64 [ %48, %46 ], [ 0, %18 ]
  %26 = phi i32 [ %47, %46 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %22, i64 %25, i32 0
  %28 = tail call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %27) #15
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %22, i64 %25, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %46

46:                                               ; preds = %45, %42, %29, %24
  %47 = add i32 %26, 1
  %48 = zext i32 %47 to i64
  %49 = icmp ugt i64 %21, %48
  br i1 %49, label %24, label %50

50:                                               ; preds = %46, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_15CSSPropertyNameENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS4_NS3_6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::internal::ConcurrentBucket", align 8
  %4 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.1873"*
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load i16, i16* %6, align 2
  %8 = lshr i16 %7, 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %18, !prof !2

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i64 -8
  %12 = ptrtoint i8* %11 to i64
  %13 = and i64 %12, -131072
  %14 = inttoptr i64 %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 4144
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 16
  br label %21

18:                                               ; preds = %2
  %19 = zext i16 %8 to i64
  %20 = shl nuw nsw i64 %19, 3
  br label %21

21:                                               ; preds = %10, %18
  %22 = phi i64 [ %17, %10 ], [ %20, %18 ]
  %23 = add i64 %22, -8
  %24 = udiv i64 %23, 24
  %25 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %26 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, i64 3
  %28 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::Visitor"* %0) #15
  %30 = icmp ugt i64 %23, 23
  br i1 %30, label %31, label %41

31:                                               ; preds = %21
  %32 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %3, i64 0, i32 0, i64 0
  %34 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %3, i64 0, i32 0, i64 8
  %35 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %3, i64 0, i32 1
  %36 = bitcast %"class.WTF::internal::ConcurrentBucket"* %3 to i64*
  %37 = bitcast i8* %34 to i64*
  %38 = bitcast %"class.WTF::internal::ConcurrentBucket"* %3 to %"class.blink::CSSPropertyName"*
  %39 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %3, i64 0, i32 0, i64 16
  %40 = bitcast i8* %39 to i64**
  br label %42

41:                                               ; preds = %78, %21
  ret void

42:                                               ; preds = %31, %78
  %43 = phi i64 [ 0, %31 ], [ %79, %78 ]
  br i1 %29, label %44, label %64

44:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #15
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 %43
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 %43, i32 1
  store %"class.blink::Member.1074"* %46, %"class.blink::Member.1074"** %35, align 8
  %47 = bitcast %"struct.WTF::KeyValuePair.1873"* %45 to i64*
  %48 = load atomic i64, i64* %47 monotonic, align 8
  store i64 %48, i64* %36, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 %43, i32 0, i32 1
  %50 = bitcast %"class.WTF::AtomicString"* %49 to i64*
  %51 = load atomic i64, i64* %50 monotonic, align 8
  store i64 %51, i64* %37, align 8
  %52 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %38)
  br i1 %52, label %63, label %53

53:                                               ; preds = %44
  %54 = load i64*, i64** %40, align 8
  %55 = load atomic i64, i64* %54 monotonic, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %53
  %58 = inttoptr i64 %55 to %"class.blink::CSSValue"*
  %59 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %58, i64 0, i32 0
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %61 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, i64 5
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, align 8
  call void %62(%"class.blink::Visitor"* %0, i8* %59, i8* %59, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %63

63:                                               ; preds = %57, %53, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #15
  br label %78

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 %43, i32 0
  %66 = call zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %65) #15
  br i1 %66, label %78, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 %43, i32 1
  %69 = bitcast %"class.blink::Member.1074"* %68 to i64*
  %70 = load atomic i64, i64* %69 monotonic, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %78, label %72

72:                                               ; preds = %67
  %73 = inttoptr i64 %70 to %"class.blink::CSSValue"*
  %74 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %73, i64 0, i32 0
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %76 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %75, i64 5
  %77 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %76, align 8
  call void %77(%"class.blink::Visitor"* %0, i8* %74, i8* %74, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %78

78:                                               ; preds = %72, %67, %63, %64
  %79 = add nuw nsw i64 %43, 1
  %80 = icmp ult i64 %79, %24
  br i1 %80, label %42, label %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1873"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable.1871"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #15
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = xor i32 %10, -1
  %17 = lshr i32 %10, 23
  %18 = add i32 %17, %16
  %19 = shl i32 %18, 12
  %20 = xor i32 %19, %18
  %21 = lshr i32 %20, 7
  %22 = xor i32 %21, %20
  %23 = shl i32 %22, 2
  %24 = xor i32 %23, %22
  %25 = lshr i32 %24, 20
  %26 = xor i32 %25, %24
  %27 = or i32 %26, 1
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %98, %2
  %30 = phi i64 [ 0, %2 ], [ %99, %98 ]
  %31 = phi i64 [ 0, %2 ], [ %101, %98 ]
  %32 = phi i64 [ %12, %2 ], [ %103, %98 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %5, i64 %32
  %34 = ptrtoint %"struct.WTF::KeyValuePair.1873"* %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  store i32 -1, i32* %14, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %36 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %35, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3) #15
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %29, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br i1 %36, label %53, label %57

53:                                               ; preds = %52
  %54 = ptrtoint %"struct.WTF::KeyValuePair.1873"* %33 to i64
  %55 = icmp eq i64 %30, 0
  %56 = select i1 %55, i64 %54, i64 %30
  br label %106

57:                                               ; preds = %52
  %58 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %35, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #15
  br i1 %58, label %104, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %33, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %5, i64 %32, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %84

72:                                               ; preds = %65
  %73 = zext i32 %71 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #15
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %72
  call void @llvm.trap() #15
  unreachable

80:                                               ; preds = %72
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %70, align 4
  br label %84

82:                                               ; preds = %59
  %83 = icmp eq i32 %61, -2
  br i1 %83, label %97, label %98

84:                                               ; preds = %80, %65
  %85 = phi i32 [ %81, %80 ], [ %71, %65 ]
  %86 = icmp eq i32 %61, -2
  %87 = load atomic i32, i32* %66 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = add i32 %85, -1
  store i32 %91, i32* %70, align 4
  br label %92

92:                                               ; preds = %90, %84
  %93 = phi i32 [ %91, %90 ], [ %85, %84 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #15
  br i1 %86, label %97, label %98

96:                                               ; preds = %92
  br i1 %86, label %97, label %98

97:                                               ; preds = %95, %82, %96
  br label %98

98:                                               ; preds = %95, %82, %96, %97
  %99 = phi i64 [ %30, %95 ], [ %30, %82 ], [ %30, %96 ], [ %34, %97 ]
  %100 = icmp eq i64 %31, 0
  %101 = select i1 %100, i64 %28, i64 %31
  %102 = add i64 %101, %32
  %103 = and i64 %102, %9
  br label %29

104:                                              ; preds = %57
  %105 = ptrtoint %"struct.WTF::KeyValuePair.1873"* %33 to i64
  br label %106

106:                                              ; preds = %104, %53
  %107 = phi i64 [ %56, %53 ], [ %105, %104 ]
  %108 = phi i8 [ 0, %53 ], [ 1, %104 ]
  %109 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair.1873"*
  %110 = insertvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } undef, %"struct.WTF::KeyValuePair.1873"* %109, 0
  %111 = insertvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %110, i8 %108, 1
  ret { %"struct.WTF::KeyValuePair.1873"*, i8 } %111
}

declare i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #3

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF15HashTableHelperINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_15CascadePriorityEEENS_24KeyValuePairKeyExtractorENS_10HashTraitsIS3_EEE28IsEmptyOrDeletedBucketForKeyERKS3_(%"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::CSSPropertyName", align 8
  %3 = bitcast %"class.blink::CSSPropertyName"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 0
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %0, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %2) #15
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %22

22:                                               ; preds = %1, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #15
  br i1 %6, label %60, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %48

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %36
  call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %48

46:                                               ; preds = %23
  %47 = icmp eq i32 %25, -2
  br label %60

48:                                               ; preds = %44, %29
  %49 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %50 = icmp eq i32 %25, -2
  %51 = load atomic i32, i32* %30 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = add i32 %49, -1
  store i32 %55, i32* %34, align 4
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i32 [ %55, %54 ], [ %49, %48 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #15
  br label %60

60:                                               ; preds = %59, %56, %46, %22
  %61 = phi i1 [ true, %22 ], [ %47, %46 ], [ %50, %56 ], [ %50, %59 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1873"*, i8 } @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable.1871"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSValue"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.1873", align 8
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1873"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1871"* %0, %"struct.WTF::KeyValuePair.1873"* null)
  %11 = load %"struct.WTF::KeyValuePair.1873"*, %"struct.WTF::KeyValuePair.1873"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.1873"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = tail call i32 @_ZNK5blink15CSSPropertyName7GetHashEv(%"class.blink::CSSPropertyName"* %1) #15
  %19 = and i32 %18, %16
  %20 = zext i32 %19 to i64
  %21 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = xor i32 %18, -1
  %25 = lshr i32 %18, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %99, %12
  %38 = phi i64 [ 0, %12 ], [ %103, %99 ]
  %39 = phi i64 [ %20, %12 ], [ %105, %99 ]
  %40 = phi %"struct.WTF::KeyValuePair.1873"* [ null, %12 ], [ %101, %99 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %13, i64 %39
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %41, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  store i32 -1, i32* %22, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %43 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %42, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5) #15
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #15
  br label %59

59:                                               ; preds = %37, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  br i1 %43, label %106, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink15CSSPropertyNameeqERKS0_(%"class.blink::CSSPropertyName"* %42, %"class.blink::CSSPropertyName"* dereferenceable(16) %1) #15
  br i1 %61, label %242, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %41, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %13, i64 %39, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %87

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #15
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %87

85:                                               ; preds = %62
  %86 = icmp eq i32 %64, -2
  br label %99

87:                                               ; preds = %83, %68
  %88 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %89 = icmp eq i32 %64, -2
  %90 = load atomic i32, i32* %69 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %87
  %94 = add i32 %88, -1
  store i32 %94, i32* %73, align 4
  br label %95

95:                                               ; preds = %93, %87
  %96 = phi i32 [ %94, %93 ], [ %88, %87 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #15
  br label %99

99:                                               ; preds = %85, %95, %98
  %100 = phi i1 [ %86, %85 ], [ %89, %95 ], [ %89, %98 ]
  %101 = select i1 %100, %"struct.WTF::KeyValuePair.1873"* %41, %"struct.WTF::KeyValuePair.1873"* %40
  %102 = icmp eq i64 %38, 0
  %103 = select i1 %102, i64 %36, i64 %38
  %104 = add i64 %103, %39
  %105 = and i64 %104, %17
  br label %37

106:                                              ; preds = %59
  %107 = icmp eq %"struct.WTF::KeyValuePair.1873"* %40, null
  br i1 %107, label %138, label %108

108:                                              ; preds = %106
  %109 = bitcast %"struct.WTF::KeyValuePair.1873"* %40 to i8*
  %110 = bitcast %"struct.WTF::KeyValuePair.1873"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #15
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 0, i32 0, i32 0
  store i32 -1, i32* %111, align 8, !alias.scope !56
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 0, i32 0, i32 1
  %113 = bitcast %"class.WTF::AtomicString"* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #15, !alias.scope !56
  %114 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink15CSSPropertyNameENS2_6MemberIKNS2_8CSSValueEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IS7_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS8_EEEPS8_PvDpOT_(i8* nonnull %109, %"struct.WTF::KeyValuePair.1873"* nonnull dereferenceable(24) %4) #15
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %131

131:                                              ; preds = %108, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #15
  %132 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, 2147483647
  %135 = and i32 %134, 2147483647
  %136 = and i32 %133, -2147483648
  %137 = or i32 %135, %136
  store i32 %137, i32* %132, align 8
  br label %138

138:                                              ; preds = %106, %131
  %139 = phi %"struct.WTF::KeyValuePair.1873"* [ %40, %131 ], [ %41, %106 ]
  %140 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %139, i64 0, i32 0, i32 0
  store i32 %141, i32* %142, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %139, i64 0, i32 0, i32 1
  %144 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %164, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i33
  %156 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %155, i33 1) #15
  %157 = extractvalue { i33, i1 } %156, 1
  %158 = extractvalue { i33, i1 } %156, 0
  %159 = icmp slt i33 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %161, label %162, !prof !2

161:                                              ; preds = %152
  call void @llvm.trap() #15
  unreachable

162:                                              ; preds = %152
  %163 = trunc i33 %158 to i32
  store i32 %163, i32* %153, align 4
  br label %164

164:                                              ; preds = %162, %147, %138
  %165 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  %166 = bitcast %"class.WTF::AtomicString"* %143 to i64*
  %167 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %143, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  store i64 %165, i64* %166, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #15
  br label %183

183:                                              ; preds = %182, %179, %164
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair.1873", %"struct.WTF::KeyValuePair.1873"* %139, i64 0, i32 1
  %185 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %186 = ptrtoint %"class.blink::CSSValue"* %185 to i64
  %187 = bitcast %"class.blink::Member.1074"* %184 to i64*
  store atomic i64 %186, i64* %187 monotonic, align 8
  %188 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %185, i64 0, i32 0
  %192 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %191) #15
  br label %193

193:                                              ; preds = %183, %190
  %194 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %230, label %196

196:                                              ; preds = %193
  %197 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %198 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %197, i64 0, i32 1
  %199 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %198) #15
  %200 = icmp eq i8* %199, null
  br i1 %200, label %201, label %203, !prof !2

201:                                              ; preds = %196
  %202 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %198, i8* %202) #15
  br label %203

203:                                              ; preds = %201, %196
  %204 = phi i8* [ %202, %201 ], [ %199, %196 ]
  %205 = bitcast i8* %204 to %"class.blink::ThreadState"**
  %206 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %206, i64 0, i32 9
  %208 = load i8, i8* %207, align 1, !range !3
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %230, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %206, i64 0, i32 13
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 1
  store i64 %213, i64* %211, align 8
  %214 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %206, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %215 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %214, align 8
  %216 = load atomic i64, i64* %187 monotonic, align 8
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %227, label %218

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %215, i64 0, i32 0, i32 0
  %220 = inttoptr i64 %216 to %"class.blink::CSSValue"*
  %221 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %220, i64 0, i32 0
  %222 = bitcast %"class.blink::MarkingVisitor"* %215 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %223 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %223, i64 5
  %225 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %224, align 8
  call void %225(%"class.blink::Visitor"* %219, i8* %221, i8* %221, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  %226 = load i64, i64* %211, align 8
  br label %227

227:                                              ; preds = %218, %210
  %228 = phi i64 [ %213, %210 ], [ %226, %218 ]
  %229 = add i64 %228, -1
  store i64 %229, i64* %211, align 8
  br label %230

230:                                              ; preds = %193, %203, %227
  %231 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %231, align 4
  %234 = getelementptr inbounds %"class.WTF::HashTable.1871", %"class.WTF::HashTable.1871"* %0, i64 0, i32 3
  %235 = load i32, i32* %234, align 8
  %236 = add i32 %235, %233
  %237 = shl i32 %236, 1
  %238 = load i32, i32* %14, align 8
  %239 = icmp ult i32 %237, %238
  br i1 %239, label %242, label %240

240:                                              ; preds = %230
  %241 = call %"struct.WTF::KeyValuePair.1873"* @_ZN3WTF9HashTableIN5blink15CSSPropertyNameENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1871"* %0, %"struct.WTF::KeyValuePair.1873"* %139)
  br label %242

242:                                              ; preds = %60, %230, %240
  %243 = phi i8 [ 1, %230 ], [ 1, %240 ], [ 0, %60 ]
  %244 = phi %"struct.WTF::KeyValuePair.1873"* [ %139, %230 ], [ %241, %240 ], [ %41, %60 ]
  %245 = insertvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } undef, %"struct.WTF::KeyValuePair.1873"* %244, 0
  %246 = insertvalue { %"struct.WTF::KeyValuePair.1873"*, i8 } %245, i8 %243, 1
  ret { %"struct.WTF::KeyValuePair.1873"*, i8 } %246
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::CascadeInterpolations::Entry"* @_ZNK3WTF6VectorIN5blink21CascadeInterpolations5EntryELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1758"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.1758", %"class.WTF::Vector.1758"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CascadeInterpolations::Entry"*, %"struct.blink::CascadeInterpolations::Entry"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CascadeInterpolations::Entry", %"struct.blink::CascadeInterpolations::Entry"* %24, i64 %25
  ret %"struct.blink::CascadeInterpolations::Entry"* %26
}

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1748"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1745"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1745", %"class.WTF::Vector.1745"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.1745", %"class.WTF::Vector.1745"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1748"*, %"class.blink::Member.1748"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1748", %"class.blink::Member.1748"* %24, i64 %25
  ret %"class.blink::Member.1748"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1739"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISE_SJ_SK_EES2_EEPKSA_RKT0_(%"class.WTF::HashTable.1737"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1739"*, %"struct.WTF::KeyValuePair.1739"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1739"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.1737", %"class.WTF::HashTable.1737"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.1603* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  store i32 0, i32* %20, align 8, !alias.scope !59
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #15, !alias.scope !59
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #15
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1739", %"struct.WTF::KeyValuePair.1739"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair.1739"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair.1739"* %67
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1825"*, %"class.blink::CSSParserToken"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = icmp ugt %"class.blink::CSSParserToken"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %15, i64 %18
  %20 = icmp ugt %"class.blink::CSSParserToken"* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !4

30:                                               ; preds = %21
  %31 = icmp eq %"class.blink::CSSParserToken"* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %32) #15
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #15
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = udiv i64 %33, 24
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = udiv i64 %33, 24
  %42 = ptrtoint i8* %34 to i64
  %43 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne %"class.blink::CSSParserToken"* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast %"class.blink::CSSParserToken"* %43 to i8*
  br i1 %46, label %48, label %54, !prof !4

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = mul nuw nsw i64 %50, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %47, i64 %51, i1 false) #15
  %52 = bitcast %"class.WTF::Vector.1825"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #15
  %56 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %60 = ptrtoint %"class.blink::CSSParserToken"* %15 to i64
  %61 = sub i64 %59, %60
  %62 = sdiv exact i64 %61, 24
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !4

71:                                               ; preds = %58
  %72 = icmp eq %"class.blink::CSSParserToken"* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #15
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne %"class.blink::CSSParserToken"* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast %"class.blink::CSSParserToken"* %80 to i8*
  br i1 %83, label %85, label %91, !prof !4

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = mul nuw nsw i64 %87, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* nonnull align 8 %84, i64 %88, i1 false) #15
  %89 = bitcast %"class.WTF::Vector.1825"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #15
  %93 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = udiv i64 %74, 24
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to %"class.blink::CSSParserToken"*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi %"class.blink::CSSParserToken"* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi %"class.blink::CSSParserToken"* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #15
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %110, i8* %111) #15
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #15
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #15
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #15
  %119 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %119, align 8
  %121 = load i32, i32* %7, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %120, i64 %122
  %124 = icmp ne %"class.blink::CSSParserToken"* %123, null
  %125 = icmp ne %"class.blink::CSSParserToken"* %102, null
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %132, !prof !4

127:                                              ; preds = %118
  %128 = zext i32 %2 to i64
  %129 = bitcast %"class.blink::CSSParserToken"* %123 to i8*
  %130 = bitcast %"class.blink::CSSParserToken"* %102 to i8*
  %131 = mul nuw nsw i64 %128, 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* nonnull align 8 %130, i64 %131, i1 false) #15
  br label %132

132:                                              ; preds = %118, %127
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.819"*, %"class.WTF::String"*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %16 = icmp ugt %"class.WTF::String"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 %18
  %20 = icmp ugt %"class.WTF::String"* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !4

30:                                               ; preds = %21
  %31 = icmp eq %"class.WTF::String"* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %32) #15
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector.819"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = lshr i64 %33, 3
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = lshr i64 %33, 3
  %42 = ptrtoint i8* %34 to i64
  %43 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne %"class.WTF::String"* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast %"class.WTF::String"* %43 to i8*
  br i1 %46, label %48, label %54, !prof !4

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %47, i64 %51, i1 false) #15
  %52 = bitcast %"class.WTF::Vector.819"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #15
  %56 = bitcast %"class.WTF::Vector.819"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint %"class.WTF::String"* %1 to i64
  %60 = ptrtoint %"class.WTF::String"* %15 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !4

71:                                               ; preds = %58
  %72 = icmp eq %"class.WTF::String"* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %73) #15
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector.819"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne %"class.WTF::String"* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast %"class.WTF::String"* %80 to i8*
  br i1 %83, label %85, label %91, !prof !4

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* nonnull align 8 %84, i64 %88, i1 false) #15
  %89 = bitcast %"class.WTF::Vector.819"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #15
  %93 = bitcast %"class.WTF::Vector.819"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = lshr i64 %74, 3
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to %"class.WTF::String"*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi %"class.WTF::String"* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi %"class.WTF::String"* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #15
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %110, i8* %111) #15
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #15
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #15
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #15
  %119 = zext i32 %2 to i64
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 %119
  %121 = icmp eq i32 %2, 0
  br i1 %121, label %156, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.WTF::Vector.819", %"class.WTF::Vector.819"* %0, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::String"*, %"class.WTF::String"** %123, align 8
  %125 = load i32, i32* %7, align 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 %126
  br label %128

128:                                              ; preds = %122, %152
  %129 = phi %"class.WTF::String"* [ %153, %152 ], [ %127, %122 ]
  %130 = phi %"class.WTF::String"* [ %154, %152 ], [ %102, %122 ]
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #15
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !2

149:                                              ; preds = %140
  call void @llvm.trap() #15
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %152

152:                                              ; preds = %150, %135, %128
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 1
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 1
  %155 = icmp eq %"class.WTF::String"* %154, %120
  br i1 %155, label %156, label %128

156:                                              ; preds = %152, %118
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1825"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSParserToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSParserToken"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::CSSParserToken"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::CSSParserToken"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 24
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::CSSParserToken"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::CSSParserToken"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.1825"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::CSSParserToken"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %56 = ptrtoint %"class.blink::CSSParserToken"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 24
  %59 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::CSSParserToken"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::CSSParserToken"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::CSSParserToken"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.1825"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 24
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::CSSParserToken"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::CSSParserToken"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::CSSParserToken"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::CSSParserToken"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %100, i64 %103
  %105 = bitcast %"class.blink::CSSParserToken"* %104 to i8*
  %106 = bitcast %"class.blink::CSSParserToken"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #15
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #15
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %34, i8* %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #15
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #15
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer.1842"*, %"class.WTF::VectorBuffer.1842"* dereferenceable(6160), i64, i64) local_unnamed_addr #1 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = trunc i64 %3 to i32
  %9 = lshr i64 %3, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 1, i64 0
  %14 = bitcast i8* %13 to %"class.blink::CSSPropertyValue"*
  %15 = icmp eq %"class.blink::CSSPropertyValue"* %12, %14
  %16 = ptrtoint %"class.blink::CSSPropertyValue"* %12 to i64
  br i1 %15, label %48, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 1, i64 0
  %21 = bitcast i8* %20 to %"class.blink::CSSPropertyValue"*
  %22 = icmp eq %"class.blink::CSSPropertyValue"* %19, %21
  br i1 %22, label %48, label %23

23:                                               ; preds = %17
  %24 = ptrtoint %"class.blink::CSSPropertyValue"* %19 to i64
  %25 = bitcast %"class.WTF::VectorBuffer.1842"* %1 to i64*
  %26 = bitcast %"class.WTF::VectorBuffer.1842"* %0 to i64*
  store atomic i64 %16, i64* %25 monotonic, align 8
  store atomic i64 %24, i64* %26 monotonic, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 1
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %27, align 4
  store i32 %29, i32* %28, align 4
  %31 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 2
  %33 = load i32, i32* %31, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %31, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.WTF::VectorBuffer.1842"* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #15
  br label %41

41:                                               ; preds = %23, %37
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %275, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.WTF::VectorBuffer.1842"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #15
  br label %275

48:                                               ; preds = %17, %4
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #15
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %48
  %54 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #15
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 14
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  %62 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %11, align 8
  %63 = icmp eq %"class.blink::CSSPropertyValue"* %62, %14
  br i1 %63, label %64, label %69

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 1, i64 0
  %68 = bitcast i8* %67 to %"class.blink::CSSPropertyValue"*
  br label %69

69:                                               ; preds = %55, %64
  %70 = phi i32 [ %7, %64 ], [ 0, %55 ]
  %71 = phi i32 [ %5, %64 ], [ 0, %55 ]
  %72 = phi i32 [ %66, %64 ], [ 0, %55 ]
  %73 = phi %"class.blink::CSSPropertyValue"* [ %14, %64 ], [ null, %55 ]
  %74 = phi %"class.blink::CSSPropertyValue"* [ %68, %64 ], [ null, %55 ]
  %75 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 0
  %76 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 1, i64 0
  %78 = bitcast i8* %77 to %"class.blink::CSSPropertyValue"*
  %79 = icmp eq %"class.blink::CSSPropertyValue"* %76, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %69, %80
  %84 = phi i32 [ %10, %80 ], [ 0, %69 ]
  %85 = phi i32 [ %8, %80 ], [ 0, %69 ]
  %86 = phi i32 [ %82, %80 ], [ 0, %69 ]
  %87 = phi %"class.blink::CSSPropertyValue"* [ %78, %80 ], [ null, %69 ]
  %88 = phi %"class.blink::CSSPropertyValue"* [ %14, %80 ], [ null, %69 ]
  %89 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 1
  %91 = load i32, i32* %89, align 4
  %92 = load i32, i32* %90, align 4
  store i32 %92, i32* %89, align 4
  store i32 %91, i32* %90, align 4
  %93 = icmp eq %"class.blink::CSSPropertyValue"* %73, null
  %94 = icmp ne %"class.blink::CSSPropertyValue"* %87, null
  %95 = or i1 %93, %94
  br i1 %95, label %111, label %96

96:                                               ; preds = %83
  %97 = bitcast %"class.WTF::VectorBuffer.1842"* %1 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.WTF::VectorBuffer.1842"* %0 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = ptrtoint i8* %77 to i64
  store atomic i64 %100, i64* %97 monotonic, align 8
  %101 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 2
  %102 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 2
  %103 = load i32, i32* %101, align 4
  %104 = load i32, i32* %102, align 4
  store i32 %104, i32* %101, align 4
  store i32 %103, i32* %102, align 4
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %133, label %107

107:                                              ; preds = %96
  %108 = bitcast %"class.WTF::VectorBuffer.1842"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #15
  br label %133

111:                                              ; preds = %83
  %112 = and i1 %93, %94
  br i1 %112, label %113, label %128

113:                                              ; preds = %111
  %114 = bitcast %"class.WTF::VectorBuffer.1842"* %0 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.WTF::VectorBuffer.1842"* %1 to i64*
  store atomic i64 %115, i64* %116 monotonic, align 8
  %117 = ptrtoint i8* %13 to i64
  store atomic i64 %117, i64* %114 monotonic, align 8
  %118 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 2
  %119 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 2
  %120 = load i32, i32* %118, align 4
  %121 = load i32, i32* %119, align 4
  store i32 %121, i32* %118, align 4
  store i32 %120, i32* %119, align 4
  %122 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %133, label %124

124:                                              ; preds = %113
  %125 = bitcast %"class.WTF::VectorBuffer.1842"* %1 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #15
  br label %133

128:                                              ; preds = %111
  %129 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %0, i64 0, i32 0, i32 2
  %130 = getelementptr inbounds %"class.WTF::VectorBuffer.1842", %"class.WTF::VectorBuffer.1842"* %1, i64 0, i32 0, i32 2
  %131 = load i32, i32* %129, align 4
  %132 = load i32, i32* %130, align 4
  store i32 %132, i32* %129, align 4
  store i32 %131, i32* %130, align 4
  br label %133

133:                                              ; preds = %124, %113, %107, %96, %128
  %134 = icmp ne %"class.blink::CSSPropertyValue"* %73, null
  %135 = icmp ult i32 %72, 256
  %136 = icmp eq i32 %71, %70
  %137 = icmp eq i32 %85, %84
  br label %138

138:                                              ; preds = %133, %259
  %139 = phi i32 [ 0, %133 ], [ %170, %259 ]
  %140 = icmp ult i32 %139, %72
  %141 = and i1 %134, %140
  %142 = and i1 %135, %141
  %143 = select i1 %142, i32 %72, i32 256
  br i1 %136, label %153, label %144

144:                                              ; preds = %138
  %145 = icmp ult i32 %139, %71
  %146 = icmp ult i32 %71, %143
  %147 = and i1 %145, %146
  %148 = select i1 %147, i32 %71, i32 %143
  %149 = icmp ult i32 %139, %70
  br i1 %149, label %150, label %153

150:                                              ; preds = %144
  %151 = icmp ult i32 %70, %148
  %152 = select i1 %151, i32 %70, i32 %148
  br label %153

153:                                              ; preds = %138, %150, %144
  %154 = phi i32 [ %152, %150 ], [ %148, %144 ], [ %143, %138 ]
  %155 = icmp ult i32 %139, %86
  %156 = and i1 %94, %155
  %157 = icmp ult i32 %86, %154
  %158 = and i1 %156, %157
  %159 = select i1 %158, i32 %86, i32 %154
  br i1 %137, label %169, label %160

160:                                              ; preds = %153
  %161 = icmp ult i32 %139, %85
  %162 = icmp ult i32 %85, %159
  %163 = and i1 %161, %162
  %164 = select i1 %163, i32 %85, i32 %159
  %165 = icmp ult i32 %139, %84
  br i1 %165, label %166, label %169

166:                                              ; preds = %160
  %167 = icmp ult i32 %84, %164
  %168 = select i1 %167, i32 %84, i32 %164
  br label %169

169:                                              ; preds = %153, %166, %160
  %170 = phi i32 [ %168, %166 ], [ %164, %160 ], [ %159, %153 ]
  br i1 %141, label %171, label %176

171:                                              ; preds = %169
  %172 = icmp ult i32 %139, %71
  %173 = or i1 %136, %172
  %174 = icmp uge i32 %139, %70
  %175 = or i1 %174, %173
  br label %176

176:                                              ; preds = %171, %169
  %177 = phi i1 [ false, %169 ], [ %175, %171 ]
  br i1 %156, label %178, label %222

178:                                              ; preds = %176
  %179 = icmp ult i32 %139, %85
  %180 = or i1 %137, %179
  %181 = xor i1 %180, true
  %182 = icmp ult i32 %139, %84
  %183 = and i1 %182, %181
  %184 = xor i1 %177, true
  %185 = or i1 %183, %184
  %186 = xor i1 %182, true
  %187 = or i1 %180, %186
  br i1 %185, label %222, label %188

188:                                              ; preds = %178
  %189 = zext i32 %139 to i64
  %190 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 %189
  %191 = zext i32 %170 to i64
  %192 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 %191
  %193 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %87, i64 %189
  %194 = icmp ult i32 %139, %170
  br i1 %194, label %195, label %217

195:                                              ; preds = %188, %195
  %196 = phi %"class.blink::CSSPropertyValue"* [ %214, %195 ], [ %190, %188 ]
  %197 = phi %"class.blink::CSSPropertyValue"* [ %215, %195 ], [ %193, %188 ]
  %198 = bitcast %"class.blink::CSSPropertyValue"* %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %197, i64 0, i32 0, i32 1
  %201 = bitcast i16* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %197, i64 0, i32 1
  %204 = bitcast %"class.blink::Member.1074"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.blink::CSSPropertyValue"* %196 to i64*
  %207 = load i64, i64* %206, align 8
  store atomic i64 %207, i64* %198 monotonic, align 8
  %208 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %196, i64 0, i32 0, i32 1
  %209 = bitcast i16* %208 to i64*
  %210 = load i64, i64* %209, align 8
  store atomic i64 %210, i64* %201 monotonic, align 8
  %211 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %196, i64 0, i32 1
  %212 = bitcast %"class.blink::Member.1074"* %211 to i64*
  %213 = load i64, i64* %212, align 8
  store atomic i64 %213, i64* %204 monotonic, align 8
  store atomic i64 %199, i64* %206 monotonic, align 8
  store atomic i64 %202, i64* %209 monotonic, align 8
  store atomic i64 %205, i64* %212 monotonic, align 8
  %214 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %196, i64 1
  %215 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %197, i64 1
  %216 = icmp ult %"class.blink::CSSPropertyValue"* %214, %192
  br i1 %216, label %195, label %217

217:                                              ; preds = %195, %188
  %218 = ptrtoint %"class.blink::CSSPropertyValue"* %192 to i64
  %219 = ptrtoint %"class.blink::CSSPropertyValue"* %190 to i64
  %220 = sub i64 %218, %219
  %221 = sdiv exact i64 %220, 24
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* %190, i64 %221) #15
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* %193, i64 %221) #15
  br label %259

222:                                              ; preds = %178, %176
  %223 = phi i1 [ false, %176 ], [ %187, %178 ]
  br i1 %177, label %224, label %241

224:                                              ; preds = %222
  %225 = zext i32 %139 to i64
  %226 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 %225
  %227 = zext i32 %170 to i64
  %228 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 %227
  %229 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %74, i64 %225
  %230 = icmp ne %"class.blink::CSSPropertyValue"* %229, null
  %231 = icmp ne %"class.blink::CSSPropertyValue"* %226, null
  %232 = and i1 %231, %230
  %233 = bitcast %"class.blink::CSSPropertyValue"* %226 to i8*
  %234 = ptrtoint %"class.blink::CSSPropertyValue"* %228 to i64
  %235 = ptrtoint %"class.blink::CSSPropertyValue"* %226 to i64
  %236 = sub i64 %234, %235
  br i1 %232, label %237, label %240, !prof !4

237:                                              ; preds = %224
  %238 = bitcast %"class.blink::CSSPropertyValue"* %229 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %238, i8* nonnull %233, i64 %236) #15
  %239 = sdiv exact i64 %236, 24
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %229, i64 %239) #15
  br label %240

240:                                              ; preds = %224, %237
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %233, i64 %236) #15
  br label %259

241:                                              ; preds = %222
  br i1 %223, label %242, label %259

242:                                              ; preds = %241
  %243 = zext i32 %139 to i64
  %244 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %87, i64 %243
  %245 = zext i32 %170 to i64
  %246 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %87, i64 %245
  %247 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %88, i64 %243
  %248 = icmp ne %"class.blink::CSSPropertyValue"* %247, null
  %249 = icmp ne %"class.blink::CSSPropertyValue"* %244, null
  %250 = and i1 %249, %248
  %251 = bitcast %"class.blink::CSSPropertyValue"* %244 to i8*
  %252 = ptrtoint %"class.blink::CSSPropertyValue"* %246 to i64
  %253 = ptrtoint %"class.blink::CSSPropertyValue"* %244 to i64
  %254 = sub i64 %252, %253
  br i1 %250, label %255, label %258, !prof !4

255:                                              ; preds = %242
  %256 = bitcast %"class.blink::CSSPropertyValue"* %247 to i8*
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %256, i8* nonnull %251, i64 %254) #15
  %257 = sdiv exact i64 %254, 24
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %247, i64 %257) #15
  br label %258

258:                                              ; preds = %242, %255
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %251, i64 %254) #15
  br label %259

259:                                              ; preds = %240, %241, %258, %217
  %260 = icmp ult i32 %170, 256
  br i1 %260, label %138, label %261

261:                                              ; preds = %259
  %262 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %263 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %262, i64 0, i32 1
  %264 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %263) #15
  %265 = icmp eq i8* %264, null
  br i1 %265, label %266, label %268, !prof !2

266:                                              ; preds = %261
  %267 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %263, i8* %267) #15
  br label %268

268:                                              ; preds = %261, %266
  %269 = phi i8* [ %267, %266 ], [ %264, %261 ]
  %270 = bitcast i8* %269 to %"class.blink::ThreadState"**
  %271 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %271, i64 0, i32 14
  %273 = load i64, i64* %272, align 8
  %274 = add i64 %273, -1
  store i64 %274, i64* %272, align 8
  br label %275

275:                                              ; preds = %44, %41, %268
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %0 to i8*
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %52, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %44, %25
  %28 = phi i8* [ %3, %25 ], [ %45, %44 ]
  %29 = phi i64 [ %1, %25 ], [ %30, %44 ]
  %30 = add i64 %29, -1
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %26, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 16
  %33 = bitcast i8* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to %"class.blink::CSSValue"*
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %38, i64 0, i32 0
  %40 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %37, i8* %39, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %44

44:                                               ; preds = %27, %36
  %45 = getelementptr inbounds i8, i8* %28, i64 24
  %46 = icmp eq i64 %30, 0
  br i1 %46, label %47, label %27

47:                                               ; preds = %44
  %48 = load i64, i64* %21, align 8
  br label %49

49:                                               ; preds = %47, %20
  %50 = phi i64 [ %48, %47 ], [ %23, %20 ]
  %51 = add i64 %50, -1
  store i64 %51, i64* %21, align 8
  br label %52

52:                                               ; preds = %2, %13, %49
  ret void
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1841"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1841", %"class.WTF::Vector.1841"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.1841", %"class.WTF::Vector.1841"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink13CSSBitsetBaseILm624EE5beginEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink13CSSBitsetBaseILm624EE5beginEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink13CSSBitsetBaseILm624EE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink13CSSBitsetBaseILm624EE5beginEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!14 = distinct !{!14, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!15 = distinct !{!15, !16, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!19 = distinct !{!19, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!20 = distinct !{!20, !21, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!24 = distinct !{!24, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!25 = distinct !{!25, !26, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!29 = distinct !{!29, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!30 = distinct !{!30, !31, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink12_GLOBAL__N_116ToPropertyHandleERKNS_11CSSPropertyENS_15CascadePriorityE: argument 0"}
!34 = distinct !{!34, !"_ZN5blink12_GLOBAL__N_116ToPropertyHandleERKNS_11CSSPropertyENS_15CascadePriorityE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5blink14CSSParserToken5ValueEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink14CSSParserToken5ValueEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv: argument 0"}
!55 = distinct !{!55, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv: argument 0"}
!58 = distinct !{!58, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink15CSSPropertyNameEEENS1_INS2_6MemberIKNS2_8CSSValueEEEEEE10EmptyValueEv"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!61 = distinct !{!61, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!62 = distinct !{!62, !63, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!63 = distinct !{!63, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
